
 Q: What is the {periodical literature} for {mouthpiece} of {Delta Air Lines}
 SPARQL:  select distinct ?obj where { wd:Q188920 wdt:P2813 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Delta Air Lines', 'p': 'mouthpiece', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: What is {prequel of} of {phase of matter} of {Galinstan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q675176 wdt:P515 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prequel of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Galinstan', 'p': 'phase of matter', 'o': '$y0'}}

 Q: Which is the operating income for Qantas?
 SPARQL: select distinct ?answer where { wd:Q32491 wdt:P3362 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Qantas', 'p': 'operating income', 'o': '?x0'}

 Q: which cola starts with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134041 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cola'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Is the right ascension of malin 1 less than 15.1398?
 SPARQL: ASK WHERE { wd:Q4180017 wdt:P6257 ?obj filter(?obj < 15.1398) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Malin 1', 'p': 'right ascension', 'o': '?x0', '?x0': '15.1398'}

 Q: What is the {discography} for {discography} of {Jerry Lee Lewis}
 SPARQL:  select distinct ?obj where { wd:Q202729 wdt:P358 ?obj . ?obj wdt:P31 wd:Q273057 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jerry Lee Lewis', 'p': 'discography', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discography'}}

 Q: What is {prizewinner} of {sequel is} of {1885 Wimbledon Championships – Gentlemen's Singles} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1356316 wdt:P156 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "1885 Wimbledon Championships – Gentlemen's Singles", 'p': 'sequel is', 'o': '$y0'}}

 Q: Is it true that the carbon footprint of the iPhone X Max is 106?
 SPARQL: ASK WHERE { wd:Q56599233 wdt:P5991 ?obj filter(?obj = 106) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'iPhone Xs Max', 'p': 'carbon footprint', 'o': '?x0', '?x0': '106'}

 Q: Give me {female beauty pageant} that {operating area} {all countries} and which contains the word {model} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58863414 . ?sbj wdt:P2541 wd:Q62900839 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'model')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'female beauty pageant', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operating area', 'o': 'all countries'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'model'}}

 Q: Did {Lindsey_Vonn} {participant of} {FIS Alpine World Ski Championships 1999} and {FIS Alpine World Ski Championships 2019} ?
 SPARQL: ASK WHERE { wd:Q10068 wdt:P1344 wd:Q1428251 . wd:Q10068 wdt:P1344 wd:Q15263420 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lindsey Vonn', 'p': 'participant of', 'o': '?x0', '?x0': 'FIS Alpine World Ski Championships 1999'}, {'h': 'IS', 'v': '?x1', 's': 'Lindsey Vonn', 'p': 'participant of', 'o': '?x1', '?x1': 'FIS Alpine World Ski Championships 2019'}]

 Q: What is {position held} of {Angela Merkel} that is {start time} is {1994-11-10} ?
 SPARQL: SELECT ?obj WHERE { wd:Q567 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Angela Merkel', 'p': 'position held', 'o': '?x0', 't': '1994'}

 Q: What is {population} of {Spokane} that is {point in time} is {2007-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q187805 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Spokane', 'p': 'population', 'o': '?x0', 't': '2007'}

 Q: What is the {essential medicine} for {medical condition treated} of {leprosy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2175 wd:Q36956 . ?sbj wdt:P31 wd:Q35456 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical condition treated', 'o': 'leprosy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine'}}

 Q: Which is HanCinema person ID for Zhang Ziyi?
 SPARQL: select distinct ?answer where { wd:Q180852 wdt:P3045 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zhang Ziyi', 'p': 'HanCinema person ID', 'o': '?x0'}

 Q: What is the boiling point of pressure copper as 4703.0?
 SPARQL: SELECT ?value WHERE { wd:Q753 p:P2102 ?s . ?s ps:P2102 ?x filter(contains(?x,'4703.0')) . ?s pq:P2077 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'copper', 'p': 'boiling point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'boiling point', 'o': '4703.0'}}}

 Q: What is {played by} of {succeded by} of {Sleepwalking} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7539946 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sleepwalking', 'p': 'succeded by', 'o': '$y0'}}

 Q: What did Clifton Chenier get nominated for in 1983-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q1101377 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1983')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Clifton Chenier', 'p': 'nominated for', 'o': '?x0', 't': '1983'}

 Q: What is <wears> of <Ambrose Burnside> ?
 SPARQL: select distinct ?answer where { wd:Q355444 wdt:P3828 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ambrose Burnside', 'p': 'wears', 'o': '?x0'}

 Q: Which Class IB flammable liquid has the least lower flammable limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2202 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'lower flammable limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid'}}

 Q: What is the material used and approved by Mojito?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q487338 wdt:P186 ?ans_1 . wd:Q487338 wdt:P790 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Mojito', 'p': 'material used', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Mojito', 'p': 'approved by', 'o': '?x1'}]

 Q: What is the {history of a country or state} for {history of topic} of {Korea}
 SPARQL:  select distinct ?obj where { wd:Q18097 wdt:P2184 ?obj . ?obj wdt:P31 wd:Q17544377 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Korea', 'p': 'history of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'history of a country or state'}}

 Q: "Which is {landscape of} of {Virgin of the rocks}, which has {birth city} is {Tzippori} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q269342 wdt:P180 ?answer . ?answer wdt:P19 wd:Q1132798}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Virgin of the rocks', 'p': 'landscape of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'birth city', 'o': 'Tzippori'}}

 Q: Is Kevin Costner owner of Fielders Stadium?
 SPARQL: ASK WHERE { wd:Q11930 wdt:P1830 wd:Q5447154 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kevin Costner', 'p': 'owner of', 'o': '?x0', '?x0': 'Fielders Stadium'}]

 Q: Which is the YouTube channel ID for Miley Cyrus?
 SPARQL: select distinct ?answer where { wd:Q4235 wdt:P2397 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Miley Cyrus', 'p': 'YouTube channel ID', 'o': '?x0'}

 Q: What is a skill that starts with the letter s.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q205961 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'skill'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: How many {from fictional universe} are for {Captain America} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q190679 wdt:P1080 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Captain America', 'p': 'universe', 'o': '?x0'}

 Q: What award did Danila Kozlovsky receive in 2017?
 SPARQL: SELECT ?obj WHERE { wd:Q3015088 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Danila Kozlovsky', 'p': 'award', 'o': '?x0', 't': '2017'}

 Q: Who is the student that coined the Euler-Lagrange equation?
 SPARQL: SELECT ?answer WHERE { wd:Q875744 wdt:P61 ?X . ?X wdt:P802 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'student', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Euler-Lagrange equation', 'p': 'coined', 'o': '$y0'}}

 Q: What is the {website} for {subsidiary} of {Twitch}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P355 wd:Q4555537 . ?sbj wdt:P31 wd:Q35127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'Twitch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'website'}}

 Q: Is the minimal lethal dose of the benzene equal to 170000?
 SPARQL: ASK WHERE { wd:Q2270 wdt:P2300 ?obj filter(?obj = 170000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'benzene', 'p': 'minimal lethal dose', 'o': '?x0', '?x0': '170000'}

 Q: Who is the person that was a student of Ivan Pavlov?
 SPARQL:  select distinct ?obj where { wd:Q42985 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ivan Pavlov', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: is the clock speed of the Watara Supervision smaller than 3.2?
 SPARQL: ASK WHERE { wd:Q732683 wdt:P2149 ?obj filter(?obj < 3.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Watara Supervision', 'p': 'clock speed', 'o': '?x0', '?x0': '3.2'}

 Q: What is the {sovereign state} for {diplomatic relation} of {African Union}
 SPARQL:  select distinct ?obj where { wd:Q7159 wdt:P530 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'African Union', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who works for the accused Mariposa Folk Festival 1974?
 SPARQL: SELECT ?answer WHERE { wd:Q54554872 wdt:P710 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'works for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mariposa Folk Festival 1974', 'p': 'accused', 'o': '$y0'}}

 Q: What is the {neighborhood} for {shares border with} of {Los Angeles}
 SPARQL:  select distinct ?obj where { wd:Q65 wdt:P47 ?obj . ?obj wdt:P31 wd:Q123705 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Los Angeles', 'p': 'shares border with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'neighborhood'}}

 Q: What sister city was born in of Zakhar Oskotsky?
 SPARQL: SELECT ?answer WHERE { wd:Q4338004 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zakhar Oskotsky', 'p': 'born in', 'o': '$y0'}}

 Q: Tell me the name of a fantastique genre that starts with the letter s.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20076756 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fantastique genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {medal} for {award received} of {Angela Lansbury}
 SPARQL:  select distinct ?obj where { wd:Q206856 wdt:P166 ?obj . ?obj wdt:P31 wd:Q131647 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Angela Lansbury', 'p': 'award received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medal'}}

 Q: What is the musical score by Missa Solemnis that has mother Maria Magdalena van Beethoven?
 SPARQL: SELECT ?answer WHERE { wd:Q723790 wdt:P86 ?answer . ?answer wdt:P25 wd:Q14507972}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Missa Solemnis', 'p': 'musical score by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mother', 'o': 'Maria Magdalena van Beethoven'}}

 Q: what is the {point in time} for {Robert De Niro} has {residence} as {Marbletown} ?
 SPARQL: SELECT ?value WHERE { wd:Q36949 p:P551 ?s . ?s ps:P551 wd:Q3708911 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Robert De Niro', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Marbletown'}, 't': '?x0'}

 Q: Tell me organization whose name has the word  zollkriminalamt  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43229 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zollkriminalamt')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zollkriminalamt'}}

 Q: Which member state of the International Centre for Settlement of Investment Disputes has the maximum inflation rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7275 . ?ent wdt:P1279 ?obj . ?ent wdt:P463 wd:Q899770 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'inflation rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Centre for Settlement of Investment Disputes'}}}

 Q: Was Brittany Murphy a citizen of the USA?
 SPARQL: ASK WHERE { wd:Q168847 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Brittany Murphy', 'p': 'citizen of', 'o': '?x0', '?x0': 'USA'}]

 Q: Who is the partner and the spouse of Hank Azaria?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q202056 wdt:P451 ?ans_1 . wd:Q202056 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hank Azaria', 'p': 'partner', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hank Azaria', 'p': 'spouse', 'o': '?x1'}]

 Q: Does St. Peters Junior School maximum age equal to 11?
 SPARQL: ASK WHERE { wd:Q60298462 wdt:P4135 ?obj filter(?obj = 11) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "St Peter's Junior School", 'p': 'maximum age', 'o': '?x0', '?x0': '11'}

 Q: Which country has highest individual tax rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6256 . ?ent wdt:P2834 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'individual tax rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: what is the {point in time} for {James Thomas Farrell} has {award received} as {St. Louis Literary Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q1371154 p:P166 ?s . ?s ps:P166 wd:Q7589655 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'James Thomas Farrell', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'St. Louis Literary Award'}, 't': '?x0'}

 Q: what is the {end time} for {Pablo Picasso} has {partner} as {Fernande Olivier} ?
 SPARQL: SELECT ?value WHERE { wd:Q5593 p:P451 ?s . ?s ps:P451 wd:Q453775 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pablo Picasso', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Fernande Olivier'}}}

 Q: What are the coordinates for the geographic center of Michigan, as determined by the center of gravity of the surface?
 SPARQL: SELECT ?obj WHERE { wd:Q1166 p:P5140 ?s . ?s ps:P5140 ?obj . ?s pq:P459 wd:Q53329492 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'geographic center', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michigan', 'p': 'geographic center', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determined by', 'o': 'center of gravity of the surface'}}}

 Q: Is the life expectancy of Indonesia 55.3528?
 SPARQL: ASK WHERE { wd:Q252 wdt:P2250 ?obj filter(?obj = 55.3528) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Indonesia', 'p': 'life expectancy', 'o': '?x0', '?x0': '55.3528'}

 Q: what is the {start time} for {Emmerson Mnangagwa} has {educated at} as {University of Zambia} ?
 SPARQL: SELECT ?value WHERE { wd:Q510523 p:P69 ?s . ?s ps:P69 wd:Q2096836 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmerson Mnangagwa', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Zambia'}}}

 Q: what is hypothetical protein ecia139-4120 habitat of found in species?
 SPARQL: SELECT ?answer WHERE { wd:Q22226273 wdt:P703 ?X . ?X wdt:P2974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'habitat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hypothetical protein', 'p': 'found in species', 'o': '$y0'}}

 Q: What sovereign state replaced the Kingdom of Great Britain?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q161885 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced', 'o': 'Great Britain', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Of the century breaks of the Colm Gilcreest equal less than 9.6?
 SPARQL: ASK WHERE { wd:Q671965 wdt:P4912 ?obj filter(?obj < 9.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Colm Gilcreest', 'p': 'century breaks', 'o': '?x0', '?x0': '9.6'}

 Q: What is the {historical country} for {country} of {Golden Horde}
 SPARQL:  select distinct ?obj where { wd:Q79965 wdt:P17 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Golden Horde', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: Located in the Central District, what is the county seat whose twin cities include Feodosiya?
 SPARQL: SELECT ?answer WHERE { wd:Q188785 wdt:P36 ?answer . ?answer wdt:P190 wd:Q158491}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Central District', 'p': 'county seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin cities', 'o': 'Feodosiya'}}

 Q: When did Nicaragua count a population of 3.87732e+06 inhabitants?
 SPARQL: SELECT ?value WHERE { wd:Q811 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'3.87732e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nicaragua', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '3.87732e+06'}, 't': '?x0'}

 Q: What is <statement is subject of> of <emigration> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P805 wd:Q187668}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'statement is subject of', 'o': 'emigration'}

 Q: Which is the meta-organization that is regulated by the football association?
 SPARQL:  select distinct ?obj where { wd:Q2736 wdt:P3719 ?obj . ?obj wdt:P31 wd:Q37178026 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'football', 'p': 'regulated by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'meta-organization'}}

 Q: When was the spouse divorced Nero in 9-6-68
 SPARQL: SELECT ?obj WHERE { wd:Q1413 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(?x,'68-6-9')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'spouse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nero', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'divorced', 'o': '68-6-9'}}}

 Q: What is the {written work} for {has edition} of {Septuagint}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P747 wd:Q29334 . ?sbj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'Septuagint', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What is {award} of {Art Spiegelman}, that has {champ} is {Francisco X. Alarcón} ?
 SPARQL: SELECT ?answer WHERE { wd:Q325945 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q5484051}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Art Spiegelman', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'champion', 'o': 'Francisco X. Alarcón'}}

 Q: Are there more than 0 survivors of the Charkhi Dadri mid-air collision
 SPARQL: ASK WHERE { wd:Q118373 wdt:P1561 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Charkhi Dadri mid-air collision', 'p': 'survivors', 'o': '?x0', '?x0': '0'}

 Q: what is the {point in time} for {Secretariat} has {award received} as {Triple Crown Trophy} ?
 SPARQL: SELECT ?value WHERE { wd:Q1151926 p:P166 ?s . ?s ps:P166 wd:Q7843370 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Secretariat', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Triple Crown Trophy'}, 't': '?x0'}

 Q: Which borders of borders of Riverside have a start date of 1984-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q49243 wdt:P47 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1984'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Riverside', 'p': 'border', 'o': '?x0', 't': '1984'}

 Q: Which is the facility of the defensive wall?
 SPARQL: select distinct ?answer where { ?answer wdt:P912 wd:Q57346}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'facility', 'o': 'defensive wall'}

 Q: What is  in the IHO Hydrographic Dictionary (S-32) Number of lighthouse ?
 SPARQL: select distinct ?answer where { wd:Q39715 wdt:P2480 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'lighthouse', 'p': 'IHO Hydrographic Dictionary (S-32) Number', 'o': '?x0'}

 Q: Which is the fictional analog of Hippocampus?
 SPARQL: select distinct ?answer where { ?answer wdt:P1074 wd:Q74363}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional analog of', 'o': 'Hippocampus'}

 Q: Give me {cause of death} that {medical examinations} {computed tomography} and which that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1931388 . ?sbj wdt:P923 wd:Q32566 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cause of death', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'medical examinations', 'o': 'CT scan'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is established by Archbishop of Canterbury, who is a male?
 SPARQL: SELECT ?answer WHERE { wd:Q29282 wdt:P112 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Archbishop of Canterbury', 'p': 'established by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'male'}}

 Q: what is the {Commons category} for {Fernandel} has {place of burial} as {Passy Cemetery} ?
 SPARQL: SELECT ?value WHERE { wd:Q129092 p:P119 ?s . ?s ps:P119 wd:Q1092107 . ?s pq:P373 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Commons category', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fernandel', 'p': 'buried at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'buried at', 'o': 'Passy Cemetery'}}}

 Q: What is {namesake} of {cayenne pepper}, that has {construction date} is {1664-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6598 wdt:P138 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1664'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cayenne pepper', 'p': 'namesake', 'o': '?x0', 't': '1664'}

 Q: Is the throughput of the Vest-vassdraget equal to 2697.672?
 SPARQL: ASK WHERE { wd:Q58370919 wdt:P2957 ?obj filter(?obj = 2697.672) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Vest-vassdraget', 'p': 'throughput', 'o': '?x0', '?x0': '2697.672'}

 Q: What method did the census use to determine the population of Taguig?
 SPARQL: SELECT ?obj WHERE { wd:Q1643 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taguig', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'method', 'o': 'census'}}}

 Q: What award did Olga Tokarczuk receive in 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q254032 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Olga Tokarczuk', 'p': 'award', 'o': '?x0', 't': '2015'}

 Q: What is <present in work> of <Porky Pig> ?
 SPARQL: select distinct ?answer where { wd:Q937186 wdt:P1441 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Porky Pig', 'p': 'present in work', 'o': '?x0'}

 Q: When did publisher of Pac-Man and place of publication?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q173626 p:P123 ?s . ?s ps:P123 ?obj . ?s pq:P291 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publisher', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0'}}]

 Q: Was Aleister Crowley educated at Trinity College and Eton College?
 SPARQL: ASK WHERE { wd:Q172684 wdt:P69 wd:Q332342 . wd:Q172684 wdt:P69 wd:Q192088 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Aleister Crowley', 'p': 'educated at', 'o': '?x0', '?x0': 'Trinity College'}, {'h': 'IS', 'v': '?x1', 's': 'Aleister Crowley', 'p': 'educated at', 'o': '?x1', '?x1': 'Eton College'}]

 Q: What is {location of narrative} of {Infinite Jest}, that has {next to} is {Quincy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1077445 wdt:P840 ?answer . ?answer wdt:P47 wd:Q49143}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Infinite Jest', 'p': 'location of narrative', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next to', 'o': 'Quincy'}}

 Q: what is the {conferred by} for {Eric Hobsbawm} has {award received} as {doctor honoris causa} ?
 SPARQL: SELECT ?value WHERE { wd:Q34933 p:P166 ?s . ?s ps:P166 wd:Q11415564 . ?s pq:P1027 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conferred by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Hobsbawm', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'honorary doctor'}}}

 Q: What was the last team Allan Border belonged to in the year 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q1392194 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Allan Border', 'p': 'team', 'o': '?x0', 't': '1980'}

 Q: Give me {film character} that {from fictional universe} {Marvel Universe} and which that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15773347 . ?sbj wdt:P1080 wd:Q931597 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'universe', 'o': 'Marvel Universe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {fictional universe} for {fictional universe described in} of {The Matrix}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1445 wd:Q83495 . ?sbj wdt:P31 wd:Q559618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional universe described in', 'o': 'The Matrix', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional universe'}}

 Q: What is {award received} of {Hans Krebs} where {point in time} is {1966-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q57191 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1966')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hans Krebs', 'p': 'award received', 'o': '?x0', 't': '1966'}

 Q: Which record label signed Janet Jackson?
 SPARQL:  select distinct ?obj where { wd:Q131324 wdt:P264 ?obj . ?obj wdt:P31 wd:Q18127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Janet Jackson', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'record label'}}

 Q: What is Tanzania's total reserves?
 SPARQL: select distinct ?answer where { wd:Q924 wdt:P2134 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tanzania', 'p': 'total reserves', 'o': '?x0'}

 Q: Does the slope rating of the Merion Golf Club equal 149
 SPARQL: ASK WHERE { wd:Q3962734 wdt:P3840 ?obj filter(?obj = 149) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Merion Golf Club', 'p': 'slope rating', 'o': '?x0', '?x0': '149'}

 Q: What is the density of hydrogen peroxide at a temperature of 20.0?
 SPARQL: SELECT ?obj WHERE { wd:Q171877 p:P2054 ?s . ?s ps:P2054 ?obj . ?s pq:P2076 ?x filter(contains(?x,'20.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'density', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hydrogen peroxide', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'temperature', 'o': '20.0'}}}

 Q: What is {architecture firm} of {home field} of {New York Centaurs} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16845909 wdt:P115 ?X . ?X wdt:P84 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'architect', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'New York Centaurs', 'p': 'home field', 'o': '$y0'}}

 Q: Which { meansseason starts} in {February} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4794 wd:Q109}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'season starts', 'o': 'February'}

 Q: Who is {champ} of {prize awarded} {Lily Tomlin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q229271 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lily Tomlin', 'p': 'award', 'o': '$y0'}}

 Q: What is {cartridge} of {Minigun}, that has {participated in conflict} is {Vietnam War} ?
 SPARQL: SELECT ?answer WHERE { wd:Q864060 wdt:P739 ?answer . ?answer wdt:P607 wd:Q8740}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Minigun', 'p': 'ammunition', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'war', 'o': 'Vietnam War'}}

 Q: Tell me every horse breed whose name starts with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1160573 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'horse breed'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: The University of Florida is a member of which coalition?
 SPARQL:  select distinct ?obj where { wd:Q501758 wdt:P463 ?obj . ?obj wdt:P31 wd:Q124964 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Florida', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'coalition'}}

 Q: What is {brother-in-law} of {writer} of {Quran} ?
 SPARQL: SELECT ?answer WHERE { wd:Q428 wdt:P50 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'brother-in-law', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Quran', 'p': 'writer', 'o': '$y0'}}

 Q: What is <New Zealand Gazetteer place ID> of <Auckland> ?
 SPARQL: select distinct ?answer where { wd:Q37100 wdt:P5104 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Auckland', 'p': 'New Zealand Gazetteer place ID', 'o': '?x0'}

 Q: What is {represents} of {Grande Odalisque}, that has {DRTL} is {backwards} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1978815 wdt:P180 ?answer . ?answer wdt:P654 wd:Q16938807}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Grande Odalisque', 'p': 'represents', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'DRTL', 'o': 'backwards'}}

 Q: Give me {empire} that {coat of arms} {royal coat of arms of the United Kingdom} and which contains the word {british} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q48349 . ?sbj wdt:P237 wd:Q165762 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'british')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'royal coat of arms of the United Kingdom'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'british'}}

 Q: What is the instance of Antonio da Correggio whose date of birth is 1489-8-1?
 SPARQL: SELECT ?value WHERE { wd:Q8457 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1489')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio da Correggio', 'p': 'date of birth', 'o': '$y0'}}

 Q: What is {teacher of} of {supervisor} of {Shigeno Yasutsugu} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6533159 wdt:P1066 ?X . ?X wdt:P802 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'teacher of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shigeno Yasutsugu', 'p': 'teacher', 'o': '$y0'}}

 Q: what is the {point in time} for {Kylie Minogue} has {award received} as {Gold Logie Award for Most Popular Personality on Australian Television} ?
 SPARQL: SELECT ?value WHERE { wd:Q11998 p:P166 ?s . ?s ps:P166 wd:Q16191288 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kylie Minogue', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Gold Logie Award for Most Popular Personality on Australian Television'}, 't': '?x0'}

 Q: What is the {business} for {employer} of {Alexander McQueen}
 SPARQL:  select distinct ?obj where { wd:Q207939 wdt:P108 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander McQueen', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Tell me the Greek deity of sibling of Zeus and that contains the word poseidon in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22989102 . ?sbj wdt:P3373 wd:Q34201 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'poseidon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greek deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Zeus'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'poseidon'}}

 Q: What is {digitiser} of {series} of {Ultima III: Exodus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2240236 wdt:P179 ?X . ?X wdt:P479 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'digitiser', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ultima III: Exodus', 'p': 'series', 'o': '$y0'}}

 Q: What is the {human} for {performer} of {Deadpool}
 SPARQL:  select distinct ?obj where { wd:Q1631090 wdt:P175 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Deadpool', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {musical duo} for {contributed to published work} of {Sasha Grey}
 SPARQL:  select distinct ?obj where { wd:Q2709 wdt:P3919 ?obj . ?obj wdt:P31 wd:Q9212979 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sasha Grey', 'p': 'contributed to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical duo'}}

 Q: What award did John de Mol receive in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q470847 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John de Mol', 'p': 'award', 'o': '?x0', 't': '2011'}

 Q: Is the total fertility rate of Algeria greater than 3.4284?
 SPARQL: ASK WHERE { wd:Q262 wdt:P4841 ?obj filter(?obj > 3.4284) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Algeria', 'p': 'total fertility rate', 'o': '?x0', '?x0': '3.4284'}

 Q: What is {pressure} and {temperature} of {{water} has {phase point} as {triple point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q106410 . ?s pq:P2077 ?value1 . ?s pq:P2076 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'temperature', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}]

 Q: Tell me physical phenomenon whose name has the word surface in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1293220 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'surface')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical phenomenon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'surface'}}

 Q: What is {residence} of {Vladimir Putin} and {area}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7747 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P2046 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'residence', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'residence', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'residence', 'o': '$y0'}}]

 Q: Which is the municipality of Belgium that has the headquarters location of European Union?
 SPARQL:  select distinct ?obj where { wd:Q458 wdt:P159 ?obj . ?obj wdt:P31 wd:Q493522 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Union', 'p': 'headquarters location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Belgium'}}

 Q: Which is made from the goat meat having a common name as Domestic Goat?
 SPARQL: SELECT ?answer WHERE { wd:Q449506 wdt:P1582 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Domestic Goat'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'goat meat', 'p': 'made from', 'o': '?x0'}

 Q: What is <located on terrain feature> of <Multnomah Falls> ?
 SPARQL: select distinct ?answer where { wd:Q37319 wdt:P706 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Multnomah Falls', 'p': 'location', 'o': '?x0'}

 Q: What is the {battle} for {commanded by} of {Stonewall Jackson}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4791 wd:Q216124 . ?sbj wdt:P31 wd:Q178561 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commanded by', 'o': 'Stonewall Jackson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'battle'}}

 Q: What is {temperature} and {phase of matter} of {{water} has {phase point} as {critical point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q111059 . ?s pq:P2076 ?value1 . ?s pq:P515 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase of matter', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}]

 Q: which is the point time for syria has population as 8.08815e+06?
 SPARQL: SELECT ?value WHERE { wd:Q858 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'8.08815e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'sy', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '8.08815e+06'}, 't': '?x0'}

 Q: Did {Marketing} {facet of} {human communication} and {packaging and labeling} ?
 SPARQL: ASK WHERE { wd:Q39809 wdt:P1269 wd:Q1066689 . wd:Q39809 wdt:P1269 wd:Q207822 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'marketing', 'p': 'facet of', 'o': '?x0', '?x0': 'human communication'}, {'h': 'IS', 'v': '?x1', 's': 'marketing', 'p': 'facet of', 'o': '?x1', '?x1': 'packaging and labeling'}]

 Q: What is the {stage race} with the {MAX(frequency of event)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1318941 . ?ent wdt:P2257 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'frequency of event', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stage race'}}

 Q: What is <Austrian municipality key> of <Klagenfurt> ?
 SPARQL: select distinct ?answer where { wd:Q41753 wdt:P964 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Klagenfurt', 'p': 'Austrian municipality key', 'o': '?x0'}

 Q: Tell me the autonomous region of the People's Republic of China which contains the word xinjiang in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57362 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xinjiang')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': "autonomous region of the People's Republic of China"}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'xinjiang'}}

 Q: What is the Velká pardubická with the lowest race time whose winner is Peter Gehm?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1701273 . ?ent wdt:P2781 ?obj . ?ent wdt:P1346 wd:Q12044712} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'race time', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Velká pardubická', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Peter Gehm'}}}

 Q: Who is the author of the Watchmen and what award did they receive?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q128444 wdt:P166 ?ans_1 . wd:Q128444 wdt:P50 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Watchmen', 'p': 'award', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Watchmen', 'p': 'author', 'o': '?x1'}]

 Q: What is the {human settlement} for {patron saint} of {Joseph}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q128267 . ?sbj wdt:P31 wd:Q486972 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Joseph', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human settlement'}}

 Q: What is the {book} for {language of work or name} of {Esperanto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q143 . ?sbj wdt:P31 wd:Q571 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Esperanto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}}

 Q: What is the general manager of Bernard Hinault?
 SPARQL: select distinct ?answer where { ?answer wdt:P505 wd:Q109255}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'general manager', 'o': 'Bernard Hinault'}

 Q: Name the FSK 12 rated 3D film with the highest cost ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q229390 . ?ent wdt:P2130 ?obj . ?ent wdt:P1981 wd:Q20644796 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'cost', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '3D film', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'FSK film rating', 'o': 'FSK 12'}}}

 Q: How many are interested in Daniel Dennett?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q215263 wdt:P2650 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Daniel Dennett', 'p': 'interested in', 'o': '?x0'}

 Q: In 1996, what significant event happened in the administrative territorial entity of Bristol?
 SPARQL: SELECT ?obj WHERE { wd:Q23154 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bristol', 'p': 'in', 'o': '?x0', 't': '1996'}

 Q: What is {coordinate location} of {Rhine} that is {applies to part} is {river source} ?
 SPARQL: SELECT ?obj WHERE { wd:Q584 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rhine', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river source'}}}

 Q: What is {nominated for} of {Cate Blanchett} that is {for work} is {I'm Not There} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80966 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q816772 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cate Blanchett', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': "I'm Not There"}}}

 Q: Give me {tower} that {depicted by} {Tower of Babel} and which contains the word {babel} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12518 . ?sbj wdt:P1299 wd:Q2899725 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'babel')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tower', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'depicted by', 'o': 'Tower of Babel'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'babel'}}

 Q: What is {elected in} and {end cause} of {{Harold Macmillan} has {position held} as {Member of the 34th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q128985 p:P39 ?s . ?s ps:P39 wd:Q41582587 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 34th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 34th Parliament of the United Kingdom'}}}]

 Q: is the maximum wavelength of sensitivity of the human eye equal to 700?
 SPARQL: ASK WHERE { wd:Q430024 wdt:P3737 ?obj filter(?obj = 700) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'human eye', 'p': 'maximum wavelength of sensitivity', 'o': '?x0', '?x0': '700'}

 Q: what is the {followed by} for {Mo Yan} has {award received} as {Nobel Prize in Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q8998 p:P166 ?s . ?s ps:P166 wd:Q37922 . ?s pq:P156 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mo Yan', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Prize in Literature'}}}

 Q: When did Eiji Toyoda win an award for his work in Order of Prince Henry?
 SPARQL: SELECT ?value WHERE { wd:Q1141740 p:P166 ?s . ?s ps:P166 wd:Q93488 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Eiji Toyoda', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of Prince Henry'}, 't': '?x0'}

 Q: What is {start time} and {end time} of {{Jimmy Wales} has {employer} as {Bomis}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q181 p:P108 ?s . ?s ps:P108 wd:Q935818 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jimmy Wales', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'Bomis'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jimmy Wales', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'Bomis'}}}]

 Q: Which is the author of afterword of Erich Fromm?
 SPARQL: select distinct ?answer where { ?answer wdt:P2680 wd:Q57085}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'author of afterword', 'o': 'Erich Fromm'}

 Q: Who are worked for Michelle Wolf and its source location of group/organisation is located in New York City?
 SPARQL: SELECT ?answer WHERE { wd:Q23883085 wdt:P108 ?answer . ?answer wdt:P740 wd:Q60}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michelle Wolf', 'p': 'worked for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'source location of group/organisation', 'o': 'New York City'}}

 Q: What are the unit of measurement which start with the letter visus
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47574 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'visus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of measurement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'visus'}}

 Q: what was the publication date for iTunes which has software version as 12.7.5?
 SPARQL: SELECT ?value WHERE { wd:Q9589 p:P348 ?s . ?s ps:P348 ?x filter(contains(?x,'12.7.5')) . ?s pq:P577 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'iTunes', 'p': 'version', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'version', 'o': '12.7.5'}}}

 Q: What is the {structured programming language} for {designed by} of {Dennis M. Ritchie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q45575 . ?sbj wdt:P31 wd:Q28920117 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Dennis M. Ritchie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'structured programming language'}}

 Q: what is the {object has role} for {Mickey Mouse} has {contributor(s) to the creative work} as {Ben Sharpsteen} ?
 SPARQL: SELECT ?value WHERE { wd:Q11934 p:P767 ?s . ?s ps:P767 wd:Q2549739 . ?s pq:P3831 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mickey Mouse', 'p': 'contributor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'contributor', 'o': 'Ben Sharpsteen'}}}

 Q: What is the stock exchange for the ticker symbol 0700 in Tencent?
 SPARQL: SELECT ?obj WHERE { wd:Q860580 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x filter(contains(?x,'0700')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stock exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tencent', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ticker symbol', 'o': '0700'}}}

 Q: What are the head of state and the office held by head of state of the Soviet Union?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q15180 wdt:P35 ?ans_1 . wd:Q15180 wdt:P1906 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Soviet Union', 'p': 'head of state', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Soviet Union', 'p': 'office held by head of state', 'o': '?x1'}]

 Q: What is the name of award recieved for Dawn Fraser has participant of 1960 Summer Olympics ?
 SPARQL: SELECT ?value WHERE { wd:Q229040 p:P1344 ?s . ?s ps:P1344 wd:Q8415 . ?s pq:P166 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dawn Fraser', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'participant of', 'o': '1960 Summer Olympics'}}}

 Q: What is the {international organization} for {parent organization} of {International Court of Justice}
 SPARQL:  select distinct ?obj where { wd:Q7801 wdt:P749 ?obj . ?obj wdt:P31 wd:Q484652 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'International Court of Justice', 'p': 'parent organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international organization'}}

 Q: what is the {start time} for {Sarajevo} has {twinned administrative body} as {Serre Chevalier} ?
 SPARQL: SELECT ?value WHERE { wd:Q11194 p:P190 ?s . ?s ps:P190 wd:Q2274046 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'beginning', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sarajevo', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Serre Chevalier'}}}

 Q: What significant event in 1978-6-1 is Michelle Bachelet known for?
 SPARQL: SELECT ?obj WHERE { wd:Q320 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1978')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michelle Bachelet', 'p': 'significant event', 'o': '?x0', 't': '1978'}

 Q: What is {solubility} of {methyl chloride} that is {solvent} is {water} ?
 SPARQL: SELECT ?obj WHERE { wd:Q422709 p:P2177 ?s . ?s ps:P2177 ?obj . ?s pq:P2178 wd:Q283 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'solubility', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'methyl chloride', 'p': 'solubility', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'solvent', 'o': 'water'}}}

 Q: What is {coordinate location} of {Delaware River} that is {applies to part} is {river source} ?
 SPARQL: SELECT ?obj WHERE { wd:Q143762 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Delaware River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river source'}}}

 Q: What is the ionization energy of the nicotine?
 SPARQL: select distinct ?answer where { wd:Q12144 wdt:P2260 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'nicotine', 'p': 'ionization energy', 'o': '?x0'}

 Q: What is <prevalence> of <tuberculosis> ?
 SPARQL: select distinct ?answer where { wd:Q12204 wdt:P1193 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'tuberculosis', 'p': 'prevalence', 'o': '?x0'}

 Q: Who is {creators} of {language of the original work} {Star Trek Into Darkness} ?
 SPARQL: SELECT ?answer WHERE { wd:Q171711 wdt:P364 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'creator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Trek Into Darkness', 'p': 'language of the original work', 'o': '$y0'}}

 Q: What is {spouse} of {Aaliyah} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q11617 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aaliyah', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aaliyah', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is the {university building} for {affiliation} of {Columbia University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q49088 . ?sbj wdt:P31 wd:Q19844914 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'Columbia University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university building'}}

 Q: What is the commune of France with the lowest population whose located in time zone is UTC+01:00?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q484170 . ?ent wdt:P1082 ?obj . ?ent wdt:P421 wd:Q6655} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'population', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in time zone', 'o': 'UTC+01:00'}}}

 Q: What is {occupation} and {field of work} of {{Bram Stoker} has {employer} as {Dublin Castle}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36184 p:P108 ?s . ?s ps:P108 wd:Q742767 . ?s pq:P106 ?value1 . ?s pq:P101 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'occupation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bram Stoker', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'Dublin Castle'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'field of work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bram Stoker', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'Dublin Castle'}}}]

 Q: What is {ordinal number} of {season begins} of {Handball-Bundesliga} ?
 SPARQL: SELECT ?answer WHERE { wd:Q175762 wdt:P4794 ?X . ?X wdt:P1545 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Handball-Bundesliga', 'p': 'season begins', 'o': '$y0'}}

 Q: "What is place of residence of Wangari Maathai,that has inflation rate of consumer price index as 2.9?"
 SPARQL: SELECT ?answer WHERE { wd:Q46795 wdt:P551 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'2.9'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maathai', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '2.9'}}

 Q: Who is the child of Pompey and the mother, Mucia Tertia?
 SPARQL: SELECT ?obj WHERE { wd:Q125414 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 wd:Q273616 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pompey', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mother', 'o': 'Mucia Tertia'}}}

 Q: Give me {alcoholic beverage} that {fabrication method} {fermentation} and which contains the word {rum} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q154 . ?sbj wdt:P2079 wd:Q41760 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rum')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alcoholic beverage', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'fabrication method', 'o': 'fermentation'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'rum'}}

 Q: How many terminus are in Vienna
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P559 wd:Q1741 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'terminus', 'o': 'Vienna'}

 Q: What is in the region of Paroo River, that divides into Ku-ring-gai Council?
 SPARQL: SELECT ?answer WHERE { wd:Q1628056 wdt:P131 ?answer . ?answer wdt:P150 wd:Q133642}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paroo River', 'p': 'is in the region of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Ku-ring-gai Council'}}

 Q: What is {twinned administrative body} of {Changchun} that is {start time} is {1992-8-25} ?
 SPARQL: SELECT ?obj WHERE { wd:Q92161 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Changchun', 'p': 'twinned administrative body', 'o': '?x0', 't': '1992'}

 Q: How many {lakes on river} are to/by {Lake Urmia} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P469 wd:Q199551 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'lakes on river', 'o': 'Lake Urmia'}

 Q: Tell me soil type whose name has the word vertisol in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10926413 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vertisol')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'soil type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vertisol'}}

 Q: What is { award received } from { Justin Timberlake } that is { point in time } is { 2007 - 0 - 0 }?
 SPARQL: SELECT ?obj WHERE { wd:Q43432 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Justin Timberlake', 'p': 'award received', 'o': '?x0', 't': '2007'}

 Q: Which religious concept starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23847174 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious concept'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Is it true that the explosive energy equivalent of Father of All Bombs is less than 52.8?
 SPARQL: ASK WHERE { wd:Q1049487 wdt:P2145 ?obj filter(?obj < 52.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Father of All Bombs', 'p': 'explosive energy equivalent', 'o': '?x0', '?x0': '52.8'}

 Q: When did child of Abigail Adams and date of birth?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}]

 Q: Does the Becherovka alcohol by volume less than 30.4
 SPARQL: ASK WHERE { wd:Q742408 wdt:P2665 ?obj filter(?obj < 30.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Becherovka', 'p': 'alcohol by volume', 'o': '?x0', '?x0': '30.4'}

 Q: What are the prefecture-level city  which start with the letter ürümqi
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q748149 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ürümqi')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prefecture-level city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ürümqi'}}

 Q: tell me ceremony whose name has the word umhlanga in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2627975 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'umhlanga')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ceremony'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'umhlanga'}}

 Q: What is {played by} of {symbol} of {inequality} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28113351 wdt:P913 ?X . ?X wdt:P1535 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'inequality', 'p': 'symbol', 'o': '$y0'}}

 Q: What is edition runtime for League of Legends?
 SPARQL: SELECT ?answer WHERE { wd:Q223341 wdt:P400 ?X . ?X wdt:P747 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'edition', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'League of Legends', 'p': 'runtime', 'o': '$y0'}}

 Q: What is the name of the Dutch municipal coat of arms of Amsterdam?
 SPARQL:  select distinct ?obj where { wd:Q727 wdt:P237 ?obj . ?obj wdt:P31 wd:Q28147344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amsterdam', 'p': 'coat of arms', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Dutch municipal coat of arms'}}

 Q: What is the {sauce} for {country of origin} of {Korea}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P495 wd:Q18097 . ?sbj wdt:P31 wd:Q178359 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Korea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sauce'}}

 Q: How many depositors are with the {United Nations Secretary-General} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2058 wd:Q81066 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'depositor', 'o': 'United Nations Secretary-General'}

 Q: Which is the electric charge for antihydrogen?
 SPARQL: select distinct ?answer where { wd:Q216121 wdt:P2200 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'antihydrogen', 'p': 'electric charge', 'o': '?x0'}

 Q: Who gave the {is shown in} of {based upon} of {Clark Kent} ?
 SPARQL: SELECT ?answer WHERE { wd:Q774772 wdt:P144 ?X . ?X wdt:P1441 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is shown in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clark Kent', 'p': 'based upon', 'o': '$y0'}}

 Q: How many {direction relative to location} are to/by {west} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P654 wd:Q679 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'direction relative to location', 'o': 'west'}

 Q: Tell me national association football team whose name has the word team in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6979593 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'team')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national association football team'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'team'}}

 Q: Tell me the most notable work of Christopher Hitchens and also the publisher.
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P123 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'notable work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}]

 Q: What is the INSEE countries and foreign territories code for the Democratic Republic of Congo?
 SPARQL: select distinct ?answer where { wd:Q974 wdt:P3422 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Congo', 'p': 'INSEE countries and foreign territories code', 'o': '?x0'}

 Q: What is the warheroes.ru ID for Yuri Gagarin?
 SPARQL: select distinct ?answer where { wd:Q7327 wdt:P2943 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yuri Gagarin', 'p': 'warheroes.ru ID', 'o': '?x0'}

 Q: Is the diameter pf nickel equal to 0.807?
 SPARQL: ASK WHERE { wd:Q238498 wdt:P2386 ?obj filter(?obj = 0.807) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'nickel', 'p': 'diameter', 'o': '?x0', '?x0': '0.807'}

 Q: Is the stated age of Rolf-Axel Eberhardt greater than 52?
 SPARQL: ASK WHERE { wd:Q50334841 wdt:P3629 ?obj filter(?obj > 52.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Rolf-Axel Eberhardt', 'p': 'age at event', 'o': '?x0', '?x0': '52.0'}

 Q: what is the {start time} for {Podgorica} has {country} as {Principality of Montenegro} ?
 SPARQL: SELECT ?value WHERE { wd:Q23564 p:P17 ?s . ?s ps:P17 wd:Q779011 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Podgorica', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Principality of Montenegro'}}}

 Q: IS THE ENTHALPY OF VAPORIZATION OF METHANOL IS EQUAL TO 37400
 SPARQL: ASK WHERE { wd:Q14982 wdt:P2116 ?obj filter(?obj = 37400) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'methanol', 'p': 'enthalpy of vaporization', 'o': '?x0', '?x0': '37400'}

 Q: What award was received Mary Tyler Moore ?
 SPARQL:  select distinct ?obj where { wd:Q41342 wdt:P166 ?obj . ?obj wdt:P31 wd:Q618779 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mary Tyler Moore', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award'}}

 Q: what is the {language of work or name} for {Tuesday} has {named after} as {3} ?
 SPARQL: SELECT ?value WHERE { wd:Q127 p:P138 ?s . ?s ps:P138 wd:Q201 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language of work or name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tuesday', 'p': 'named after', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'named after', 'o': '3'}}}

 Q: How many {archives at} are for {Grace Hopper} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q11641 wdt:P485 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Grace Hopper', 'p': 'archives at', 'o': '?x0'}

 Q: Which is the narrative location of Siddhartha?
 SPARQL: select distinct ?answer where { wd:Q457289 wdt:P840 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Siddhartha', 'p': 'narrative location', 'o': '?x0'}

 Q: What is {place of first performance} of {Tartuffe}, that has {farthest east} is {48.8363848 2.4697602} ?
 SPARQL: SELECT ?answer WHERE { wd:Q205875 wdt:P4647 ?answer . ?answer wdt:P1334 ?x FILTER(contains(?x,'48.8363848 2.4697602'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tartuffe', 'p': 'place of first performance', 'o': '?x0'}

 Q: What are the military operation which start with the letter o
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q645883 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military operation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: Is the matches/games drawn/tied of the 2001 British and Irish Lions tour to Australia equal to 0?
 SPARQL: ASK WHERE { wd:Q3535481 wdt:P1357 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2001 British and Irish Lions tour to Australia', 'p': 'drawn', 'o': '?x0', '?x0': '0'}

 Q: Who is the mother and husband of Candice Bergen?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q106942 wdt:P25 ?ans_1 . wd:Q106942 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Candice Bergen', 'p': 'mother', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Candice Bergen', 'p': 'husband', 'o': '?x1'}]

 Q: What is {language written} of {Romy Schneider}, that has {has grammatical person} is {third-person plural} ?
 SPARQL: SELECT ?answer WHERE { wd:Q78469 wdt:P1412 ?answer . ?answer wdt:P5110 wd:Q51929517}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Romy Schneider', 'p': 'language written', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical person', 'o': 'third-person plural'}}

 Q: Does the cash back of the Gold  ADAC Credit Card equals 5?
 SPARQL: ASK WHERE { wd:Q56746601 wdt:P4448 ?obj filter(?obj = 5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'ADAC Credit Card GOLD', 'p': 'cash back', 'o': '?x0', '?x0': '5'}

 Q: What is the {character type} for {opposite of} of {superhero}
 SPARQL:  select distinct ?obj where { wd:Q188784 wdt:P461 ?obj . ?obj wdt:P31 wd:Q636497 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'superhero', 'p': 'opposite of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character type'}}

 Q: What is {using} of {sport played} of {World Rugby} ?
 SPARQL: SELECT ?answer WHERE { wd:Q369225 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'using', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'World Rugby', 'p': 'play', 'o': '$y0'}}

 Q: What is {population} of {Aden} that is {determination method} is {estimation process} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131694 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q791801 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aden', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'estimation process'}}}

 Q: what is spouse of Carlos Saura that is start time is 2006?
 SPARQL: SELECT ?obj WHERE { wd:Q295855 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carlos Saura', 'p': 'spouse', 'o': '?x0', 't': '2006'}

 Q: How many {exclave of} are to/by {Azerbaijan} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P500 wd:Q227 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'exclave of', 'o': 'Azerbaijan'}

 Q: Which is the total equity of Micron Technology?
 SPARQL: select distinct ?answer where { wd:Q1197548 wdt:P2137 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Micron Technology', 'p': 'total equity', 'o': '?x0'}

 Q: Was Michael J. Fox's place of birth in Edmonton?
 SPARQL: ASK WHERE { wd:Q395274 wdt:P19 wd:Q2096 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Michael J. Fox', 'p': 'place of birth', 'o': '?x0', '?x0': 'Edmonton'}]

 Q: What is Palace of Westminster's architect and heritage designation?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q62408 wdt:P84 ?ans_1 . wd:Q62408 wdt:P1435 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Palace of Westminster', 'p': 'architect', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Palace of Westminster', 'p': 'heritage designation', 'o': '?x1'}]

 Q: is it true that the SSK6-1s optimum viable temperature is greater than 24.0?
 SPARQL: ASK WHERE { wd:Q29565582 wdt:P3253 ?obj filter(?obj > 24.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'SSK6-1', 'p': 'optimum viable temperature', 'o': '?x0', '?x0': '24.0'}

 Q: What is the {country} for {significant event} of {Indian independence movement}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q12444025 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Indian Independence Movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Give me {nonmetal} that {location of discovery} {England} and which that starts with {'o'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19600 . ?sbj wdt:P189 wd:Q21 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonmetal', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of discovery', 'o': 'England'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: What is <drafted by> of <Sidney Crosby> ?
 SPARQL: select distinct ?answer where { wd:Q311280 wdt:P647 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sidney Crosby', 'p': 'drafted by', 'o': '?x0'}

 Q: What is {student of} of {Strabo} that is {sourcing circumstances} is {presumably} ?
 SPARQL: SELECT ?obj WHERE { wd:Q45936 p:P1066 ?s . ?s ps:P1066 ?obj . ?s pq:P1480 wd:Q18122778 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'student of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Strabo', 'p': 'student of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'presumably'}}}

 Q: What is {elected in} and {end cause} of {{John Hume} has {position held} as {Member of the 53rd Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q193630 p:P39 ?s . ?s ps:P39 wd:Q35921591 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 53rd Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 53rd Parliament of the United Kingdom'}}}]

 Q: Gordon Lightfoot was nominated for what at what time?
 SPARQL: SELECT ?obj WHERE { wd:Q359552 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gordon Lightfoot', 'p': 'nominated for', 'o': '?x0', 't': '1977'}

 Q: What is {date of death} of {John X} that is {sourcing circumstances} is {presumably} ?
 SPARQL: SELECT ?obj WHERE { wd:Q227976 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1480 wd:Q18122778 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John X', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'presumably'}}}

 Q: Which is the patron saint of the place of death of Anna de' Medici?
 SPARQL: SELECT ?answer WHERE { wd:Q3617854 wdt:P20 ?X . ?X wdt:P417 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'patron saint', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Anna de' Medici", 'p': 'place of death', 'o': '$y0'}}

 Q: Is it true that the fee of Harvard University is less than 90?
 SPARQL: ASK WHERE { wd:Q13371 wdt:P2555 ?obj filter(?obj < 90.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Harvard University', 'p': 'fee', 'o': '?x0', '?x0': '90.0'}

 Q: What is BIA PSY person ID for Carl Rogers ?
 SPARQL: select distinct ?answer where { wd:Q191004 wdt:P5450 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carl Rogers', 'p': 'BIA PSY person ID', 'o': '?x0'}

 Q: What are the autonomous region of the People's Republic of China which start with the letter X
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57362 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': "autonomous region of the People's Republic of China"}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: What is {located in time zone} of {Marseille} that is {valid in period} is {standard time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23482 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marseille', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'standard time'}}}

 Q: What is {award received} of {Harry Martinson} that is {together with} is {Eyvind Johnson} ?
 SPARQL: SELECT ?obj WHERE { wd:Q132695 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q131326 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harry Martinson', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Eyvind Johnson'}}}

 Q: What is the {monastery} for {headquarters location} of {Russian Orthodox Church}
 SPARQL:  select distinct ?obj where { wd:Q60995 wdt:P159 ?obj . ?obj wdt:P31 wd:Q44613 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian Orthodox Church', 'p': 'headquarters location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monastery'}}

 Q: What is Bandysidan player ID for Sergey Lomanov ?
 SPARQL: select distinct ?answer where { wd:Q542364 wdt:P4831 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sergey Lomanov', 'p': 'Bandysidan player ID', 'o': '?x0'}

 Q: Who are the writers of the academic subject Ten simple rules for editing Wikipedia?
 SPARQL: SELECT ?answer WHERE { wd:Q21145331 wdt:P50 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ten simple rules for editing Wikipedia', 'p': 'writer', 'o': '$y0'}}

 Q: What is {discoverer or inventor of} of {Horsehead Nebula}, that has {biological sex} is {female} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14271 wdt:P61 ?answer . ?answer wdt:P21 wd:Q6581072}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Horsehead Nebula', 'p': 'discoverer or inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'female'}}

 Q: Give me {fruit} that {natural product of taxon} {Citrullus lanatus} and which that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1364 . ?sbj wdt:P1582 wd:Q17507129 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fruit', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'natural product of taxon', 'o': 'Citrullus lanatus'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {in conflict} of {depiction of} of {Raising the Flag on Iwo Jima} ?
 SPARQL: SELECT ?answer WHERE { wd:Q117693 wdt:P180 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Raising the Flag on Iwo Jima', 'p': 'depiction of', 'o': '$y0'}}

 Q: What what is unary operation notation by integral symbol and which that starts with {'i'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657596 . ?sbj wdt:P913 wd:Q1665420 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unary operation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'notation', 'o': 'integral symbol'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: What is {treated by} of {because} of {arteriosclerosis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q184559 wdt:P828 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'arteriosclerosis', 'p': 'cause', 'o': '$y0'}}

 Q: What is <category for recipients of this award> of <Nobel Prize> ?
 SPARQL: select distinct ?answer where { wd:Q7191 wdt:P2517 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nobel Prize', 'p': 'category for recipients of this award', 'o': '?x0'}

 Q: What is {inflation rate} of {Venezuela} that is {point in time} is {1996-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q717 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Venezuela', 'p': 'inflation rate', 'o': '?x0', 't': '1996'}

 Q: When was Vittorio De Sica nominated for an Academy Award for Best Supporting Actor?
 SPARQL: SELECT ?value WHERE { wd:Q53004 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vittorio De Sica', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}, 't': '?x0'}

 Q: What is Auñamendi ID of Miguel López de Legazpi ?
 SPARQL: select distinct ?answer where { wd:Q318500 wdt:P3218 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Miguel López de Legazpi', 'p': 'Auñamendi ID', 'o': '?x0'}

 Q: What is {timezone} of {death location} of {Sallust} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7170 wdt:P20 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timezone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sallust', 'p': 'death location', 'o': '$y0'}}

 Q: Did {East_India_Company} {owner of} {Britannia} and {Busbridge (1782 EIC ship)} ?
 SPARQL: ASK WHERE { wd:Q83164 wdt:P1830 wd:Q4801940 . wd:Q83164 wdt:P1830 wd:Q55606211 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'East India Company', 'p': 'owner of', 'o': '?x0', '?x0': 'Britannia'}, {'h': 'IS', 'v': '?x1', 's': 'East India Company', 'p': 'owner of', 'o': '?x1', '?x1': 'Busbridge (1782 EIC ship)'}]

 Q: Which is the ISNI for Marit Bjørgen?
 SPARQL: select distinct ?answer where { wd:Q216256 wdt:P213 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marit Bjørgen', 'p': 'ISNI', 'o': '?x0'}

 Q: What is total fertility rate of Trinidad and Tobago that is determination method is estimation process ?
 SPARQL: SELECT ?obj WHERE { wd:Q754 p:P4841 ?s . ?s ps:P4841 ?obj . ?s pq:P459 wd:Q791801 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Trinidad and Tobago', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'estimation process'}}}

 Q: Which church is located in the parish border Krukengrund?
 SPARQL: SELECT ?answer WHERE { wd:Q32068316 wdt:P131 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Krukengrund', 'p': 'is located in', 'o': '$y0'}}

 Q: What was Philip Roth nominated for in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q187019 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Philip Roth', 'p': 'nominated for', 'o': '?x0', 't': '2011'}

 Q: Where is the deathplace of Gediminas, whose twin town is Irkutsk?
 SPARQL: SELECT ?answer WHERE { wd:Q244852 wdt:P20 ?answer . ?answer wdt:P190 wd:Q6576}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gediminas', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin town', 'o': 'Irkutsk'}}

 Q: What is the fuel system of electricity?
 SPARQL: select distinct ?answer where { ?answer wdt:P1211 wd:Q12725}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fuel system', 'o': 'electricity'}

 Q: What is {nominated for} of {Mira Sorvino} that is {statement is subject of} is {68th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q212026 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q903494 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mira Sorvino', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '68th Academy Awards'}}}

 Q: Tell me interface standard whose name has the word virtuallink in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6046311 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'virtuallink')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'interface standard'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'virtuallink'}}

 Q: What is Ferenc Molnar's compArt person ID?
 SPARQL: select distinct ?answer where { wd:Q296809 wdt:P4772 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ferenc Molnar', 'p': 'compArt person ID', 'o': '?x0'}

 Q: Which is the Great Aragonese Encyclopedia ID for Allium cepa?
 SPARQL: select distinct ?answer where { wd:Q23485 wdt:P1807 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Allium cepa', 'p': 'Great Aragonese Encyclopedia ID', 'o': '?x0'}

 Q: Tell me medical specialty whose name has the word trichology in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q930752 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trichology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical specialty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'trichology'}}

 Q: How many {performer} are to/by {Jimi Hendrix} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P175 wd:Q5928 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Jimi Hendrix'}

 Q: What is the state of India that contain the word "uttarakhand" in its name ?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13390680 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'uttarakhand')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state of India'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'uttarakhand'}}

 Q: Who is drafted by the Boston Celtics?
 SPARQL: select distinct ?answer where { ?answer wdt:P647 wd:Q131371}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'drafted by', 'o': 'Boston Celtics'}

 Q: What is {is in the settlement of} of {British Academy of Film and Television Arts}, that has {postcode} is {DA} ?
 SPARQL: SELECT ?answer WHERE { wd:Q159661 wdt:P131 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'DA'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'BAFTA', 'p': 'is in the settlement of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'postcode', 'o': 'da'}}

 Q: Is the maximum number of players for the coxless four 0.0?
 SPARQL: ASK WHERE { wd:Q81032 wdt:P1873 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'coxless four', 'p': 'maximum number of players', 'o': '?x0', '?x0': '0.0'}

 Q: Give me {religious concept} that {facet of} {Hinduism} and which contains the word {yatra} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23847174 . ?sbj wdt:P1269 wd:Q9089 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yatra')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious concept', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Hinduism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yatra'}}

 Q: What is the {golf course} for {designed by} of {Donald Trump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q22686 . ?sbj wdt:P31 wd:Q1048525 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Donald Trump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'golf course'}}

 Q: What is the {Wikimedia list article} for {is a list of} of {dance}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P360 wd:Q11639 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is a list of', 'o': 'dance', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: What is {religious affiliation} of {child of} of {Vladimir the Great} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14974 wdt:P22 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'religious affiliation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir the Great', 'p': 'child of', 'o': '$y0'}}

 Q: What was the population of the Maldives in 1967?
 SPARQL: SELECT ?obj WHERE { wd:Q826 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maldives', 'p': 'population', 'o': '?x0', 't': '1967'}

 Q: What year did Le Corbusier win the Frank P. Brown Medal?
 SPARQL: SELECT ?value WHERE { wd:Q4724 p:P166 ?s . ?s ps:P166 wd:Q19873358 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Le Corbusier', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Frank P. Brown Medal'}, 't': '?x0'}

 Q: What is the {city or town} for {enclave within} of {Montreal}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P501 wd:Q340 . ?sbj wdt:P31 wd:Q27676416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'enclave within', 'o': 'Montreal', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city or town'}}

 Q: what is the {replaced by} for {Honorius I} has {position held} as {pope} ?
 SPARQL: SELECT ?value WHERE { wd:Q170502 p:P39 ?s . ?s ps:P39 wd:Q19546 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honorius I', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'pope'}}}

 Q: What is <used metre> of <Iliad> ?
 SPARQL: select distinct ?answer where { wd:Q8275 wdt:P2551 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iliad', 'p': 'used metre', 'o': '?x0'}

 Q: "Where is {on harbour} of {Kryvyi Rih}, which has {tributary} is {Saksahan} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q157137 wdt:P206 ?answer . ?answer wdt:P974 wd:Q1633893}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kryvyi Rih', 'p': 'on harbour', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Saksahan'}}

 Q: What is {starring} of {in work} of {Ian Carlyle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42421333 wdt:P1441 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ian Carlyle', 'p': 'in work', 'o': '$y0'}}

 Q: What is the {phenomenon} for {has effect} of {rain}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1542 wd:Q7925 . ?sbj wdt:P31 wd:Q483247 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'causes', 'o': 'rain', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phenomenon'}}

 Q: What is the service branch  by Julius and Ethel Rosenberg, which has subsidiary entities including Arlington National Cemetery?
 SPARQL: SELECT ?answer WHERE { wd:Q769097 wdt:P241 ?answer . ?answer wdt:P355 wd:Q216344}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Julius and Ethel Rosenberg', 'p': 'branch', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'Arlington National Cemetery'}}

 Q: what is the {statement is subject of} for {Aaron Kwok} has {award received} as {Golden Horse Award for Best Leading Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q16872 p:P166 ?s . ?s ps:P166 wd:Q17500591 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aaron Kwok', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Golden Horse Award for Best Leading Actor'}}}

 Q: what is the {start time} for {Marco Polo} has {spouse} as {Donata Badoer} ?
 SPARQL: SELECT ?value WHERE { wd:Q6101 p:P26 ?s . ?s ps:P26 wd:Q3713678 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marco Polo', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Donata Badoer'}}}

 Q: Who was Al Gore's spouse beginning in 1970?
 SPARQL: SELECT ?obj WHERE { wd:Q19673 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Al Gore', 'p': 'spouse', 'o': '?x0', 't': '1970'}

 Q: What is {manifestation of} of {Christmas tree}, that has {recurring event} is {January 19} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47128 wdt:P1557 ?answer . ?answer wdt:P837 wd:Q2266}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Christmas tree', 'p': 'manifestation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'recurring event', 'o': 'January 19'}}

 Q: What is the {stadium} for {home venue} of {Green Bay Packers}
 SPARQL:  select distinct ?obj where { wd:Q213837 wdt:P115 ?obj . ?obj wdt:P31 wd:Q483110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Green Bay Packers', 'p': 'home venue', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stadium'}}

 Q: Which is the enterprise for the parent organization of Sears?
 SPARQL:  select distinct ?obj where { wd:Q6499202 wdt:P749 ?obj . ?obj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sears', 'p': 'parent organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: What is {developer} of {proper motion}, that has {has surname} is {Halley} ?
 SPARQL: SELECT ?answer WHERE { wd:Q193223 wdt:P61 ?answer . ?answer wdt:P734 wd:Q16870415}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'proper motion', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'surname', 'o': 'Halley'}}

 Q: What head coach is the New York Yankees named after?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q213417 wdt:P286 ?ans_1 . wd:Q213417 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'New York Yankees', 'p': 'head coach', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'New York Yankees', 'p': 'named after', 'o': '?x1'}]

 Q: What are the national cuisine which start with the letter m
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1968435 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national cuisine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: Which is the television series which contains the word zigby in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5398426 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zigby')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zigby'}}

 Q: Tell me about spouse of Barbara Walters and start time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q231417 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara Walters', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara Walters', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is {second language} of {Peter Faber}, that has {regulatory body} is {Pontifical Academy for Latin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q454814 wdt:P1412 ?answer . ?answer wdt:P1018 wd:Q48509}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Faber', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'regulatory body', 'o': 'Pontifical Academy for Latin'}}

 Q: What is {honorary title} of {Albert Günther}, that has {won by} is {P. A. Buxton} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57514 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q15994338}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Albert Günther', 'p': 'honorary title', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'won by', 'o': 'P.A. Buxton'}}

 Q: Is it true that the topographic isolation of Pollux equals to 0.7?
 SPARQL: ASK WHERE { wd:Q30485 wdt:P2659 ?obj filter(?obj = 0.7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Pollux', 'p': 'topographic isolation', 'o': '?x0', '?x0': '0.7'}

 Q: What award did Edward C. Prescott receive on 1-1-2004?
 SPARQL: SELECT ?obj WHERE { wd:Q312585 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Edward C. Prescott', 'p': 'award', 'o': '?x0', 't': '2004'}

 Q: What is the {headquarters location} and the {location of formation} of {Google} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q95 wdt:P159 ?ans_1 . wd:Q95 wdt:P740 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Google', 'p': 'headquarters location', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Google', 'p': 'location of formation', 'o': '?x1'}]

 Q: What is <has melody> of <Tristan und Isolde> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1625 wd:Q1324254}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has melody', 'o': 'Tristan und Isolde'}

 Q: What time has Manhattan listed as the end time for a maritime evacuation event?
 SPARQL: SELECT ?value WHERE { wd:Q11299 p:P793 ?s . ?s ps:P793 wd:Q30129955 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Manhattan', 'p': 'event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'event', 'o': 'maritime evacuation'}}}

 Q: What is the diplomatic relations like in basin countries of Lake Okeechobee?
 SPARQL: SELECT ?answer WHERE { wd:Q202905 wdt:P205 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lake Okeechobee', 'p': 'basin countries', 'o': '$y0'}}

 Q: What is {twin town} of {principle office} of {Financial Times} ?
 SPARQL: SELECT ?answer WHERE { wd:Q183399 wdt:P159 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Financial Times', 'p': 'principle office', 'o': '$y0'}}

 Q: How many {active ingredient in} are for {lidocaine} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q216935 wdt:P3780 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'lidocaine', 'p': 'active ingredient in', 'o': '?x0'}

 Q: what is the {applies to part} for {Augustus II the Strong} has {place of burial} as {Katholische Hofkirche} ?
 SPARQL: SELECT ?value WHERE { wd:Q53437 p:P119 ?s . ?s ps:P119 wd:Q666935 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Augustus II the Strong', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of burial', 'o': 'Katholische Hofkirche'}}}

 Q: What is the CBS municipality code of Nijmegen?
 SPARQL: select distinct ?answer where { wd:Q47887 wdt:P382 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nijmegen', 'p': 'CBS municipality code', 'o': '?x0'}

 Q: Was Herbie Hancock the winner of the award for the Grammy Award for Best Pop Collaboration with Vocals?
 SPARQL: SELECT ?value WHERE { wd:Q105875 p:P166 ?s . ?s ps:P166 wd:Q691203 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Herbie Hancock', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grammy Award for Best Pop Collaboration with Vocals'}}}

 Q: What is {total fertility rate} of {Sudan} that is {determination method} is {estimation process} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1049 p:P4841 ?s . ?s ps:P4841 ?obj . ?s pq:P459 wd:Q791801 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sudan', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'estimation process'}}}

 Q: Is the half-life of silicon-36 less than 0.54?
 SPARQL: ASK WHERE { wd:Q18844603 wdt:P2114 ?obj filter(?obj < 0.54) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'silicon-36', 'p': 'half-life', 'o': '?x0', '?x0': '0.54'}

 Q: What is a sovereign state for office held by the pope's head of state?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1906 wd:Q19546 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'pope', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the Malayalam alphabet?
 SPARQL:  select distinct ?obj where { wd:Q36236 wdt:P282 ?obj . ?obj wdt:P31 wd:Q9779 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Malayalam', 'p': 'alphabet', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alphabet'}}

 Q: What is the {programming language} for {designed by} of {Dennis M. Ritchie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q45575 . ?sbj wdt:P31 wd:Q9143 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Dennis M. Ritchie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'programming language'}}

 Q: Give me {Zuckerart} that contains the word {syrup} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q227790 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'syrup')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Zuckerart'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'syrup'}}

 Q: Which reward was The Diary of Anne Frank a nominee for?
 SPARQL: SELECT ?answer WHERE { wd:Q707986 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Diary of Anne Frank', 'p': 'nominee for', 'o': '$y0'}}

 Q: What is the {business} for {headquarters location} of {Lyon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q456 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Lyon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is the Commons category of Classic of Poetry ?
 SPARQL: select distinct ?answer where { wd:Q465108 wdt:P373 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Classic of Poetry', 'p': 'Commons category', 'o': '?x0'}

 Q: Who was married to Ida Lupino on January 1st, 1951?
 SPARQL: SELECT ?obj WHERE { wd:Q148669 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1951')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ida Lupino', 'p': 'married to', 'o': '?x0', 't': '1951'}

 Q: What agent had conflict with Lowell English?
 SPARQL: SELECT ?answer WHERE { wd:Q6693201 wdt:P607 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'agent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lowell English', 'p': 'conflict', 'o': '$y0'}}

 Q: What is <approved by> of <European Parliament> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P790 wd:Q8889}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'approved by', 'o': 'European Parliament'}

 Q: What is <nickname> of <Mike Krzyzewski> ?
 SPARQL: select distinct ?answer where { wd:Q434909 wdt:P1449 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mike Krzyzewski', 'p': 'nickname', 'o': '?x0'}

 Q: What is Fantastic Fiction author ID of James Ellroy?
 SPARQL: select distinct ?answer where { wd:Q318487 wdt:P5408 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Ellroy', 'p': 'Fantastic Fiction author ID', 'o': '?x0'}

 Q: Where was Syrie Maugham's country of citizenship in 1927?
 SPARQL: SELECT ?obj WHERE { wd:Q7663337 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1927')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Syrie Maugham', 'p': 'country of citizenship', 'o': '?x0', 't': '1927'}

 Q: "Who is {took part in} of {boy}, which has {theatre season} is {classical antiquity} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q3010 wdt:P1344 ?answer . ?answer wdt:P2348 wd:Q486761}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'boy', 'p': 'took part', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'theatre season', 'o': 'classical antiquity'}}

 Q: What administrative territorial entity was Sint Maarten located in the year December 15, 1954?
 SPARQL: SELECT ?obj WHERE { wd:Q26273 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1954')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sint Maarten', 'p': 'in', 'o': '?x0', 't': '1954'}

 Q: What is the density of aluminium at a temperature of 20 degrees?
 SPARQL: SELECT ?obj WHERE { wd:Q663 p:P2054 ?s . ?s ps:P2054 ?obj . ?s pq:P2076 ?x filter(contains(?x,'20.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'density', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'aluminium', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'temperature', 'o': '20.0'}}}

 Q: Which is the GeneReviews ID for Alzheimers disease?
 SPARQL: select distinct ?answer where { wd:Q11081 wdt:P668 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alzheimer', 'p': 'GeneReviews ID', 'o': '?x0'}

 Q: What is {date of death} and {father} of {{Joseph Stalin} has {child} as {Artem Sergeev}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q4416801 . ?s pq:P570 ?value1 . ?s pq:P22 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Artem Sergeev'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'son of', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Artem Sergeev'}}}]

 Q: "What is {holds position} of {Martin McGuinness}, which has {prequel of} is {Member of the 55th Parliament of the United Kingdom} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q57689 wdt:P39 ?answer . ?answer wdt:P156 wd:Q35494253}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Martin McGuinness', 'p': 'holds position', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prequel of', 'o': 'Member of the 55th Parliament of the United Kingdom'}}

 Q: Give me {sport discipline} that {authority} {World Rugby} and which contains the word {rugby} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2312410 . ?sbj wdt:P797 wd:Q369225 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rugby')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport discipline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'authority', 'o': 'World Rugby'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'rugby'}}

 Q: Which is the SAHRA heritage site ID for University of Cape Town?
 SPARQL: select distinct ?answer where { wd:Q951305 wdt:P3759 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Cape Town', 'p': 'SAHRA heritage site ID', 'o': '?x0'}

 Q: What is the CPU with the greatest charge?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5300 . ?ent wdt:P2229 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'thermal design power', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'CPU'}}

 Q: what is the {end time} for {Sarah Bernhardt} has {spouse} as {Jacques Damala} ?
 SPARQL: SELECT ?value WHERE { wd:Q4605 p:P26 ?s . ?s ps:P26 wd:Q6120528 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sarah Bernhardt', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Jacques Damala'}}}

 Q: What is {birth city} of {Kristen Stewart}, that has {county seat of} is {Los Angeles County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q126599 wdt:P19 ?answer . ?answer wdt:P1376 wd:Q104994}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kristen Stewart', 'p': 'birth city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat of', 'o': 'Los Angeles County'}}

 Q: Where {faith} {has influence} on {Madonna} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1744 wdt:P737 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'faith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Madonna', 'p': 'has influence', 'o': '$y0'}}

 Q: What is the {biopharmaceutical} for {encoded by} of {INS}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P702 wd:Q21163221 . ?sbj wdt:P31 wd:Q679692 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'encoded by', 'o': 'INS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biopharmaceutical'}}

 Q: what is the {end time} for {Alla Pugacheva} has {spouse} as {Mykolas Orbakas} ?
 SPARQL: SELECT ?value WHERE { wd:Q80510 p:P26 ?s . ?s ps:P26 wd:Q16465149 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alla Pugacheva', 'p': 'wife', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'wife', 'o': 'Mykolas Orbakas'}}}

 Q: what is the {point in time} for {Isadora Duncan} has {significant event} as {funeral} ?
 SPARQL: SELECT ?value WHERE { wd:Q483512 p:P793 ?s . ?s ps:P793 wd:Q201676 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Isadora Duncan', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'funeral'}, 't': '?x0'}

 Q: Which is the gens of Sallust?
 SPARQL: select distinct ?answer where { wd:Q7170 wdt:P5025 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sallust', 'p': 'gens', 'o': '?x0'}

 Q: What is {culture} of {state} of {Australian Secret Intelligence Service} ?
 SPARQL: SELECT ?answer WHERE { wd:Q181694 wdt:P17 ?X . ?X wdt:P172 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'culture', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Australian Secret Intelligence Service', 'p': 'state', 'o': '$y0'}}

 Q: What is <open days> of <Thursday> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3025 wd:Q129}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'open days', 'o': 'Thursday'}

 Q: What language does the sculptor of Z3 write in?
 SPARQL: SELECT ?answer WHERE { wd:Q222419 wdt:P170 ?X . ?X wdt:P1412 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Z3', 'p': 'sculptor', 'o': '$y0'}}

 Q: What award did I.M. Pei receive in 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q46868 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'I.M. Pei', 'p': 'award', 'o': '?x0', 't': '2010'}

 Q: "Where is {deathplace} of {Amelia Earhart}, which has {tributary} is {Ayampe River} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q3355 wdt:P20 ?answer . ?answer wdt:P974 wd:Q1367043}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Amelia Earhart', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Ayampe River'}}

 Q: Was Cleopatra's child named Caesarion?
 SPARQL: ASK WHERE { wd:Q635 wdt:P40 wd:Q39589 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Cleopatra', 'p': 'child', 'o': '?x0', '?x0': 'Caesarion'}]

 Q: what is the {point in time} for {Barry Humphries} has {award received} as {Centenary Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q734221 p:P166 ?s . ?s ps:P166 wd:Q2393205 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Barry Humphries', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Centenary Medal'}, 't': '?x0'}

 Q: Which chemical compound has the most binding energy?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2154 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'binding energy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is {date of death} and {father} of {{Abigail Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P570 ?value1 . ?s pq:P22 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'father', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams'}}}]

 Q: What was the population of Washington, D.C. at the start of 1860?
 SPARQL: SELECT ?obj WHERE { wd:Q61 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1860')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Washington, D.C.', 'p': 'population', 'o': '?x0', 't': '1860'}

 Q: Did {Mao_Zedong} {position held} {President of the People's Republic of China}?
 SPARQL: ASK WHERE { wd:Q5816 wdt:P39 wd:Q655407 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mao Zedong', 'p': 'position held', 'o': '?x0', '?x0': "President of the People's Republic of China"}]

 Q: what is the {afflicts} for {arsenic} has {minimal lethal dose} as {300.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q871 p:P2300 ?s . ?s ps:P2300 ?x filter(contains(?x,'300.0')) . ?s pq:P689 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afflicts', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'arsenic', 'p': 'minimal lethal dose', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'minimal lethal dose', 'o': '300.0'}}}

 Q: Is it true that the maximum wavelength of sensitivity of Submilimeter Array is greater than 2.004?
 SPARQL: ASK WHERE { wd:Q1205241 wdt:P3737 ?obj filter(?obj > 2.004) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Submillimeter Array', 'p': 'maximum wavelength of sensitivity', 'o': '?x0', '?x0': '2.004'}

 Q: What nonprofit organization is regulated by the association of football?
 SPARQL:  select distinct ?obj where { wd:Q2736 wdt:P3719 ?obj . ?obj wdt:P31 wd:Q163740 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'football', 'p': 'regulated by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonprofit organization'}}

 Q: Which is the spacecraft that is manufactured by SpaceX?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q193701 . ?sbj wdt:P31 wd:Q40218 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufactured by', 'o': 'SpaceX', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spacecraft'}}

 Q: what is the {start time} for {Boris Johnson} has {position held} as {Member of the 56th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q180589 p:P39 ?s . ?s ps:P39 wd:Q30524718 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boris Johnson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 56th Parliament of the United Kingdom'}}}

 Q: What is the {city} for {capital} of {Wales}
 SPARQL:  select distinct ?obj where { wd:Q25 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wales', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: Which is the Commons gallery for Georges Seurat?
 SPARQL: select distinct ?answer where { wd:Q34013 wdt:P935 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georges Seurat', 'p': 'Commons gallery', 'o': '?x0'}

 Q: What is a nut that starts with the letter n.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11009 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nut'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is {date of death} and {date of birth} of {{Joseph Stalin} has {child} as {Svetlana Alliluyeva}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q228584 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Svetlana Alliluyeva'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Svetlana Alliluyeva'}}}]

 Q: How many {occupant} are to/by {Rijksmuseum} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P466 wd:Q190804 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'occupant', 'o': 'Rijksmuseum'}

 Q: What is the {archive} for {archives at} of {The Walt Disney Company}
 SPARQL:  select distinct ?obj where { wd:Q7414 wdt:P485 ?obj . ?obj wdt:P31 wd:Q166118 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Disney', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archives'}}

 Q: what is the {for work} for {Jack Warner} has {award received} as {Academy Award for Best Picture} ?
 SPARQL: SELECT ?value WHERE { wd:Q72614 p:P166 ?s . ?s ps:P166 wd:Q102427 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Warner', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Academy Award for Best Picture'}}}

 Q: What is the birthplace of Maureen O'Hara, which has the co-ordinate location of 53.3252?
 SPARQL: SELECT ?answer WHERE { wd:Q229276 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'53.3252'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Maureen O'Hara", 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-ordinate location', 'o': '53.3252'}}

 Q: What is the official residence of Queens?
 SPARQL: select distinct ?answer where { ?answer wdt:P263 wd:Q18424}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official residence', 'o': 'Queens'}

 Q: What is {spouse} of {Gerard Reve} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q364153 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerard Reve', 'p': 'married', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerard Reve', 'p': 'married', 'o': '$y0'}}]

 Q: What is the {Commonwealth realm} with the {MIN(real gross domestic product growth rate)} whose {diplomatic relation} is {Taiwan}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q202686 . ?ent wdt:P2219 ?obj . ?ent wdt:P530 wd:Q865} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'real gross domestic product growth rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Commonwealth realm', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Taiwan'}}}

 Q: What is <located on astronomical body> of <North America> ?
 SPARQL: select distinct ?answer where { wd:Q49 wdt:P376 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'North America', 'p': 'located on astronomical body', 'o': '?x0'}

 Q: Who is the owner of the theatre company that made 'The Birth of the Star Spangled Banner'?
 SPARQL: SELECT ?answer WHERE { wd:Q21184208 wdt:P272 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Birth of the Star Spangled Banner', 'p': 'theatre company', 'o': '$y0'}}

 Q: What is {manner of death} of {Abraham Lincoln} that is {killed by} is {John Wilkes Booth} ?
 SPARQL: SELECT ?obj WHERE { wd:Q91 p:P1196 ?s . ?s ps:P1196 ?obj . ?s pq:P157 wd:Q180914 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manner of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abraham Lincoln', 'p': 'manner of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'killed by', 'o': 'John Wilkes Booth'}}}

 Q: What sovereign state belonging to the International Finance Corporation has the lowest unemployment rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3624078 . ?ent wdt:P1198 ?obj . ?ent wdt:P463 wd:Q656801} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'unemployment rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Finance Corporation'}}}

 Q: Who was the person with Chris Rock when he was awarded the Lunt-Fontanne Award for Ensemble Excellence?
 SPARQL: SELECT ?value WHERE { wd:Q4109 p:P166 ?s . ?s ps:P166 wd:Q28007406 . ?s pq:P1706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chris Rock', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Lunt-Fontanne Award for Ensemble Excellence'}}}

 Q: What is the {country of citizenship} and the {occupation} of {Kelly_Clarkson} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q483507 wdt:P27 ?ans_1 . wd:Q483507 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Kelly Clarkson', 'p': 'country of citizenship', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Kelly Clarkson', 'p': 'occupation', 'o': '?x1'}]

 Q: What is the Uppslagsverket Finland ID for kickboxing?
 SPARQL: select distinct ?answer where { wd:Q178678 wdt:P4854 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'kickboxing', 'p': 'Uppslagsverket Finland ID', 'o': '?x0'}

 Q: How many different kinds of industry are affected by furniture?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P452 wd:Q14745 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'industry', 'o': 'furniture'}

 Q: what is the {end time} for {Lee de Forest} has {spouse} as {Nora Stanton Blatch Barney} ?
 SPARQL: SELECT ?value WHERE { wd:Q354863 p:P26 ?s . ?s ps:P26 wd:Q17676 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lee de Forest', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Nora Stanton Blatch Barney'}}}

 Q: What is {follows} and {followed by} of {{Louis the Pious} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q43974 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'predecessor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'successor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What is the bibliography of the  PhD advisor to Karl Herzfeld?
 SPARQL: SELECT ?answer WHERE { wd:Q84763 wdt:P184 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bibliography', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karl Herzfeld', 'p': 'advisor', 'o': '$y0'}}

 Q: What is {total fertility rate} of {Slovakia} that is {determination method} is {estimation process} ?
 SPARQL: SELECT ?obj WHERE { wd:Q214 p:P4841 ?s . ?s ps:P4841 ?obj . ?s pq:P459 wd:Q791801 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Slovakia', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'estimation process'}}}

 Q: Tell me {intergovernmental organization}  whose name  starts with s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q245065 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {stable version} of {user interface} of {Amazon Kindle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q136469 wdt:P1414 ?X . ?X wdt:P348 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'version', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amazon Kindle', 'p': 'user interface', 'o': '$y0'}}

 Q: What is {music genre} of {developed by} of {Battle Zeque Den} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4870126 wdt:P178 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle Zeque Den', 'p': 'developed by', 'o': '$y0'}}

 Q: what is the {start time} for {Republican Party} has {chairperson} as {Ronna Romney McDaniel} ?
 SPARQL: SELECT ?value WHERE { wd:Q29468 p:P488 ?s . ?s ps:P488 wd:Q27899325 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Republican Party', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Ronna Romney McDaniel'}}}

 Q: Which is the Basketball-Reference.com NBA player ID of Hakeem Olajuwon?
 SPARQL: select distinct ?answer where { wd:Q273256 wdt:P2685 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hakeem Olajuwon', 'p': 'Basketball-Reference.com NBA player ID', 'o': '?x0'}

 Q: What is {follows} and {followed by} of {{Communist Party of China} has {chairperson} as {Hu Jintao}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q15029 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chinese Communist Party', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Hu Jintao'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chinese Communist Party', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Hu Jintao'}}}]

 Q: What is { solubility } of { nitrous oxide } { solvent } is { water }?
 SPARQL: SELECT ?obj WHERE { wd:Q905750 p:P2177 ?s . ?s ps:P2177 ?obj . ?s pq:P2178 wd:Q283 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'solubility', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nitrous oxide', 'p': 'solubility', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'solvent', 'o': 'water'}}}

 Q: What is {type locality (geology)} of {beryl}, that has {gps coordinates} is {24.77111111 34.71805556} ?
 SPARQL: SELECT ?answer WHERE { wd:Q103480 wdt:P2695 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'24.77111111 34.71805556'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'beryl', 'p': 'type locality (geology)', 'o': '?x0'}

 Q: Which {history of topic} and the {geography of topic} is {Melbourne} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q3141 wdt:P2184 ?ans_1 . wd:Q3141 wdt:P2633 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Melbourne', 'p': 'history of topic', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Melbourne', 'p': 'geography of topic', 'o': '?x1'}]

 Q: What is the sister city of Ivan Turgenev's hometown?
 SPARQL: SELECT ?answer WHERE { wd:Q42831 wdt:P551 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ivan Turgenev', 'p': 'hometown', 'o': '$y0'}}

 Q: Is a black hole the opposite of a stellar atmosphere?
 SPARQL: ASK WHERE { wd:Q589 wdt:P461 wd:Q6311 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'black hole', 'p': 'opposite of', 'o': '?x0', '?x0': 'stellar atmosphere'}]

 Q: Did Francis Ford Coppola have notable works of The Godfather and The Godfather Part III?
 SPARQL: ASK WHERE { wd:Q56094 wdt:P800 wd:Q47703 . wd:Q56094 wdt:P800 wd:Q202326 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Francis Ford Coppola', 'p': 'notable work', 'o': '?x0', '?x0': 'The Godfather'}, {'h': 'IS', 'v': '?x1', 's': 'Francis Ford Coppola', 'p': 'notable work', 'o': '?x1', '?x1': 'The Godfather Part III'}]

 Q: tell me audio and video interfaces and connectors are name has the word ypbpr in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1153429 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ypbpr')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'audio and video interfaces and connectors'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ypbpr'}}

 Q: What is the official language of lives in Pasi Siltakorpi?
 SPARQL: SELECT ?answer WHERE { wd:Q28786447 wdt:P551 ?X . ?X wdt:P37 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pasi Siltakorpi', 'p': 'lives in', 'o': '$y0'}}

 Q: How many colors are next to brown
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P462 wd:Q47071 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'color', 'o': 'brown'}

 Q: What is the {pharmaceutical product} for {active ingredient in} of {erythromycin}
 SPARQL:  select distinct ?obj where { wd:Q213511 wdt:P3780 ?obj . ?obj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'erythromycin', 'p': 'active ingredient in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: Is the PPP GDP per capita of Lithuania less than 22148.8
 SPARQL: ASK WHERE { wd:Q37 wdt:P2299 ?obj filter(?obj < 22148.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Lithuania', 'p': 'PPP GDP per capita', 'o': '?x0', '?x0': '22148.8'}

 Q: Is the topographic prominence of the Franzosenkopf less than 4.0?
 SPARQL: ASK WHERE { wd:Q1450459 wdt:P2660 ?obj filter(?obj < 4.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Franzosenkopf', 'p': 'topographic prominence', 'o': '?x0', '?x0': '4.0'}

 Q: What is the {Chinese dynasty} for {replaced by} of {Yuan dynasty}
 SPARQL:  select distinct ?obj where { wd:Q7313 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q12857432 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yuan', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Chinese dynasty'}}

 Q: What is {pronunciation audio} of {constructed out of} of {meat pie} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5367573 wdt:P186 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'meat pie', 'p': 'constructed out of', 'o': '$y0'}}

 Q: Where is the human place of birth in Thessaloniki?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P19 wd:Q17151 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of birth', 'o': 'Thessaloniki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is Anthony Vivaldi's CPDL ID?
 SPARQL: select distinct ?answer where { wd:Q1340 wdt:P2000 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vivaldi', 'p': 'CPDL ID', 'o': '?x0'}

 Q: what is the {academic degree} for {John Grisham} has {educated at} as {University of Mississippi School of Law} ?
 SPARQL: SELECT ?value WHERE { wd:Q106465 p:P69 ?s . ?s ps:P69 wd:Q14693404 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Grisham', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Mississippi School of Law'}}}

 Q: Who else participated in Deep Blue with top dog Cray Blitz?
 SPARQL: SELECT ?answer WHERE { wd:Q187899 wdt:P1344 ?answer . ?answer wdt:P1346 wd:Q937297}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Deep Blue', 'p': 'participated in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'top dog', 'o': 'Cray Blitz'}}

 Q: What is GACS ID for West Africa?
 SPARQL: select distinct ?answer where { wd:Q4412 wdt:P4427 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'West Africa', 'p': 'GACS ID', 'o': '?x0'}

 Q: How many armament does the aircraft has?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P520 wd:Q11436 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'armament', 'o': 'aircraft'}

 Q: What is {educated at} of {Katherine Dunham} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0'}}]

 Q: How many input methods are on a computer keyboard?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P479 wd:Q250 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'input method', 'o': 'computer keyboard'}

 Q: Give me {cryptocurrency} that {stock exchange} {Bitfinex} and which contains the word {neo} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13479982 . ?sbj wdt:P414 wd:Q29647473 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neo')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'crypto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'stock exchange', 'o': 'Bitfinex'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'neo'}}

 Q: What is the {opposite of} and the {named after} of {Jews} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q7325 wdt:P461 ?ans_1 . wd:Q7325 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Jews', 'p': 'opposite of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Jews', 'p': 'named after', 'o': '?x1'}]

 Q: What is the {chemical compound} with the {MAX(explosive velocity)} whose {subject has role} is {explosive material}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2231 ?obj . ?ent wdt:P2868 wd:Q12870 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'explosive velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'as', 'o': 'explosive'}}}

 Q: Is the human genome size more than 3881796000?
 SPARQL: ASK WHERE { wd:Q720988 wdt:P2143 ?obj filter(?obj > 3881796000.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'human genome', 'p': 'genome size', 'o': '?x0', '?x0': '3881796000.0'}

 Q: Where is the drainage basin of the Brazos River?
 SPARQL: select distinct ?answer where { wd:Q903306 wdt:P4614 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brazos River', 'p': 'drainage basin', 'o': '?x0'}

 Q: What is the {human} for {doctoral advisor} of {C. V. Raman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P184 wd:Q60429 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral advisor', 'o': 'C. V. Raman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {viceroy} for {office held by head of state} of {Tasmania}
 SPARQL:  select distinct ?obj where { wd:Q34366 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q244741 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tasmania', 'p': 'office held by head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'viceroy'}}

 Q: what is the {applies to part} for {Kolyma River} has {coordinate location} as {161.364} ?
 SPARQL: SELECT ?value WHERE { wd:Q78879 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'161.364')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kolyma', 'p': 'coordinates', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'coordinates', 'o': '161.364'}}}

 Q: What is the court and application of jurisdiction of Roe v. Wade?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q300950 wdt:P4884 ?ans_1 . wd:Q300950 wdt:P1001 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Roe v. Wade', 'p': 'court', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Roe v. Wade', 'p': 'of jurisdiction', 'o': '?x1'}]

 Q: What are the phantom island which start with the letter T
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q129264 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phantom island'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {urban municipality of Germany} for {twinned administrative body} of {Cardiff}
 SPARQL:  select distinct ?obj where { wd:Q10690 wdt:P190 ?obj . ?obj wdt:P31 wd:Q42744322 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cardiff', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'urban municipality of Germany'}}

 Q: What is {position held} of {David Lloyd George} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q134982 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {portrait of} of {pendant to} of {Woman Drinking Wine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q32995247 wdt:P1639 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrait of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Woman Drinking Wine', 'p': 'pendant to', 'o': '$y0'}}

 Q: What is the {taxon} for {has effect} of {cholera}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1542 wd:Q12090 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has effect', 'o': 'cholera', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: Did {Schutzstaffel} {subsidiary} {Reich Main Security Office} and {21st Waffen Mountain Division of the SS Skanderbeg} ?
 SPARQL: ASK WHERE { wd:Q44687 wdt:P355 wd:Q152698 . wd:Q44687 wdt:P355 wd:Q160776 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Schutzstaffel', 'p': 'subsidiary', 'o': '?x0', '?x0': 'Reich Main Security Office'}, {'h': 'IS', 'v': '?x1', 's': 'Schutzstaffel', 'p': 'subsidiary', 'o': '?x1', '?x1': '21st Waffen Mountain Division of the SS Skanderbeg'}]

 Q: When did Supernatural win the Favorite Pop/Rock Album award?
 SPARQL: SELECT ?value WHERE { wd:Q819127 p:P166 ?s . ?s ps:P166 wd:Q19858080 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Supernatural', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Favorite Pop/Rock Album'}, 't': '?x0'}

 Q: What is the {international organization} for {subsidiary} of {World Bank}
 SPARQL:  select distinct ?obj where { wd:Q7164 wdt:P355 ?obj . ?obj wdt:P31 wd:Q484652 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'World Bank', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international organization'}}

 Q: What was the population of Aysén Region from 1992-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q2181 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aysén Region', 'p': 'population', 'o': '?x0', 't': '1992'}

 Q: Give me {historical process} that starts with {'g'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16622264 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical process'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: What is {position held} of {John Major} and {end cause}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9559 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1534 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Major', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Major', 'p': 'position held', 'o': '$y0'}}]

 Q: Matthias Sindelar who has number of points/goals/set scored as 26.0 is a member of which sports team ?
 SPARQL: SELECT ?obj WHERE { wd:Q312865 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x filter(contains(?x,'26.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matthias Sindelar', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '26.0'}}}

 Q: Give me {traditional fairy tale} that contains the word {snow} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q42402646 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'snow')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'traditional fairy tale'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'snow'}}

 Q: Which award did One Piece receive in 2009?
 SPARQL: SELECT ?obj WHERE { wd:Q673 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'One Piece', 'p': 'award', 'o': '?x0', 't': '2009'}

 Q: What is the number of original networks owned by the Discovery Channel?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P449 wd:Q43404 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'network', 'o': 'Discovery Channel'}

 Q: What is {parent of} of {is son of} of {Francesco I Sforza} ?
 SPARQL: SELECT ?answer WHERE { wd:Q310536 wdt:P25 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Francesco I Sforza', 'p': 'parent', 'o': '$y0'}}

 Q: what is the {applies to part} for {Po} has {coordinate location} as {12.5469} ?
 SPARQL: SELECT ?value WHERE { wd:Q643 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'12.5469')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Po', 'p': 'location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'location', 'o': '12.5469'}}}

 Q: What are the fictional detective which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3656924 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional detective'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: "Who is {nomination received} of {George Marshall}, which has {champion} is {Mikhail Gorbachev} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q151414 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q30487}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Marshall', 'p': 'nomination received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'champion', 'o': 'Mikhail Gorbachev'}}

 Q: Who is the showrunner of The Apprentice, who also has a sister called Robert Trump?
 SPARQL: SELECT ?answer WHERE { wd:Q863122 wdt:P1431 ?answer . ?answer wdt:P3373 wd:Q28748031}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Apprentice', 'p': 'showrunner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister', 'o': 'Robert Trump'}}

 Q: Were Dutch and Hungarian the official languages of the Holy Roman Empire?
 SPARQL: ASK WHERE { wd:Q12548 wdt:P37 wd:Q7411 . wd:Q12548 wdt:P37 wd:Q9067 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Holy Roman Empire', 'p': 'official language', 'o': '?x0', '?x0': 'Dutch'}, {'h': 'IS', 'v': '?x1', 's': 'Holy Roman Empire', 'p': 'official language', 'o': '?x1', '?x1': 'Hungarian'}]

 Q: What type of clothing do the characters in The Silent Stars Go By wear?
 SPARQL: SELECT ?answer WHERE { wd:Q7764234 wdt:P674 ?X . ?X wdt:P3828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'clothing', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Silent Stars Go By', 'p': 'characters', 'o': '$y0'}}

 Q: What is {pronunciation audio} of {coffee} that is {language of work or name} is {Georgian} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8486 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q8108 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'coffee', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language', 'o': 'Georgian'}}}

 Q: tell me demigod of Greek mythology wears hide  starts with h
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23015925 . ?sbj wdt:P3828 wd:Q3291230 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'demigod of Greek mythology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wears', 'o': 'hide'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: What is {cardinality of this set} of {input set} of {complex logarithm} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2520206 wdt:P1851 ?X . ?X wdt:P2820 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cardinality of this set', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'complex logarithm', 'p': 'input set', 'o': '$y0'}}

 Q: Tell me the famine which starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q168247 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'famine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {directs} of {political office held} of {Eduardo López-Dóriga} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55547556 wdt:P39 ?X . ?X wdt:P2389 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'directs', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eduardo López-Dóriga', 'p': 'political office held', 'o': '$y0'}}

 Q: What is {position held} of {Ramsay MacDonald} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q166646 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramsay MacDonald', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramsay MacDonald', 'p': 'position held', 'o': '$y0'}}]

 Q: tell me about thoracic disease that contains the word syndrome in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18553676 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'syndrome')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'thoracic disease'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'syndrome'}}

 Q: What is <World Heritage Tentative List ID> of <University of Tehran> ?
 SPARQL: select distinct ?answer where { wd:Q737835 wdt:P4171 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Tehran', 'p': 'World Heritage Tentative List ID', 'o': '?x0'}

 Q: what is the {language of work or name} for {Os Lusíadas} has {translator} as {Juan González de la Pezuela y Ceballos} ?
 SPARQL: SELECT ?value WHERE { wd:Q781898 p:P655 ?s . ?s ps:P655 wd:Q1710495 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Os Lusíadas', 'p': 'translator', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'translator', 'o': 'Juan González de la Pezuela y Ceballos'}}}

 Q: "Who is {tenant} of {Windsor Castle}, that has {employment} as {postage stamp designer} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q42646 wdt:P466 ?answer . ?answer wdt:P106 wd:Q2000124}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Windsor Castle', 'p': 'tenant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employment', 'o': 'postage stamp designer'}}

 Q: what is the {end time} for {Veronica Lake} has {spouse} as {André de Toth} ?
 SPARQL: SELECT ?value WHERE { wd:Q84232 p:P26 ?s . ?s ps:P26 wd:Q518244 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Veronica Lake', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'André de Toth'}}}

 Q: which was the series ordinal  for ether which has  ionization energy as 9.53?
 SPARQL: SELECT ?value WHERE { wd:Q202218 p:P2260 ?s . ?s ps:P2260 ?x filter(contains(?x,'9.53')) . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ether', 'p': 'ionization energy', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ionization energy', 'o': '9.53'}}}

 Q: Is normal distribution named after Bernhard Riemann?
 SPARQL: ASK WHERE { wd:Q133871 wdt:P138 wd:Q42299 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'normal distribution', 'p': 'named after', 'o': '?x0', '?x0': 'Bernhard Riemann'}]

 Q: Is the apoapsis of the Aotearoa 3400 equal to 2.126?
 SPARQL: ASK WHERE { wd:Q151503 wdt:P2243 ?obj filter(?obj = 2.126) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Aotearoa', 'p': 'apoapsis', 'o': '?x0', '?x0': '2.126'}

 Q: What is the {Bourbon whiskey} with the {MIN(alcohol by volume)} whose {country of origin} is {United States of America}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q543127 . ?ent wdt:P2665 ?obj . ?ent wdt:P495 wd:Q30} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'alcohol by volume', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Bourbon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'United States of America'}}}

 Q: What is the genetic association of major depressive disorder with the determination method TAS?
 SPARQL: SELECT ?obj WHERE { wd:Q42844 p:P2293 ?s . ?s ps:P2293 ?obj . ?s pq:P459 wd:Q23190853 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'major depressive disorder', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'TAS'}}}

 Q: what is the {end time} for {Korea} has {country} as {Later Three Kingdoms} ?
 SPARQL: SELECT ?value WHERE { wd:Q18097 p:P17 ?s . ?s ps:P17 wd:Q698268 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Korea', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Later Three Kingdoms'}}}

 Q: What book series did the author Dante Alighieri write?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P50 wd:Q1067 . ?sbj wdt:P31 wd:Q277759 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Dante Alighieri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book series'}}

 Q: Tell me biogeochemical cycle whose name has the word cycle in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q846303 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cycle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biogeochemical cycle'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cycle'}}

 Q: What business, product, or material does Facebook offer?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q355 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product', 'o': 'Facebook', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Give me {association football club} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q476028 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'association football club'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Into how many editions has Othello been translated?
 SPARQL:  select distinct ?obj where { wd:Q26833 wdt:P747 ?obj . ?obj wdt:P31 wd:Q39811647 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Othello', 'p': 'editions', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'translated'}}

 Q: What is {result} of {found in species} of {hypothetical protein lpg2828} ?
 SPARQL: SELECT ?answer WHERE { wd:Q22333459 wdt:P703 ?X . ?X wdt:P1542 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'result', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hypothetical protein', 'p': 'found in species', 'o': '$y0'}}

 Q: What is {educated at} and {field of work} of {{Dimitri Mendeleyev} has {academic degree} as {professor}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q9106 p:P512 ?s . ?s ps:P512 wd:Q121594 . ?s pq:P69 ?value1 . ?s pq:P101 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dimitri Mendeleyev', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'professor'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'field of work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dimitri Mendeleyev', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'professor'}}}]

 Q: What team did Peter Schmeichel start playing for in 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q182314 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Schmeichel', 'p': 'team', 'o': '?x0', 't': '1984'}

 Q: Where is the name of the continent of the mountain belt in Mount Caywood?
 SPARQL: SELECT ?answer WHERE { wd:Q6920087 wdt:P4552 ?X . ?X wdt:P30 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mount Caywood', 'p': 'mountain belt', 'o': '$y0'}}

 Q: Did {Mexico_City} {contains administrative territorial entity} {Azcapotzalco}?
 SPARQL: ASK WHERE { wd:Q1489 wdt:P150 wd:Q994867 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mexico City', 'p': 'contains administrative territorial entity', 'o': '?x0', '?x0': 'Azcapotzalco'}]

 Q: Which are the grants academic degrees for Master of Business Administration?
 SPARQL: select distinct ?answer where { ?answer wdt:P5460 wd:Q191701}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'grants', 'o': 'Master of Business Administration'}

 Q: what was the country of Tyumen in 1991-12-27
 SPARQL: SELECT ?obj WHERE { wd:Q5815 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tyumen', 'p': 'country', 'o': '?x0', 't': '1991'}

 Q: What is {genetic association} of {regulates (molecular biology)} of {hsa-miR-5006-3p} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27593301 wdt:P128 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hsa-miR-5006-3p', 'p': 'regulates (molecular biology)', 'o': '$y0'}}

 Q: Is the toughness of Grivory GM-4H less than 7.2?
 SPARQL: ASK WHERE { wd:Q57051271 wdt:P5520 ?obj filter(?obj < 7.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Grivory GM-4H', 'p': 'toughness', 'o': '?x0', '?x0': '7.2'}

 Q: what is {PhD advisor} of {favorite player} of {Anthony Giddens, Baron Giddens} ?
 SPARQL: SELECT ?answer WHERE { wd:Q220008 wdt:P737 ?X . ?X wdt:P184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anthony Giddens, Baron Giddens', 'p': 'favorite player', 'o': '$y0'}}

 Q: Give me {scale of temperature} that {measured physical quantity} {temperature} and which that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2394680 . ?sbj wdt:P111 wd:Q11466 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scale of temperature', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'temperature'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is the temperature of toxaphene that has a density of 1.65?
 SPARQL: SELECT ?value WHERE { wd:Q417157 p:P2054 ?s . ?s ps:P2054 ?x filter(contains(?x,'1.65')) . ?s pq:P2076 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'toxaphene', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'density', 'o': '1.65'}}}

 Q: "What is name of John Foster Dulles Latin script that has alphabet?"
 SPARQL: SELECT ?answer WHERE { wd:Q223677 wdt:P735 ?answer . ?answer wdt:P282 wd:Q8229}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Foster Dulles', 'p': 'name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alphabet', 'o': 'Latin script'}}

 Q: Is Ridley Scott the child of Luke Scott and Jordan Scott?
 SPARQL: ASK WHERE { wd:Q56005 wdt:P40 wd:Q21066699 . wd:Q56005 wdt:P40 wd:Q452925 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ridley Scott', 'p': 'child', 'o': '?x0', '?x0': 'Luke Scott'}, {'h': 'IS', 'v': '?x1', 's': 'Ridley Scott', 'p': 'child', 'o': '?x1', '?x1': 'Jordan Scott'}]

 Q: What is the {news conference} for {participant} of {Donald Trump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q22686 . ?sbj wdt:P31 wd:Q272281 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Donald Trump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'news conference'}}

 Q: who unit of density for measured by of density?
 SPARQL:  select distinct ?obj where { wd:Q29539 wdt:P1880 ?obj . ?obj wdt:P31 wd:Q10387685 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'density', 'p': 'measured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of density'}}

 Q: Tell me the point in time for Pierre de Fermat has academic degree as Bachelor of Laws?
 SPARQL: SELECT ?value WHERE { wd:Q75655 p:P512 ?s . ?s ps:P512 wd:Q798137 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pierre de Fermat', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Bachelor of Laws'}, 't': '?x0'}

 Q: Which  anatomical location of place built of zygote ?
 SPARQL: SELECT ?answer WHERE { wd:Q170145 wdt:P1071 ?X . ?X wdt:P927 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'anatomical location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'zygote', 'p': 'place built', 'o': '$y0'}}

 Q: Which is Greek nymph which was the partner of Apollo?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P451 wd:Q37340 . ?sbj wdt:P31 wd:Q3346693 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partner', 'o': 'Apollo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greek nymph'}}

 Q: what is the {start time} for {Prince Philip, Duke of Edinburgh} has {coat of arms image} as {Arms of Philip Mountbatten (1947-1949).svg} ?
 SPARQL: SELECT ?value WHERE { wd:Q80976 p:P94 ?s . ?s ps:P94 ?x filter(contains(?x,'Arms of Philip Mountbatten (1947-1949).svg')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prince Philip, Duke of Edinburgh', 'p': 'coat of arms image', 'o': '$y0'}}

 Q: what is the {nominee} for {Gladiator} has {nominated for} as {Academy Award for Best Sound Mixing} ?
 SPARQL: SELECT ?value WHERE { wd:Q128518 p:P1411 ?s . ?s ps:P1411 wd:Q830079 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gladiator', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Sound'}}}

 Q: What are the national sports team  which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1194951 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national sports team'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What children did the brothers and sisters of Emmanuel Philibert, Prince of Carignano, have?
 SPARQL: SELECT ?answer WHERE { wd:Q2349136 wdt:P3373 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmanuel Philibert, Prince of Carignano', 'p': 'sister', 'o': '$y0'}}

 Q: What is {position held} of {John Tyler} that is {replaces} is {William Henry Harrison} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11881 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q11869 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Tyler', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'William Henry Harrison'}}}

 Q: Which is FIFA player ID for Stanislav Cherchesov?
 SPARQL: select distinct ?answer where { wd:Q699557 wdt:P1469 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stanislav Cherchesov', 'p': 'FIFA player ID', 'o': '?x0'}

 Q: Who is {followed by} and {follows} of {{Guy of Lusignan} has {noble title} as {King of Jerusalem}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q294192 p:P97 ?s . ?s ps:P97 wd:Q693614 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'King of Jerusalem'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'King of Jerusalem'}}}]

 Q: Which is the historic era in Epaminondas having completed in 600-1-1?
 SPARQL: SELECT ?answer WHERE { wd:Q190436 wdt:P2348 ?answer . ?answer wdt:P582 ?x FILTER(contains(?x,'600-1-1'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Epaminondas', 'p': 'era', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'completed in', 'o': '600-1-1'}}

 Q: What was George Washington's military rank between 1774 and 1796?
 SPARQL: SELECT ?obj WHERE { wd:Q23 p:P410 ?s . ?s ps:P410 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1796')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Washington', 'p': 'military rank', 'o': '?x0', 't': '1796'}

 Q: What is {nominated for} of {Laurence Olivier} that is {statement is subject of} is {12th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q55245 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q508513 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Laurence Olivier', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '12th Academy Awards'}}}

 Q: Which is the Crossref funder ID of the National Museum of American History?
 SPARQL: select distinct ?answer where { wd:Q148584 wdt:P3153 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'National Museum of American History', 'p': 'Crossref funder ID', 'o': '?x0'}

 Q: What is the SIRUTA code of Constanta?
 SPARQL: select distinct ?answer where { wd:Q79808 wdt:P843 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Constanta', 'p': 'SIRUTA code', 'o': '?x0'}

 Q: What is <Brockhaus Enzyklopädie online ID> of <Chile> ?
 SPARQL: select distinct ?answer where { wd:Q298 wdt:P5019 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chile', 'p': 'Brockhaus Enzyklopädie online ID', 'o': '?x0'}

 Q: Name a Luther city that contain the word "worms " in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1547289 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'worms')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Luther city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'worms'}}

 Q: what is the {start time} for {Roman Abramovich} has {spouse} as {Irina Abramovich} ?
 SPARQL: SELECT ?value WHERE { wd:Q171428 p:P26 ?s . ?s ps:P26 wd:Q46109451 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roman Abramovich', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Irina Abramovich'}}}

 Q: Is it true that the target interest rate of Central Bank of Azerbaijan equals to 5.25?
 SPARQL: ASK WHERE { wd:Q190230 wdt:P2661 ?obj filter(?obj = 5.25) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Central Bank of Azerbaijan', 'p': 'target interest rate', 'o': '?x0', '?x0': '5.25'}

 Q: Was Rupert Grint's occupation a actor and child actor?
 SPARQL: ASK WHERE { wd:Q19190 wdt:P106 wd:Q33999 . wd:Q19190 wdt:P106 wd:Q970153 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Rupert Grint', 'p': 'occupation', 'o': '?x0', '?x0': 'actor'}, {'h': 'IS', 'v': '?x1', 's': 'Rupert Grint', 'p': 'occupation', 'o': '?x1', '?x1': 'child actor'}]

 Q: Which is stated in Tripitaka?
 SPARQL: select distinct ?answer where { ?answer wdt:P248 wd:Q1321432}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stated in', 'o': 'Tripitaka'}

 Q: What is the  Mississippi Sports Hall of Fame ID  for Brett Favre ?
 SPARQL: select distinct ?answer where { wd:Q267088 wdt:P4368 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brett Favre', 'p': 'Mississippi Sports Hall of Fame ID', 'o': '?x0'}

 Q: What is {academic area} of {works at} of {Viktor Bespalov} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28792298 wdt:P108 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Viktor Bespalov', 'p': 'works at', 'o': '$y0'}}

 Q: Which is the GCatholic church ID of Archbasilica of St. John Lateran?
 SPARQL: select distinct ?answer where { wd:Q84090 wdt:P2971 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Archbasilica of St. John Lateran', 'p': 'GCatholic church ID', 'o': '?x0'}

 Q: What is {member of sports team} of {Roger Milla} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q168540 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roger Milla', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roger Milla', 'p': 'team', 'o': '$y0'}}]

 Q: What is {end time} and {place of marriage} of {{Marilyn Monroe} has {spouse} as {James Dougherty}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q4616 p:P26 ?s . ?s ps:P26 wd:Q946783 . ?s pq:P582 ?value1 . ?s pq:P2842 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marilyn Monroe', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'James Dougherty'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'place of marriage', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marilyn Monroe', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'James Dougherty'}}}]

 Q: Which is the Kinopoisk person ID for Stanley Donen?
 SPARQL: select distinct ?answer where { wd:Q48765 wdt:P2604 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stanley Donen', 'p': 'Kinopoisk person ID', 'o': '?x0'}

 Q: Name a disease that starts with the letter Y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12136 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is on geographical feature of Greater Antilles whose continent is North America ?
 SPARQL: SELECT ?answer WHERE { wd:Q128011 wdt:P706 ?answer . ?answer wdt:P30 wd:Q49}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Greater Antilles', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'North America'}}

 Q: Ignatius of Loyola belongs to which Catholic order?
 SPARQL:  select distinct ?obj where { wd:Q44281 wdt:P611 ?obj . ?obj wdt:P31 wd:Q391009 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ignatius of Loyola', 'p': 'order', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Catholic order'}}

 Q: What is the {product} of {papermaking} which is {made of} {bleach} called?
 SPARQL: SELECT ?answer WHERE { wd:Q335415 wdt:P1056 ?answer . ?answer wdt:P186 wd:Q11587}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'papermaking', 'p': 'product', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'made of', 'o': 'bleach'}}

 Q: What is {fate} of {operated by} of {SS Naronic} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1298146 wdt:P137 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'SS Naronic', 'p': 'operated by', 'o': '$y0'}}

 Q: What is {chairwoman} of {working for} of {Vannevar Bush} ?
 SPARQL: SELECT ?answer WHERE { wd:Q299595 wdt:P108 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chairwoman', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vannevar Bush', 'p': 'working for', 'o': '$y0'}}

 Q: What is the {human} for {doctoral student} of {Jonas Salk}
 SPARQL:  select distinct ?obj where { wd:Q200101 wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jonas Salk', 'p': 'doctoral student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {location of publication} of {Shen Bao}, that has {partner city} is {Rotterdam} ?
 SPARQL: SELECT ?answer WHERE { wd:Q919710 wdt:P291 ?answer . ?answer wdt:P190 wd:Q34370}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shen Bao', 'p': 'location of publication', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Rotterdam'}}

 Q: What is {has regions} of {Lower Saxony}, that has {on the coast of} is {Maade} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1197 wdt:P150 ?answer . ?answer wdt:P206 wd:Q1882240}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lower Saxony', 'p': 'has regions', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on the coast of', 'o': 'Maade'}}

 Q: How many {medical condition treated} are for {diazepam} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q210402 wdt:P2175 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'diazepam', 'p': 'medical condition treated', 'o': '?x0'}

 Q: What is {has rural cities} of {Pará}, that has {inhabitants} is {13155} ?
 SPARQL: SELECT ?answer WHERE { wd:Q39517 wdt:P150 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'13155'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Para', 'p': 'has rural cities', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '13155'}}

 Q: What is {position held} of {John Jay} that is {replaced by} is {William Carmichael} ?
 SPARQL: SELECT ?obj WHERE { wd:Q310847 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q8006569 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Jay', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'William Carmichael'}}}

 Q: What are the type of food or dish that contains the word torta in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19861951 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'torta')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of food or dish'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'torta'}}

 Q: which type of quantum particle has highest gyromagnetic ratio?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2222 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'gyromagnetic ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: Tell me literary genre whose name has the word vita in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q223393 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vita')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vita'}}

 Q: What is {parent company of} of {works at} of {Roberta Bondar} ?
 SPARQL: SELECT ?answer WHERE { wd:Q258385 wdt:P108 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent company of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberta Bondar', 'p': 'works at', 'o': '$y0'}}

 Q: What is {working language} of {sovereign state} of {Alice Springs} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17872 wdt:P17 ?X . ?X wdt:P2936 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'working language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alice Springs', 'p': 'state', 'o': '$y0'}}

 Q: What is {short name} of {Aruba} that is {instance of} is {emoji flag sequence} ?
 SPARQL: SELECT ?obj WHERE { wd:Q21203 p:P1813 ?s . ?s ps:P1813 ?obj . ?s pq:P31 wd:Q28840786 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'short name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aruba', 'p': 'short name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'emoji flag sequence'}}}

 Q: What is native language for Vincent Auriol ?
 SPARQL: select distinct ?answer where { wd:Q158772 wdt:P103 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vincent Auriol', 'p': 'native language', 'o': '?x0'}

 Q: What is the {human} for {member of} of {Oracle Corporation}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P463 wd:Q19900 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Oracle Corporation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {musical composition} for {characters} of {Dionysus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q41680 . ?sbj wdt:P31 wd:Q207628 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Dionysus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical composition'}}

 Q: What is the {goddess} for {said to be the same as} of {Artemis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P460 wd:Q39503 . ?sbj wdt:P31 wd:Q205985 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'Artemis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'goddess'}}

 Q: What is {position held} of {Martin V} that is {replaced by} is {Eugene IV} ?
 SPARQL: SELECT ?obj WHERE { wd:Q169612 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q167561 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin V', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Eugene IV'}}}

 Q: What was the {award won} by {Cream}, that was {introduced} in {1983-0-0}?
 SPARQL: SELECT ?answer WHERE { wd:Q203736 wdt:P166 ?answer . ?answer wdt:P1619 ?x FILTER(contains(YEAR(?x),'1983'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cream', 'p': 'award', 'o': '?x0', 't': '1983'}

 Q: Which  is farthest north of place held by Balkans Campaign?
 SPARQL: SELECT ?answer WHERE { wd:Q789406 wdt:P276 ?X . ?X wdt:P1332 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'farthest north', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Balkans Campaign', 'p': 'location', 'o': '$y0'}}

 Q: What is the {position} for {officeholder} of {Jacinda Ardern}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q3606816 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Jacinda Ardern', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is {category of associated people} of {theatre season} of {Odoacer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q103333 wdt:P2348 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Odoacer', 'p': 'theatre season', 'o': '$y0'}}

 Q: Which is dantai code for Kyōto Prefecture?
 SPARQL: select distinct ?answer where { wd:Q120730 wdt:P429 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kyōto Prefecture', 'p': 'dantai code', 'o': '?x0'}

 Q: What topic of the history of Estonia has the inflation rate of consumer price index of 1.2?
 SPARQL: SELECT ?answer WHERE { wd:Q949423 wdt:P1269 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'1.2'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Estonia', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '1.2'}}

 Q: Who gave the{route of administration} of {consequence} of {cyclohexane} ?
 SPARQL: SELECT ?answer WHERE { wd:Q211433 wdt:P1542 ?X . ?X wdt:P636 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'route of administration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cyclohexane', 'p': 'consequence', 'o': '$y0'}}

 Q: What is {religious affiliation} of {ethnicity} {Sirhan Sirhan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q297112 wdt:P172 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'religious affiliation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sirhan Sirhan', 'p': 'ethnicity', 'o': '$y0'}}

 Q: Who was the inventor of the B-tree, who was awarded the Officer's Cross of the Order of Merit of the Federal Republic of Germany?
 SPARQL: SELECT ?answer WHERE { wd:Q677051 wdt:P61 ?answer . ?answer wdt:P166 wd:Q10905334}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'B-tree', 'p': 'inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': "Officer's Cross of the Order of Merit of the Federal Republic of Germany"}}

 Q: what is the {burial plot reference} for {Jean-François Champollion} has {place of burial} as {Père Lachaise Cemetery} ?
 SPARQL: SELECT ?value WHERE { wd:Q260 p:P119 ?s . ?s ps:P119 wd:Q311 . ?s pq:P965 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'burial plot reference', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean-François Champollion', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of burial', 'o': 'Père Lachaise Cemetery'}}}

 Q: What is {speakers of language} of {working languages} of {Kingdom of England} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179876 wdt:P2936 ?X . ?X wdt:P1098 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'speakers of language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingdom of England', 'p': 'working languages', 'o': '$y0'}}

 Q: Who is the general manager of the Chicago Cubs?
 SPARQL: select distinct ?answer where { wd:Q246782 wdt:P505 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chicago Cubs', 'p': 'general manager', 'o': '?x0'}

 Q: Is the power consumed by the World Space Observatory more than 1200?
 SPARQL: ASK WHERE { wd:Q2569316 wdt:P2791 ?obj filter(?obj > 1200.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'World Space Observatory', 'p': 'power consumed', 'o': '?x0', '?x0': '1200.0'}

 Q: Is Vidhan Sabha executive body of Assam?
 SPARQL:  select distinct ?obj where { wd:Q1164 wdt:P208 ?obj . ?obj wdt:P31 wd:Q3091020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Assam', 'p': 'executive body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Vidhan Sabha'}}

 Q: When was Vasily Chuikov awarded the Order of Lenin?
 SPARQL: SELECT ?value WHERE { wd:Q157594 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vasily Chuikov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of Lenin'}, 't': '?x0'}

 Q: Give me {guide book} that contains the word {ארץ} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q223638 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ארץ')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'guide book'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ארץ'}}

 Q: What is {working for} of {film producer} of {My Blue Heaven} ?
 SPARQL: SELECT ?answer WHERE { wd:Q733607 wdt:P162 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'working for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'My Blue Heaven', 'p': 'producer', 'o': '$y0'}}

 Q: Tell me kinship whose name has the word uncle in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q171318 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'uncle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kinship'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'uncle'}}

 Q: what are the painting which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3305213 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: what is the {statement is subject of} for {Mercedes Ruehl} has {nominated for} as {Academy Award for Best Supporting Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q232933 p:P1411 ?s . ?s ps:P1411 wd:Q106301 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mercedes Ruehl', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Best Supporting Actress'}}}

 Q: What number follows -2?
 SPARQL: SELECT ?obj WHERE { wd:Q204 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P155 wd:Q3827340 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'o', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': '-2'}}}

 Q: Was the thickness of the Bronze Age equal to .615?
 SPARQL: ASK WHERE { wd:Q526178 wdt:P2610 ?obj filter(?obj = 0.615) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'The Age of Bronze', 'p': 'thickness', 'o': '?x0', '?x0': '0.615'}

 Q: What what is gas giant child astronomical body by Enceladus and also which starts with letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q121750 . ?sbj wdt:P398 wd:Q3303 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gas giant', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Enceladus'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Is the Z scale scale 1:220?
 SPARQL: ASK WHERE { wd:Q1967226 wdt:P1752 ?obj filter(?obj = 220) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Z scale', 'p': 'scale', 'o': '?x0', '?x0': '220'}

 Q: Did {The_X-Files} {cast member} {George Murdock}?
 SPARQL: ASK WHERE { wd:Q2744 wdt:P161 wd:Q132217 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The X-Files', 'p': 'cast member', 'o': '?x0', '?x0': 'George Murdock'}]

 Q: What is the CDB Chemical ID for isopropyl alcohol?
 SPARQL: select distinct ?answer where { wd:Q16392 wdt:P2072 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'isopropyl alcohol', 'p': 'CDB Chemical ID', 'o': '?x0'}

 Q: Is the beats per minute of the Colorless Aura equal 50?
 SPARQL: ASK WHERE { wd:Q54906840 wdt:P1725 ?obj filter(?obj = 50) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Colorless Aura', 'p': 'beats per minute', 'o': '?x0', '?x0': '50'}

 Q: Which is the Darts Database player ID of Phil Taylor?
 SPARQL: select distinct ?answer where { wd:Q550313 wdt:P3621 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phil Taylor', 'p': 'Darts Database player ID', 'o': '?x0'}

 Q: What is {county seat for} of {died in} of {Innokenty Smoktunovsky} ?
 SPARQL: SELECT ?answer WHERE { wd:Q380250 wdt:P20 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Innokenty Smoktunovsky', 'p': 'died in', 'o': '$y0'}}

 Q: What is {language official} of {World Baseball Softball Confederation}, that has {typology} is {nominative–accusative language} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11362472 wdt:P37 ?answer . ?answer wdt:P4132 wd:Q178435}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'World\xa0Baseball Softball\xa0Confederation', 'p': 'language official', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'typology', 'o': 'nominative–accusative language'}}

 Q: what is the {start time} for {Arab League} has {shares border with} as {Ethiopia} ?
 SPARQL: SELECT ?value WHERE { wd:Q7172 p:P47 ?s . ?s ps:P47 wd:Q115 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arab League', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'border', 'o': 'Ethiopia'}}}

 Q: What is the National Park Foundation ID for the Rocky Mountain National Park?
 SPARQL: select distinct ?answer where { wd:Q777183 wdt:P3516 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rocky Mountain National Park', 'p': 'National Park Foundation ID', 'o': '?x0'}

 Q: Who is the  {human} for {doctoral advisor} of {Claude Shannon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P184 wd:Q92760 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral advisor', 'o': 'Claude Shannon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is SIC code of forestry ?
 SPARQL: select distinct ?answer where { wd:Q38112 wdt:P3242 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'forestry', 'p': 'SIC code', 'o': '?x0'}

 Q: What is {head of government} of {Seattle} and {work period (start)}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P2031 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (start)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'head of government', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}]

 Q: What is Angela Merkel's abgeordnetenwatch.de politician ID?
 SPARQL: select distinct ?answer where { wd:Q567 wdt:P5355 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Angela Merkel', 'p': 'abgeordnetenwatch.de politician ID', 'o': '?x0'}

 Q: What award did Marie Curie receive in 1911?
 SPARQL: SELECT ?obj WHERE { wd:Q7186 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1911')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marie Curie', 'p': 'award', 'o': '?x0', 't': '1911'}

 Q: What are the comic strip which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q838795 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comic strip'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Is the age of majority of the USA equal to t1410874016?
 SPARQL: ASK WHERE { wd:Q30 wdt:P2997 ?obj filter(?obj = t1410874016) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'USA', 'p': 'age of majority', 'o': '?x0', '?x0': 't1410874016'}

 Q: When did award received of Alice Munro and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q234819 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alice Munro', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alice Munro', 'p': 'award received', 'o': '$y0'}}]

 Q: which organization name starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43229 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Who is the {aircraft fleet} for {uses} of {airplane}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2283 wd:Q197 . ?sbj wdt:P31 wd:Q17372500 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'airplane', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft fleet'}}

 Q: What is the genus with the highest chromosome count in the taxon rank?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P5230 ?obj . ?ent wdt:P105 wd:Q34740 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'chromosome count', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'taxon rank', 'o': 'genus'}}}

 Q: What is EDIT16 catalogue author ID for Leo X ?
 SPARQL: select distinct ?answer where { wd:Q49237 wdt:P5492 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leo X', 'p': 'EDIT16 catalogue author ID', 'o': '?x0'}

 Q: What is the {human} for {collection} of {Venice}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P195 wd:Q641 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'Venice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mankind'}}

 Q: What award was Maria Montessori nominated for on January 1, 1950?
 SPARQL: SELECT ?obj WHERE { wd:Q131117 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1950')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maria Montessori', 'p': 'nominated for', 'o': '?x0', 't': '1950'}

 Q: Does the height of the BMW i8 equal 1?
 SPARQL: ASK WHERE { wd:Q796799 wdt:P2048 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'BMW i8', 'p': 'height', 'o': '?x0', '?x0': '1'}

 Q: What is {position held} of {Martin Van Buren} that is {replaced by} is {Edward Livingston} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11820 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q544396 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Van Buren', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Edward Livingston'}}}

 Q: What family of vehicles starts with the letter "v"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22999537 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'family of vehicles'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the {protein} for {physically interacts with} of {oxytocin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P129 wd:Q169960 . ?sbj wdt:P31 wd:Q8054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'physically interacts with', 'o': 'oxytocin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'protein'}}

 Q: Which is the LTI Korea Library ID for Choe Chiwon?
 SPARQL: select distinct ?answer where { wd:Q487042 wdt:P4760 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Choe Chiwon', 'p': 'LTI Korea Library ID', 'o': '?x0'}

 Q: What are the ancient civilization which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28171280 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient civilization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What's the name of a novel series that starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1667921 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'novel series'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {award received} of {György Ligeti} that is {point in time} is {2000-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q154331 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'György Ligeti', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: What are the municipality of the Netherlands  which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2039348 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of the Netherlands'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is the genetic association that can be found in species with post-traumatic stress disorder?
 SPARQL: SELECT ?answer WHERE { wd:Q202387 wdt:P2293 ?X . ?X wdt:P703 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'found in species', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'post-traumatic stress disorder', 'p': 'genetic association', 'o': '$y0'}}

 Q: What is {place of residence} of {Pierre Curie}, that has {timezone} is {UTC−02:00} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37463 wdt:P551 ?answer . ?answer wdt:P421 wd:Q6536}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pierre Curie', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timezone', 'o': 'UTC-02:00'}}

 Q: What is {safety classification and labelling} of {magnesium sulfate anhydrous} that is {NFPA Fire} is {0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q288266 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P994 ?x filter(contains(?x,'0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'magnesium sulfate', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Fire', 'o': '0'}}}

 Q: Who was the head of government in Palestine on June 2, 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q219060 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Palestine', 'p': 'head of government', 'o': '?x0', 't': '2014'}

 Q: What non-metropolitan county shares a border with Hampshire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q23204 . ?sbj wdt:P31 wd:Q769603 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Hampshire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'non-metropolitan county'}}

 Q: Is the position angle of northwest by north equal to 391.5?
 SPARQL: ASK WHERE { wd:Q20968407 wdt:P2211 ?obj filter(?obj = 391.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'northwest by north', 'p': 'position angle', 'o': '?x0', '?x0': '391.5'}

 Q: Which are the first aid measures of petroleum jelly?
 SPARQL: select distinct ?answer where { ?answer wdt:P2239 wd:Q457239}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'first aid measures', 'o': 'petroleum jelly'}

 Q: Which is Xeno-canto species ID for Meleagris gallopavo?
 SPARQL: select distinct ?answer where { wd:Q26844 wdt:P2426 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Meleagris gallopavo', 'p': 'Xeno-canto species ID', 'o': '?x0'}

 Q: What is the secular state of the MIN(PPP GDP per capita) whose diplomatic relation is with India?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q859563 . ?ent wdt:P2299 ?obj . ?ent wdt:P530 wd:Q668} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'PPP GDP per capita', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'secular state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'India'}}}

 Q: what is the {located in the administrative territorial entity} for {Edward Hopper} has {place of death} as {New York City} ?
 SPARQL: SELECT ?value WHERE { wd:Q203401 p:P20 ?s . ?s ps:P20 wd:Q60 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward Hopper', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'New York City'}}}

 Q: What is {nominated for} of {Gone with the Wind} that is {nominee} is {Ray Rennahan} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2875 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q367614 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gone with the Wind', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Ray Rennahan'}}}

 Q: How many {maintained by} are to/by {Ōita Prefecture} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P126 wd:Q133924 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'maintained by', 'o': 'Ōita Prefecture'}

 Q: What is the {former administrative territorial entity} for {located on terrain feature} of {classical antiquity}
 SPARQL:  select distinct ?obj where { wd:Q486761 wdt:P706 ?obj . ?obj wdt:P31 wd:Q19953632 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'classical antiquity', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'former administrative territorial entity'}}

 Q: How many file formats are done on Portable Document Format?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2701 wd:Q42332 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'file format', 'o': 'Portable Document Format'}

 Q: How many {carries} are to/by {road} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2505 wd:Q34442 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'carries', 'o': 'road'}

 Q: What city became a twin city of Klagenfurt in 1990?
 SPARQL: SELECT ?obj WHERE { wd:Q41753 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Klagenfurt', 'p': 'twin city', 'o': '?x0', 't': '1990'}

 Q: what is the {start time} for {Julie Andrews} has {spouse} as {Tony Walton} ?
 SPARQL: SELECT ?value WHERE { wd:Q161819 p:P26 ?s . ?s ps:P26 wd:Q2803671 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julie Andrews', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Tony Walton'}}}

 Q: What was the population of Lucknow in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q47916 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lucknow', 'p': 'population', 'o': '?x0', 't': '2011'}

 Q: Who is the person for the military branch of KGB?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P241 wd:Q80919 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'military branch', 'o': 'KGB', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Is the watershed area of the rio de Santa Maria Zobenigo greater than 0.00083176?
 SPARQL: ASK WHERE { wd:Q3432782 wdt:P2053 ?obj filter(?obj > 0.00083176) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'rio de Santa Maria Zobenigo', 'p': 'watershed area', 'o': '?x0', '?x0': '0.00083176'}

 Q: What is {mother} and {date of death} of {{Pedro I} has {child} as {Princess Januária of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q261802 . ?s pq:P25 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Januária of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Januária of Brazil'}}}]

 Q: What is {contains administrative territorial entity} of {Liguria} that is {start time} is {2015-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1256 p:P150 ?s . ?s ps:P150 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Liguria', 'p': 'contains administrative territorial entity', 'o': '?x0', 't': '2015'}

 Q: What is <category for recipients of this award> of <honor> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2517 wd:Q207333}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'category for recipients of this award', 'o': 'honor'}

 Q: what is the {start time} for {Okinawa Prefecture} has {twinned administrative body} as {Santa Cruz Department} ?
 SPARQL: SELECT ?value WHERE { wd:Q766445 p:P190 ?s . ?s ps:P190 wd:Q235106 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Okinawa Prefecture', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Santa Cruz Department'}}}

 Q: What division does Jurandir Fatori's team play for?
 SPARQL: SELECT ?answer WHERE { wd:Q21020118 wdt:P54 ?X . ?X wdt:P118 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'division', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jurandir Fatori', 'p': 'team', 'o': '$y0'}}

 Q: What is the {sex or gender} and the {country of citizenship} of {Freddy_Krueger} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q329466 wdt:P21 ?ans_1 . wd:Q329466 wdt:P27 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Freddy Krueger', 'p': 'man', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Freddy Krueger', 'p': 'country of citizenship', 'o': '?x1'}]

 Q: What award did Claude Brasseur receive in 1977-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q106544 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Claude Brasseur', 'p': 'award', 'o': '?x0', 't': '1977'}

 Q: Which is the decay mode for alpha decay?
 SPARQL: select distinct ?answer where { ?answer wdt:P817 wd:Q179856}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'decay mode', 'o': 'alpha decay'}

 Q: What is {earliest date} and {together with} of {{Alexander Pushkin} has {residence} as {Ulyanovsk}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q7200 p:P551 ?s . ?s ps:P551 wd:Q5627 . ?s pq:P1319 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'earliest date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Pushkin', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Ulyanovsk'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'together with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Pushkin', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Ulyanovsk'}}}]

 Q: What is {contains} of {comes from} of {The Star-Spangled Banner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44696 wdt:P495 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'contains', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Star-Spangled Banner', 'p': 'comes from', 'o': '$y0'}}

 Q: When is the location born in Jamshid Mashayekhi which is a partner town of Havana?
 SPARQL: SELECT ?answer WHERE { wd:Q3026288 wdt:P19 ?answer . ?answer wdt:P190 wd:Q1563}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jamshid Mashayekhi', 'p': 'born in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Havana'}}

 Q: Is the dynamic viscosity of the acetic acid greater than 0.6288?
 SPARQL: ASK WHERE { wd:Q47512 wdt:P3070 ?obj filter(?obj > 0.6288) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'acetic acid', 'p': 'dynamic viscosity', 'o': '?x0', '?x0': '0.6288'}

 Q: What is {voice dubber} of {from work} of {Rukh} ?
 SPARQL: SELECT ?answer WHERE { wd:Q30060903 wdt:P1441 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'voice dubber', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rukh', 'p': 'from work', 'o': '$y0'}}

 Q: What is {educated at} of {Christopher Wren} that is {academic major} is {Latin} ?
 SPARQL: SELECT ?obj WHERE { wd:Q170373 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q397 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Wren', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'major', 'o': 'Latin'}}}

 Q: How many {exemplar of} are to/by {Gospel of John} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1574 wd:Q36766 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'exemplar of', 'o': 'Gospel of John'}

 Q: What is {language used} of {Gibraltar} that is {has quality} is {second language} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1410 p:P2936 ?s . ?s ps:P2936 ?obj . ?s pq:P1552 wd:Q125421 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gibraltar', 'p': 'language used', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'quality', 'o': 'second language'}}}

 Q: Who is the human partner of Chow Yun-fat?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P451 wd:Q181425 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partner', 'o': 'Chow Yun-fat', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {human} for {stepparent} of {Johnny Cash}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3448 wd:Q42775 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stepparent', 'o': 'Johnny Cash', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {present in work} of {Deadpool} that is {subject has role} is {title character} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1631090 p:P1441 ?s . ?s ps:P1441 ?obj . ?s pq:P2868 wd:Q3246821 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'present in work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Deadpool', 'p': 'present in work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'role', 'o': 'title character'}}}

 Q: What is in the administrative region of Fukuoka Prefecture, whose total fertility rate is 1.39?
 SPARQL: SELECT ?answer WHERE { wd:Q123258 wdt:P131 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'1.39'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fukuoka Prefecture', 'p': 'is in the administrative region of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '1.39'}}

 Q: What is field of exercise for affiliated with Terje Langli ?
 SPARQL: SELECT ?answer WHERE { wd:Q954719 wdt:P1416 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of exercise', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Terje Langli', 'p': 'affiliated with', 'o': '$y0'}}

 Q: what is the {determination method} for {migraine} has {genetic association} as {PRDM16} ?
 SPARQL: SELECT ?value WHERE { wd:Q133823 p:P2293 ?s . ?s ps:P2293 wd:Q18045527 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'migraine', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'PRDM16'}}}

 Q: what is the {start time} for {Riga} has {country} as {Latvia} ?
 SPARQL: SELECT ?value WHERE { wd:Q1773 p:P17 ?s . ?s ps:P17 wd:Q211 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Riga', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Latvia'}}}

 Q: Is the operating temperature of the Nesjavellir power station 190?
 SPARQL: ASK WHERE { wd:Q693330 wdt:P5066 ?obj filter(?obj = 190) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Nesjavellir Power Station', 'p': 'operating temperature', 'o': '?x0', '?x0': '190'}

 Q: How much was the population of Normandy in 2005?
 SPARQL: SELECT ?obj WHERE { wd:Q18677875 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Normandy', 'p': 'population', 'o': '?x0', 't': '2005'}

 Q: What is the {theatrical character} for {characters} of {Hamlet}
 SPARQL:  select distinct ?obj where { wd:Q41567 wdt:P674 ?obj . ?obj wdt:P31 wd:Q3375722 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamlet', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theatrical character'}}

 Q: What is the {ceremonial county of England} for {enclave within} of {Leicester}
 SPARQL:  select distinct ?obj where { wd:Q83065 wdt:P501 ?obj . ?obj wdt:P31 wd:Q180673 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leicester', 'p': 'enclave within', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ceremonial county of England'}}

 Q: Tell me the brain region that contains the word thalamus in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1620186 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thalamus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'brain region'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'thalamus'}}

 Q: Is the kinematic viscosity of propylene glycol equal to 0.054?
 SPARQL: ASK WHERE { wd:Q161495 wdt:P2118 ?obj filter(?obj = 0.054) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'propylene glycol', 'p': 'kinematic viscosity', 'o': '?x0', '?x0': '0.054'}

 Q: What was Leonardo Bonacci's date of death in the year 1240?
 SPARQL: SELECT ?obj WHERE { wd:Q8763 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1319 ?x filter(contains(YEAR(?x),'1240')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leonardo Bonacci', 'p': 'date of death', 'o': '?x0', 't': '1240'}

 Q: Which is the parity of Higgs boson?
 SPARQL: select distinct ?answer where { wd:Q402 wdt:P1123 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Higgs boson', 'p': 'parity', 'o': '?x0'}

 Q: what is the {for work} for {Ryan O'Neal} has {nominated for} as {Golden Globe Award for Best Actor – Motion Picture Drama} ?
 SPARQL: SELECT ?value WHERE { wd:Q272923 p:P1411 ?s . ?s ps:P1411 wd:Q593098 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Ryan O'Neal", 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Golden Globe Award for Best Actor – Motion Picture Drama'}}}

 Q: Who was the manager/director of the Metropolitan Museum of Art starting in 1910?
 SPARQL: SELECT ?obj WHERE { wd:Q160236 p:P1037 ?s . ?s ps:P1037 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1910')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Metropolitan Museum of Art', 'p': 'manager', 'o': '?x0', 't': '1910'}

 Q: what is the using of the remake of smoothsort?
 SPARQL: SELECT ?answer WHERE { wd:Q1714823 wdt:P144 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'using', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'smoothsort', 'p': 'remake of', 'o': '$y0'}}

 Q: What is the {theorem} for {proved by} of {Grigori Perelman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1318 wd:Q117346 . ?sbj wdt:P31 wd:Q65943 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'proved by', 'o': 'Grigori Perelman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theorem'}}

 Q: What is {career} of {characters} of {Buffy the Vampire Slayer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q183513 wdt:P674 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'career', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Buffy the Vampire Slayer', 'p': 'characters', 'o': '$y0'}}

 Q: Which is the public holiday that is a day in year for periodic occurrence of 21 Tishrei and contains the word sukkot in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1197685 . ?sbj wdt:P837 wd:Q2912454 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sukkot')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public holiday', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'day in year for periodic occurrence', 'o': '21 Tishrei'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'sukkot'}}

 Q: What country was started in the year 1871 in Wiesbaden?
 SPARQL: SELECT ?obj WHERE { wd:Q1721 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1871')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wiesbaden', 'p': 'country', 'o': '?x0', 't': '1871'}

 Q: what is the {start time} for {Nantes} has {head of government} as {Johanna Rolland} ?
 SPARQL: SELECT ?value WHERE { wd:Q12191 p:P6 ?s . ?s ps:P6 wd:Q16037012 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nantes', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Johanna Rolland'}}}

 Q: How many {occupation} are to/by {Shah} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P106 wd:Q184299 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'occupation', 'o': 'Shah'}

 Q: When was the population of Dalian 4480000?
 SPARQL: SELECT ?value WHERE { wd:Q74881 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'4480000')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dalian', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '4480000'}, 't': '?x0'}

 Q: What is the {human} for {head of state} of {Austrian Empire}
 SPARQL:  select distinct ?obj where { wd:Q131964 wdt:P35 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Austrian Empire', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is the liberal arts college that is affiliated with Columbia University?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q49088 . ?sbj wdt:P31 wd:Q1377182 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliated with', 'o': 'Columbia University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'liberal arts college'}}

 Q: What is Cyworld ID for Park Geun-hye ?
 SPARQL: select distinct ?answer where { wd:Q138048 wdt:P4226 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Park Geun-hye', 'p': 'Cyworld ID', 'o': '?x0'}

 Q: "Where is the birth place of John Walter, that has a general population of 8787892 ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1702096 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'8787892'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Walter', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '8787892'}}

 Q: Which is the OS grid reference for Bradford?
 SPARQL: select distinct ?answer where { wd:Q22905 wdt:P613 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bradford', 'p': 'OS grid reference', 'o': '?x0'}

 Q: How many {activating neurotransmitter} are to/by {γ-aminobutyric acid} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P928 wd:Q210021 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'activating neurotransmitter', 'o': 'γ-aminobutyric acid'}

 Q: What is the stainless steel with the highest operating temperature whose has part is nitrogen?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q172587 . ?ent wdt:P5066 ?obj . ?ent wdt:P527 wd:Q627 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'operating temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stainless steel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'nitrogen'}}}

 Q: What is {noble title} of {Charles the Bald} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q71231 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '$y0'}}]

 Q: Who was married to Lynn Margulis in June of 1957?
 SPARQL: SELECT ?obj WHERE { wd:Q234583 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1957')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lynn Margulis', 'p': 'married to', 'o': '?x0', 't': '1957'}

 Q: Which is the ISBN-13 for Watership Down?
 SPARQL: select distinct ?answer where { wd:Q936801 wdt:P212 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Watership Down', 'p': 'ISBN-13', 'o': '?x0'}

 Q: Name the subtopic of the tagline "Free, Sovereign, and Independent", a history of Honduras.
 SPARQL: SELECT ?answer WHERE { wd:Q687152 wdt:P1269 ?answer . ?answer wdt:P1451 ?x FILTER(contains(?x,'Free, Sovereign and Independent'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Honduras', 'p': 'topic of', 'o': '?x0'}

 Q: David Letterman is producer?
 SPARQL: select distinct ?answer where { ?answer wdt:P162 wd:Q217298}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'producer', 'o': 'David Letterman'}

 Q: What is the {human} with the {MAX(number of victims of killer)} whose {native language} is {French}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1345 ?obj . ?ent wdt:P103 wd:Q150 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of victims of killer', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'native language', 'o': 'French'}}}

 Q: What is the {Athletics} for {owner of} of {Stanford University}
 SPARQL:  select distinct ?obj where { wd:Q41506 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q3628059 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stanford University', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Athletics'}}

 Q: Does the SAF 2507 have a pitting resistance equivalent number that is greater than  45.24?
 SPARQL: ASK WHERE { wd:Q7388540 wdt:P5624 ?obj filter(?obj > 45.24) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'SAF 2507', 'p': 'pitting resistance equivalent number', 'o': '?x0', '?x0': '45.24'}

 Q: How many {designed by} are for {Doom} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q189784 wdt:P287 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Doom', 'p': 'designed by', 'o': '?x0'}

 Q: What is {subtopic of} of {geological history of Earth}, that has {has moon} is {Moon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2389585 wdt:P1269 ?answer . ?answer wdt:P398 wd:Q405}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'geological history of Earth', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has moon', 'o': 'Moon'}}

 Q: What is {owner} of {The Kiss}, that has {member of} is {G20} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2418237 wdt:P127 ?answer . ?answer wdt:P463 wd:Q19771}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Kiss', 'p': 'owner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'G20'}}

 Q: What is {position held} of {Félix Faure} that is {replaced by} is {Émile Loubet} ?
 SPARQL: SELECT ?obj WHERE { wd:Q296076 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q169502 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Félix Faure', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Émile Loubet'}}}

 Q: Who is the son of master Lou Harrison?
 SPARQL: SELECT ?answer WHERE { wd:Q590911 wdt:P1066 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lou Harrison', 'p': 'master', 'o': '$y0'}}

 Q: What sports team did Kapil Dev stopped being a member of in 1992?
 SPARQL: SELECT ?obj WHERE { wd:Q558189 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kapil Dev', 'p': 'team', 'o': '?x0', 't': '1992'}

 Q: Who is born at Charlotte Dujardin, which has a zip code of E?
 SPARQL: SELECT ?answer WHERE { wd:Q272533 wdt:P19 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'E'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charlotte Dujardin', 'p': 'born at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'zip code', 'o': 'e'}}

 Q: How many {participating teams} are to/by {Juventus F.C.} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1923 wd:Q1422 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'participating team', 'o': 'Juventus F.C.'}

 Q: Who first described the element osmium and was born in Selby?
 SPARQL: SELECT ?answer WHERE { wd:Q751 wdt:P61 ?answer . ?answer wdt:P19 wd:Q527846}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'osmium', 'p': 'first described', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Selby'}}

 Q: what is the {statement is subject of} for {Shirley Booth} has {award received} as {Tony Award for Best Featured Actress in a Play} ?
 SPARQL: SELECT ?value WHERE { wd:Q253308 p:P166 ?s . ?s ps:P166 wd:Q627778 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shirley Booth', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Tony Award for Best Featured Actress in a Play'}}}

 Q: What is the {human} for {mother} of {Bill Gates}
 SPARQL:  select distinct ?obj where { wd:Q5284 wdt:P25 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bill Gates', 'p': 'mother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is Lysimachus's noble title and who follows?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q32133 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lysimachus', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lysimachus', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is the {national library} with the {MIN(collection or exhibition size)} whose {instance of} is {national library}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22806 . ?ent wdt:P1436 ?obj . ?ent wdt:P31 wd:Q22806} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'collection or exhibition size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national library'}}

 Q: What is {nominated for} of {F. Murray Abraham} that is {statement is subject of} is {57th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181936 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q427425 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'F. Murray Abraham', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '57th Academy Awards'}}}

 Q: What is {local dialling code} of {publication region} of {The Dallas Morning News} ?
 SPARQL: SELECT ?answer WHERE { wd:Q889935 wdt:P291 ?X . ?X wdt:P473 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dialling code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dallas Morning News', 'p': 'publication region', 'o': '$y0'}}

 Q: Is the end time for the spouse of Larry King 1967-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q213430 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Larry King', 'p': 'spouse', 'o': '?x0', 't': '1967'}

 Q: What is {temperature} {on river} of {Iberian Peninsula} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12837 wdt:P206 ?X . ?X wdt:P2076 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iberian Peninsula', 'p': 'on river', 'o': '$y0'}}

 Q: Did {Joule} {measured physical quantity} {transparency} and {work} ?
 SPARQL: ASK WHERE { wd:Q25269 wdt:P111 wd:Q487623 . wd:Q25269 wdt:P111 wd:Q42213 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'J', 'p': 'measured physical quantity', 'o': '?x0', '?x0': 'transparency'}, {'h': 'IS', 'v': '?x1', 's': 'J', 'p': 'measured physical quantity', 'o': '?x1', '?x1': 'work'}]

 Q: Give me {nut} that contains the word {nut} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11009 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nut')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nut'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'nut'}}

 Q: Which isotope of indium has the most parity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q785466 . ?ent wdt:P1123 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'parity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of indium'}}

 Q: What was the price of gold in 2018-7-26?
 SPARQL: SELECT ?obj WHERE { wd:Q897 p:P2284 ?s . ?s ps:P2284 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'gold', 'p': 'price', 'o': '?x0', 't': '2018'}

 Q: What work did Jacques Brel publish in 1963?
 SPARQL: SELECT ?obj WHERE { wd:Q1666 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'1963')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacques Brel', 'p': 'work', 'o': '?x0', 't': '1963'}

 Q: What is {narrative location} of {North by Northwest} that is {filming location} is {California} ?
 SPARQL: SELECT ?obj WHERE { wd:Q223139 p:P840 ?s . ?s ps:P840 ?obj . ?s pq:P915 wd:Q99 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'narrative location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North by Northwest', 'p': 'narrative location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'filming location', 'o': 'California'}}}

 Q: Which is the poetry collection that has traditional Chinese characters as writing system?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q178528 . ?sbj wdt:P31 wd:Q12308638 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'traditional Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'poetry collection'}}

 Q: What political party does Jacinda Ardern belong to?
 SPARQL:  select distinct ?obj where { wd:Q3606816 wdt:P102 ?obj . ?obj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jacinda Ardern', 'p': 'party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: what is the {start time} for {Ahmedabad} has {located in the administrative territorial entity} as {Bombay Presidency} ?
 SPARQL: SELECT ?value WHERE { wd:Q1070 p:P131 ?s . ?s ps:P131 wd:Q891827 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ahmedabad', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Bombay Presidency'}}}

 Q: What award was received by Valeri Polyakov on April 4, 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q317792 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Valeri Polyakov', 'p': 'award', 'o': '?x0', 't': '2011'}

 Q: What is the {name} for {incarnation of} of {Jesus Christ}
 SPARQL:  select distinct ?obj where { wd:Q302 wdt:P3701 ?obj . ?obj wdt:P31 wd:Q82799 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jesus', 'p': 'incarnation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'name'}}

 Q: What is {nominated for} of {Close Encounters of the Third Kind} that is {nominee} is {John Williams} ?
 SPARQL: SELECT ?obj WHERE { wd:Q320588 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q131285 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Close Encounters of the Third Kind', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'John Williams'}}}

 Q: What is budget for Grand Theft Auto V?
 SPARQL: select distinct ?answer where { wd:Q17452 wdt:P2769 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Grand Theft Auto V', 'p': 'budget', 'o': '?x0'}

 Q: what is the {point in time} for {Samuel Beckett} has {nominated for} as {Nobel Prize in Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q37327 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Samuel Beckett', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What is the connecting line of Chulalongkorn University?
 SPARQL: select distinct ?answer where { wd:Q855730 wdt:P81 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chulalongkorn University', 'p': 'connecting line', 'o': '?x0'}

 Q: Tell me hole that contains the word d
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20204151 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hole'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is {work location} of {Ruth Bernhard} that is {end time} is {1953-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2177580 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ruth Bernhard', 'p': 'work location', 'o': '?x0', 't': '1953'}

 Q: What is the method of determining eating disorders that has the genetic association of RASGRF2?
 SPARQL: SELECT ?value WHERE { wd:Q373822 p:P2293 ?s . ?s ps:P2293 wd:Q18031050 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'eating disorder', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'RASGRF2'}}}

 Q: What is the {human} for {doctoral student} of {Niels Bohr}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P185 wd:Q7085 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Niels Bohr', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {manufacturer of} of {user} of {solar energy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40015 wdt:P1535 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manufacturer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'solar energy', 'p': 'user', 'o': '$y0'}}

 Q: Which is {position of head of government} of {service operator} {MiG-21} ?
 SPARQL: SELECT ?answer WHERE { wd:Q150609 wdt:P137 ?X . ?X wdt:P1313 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position of head of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MiG-21', 'p': 'operator', 'o': '$y0'}}

 Q: What is {elected in} and {end cause} of {{Ramsay MacDonald} has {position held} as {Member of the 37th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q166646 p:P39 ?s . ?s ps:P39 wd:Q41582593 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramsay MacDonald', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 37th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramsay MacDonald', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 37th Parliament of the United Kingdom'}}}]

 Q: How many {officeholder} are for {United Nations Secretary-General} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q81066 wdt:P1308 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'United Nations Secretary-General', 'p': 'officeholder', 'o': '?x0'}

 Q: what is the {point in time} for {Lorin Maazel} has {award received} as {Grammy Award for Best Opera Recording} ?
 SPARQL: SELECT ?value WHERE { wd:Q117710 p:P166 ?s . ?s ps:P166 wd:Q5593843 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lorin Maazel', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best Opera Recording'}, 't': '?x0'}

 Q: Where was Grace Hopper educated at in 1930?
 SPARQL: SELECT ?obj WHERE { wd:Q11641 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1930')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Grace Hopper', 'p': 'educated at', 'o': '?x0', 't': '1930'}

 Q: What is <sports competition competed at> of <Olympic Games> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P5249 wd:Q5389}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports competition competed at', 'o': 'Olympic Games'}

 Q: Give me {heavy metal band} that {mascot} {Eddie the Head} and which that starts with {'i'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56816954 . ?sbj wdt:P822 wd:Q259261 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'heavy metal band', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mascot', 'o': 'Eddie the Head'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: What was in the aspect of the instruction set architecture whose painter was Gerrit Blaauw?
 SPARQL: SELECT ?answer WHERE { wd:Q272683 wdt:P1269 ?answer . ?answer wdt:P170 wd:Q2632606}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'instruction set architecture', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'painter', 'o': 'Gerrit Blaauw'}}

 Q: "Who was the sister of Henry V, the Holy Roman Emperor during his death in the year of 1101-7-27"?
 SPARQL: SELECT ?answer WHERE { wd:Q151707 wdt:P3373 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1101'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry V', 'p': 'sister', 'o': '?x0', 't': '1101'}

 Q: When was the {official trip} for {participant} of {Emmanuel Macron}?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q3052772 . ?sbj wdt:P31 wd:Q17561488 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Emmanuel Macron', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'official trip'}}

 Q: what is the {nominee} for {Casablanca} has {nominated for} as {Academy Award for Best Original Dramatic or Comedy Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q132689 p:P1411 ?s . ?s ps:P1411 wd:Q22752868 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Casablanca', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Dramatic or Comedy Score'}}}

 Q: What political party did Chen Shui-bian belong to in 1987-02-28?
 SPARQL: SELECT ?obj WHERE { wd:Q22368 p:P102 ?s . ?s ps:P102 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1987')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chen Shui-bian', 'p': 'party', 'o': '?x0', 't': '1987'}

 Q: What are the coachwork type which start with the letter van
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15729598 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'van')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'coachwork type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'van'}}

 Q: What is {sister} of {George W. Bush}, that has {craft} is {entrepreneur} ?
 SPARQL: SELECT ?answer WHERE { wd:Q207 wdt:P3373 ?answer . ?answer wdt:P106 wd:Q131524}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George W. Bush', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'entrepreneur'}}

 Q: What is {member of sports team} of {Rinus Michels} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q2154479 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is <series> of <1> ?
 SPARQL: select distinct ?answer where { wd:Q199 wdt:P179 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '1', 'p': 'series', 'o': '?x0'}

 Q: What are the weekly newspaper  which start with the letter e
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2305295 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'é')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weekly newspaper'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'é'}}

 Q: Tell me the airline that starts with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q46970 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is JewAge person ID for Ludwig von Mises ?
 SPARQL: select distinct ?answer where { wd:Q84233 wdt:P4116 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ludwig von Mises', 'p': 'JewAge person ID', 'o': '?x0'}

 Q: Who is the owner of Hon Hai Precision Industry?
 SPARQL: select distinct ?answer where { wd:Q463094 wdt:P1830 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hon Hai', 'p': 'owner of', 'o': '?x0'}

 Q: What Japanese TV series has the most number of seasons and was originally aired in Japanese?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21191019 . ?ent wdt:P2437 ?obj . ?ent wdt:P364 wd:Q5287 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of seasons', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Japanese TV series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'original language', 'o': 'Japanese'}}}

 Q: Tell me  security agency whose name has the word state in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3238445 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'state')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'security agency'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'state'}}

 Q: What is <OKTMO ID> of <Tolyatti> ?
 SPARQL: select distinct ?answer where { wd:Q1341 wdt:P764 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tolyatti', 'p': 'OKTMO ID', 'o': '?x0'}

 Q: Which son of Isaac has a son named Shuah?
 SPARQL: SELECT ?answer WHERE { wd:Q671872 wdt:P22 ?answer . ?answer wdt:P40 wd:Q369850}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isaac', 'p': 'son of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'son', 'o': 'Shuah'}}

 Q: what is the {start time} for {Athens} has {country} as {Greece} ?
 SPARQL: SELECT ?value WHERE { wd:Q1524 p:P17 ?s . ?s ps:P17 wd:Q41 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Athens', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Greece'}}}

 Q: What does it mean if you are convicted of desertion?
 SPARQL: select distinct ?answer where { ?answer wdt:P1399 wd:Q633339}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'convicted of', 'o': 'desertion'}

 Q: What is the {sacred language} for {follows} of {Ancient Greek}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P155 wd:Q35497 . ?sbj wdt:P31 wd:Q839470 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'Ancient Greek', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sacred language'}}

 Q: What is {chairperson} of {Communist Party of China} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'chairperson', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}]

 Q: What is the SpeedSkatingNews.info speed skater ID for Eric Heiden?
 SPARQL: select distinct ?answer where { wd:Q311289 wdt:P3694 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eric Heiden', 'p': 'SpeedSkatingNews.info speed skater ID', 'o': '?x0'}

 Q: Was Hirohito buried in Tokyo at the Mausoleum of the First Qin Emperor?
 SPARQL: ASK WHERE { wd:Q34479 wdt:P119 wd:Q1490 . wd:Q34479 wdt:P119 wd:Q910180 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hirohito', 'p': 'buried in', 'o': '?x0', '?x0': 'Tokyo'}, {'h': 'IS', 'v': '?x1', 's': 'Hirohito', 'p': 'buried in', 'o': '?x1', '?x1': 'Mausoleum of the First Qin Emperor'}]

 Q: What is {noble title} of {Charles the Bald} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q71231 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '$y0'}}]

 Q: What are the ring system  which start with the letter r
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28951811 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ring system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: When did Saint Vincent and the Grenadines have a population of 108150?
 SPARQL: SELECT ?value WHERE { wd:Q757 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'108150.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Saint Vincent and the Grenadines', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '108150.0'}, 't': '?x0'}

 Q: What is the antonym of the profession's field of prosecutor?
 SPARQL: SELECT ?answer WHERE { wd:Q600751 wdt:P425 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'prosecutor', 'p': "profession's field", 'o': '$y0'}}

 Q: What represents the organization of the siblings of Louis Gigante?
 SPARQL: SELECT ?answer WHERE { wd:Q6687246 wdt:P3373 ?X . ?X wdt:P1268 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'represents', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis Gigante', 'p': 'sibling', 'o': '$y0'}}

 Q: What is {member of sports team} of {Eric Cantona} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q170328 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Cantona', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Cantona', 'p': 'team', 'o': '$y0'}}]

 Q: What is {publication date} and {place of publication} of {{Pac-Man} has {publisher} as {Midway Games}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q173626 p:P123 ?s . ?s ps:P123 wd:Q149947 . ?s pq:P577 ?value1 . ?s pq:P291 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'publisher', 'o': 'Midway Games'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'place of publication', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'publisher', 'o': 'Midway Games'}}}]

 Q: What is SCT's HomoloGene ID?
 SPARQL: select distinct ?answer where { wd:Q14820612 wdt:P593 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'SCT', 'p': 'HomoloGene ID', 'o': '?x0'}

 Q: What what is separation process discoverer or inventor Zosimos of Panopolis  and which that starts with d
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q898987 . ?sbj wdt:P61 wd:Q226868 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'separation process', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'Zosimos of Panopolis'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Is Paul Gascoigne a member of a sports team?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q13002 wdt:P54 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Paul Gascoigne', 'p': 'team', 'o': '?x0'}

 Q: Did {Frankenstein} {characters} {Frankenstein's monster} and {Elizabeth Lavenza} ?
 SPARQL: ASK WHERE { wd:Q150827 wdt:P674 wd:Q2021531 . wd:Q150827 wdt:P674 wd:Q5363105 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Frankenstein', 'p': 'characters', 'o': '?x0', '?x0': "Frankenstein's monster"}, {'h': 'IS', 'v': '?x1', 's': 'Frankenstein', 'p': 'characters', 'o': '?x1', '?x1': 'Elizabeth Lavenza'}]

 Q: Tell me about member of sports team of Ian Rush and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q219354 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ian Rush', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ian Rush', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: which magazine starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41298 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Does the port of the Multicast File transfer protocol have less than 6482.2 capacity?
 SPARQL: ASK WHERE { wd:Q4044635 wdt:P1641 ?obj filter(?obj < 6482.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Multicast File Transfer Protocol', 'p': 'port', 'o': '?x0', '?x0': '6482.4'}

 Q: What is {place of birth} of {Monica Bellucci} that is {located in the administrative territorial entity} is {Umbria} ?
 SPARQL: SELECT ?obj WHERE { wd:Q81819 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1280 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Monica Bellucci', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Umbria'}}}

 Q: What is {participant in conflict} of {Alfred Dreyfus}, that has {venue} is {Australia and Oceania} ?
 SPARQL: SELECT ?answer WHERE { wd:Q171826 wdt:P607 ?answer . ?answer wdt:P276 wd:Q55643}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alfred Dreyfus', 'p': 'conflict', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Australia and Oceania'}}

 Q: What is {educated at} of {Hilary Mantel} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q465700 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hilary Mantel', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hilary Mantel', 'p': 'educated at', 'o': '$y0'}}]

 Q: What treatment is Neil Diamond getting for his health issues?
 SPARQL: SELECT ?answer WHERE { wd:Q294531 wdt:P1050 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neil Diamond', 'p': 'health issue', 'o': '$y0'}}

 Q: Is the individual tax rate in Sweden 25%?
 SPARQL: ASK WHERE { wd:Q34 wdt:P2834 ?obj filter(?obj = 25) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sweden', 'p': 'individual tax rate', 'o': '?x0', '?x0': '25'}

 Q: What is Léopold Sédar Senghor's Dialnet author ID?
 SPARQL: select distinct ?answer where { wd:Q154545 wdt:P1607 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Léopold Sédar Senghor', 'p': 'Dialnet author ID', 'o': '?x0'}

 Q: Which is the AFL Tables coach ID for Ron Barassi?
 SPARQL: select distinct ?answer where { wd:Q3441366 wdt:P4885 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ron Barassi', 'p': 'AFL Tables coach ID', 'o': '?x0'}

 Q: Are the assets under management of the BlackRock less than 8146800000.0?
 SPARQL: ASK WHERE { wd:Q219635 wdt:P4103 ?obj filter(?obj < 8146800000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'BlackRock', 'p': 'assets under management', 'o': '?x0', '?x0': '8146800000.0'}

 Q: Which is possessed by spirit by spirt?
 SPARQL: select distinct ?answer where { ?answer wdt:P4292 wd:Q193291}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'possessed by spirit', 'o': 'spirit'}

 Q: When did New Hampshire have a population of 491524?
 SPARQL: SELECT ?value WHERE { wd:Q759 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'491524.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'New Hampshire', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '491524.0'}, 't': '?x0'}

 Q: Tell me political party whose name has the word veritas in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7278 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'veritas')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'veritas'}}

 Q: what is the {point in time} for {Alec Guinness} has {nominated for} as {Academy Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q103894 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Alec Guinness', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}, 't': '?x0'}

 Q: What is the {capital} for {twinned administrative body} of {Mumbai}
 SPARQL:  select distinct ?obj where { wd:Q1156 wdt:P190 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mumbai', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: What is {culture} of {Sawda bint Zamʿa}, that has {timeline of topic} is {history of the Arabs} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1943555 wdt:P172 ?answer . ?answer wdt:P2184 wd:Q48999793}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sawda bint Zamʿa', 'p': 'culture', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timeline of topic', 'o': 'history of the Arabs'}}

 Q: Who is {executive authority} of {play} {snowboard} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2000617 wdt:P641 ?X . ?X wdt:P797 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'authority', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'snowboard', 'p': 'play', 'o': '$y0'}}

 Q: What is {electoral district} and {represents} of {{Jacinda Ardern} has {position held} as {Member of the New Zealand House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3606816 p:P39 ?s . ?s ps:P39 wd:Q18145518 . ?s pq:P768 ?value1 . ?s pq:P1268 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacinda Ardern', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the New Zealand House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'represents', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacinda Ardern', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the New Zealand House of Representatives'}}}]

 Q: What were the last words of Jesus Christ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q302 wdt:P3909 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Jesus', 'p': 'last words', 'o': '?x0'}

 Q: What is the military rank of the colonel?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P410 wd:Q104680 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'military rank', 'o': 'colonel'}

 Q: Which is the historical nationality for the location of Bilbao?
 SPARQL:  select distinct ?obj where { wd:Q8692 wdt:P276 ?obj . ?obj wdt:P31 wd:Q2736168 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bilbao', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical nationality'}}

 Q: What is the fictional analog of The Gingerbread Man?
 SPARQL: select distinct ?answer where { wd:Q6616486 wdt:P1074 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Gingerbread Man', 'p': 'fictional analog of', 'o': '?x0'}

 Q: Who is in the administrative territorial entity of Tbilisi and when is the end time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q994 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tbilisi', 'p': 'in', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tbilisi', 'p': 'in', 'o': '$y0'}}]

 Q: What borders Senegal and yet is a member of AFRISTAT?
 SPARQL: SELECT ?answer WHERE { wd:Q1041 wdt:P47 ?answer . ?answer wdt:P463 wd:Q3348506}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Senegal', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'AFRISTAT'}}

 Q: What is graduated from Wendy Wasserstein located at street address of 160 Convent Ave, New York, NY, 10031?
 SPARQL: SELECT ?answer WHERE { wd:Q450050 wdt:P69 ?answer . ?answer wdt:P969 ?x FILTER(contains(?x,'160 Convent Ave, New York, NY, 10031'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wendy Wasserstein', 'p': 'graduated from', 'o': '?x0'}

 Q: What is the {member of} and the {chairperson} of {BP} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q152057 wdt:P463 ?ans_1 . wd:Q152057 wdt:P488 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'BP', 'p': 'member of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'BP', 'p': 'chairperson', 'o': '?x1'}]

 Q: what is the {mother} for {Julio Iglesias} has {child} as {Enrique Iglesias} ?
 SPARQL: SELECT ?value WHERE { wd:Q122003 p:P40 ?s . ?s ps:P40 wd:Q47122 . ?s pq:P25 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julio Iglesias', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Enrique Iglesias'}}}

 Q: Who is {writer} of {bibliographic citation} of {Survey of human genes of retroviral origin: identification and transcriptome of the genes with coding capacity for complete envelope proteins} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24645644 wdt:P2860 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Survey of human genes of retroviral origin: identification and transcriptome of the genes with coding capacity for complete envelope proteins', 'p': 'bibliographic citation', 'o': '$y0'}}

 Q: Which is the {crystal system} who {discoverer or inventor} of {Titanium} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q716 wdt:P556 ?ans_1 . wd:Q716 wdt:P61 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ti', 'p': 'crystal system', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ti', 'p': 'discoverer or inventor', 'o': '?x1'}]

 Q: What is {number of points/goals/set scored} and {number of matches played} of {{Brian Clough} has {member of sports team} as {England national football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q207658 p:P54 ?s . ?s ps:P54 wd:Q47762 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brian Clough', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'England'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'games played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brian Clough', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'England'}}}]

 Q: What is {place of death} of {Andrei Bely} that is {country} is {Soviet Union} ?
 SPARQL: SELECT ?obj WHERE { wd:Q212632 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q15180 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andrei Bely', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Soviet Union'}}}

 Q: Is it true that the melting point of mercury is less than -45.6?
 SPARQL: ASK WHERE { wd:Q925 wdt:P2101 ?obj filter(?obj < -45.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'mercury', 'p': 'melting point', 'o': '?x0', '?x0': '-45.6'}

 Q: What is the base of a cube?
 SPARQL: select distinct ?answer where { ?answer wdt:P3263 wd:Q812880}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'base', 'o': 'cube'}

 Q: Which is Japanese Baseball Hall of Fame ID for Hideo Nomo?
 SPARQL: select distinct ?answer where { wd:Q486690 wdt:P4562 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hideo Nomo', 'p': 'Japanese Baseball Hall of Fame ID', 'o': '?x0'}

 Q: What is {has surname} of {Mireille Mathieu}, that has {similar to} is {Matías} ?
 SPARQL: SELECT ?answer WHERE { wd:Q71452 wdt:P734 ?answer . ?answer wdt:P460 wd:Q29905256}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mireille Mathieu', 'p': 'surname', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'similar to', 'o': 'Matías'}}

 Q: What is Fawlty Towers' AlloCine series ID?
 SPARQL: select distinct ?answer where { wd:Q212731 wdt:P1267 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fawlty Towers', 'p': 'AlloCine series ID', 'o': '?x0'}

 Q: What is <appears in the form of> of <Pinocchio> ?
 SPARQL: select distinct ?answer where { wd:Q6502703 wdt:P4675 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pinocchio', 'p': 'appears in the form of', 'o': '?x0'}

 Q: How many {languages spoken, written or signed} are for {Kamal Haasan} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q381477 wdt:P1412 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Kamal Haasan', 'p': 'languages spoken, written or signed', 'o': '?x0'}

 Q: What is physiology comprised of?
 SPARQL: select distinct ?answer where { ?answer wdt:P642 wd:Q521}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'of', 'o': 'physiology'}

 Q: Is the conversion to SI unit of the statcoulomb greater than 2.6685128e-10?
 SPARQL: ASK WHERE { wd:Q21131 wdt:P2370 ?obj filter(?obj > 2.6685128e-10) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'statcoulomb', 'p': 'conversion to SI unit', 'o': '?x0', '?x0': '2.6685128e-10'}

 Q: Is it true that the mother's mother's mother family relationship degree equal to 3?
 SPARQL: ASK WHERE { wd:Q42240762 wdt:P4500 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "mother's mother's mother", 'p': 'family relationship degree', 'o': '?x0', '?x0': '3'}

 Q: Tell me recurring sporting event whose name has the word world in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring sporting event'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: How many saints have obtained canonization status?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P411 wd:Q43115 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'canonization status', 'o': 'saint'}

 Q: When did educated at of Peggy Whitson and academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q235523 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peggy Whitson', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peggy Whitson', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {human} for {discoverer or inventor} of {boron}
 SPARQL:  select distinct ?obj where { wd:Q618 wdt:P61 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'boron', 'p': 'discoverer or inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When did Maule Region have a population of 836141.0?
 SPARQL: SELECT ?value WHERE { wd:Q2166 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'836141.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Maule Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '836141.0'}, 't': '?x0'}

 Q: Which is the rank of the taxon parent of Physalis philadelphica?
 SPARQL: SELECT ?answer WHERE { wd:Q622525 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Physalis philadelphica', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What is {member of sports team} of {Rabah Madjer} that is {number of matches played} is {94.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q431343 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'94.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rabah Madjer', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '94.0'}}}

 Q: Tell me reference model whose name has the word model in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q356674 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'model')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'reference model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'model'}}

 Q: Tell me theorem whose name has the word theorem in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q65943 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'theorem')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theorem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'theorem'}}

 Q: What is {end time} and {start time} of {{Honolulu} has {located in the administrative territorial entity} as {Territory of Hawaii}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q18094 p:P131 ?s . ?s ps:P131 wd:Q547795 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honolulu', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Territory of Hawaii'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honolulu', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Territory of Hawaii'}}}]

 Q: Tell me the house cat that contains the word мyka in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q146 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'мyka')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'house cat'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'мyka'}}

 Q: Give me {season} that contains the word {winter} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24384 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winter')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'season'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'winter'}}

 Q: Which is the date of burial or cremation of Miloš Forman?
 SPARQL: select distinct ?answer where { wd:Q51525 wdt:P4602 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Miloš Forman', 'p': 'date of burial or cremation', 'o': '?x0'}

 Q: Which the {subject has role} and the {location of discovery} of {Iodine} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1103 wdt:P2868 ?ans_1 . wd:Q1103 wdt:P189 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'I', 'p': 'subject has role', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'I', 'p': 'location of discovery', 'o': '?x1'}]

 Q: DOES THE LITERATE POPULATION OF DHARAMPUR EQUALS 0
 SPARQL: ASK WHERE { wd:Q60383142 wdt:P6499 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Dharampur', 'p': 'literate population', 'o': '?x0', '?x0': '0'}

 Q: What is the {3D film} for {voice actor} of {Tom Hanks}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q2263 . ?sbj wdt:P31 wd:Q229390 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Tom Hanks', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '3D film'}}

 Q: Which is the organization that has it's headquarters located in Aachen?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q1017 . ?sbj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters', 'o': 'Aachen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: What mythical character that contains the word zau in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4271324 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zau')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythical character'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zau'}}

 Q: What is the {enterprise} for {business division} of {Ford Motor Company}
 SPARQL:  select distinct ?obj where { wd:Q44294 wdt:P199 ?obj . ?obj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ford Motor Company', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: Is it true that the valency of monotransitive verb equals to 2?
 SPARQL: ASK WHERE { wd:Q4118301 wdt:P5526 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'monotransitive verb', 'p': 'valency', 'o': '?x0', '?x0': '2'}

 Q: How many mothers did Eros have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q121973 wdt:P25 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Eros', 'p': 'mother', 'o': '?x0'}

 Q: What is {member of sports team} of {Thierry Henry} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q45901 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thierry Henry', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thierry Henry', 'p': 'team', 'o': '$y0'}}]

 Q: What is {child} of {Isabella I of Castile} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q45859 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella I of Castile', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella I of Castile', 'p': 'child', 'o': '$y0'}}]

 Q: What is the {constituency of the Rajya Sabha} for {coextensive with} of {Mizoram}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3403 wd:Q1502 . ?sbj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'coextensive with', 'o': 'Mizoram', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: What branch of science starts with the letter "v"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of science'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what is the {statement is subject of} for {Michelle Pfeiffer} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q159778 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michelle Pfeiffer', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Who is the {municipal archive} for {archives at} of {Aachen}
 SPARQL:  select distinct ?obj where { wd:Q1017 wdt:P485 ?obj . ?obj wdt:P31 wd:Q604177 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aachen', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal archive'}}

 Q: "Where is {disciples} of {Nadia Boulanger}, which has {location of death} is {Azores} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q140619 wdt:P802 ?answer . ?answer wdt:P20 wd:Q25263}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nadia Boulanger', 'p': 'disciple', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of death', 'o': 'Azores'}}

 Q: What is {number of out of school children} of {continent} of {Eritrea} ?
 SPARQL: SELECT ?answer WHERE { wd:Q986 wdt:P30 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eritrea', 'p': 'continent', 'o': '$y0'}}

 Q: Tell me physical quantity whose name has the word work in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'work')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical quantity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'work'}}

 Q: What is the {powerplant} and the {manufacturer} of {Rockwell_B-1_Lancer} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q218636 wdt:P516 ?ans_1 . wd:Q218636 wdt:P176 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'B-1 Lancer', 'p': 'powerplant', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'B-1 Lancer', 'p': 'manufacturer', 'o': '?x1'}]

 Q: Tell me about animated feature film for voice actor of Ellen DeGeneres?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q483325 . ?sbj wdt:P31 wd:Q29168811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated feature film'}}

 Q: Tell me superhero that contains the word wolfsbane in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q188784 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wolfsbane')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superhero'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wolfsbane'}}

 Q: What is {subject in} of {Śūnyatā}, that has {science, that studies} is {Buddhist studies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q546054 wdt:P1269 ?answer . ?answer wdt:P2579 wd:Q1000976}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Śūnyatā', 'p': 'subject in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'science, that studies', 'o': 'Buddhist studies'}}

 Q: What is {has proponent} of {subject of the statement} of {language change} ?
 SPARQL: SELECT ?answer WHERE { wd:Q524648 wdt:P805 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has proponent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'language change', 'p': 'subject of', 'o': '$y0'}}

 Q: what is the {number of matches played} for {Diego Maradona} has {member of sports team} as {A.A. Argentinos Juniors} ?
 SPARQL: SELECT ?value WHERE { wd:Q17515 p:P54 ?s . ?s ps:P54 wd:Q220621 . ?s pq:P1350 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diego Maradona', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Argentinos Juniors'}}}

 Q: What is {diplomatic relation} of {sovereign state} of {University of Iowa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q182973 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University of Iowa', 'p': 'state', 'o': '$y0'}}

 Q: Tell me about spouse of Julio Iglesias and end cause?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q122003 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1534 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julio Iglesias', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julio Iglesias', 'p': 'spouse', 'o': '$y0'}}]

 Q: What are the state church which start with the letter M
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2325038 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state church'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: Is it true that the thermal diffusivity of adobe is less than 0.216?
 SPARQL: ASK WHERE { wd:Q183496 wdt:P5674 ?obj filter(?obj < 0.216) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'adobe', 'p': 'thermal diffusivity', 'o': '?x0', '?x0': '0.216'}

 Q: What award did Carrie Underwood receive in 2007?
 SPARQL: SELECT ?obj WHERE { wd:Q215546 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carrie Underwood', 'p': 'award', 'o': '?x0', 't': '2007'}

 Q: what is the {start time} for {Ryan Giggs} has {member of sports team} as {Manchester United F.C.} ?
 SPARQL: SELECT ?value WHERE { wd:Q10524 p:P54 ?s . ?s ps:P54 wd:Q18656 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ryan Giggs', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Manchester United F.C.'}}}

 Q: What is the {taxon} for {taxonomic type} of {Piper nigrum}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P427 wd:Q43084 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Piper nigrum', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is {head of government} of {Vaduz} that is {start time} is {2007-1-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1844 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vaduz', 'p': 'head of government', 'o': '?x0', 't': '2007'}

 Q: What is the solitary with the lowest height whose instance of is Tilia platyphyllos?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2438638 . ?ent wdt:P2048 ?obj . ?ent wdt:P31 wd:Q156831} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'height', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'solitary', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Tilia platyphyllos'}}}

 Q: Which is {continent} of {death place} of {Thomas Morley} ?
 SPARQL: SELECT ?answer WHERE { wd:Q438141 wdt:P20 ?X . ?X wdt:P30 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Morley', 'p': 'death place', 'o': '$y0'}}

 Q: What is the twin town of Port Vila, with the license plate code 沪A?
 SPARQL: SELECT ?answer WHERE { wd:Q37806 wdt:P190 ?answer . ?answer wdt:P395 ?x FILTER(contains(?x,'沪A'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Port Vila', 'p': 'twin town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'license plate code', 'o': '沪a'}}

 Q: Who is the brother of the actress Trishna?
 SPARQL: SELECT ?answer WHERE { wd:Q3417235 wdt:P161 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Trishna', 'p': 'actress', 'o': '$y0'}}

 Q: How many {time period} are to/by {Hellenistic period} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2348 wd:Q428995 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Hellenistic period'}

 Q: What is {position held} of {Charles XIV John of Sweden} that is {replaces} is {Charles XIII of Sweden} ?
 SPARQL: SELECT ?obj WHERE { wd:Q52927 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q52928 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles XIV John of Sweden', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Charles XIII of Sweden'}}}

 Q: Which is {official language} of {basin countries} of {White Sea} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44133 wdt:P205 ?X . ?X wdt:P37 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'White Sea', 'p': 'basin countries', 'o': '$y0'}}

 Q: What is the {brand} for {manufacturer} of {SpaceX}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q193701 . ?sbj wdt:P31 wd:Q431289 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'SpaceX', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'brand'}}

 Q: When did Betty White win the Daytime Emmy Award for Outstanding Game Show Host?
 SPARQL: SELECT ?value WHERE { wd:Q373895 p:P166 ?s . ?s ps:P166 wd:Q5243447 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Betty White', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Daytime Emmy Award for Outstanding Game Show Host'}, 't': '?x0'}

 Q: What is {birthplace} of {Chris Rock}, that has {geotag} is {33.45} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4109 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'33.45'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chris Rock', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'geotag', 'o': '33.45'}}

 Q: Which is the Wikimedia template that populates this category of Gujarati?
 SPARQL: select distinct ?answer where { wd:Q5137 wdt:P4329 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gujarati', 'p': 'Wikimedia template that populates this category', 'o': '?x0'}

 Q: What is {member of sports team} of {Ellyse Perry} and {number of points/goals/set scored}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q600090 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ellyse Perry', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ellyse Perry', 'p': 'team', 'o': '$y0'}}]

 Q: Give me {document} that {editor} {National Constituent Assembly} and which contains the word {citizen} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49848 . ?sbj wdt:P98 wd:Q876424 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'citizen')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'document', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'editor', 'o': 'National Constituent Assembly'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'citizen'}}

 Q: What is the daughter of Leopold II, Holy Roman Emperor, whose sister is Maria Anna d'Asburgo-Lorena?
 SPARQL: SELECT ?answer WHERE { wd:Q151321 wdt:P40 ?answer . ?answer wdt:P3373 wd:Q1032317}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leopold II, Holy Roman Emperor', 'p': 'daughter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister', 'o': "Maria Anna d'Asburgo-Lorena"}}

 Q: what is the {replaces} for {Charles Evans Hughes} has {position held} as {Chief Justice of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q313252 p:P39 ?s . ?s ps:P39 wd:Q11147 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Evans Hughes', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chief Justice'}}}

 Q: what is the key incident in the provenance of Glencore?
 SPARQL: SELECT ?answer WHERE { wd:Q169339 wdt:P127 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key incident', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glencore', 'p': 'provenance', 'o': '$y0'}}

 Q: Tell me written work whose name has the word war in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47461344 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: What is {part of constellation} of {parent body} of {Messier 35} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13736 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 35', 'p': 'parent body', 'o': '$y0'}}

 Q: Name the eponym of volt, who is professor by profession.
 SPARQL: SELECT ?answer WHERE { wd:Q25250 wdt:P138 ?answer . ?answer wdt:P106 wd:Q121594}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'volt', 'p': 'eponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'professor'}}

 Q: What is {from work} of {motif} of {David with the Head of Goliath} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20354514 wdt:P180 ?X . ?X wdt:P1441 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David with the Head of Goliath', 'p': 'motif', 'o': '$y0'}}

 Q: Which document is the main regulatory text of the Soviet Union?
 SPARQL:  select distinct ?obj where { wd:Q15180 wdt:P92 ?obj . ?obj wdt:P31 wd:Q49848 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Soviet Union', 'p': 'main regulatory text', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'document'}}

 Q: What is the {university} for {parent organization} of {Purdue University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q217741 . ?sbj wdt:P31 wd:Q3918 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Purdue University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university'}}

 Q: How many {member of the crew of} are for {John Jellicoe, 1st Earl Jellicoe} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q335028 wdt:P5096 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'John Jellicoe, 1st Earl Jellicoe', 'p': 'member of the crew of', 'o': '?x0'}

 Q: What is <companion of> of <Proxima Centauri> ?
 SPARQL: select distinct ?answer where { wd:Q14266 wdt:P399 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Proxima Centauri', 'p': 'companion of', 'o': '?x0'}

 Q: Who is the writer of "The Murder of Roger Ackroyd", which has been active since 1920-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q224078 wdt:P50 ?answer . ?answer wdt:P2031 ?x FILTER(contains(YEAR(?x),'1920'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Murder of Roger Ackroyd', 'p': 'writer', 'o': '?x0', 't': '1920'}

 Q: Which is the sector of the software publisher for Horticultural classification of tulip cultivars?
 SPARQL: SELECT ?answer WHERE { wd:Q18402072 wdt:P123 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sector', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Horticultural classification of tulip cultivars', 'p': 'publisher', 'o': '$y0'}}

 Q: Who is the candidacy in election for United States Congress?
 SPARQL: select distinct ?answer where { ?answer wdt:P3602 wd:Q11268}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'candidacy in election', 'o': 'United States Congress'}

 Q: What is the {linguistic typology} and the {has grammatical gender} of {Spanish_language} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1321 wdt:P4132 ?ans_1 . wd:Q1321 wdt:P5109 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Spanish', 'p': 'linguistic typology', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Spanish', 'p': 'has grammatical gender', 'o': '?x1'}]

 Q: Did {The_New_York_Times} {place of publication} {New York City} and {Manhattan} ?
 SPARQL: ASK WHERE { wd:Q9684 wdt:P291 wd:Q60 . wd:Q9684 wdt:P291 wd:Q11299 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The New York Times', 'p': 'place of publication', 'o': '?x0', '?x0': 'New York City'}, {'h': 'IS', 'v': '?x1', 's': 'The New York Times', 'p': 'place of publication', 'o': '?x1', '?x1': 'Manhattan'}]

 Q: Who is the child of William Jennings Bryan that has the biological sex of male?
 SPARQL: SELECT ?answer WHERE { wd:Q205282 wdt:P22 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Jennings Bryan', 'p': 'child of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'biological sex', 'o': 'male'}}

 Q: What is the {independent agency of the United States government} for {archives at} of {Jefferson Davis}
 SPARQL:  select distinct ?obj where { wd:Q162269 wdt:P485 ?obj . ?obj wdt:P31 wd:Q1752939 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jefferson Davis', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'independent agency of the United States government'}}

 Q: What is the {novel} for {notable work} of {Robert Louis Stevenson}
 SPARQL:  select distinct ?obj where { wd:Q1512 wdt:P800 ?obj . ?obj wdt:P31 wd:Q8261 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Louis Stevenson', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'novel'}}

 Q: What is {instrument played} of {plays} of {foil} ?
 SPARQL: SELECT ?answer WHERE { wd:Q471447 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'foil', 'p': 'play', 'o': '$y0'}}

 Q: What is <lake outflow> of <Lake Winnebago> ?
 SPARQL: select distinct ?answer where { wd:Q1801110 wdt:P201 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake Winnebago', 'p': 'lake outflow', 'o': '?x0'}

 Q: What is {has fruit type} of {higher taxon} of {Philodendron edmundoi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15313826 wdt:P171 ?X . ?X wdt:P4000 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has fruit type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philodendron edmundoi', 'p': 'higher taxon', 'o': '$y0'}}

 Q: How many {operating area} are to/by {Ireland} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2541 wd:Q27 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'operating area', 'o': 'Ireland'}

 Q: what is the {for work} for {Ringo Starr} has {nominated for} as {Academy Award for Best Original Song Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q2632 p:P1411 ?s . ?s ps:P1411 wd:Q22344608 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ringo Starr', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Song Score'}}}

 Q: What is the language official in Federated States of Micronesia having a shortened name of
 SPARQL: SELECT ?answer WHERE { wd:Q702 wdt:P37 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'инглизсә'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Federated States of Micronesia', 'p': 'language official', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'инглизсә'}}

 Q: What is {formation} of {Story Musgrave}, that has {in action} is {Banana Wars} ?
 SPARQL: SELECT ?answer WHERE { wd:Q462132 wdt:P241 ?answer . ?answer wdt:P607 wd:Q768496}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Story Musgrave', 'p': 'formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in action', 'o': 'Banana Wars'}}

 Q: what is the {end time} for {Camille Pissarro} has {work location} as {Netherlands} ?
 SPARQL: SELECT ?value WHERE { wd:Q134741 p:P937 ?s . ?s ps:P937 wd:Q55 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Camille Pissarro', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'Netherlands'}}}

 Q: What is {killed by} and {has effect} of {{John F. Kennedy} has {cause of death} as {ballistic trauma}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q9696 p:P509 ?s . ?s ps:P509 wd:Q2140674 . ?s pq:P157 ?value1 . ?s pq:P1542 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'killed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John F. Kennedy', 'p': 'cause of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cause of death', 'o': 'ballistic trauma'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'has effect', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John F. Kennedy', 'p': 'cause of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cause of death', 'o': 'ballistic trauma'}}}]

 Q: what is the {for work} for {Patrick White} has {award received} as {Miles Franklin Literary Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q129187 p:P166 ?s . ?s ps:P166 wd:Q996 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Patrick White', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Miles Franklin Literary Award'}}}

 Q: what is the {end time} for {Alexandria} has {located in the administrative territorial entity} as {Diocese of Egypt} ?
 SPARQL: SELECT ?value WHERE { wd:Q87 p:P131 ?s . ?s ps:P131 wd:Q1018761 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexandria', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Diocese of Egypt'}}}

 Q: What is the {owned by} and the {named after} of {Disneyland} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q181185 wdt:P127 ?ans_1 . wd:Q181185 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Disneyland', 'p': 'owned by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Disneyland', 'p': 'named after', 'o': '?x1'}]

 Q: What are the treaty which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131569 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'treaty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Is it true that the caliber of Ehrhardt 7.5 cm Model 1901 equals to 60?
 SPARQL: ASK WHERE { wd:Q259036 wdt:P4403 ?obj filter(?obj = 60.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ehrhardt 7.5 cm Model 1901', 'p': 'caliber', 'o': '?x0', '?x0': '60.0'}

 Q: What is the item operated of a B-29 Superfortress?
 SPARQL: select distinct ?answer where { ?answer wdt:P121 wd:Q184870}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'item operated', 'o': 'B-29 Superfortress'}

 Q: Which is the instance of Puduhepa?
 SPARQL: select distinct ?answer where { wd:Q268887 wdt:P31 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Puduhepa', 'p': 'type', 'o': '?x0'}

 Q: Which is the process function of the measured physical quantity of joule?
 SPARQL:  select distinct ?obj where { wd:Q25269 wdt:P111 ?obj . ?obj wdt:P31 wd:Q900800 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'joule', 'p': 'measured physical quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'process function'}}

 Q: Is Alex Ferguson is the member of sports team which was started in 1-1-1973?
 SPARQL: SELECT ?obj WHERE { wd:Q44980 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1973')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alex Ferguson', 'p': 'member of sports team', 'o': '?x0', 't': '1973'}

 Q: How many {member of the crew of} are to/by {Enola Gay} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P5096 wd:Q204424 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'member of the crew of', 'o': 'Enola Gay'}

 Q: How many {conflict} are to/by {Crusades} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P607 wd:Q12546 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'Crusades'}

 Q: Give me {dyad} that contains the word {yan} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29431432 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dyad'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yan'}}

 Q: Was Helen Keller a member of the Transport Workers Union of America?
 SPARQL: ASK WHERE { wd:Q38203 wdt:P463 wd:Q3537776 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Helen Keller', 'p': 'member of', 'o': '?x0', '?x0': 'Transport Workers Union of America'}]

 Q: Give me {board game} that {practiced by} {backgammon player} and which contains the word {backgammon} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131436 . ?sbj wdt:P3095 wd:Q23929009 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'backgammon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'board game', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'backgammon player'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'backgammon'}}

 Q: What is the first described of the ideology of Progressive Party?
 SPARQL: SELECT ?answer WHERE { wd:Q7248784 wdt:P1142 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first described', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Progressive Party', 'p': 'ideology', 'o': '$y0'}}

 Q: Which is the HQ location in The Economic Times having Indian reservation in Bombay State?
 SPARQL: SELECT ?answer WHERE { wd:Q1954757 wdt:P159 ?answer . ?answer wdt:P131 wd:Q2627082}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Economic Times', 'p': 'HQ', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Bombay State'}}

 Q: Joseph belongs to what family?
 SPARQL:  select distinct ?obj where { wd:Q128267 wdt:P53 ?obj . ?obj wdt:P31 wd:Q8436 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joseph', 'p': 'family', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'family'}}

 Q: Who are the film crew members and cast members of Game of Thrones?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q23572 wdt:P3092 ?ans_1 . wd:Q23572 wdt:P161 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Game of Thrones', 'p': 'film crew member', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Game of Thrones', 'p': 'cast member', 'o': '?x1'}]

 Q: "Which is {marry} of {Cassiopeia}, who {has son} is {Andromeda} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q207681 wdt:P26 ?answer . ?answer wdt:P40 wd:Q161582}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cassiopeia', 'p': 'marry', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'son', 'o': 'Andromeda'}}

 Q: Is Spain's unemployment rate 25?
 SPARQL: ASK WHERE { wd:Q29 wdt:P1198 ?obj filter(?obj = 25) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Spain', 'p': 'unemployment rate', 'o': '?x0', '?x0': '25'}

 Q: What award did Zadie Smith receive in 2006?
 SPARQL: SELECT ?obj WHERE { wd:Q140052 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zadie Smith', 'p': 'award', 'o': '?x0', 't': '2006'}

 Q: What is the garrison of AT&T, which is in the settlement of Denton County?
 SPARQL: SELECT ?answer WHERE { wd:Q35476 wdt:P159 ?answer . ?answer wdt:P131 wd:Q109265}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'AT&T', 'p': 'garrison', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is in the settlement of', 'o': 'Denton County'}}

 Q: What is the {sovereign state} for {replaces} of {Ottoman Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q12560 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaces', 'o': 'Ottoman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what is the {sourcing circumstances} for {Amtrak} has {net profit} as {-1.23269e+09} ?
 SPARQL: SELECT ?value WHERE { wd:Q23239 p:P2295 ?s . ?s ps:P2295 ?x filter(contains(?x,'-1.23269e+09')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amtrak', 'p': 'net profit', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'net profit', 'o': '-1.23269e+09'}}}

 Q: which time of the day contains the word morning in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1260524 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'morning')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'time of the day'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'morning'}}

 Q: When Atacama Region has its population 230873.0?
 SPARQL: SELECT ?value WHERE { wd:Q2120 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'230873.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Atacama Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '230873.0'}, 't': '?x0'}

 Q: What are the political philosophy which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179805 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political philosophy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: what is the {start time} for {Aurangabad} has {located in the administrative territorial entity} as {Hyderabad State} ?
 SPARQL: SELECT ?value WHERE { wd:Q200713 p:P131 ?s . ?s ps:P131 wd:Q1240096 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aurangabad', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Hyderabad State'}}}

 Q: What is {position held} of {David Cameron} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q192 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Cameron', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Cameron', 'p': 'position held', 'o': '$y0'}}]

 Q: what are the mathematical notation which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1140046 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mathematical notation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {start time} and {place of marriage} of {{Victor Hugo} has {spouse} as {Adèle Foucher}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q535 p:P26 ?s . ?s ps:P26 wd:Q2825429 . ?s pq:P580 ?value1 . ?s pq:P2842 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Adele Foucher'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'place of marriage', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Adele Foucher'}}}]

 Q: Tell me about member of sports team of Rinus Michels and number of points/goals/set scored?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q2154479 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: what is the {winner} for {Friends} has {award received} as {Primetime Emmy Award for Outstanding Comedy Series} ?
 SPARQL: SELECT ?value WHERE { wd:Q79784 p:P166 ?s . ?s ps:P166 wd:Q2110156 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Friends', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Primetime Emmy Award for Outstanding Comedy Series'}}}

 Q: IS THE SERVICE LIFE OF THE AMBATOVY MINE EQUALS 29
 SPARQL: ASK WHERE { wd:Q16002794 wdt:P5069 ?obj filter(?obj = 29) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ambatovy mine', 'p': 'service life', 'o': '?x0', '?x0': '29'}

 Q: Is Mary I of England a sibling of Edward VI of England?
 SPARQL: ASK WHERE { wd:Q82674 wdt:P3373 wd:Q83229 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mary I of England', 'p': 'sibling', 'o': '?x0', '?x0': 'Edward VI of England'}]

 Q: Which image compression contains the word graphics in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q412438 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'graphics')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'image compression'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'graphics'}}

 Q: Which is antonym of painting of Madonna enthroned with child and Saints Petronius and John the Evangelist ?
 SPARQL: SELECT ?answer WHERE { wd:Q3889219 wdt:P180 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Madonna enthroned with child and Saints Petronius and John the Evangelist', 'p': 'painting of', 'o': '$y0'}}

 Q: Is Scientology the same as Church of Scientology?
 SPARQL: ASK WHERE { wd:Q131036 wdt:P460 wd:Q1820380 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Scientology', 'p': 'same as', 'o': '?x0', '?x0': 'Church of Scientology'}]

 Q: Who is the nominee for Nevermind, that was produced on 1991-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q17444 wdt:P1411 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1991'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nevermind', 'p': 'nominee for', 'o': '?x0', 't': '1991'}

 Q: What is the {video game developer} for {product or material produced} of {Pong}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q216293 . ?sbj wdt:P31 wd:Q210167 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'Pong', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'game studio'}}

 Q: "Who is {rector} of {Moscow State University}, which {alumna of} is {Saint Petersburg State University} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q13164 wdt:P1075 ?answer . ?answer wdt:P69 wd:Q27621}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Moscow State University', 'p': 'rector', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alumna of', 'o': 'Saint Petersburg State University'}}

 Q: What is {educated at} of {Al-Waleed bin Talal} that is {academic degree} is {Master of Science} ?
 SPARQL: SELECT ?obj WHERE { wd:Q293679 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q950900 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Al-Waleed bin Talal', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Master of Science'}}}

 Q: What is the death location, whose partner city is Jakarta, of Samuel Butler?
 SPARQL: SELECT ?answer WHERE { wd:Q258766 wdt:P20 ?answer . ?answer wdt:P190 wd:Q3630}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Samuel Butler', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Jakarta'}}

 Q: What is {preceeds} of {implies} of {vaporization} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6452502 wdt:P1542 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'preceeds', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'vaporization', 'p': 'implies', 'o': '$y0'}}

 Q: What is the {type of quantum particle} with the {MAX(mean lifetime)} whose {antiparticle} is {antineutron}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2645 ?obj . ?ent wdt:P2152 wd:Q156530 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'mean lifetime', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'antiparticle', 'o': 'antineutron'}}}

 Q: What is the {steam engine} for {discoverer or inventor} of {James Watt}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P61 wd:Q9041 . ?sbj wdt:P31 wd:Q12760 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'invented by', 'o': 'James Watt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steam engine'}}

 Q: What is the member of a sports team of Iker Casillas that starts January 1st, 1991?
 SPARQL: SELECT ?obj WHERE { wd:Q11584 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Iker Casillas', 'p': 'team', 'o': '?x0', 't': '1999'}

 Q: What is {father} and {date of birth} of {{Abigail Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P22 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'father', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams Smith'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams Smith'}}}]

 Q: What award did Ken Thompson receive on January 1st, 1983?
 SPARQL: SELECT ?obj WHERE { wd:Q1107006 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1983')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ken Thompson', 'p': 'award', 'o': '?x0', 't': '1983'}

 Q: Give me {film} that {filming location} {New York City} and which that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11424 . ?sbj wdt:P915 wd:Q60 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'filming location', 'o': 'New York'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What aspect of mysticism is distinguished from dharma?
 SPARQL: SELECT ?answer WHERE { wd:Q45996 wdt:P1269 ?answer . ?answer wdt:P1889 wd:Q134293}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'mysticism', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'distinguished from', 'o': 'dharma'}}

 Q: What is the business with the least debt on the Euronext?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P2133 ?obj . ?ent wdt:P414 wd:Q842108} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'debt', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'stock exchange', 'o': 'Euronext'}}}

 Q: What was Gene Wolfe nominated for in 1990?
 SPARQL: SELECT ?obj WHERE { wd:Q361149 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gene Wolfe', 'p': 'nominated for', 'o': '?x0', 't': '1990'}

 Q: Did {Jimi_Hendrix} {manner of death} {EMLL 24th Anniversary Show}?
 SPARQL: ASK WHERE { wd:Q5928 wdt:P1196 wd:Q5323544 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jimi Hendrix', 'p': 'manner of death', 'o': '?x0', '?x0': 'EMLL 24th Anniversary Show'}]

 Q: what is the {end time} for {Don Bradman} has {member of sports team} as {Australia national cricket team} ?
 SPARQL: SELECT ?value WHERE { wd:Q313591 p:P54 ?s . ?s ps:P54 wd:Q142555 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Don Bradman', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Australia national cricket team'}}}

 Q: What material has the highest operating temperature?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q214609 . ?ent wdt:P5066 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'operating temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'material'}}

 Q: What medical condition did Väinö Linna have in 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q311037 p:P1050 ?s . ?s ps:P1050 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Väinö Linna', 'p': 'medical condition', 'o': '?x0', 't': '1984'}

 Q: Which taxon has the highest chromosome count?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P5230 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'chromosome count', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is {human population} of {birth place} of {Konstantin Khabensky} ?
 SPARQL: SELECT ?answer WHERE { wd:Q558666 wdt:P19 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Konstantin Khabensky', 'p': 'birthplace', 'o': '$y0'}}

 Q: What is Flags of the World ID for Union Jack ?
 SPARQL: select distinct ?answer where { wd:Q3173323 wdt:P3089 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Union Jack', 'p': 'Flags of the World ID', 'o': '?x0'}

 Q: which is scientific area of developed by of perl?
 SPARQL: SELECT ?answer WHERE { wd:Q42478 wdt:P178 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'perl', 'p': 'developed by', 'o': '$y0'}}

 Q: Which is the Japanese writing system for the writing system of Japanese?
 SPARQL:  select distinct ?obj where { wd:Q5287 wdt:P282 ?obj . ?obj wdt:P31 wd:Q190502 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Japanese', 'p': 'writing system', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Japanese writing system'}}

 Q: What is <Museum of Fine Arts, Boston object ID> of <L. L. Zamenhof> ?
 SPARQL: select distinct ?answer where { wd:Q11758 wdt:P4625 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L. Zamenhof', 'p': 'Museum of Fine Arts, Boston object ID', 'o': '?x0'}

 Q: What is alphabet  language signed of  Ōe no Yoshitoki ?
 SPARQL: SELECT ?answer WHERE { wd:Q3594014 wdt:P1412 ?X . ?X wdt:P282 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'alphabet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ōe no Yoshitoki', 'p': 'language signed', 'o': '$y0'}}

 Q: Is it true that the residence time of water in Tai Lake equals 0.79?
 SPARQL: ASK WHERE { wd:Q140712 wdt:P3020 ?obj filter(?obj = 0.79) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tai Lake', 'p': 'residence time of water', 'o': '?x0', '?x0': '0.79'}

 Q: what is the {postal code} for {Baidu} has {headquarters location} as {Beijing} ?
 SPARQL: SELECT ?value WHERE { wd:Q14772 p:P159 ?s . ?s ps:P159 wd:Q956 . ?s pq:P281 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'postal code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Baidu', 'p': 'headquarters location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'headquarters location', 'o': 'Beijing'}}}

 Q: Give me {decimal classification} that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1207369 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'decimal classification'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Dies the Center for Jewish Studies Heidelberg students count equal 110?
 SPARQL: ASK WHERE { wd:Q1622186 wdt:P2196 ?obj filter(?obj = 110) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Center for Jewish Studies Heidelberg', 'p': 'students count', 'o': '?x0', '?x0': '110'}

 Q: What {subject has role} which {physically interacts with} of {Dopamine} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q170304 wdt:P2868 ?ans_1 . wd:Q170304 wdt:P129 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Dopamin', 'p': 'subject has role', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Dopamin', 'p': 'physically interacts with', 'o': '?x1'}]

 Q: What is {middle name} of {Dan Carter}, that has {pronunciation audio} is {Pl-Daniel.ogg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q726199 wdt:P735 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'Pl-Daniel.ogg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dan Carter', 'p': 'middle name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pronunciation audio', 'o': 'pl-daniel.ogg'}}

 Q: What is the taxonomic type of Cactaceae?
 SPARQL:  select distinct ?obj where { wd:Q14560 wdt:P427 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cactaceae', 'p': 'taxonomic type', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is {end cause} and {elected in} of {{Thomas Wakley} has {position held} as {Member of the 12th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q334239 p:P39 ?s . ?s ps:P39 wd:Q41582548 . ?s pq:P1534 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Wakley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 12th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Wakley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 12th Parliament of the United Kingdom'}}}]

 Q: Give me {particle radiation} that contains the word {cosmic} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q945733 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cosmic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'particle radiation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cosmic'}}

 Q: Give me {Cyprinus rubrofuscus} that contains the word {koi} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3246258 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'koi')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Cyprinus rubrofuscus'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'koi'}}

 Q: Which is the period The Great Gatsby was set in?
 SPARQL: select distinct ?answer where { wd:Q214371 wdt:P2408 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Great Gatsby', 'p': 'period', 'o': '?x0'}

 Q: what is the {end time} for {Ana Kasparian} has {educated at} as {California State University, Northridge} ?
 SPARQL: SELECT ?value WHERE { wd:Q19661 p:P69 ?s . ?s ps:P69 wd:Q1026939 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ana Kasparian', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'California State University, Northridge'}}}

 Q: What is the {television series episode} for {series} of {The X-Files}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q2744 . ?sbj wdt:P31 wd:Q21191270 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'The X-Files', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series episode'}}

 Q: Who is The X-Files' creator and executive producer?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q2744 wdt:P170 ?ans_1 . wd:Q2744 wdt:P1431 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The X-Files', 'p': 'creator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The X-Files', 'p': 'executive producer', 'o': '?x1'}]

 Q: On December 31, 2012, what were Nokia's total assets?
 SPARQL: SELECT ?obj WHERE { wd:Q1418 p:P2403 ?s . ?s ps:P2403 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nokia', 'p': 'total assets', 'o': '?x0', 't': '2012'}

 Q: Where was Louise Bourgeois completed education in the year 1938?
 SPARQL: SELECT ?obj WHERE { wd:Q159409 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1938')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louise Bourgeois', 'p': 'education', 'o': '?x0', 't': '1938'}

 Q: What is {official language} of {Vantaa} that is {object has role} is {minority language} ?
 SPARQL: SELECT ?obj WHERE { wd:Q127623 p:P37 ?s . ?s ps:P37 ?obj . ?s pq:P3831 wd:Q61566 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vantaa', 'p': 'official language', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'object has role', 'o': 'minority language'}}}

 Q: What is {known for} of {scriptwriter} of {Barefoot Gen: Explosion of Tears} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16164415 wdt:P58 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'known for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barefoot Gen: Explosion of Tears', 'p': 'scriptwriter', 'o': '$y0'}}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: what is the {replaced by} for {Clovis I} has {position held} as {king of Franks} ?
 SPARQL: SELECT ?value WHERE { wd:Q82339 p:P39 ?s . ?s ps:P39 wd:Q22923081 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'king of Franks'}}}

 Q: Which is the sign language for the signed form of Esperanto?
 SPARQL:  select distinct ?obj where { wd:Q143 wdt:P3969 ?obj . ?obj wdt:P31 wd:Q34228 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'signed form', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sign language'}}

 Q: Which detached object has the highest mean of anomalies?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2449475 . ?ent wdt:P2325 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'mean anomaly', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'detached object'}}

 Q: What is {admin HQ} of {alma mater} of {Victor Hugo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q535 wdt:P69 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'HQ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'alma mater', 'o': '$y0'}}

 Q: What is Northern England's total imports?
 SPARQL: select distinct ?answer where { wd:Q1788657 wdt:P2136 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Northern England', 'p': 'total imports', 'o': '?x0'}

 Q: Tell me Mahavidya whose name has the word tara in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1076022 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tara')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Mahavidya'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tara'}}

 Q: What is <magnetic moment> of <electron> ?
 SPARQL: select distinct ?answer where { wd:Q2225 wdt:P2069 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'electron', 'p': 'magnetic moment', 'o': '?x0'}

 Q: Which is the mathematical formula of the shape of the cooling tower?
 SPARQL: SELECT ?answer WHERE { wd:Q193886 wdt:P1419 ?X . ?X wdt:P2534 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'formula', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cooling tower', 'p': 'shape', 'o': '$y0'}}

 Q: Is the annual energy output of the Greater Gabbard wind farm equal to 1800?
 SPARQL: ASK WHERE { wd:Q820613 wdt:P4131 ?obj filter(?obj = 1800) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Greater Gabbard wind farm', 'p': 'annual energy output', 'o': '?x0', '?x0': '1800'}

 Q: Which {musical instrument} of {musician}  is used on {A Theme from The Threepenny Opera} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51801055 wdt:P175 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A Theme from The Threepenny Opera', 'p': 'musician', 'o': '$y0'}}

 Q: Which is the FIPS 55-3 (locations in the US) of Fresno?
 SPARQL: select distinct ?answer where { wd:Q43301 wdt:P774 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fresno', 'p': 'FIPS 55-3 (locations in the US)', 'o': '?x0'}

 Q: Which is the automobile model that is manufactured by Honda?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q9584 . ?sbj wdt:P31 wd:Q3231690 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufactured by', 'o': 'Honda', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile model'}}

 Q: Did {Michael_Jordan} {wears} {jewellery}?
 SPARQL: ASK WHERE { wd:Q41421 wdt:P3828 wd:Q161439 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Michael Jordan', 'p': 'wears', 'o': '?x0', '?x0': 'jewellery'}]

 Q: what is the {start time} for {Andrei Mironov} has {spouse} as {Yekaterina Gradova} ?
 SPARQL: SELECT ?value WHERE { wd:Q469550 p:P26 ?s . ?s ps:P26 wd:Q4147409 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andrei Mironov', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Yekaterina Gradova'}}}

 Q: Which is the historic house museum of the residence of Rembrandt?
 SPARQL:  select distinct ?obj where { wd:Q5598 wdt:P551 ?obj . ?obj wdt:P31 wd:Q2087181 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rembrandt', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historic house museum'}}

 Q: How many {twinned administrative body} are there for {Monterrey} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q81033 wdt:P190 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Monterrey', 'p': 'twinned administrative body', 'o': '?x0'}

 Q: Was Chandragupta Maurya the student of both Chanakya and Vidyananda?
 SPARQL: ASK WHERE { wd:Q188541 wdt:P1066 wd:Q9045 . wd:Q188541 wdt:P1066 wd:Q7928209 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chandragupta Maurya', 'p': 'student of', 'o': '?x0', '?x0': 'Chanakya'}, {'h': 'IS', 'v': '?x1', 's': 'Chandragupta Maurya', 'p': 'student of', 'o': '?x1', '?x1': 'Vidyananda'}]

 Q: What is in the municipality of Canton of Jura that has a -0.3 inflation rate of consumer price index?
 SPARQL: SELECT ?answer WHERE { wd:Q12755 wdt:P131 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'-0.3'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Canton of Jura', 'p': 'is in the municipality of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '-0.3'}}

 Q: Which nonprofit organization has the highest total expenditure?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q163740 . ?ent wdt:P2402 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total expenditure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonprofit organization'}}

 Q: Which is the extensive physical quantity that is measured by the inertial mass and starts with the letter m?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3386703 . ?sbj wdt:P1880 wd:Q843816 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'extensive physical quantity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'inertial mass'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: Which CAF Champions League has the highest number of points/goals/set scored?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q219261 . ?ent wdt:P1351 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of points/goals/set scored', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'CAF Champions League'}}

 Q: Tell me the position held by Joseph Lister, 1st Baron Lister in the year 1902 and thereafter.
 SPARQL: SELECT ?obj WHERE { wd:Q155768 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1902')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph Lister, 1st Baron Lister', 'p': 'position held', 'o': '?x0', 't': '1902'}

 Q: Which is tributary for Sea of Okhotsk having gps coordinate of 51.49694445 156.4758333?
 SPARQL: SELECT ?answer WHERE { wd:Q41602 wdt:P974 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'51.49694445 156.4758333'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sea of Okhotsk', 'p': 'tributary', 'o': '?x0'}

 Q: What is <biography at the Bundestag of Germany> of <Gerhard Schröder> ?
 SPARQL: select distinct ?answer where { wd:Q2530 wdt:P1713 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gerhard Schröder', 'p': 'biography at the Bundestag of Germany', 'o': '?x0'}

 Q: What is <metasubclass of> of <diaspora> ?
 SPARQL: select distinct ?answer where { wd:Q133004 wdt:P2445 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diaspora', 'p': 'metasubclass of', 'o': '?x0'}

 Q: What is {owned by} of {4chan} that is {start time} is {2015-9-21} ?
 SPARQL: SELECT ?obj WHERE { wd:Q238330 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '4chan', 'p': 'owned by', 'o': '?x0', 't': '2015'}

 Q: When did Oberhausen have a population of 209292.0?
 SPARQL: SELECT ?value WHERE { wd:Q2838 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'209292.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Oberhausen', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '209292.0'}, 't': '?x0'}

 Q: what is the {point in time} for {A. R. Rahman} has {award received} as {IIFA Award for Best Music Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q108560 p:P166 ?s . ?s ps:P166 wd:Q492560 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'A. R. Rahman', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'IIFA Award for Best Music Director'}, 't': '?x0'}

 Q: How many country citizenship are taken by Antonio José de Sucre Farell?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q189779 wdt:P27 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Antonio José de Sucre', 'p': 'citizenship', 'o': '?x0'}

 Q: What are the winged horse which start with the letter pegasus
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2537829 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pegasus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'winged horse'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pegasus'}}

 Q: Which is the crystal habit for albite?
 SPARQL: select distinct ?answer where { wd:Q182264 wdt:P565 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'albite', 'p': 'crystal habit', 'o': '?x0'}

 Q: What is {academic major} and {academic degree} of {{Robert J. Shiller} has {educated at} as {Massachusetts Institute of Technology}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q338151 p:P69 ?s . ?s ps:P69 wd:Q49108 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert J. Shiller', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Massachusetts Institute of Technology'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert J. Shiller', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Massachusetts Institute of Technology'}}}]

 Q: What is the award received of Harold Pinter that is prized money that is 7 digits
 SPARQL: SELECT ?obj WHERE { wd:Q41042 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'1e+07')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Pinter', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'money', 'o': '1e+07'}}}

 Q: Which of the chemical compounds with an active ingredient of Qutenza has the highest Scoville grade?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2658 ?obj . ?ent wdt:P3780 wd:Q29006389 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Scoville grade', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'active ingredient in', 'o': 'Qutenza'}}}

 Q: What is the {human} for {head of government} of {Vancouver}
 SPARQL:  select distinct ?obj where { wd:Q24639 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vancouver', 'p': 'head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the public company with the most debt subsidized by Carrefour Bio?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q891723 . ?ent wdt:P2133 ?obj . ?ent wdt:P355 wd:Q55221138 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'debt', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'Carrefour Bio'}}}

 Q: How many courts are there in the Supreme Court of Canada?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4884 wd:Q196615 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'court', 'o': 'Supreme Court of Canada'}

 Q: Which is the group that caused the Congress of Vienna?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P828 wd:Q46362 . ?sbj wdt:P31 wd:Q16887380 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause', 'o': 'Congress of Vienna', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group'}}

 Q: Which is the LoC and MARC vocabularies ID of Albania?
 SPARQL: select distinct ?answer where { wd:Q222 wdt:P4801 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albania', 'p': 'LoC and MARC vocabularies ID', 'o': '?x0'}

 Q: What is {award received} of {Brokeback Mountain} that is {statement is subject of} is {78th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q160618 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q319132 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brokeback Mountain', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '78th Academy Awards'}}}

 Q: What is {is the antonym of} of {inorganic chemistry}, that has {timeline of topic} is {history of organic chemistry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11165 wdt:P461 ?answer . ?answer wdt:P2184 wd:Q17480697}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'inorganic chemistry', 'p': 'opposite of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timeline of topic', 'o': 'history of organic chemistry'}}

 Q: What is the {colonial power} for {country} of {Lisbon}
 SPARQL:  select distinct ?obj where { wd:Q597 wdt:P17 ?obj . ?obj wdt:P31 wd:Q20181813 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lisbon', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'colonial power'}}

 Q: Which is the Thai cultural heritage ID for Khlong Saen Saeb?
 SPARQL: select distinct ?answer where { wd:Q1431800 wdt:P1626 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Khlong Saen Saeb', 'p': 'Thai cultural heritage ID', 'o': '?x0'}

 Q: What is the number of those maintained by Fukuoka?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P126 wd:Q26600 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'maintained by', 'o': 'Fukuoka'}

 Q: What is the {fictional universe} for {takes place in fictional universe} of {The Matrix}
 SPARQL:  select distinct ?obj where { wd:Q83495 wdt:P1434 ?obj . ?obj wdt:P31 wd:Q559618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Matrix', 'p': 'takes place in fictional universe', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional universe'}}

 Q: Give the name of the hill with the highest isolation whose is at a high range.
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q54050 . ?ent wdt:P2659 ?obj . ?ent wdt:P31 wd:Q46831 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'isolation', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hill', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'range'}}}

 Q: What are the Wikimedia set index article which start with the letter typhoon
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15623926 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'typhoon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia set index article'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'typhoon'}}

 Q: What is {end cause} and {elected in} of {{Chiang Kai-shek} has {position held} as {President of the Republic of China}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q16574 p:P39 ?s . ?s ps:P39 wd:Q887003 . ?s pq:P1534 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chiang Kai-shek', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the Republic of China'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chiang Kai-shek', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the Republic of China'}}}]

 Q: How many things are founded by Oprah Winfrey?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q55800 wdt:P112 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Oprah Winfrey', 'p': 'founded by', 'o': '?x0'}

 Q: DOES THE NUMBER OF CYLINDERS OF THE KKSTB 197 EQUALS 2
 SPARQL: ASK WHERE { wd:Q310348 wdt:P1100 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'kkStB 197', 'p': 'number of cylinders', 'o': '?x0', '?x0': '2'}

 Q: What is {participant of} of {Lin Dan} that is {ranking} is {1.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1390341 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P1352 ?x filter(contains(?x,'1.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lin Dan', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'rank', 'o': '1.0'}}}

 Q: Give me {highly urbanized city} that {language used} {Tagalog} and which that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29946056 . ?sbj wdt:P2936 wd:Q34057 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'highly urbanized city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Tagalog'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Tell me town in Croatia whose name has the word šibenik in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15105893 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'šibenik')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'town in Croatia'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'šibenik'}}

 Q: What is TORA ID for Uppsala ?
 SPARQL: select distinct ?answer where { wd:Q25286 wdt:P4820 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Uppsala', 'p': 'TORA ID', 'o': '?x0'}

 Q: What is  the Flora of North America taxon ID for Amaranthus?
 SPARQL: select distinct ?answer where { wd:Q156344 wdt:P1727 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amaranthus', 'p': 'Flora of North America taxon ID', 'o': '?x0'}

 Q: How many participants are there in the Kingdom of Castile?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P710 wd:Q179293 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Kingdom of Castile'}

 Q: What is the project codename for Windows 10?
 SPARQL: select distinct ?answer where { wd:Q18168774 wdt:P1638 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Windows 10', 'p': 'codename', 'o': '?x0'}

 Q: What is {edition} of {game platform} of {Second Life} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106827 wdt:P400 ?X . ?X wdt:P747 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'edition', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Second Life', 'p': 'platform', 'o': '$y0'}}

 Q: what is the {start time} for {Peter Freuchen} has {member of political party} as {Social Democrats} ?
 SPARQL: SELECT ?value WHERE { wd:Q945641 p:P102 ?s . ?s ps:P102 wd:Q212101 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Freuchen', 'p': 'member of political party', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of political party', 'o': 'Social Democrats'}}}

 Q: What is the {sovereign state} with the {MAX(central government debt as a percent of GDP)} whose {diplomatic relation} is {Israel}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3624078 . ?ent wdt:P1689 ?obj . ?ent wdt:P530 wd:Q801 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'central government debt as a percent of GDP', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Israel'}}}

 Q: Is it true that the maximal incubation period in humans with leprosy equals to 21?
 SPARQL: ASK WHERE { wd:Q36956 wdt:P3487 ?obj filter(?obj = 21) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'leprosy', 'p': 'maximal incubation period in humans', 'o': '?x0', '?x0': '21'}

 Q: What is the {essence} for {studied by} of {social science}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2579 wd:Q34749 . ?sbj wdt:P31 wd:Q190995 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'social science', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essence'}}

 Q: What is a product of the automotive industry that is similar to a power-driven vehicle?
 SPARQL: SELECT ?answer WHERE { wd:Q190117 wdt:P1056 ?answer . ?answer wdt:P460 wd:Q16589333}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'automotive industry', 'p': 'product', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'similar to', 'o': 'power-driven vehicle'}}

 Q: What are the form of government which start with the letter unicameralism
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1307214 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'unicameralism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'form of government'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'unicameralism'}}

 Q: What tributary of the Oka River can be found at the GPS location of 37.0012?
 SPARQL: SELECT ?answer WHERE { wd:Q172089 wdt:P974 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'37.0012'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oka', 'p': 'tributary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': '37.0012'}}

 Q: Is it true that the number of episodes of Mansfield Park is greater than 0.8?
 SPARQL: ASK WHERE { wd:Q280295 wdt:P1113 ?obj filter(?obj > 0.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Mansfield Park', 'p': 'number of episodes', 'o': '?x0', '?x0': '0.8'}

 Q: What is the {railway gun} with the {MIN(muzzle velocity)} whose {country} is {France}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1049358 . ?ent wdt:P4137 ?obj . ?ent wdt:P17 wd:Q142} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'muzzle velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway gun', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'France'}}}

 Q: DOES THE EFFECTIVE FIRING RNGE OF THE 70 K EQUALS 13120
 SPARQL: ASK WHERE { wd:Q4031056 wdt:P4176 ?obj filter(?obj = 13120) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '70-K', 'p': 'effective firing range', 'o': '?x0', '?x0': '13120'}

 Q: what is the {end time} for {Andhra Pradesh} has {capital} as {Hyderabad} ?
 SPARQL: SELECT ?value WHERE { wd:Q1159 p:P36 ?s . ?s ps:P36 wd:Q1361 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andhra Pradesh', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': 'Hyderabad'}}}

 Q: Give the name of the gram-negative strain that has the highest maximum viable temperature.
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q855769 . ?ent wdt:P3252 ?obj . ?ent wdt:P2597 wd:Q632006 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum viable temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'strain', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Gram staining', 'o': 'Gram-negative'}}}

 Q: What is <Austrian Parliament ID> of <Kurt Waldheim> ?
 SPARQL: select distinct ?answer where { wd:Q1260 wdt:P2280 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kurt Waldheim', 'p': 'Austrian Parliament ID', 'o': '?x0'}

 Q: How many constellations are by Scorpius?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P59 wd:Q8865 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Scorpius'}

 Q: What is <Smithsonian volcano ID> of <Taal Volcano> ?
 SPARQL: select distinct ?answer where { wd:Q818475 wdt:P1886 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Taal Volcano', 'p': 'Smithsonian volcano ID', 'o': '?x0'}

 Q: What are winged horse which start with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2537829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'winged horse'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is {twin town} of {from} of {2NE1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q171885 wdt:P740 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '2NE1', 'p': 'from', 'o': '$y0'}}

 Q: Give me {art genre} that {studied by} {ballet studies} and which contains the word {ballet} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1792379 . ?sbj wdt:P2579 wd:Q4076591 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ballet')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art genre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'ballet studies'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ballet'}}

 Q: What is the {theatre} for {architect} of {Frank Gehry}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q180374 . ?sbj wdt:P31 wd:Q24354 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Frank Gehry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theatre'}}

 Q: What is the taxon synonym of angiosperms?
 SPARQL: select distinct ?answer where { ?answer wdt:P1420 wd:Q25314}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'taxon synonym', 'o': 'angiosperms'}

 Q: Is the gestation period of the Gorilla less than 324.0?
 SPARQL: ASK WHERE { wd:Q36611 wdt:P3063 ?obj filter(?obj < 324.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Gorilla', 'p': 'gestation period', 'o': '?x0', '?x0': '324.0'}

 Q: How does it emulates in the {PlayStation} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4043 wd:Q10677 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'emulates', 'o': 'PlayStation'}

 Q: What is the VAT rate in Hungary?
 SPARQL: select distinct ?answer where { wd:Q28 wdt:P2855 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hungary', 'p': 'VAT', 'o': '?x0'}

 Q: What is the short-term exposure limit of chloroform over a 60-minute period?
 SPARQL: SELECT ?obj WHERE { wd:Q172275 p:P2407 ?s . ?s ps:P2407 ?obj . ?s pq:P2047 ?x filter(contains(?x,'60.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'short-term exposure limit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'chloroform', 'p': 'short-term exposure limit', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'period', 'o': '60.0'}}}

 Q: Does the proton have a magnetic moment that is equal to 0.0015210322053?
 SPARQL: ASK WHERE { wd:Q2294 wdt:P2069 ?obj filter(?obj = 0.0015210322053) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'proton', 'p': 'magnetic moment', 'o': '?x0', '?x0': '0.0015210322053'}

 Q: What is the {spice} for {this taxon is source of} of {Cuminum cyminum}
 SPARQL:  select distinct ?obj where { wd:Q132624 wdt:P1672 ?obj . ?obj wdt:P31 wd:Q42527 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cuminum cyminum', 'p': 'this taxon is source of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spice'}}

 Q: Who is the member of Canada that was elected on January 1st, 1966?
 SPARQL: SELECT ?obj WHERE { wd:Q16 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1966')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Canada', 'p': 'member of', 'o': '?x0', 't': '1966'}

 Q: Which is the constituency of the Rajya Sabha of the coextensive with Karnataka?
 SPARQL:  select distinct ?obj where { wd:Q1185 wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Karnataka', 'p': 'coextensive with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: What is {elected in} and {end cause} of {{James Matheson} has {position held} as {Member of the 15th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q4870843 p:P39 ?s . ?s ps:P39 wd:Q41582555 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Matheson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 15th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Matheson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 15th Parliament of the United Kingdom'}}}]

 Q: Who is the cast member for the role of Bunny Lebowski in the Big Lebowski?
 SPARQL: SELECT ?obj WHERE { wd:Q337078 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q55717001 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cast member', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Big Lebowski', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'role', 'o': 'Bunny Lebowski'}}}

 Q: What is {writer} of {collaborator on} of {Chris Odom} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24898980 wdt:P3919 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chris Odom', 'p': 'collaborator on', 'o': '$y0'}}

 Q: what is the {format as a regular expression} for {red} has {short name} as {R} ?
 SPARQL: SELECT ?value WHERE { wd:Q3142 p:P1813 ?s . ?s ps:P1813 ?x filter(contains(?x,'R')) . ?s pq:P1793 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'regular expression', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'red', 'p': 'short name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'short name', 'o': 'r'}}}

 Q: What is the location of the Honda headquarters with the postal code 107-8556?
 SPARQL: SELECT ?obj WHERE { wd:Q9584 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P281 ?x filter(contains(?x,'107-8556')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honda', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'postal code', 'o': '107-8556'}}}

 Q: What are the comics character which start with the letter viper
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1114461 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viper')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comics character'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'viper'}}

 Q: What is the {human} for {author} of {Strange Case of Dr Jekyll and Mr Hyde}
 SPARQL:  select distinct ?obj where { wd:Q217352 wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Strange Case of Dr Jekyll and Mr Hyde', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who are the children and siblings of Alan Alda?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q310394 wdt:P3373 ?ans_1 . wd:Q310394 wdt:P40 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Alan Alda', 'p': 'sibling', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Alan Alda', 'p': 'child', 'o': '?x1'}]

 Q: How many sponsors are for Juventus F.C.?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1422 wdt:P859 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Juventus F.C.', 'p': 'sponsor', 'o': '?x0'}

 Q: Does the elevation above sea level of the Beemster equal 4?
 SPARQL: ASK WHERE { wd:Q9900 wdt:P2044 ?obj filter(?obj = -4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Beemster', 'p': 'elevation above sea level', 'o': '?x0', '?x0': '-4'}

 Q: What is the {human} for {mother} of {Nicole Richie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P25 wd:Q232495 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mother', 'o': 'Nicole Richie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the type of procedure for the taxonomy of Durio
 SPARQL:  select distinct ?obj where { wd:Q2309085 wdt:P427 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Durio', 'p': 'type', 'o': '?x0', '?x0': 'taxon'}]

 Q: Who is the  {political party} for {member of political party} of {Fidel Castro}
 SPARQL:  select distinct ?obj where { wd:Q11256 wdt:P102 ?obj . ?obj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Castro', 'p': 'member of political party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: Give me {minor basilica} that {architectural style} {Italian Gothic architecture} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q120560 . ?sbj wdt:P149 wd:Q2245489 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'minor basilica', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'architecture', 'o': 'Italian Gothic architecture'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is in the  airline hub of Qantas ?
 SPARQL: select distinct ?answer where { wd:Q32491 wdt:P113 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Qantas', 'p': 'airline hub', 'o': '?x0'}

 Q: How many basic forms of government are there in Syria?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q858 wdt:P122 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Syria', 'p': 'government', 'o': '?x0'}

 Q: Tell me public company whose name has the word yandex in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q891723 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yandex')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yandex'}}

 Q: What is {award received} of {Sherlock} that is {winner} is {Andrew Scott} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192837 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q507322 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sherlock', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'Andrew Scott'}}}

 Q: Is the lighthouse range of South Channel Pile Light less than 2.4?
 SPARQL: ASK WHERE { wd:Q7566786 wdt:P2929 ?obj filter(?obj < 2.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'South Channel Pile Light', 'p': 'lighthouse range', 'o': '?x0', '?x0': '2.4'}

 Q: What was Carol Ann Duffy nominated for in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q237994 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carol Ann Duffy', 'p': 'nominated for', 'o': '?x0', 't': '2011'}

 Q: What genre of music is in the series titled Bound?
 SPARQL: SELECT ?answer WHERE { wd:Q50845803 wdt:P179 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bound', 'p': 'series', 'o': '$y0'}}

 Q: In 1939, what country did Marlene Dietrich become a citizen of?
 SPARQL: SELECT ?obj WHERE { wd:Q4612 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1939')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marlene Dietrich', 'p': 'citizen of', 'o': '?x0', 't': '1939'}

 Q: Which is the cuisine for the veganism cuisine?
 SPARQL:  select distinct ?obj where { wd:Q181138 wdt:P2012 ?obj . ?obj wdt:P31 wd:Q1778821 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'veganism', 'p': 'cuisine', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cuisine'}}

 Q: What is the {property} for {studies} of {biology}
 SPARQL:  select distinct ?obj where { wd:Q420 wdt:P2578 ?obj . ?obj wdt:P31 wd:Q937228 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'biology', 'p': 'studies', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'property'}}

 Q: what is the {start time} for {Ernest Renan} has {member of} as {Hungarian Academy of Sciences} ?
 SPARQL: SELECT ?value WHERE { wd:Q157155 p:P463 ?s . ?s ps:P463 wd:Q265058 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ernest Renan', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Hungarian Academy of Sciences'}}}

 Q: What is {prescribed drug} of {academic field for} of {oncology} ?
 SPARQL: SELECT ?answer WHERE { wd:Q162555 wdt:P2578 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prescribed drug', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'oncology', 'p': 'academic field for', 'o': '$y0'}}

 Q: What is the kinship with the lowest family relationship degree whose series is Ahnentafel ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q171318 . ?ent wdt:P4500 ?obj . ?ent wdt:P179 wd:Q267388} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'family relationship degree', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kinship', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Ahnentafel'}}}

 Q: What is {label in sign language} of {February} that is {language of work or name} is {Catalan Sign Language} ?
 SPARQL: SELECT ?obj WHERE { wd:Q109 p:P2919 ?s . ?s ps:P2919 ?obj . ?s pq:P407 wd:Q35768 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sign', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'February', 'p': 'sign', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'Catalan Sign Language'}}}

 Q: Tillandsia usneoides has a basionym of what?
 SPARQL: select distinct ?answer where { wd:Q311524 wdt:P566 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tillandsia usneoides', 'p': 'basionym', 'o': '?x0'}

 Q: What is the {biblical episode} for {significant person} of {Jesus Christ}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3342 wd:Q302 . ?sbj wdt:P31 wd:Q22704077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Jesus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}}

 Q: What is {member of sports team} of {Carlos Alberto Torres} that is {number of points/goals/set scored} is {4.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q295262 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x filter(contains(?x,'4.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carlos Alberto Torres', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '4.0'}}}

 Q: Who is the party chief representing Shaanxi?
 SPARQL: select distinct ?answer where { wd:Q47974 wdt:P210 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shaanxi', 'p': 'party chief', 'o': '?x0'}

 Q: What is the excipient with the highest kinematic viscosity whose safety classification and labelling is NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q902638 . ?ent wdt:P2118 ?obj . ?ent wdt:P4952 wd:Q51139288 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'kinematic viscosity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'excipient', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}}

 Q: What is {region} of {competes in} of {Leo Visser} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46104 wdt:P1344 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leo Visser', 'p': 'competes in', 'o': '$y0'}}

 Q: Is the total expenditure of the Central Catholic High School 4169127.6?
 SPARQL: ASK WHERE { wd:Q5060518 wdt:P2402 ?obj filter(?obj = 4169127.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Central Catholic High School', 'p': 'total expenditure', 'o': '?x0', '?x0': '4169127.6'}

 Q: What is the {work location} and the {location of formation} of {Gloria_Estefan} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q184697 wdt:P937 ?ans_1 . wd:Q184697 wdt:P740 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Gloria Estefan', 'p': 'work location', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Gloria Estefan', 'p': 'location of formation', 'o': '?x1'}]

 Q: What is the {architectural structure} for {place of death} of {Walter Scott}
 SPARQL:  select distinct ?obj where { wd:Q79025 wdt:P20 ?obj . ?obj wdt:P31 wd:Q811979 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Walter Scott', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'architectural structure'}}

 Q: How many {astronaut mission} are for {Yury Romanenko} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q446720 wdt:P450 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Yury Romanenko', 'p': 'astronaut mission', 'o': '?x0'}

 Q: Tell me  the mantra that contains the word mantra in their name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131510 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mantra')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mantra'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'mantra'}}

 Q: How many input methods does Minecraft possess?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q49740 wdt:P479 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Minecraft', 'p': 'input method', 'o': '?x0'}

 Q: What date disbanded for label Calvin Harris ?
 SPARQL: SELECT ?answer WHERE { wd:Q81637 wdt:P264 ?X . ?X wdt:P576 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date disbanded', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Calvin Harris', 'p': 'label', 'o': '$y0'}}

 Q: what is the {end time} for {Alexander Graham Bell} has {spouse} as {Mabel Gardiner Hubbard} ?
 SPARQL: SELECT ?value WHERE { wd:Q34286 p:P26 ?s . ?s ps:P26 wd:Q6721445 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Graham Bell', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Mabel Gardiner Hubbard'}}}

 Q: What is KINENOTE person ID for Jean-Paul Belmondo ?
 SPARQL: select distinct ?answer where { wd:Q106255 wdt:P3305 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean-Paul Belmondo', 'p': 'KINENOTE person ID', 'o': '?x0'}

 Q: What award did Alvaro Siza Vieira receive in 1988?
 SPARQL: SELECT ?obj WHERE { wd:Q251365 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alvaro Siza', 'p': 'award', 'o': '?x0', 't': '1988'}

 Q: Tell me circumstellar disk whose name has the word belt in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3235978 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'belt')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'circumstellar disk'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'belt'}}

 Q: What is <category for films shot at this location> of <A Coruña> ?
 SPARQL: select distinct ?answer where { wd:Q8757 wdt:P1740 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'A Coruña', 'p': 'category for films shot at this location', 'o': '?x0'}

 Q: How many {supports programming language} are to/by {Logo} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3985 wd:Q201436 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'supports programming language', 'o': 'Logo'}

 Q: Tell me excipient whose name has the word xylitol in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q902638 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xylitol')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'excipient'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'xylitol'}}

 Q: Give me {mineral species} that {crystal system} {cubic crystal system} and which that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55076514 . ?sbj wdt:P556 wd:Q473227 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral species', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'crystal system', 'o': 'cubic crystal system'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is the time of the day in year of Easter?
 SPARQL: SELECT ?answer WHERE { wd:Q21196 wdt:P837 ?X . ?X wdt:P585 ?answer}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Easter', 'p': 'day in year', 'o': '$y0', 't': '?x0'}

 Q: How many game modes are by a MMO game?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P404 wd:Q862490 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'game mode', 'o': 'MMO'}

 Q: How many people have a facet of their Suriname?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1269 wd:Q730 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Suriname'}

 Q: What is {host} of {found in species} of {hypothetical protein Mb0514} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23257938 wdt:P703 ?X . ?X wdt:P2975 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'host', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hypothetical protein Mb0514', 'p': 'found in species', 'o': '$y0'}}

 Q: What is the {from fictional universe} and the {creator} of {Green_Lantern} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q32884 wdt:P1080 ?ans_1 . wd:Q32884 wdt:P170 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Green Lantern', 'p': 'universe', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Green Lantern', 'p': 'creator', 'o': '?x1'}]

 Q: What is the {enterprise} for {operator} of {American Broadcasting Company}
 SPARQL:  select distinct ?obj where { wd:Q169889 wdt:P137 ?obj . ?obj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Broadcasting Company', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: What is {part of series} of {preceded by} of {Opie's Newspaper} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51231142 wdt:P155 ?X . ?X wdt:P179 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'part of series', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Opie's Newspaper", 'p': 'preceded by', 'o': '$y0'}}

 Q: What is birth name of Charles Simonyi ?
 SPARQL: select distinct ?answer where { wd:Q49819 wdt:P1477 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Simonyi', 'p': 'birth name', 'o': '?x0'}

 Q: Did {Lauren_Bacall} {ethnic group} {Arab} and {Ashkenazi Jews} ?
 SPARQL: ASK WHERE { wd:Q104000 wdt:P172 wd:Q35323 . wd:Q104000 wdt:P172 wd:Q34069 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lauren Bacall', 'p': 'ethnic group', 'o': '?x0', '?x0': 'Arab'}, {'h': 'IS', 'v': '?x1', 's': 'Lauren Bacall', 'p': 'ethnic group', 'o': '?x1', '?x1': 'Ashkenazi Jews'}]

 Q: What is {member of sports team} of {Abedi Pele} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q336916 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abedi Pele', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abedi Pele', 'p': 'team', 'o': '$y0'}}]

 Q: Is the time index of the Thout more than 0.8?
 SPARQL: ASK WHERE { wd:Q577200 wdt:P4895 ?obj filter(?obj > 0.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Thout', 'p': 'time index', 'o': '?x0', '?x0': '0.8'}

 Q: The Kingdom of Hawaii utilizes the base currency of which government or authority?
 SPARQL: SELECT ?answer WHERE { wd:Q156418 wdt:P38 ?X . ?X wdt:P562 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'authority', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingdom of Hawaii', 'p': 'currency', 'o': '$y0'}}

 Q: What is the {award} for {winner} of {Loretta Lynn}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1346 wd:Q272931 . ?sbj wdt:P31 wd:Q618779 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Loretta Lynn', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award'}}

 Q: Did Ryan Gosling receive an award at 19th Satellite Awards?
 SPARQL: ASK WHERE { wd:Q193815 wdt:P166 wd:Q18603311 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ryan Gosling', 'p': 'award', 'o': '?x0', '?x0': '19th Satellite Awards'}]

 Q: Which is the Eurovision Song Contest song ID for Celine Dion?
 SPARQL: select distinct ?answer where { wd:Q5105 wdt:P3736 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Celine Dion', 'p': 'Eurovision Song Contest song ID', 'o': '?x0'}

 Q: Which county seat of Lan Xang has STD code of 071?
 SPARQL: SELECT ?answer WHERE { wd:Q853477 wdt:P36 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'071'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lan Xang', 'p': 'county seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'STD code', 'o': '071'}}

 Q: What is {musical score by} of {The Rite of Spring}, that has {home town} is {New York City} ?
 SPARQL: SELECT ?answer WHERE { wd:Q206015 wdt:P86 ?answer . ?answer wdt:P551 wd:Q60}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Rite of Spring', 'p': 'musical score by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'home town', 'o': 'New York City'}}

 Q: Who is appointed by the United Nations Secretary-General?
 SPARQL: select distinct ?answer where { wd:Q81066 wdt:P748 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'United Nations Secretary-General', 'p': 'appointed by', 'o': '?x0'}

 Q: what is the {statement is subject of} for {Grace Kelly} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q3925 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grace Kelly', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Best Actress'}}}

 Q: what is the {applies to part} for {Jubba River} has {coordinate location} as {4.1783333333333 42.08} ?
 SPARQL: SELECT ?value WHERE { wd:Q138491 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'4.1783333333333 42.08')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jubba River', 'p': 'coordinate location', 'o': '$y0'}}

 Q: Which award was Kiefer Sutherland nominated for in 2002?
 SPARQL: SELECT ?obj WHERE { wd:Q103946 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kiefer Sutherland', 'p': 'nominated for', 'o': '?x0', 't': '2002'}

 Q: Which is DORIS ID for loggerhead sea turtle?
 SPARQL: select distinct ?answer where { wd:Q192095 wdt:P4630 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'loggerhead sea turtle', 'p': 'DORIS ID', 'o': '?x0'}

 Q: Is the electronegativity of the selenium equal to 2.55?
 SPARQL: ASK WHERE { wd:Q876 wdt:P1108 ?obj filter(?obj = 2.55) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'selenium', 'p': 'electronegativity', 'o': '?x0', '?x0': '2.55'}

 Q: What is the medium mountain stage with the lowest event distance whose general classification of race participants is Nairo Quintana ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q20680270 . ?ent wdt:P3157 ?obj . ?ent wdt:P2321 wd:Q511856} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'event distance', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medium mountain stage', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'general classification of race participants', 'o': 'Nairo Quintana'}}}

 Q: Name the church monument where Paul was the patron saint
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q9200 . ?sbj wdt:P31 wd:Q16970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Paul', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'church'}}

 Q: What is {nominated for} of {Robert Donat} that is {for work} is {Goodbye, Mr. Chips} ?
 SPARQL: SELECT ?obj WHERE { wd:Q116983 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q43228 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Donat', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Goodbye, Mr. Chips'}}}

 Q: What country uses the sterling pound as its currency?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q25224 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'pound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {educated at} of {Henry Cabot Lodge} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q174037 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Cabot Lodge', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Cabot Lodge', 'p': 'educated at', 'o': '$y0'}}]

 Q: Is it true that the suicide rate of Nara Prefecture equals to 20.736?
 SPARQL: ASK WHERE { wd:Q131287 wdt:P3864 ?obj filter(?obj = 20.736) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Nara Prefecture', 'p': 'suicide rate', 'o': '?x0', '?x0': '20.736'}

 Q: In what historical period was Ancient Rome set ?
 SPARQL:  select distinct ?obj where { wd:Q1747689 wdt:P2348 ?obj . ?obj wdt:P31 wd:Q11514315 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ancient Rome', 'p': 'historical period', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical period'}}

 Q: "What written by creator of The Adventures of Tintin, has been prize awarded as the Officer of the Order of the Crown?
 SPARQL: SELECT ?answer WHERE { wd:Q744536 wdt:P50 ?answer . ?answer wdt:P166 wd:Q17200760}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Adventures of Tintin', 'p': 'written by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': 'Officer of the Order of the Crown'}}

 Q: What are the analytic function which start with the letter function
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q215084 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'function')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'analytic function'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'function'}}

 Q: what is the {replaced by} for {Thurgood Marshall} has {position held} as {Associate Justice of the Supreme Court of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q312348 p:P39 ?s . ?s ps:P39 wd:Q11144 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thurgood Marshall', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Associate Justice of the Supreme Court of the US'}}}

 Q: Which is the product or the material produced of tomato juice?
 SPARQL: select distinct ?answer where { ?answer wdt:P1056 wd:Q787325}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'material produced', 'o': 'tomato juice'}

 Q: Which is the AlloCiné person ID for Leslie Howard?
 SPARQL: select distinct ?answer where { wd:Q156178 wdt:P1266 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leslie Howard', 'p': 'AlloCiné person ID', 'o': '?x0'}

 Q: Which is the Daum Encyclopedia ID for Brexit?
 SPARQL: select distinct ?answer where { wd:Q7888194 wdt:P5184 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brexit', 'p': 'Daum Encyclopedia ID', 'o': '?x0'}

 Q: What is {genetic association} of {regulates (molecular biology)} of {hsa-miR-4323} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27593997 wdt:P128 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hsa-miR-4323', 'p': 'regulates (molecular biology)', 'o': '$y0'}}

 Q: Did {Nina_Simone} {record label} {Bethlehem Records} and {Collectables Records} ?
 SPARQL: ASK WHERE { wd:Q174957 wdt:P264 wd:Q831335 . wd:Q174957 wdt:P264 wd:Q2097467 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Nina Simone', 'p': 'record label', 'o': '?x0', '?x0': 'Bethlehem Records'}, {'h': 'IS', 'v': '?x1', 's': 'Nina Simone', 'p': 'record label', 'o': '?x1', '?x1': 'Collectables Records'}]

 Q: What takes place on Rosh Hashanah in the month of Tishrei?
 SPARQL: SELECT ?answer WHERE { wd:Q131028 wdt:P837 ?answer . ?answer wdt:P2922 wd:Q217782}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rosh Hashanah', 'p': 'takes place on', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'month', 'o': 'Tishrei'}}

 Q: What is the {sovereign state} for {head of state} of {Emmanuel Macron}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q3052772 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Emmanuel Macron', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the monument with the highest luminous intensity whose heritage designation is Rijksmonument?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4989906 . ?ent wdt:P3041 ?obj . ?ent wdt:P1435 wd:Q916333 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'luminous intensity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monument', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'heritage designation', 'o': 'Rijksmonument'}}}

 Q: What is <playing range image> of <alto saxophone> ?
 SPARQL: select distinct ?answer where { wd:Q445275 wdt:P2343 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'alto saxophone', 'p': 'playing range image', 'o': '?x0'}

 Q: How many {speaker} are to/by {Ronald Reagan} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P823 wd:Q9960 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'speaker', 'o': 'Ronald Reagan'}

 Q: What is the {polytheism} for {religion} of {Etruschi}
 SPARQL:  select distinct ?obj where { wd:Q17161 wdt:P140 ?obj . ?obj wdt:P31 wd:Q9163 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Etruschi', 'p': 'religion', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'polytheism'}}

 Q: What is {film starring} of {Miami Vice}, that has {birthyear} is {1949-12-15} ?
 SPARQL: SELECT ?answer WHERE { wd:Q559321 wdt:P161 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1949'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Miami Vice', 'p': 'starring', 'o': '?x0', 't': '1949'}

 Q: Which is the listed ingredient for vitamin E?
 SPARQL: select distinct ?answer where { ?answer wdt:P4543 wd:Q141180}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'listed ingredient', 'o': 'vitamin E'}

 Q: Who is the player that participated in Barbora Spotakova?
 SPARQL: SELECT ?answer WHERE { wd:Q6419 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbora Spotakova', 'p': 'participated in', 'o': '$y0'}}

 Q: Tell me the method for determining hypertension with a CACNB2 genetic association?
 SPARQL: SELECT ?value WHERE { wd:Q41861 p:P2293 ?s . ?s ps:P2293 wd:Q17854978 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hypertension', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'CACNB2'}}}

 Q: Is it true that the highest break of Jak Jones equals to 139?
 SPARQL: ASK WHERE { wd:Q549519 wdt:P6590 ?obj filter(?obj = 139) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jak Jones', 'p': 'highest break', 'o': '?x0', '?x0': '139'}

 Q: Did {IBM} {owner of} {Cognos} and {Mark sense} ?
 SPARQL: ASK WHERE { wd:Q37156 wdt:P1830 wd:Q1107048 . wd:Q37156 wdt:P1830 wd:Q16928019 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'IBM', 'p': 'owner of', 'o': '?x0', '?x0': 'Cognos'}, {'h': 'IS', 'v': '?x1', 's': 'IBM', 'p': 'owner of', 'o': '?x1', '?x1': 'Mark sense'}]

 Q: What is {official symbol} of {Quebec} that is {applies to part} is {tree} ?
 SPARQL: SELECT ?obj WHERE { wd:Q176 p:P2238 ?s . ?s ps:P2238 ?obj . ?s pq:P518 wd:Q10884 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Quebec', 'p': 'official symbol', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'tree'}}}

 Q: What is {deathplace} of {Gerrit Rietveld}, that has {populated places within} is {Themaat} ?
 SPARQL: SELECT ?answer WHERE { wd:Q160435 wdt:P20 ?answer . ?answer wdt:P1383 wd:Q1846873}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gerrit Rietveld', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'populated places within', 'o': 'Themaat'}}

 Q: Which is the domain of subset?
 SPARQL: select distinct ?answer where { wd:Q177646 wdt:P1568 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'subset', 'p': 'domain', 'o': '?x0'}

 Q: what is the {together with} for {Kid Cudi} has {award received} as {Grammy Award for Best Rap/Sung Performance} ?
 SPARQL: SELECT ?value WHERE { wd:Q299138 p:P166 ?s . ?s ps:P166 wd:Q1542172 . ?s pq:P1706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kid Cudi', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best Rap/Sung Performance'}}}

 Q: What is ISzDb company ID of The Walt Disney Company?
 SPARQL: select distinct ?answer where { wd:Q7414 wdt:P3115 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Walt Disney Company', 'p': 'ISzDb company ID', 'o': '?x0'}

 Q: In which language of work or name do heart has a pronunciation audio as Ru-сердце.ogg?
 SPARQL: SELECT ?value WHERE { wd:Q1072 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'Ru-сердце.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language of work or name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'heart', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'pronunciation audio', 'o': 'ru-сердце.ogg'}}}

 Q: What is the {religious text} for {present in work} of {Melchizedek}
 SPARQL:  select distinct ?obj where { wd:Q219395 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Melchizedek', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: How many platforms does Tomb Raider have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q270503 wdt:P400 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Tomb Raider', 'p': 'platform', 'o': '?x0'}

 Q: Which is the LIPID MAPS ID for abscisic acid?
 SPARQL: select distinct ?answer where { wd:Q332211 wdt:P2063 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'abscisic acid', 'p': 'LIPID MAPS ID', 'o': '?x0'}

 Q: What is {nominated for} of {Claudette Colbert} that is {statement is subject of} is {8th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q203819 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q132080 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Claudette Colbert', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '8th Academy Awards'}}}

 Q: what is the {statement is subject of} for {Iowa} has {nickname} as {The Hawkeye State} ?
 SPARQL: SELECT ?value WHERE { wd:Q1546 p:P1449 ?s . ?s ps:P1449 ?x filter(contains(?x,'The Hawkeye State')) . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iowa', 'p': 'nickname', 'o': '$y0'}}

 Q: Name an online dictionary written by John Simpson that contains the word "dictionnary" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3327521 . ?sbj wdt:P50 wd:Q6257950 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dictionary')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'online dictionary', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'written by', 'o': 'John Simpson'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dictionary'}}

 Q: Is the fee of Ueno Zoo equal to 300?
 SPARQL: ASK WHERE { wd:Q162722 wdt:P2555 ?obj filter(?obj = 300) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ueno Zoo', 'p': 'fee', 'o': '?x0', '?x0': '300'}

 Q: Which is the academic major and the academic degree of John Updike who was educated at the Harvard University?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q105756 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Updike', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Updike', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard University'}}}]

 Q: What is killed by Harry Potter?
 SPARQL: select distinct ?answer where { ?answer wdt:P157 wd:Q3244512}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'killed by', 'o': 'Harry Potter'}

 Q: Who located the administrative territorial entity resting place of Harald III of Norway?
 SPARQL: SELECT ?answer WHERE { wd:Q203647 wdt:P119 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harald III of Norway', 'p': 'resting place', 'o': '$y0'}}

 Q: How many employers are there for Edward Snowden?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q13424289 wdt:P108 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Edward Snowden', 'p': 'employer', 'o': '?x0'}

 Q: What is {elected in} and {end cause} of {{Jeremy Corbyn} has {position held} as {Member of the 56th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q291169 p:P39 ?s . ?s ps:P39 wd:Q30524718 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremy Corbyn', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 56th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremy Corbyn', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 56th Parliament of the United Kingdom'}}}]

 Q: What is {award received} of {Gwendolyn Brooks} that is {point in time} is {1994-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q270715 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gwendolyn Brooks', 'p': 'award', 'o': '?x0', 't': '1994'}

 Q: The conjugate acid of water has a monoanion of?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q283 . ?sbj wdt:P31 wd:Q55523986 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'water', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monoanion'}}

 Q: Which is the summit of the highest point of Shanghai?
 SPARQL:  select distinct ?obj where { wd:Q8686 wdt:P610 ?obj . ?obj wdt:P31 wd:Q207326 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shanghai', 'p': 'highest point', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'summit'}}

 Q: What is {medium} of {maker of} of {textile arts} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10988986 wdt:P1056 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'medium', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'textile art', 'p': 'maker of', 'o': '$y0'}}

 Q: What is the CPI inflation rate of the endemic to of  the Indian cuisine ?
 SPARQL: SELECT ?answer WHERE { wd:Q192087 wdt:P2341 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Indian cuisine', 'p': 'endemic to', 'o': '$y0'}}

 Q: Who is {club manager} of {actress} of {WrestleMania III} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50817 wdt:P161 ?X . ?X wdt:P286 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manager', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'WrestleMania III', 'p': 'actress', 'o': '$y0'}}

 Q: How many {head of government} are for {German Democratic Republic} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q16957 wdt:P6 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'German Democratic Republic', 'p': 'head of government', 'o': '?x0'}

 Q: What is the {religious text} for {followed by} of {Exodus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P156 wd:Q9190 . ?sbj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'Exodus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: What award did Hume Cronyn recieve in 1964?
 SPARQL: SELECT ?obj WHERE { wd:Q395205 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1964')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hume Cronyn', 'p': 'award', 'o': '?x0', 't': '1964'}

 Q: Which is Agassiz checklist number for Danaus plexippus?
 SPARQL: select distinct ?answer where { wd:Q212398 wdt:P1744 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Danaus plexippus', 'p': 'Agassiz checklist number', 'o': '?x0'}

 Q: What is {captain} of {plays for} of {Gerry Brisson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q746901 wdt:P54 ?X . ?X wdt:P634 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'captain', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerry Brisson', 'p': 'plays for', 'o': '$y0'}}

 Q: How many {payment types accepted} are to/by {money} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2851 wd:Q1368 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'payment types accepted', 'o': 'money'}

 Q: What is located in the landscape of The Scream?
 SPARQL: SELECT ?answer WHERE { wd:Q471379 wdt:P180 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is located in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Scream', 'p': 'landscape of', 'o': '$y0'}}

 Q: Who is the airline alliance of Singapore Airlines?
 SPARQL: select distinct ?answer where { wd:Q32245 wdt:P114 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Singapore Airlines', 'p': 'airline alliance', 'o': '?x0'}

 Q: Who are Sandrart.net artwork ID of Laocoön and His Sons?
 SPARQL: select distinct ?answer where { wd:Q465762 wdt:P4380 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Laocoön and His Sons', 'p': 'Sandrart.net artwork ID', 'o': '?x0'}

 Q: What is the official symbol of New Brunswick?
 SPARQL: select distinct ?answer where { wd:Q1965 wdt:P2238 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'New Brunswick', 'p': 'official symbol', 'o': '?x0'}

 Q: Which is the update method for iTunes?
 SPARQL: select distinct ?answer where { ?answer wdt:P4387 wd:Q9589}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'update method', 'o': 'iTunes'}

 Q: what is the {point in time} for {George Clooney} has {award received} as {Indiana Film Journalists Association Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q23844 p:P166 ?s . ?s ps:P166 wd:Q16058281 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'George Clooney', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Indiana Film Journalists Association Award for Best Actor'}, 't': '?x0'}

 Q: What is {item used} of {coincident with} of {human body} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23852 wdt:P1382 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'human body', 'p': 'coincident with', 'o': '$y0'}}

 Q: What is {ranking} of {Jimmy Connors} that is {sport} is {tennis singles} ?
 SPARQL: SELECT ?obj WHERE { wd:Q53393 p:P1352 ?s . ?s ps:P1352 ?obj . ?s pq:P641 wd:Q18123880 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jimmy Connors', 'p': 'rank', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sport', 'o': 'tennis singles'}}}

 Q: What is <modified version of> of <Over the Rainbow> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P5059 wd:Q161402}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'modified version of', 'o': 'Over the Rainbow'}

 Q: What is the birthplace of Konrad Adenauer, which is bordered by the Rhein-Berg District?
 SPARQL: SELECT ?answer WHERE { wd:Q2492 wdt:P19 ?answer . ?answer wdt:P47 wd:Q6295}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Konrad Adenauer', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bordered by', 'o': 'Rhein-Berg District'}}

 Q: What is {followed by} and {follows} of {{Lothair I} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150735 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: what is the {start time} for {Bangalore} has {located in the administrative territorial entity} as {Mysore State} ?
 SPARQL: SELECT ?value WHERE { wd:Q1355 p:P131 ?s . ?s ps:P131 wd:Q3374892 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bangalore', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Mysore State'}}}

 Q: When is {date of death} of {Luca Pacioli} whose {earliest date} is {1517-4-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q87620 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1319 ?x filter(contains(YEAR(?x),'1517')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Luca Pacioli', 'p': 'date of death', 'o': '?x0', 't': '1517'}

 Q: What is tutor Andreas Vesalius' career?
 SPARQL: SELECT ?answer WHERE { wd:Q170267 wdt:P1066 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'career', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andreas Vesalius', 'p': 'tutor', 'o': '$y0'}}

 Q: When did Wuppertal have a population of 345,425?
 SPARQL: SELECT ?value WHERE { wd:Q2107 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'345425.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Wuppertal', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '345425.0'}, 't': '?x0'}

 Q: Does the 645 Agrippina have a longitude of ascending node equal to 0.16770508344013?
 SPARQL: ASK WHERE { wd:Q112292 wdt:P2213 ?obj filter(?obj = 0.16770508344013) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Agrippina', 'p': 'longitude of ascending node', 'o': '?x0', '?x0': '0.16770508344013'}

 Q: What capital of the Tran dynasty has a position of 105.841?
 SPARQL: SELECT ?answer WHERE { wd:Q3111454 wdt:P36 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'105.841'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tran dynasty', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'position', 'o': '105.841'}}

 Q: What is {music by} of {Gayane}, that has {born on} is {1903-6-6} ?
 SPARQL: SELECT ?answer WHERE { wd:Q539437 wdt:P86 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1903'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gayane', 'p': 'music by', 'o': '?x0', 't': '1903'}

 Q: Did {Tonya_Harding} {sport} {pair skating}?
 SPARQL: ASK WHERE { wd:Q236278 wdt:P641 wd:Q1682809 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Tonya Harding', 'p': 'sport', 'o': '?x0', '?x0': 'pair skating'}]

 Q: Is the quantity of Sandbox on December 12th less than 9.6?
 SPARQL: ASK WHERE { wd:Q5248913 wdt:P1106 ?obj filter(?obj < 9.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'December 12', 'p': 'Sandbox-Quantity', 'o': '?x0', '?x0': '9.6'}

 Q: Give me {history of a country or state} that {facet of} {Israel} and which that starts with {'h'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17544377 . ?sbj wdt:P1269 wd:Q801 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'history of a country or state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Israel'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: Give me {ancient monument} that {World Heritage criteria} {(iii)} and which that starts with {'g'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3395377 . ?sbj wdt:P2614 wd:Q23038977 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient monument', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'World Heritage criteria', 'o': '(iii)'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: Who is the {gene} for {genetic association} of {allergic rhinitis}
 SPARQL:  select distinct ?obj where { wd:Q272436 wdt:P2293 ?obj . ?obj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'allergic rhinitis', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: What is <Unifrance film ID> of <The Wages of Fear> ?
 SPARQL: select distinct ?answer where { wd:Q465773 wdt:P3961 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Wages of Fear', 'p': 'Unifrance film ID', 'o': '?x0'}

 Q: What was the population of Bermuda on 0-0-1988?
 SPARQL: SELECT ?obj WHERE { wd:Q23635 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bermuda', 'p': 'population', 'o': '?x0', 't': '1988'}

 Q: Give me {municipality of Norway} that starts with {'ø'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q755707 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ø')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Norway'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ø'}}

 Q: Mention the fictional human character murdered by Luke Skywalker
 SPARQL:  select distinct ?obj where { wd:Q51746 wdt:P157 ?obj . ?obj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Luke Skywalker', 'p': 'murdered by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional human'}}

 Q: What is <JMA Seismic Intensity Database ID> of <2011 Tōhoku earthquake and tsunami> ?
 SPARQL: select distinct ?answer where { wd:Q36204 wdt:P5182 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '2011 Tōhoku earthquake and tsunami', 'p': 'JMA Seismic Intensity Database ID', 'o': '?x0'}

 Q: Who contributed to the published works of El Mundo?
 SPARQL: select distinct ?answer where { ?answer wdt:P3919 wd:Q921217}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contributed to', 'o': 'El Mundo'}

 Q: Which is the GS1 Manufacturer code for Google?
 SPARQL: select distinct ?answer where { wd:Q95 wdt:P3193 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Google', 'p': 'GS1 Manufacturer code', 'o': '?x0'}

 Q: What are the political system which start with the letter totalitarianism
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28108 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'totalitarianism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'totalitarianism'}}

 Q: Which is the public company that has the material produced of Coca-Cola?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q2813 . ?sbj wdt:P31 wd:Q891723 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'material produced', 'o': 'Coca-Cola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public company'}}

 Q: Is the horizontal depth of the DP 0193 Egg-shaped vase with small mouth greater than 36.0?
 SPARQL: ASK WHERE { wd:Q59416972 wdt:P5524 ?obj filter(?obj > 36.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Egg-shaped vase with small mouth (DP 0193)', 'p': 'horizontal depth', 'o': '?x0', '?x0': '36.0'}

 Q: What is the {designed by} and the {influenced by} of {JavaScript} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q2005 wdt:P287 ?ans_1 . wd:Q2005 wdt:P737 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'JavaScript', 'p': 'designed by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'JavaScript', 'p': 'influenced by', 'o': '?x1'}]

 Q: What is the {human} for {creator} of {Esperanto}
 SPARQL:  select distinct ?obj where { wd:Q143 wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'created', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What series is World of Warcraft followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q131007 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'World of Warcraft', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'World of Warcraft', 'p': 'series', 'o': '$y0'}}]

 Q: Where is the governmental capital of Ujjinakoppa?
 SPARQL: SELECT ?answer WHERE { wd:Q7878225 wdt:P131 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ujjinakoppa', 'p': 'in', 'o': '$y0'}}

 Q: What is {parent company of} of {alumnus of} of {Virgil Thomson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q544485 wdt:P69 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent company of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Virgil Thomson', 'p': 'alumnus of', 'o': '$y0'}}

 Q: What is {nominated for} of {Dianne Wiest} that is {statement is subject of} is {67th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q217573 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q857001 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dianne Wiest', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '67th Academy Awards'}}}

 Q: : Does Zhigulevskoye has alcohol by volume equal to 4.8
 SPARQL: ASK WHERE { wd:Q134899 wdt:P2665 ?obj filter(?obj = 4.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Zhigulevskoye', 'p': 'alcohol by volume', 'o': '?x0', '?x0': '4.8'}

 Q: Tell me me a municipality whose name consist of the word "barcelona" and whose patron saint Virgin Mary
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15284 . ?sbj wdt:P417 wd:Q345 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'barcelona')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Virgin Mary'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'barcelona'}}

 Q: What is {book publisher} of {on the tracklist of} of {Examining the race-specific prevalence of hidradenitis suppurativa at a large academic center; results from a retrospective chart review.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q38716727 wdt:P1433 ?X . ?X wdt:P123 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Examining the race-specific prevalence of hidradenitis suppurativa at a large academic center; results from a retrospective chart review.', 'p': 'on the tracklist of', 'o': '$y0'}}

 Q: Who is the operator and builder of the Bombardier Dash 8?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q736765 wdt:P137 ?ans_1 . wd:Q736765 wdt:P176 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Bombardier Dash 8', 'p': 'operator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Bombardier Dash 8', 'p': 'builder', 'o': '?x1'}]

 Q: How many position held are by the lieutenant general?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P39 wd:Q152951 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'position held', 'o': 'lieutenant general'}

 Q: What is the {fictional profession} for {opposite of} of {superhero}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P461 wd:Q188784 . ?sbj wdt:P31 wd:Q17305127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'superhero', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional profession'}}

 Q: Which is the two-part episode for the series The X-Files?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q2744 . ?sbj wdt:P31 wd:Q21664088 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'The X-Files', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'two-part episode'}}

 Q: What is {birthdate} of {kids} of {Teodoro Obiang Nguema Mbasogo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57385 wdt:P40 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birthdate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Teodoro Obiang', 'p': 'child', 'o': '$y0'}}

 Q: Which is part of the ecology?
 SPARQL: select distinct ?answer where { wd:Q7150 wdt:P361 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ecology', 'p': 'part of', 'o': '?x0'}

 Q: Which is the essential medicine in the drug used for treatment of skin cancer?
 SPARQL:  select distinct ?obj where { wd:Q192102 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q35456 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'skin cancer', 'p': 'used for treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine'}}

 Q: What was the population of Little Rock as of 2/4/1935?
 SPARQL: SELECT ?value WHERE { wd:Q33405 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'193524')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Little Rock', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '193524'}, 't': '?x0'}

 Q: Which is the male given name for the language of work in Russian?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q7737 . ?sbj wdt:P31 wd:Q12308941 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'male given name'}}

 Q: What are the Luther city which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1547289 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Luther city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Who is the  {Turkish bath} for {named after} of {Suleiman the Magnificent}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q8474 . ?sbj wdt:P31 wd:Q28077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Suleiman the Magnificent', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Turkish bath'}}

 Q: What is {played by} of {sequel of} of {Romance Revisited: The Love Songs of Jose Mari Chan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12508854 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Romance Revisited: The Love Songs of Jose Mari Chan', 'p': 'sequel of', 'o': '$y0'}}

 Q: What is {award received} of {André Gide} that is {prize money} is {146115.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q47484 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'146115.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andre Gide', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '146115.0'}}}

 Q: Which is the Open Library ID for Albert Ellis?
 SPARQL: select distinct ?answer where { wd:Q313931 wdt:P648 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albert Ellis', 'p': 'Open Library ID', 'o': '?x0'}

 Q: Which business division does The Walt Disney Company belong to?
 SPARQL:  select distinct ?obj where { wd:Q7414 wdt:P199 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Walt Disney Company', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: How many {honorific prefix} are to/by {Dame} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P511 wd:Q901407 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'honorific prefix', 'o': 'dame'}

 Q: What is the {human} for {relative} of {Heinrich Himmler}
 SPARQL:  select distinct ?obj where { wd:Q43067 wdt:P1038 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Heinrich Himmler', 'p': 'relative', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the the track list of The Beatles that has the date of release of 1968-11-0?
 SPARQL: SELECT ?answer WHERE { wd:Q3295515 wdt:P658 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'1968'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Beatles', 'p': 'track list', 'o': '?x0', 't': '1968'}

 Q: What is the {university} for {employer} of {Linus Pauling}
 SPARQL:  select distinct ?obj where { wd:Q48983 wdt:P108 ?obj . ?obj wdt:P31 wd:Q3918 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linus Pauling', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university'}}

 Q: Which means {World Golf Hall of Fame player ID} for{Tom Watson} ?
 SPARQL: select distinct ?answer where { wd:Q532111 wdt:P4461 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tom Watson', 'p': 'World Golf Hall of Fame player ID', 'o': '?x0'}

 Q: When did Henry Steele Commager receive his education from the University of Chicago ?
 SPARQL: SELECT ?value WHERE { wd:Q3785004 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Steele Commager', 'p': 'education', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'education', 'o': 'University of Chicago'}}}

 Q: Which Chinese character has the tallest stroke count?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q53764738 . ?ent wdt:P5205 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'stroke count', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Chinese character'}}

 Q: What is on the coast of Aleutian Islands, that has a tributary in Los Angeles River?
 SPARQL: SELECT ?answer WHERE { wd:Q119285 wdt:P206 ?answer . ?answer wdt:P974 wd:Q542965}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aleutian Islands', 'p': 'on the coast of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Los Angeles River'}}

 Q: What is the national necropolis in France with the highest quantity buried whose located in the administrative territorial entity is Souain-Perthes-lès-Hurlus?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q19951362 . ?ent wdt:P2324 ?obj . ?ent wdt:P131 wd:Q544505 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'quantity buried', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national necropolis in France', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Souain-Perthes-lès-Hurlus'}}}

 Q: What are the business division and subsidiary of American Broadcasting Company?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q169889 wdt:P199 ?ans_1 . wd:Q169889 wdt:P355 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'American Broadcasting Company', 'p': 'business division', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'American Broadcasting Company', 'p': 'subsidiary', 'o': '?x1'}]

 Q: What is the {country} for {participant} of {Battle of France}
 SPARQL:  select distinct ?obj where { wd:Q151340 wdt:P710 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Battle of France', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'countries'}}

 Q: Give me {TV production company} that contains the word {tv} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10689397 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tv')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'production company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tv'}}

 Q: what is the {statement is subject of} for {Angela Lansbury} has {award received} as {Tony Award for Best Actress in a Musical} ?
 SPARQL: SELECT ?value WHERE { wd:Q206856 p:P166 ?s . ?s ps:P166 wd:Q1537996 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Angela Lansbury', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Tony Award for Best Actress in a Musical'}}}

 Q: What is the higher taxon of Mammut, whose vernacular name is Mastodonty?
 SPARQL: SELECT ?answer WHERE { wd:Q192272 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Mastodonty'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mammut', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'mastodonty'}}

 Q: Who was the significant person during the trial Brown v. Board of Education?
 SPARQL: select distinct ?answer where { wd:Q875738 wdt:P3342 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brown v. Board of Education', 'p': 'significant person', 'o': '?x0'}

 Q: Give me {ice hockey team} that {league} {National Hockey League} and which contains the word {ottawa} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4498974 . ?sbj wdt:P118 wd:Q1215892 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ottawa')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hockey team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'league', 'o': 'NHL'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ottawa'}}

 Q: Tell me national cuisine whose name has the word mex in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1968435 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mex')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national cuisine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'mex'}}

 Q: What is the {referendums in Ireland} with the {MIN(number of spoilt votes)} whose {follows} is {Eighth Amendment of the Constitution of Ireland}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q54086790 . ?ent wdt:P5044 ?obj . ?ent wdt:P155 wd:Q4126745} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of spoilt votes', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'referendums in Ireland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'Eighth Amendment of the Constitution of Ireland'}}}

 Q: How many Doctor Who spin-offs are there?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q34316 wdt:P2512 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Doctor Who', 'p': 'spin-offs', 'o': '?x0'}

 Q: What is {academic field for} of {scientific area} of {Zdzisław Szymański} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9389874 wdt:P101 ?X . ?X wdt:P2578 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic field for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zdzisław Szymański', 'p': 'area', 'o': '$y0'}}

 Q: Which in {battle} {has daughter} of {Yeon Taejo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q703988 wdt:P40 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'battle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yeon Taejo', 'p': 'daughter', 'o': '$y0'}}

 Q: What is the height record held by Renaud Lavillenie?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1742 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Renaud Lavillenie', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Renaud Lavillenie', 'p': 'record held', 'o': '$y0'}}]

 Q: What was the population of Burundi in 1992?
 SPARQL: SELECT ?obj WHERE { wd:Q967 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Burundi', 'p': 'population', 'o': '?x0', 't': '1992'}

 Q: Was Aristotle a student of Heraclitus?
 SPARQL: ASK WHERE { wd:Q868 wdt:P1066 wd:Q41155 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Aristotle', 'p': 'student of', 'o': '?x0', '?x0': 'Heraclitus'}]

 Q: What is {member of sports team} of {Kenny Dalglish} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q187198 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenny Dalglish', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenny Dalglish', 'p': 'team', 'o': '$y0'}}]

 Q: what is the {start time} for {Nicolás Maduro} has {position held} as {Secretary General of the Non-Aligned Movement} ?
 SPARQL: SELECT ?value WHERE { wd:Q58132 p:P39 ?s . ?s ps:P39 wd:Q15647601 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nicolás Maduro', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary General of the Non-Aligned Movement'}}}

 Q: Which is the CPU of Pac-Man?
 SPARQL: select distinct ?answer where { wd:Q173626 wdt:P880 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pac-Man', 'p': 'CPU', 'o': '?x0'}

 Q: Which is FAO 2007 genetic resource ID for Hereford?
 SPARQL: select distinct ?answer where { wd:Q737173 wdt:P3380 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hereford', 'p': 'FAO 2007 genetic resource ID', 'o': '?x0'}

 Q: Which is the RKDartists ID of Donatello?
 SPARQL: select distinct ?answer where { wd:Q37562 wdt:P650 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Donatello', 'p': 'RKDartists ID', 'o': '?x0'}

 Q: What film production company was founded by Oprah Winfrey?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q55800 . ?sbj wdt:P31 wd:Q1762059 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Oprah Winfrey', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film production company'}}

 Q: Tell me numeric writing system whose name has the word numerals in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q140774 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'numerals')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'numeric writing system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'numerals'}}

 Q: What is {developer of} of {continent} of {Amundsen Sea} ?
 SPARQL: SELECT ?answer WHERE { wd:Q72154 wdt:P30 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amundsen Sea', 'p': 'continent', 'o': '$y0'}}

 Q: What is the birth place of Annie Oakley, is it correct that it has 52501.0 inhabitants?
 SPARQL: SELECT ?answer WHERE { wd:Q230935 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'52501.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Annie Oakley', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '52501.0'}}

 Q: What is the {member of sports team} and the {position played on team / speciality} of {Thierry_Henry} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q45901 wdt:P54 ?ans_1 . wd:Q45901 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Thierry Henry', 'p': 'team', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Thierry Henry', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: What is the {supplementary intercardinal direction} with the {MAX(position angle)} whose {opposite of} is {east-northeast}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22809326 . ?ent wdt:P2211 ?obj . ?ent wdt:P461 wd:Q12593409 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'position angle', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'supplementary intercardinal direction', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'east-northeast'}}}

 Q: Which port has the highest production rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q44782 . ?ent wdt:P2197 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'production rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'port'}}

 Q: Tell me sport discipline whose name has the word  wheelchair in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2312410 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wheelchair')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport discipline'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wheelchair'}}

 Q: Give me {place with town rights and privileges} that {list of monuments} {listed objects in Salzburg} and which contains the word {salzburg} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13539802 . ?sbj wdt:P1456 wd:Q1188436 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'salzburg')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'place with town rights and privileges', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'list of monuments', 'o': 'listed objects in Salzburg'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'salzburg'}}

 Q: Did {Mark_David_Chapman} {place of detention} {Attica Correctional Facility} and {Wende Correctional Facility} ?
 SPARQL: ASK WHERE { wd:Q80462 wdt:P2632 wd:Q758034 . wd:Q80462 wdt:P2632 wd:Q7982352 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mark David Chapman', 'p': 'place of detention', 'o': '?x0', '?x0': 'Attica Correctional Facility'}, {'h': 'IS', 'v': '?x1', 's': 'Mark David Chapman', 'p': 'place of detention', 'o': '?x1', '?x1': 'Wende Correctional Facility'}]

 Q: What member of the Ranjitsinhji sports team joined in 1893 ?
 SPARQL: SELECT ?obj WHERE { wd:Q2757835 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1893')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ranjitsinhji', 'p': 'team', 'o': '?x0', 't': '1893'}

 Q: What is {composed by} of {preceded by} of {All We Know} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2315956 wdt:P155 ?X . ?X wdt:P86 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'composer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'All We Know', 'p': 'preceded by', 'o': '$y0'}}

 Q: Name the record label behind the surge of Suge Knight
 SPARQL:  select distinct ?obj where { wd:Q455880 wdt:P264 ?obj . ?obj wdt:P31 wd:Q18127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Suge Knight', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'record label'}}

 Q: Who is the member of Münster since 1993-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q2742 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Münster', 'p': 'member of', 'o': '?x0', 't': '1993'}

 Q: What is American Airlines airline hub for the international airport
 SPARQL:  select distinct ?obj where { wd:Q32396 wdt:P113 ?obj . ?obj wdt:P31 wd:Q644371 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Airlines', 'p': 'airline hub', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international airport'}}

 Q: When Rowan Atkinson attended Queen's College, what was his academic major and degree?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 wd:Q73094 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'attended', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'attended', 'o': "Queen's College"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'attended', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'attended', 'o': "Queen's College"}}}]

 Q: Name a {subsidiary company} that {manager/director} {Daniel Schwartz} that starts with the letter {'b'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q658255 . ?sbj wdt:P1037 wd:Q28229358 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'subsidiary', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'manager', 'o': 'Daniel Schwartz'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: Which is the Florentine musea catalogue ID for Primavera?
 SPARQL: select distinct ?answer where { wd:Q549847 wdt:P2242 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Primavera', 'p': 'Florentine musea catalogue ID', 'o': '?x0'}

 Q: what is the {start time} for {Lily Tomlin} has {spouse} as {Jane Wagner} ?
 SPARQL: SELECT ?value WHERE { wd:Q229271 p:P26 ?s . ?s ps:P26 wd:Q13560376 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lily Tomlin', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Jane Wagner'}}}

 Q: What is {educated at} of {Mao Zedong} that is {start time} is {1912-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5816 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1912')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mao Zedong', 'p': 'educated at', 'o': '?x0', 't': '1912'}

 Q: Where is the resting place of dedication of the Church of St Peter?
 SPARQL: SELECT ?answer WHERE { wd:Q17528903 wdt:P825 ?X . ?X wdt:P119 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'resting place', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Church of St Peter', 'p': 'dedication', 'o': '$y0'}}

 Q: What is {sister town} of {deathplace} of {Hafsa bint Umar} ?
 SPARQL: SELECT ?answer WHERE { wd:Q263791 wdt:P20 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hafsa bint Umar', 'p': 'deathplace', 'o': '$y0'}}

 Q: Which is {characters} of {software framework} {Civilization VI: Rise and Fall} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24057203 wdt:P1547 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Civilization VI: Rise and Fall', 'p': 'software framework', 'o': '$y0'}}

 Q: Who is the parent company of the label of Carabao?
 SPARQL: SELECT ?answer WHERE { wd:Q1035286 wdt:P264 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent company of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carabao', 'p': 'label', 'o': '$y0'}}

 Q: What is the {author} and the {cover artist} of {Treasure_Island} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q185118 wdt:P50 ?ans_1 . wd:Q185118 wdt:P736 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Treasure Island', 'p': 'author', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Treasure Island', 'p': 'cover artist', 'o': '?x1'}]

 Q: which series ordinal of osmium tetroxide has ionization energy of 12.6?
 SPARQL: SELECT ?value WHERE { wd:Q422021 p:P2260 ?s . ?s ps:P2260 ?x filter(contains(?x,'12.6')) . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'osmium tetroxide', 'p': 'ionization energy', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ionization energy', 'o': '12.6'}}}

 Q: What was Christian Lous Lange nominated for in 1919?
 SPARQL: SELECT ?obj WHERE { wd:Q206446 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1919')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Christian Lous Lange', 'p': 'nominated for', 'o': '?x0', 't': '1919'}

 Q: What is Mikhail Botvinnik's Israel Chess Federation player ID?
 SPARQL: select distinct ?answer where { wd:Q178865 wdt:P3867 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mikhail Botvinnik', 'p': 'Israel Chess Federation player ID', 'o': '?x0'}

 Q: What is {member of sports team} of {Tom Finney} that is {number of matches played} is {433.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q352338 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'433.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tom Finney', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '433.0'}}}

 Q: What is {ultimate cause} of {participant in conflict} of {Vasily Blyukher} ?
 SPARQL: SELECT ?answer WHERE { wd:Q48129 wdt:P607 ?X . ?X wdt:P828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vasily Blyukher', 'p': 'conflict', 'o': '$y0'}}

 Q: "Which in the Administrative unit of Nonthaburi, has the inhabitants amount of 332388.0?"
 SPARQL: SELECT ?answer WHERE { wd:Q768864 wdt:P131 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'332388.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nonthaburi', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '332388.0'}}

 Q: Tell me which programming language implementation starts with the letter y?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4117406 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'programming language implementation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: tell me aspect of history name has the word propaganda it it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17524420 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'propaganda')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of history'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'propaganda'}}

 Q: How many architects worked on the St. Peter's Basilica?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q12512 wdt:P84 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': "St. Peter's Basilica", 'p': 'architect', 'o': '?x0'}

 Q: Did Miles Davis record and label the RCA and Capitol Records?
 SPARQL: ASK WHERE { wd:Q93341 wdt:P264 wd:Q202585 . wd:Q93341 wdt:P264 wd:Q193023 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Miles Davis', 'p': 'label', 'o': '?x0', '?x0': 'RCA'}, {'h': 'IS', 'v': '?x1', 's': 'Miles Davis', 'p': 'label', 'o': '?x1', '?x1': 'Capitol Records'}]

 Q: What is <union of> of <administrative territorial entity> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2737 wd:Q56061}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'union of', 'o': 'administrative territorial entity'}

 Q: What is {inhabitants} of {state} of {Mbuji-Mayi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q319660 wdt:P17 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mbuji-Mayi', 'p': 'state', 'o': '$y0'}}

 Q: What is the {confederation} for {head of government} of {Jefferson Davis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q162269 . ?sbj wdt:P31 wd:Q170156 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Jefferson Davis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'confederation'}}

 Q: Who did Diane von Furstenberg marry in 1969MacGraw
 SPARQL: SELECT ?obj WHERE { wd:Q272438 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Diane von Furstenberg', 'p': 'marry', 'o': '?x0', 't': '1969'}

 Q: What is {commodity} of {built by} of {HH-60 Jayhawk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1892024 wdt:P176 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'commodity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jayhawk', 'p': 'built by', 'o': '$y0'}}

 Q: Who is the sibling of Subutai?
 SPARQL: select distinct ?answer where { ?answer wdt:P3373 wd:Q162217}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Subutai'}

 Q: What is {dubbed by} of {series} of {Pretty, Pretty Dresses} ?
 SPARQL: SELECT ?answer WHERE { wd:Q32825539 wdt:P179 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dubbed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pretty, Pretty Dresses', 'p': 'series', 'o': '$y0'}}

 Q: What is the subdivided into  of the land of Dubrovka ?
 SPARQL: SELECT ?answer WHERE { wd:Q4903 wdt:P17 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divided into', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dubrovka', 'p': 'land', 'o': '$y0'}}

 Q: What is {date of death} of {Akiva ben Joseph} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q310821 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Akiva', 'p': 'death date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What are the municipality of Spain that contains the word zumaia in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2074737 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zumaia')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Spain'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zumaia'}}

 Q: who Wikimedia category for category for employees of the organization of Columbia University?
 SPARQL:  select distinct ?obj where { wd:Q49088 wdt:P4195 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Columbia University', 'p': 'category for employees of the organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: what is the {location} for {Louis VI of France} has {place of death} as {Château de la Douye} ?
 SPARQL: SELECT ?value WHERE { wd:Q165883 p:P20 ?s . ?s ps:P20 wd:Q48622322 . ?s pq:P276 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VI of France', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Château de la Douye'}}}

 Q: What is <number of processor cores> of <Xbox One> ?
 SPARQL: select distinct ?answer where { wd:Q13361286 wdt:P1141 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Xbox One', 'p': 'processor cores', 'o': '?x0'}

 Q: What songs are on the tracklist of Led Zeppelin IV?
 SPARQL:  select distinct ?obj where { wd:Q201940 wdt:P658 ?obj . ?obj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Led Zeppelin IV', 'p': 'tracklist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: Which is {detail map} of {Europe} where {media legend} is {topography of Europe} ?
 SPARQL: SELECT ?obj WHERE { wd:Q46 p:P1621 ?s . ?s ps:P1621 ?obj . ?s pq:P2096 ?x filter(contains(?x,'topography of Europe')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Europe', 'p': 'detail map', 'o': '?x0'}

 Q: What is {parent company of} of {State University of New York}, that has {co-ords} is {43.0062 -76.1973} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1140241 wdt:P355 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'43.0062 -76.1973'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'State University of New York', 'p': 'parent company of', 'o': '?x0'}

 Q: Give me {ice hockey tournament} that contains the word {trophy} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18325242 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trophy')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ice hockey tournament'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'trophy'}}

 Q: What career uses a fishing reel?
 SPARQL: SELECT ?answer WHERE { wd:Q14373 wdt:P106 ?answer . ?answer wdt:P2283 wd:Q1572168}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'fishing', 'p': 'career', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'fishing reel'}}

 Q: Is the inflation rate of Japan equal to -0.6?
 SPARQL: ASK WHERE { wd:Q17 wdt:P1279 ?obj filter(?obj = -0.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Japan', 'p': 'inflation rate', 'o': '?x0', '?x0': '-0.6'}

 Q: What is the {solvent} for {manifestation of} of {water}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q283 . ?sbj wdt:P31 wd:Q146505 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'water', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'solvent'}}

 Q: Where is the anatomical location of the cerebellum?
 SPARQL: select distinct ?answer where { ?answer wdt:P927 wd:Q130983}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'cerebellum'}

 Q: What is the {written work} for {edition or translation of} of {1}
 SPARQL:  select distinct ?obj where { wd:Q199 wdt:P629 ?obj . ?obj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '1', 'p': 'edition or translation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What sister of Jean Shrimpton has brown eyes?
 SPARQL: SELECT ?answer WHERE { wd:Q20119 wdt:P3373 ?answer . ?answer wdt:P1340 wd:Q17122705}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jean Shrimpton', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'eyes', 'o': 'brown'}}

 Q: what is the {for work} for {Russell Crowe} has {nominated for} as {Academy Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q129817 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Russell Crowe', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}}}

 Q: Give me {vegetation zone} that {continent} {Europe} and which that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2083910 . ?sbj wdt:P30 wd:Q46 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vegetation zone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'Europe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {human} for {notable work} of {The Count of Monte Cristo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P800 wd:Q191838 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'notable work', 'o': 'The Count of Monte Cristo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {language of work or name} for {soup} has {pronunciation audio} as {Ru-суп.ogg} ?
 SPARQL: SELECT ?value WHERE { wd:Q41415 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'Ru-суп.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'soup', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'pronunciation audio', 'o': 'ru-суп.ogg'}}}

 Q: In what country was Adelaide founded on 12-28-1836?
 SPARQL: SELECT ?obj WHERE { wd:Q5112 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1836')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Adelaide', 'p': 'country', 'o': '?x0', 't': '1836'}

 Q: What is the {codon} for {encoded by} of {L-Tyrosine}
 SPARQL:  select distinct ?obj where { wd:Q188017 wdt:P702 ?obj . ?obj wdt:P31 wd:Q165052 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L-Tyrosine', 'p': 'encoded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'codon'}}

 Q: What is the name of the music festival that is based on Sanremo Music Festival and that starts with the letter "c"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q868557 . ?sbj wdt:P144 wd:Q206959 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music festival', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Sanremo Music Festival'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {personal name} of {David Eddings}, that has {said to be different from} is {Taavet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q354888 wdt:P735 ?answer . ?answer wdt:P460 wd:Q22222753}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Eddings', 'p': 'personal name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be different from', 'o': 'Taavet'}}

 Q: What is the {human} for {sibling} of {George II of Great Britain}
 SPARQL:  select distinct ?obj where { wd:Q131981 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George II of Great Britain', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What twinned administrative body of Queensland started on October 10th, 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q36074 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Queensland', 'p': 'twinned administrative body', 'o': '?x0', 't': '1984'}

 Q: was the 2013 german federal election canadidacy age 21.6?
 SPARQL: ASK WHERE { wd:Q555931 wdt:P2998 ?obj filter(?obj < 21.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '2013 German federal election', 'p': 'age of candidacy', 'o': '?x0', '?x0': '21.6'}

 Q: How many {participant of} are for {Steffi Graf} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q11662 wdt:P1344 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Steffi Graf', 'p': 'participant of', 'o': '?x0'}

 Q: What is MobyGames group ID for The Sims ?
 SPARQL: select distinct ?answer where { wd:Q4897444 wdt:P5360 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Sims', 'p': 'MobyGames group ID', 'o': '?x0'}

 Q: Is the event distance of the diaulos equal to 0.8?
 SPARQL: ASK WHERE { wd:Q631917 wdt:P3157 ?obj filter(?obj = 0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'diaulos', 'p': 'event distance', 'o': '?x0', '?x0': '0.8'}

 Q: Was Website software engine Microsoft?
 SPARQL: ASK WHERE { wd:Q35127 wdt:P408 wd:Q2283 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'site', 'p': 'software engine', 'o': '?x0', '?x0': 'Microsoft'}]

 Q: What are the integer which start with the letter i
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12503 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), '1')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'integer'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': '1'}}

 Q: What is {has cities} of {county seat of} of {Catania} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1903 wdt:P1376 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has cities', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Catania', 'p': 'county seat of', 'o': '$y0'}}

 Q: Where is the location born of Mischa Maisky, which is adjacent to the Mārupe Municipality?
 SPARQL: SELECT ?answer WHERE { wd:Q381759 wdt:P19 ?answer . ?answer wdt:P47 wd:Q2232018}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mischa Maisky', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'adjacent to', 'o': 'Mārupe Municipality'}}

 Q: What is {opposite} of {manifestation of} of {figure of the Earth} ?
 SPARQL: SELECT ?answer WHERE { wd:Q437882 wdt:P1557 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'figure of the Earth', 'p': 'manifestation of', 'o': '$y0'}}

 Q: How many {owner of} are for {Nissan} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q20165 wdt:P1830 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nissan', 'p': 'owner of', 'o': '?x0'}

 Q: What is {county seat of} of {Hamilton}, that has {inhabitants} is {51000.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q30985 wdt:P1376 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'51000.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hamilton', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '51000.0'}}

 Q: What is {location} and {height} of {{pole vault} has {record held} as {Eliza McCartney}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q18011042 . ?s pq:P276 ?value1 . ?s pq:P2048 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Eliza McCartney'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'height', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Eliza McCartney'}}}]

 Q: What file format is used by the programming language SQL?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P277 wd:Q47607 . ?sbj wdt:P31 wd:Q235557 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'programming language', 'o': 'SQL', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'file format'}}

 Q: Which is measured by  quantity of erg ?
 SPARQL: SELECT ?answer WHERE { wd:Q185153 wdt:P111 ?X . ?X wdt:P1880 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'measured by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'erg', 'p': 'quantity', 'o': '$y0'}}

 Q: What is the {human} for {relative} of {Kate Spade}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1038 wd:Q275094 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'relative', 'o': 'Kate Spade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the political party that Hillary Clinton is a member of?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q6294 wdt:P463 ?ans_1 . wd:Q6294 wdt:P102 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'member of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hillary Clinton', 'p': 'party', 'o': '?x1'}]

 Q: What is the {organization} for {member of} of {Alexander Pushkin}
 SPARQL:  select distinct ?obj where { wd:Q7200 wdt:P463 ?obj . ?obj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander Pushkin', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: What game platform of Pac-Man has the latest release version of 4.2.6?
 SPARQL: SELECT ?answer WHERE { wd:Q173626 wdt:P400 ?answer . ?answer wdt:P348 ?x FILTER(contains(?x,'4.2.6'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pac-Man', 'p': 'platform', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'version', 'o': '4.2.6'}}

 Q: Which is a by-product of offal?
 SPARQL: select distinct ?answer where { wd:Q157484 wdt:P2822 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'offal', 'p': 'by-product of', 'o': '?x0'}

 Q: what is the {official name} for {Taos Pueblo} has {heritage designation} as {World Heritage Site} ?
 SPARQL: SELECT ?value WHERE { wd:Q252814 p:P1435 ?s . ?s ps:P1435 wd:Q9259 . ?s pq:P1448 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taos Pueblo', 'p': 'heritage designation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'heritage designation', 'o': 'World Heritage Site'}}}

 Q: what is the {applies to part} for {Jordan River} has {coordinate location} as {35.5583} ?
 SPARQL: SELECT ?value WHERE { wd:Q40059 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'35.5583')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jordan River', 'p': 'coordinates', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'coordinates', 'o': '35.5583'}}}

 Q: What is {distinguished from} of {necktie}, that has {height} is {607.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44416 wdt:P1889 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'607.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'tie', 'p': 'distinguished from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'height', 'o': '607.0'}}

 Q: Which color appears in Rocketeer?
 SPARQL: SELECT ?answer WHERE { wd:Q13476036 wdt:P1441 ?X . ?X wdt:P462 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'color', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rocketeer', 'p': 'appears in', 'o': '$y0'}}

 Q: What is Legacies of British Slave-ownership person ID for William Ewart Gladstone?
 SPARQL: select distinct ?answer where { wd:Q160852 wdt:P3023 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Ewart Gladstone', 'p': 'Legacies of British Slave-ownership person ID', 'o': '?x0'}

 Q: How many leagues are in the National Hockey League?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P118 wd:Q1215892 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'league', 'o': 'National Hockey League'}

 Q: what is the {start time} for {Clive Palmer} has {member of political party} as {Liberal National Party of Queensland} ?
 SPARQL: SELECT ?value WHERE { wd:Q550879 p:P102 ?s . ?s ps:P102 wd:Q1822905 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clive Palmer', 'p': 'member of political party', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of political party', 'o': 'Liberal National Party of Queensland'}}}

 Q: What political border does the Congress of Vienna have cause to be interested in?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P828 wd:Q46362 . ?sbj wdt:P31 wd:Q1292279 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause', 'o': 'Congress of Vienna', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political border'}}

 Q: How many {sports discipline competed in} are to/by {foil} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2416 wd:Q471447 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sports discipline competed in', 'o': 'foil'}

 Q: What is capital of Ōtsu ?
 SPARQL: select distinct ?answer where { wd:Q202907 wdt:P1376 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ōtsu', 'p': 'capital of', 'o': '?x0'}

 Q: What is the namesake of the Riemann zeta function, which has the Cauchy–Euler equation in its significant works?
 SPARQL: SELECT ?answer WHERE { wd:Q187235 wdt:P138 ?answer . ?answer wdt:P800 wd:Q1196465}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Riemann zeta function', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'Cauchy–Euler equation'}}

 Q: What is the INEGI municipality ID of Tlalnepantla de Baz?
 SPARQL: select distinct ?answer where { wd:Q845307 wdt:P3801 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tlalnepantla de Baz', 'p': 'INEGI municipality ID', 'o': '?x0'}

 Q: what is the {start time} for {Roscosmos State Corporation} has {manager/director} as {Yuri Koptev} ?
 SPARQL: SELECT ?value WHERE { wd:Q190795 p:P1037 ?s . ?s ps:P1037 wd:Q2895091 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roscosmos State Corporation', 'p': 'manager', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'manager', 'o': 'Yuri Koptev'}}}

 Q: Did {Dublin} {located in or next to body of water} {Liffey} and {Royal Canal} ?
 SPARQL: ASK WHERE { wd:Q1761 wdt:P206 wd:Q208009 . wd:Q1761 wdt:P206 wd:Q1542268 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Dublin', 'p': 'located in or next to body of water', 'o': '?x0', '?x0': 'Liffey'}, {'h': 'IS', 'v': '?x1', 's': 'Dublin', 'p': 'located in or next to body of water', 'o': '?x1', '?x1': 'Royal Canal'}]

 Q: Tell me the United States federal executive department that contains the word department in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q910252 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'department')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'United States federal executive department'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'department'}}

 Q: Where is the co-founder of The Evening of Ashura from?
 SPARQL: SELECT ?answer WHERE { wd:Q5945717 wdt:P276 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'co-founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Evening of Ashura', 'p': 'location', 'o': '$y0'}}

 Q: What is the {capital} for {twinned administrative body} of {Chicago}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q1297 . ?sbj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Chicago', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: What is {prime minister} of {active in} of {Theo van Doesburg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q160422 wdt:P937 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prime minister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theo van Doesburg', 'p': 'active in', 'o': '$y0'}}

 Q: What is {coordinate location} of {Narmada} that is {applies to part} is {river source} ?
 SPARQL: SELECT ?obj WHERE { wd:Q234004 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Narmada', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river source'}}}

 Q: Which is the Hederich encyclopedia article ID of Hades?
 SPARQL: select distinct ?answer where { wd:Q41410 wdt:P2272 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hades', 'p': 'Hederich encyclopedia article ID', 'o': '?x0'}

 Q: what is the {represents} for {North Atlantic Treaty} that has {signatory} as {Dean Acheson} ?
 SPARQL: SELECT ?value WHERE { wd:Q877399 p:P1891 ?s . ?s ps:P1891 wd:Q214758 . ?s pq:P1268 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'represents', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North Atlantic Treaty', 'p': 'signatory', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'signatory', 'o': 'Dean Acheson'}}}

 Q: IS THE BITE FORCE QUOTIENT OF THE DHOLE EQUALS 132
 SPARQL: ASK WHERE { wd:Q132585 wdt:P3485 ?obj filter(?obj = 132) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Dhole', 'p': 'bite force quotient', 'o': '?x0', '?x0': '132'}

 Q: What is {position held} of {Colin Renfrew} that is {end time} is {2004-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q335189 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Colin Renfrew', 'p': 'position held', 'o': '?x0', 't': '2004'}

 Q: Who gave the{takes places during} of {previous is} of {New Year} ?
 SPARQL: SELECT ?answer WHERE { wd:Q34812 wdt:P155 ?X . ?X wdt:P837 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'takes places during', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'New Year', 'p': 'previous is', 'o': '$y0'}}

 Q: What is {number of out of school children} of {place of origin} of {We Wish You a Merry Christmas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q252123 wdt:P495 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'We Wish You a Merry Christmas', 'p': 'place of origin', 'o': '$y0'}}

 Q: What is the safety classification and labelling of carbon monoxide that's NFPA Instability is 0?
 SPARQL: SELECT ?obj WHERE { wd:Q2025 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P995 ?x filter(contains(?x,'0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'carbon monoxide', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Instability', 'o': '0'}}}

 Q: What is {has influence} of {Anna Akhmatova}, that has {birth year} is {1799-5-26} ?
 SPARQL: SELECT ?answer WHERE { wd:Q80440 wdt:P737 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1799'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anna Akhmatova', 'p': 'has influence', 'o': '?x0', 't': '1799'}

 Q: What is <CiNii article ID> of <Belvedere> ?
 SPARQL: select distinct ?answer where { wd:Q211818 wdt:P2409 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Belvedere', 'p': 'CiNii article ID', 'o': '?x0'}

 Q: Tell me the scientific model that starts with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q193946 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scientific model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {human} for {conflict} of {Battle of Austerlitz}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P607 wd:Q134114 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'Battle of Austerlitz', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Of the 2015 Baga massacre, does the number of those missing equal 2000?
 SPARQL: ASK WHERE { wd:Q18732673 wdt:P1446 ?obj filter(?obj = 2000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2015 Baga massacre', 'p': 'missing', 'o': '?x0', '?x0': '2000'}

 Q: Is there a Thanksgiving in Panama?
 SPARQL: ASK WHERE { wd:Q13959 wdt:P276 wd:Q804 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Thanksgiving', 'p': 'location', 'o': '?x0', '?x0': 'Panama'}]

 Q: What is the posthumous name of Emperor Taizong of Tang in the writing system of traditional Chinese characters?
 SPARQL: SELECT ?obj WHERE { wd:Q9701 p:P1786 ?s . ?s ps:P1786 ?obj . ?s pq:P282 wd:Q178528 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'posthumous name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emperor Taizong of Tang', 'p': 'posthumous name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'writing system', 'o': 'traditional Chinese characters'}}}

 Q: What is {language of work} of {Shahada}, that has {Women in Red banner} is {Arabic WV banner.jpg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41831 wdt:P407 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Arabic WV banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shahada', 'p': 'language of work', 'o': '?x0'}

 Q: What is {health condition} of {developed by} of {Hughes H-4 Hercules} ?
 SPARQL: SELECT ?answer WHERE { wd:Q667443 wdt:P178 ?X . ?X wdt:P1050 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'health condition', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hughes H-4 Hercules', 'p': 'developed by', 'o': '$y0'}}

 Q: what is the {end time} for {Wes Craven} has {spouse} as {Bonnie Broecker} ?
 SPARQL: SELECT ?value WHERE { wd:Q223992 p:P26 ?s . ?s ps:P26 wd:Q20894422 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wes Craven', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Bonnie Broecker'}}}

 Q: Which is the nonprofit organization if the formation location of Paris?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P740 wd:Q90 . ?sbj wdt:P31 wd:Q163740 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'formation location', 'o': 'Paris', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonprofit organization'}}

 Q: What is {comes before} of {comes after} of {Estonian Soviet Socialist Republic} ?
 SPARQL: SELECT ?answer WHERE { wd:Q130280 wdt:P155 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'comes before', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Estonian Soviet Socialist Republic', 'p': 'comes after', 'o': '$y0'}}

 Q: what is the {instance of} for {Fernando Pessoa} has {said to be the same as} as {Jean Seul de Méluret} ?
 SPARQL: SELECT ?value WHERE { wd:Q173481 p:P460 ?s . ?s ps:P460 wd:Q21028930 . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fernando Pessoa', 'p': 'said to be the same as', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'said to be the same as', 'o': 'Jean Seul de Méluret'}}}

 Q: What is {nominated for} of {Peter Sellers} that is {statement is subject of} is {37th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q177984 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917138 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Sellers', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '37th Academy Awards'}}}

 Q: Tell me phantom island  whose name has the word tuanaki in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q129264 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tuanaki')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phantom island'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tuanaki'}}

 Q: What is {to be distinguished from} of {Carthage}, that has {first issue} is {-814-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6343 wdt:P1889 ?answer . ?answer wdt:P571 ?x FILTER(contains(?x,'-814-0-0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carthage', 'p': 'distinguished from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first issue', 'o': '-814-0-0'}}

 Q: What is the {Chinese dynasty} for {replaces} of {Yuan dynasty}
 SPARQL:  select distinct ?obj where { wd:Q7313 wdt:P1365 ?obj . ?obj wdt:P31 wd:Q12857432 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yuan', 'p': 'replaces', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Chinese dynasty'}}

 Q: What is the {alphabetic script} for {uses} of {Arabic alphabet}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2283 wd:Q8196 . ?sbj wdt:P31 wd:Q11077643 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'Arabic alphabet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alphabetic script'}}

 Q: Is it true that the publication interval of the Cuore is less than 1.2?
 SPARQL: ASK WHERE { wd:Q2756124 wdt:P2896 ?obj filter(?obj < 1.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Cuore', 'p': 'publication interval', 'o': '?x0', '?x0': '1.2'}

 Q: What was the significant event that happened to Jean Gabin in 1976?
 SPARQL: SELECT ?obj WHERE { wd:Q23842 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jean Gabin', 'p': 'significant event', 'o': '?x0', 't': '1976'}

 Q: What was the inflation rate of Portugal during 1993-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q45 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Portugal', 'p': 'inflation rate', 'o': '?x0', 't': '1993'}

 Q: What is {commanded by} of {Warsaw Pact} that is {start time} is {1967-4-12} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41644 p:P4791 ?s . ?s ps:P4791 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Warsaw Pact', 'p': 'commanded by', 'o': '?x0', 't': '1967'}

 Q: How many siblings does Fú Jiān have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3373 wd:Q967998 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Fú Jiān'}

 Q: What is the series ordinal for chairperson Kaoru Kamata at Waseda University?
 SPARQL: SELECT ?value WHERE { wd:Q274486 p:P488 ?s . ?s ps:P488 wd:Q10854980 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Waseda University', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Kaoru Kamata'}}}

 Q: what is the {start time} for {La Plata} has {named after} as {Eva Perón} ?
 SPARQL: SELECT ?value WHERE { wd:Q44059 p:P138 ?s . ?s ps:P138 wd:Q40933 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'La Plata', 'p': 'named after', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'named after', 'o': 'Eva Perón'}}}

 Q: What is <has fruit type> of <nut> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4000 wd:Q11009}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has fruit type', 'o': 'nut'}

 Q: What relative or kinship is the first cousin once removed descending of Salvador Allende?
 SPARQL: SELECT ?obj WHERE { wd:Q440 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1039 wd:Q19901611 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'relative', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Salvador Allende', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'first cousin once removed descending'}}}

 Q: What is the quality of old age?
 SPARQL: select distinct ?answer where { ?answer wdt:P1552 wd:Q191089}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'quality', 'o': 'old age'}

 Q: Which musician is successor of Sleeping Beauty.
 SPARQL: SELECT ?answer WHERE { wd:Q7539845 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sleeping Beauty', 'p': 'successor', 'o': '$y0'}}

 Q: What is {brother} of {1st place medalist} of {Screen Actors Guild Life Achievement Award} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1631998 wdt:P1346 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Screen Actors Guild Life Achievement Award', 'p': '1st place medalist', 'o': '$y0'}}

 Q: What are the contents of the puzzle?
 SPARQL: select distinct ?answer where { ?answer wdt:P4330 wd:Q13698}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contents', 'o': 'puzzle'}

 Q: What award did Subrahmanyan Chandrasekhar receive in 1974?
 SPARQL: SELECT ?obj WHERE { wd:Q148109 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Subrahmanyan Chandrasekhar', 'p': 'award', 'o': '?x0', 't': '1974'}

 Q: What is Project Gutenberg ID for Oliver Twist ?
 SPARQL: select distinct ?answer where { wd:Q164974 wdt:P2034 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oliver Twist', 'p': 'Gutenberg ID', 'o': '?x0'}

 Q: what is the {end time} for {Stuart Broad} has {member of sports team} as {Leicestershire County Cricket Club} ?
 SPARQL: SELECT ?value WHERE { wd:Q3140358 p:P54 ?s . ?s ps:P54 wd:Q3229147 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stuart Broad', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Leicestershire County Cricket Club'}}}

 Q: What is PACE member ID for James Callaghan ?
 SPARQL: select distinct ?answer where { wd:Q9576 wdt:P1331 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Callaghan', 'p': 'PACE member ID', 'o': '?x0'}

 Q: What is the twinned administrative body of Strasbourg, which started in 1 Jan 1962?
 SPARQL: SELECT ?obj WHERE { wd:Q6602 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1962')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Strasbourg', 'p': 'twinned administrative body', 'o': '?x0', 't': '1962'}

 Q: Mention the horse used by Robert E. Lee during mounting.
 SPARQL:  select distinct ?obj where { wd:Q165557 wdt:P3091 ?obj . ?obj wdt:P31 wd:Q726 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert E. Lee', 'p': 'mount', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'horse'}}

 Q: Did Reinhard Heydrich die of cholangitis and/or ballistic trauma?
 SPARQL: ASK WHERE { wd:Q60039 wdt:P509 wd:Q603644 . wd:Q60039 wdt:P509 wd:Q2140674 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Reinhard Heydrich', 'p': 'die of', 'o': '?x0', '?x0': 'cholangitis'}, {'h': 'IS', 'v': '?x1', 's': 'Reinhard Heydrich', 'p': 'die of', 'o': '?x1', '?x1': 'ballistic trauma'}]

 Q: Was the lowest atmospheric pressure recorded during the 1935 Labor Day Hurricane higher than 1070.4?
 SPARQL: ASK WHERE { wd:Q206825 wdt:P2532 ?obj filter(?obj > 1070.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '1935 Labor Day hurricane', 'p': 'lowest atmospheric pressure', 'o': '?x0', '?x0': '1070.4'}

 Q: Which is the KOATUU identifier for Cherkasy Oblast?
 SPARQL: select distinct ?answer where { wd:Q161808 wdt:P1077 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cherkasy Oblast', 'p': 'KOATUU identifier', 'o': '?x0'}

 Q: What was the maker of the art of sculpture a proponent of?
 SPARQL: SELECT ?answer WHERE { wd:Q11634 wdt:P3095 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'maker of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'art of sculpture', 'p': 'proponent', 'o': '$y0'}}

 Q: What is {nominated for} of {The Treasure of the Sierra Madre} that is {nominee} is {Walter Huston} ?
 SPARQL: SELECT ?obj WHERE { wd:Q251559 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q162621 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Treasure of the Sierra Madre', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Walter Huston'}}}

 Q: What is  designer of ship armament  in2015 San Bernardino shooting ?
 SPARQL: SELECT ?answer WHERE { wd:Q21613643 wdt:P520 ?X . ?X wdt:P287 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'designer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '2015 San Bernardino shooting', 'p': 'armament', 'o': '$y0'}}

 Q: Is it true that the memory capacity of the diskette equals to 1152?
 SPARQL: ASK WHERE { wd:Q5293 wdt:P2928 ?obj filter(?obj = 1152.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'disk', 'p': 'memory capacity', 'o': '?x0', '?x0': '1152.0'}

 Q: What is {end time} and {academic degree} of {{Venus Williams} has {educated at} as {The Art Institute of Fort Lauderdale}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q11578 p:P69 ?s . ?s ps:P69 wd:Q7714375 . ?s pq:P582 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Venus Williams', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'The Art Institute of Fort Lauderdale'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Venus Williams', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'The Art Institute of Fort Lauderdale'}}}]

 Q: Is the rural population of North Sikkim district 31252?
 SPARQL: ASK WHERE { wd:Q1784149 wdt:P6344 ?obj filter(?obj = 31252.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'North Sikkim district', 'p': 'rural population', 'o': '?x0', '?x0': '31252.0'}

 Q: What is bordered by Netherlands Antilles and is located in the administrative unit of Amiens?
 SPARQL: SELECT ?answer WHERE { wd:Q41604 wdt:P131 ?answer . ?answer wdt:P47 wd:Q25227}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Amiens', 'p': 'located in the administrative unit', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bordered by', 'o': 'Netherlands Antilles'}}

 Q: Which is the INEGI locality ID for Torreón?
 SPARQL: select distinct ?answer where { wd:Q386991 wdt:P1976 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Torreón', 'p': 'INEGI locality ID', 'o': '?x0'}

 Q: What honors have coined the compact disc?
 SPARQL: SELECT ?answer WHERE { wd:Q34467 wdt:P61 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'honors', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'compact disc', 'p': 'coined', 'o': '$y0'}}

 Q: Which is the UNESCO Atlas of the World's Languages in Danger ID of Coptic?
 SPARQL: select distinct ?answer where { wd:Q36155 wdt:P2355 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coptic', 'p': "UNESCO Atlas of the World's Languages in Danger ID", 'o': '?x0'}

 Q: Which is FAO risk status for Arabian horse?
 SPARQL: select distinct ?answer where { wd:Q184138 wdt:P2371 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arabian horse', 'p': 'FAO risk status', 'o': '?x0'}

 Q: Tell me a civil parish that begins with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1115575 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'civil parish'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: How many {discovery method} are to/by {Radial velocity} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1046 wd:Q240105 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'discovery method', 'o': 'radial velocity'}

 Q: What is {used language} of {Jack Nicklaus}, that has {AWLD status} is {1 safe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9424 wdt:P1412 ?answer . ?answer wdt:P1999 wd:Q20672086}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jack Nicklaus', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'AWLD status', 'o': '1 safe'}}

 Q: Where there 3.2 perpetrators in the Enoch Brown school massacre?
 SPARQL: ASK WHERE { wd:Q1297497 wdt:P3886 ?obj filter(?obj = 3.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Enoch Brown school massacre', 'p': 'perpetrators', 'o': '?x0', '?x0': '3.2'}

 Q: who enterprise for subsidiary of Sears?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P355 wd:Q6499202 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'Sears', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: How much acreage is the death place of Saul Bass?
 SPARQL: SELECT ?answer WHERE { wd:Q536884 wdt:P20 ?X . ?X wdt:P2046 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'acreage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saul Bass', 'p': 'death place', 'o': '$y0'}}

 Q: Which is the CERO rating for The Legend of Zelda?
 SPARQL: select distinct ?answer where { wd:Q12395 wdt:P853 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Legend of Zelda', 'p': 'CERO rating', 'o': '?x0'}

 Q: Who gave the{typology} of {language native} of {Uyghur people} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46118 wdt:P103 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uyghur people', 'p': 'language native', 'o': '$y0'}}

 Q: What is the female population of Karlovy Vary Region which has a total population of 150262.0?
 SPARQL: SELECT ?obj WHERE { wd:Q191091 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P1539 ?x filter(contains(?x,'150262.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karlovy Vary Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'female population', 'o': '150262.0'}}}

 Q: What is {open days} of {British Museum} and {open period from}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?obj . ?s pq:P3027 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'open days', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}]

 Q: What is the edition of the game platform of Star Trek Online?
 SPARQL: SELECT ?answer WHERE { wd:Q1143426 wdt:P400 ?X . ?X wdt:P747 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'edition', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Trek Online', 'p': 'platform', 'o': '$y0'}}

 Q: What is {located in} of {major event} of {Alfred Döblin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57389 wdt:P793 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Döblin', 'p': 'major event', 'o': '$y0'}}

 Q: What is Metroid Prime's GameRankings game ID?
 SPARQL: select distinct ?answer where { wd:Q1765733 wdt:P4769 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Metroid Prime', 'p': 'GameRankings game ID', 'o': '?x0'}

 Q: what is the {applies to part} for {North Dakota} has {located in time zone} as {Mountain Time Zone} ?
 SPARQL: SELECT ?value WHERE { wd:Q1207 p:P421 ?s . ?s ps:P421 wd:Q3134980 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North Dakota', 'p': 'located in time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in time zone', 'o': 'Mountain Time Zone'}}}

 Q: When was Niels Bohr nominated for a Nobel Prize in Physics?
 SPARQL: SELECT ?value WHERE { wd:Q7085 p:P1411 ?s . ?s ps:P1411 wd:Q38104 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Niels Bohr', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physics'}, 't': '?x0'}

 Q: What is {wrote language} of {Hiroshi Sugimoto}, that has {typology} is {time–manner–place} ?
 SPARQL: SELECT ?answer WHERE { wd:Q919236 wdt:P1412 ?answer . ?answer wdt:P4132 wd:Q7806656}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hiroshi Sugimoto', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'typology', 'o': 'time–manner–place'}}

 Q: What is {collection or exhibition size} of {Prado National Museum} that is {point in time} is {2012-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q160112 p:P1436 ?s . ?s ps:P1436 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Prado', 'p': 'collection or exhibition size', 'o': '?x0', 't': '2012'}

 Q: What is next to Confederate States of America having diplomatic relation of Ecuador?
 SPARQL: SELECT ?answer WHERE { wd:Q81931 wdt:P47 ?answer . ?answer wdt:P530 wd:Q736}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Confederate States of America', 'p': 'next to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Ecuador'}}

 Q: What's the icebreaker for the US National Archives Identifier?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q14978 wdt:P1225 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'icebreaker', 'p': 'National Archives Identifier', 'o': '?x0'}

 Q: What is the {human} for {designed by} of {Adelaide}
 SPARQL:  select distinct ?obj where { wd:Q5112 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Adelaide', 'p': 'designed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is it true that the distance from Earth of the Polaris is 518.4?
 SPARQL: ASK WHERE { wd:Q12980 wdt:P2583 ?obj filter(?obj = 518.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Polaris', 'p': 'distance from Earth', 'o': '?x0', '?x0': '518.4'}

 Q: Is the position angle of the southwest by west equal 236.25?
 SPARQL: ASK WHERE { wd:Q20968403 wdt:P2211 ?obj filter(?obj = 236.25) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'southwest by west', 'p': 'position angle', 'o': '?x0', '?x0': '236.25'}

 Q: Give me {agricultural revolution} that contains the word {revolution} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6499967 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'revolution')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'agricultural revolution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'revolution'}}

 Q: What is {has anatomical branch} of {artery} of {large intestine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11083 wdt:P2286 ?X . ?X wdt:P3262 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has anatomical branch', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'large intestine', 'p': 'artery', 'o': '$y0'}}

 Q: What was the population of the Saitama Prefecture in the year 2005?
 SPARQL: SELECT ?obj WHERE { wd:Q128186 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saitama Prefecture', 'p': 'population', 'o': '?x0', 't': '2005'}

 Q: What is <powerplant> of <steam turbine> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P516 wd:Q189859}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'powerplant', 'o': 'steam turbine'}

 Q: What is the {city} for {public holiday} of {Chinese New Year}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P832 wd:Q131772 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'public holiday', 'o': 'Chinese New Year', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: Is it true that the lighthouse range of Farol de Pedra de Lume equals to 0.8?
 SPARQL: ASK WHERE { wd:Q10280161 wdt:P2929 ?obj filter(?obj = 0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Farol de Pedra de Lume', 'p': 'lighthouse range', 'o': '?x0', '?x0': '0.8'}

 Q: What is the Mémoire du cyclisme cyclist ID for Bradley Wiggins?
 SPARQL: select distinct ?answer where { wd:Q193876 wdt:P4516 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bradley Wiggins', 'p': 'Mémoire du cyclisme cyclist ID', 'o': '?x0'}

 Q: In what year was Valery Gergiev awarded the State Prize of the Russian Federation?
 SPARQL: SELECT ?value WHERE { wd:Q165693 p:P166 ?s . ?s ps:P166 wd:Q4146631 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Valery Gergiev', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'State Prize of the Russian Federation'}, 't': '?x0'}

 Q: What is {actor} of {from work} of {Captain Typho} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6135489 wdt:P1441 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Captain Typho', 'p': 'from work', 'o': '$y0'}}

 Q: Does the rate of fire of the VAP submachine gun equals to 1200.0?
 SPARQL: ASK WHERE { wd:Q61235737 wdt:P3792 ?obj filter(?obj = 1200.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'VAP submachine gun', 'p': 'rate of fire', 'o': '?x0', '?x0': '1200.0'}

 Q: What is {population} of {Antofagasta Region} that is {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2118 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antofagasta Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: What is e-mail of Ilona Staller ?
 SPARQL: select distinct ?answer where { wd:Q49941 wdt:P968 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ilona Staller', 'p': 'mail', 'o': '?x0'}

 Q: Is the nominal GDP per capita of Poland less than 15065.46?
 SPARQL: ASK WHERE { wd:Q36 wdt:P2132 ?obj filter(?obj < 15065.46) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Poland', 'p': 'nominal GDP per capita', 'o': '?x0', '?x0': '15065.46'}

 Q: Which is the Behind The Voice Actors person ID for Julia Roberts?
 SPARQL: select distinct ?answer where { wd:Q40523 wdt:P5007 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Julia Roberts', 'p': 'Behind The Voice Actors person ID', 'o': '?x0'}

 Q: Does the boiling point of the hexadecane equals 286.79?
 SPARQL: ASK WHERE { wd:Q150843 wdt:P2102 ?obj filter(?obj = 286.79) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'hexadecane', 'p': 'boiling point', 'o': '?x0', '?x0': '286.79'}

 Q: What is {maker of} of {board game publisher} of {Score} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47007593 wdt:P123 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'maker of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Score', 'p': 'publisher', 'o': '$y0'}}

 Q: what is the {for work} for {Zooey Deschanel} has {nominated for} as {Primetime Emmy Award for Outstanding Lead Actress in a Comedy Series} ?
 SPARQL: SELECT ?value WHERE { wd:Q191719 p:P1411 ?s . ?s ps:P1411 wd:Q1287335 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zooey Deschanel', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Primetime Emmy Award for Outstanding Lead Actress in a Comedy Series'}}}

 Q: What is the {fictional organization} for {present in work} of {Nineteen Eighty-Four}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q208460 . ?sbj wdt:P31 wd:Q14623646 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Nineteen Eighty-Four', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional organization'}}

 Q: What is the {G-type main-sequence star} with the {MAX(stellar rotational velocity)} whose {instance of} is {G-type main-sequence star}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5864 . ?ent wdt:P4296 ?obj . ?ent wdt:P31 wd:Q5864 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'stellar rotational velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: What is the {profession} for {practiced by} of {rugby}
 SPARQL:  select distinct ?obj where { wd:Q5378 wdt:P3095 ?obj . ?obj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'rugby', 'p': 'practiced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: A person who studies meteorology looks at what geosphere?
 SPARQL:  select distinct ?obj where { wd:Q25261 wdt:P2578 ?obj . ?obj wdt:P31 wd:Q241284 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'meteorology', 'p': 'studies', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geosphere'}}

 Q: What is <intended public> of <young adult> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2360 wd:Q17156455}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'intended public', 'o': 'young adult'}

 Q: Is the numeric value of the Boltzmann constant less than 1.6567788e-23?
 SPARQL: ASK WHERE { wd:Q5962 wdt:P1181 ?obj filter(?obj < 1.6567788e-23) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Boltzmann constant', 'p': 'numeric value', 'o': '?x0', '?x0': '1.6567788e-23'}

 Q: Are there more than 3.6 floors below ground of the Plaza 66.
 SPARQL: ASK WHERE { wd:Q543353 wdt:P1139 ?obj filter(?obj > 3.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Plaza 66', 'p': 'floors below ground', 'o': '?x0', '?x0': '3.6'}

 Q: What is {profession} of {composed by} of {The Carnival of the Animals} ?
 SPARQL: SELECT ?answer WHERE { wd:Q941724 wdt:P86 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Carnival of the Animals', 'p': 'composed by', 'o': '$y0'}}

 Q: How many {member count} are for {Labour Party} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9630 wdt:P2124 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Labour Party', 'p': 'member count', 'o': '?x0'}

 Q: What is the {position played on team / speciality} and the {place of birth} of {David_Icke} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q333118 wdt:P413 ?ans_1 . wd:Q333118 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'David Icke', 'p': 'position played on team / speciality', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'David Icke', 'p': 'place of birth', 'o': '?x1'}]

 Q: What is the {Giants} for {killed by} of {Heracles}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P157 wd:Q122248 . ?sbj wdt:P31 wd:Q191192 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'killed by', 'o': 'Heracles', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Giants'}}

 Q: What is venous drainage for hand ?
 SPARQL: select distinct ?answer where { wd:Q33767 wdt:P2289 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hand', 'p': 'venous drainage', 'o': '?x0'}

 Q: Which is the Academia.edu institutional ID for University of Naples Federico II?
 SPARQL: select distinct ?answer where { wd:Q691851 wdt:P4052 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Naples Federico II', 'p': 'Academia.edu institutional ID', 'o': '?x0'}

 Q: What is the {type of magnets} for {uses} of {Large Hadron Collider}
 SPARQL:  select distinct ?obj where { wd:Q40605 wdt:P2283 ?obj . ?obj wdt:P31 wd:Q50002046 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Large Hadron Collider', 'p': 'uses', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of magnets'}}

 Q: How many {health specialty} are for {attention deficit hyperactivity disorder} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q181923 wdt:P1995 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'attention deficit hyperactivity disorder', 'p': 'health specialty', 'o': '?x0'}

 Q: When was William Ramsay nominated for a Nobel Prize in Chemistry?
 SPARQL: SELECT ?value WHERE { wd:Q950726 p:P1411 ?s . ?s ps:P1411 wd:Q44585 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'William Ramsay', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Chemistry'}, 't': '?x0'}

 Q: What is the {nuclear weapons test} for {designed by} of {Manhattan Project}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q127050 . ?sbj wdt:P31 wd:Q210112 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Manhattan Project', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nuclear weapons test'}}

 Q: which building has the highest cost?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q41176 . ?ent wdt:P2130 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'cost', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'building'}}

 Q: Who is the  {strip mall} for {architectural style} of {Bauhaus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P149 wd:Q124354 . ?sbj wdt:P31 wd:Q7624088 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architectural style', 'o': 'Bauhaus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'strip mall'}}

 Q: what is the {end time} for {Alan Greenspan} has {position held} as {Chair of the Federal Reserve} ?
 SPARQL: SELECT ?value WHERE { wd:Q193635 p:P39 ?s . ?s ps:P39 wd:Q2666591 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Greenspan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chair of the Federal Reserve'}}}

 Q: What is {civilisation} of {denomination} of {Yazdegerd III} ?
 SPARQL: SELECT ?answer WHERE { wd:Q208463 wdt:P140 ?X . ?X wdt:P2596 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'civilisation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yazdegerd III', 'p': 'denomination', 'o': '$y0'}}

 Q: What is KEPN ID for Wolverhampton ?
 SPARQL: select distinct ?answer where { wd:Q126269 wdt:P3639 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wolverhampton', 'p': 'KEPN ID', 'o': '?x0'}

 Q: What is the Revised Hepburn romanization for Morning Musume with its name in kana モーニングむすめ?
 SPARQL: SELECT ?value WHERE { wd:Q174291 p:P1814 ?s . ?s ps:P1814 ?x filter(contains(?x,'モーニングむすめ')) . ?s pq:P2125 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Revised Hepburn romanization', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Morning Musume', 'p': 'name in kana', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'name in kana', 'o': 'モーニングむすめ'}}}

 Q: What is {custodian} of {connected with} of {Roadside station Echizen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20043342 wdt:P2789 ?X . ?X wdt:P126 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'custodian', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roadside station Echizen', 'p': 'connected with', 'o': '$y0'}}

 Q: When did Ireland have a population of 2.85265e+06?
 SPARQL: SELECT ?value WHERE { wd:Q27 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'2.85265e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ireland', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '2.85265e+06'}, 't': '?x0'}

 Q: What city is the capital of Lagdo?
 SPARQL: SELECT ?answer WHERE { wd:Q6471958 wdt:P131 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lagdo', 'p': 'city', 'o': '$y0'}}

 Q: What isEncyclopædia Britannica Online ID for ton ?
 SPARQL: select distinct ?answer where { wd:Q11247037 wdt:P1417 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ton', 'p': 'Encyclopædia Britannica Online ID', 'o': '?x0'}

 Q: Did {Sarah_Silverman} {instrument} {guitar}?
 SPARQL: ASK WHERE { wd:Q229013 wdt:P1303 wd:Q6607 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Sarah Silverman', 'p': 'instrument', 'o': '?x0', '?x0': 'guitar'}]

 Q: What is {inhabitants} of {death location} of {Alexander Fleming} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37064 wdt:P20 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Fleming', 'p': 'death location', 'o': '$y0'}}

 Q: What is the name of a tournament that starts with the letter w.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q500834 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tournament'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: what is the {point in time} for {Léon Jouhaux} has {nominated for} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q155415 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Léon Jouhaux', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: What is {nominated for} of {Edward Albee} that is {statement is subject of} is {19th Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q219420 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4595828 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward Albee', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '19th Tony Awards'}}}

 Q: Did {Katrina_Kaif} {filmography} {Katrina Kaif filmography}?
 SPARQL: ASK WHERE { wd:Q9550 wdt:P1283 wd:Q20814599 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Katrina Kaif', 'p': 'filmography', 'o': '?x0', '?x0': 'Katrina Kaif filmography'}]

 Q: Who is the person that was influenced by Hypatia?
 SPARQL:  select distinct ?obj where { wd:Q11903 wdt:P737 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hypatia', 'p': 'influenced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {titleholder} of {nomination received} of {Nebraska} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3337646 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'titleholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nebraska', 'p': 'nomination received', 'o': '$y0'}}

 Q: Did {LL_Cool_J} {genre} {alternative hip hop} and {New school hip hop} ?
 SPARQL: ASK WHERE { wd:Q52440 wdt:P136 wd:Q438503 . wd:Q52440 wdt:P136 wd:Q4045303 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'LL Cool J', 'p': 'genre', 'o': '?x0', '?x0': 'alternative hip hop'}, {'h': 'IS', 'v': '?x1', 's': 'LL Cool J', 'p': 'genre', 'o': '?x1', '?x1': 'New school hip hop'}]

 Q: Is the flattening of Venus zero?
 SPARQL: ASK WHERE { wd:Q313 wdt:P1102 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Venus', 'p': 'flattening', 'o': '?x0', '?x0': '0'}

 Q: Did {Niki_Lauda} {member of sports team} {Scuderia Ferrari} and {Renault F1 Team} ?
 SPARQL: ASK WHERE { wd:Q78489 wdt:P54 wd:Q169898 . wd:Q78489 wdt:P54 wd:Q172722 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Niki Lauda', 'p': 'member of sports team', 'o': '?x0', '?x0': 'Scuderia Ferrari'}, {'h': 'IS', 'v': '?x1', 's': 'Niki Lauda', 'p': 'member of sports team', 'o': '?x1', '?x1': 'Renault F1 Team'}]

 Q: What is {educated at} of {Narendra Modi} and {academic degree}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1058 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Narendra Modi', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Narendra Modi', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {college library} for {location} of {Yale University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q49112 . ?sbj wdt:P31 wd:Q1622062 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Yale University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college library'}}

 Q: What is {born in} of {authors} of {Mémoires d'Outre-Tombe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2263221 wdt:P50 ?X . ?X wdt:P19 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Mémoires d'Outre-Tombe", 'p': 'author', 'o': '$y0'}}

 Q: What award did Dirk Nowitzki receive in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q44068 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dirk Nowitzki', 'p': 'award', 'o': '?x0', 't': '2011'}

 Q: Which is the Encyclopaedia Metallum artist ID for Dave Grohl?
 SPARQL: select distinct ?answer where { wd:Q12006 wdt:P1989 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dave Grohl', 'p': 'Encyclopaedia Metallum artist ID', 'o': '?x0'}

 Q: Florentino Perez is a member of what political party whose start time was 1982-0-0
 SPARQL: SELECT ?obj WHERE { wd:Q245207 p:P102 ?s . ?s ps:P102 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Florentino Perez', 'p': 'party', 'o': '?x0', 't': '1982'}

 Q: What is {member count} of {Democratic Party} that is {based on heuristic} is {party identification} ?
 SPARQL: SELECT ?obj WHERE { wd:Q29552 p:P2124 ?s . ?s ps:P2124 ?obj . ?s pq:P887 wd:Q7141040 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member count', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Democrats', 'p': 'member count', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'based on heuristic', 'o': 'party identification'}}}

 Q: When was Forrest Gump publication date
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q134773 wdt:P577 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Forrest Gump', 'p': 'publication date', 'o': '?x0'}

 Q: Tell me the opera that location of first performance is the Theater auf der Wieden and which that starts with the letter f
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1344 . ?sbj wdt:P4647 wd:Q673479 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'opera', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of first performance', 'o': 'Theater auf der Wieden'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: Which brother of Atahualpa has sons?
 SPARQL: SELECT ?answer WHERE { wd:Q179577 wdt:P3373 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Atahualpa', 'p': 'bro', 'o': '$y0'}}

 Q: "Which is {school attended} of {Patti Smith}, whose {full title} is {New Jersey State Teachers College at Glassboro} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q557 wdt:P69 ?answer . ?answer wdt:P1448 ?x FILTER(contains(?x,'New Jersey State Teachers College at Glassboro'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Patti Smith', 'p': 'school attended', 'o': '?x0'}

 Q: Where is incumbent of professorship position of John Budden ?
 SPARQL: SELECT ?answer WHERE { wd:Q6223791 wdt:P803 ?X . ?X wdt:P1308 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'incumbent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Budden', 'p': 'professorship', 'o': '$y0'}}

 Q: Who is profession's field is musician having a timeline of topic of history of music?
 SPARQL: SELECT ?answer WHERE { wd:Q639669 wdt:P425 ?answer . ?answer wdt:P2184 wd:Q846047}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'musician', 'p': "profession's field", 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timeline of topic', 'o': 'history of music'}}

 Q: What is <stereoisomer of> of <L-Phenylalanine> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3364 wd:Q170545}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stereoisomer of', 'o': 'L-Phe'}

 Q: What is {deathplace} of {Gustav Mahler}, that has {has boroughs} is {Neubau} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7304 wdt:P20 ?answer . ?answer wdt:P150 wd:Q664835}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gustav Mahler', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has boroughs', 'o': 'Neubau'}}

 Q: what is the {start time} for {Oliver Sacks} has {residence} as {New York City} ?
 SPARQL: SELECT ?value WHERE { wd:Q258662 p:P551 ?s . ?s ps:P551 wd:Q60 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oliver Sacks', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'New York City'}}}

 Q: What is {musical instrument} of {lyricist} of {Face to the Sky} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14951082 wdt:P676 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Face to the Sky', 'p': 'lyricist', 'o': '$y0'}}

 Q: What is {took part} of {A. J. Foyt}, that has {event} is {1951 24 Hours of Le Mans} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173228 wdt:P1344 ?answer . ?answer wdt:P793 wd:Q216396}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'A.J. Foyt', 'p': 'took part', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'event', 'o': '1951 24 Hours of Le Mans'}}

 Q: What is {position held} of {Raymond Poincaré} that is {replaced by} is {Jacques Bainville} ?
 SPARQL: SELECT ?obj WHERE { wd:Q191974 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q966894 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Raymond Poincaré', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Jacques Bainville'}}}

 Q: What is the {empire} for {diplomatic relation} of {Ottoman Empire}
 SPARQL:  select distinct ?obj where { wd:Q12560 wdt:P530 ?obj . ?obj wdt:P31 wd:Q48349 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ottoman Empire', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire'}}

 Q: What is the founder of the located in of The Parnassus ?
 SPARQL: SELECT ?answer WHERE { wd:Q2715152 wdt:P276 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Parnassus', 'p': 'location', 'o': '$y0'}}

 Q: Who are the writers of Mahabharata with children in Dhritarashtra?
 SPARQL: SELECT ?answer WHERE { wd:Q8276 wdt:P50 ?answer . ?answer wdt:P40 wd:Q926150}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mahabharata', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Dhritarashtra'}}

 Q: Who is the inventor of the anatomical location of sinoatrial node disease?
 SPARQL: SELECT ?answer WHERE { wd:Q18553498 wdt:P927 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inventor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'sinoatrial node disease', 'p': 'anatomical location', 'o': '$y0'}}

 Q: Which is the CAS Registry Number for calcium chloride?
 SPARQL: select distinct ?answer where { wd:Q208451 wdt:P231 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'calcium chloride', 'p': 'CAS Registry Number', 'o': '?x0'}

 Q: What is the weapon model with the maximum rate of fire whose subclass of is naval artillery?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P3792 ?obj . ?ent wdt:P279 wd:Q511450 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'rate of fire', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'naval artillery'}}}

 Q: What is the {religious text} for {has edition} of {King James Version}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P747 wd:Q623398 . ?sbj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'King James Version', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: What is <Invaluable.com artist ID> of <Johannes V. Jensen> ?
 SPARQL: select distinct ?answer where { wd:Q159552 wdt:P4927 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Johannes V. Jensen', 'p': 'Invaluable.com artist ID', 'o': '?x0'}

 Q: What award did Karl von Frisch receive in 1921?
 SPARQL: SELECT ?obj WHERE { wd:Q60060 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1921')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Karl von Frisch', 'p': 'award', 'o': '?x0', 't': '1921'}

 Q: What is {discoverer of} of {runes}, that has {girlfriend} is {Gunnlöð} ?
 SPARQL: SELECT ?answer WHERE { wd:Q82996 wdt:P61 ?answer . ?answer wdt:P451 wd:Q166380}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'runes', 'p': 'discoverer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'girlfriend', 'o': 'Gunnlöð'}}

 Q: What is {start time} and {end time} of {{Anne Hathaway} has {educated at} as {New York University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36301 p:P69 ?s . ?s ps:P69 wd:Q49210 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne Hathaway', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'New York University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'ending', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne Hathaway', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'New York University'}}}]

 Q: which public educational institution of the United States starts with letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23002039 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public educational institution of the United States'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is orbited by of star of Messier 4 ?
 SPARQL: SELECT ?answer WHERE { wd:Q11212 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'orbited by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 4', 'p': 'star', 'o': '$y0'}}

 Q: Is the earthquake magnitude on the Richter magnitude scale of the 2000 Yunnan earthquake more than 7.08?
 SPARQL: ASK WHERE { wd:Q4598012 wdt:P2528 ?obj filter(?obj > 7.08) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '2000 Yunnan earthquake', 'p': 'earthquake magnitude on the Richter magnitude scale', 'o': '?x0', '?x0': '7.08'}

 Q: Which is the BSD Portal athlete ID of Felix Loch?
 SPARQL: select distinct ?answer where { wd:Q60711 wdt:P4650 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Felix Loch', 'p': 'BSD Portal athlete ID', 'o': '?x0'}

 Q: What is {appointed by} and {end cause} of {{Eugenio Montale} has {position held} as {senatore a vita}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q83174 p:P39 ?s . ?s ps:P39 wd:Q826589 . ?s pq:P748 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'appointed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eugenio Montale', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'senatore a vita'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eugenio Montale', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'senatore a vita'}}}]

 Q: What is {award received} of {Henry Mancini} that is {statement is subject of} is {34th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q185928 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q917163 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'win', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Mancini', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '34th Academy Awards'}}}

 Q: : What are the Cyprinus rubrofuscus which start with the letter k
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3246258 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Cyprinus rubrofuscus'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'k'}}

 Q: Is the perimeter of Lai Lung .11?
 SPARQL: ASK WHERE { wd:Q682014 wdt:P2547 ?obj filter(?obj = 0.11) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lai Lung', 'p': 'perimeter', 'o': '?x0', '?x0': '0.11'}

 Q: Are the number of cases of the yellow fever equal to 136000.0?
 SPARQL: ASK WHERE { wd:Q154874 wdt:P1603 ?obj filter(?obj = 136000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'yellow fever', 'p': 'number of cases', 'o': '?x0', '?x0': '136000.0'}

 Q: What is the {type of quantum particle} for {antiparticle} of {elementary particle}
 SPARQL:  select distinct ?obj where { wd:Q43116 wdt:P2152 ?obj . ?obj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'elementary particle', 'p': 'antiparticle', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: what is the {point in time} for {Daniel Ellsberg} has {award received} as {American Book Awards} ?
 SPARQL: SELECT ?value WHERE { wd:Q431085 p:P166 ?s . ?s ps:P166 wd:Q463606 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Daniel Ellsberg', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'American Book Awards'}, 't': '?x0'}

 Q: What academic subject is Euler's identity the discoverer of?
 SPARQL: SELECT ?answer WHERE { wd:Q204819 wdt:P61 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Euler's identity", 'p': 'discoverer', 'o': '$y0'}}

 Q: Michael Dell is CEO of what privately held company?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q218630 . ?sbj wdt:P31 wd:Q1589009 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Michael Dell', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'privately held company'}}

 Q: What is the {political ideology} for {movement} of {Leon Trotsky}
 SPARQL:  select distinct ?obj where { wd:Q33391 wdt:P135 ?obj . ?obj wdt:P31 wd:Q14934048 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leon Trotsky', 'p': 'movement', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political ideology'}}

 Q: Is it true that the magnetic moment of the helion is -0.000000000000000000000000010746174?
 SPARQL: ASK WHERE { wd:Q902715 wdt:P2069 ?obj filter(?obj = -0.000000000000000000000000010746174) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'helion', 'p': 'magnetic moment', 'o': '?x0', '?x0': '-0.000000000000000000000000010746174'}

 Q: What is the {mythological Greek character} for {relative} of {Hermes}
 SPARQL:  select distinct ?obj where { wd:Q41484 wdt:P1038 ?obj . ?obj wdt:P31 wd:Q22988604 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hermes', 'p': 'relative', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythological Greek character'}}

 Q: Is the personal best of Caster Semenya greater than 138.396
 SPARQL: ASK WHERE { wd:Q5834 wdt:P2415 ?obj filter(?obj > 138.396) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Caster Semenya', 'p': 'personal best', 'o': '?x0', '?x0': '138.396'}

 Q: What is the type of quantum particle with the lowest g-factor whose interaction is weak interaction?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P1097 ?obj . ?ent wdt:P517 wd:Q11418} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'g-factor', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'weak interaction'}}}

 Q: what is the {point in time} for {Benedict Cumberbatch} has {award received} as {Primetime Emmy Award for Outstanding Lead Actor in a Miniseries or a Movie} ?
 SPARQL: SELECT ?value WHERE { wd:Q244674 p:P166 ?s . ?s ps:P166 wd:Q989453 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Benedict Cumberbatch', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Primetime Emmy Award for Outstanding Lead Actor in a Miniseries or a Movie'}, 't': '?x0'}

 Q: What is {mother} and {date of birth} of {{Joseph Stalin} has {child} as {Vasily Dzhugashvili}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q459216 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stalin', 'p': 'kid', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kid', 'o': 'Vasily Dzhugashvili'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stalin', 'p': 'kid', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kid', 'o': 'Vasily Dzhugashvili'}}}]

 Q: Is it true that the production rate of Jumilla more than 203978.4?
 SPARQL: ASK WHERE { wd:Q1112057 wdt:P2197 ?obj filter(?obj > 203978.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Jumilla', 'p': 'production rate', 'o': '?x0', '?x0': '203978.4'}

 Q: What is {creates} of {developed by} of {Autodesk Vault} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4826246 wdt:P178 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'creates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Autodesk Vault', 'p': 'developed by', 'o': '$y0'}}

 Q: what is the {start time} for {Fidel Castro} has {partner} as {Natalia Revuelta Clews} ?
 SPARQL: SELECT ?value WHERE { wd:Q11256 p:P451 ?s . ?s ps:P451 wd:Q19516418 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Castro', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Natalia Revuelta Clews'}}}

 Q: What prequel of plasma state of matter is using condensation?
 SPARQL: SELECT ?answer WHERE { wd:Q166583 wdt:P2283 ?answer . ?answer wdt:P156 wd:Q29148313}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'condensation', 'p': 'using', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prequel of', 'o': 'plasma state of matter'}}

 Q: What is the birthplace of Saint Wenceslaus I, Duke of Bohemia, where the country is Czech Republic?
 SPARQL: SELECT ?answer WHERE { wd:Q196527 wdt:P19 ?answer . ?answer wdt:P3896 ?x FILTER(contains(?x,'Data:Czech Republic/Hlavní město Praha.map'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saint Wenceslaus I, Duke of Bohemia', 'p': 'birthplace', 'o': '?x0'}

 Q: Tell me the name of a religious denomination which starts with the letter u.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13414953 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious denomination'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Tell me me a allotrope of carbon whose name consist of the word "carbon" and whose shape crystal structure
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q622460 . ?sbj wdt:P1419 wd:Q895901 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'carbon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'allotrope of carbon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shape', 'o': 'crystal structure'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'carbon'}}

 Q: What is the {fallen angel} for {worshipped by} of {Christianity}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1049 wd:Q5043 . ?sbj wdt:P31 wd:Q581450 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': 'Christianity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fallen angel'}}

 Q: How many {discovery method} are to/by {Radial velocity} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1046 wd:Q240105 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'discovery method', 'o': 'radial velocity'}

 Q: What is the {Special Administrative Region Basic Law} for {foundational text} of {Hong Kong}
 SPARQL:  select distinct ?obj where { wd:Q8646 wdt:P457 ?obj . ?obj wdt:P31 wd:Q10872094 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hong Kong', 'p': 'foundational text', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Special Administrative Region Basic Law'}}

 Q: What is the Women's Sports Foundation ID for Jennie Finch?
 SPARQL: select distinct ?answer where { wd:Q2406028 wdt:P4377 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jennie Finch', 'p': "Women's Sports Foundation ID", 'o': '?x0'}

 Q: What is the {Esperanto organization} for {language regulatory body} of {Esperanto}
 SPARQL:  select distinct ?obj where { wd:Q143 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q15494038 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'language regulatory body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Esperanto organization'}}

 Q: Is it true that the cost of damage of Hurricane Sandy was equal to 68680000000?
 SPARQL: ASK WHERE { wd:Q264 wdt:P2630 ?obj filter(?obj = 68680000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hurricane Sandy', 'p': 'cost of damage', 'o': '?x0', '?x0': '68680000000'}

 Q: When did educated at of Venus Williams and academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q11578 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Venus Williams', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Venus Williams', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {empire} for {followed by} of {Parthian Empire}
 SPARQL:  select distinct ?obj where { wd:Q1986139 wdt:P156 ?obj . ?obj wdt:P31 wd:Q48349 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Parthian Empire', 'p': 'followed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire'}}

 Q: Is the Bohler N680's hardness 59?
 SPARQL: ASK WHERE { wd:Q55755747 wdt:P5483 ?obj filter(?obj = 59) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Bohler N680', 'p': 'hardness', 'o': '?x0', '?x0': '59'}

 Q: Is the employment by economic sector of Amsterdam equal to 209100.0?
 SPARQL: ASK WHERE { wd:Q9899 wdt:P2297 ?obj filter(?obj = 209100.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Amsterdam', 'p': 'employment by economic sector', 'o': '?x0', '?x0': '209100.0'}

 Q: What is the {human} for {mother} of {Richard I of England}
 SPARQL:  select distinct ?obj where { wd:Q42305 wdt:P25 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Richard I of England', 'p': 'mother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {middle name} of {Frederick I}, that has {close to} is {Frederick} ?
 SPARQL: SELECT ?answer WHERE { wd:Q79789 wdt:P735 ?answer . ?answer wdt:P460 wd:Q3273004}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frederick I', 'p': 'middle name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'close to', 'o': 'Frederick'}}

 Q: What is {movie director} of {part of series} of {Home Court Disadvantage} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50383471 wdt:P179 ?X . ?X wdt:P57 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'director', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Home Court Disadvantage', 'p': 'part of series', 'o': '$y0'}}

 Q: Tell me programming paradigm whose name the word programming in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q188267 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'programming')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'programming paradigm'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'programming'}}

 Q: What is the alma mater of Elgin Baylor whose position is -122.319?
 SPARQL: SELECT ?answer WHERE { wd:Q357458 wdt:P69 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-122.319'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Elgin Baylor', 'p': 'alma mater', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'position', 'o': '-122.319'}}

 Q: What are the mythological serpent which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16326794 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ž')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythological serpent'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ž'}}

 Q: How many {country of citizenship} are for {Mikhail Fridman} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q732142 wdt:P27 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Mikhail Fridman', 'p': 'country of citizenship', 'o': '?x0'}

 Q: which laws applied for potassium hydroxide ?
 SPARQL: select distinct ?answer where { wd:Q132298 wdt:P3014 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'potassium hydroxide', 'p': 'laws applied', 'o': '?x0'}

 Q: What is {followed by} and {follows} of {{Victor Hugo} has {member of} as {Académie française}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q535 p:P463 ?s . ?s ps:P463 wd:Q161806 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Académie française'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Académie française'}}}]

 Q: What is {position held} of {Arthur Griffith} that is {electoral district} is {East Cavan} ?
 SPARQL: SELECT ?obj WHERE { wd:Q342765 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 wd:Q5328039 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Griffith', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'electoral district', 'o': 'East Cavan'}}}

 Q: Which is the BDCYL authority ID for José Echegaray?
 SPARQL: select distinct ?answer where { wd:Q127349 wdt:P3964 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'José Echegaray', 'p': 'BDCYL authority ID', 'o': '?x0'}

 Q: Is the vapor pressure of the Nonane equal to 3?
 SPARQL: ASK WHERE { wd:Q150694 wdt:P2119 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Nonan', 'p': 'vapor pressure', 'o': '?x0', '?x0': '3'}

 Q: What is {makes use of} of {sport played} of {Mariano Rivera} ?
 SPARQL: SELECT ?answer WHERE { wd:Q382303 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'makes use of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mariano Rivera', 'p': 'sport', 'o': '$y0'}}

 Q: Which is the discontinued date of PlayStation 3?
 SPARQL: select distinct ?answer where { wd:Q10683 wdt:P2669 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PlayStation 3', 'p': 'discontinued date', 'o': '?x0'}

 Q: How much full-time work is available at the North Atlantic Treaty?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q877399 wdt:P953 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'North Atlantic Treaty', 'p': 'available at', 'o': '?x0'}

 Q: What is {governor} of {Aosta Valley}, that has {employment} is {veterinarian} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1222 wdt:P6 ?answer . ?answer wdt:P106 wd:Q202883}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aosta Valley', 'p': 'governor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employment', 'o': 'veterinarian'}}

 Q: Which is the Arch Linux package for PHP?
 SPARQL: select distinct ?answer where { wd:Q59 wdt:P3454 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PHP', 'p': 'Arch Linux package', 'o': '?x0'}

 Q: Which is the age of candidacy for South Korea?
 SPARQL: select distinct ?answer where { wd:Q884 wdt:P2998 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Korea', 'p': 'age of candidacy', 'o': '?x0'}

 Q: How many medical examinations are required for medical ultrasonography} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P923 wd:Q234904 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'medical examinations', 'o': 'medical ultrasonography'}

 Q: What type of relationship did the siblings Carl Philipp Emanuel Bach and Wilhelm Friedemann Bach have?
 SPARQL: SELECT ?value WHERE { wd:Q76428 p:P3373 ?s . ?s ps:P3373 wd:Q107277 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of relationship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Philipp Emanuel Bach', 'p': 'sibling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sibling', 'o': 'Wilhelm Friedemann Bach'}}}

 Q: Are the number of records of the Ontario public library ID more than 454.8?
 SPARQL: ASK WHERE { wd:P5122 wdt:P4876 ?obj filter(?obj > 454.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Ontario public library ID', 'p': 'number of records', 'o': '?x0', '?x0': '454.8'}

 Q: Was Benedict Arnold from the military branch of the Royal Navy and Continental Army?
 SPARQL: ASK WHERE { wd:Q298237 wdt:P241 wd:Q172771 . wd:Q298237 wdt:P241 wd:Q54122 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Benedict Arnold', 'p': 'military branch', 'o': '?x0', '?x0': 'Royal Navy'}, {'h': 'IS', 'v': '?x1', 's': 'Benedict Arnold', 'p': 'military branch', 'o': '?x1', '?x1': 'Continental Army'}]

 Q: What is {language} of {William John Macquorn Rankine}, that has {typology} is {place–manner–time} ?
 SPARQL: SELECT ?answer WHERE { wd:Q232149 wdt:P1412 ?answer . ?answer wdt:P4132 wd:Q7200373}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William John Macquorn Rankine', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'typology', 'o': 'place–manner–time'}}

 Q: What is the {markup language} for {has edition} of {HTML5}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P747 wd:Q2053 . ?sbj wdt:P31 wd:Q37045 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'HTML5', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'markup language'}}

 Q: What is {diplomatic relation} of {Algeria} that is {statement is subject of} is {Algeria–Indonesia relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q262 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q15948965 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Algeria', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Algeria–Indonesia relations'}}}

 Q: what is the {point in time} for {Tomáš Garrigue Masaryk} has {nominated for} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q78492 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tomáš Garrigue Masaryk', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: Which is the cardinality of this set of 1?
 SPARQL: select distinct ?answer where { ?answer wdt:P2820 wd:Q199}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cardinality of this set', 'o': '1'}

 Q: Which is the British Book Trade Index ID for John Knox?
 SPARQL: select distinct ?answer where { wd:Q189937 wdt:P2945 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Knox', 'p': 'British Book Trade Index ID', 'o': '?x0'}

 Q: What is {member of} of {Margaret Thatcher} that is {end time} is {2013-4-8} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7416 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Margaret Thatcher', 'p': 'member of', 'o': '?x0', 't': '2013'}

 Q: What is the {television series} for {executive producer} of {Francis Ford Coppola}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1431 wd:Q56094 . ?sbj wdt:P31 wd:Q5398426 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'executive producer', 'o': 'Francis Ford Coppola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series'}}

 Q: What are the United States Supreme Court decision which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19692072 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'United States Supreme Court decision'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {music by} of {Rhapsody in Blue}, that has {profession} is {songwriter} ?
 SPARQL: SELECT ?answer WHERE { wd:Q722599 wdt:P86 ?answer . ?answer wdt:P106 wd:Q753110}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rhapsody in Blue', 'p': 'songwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'songwriter'}}

 Q: What is <may prevent> of <aspirin> ?
 SPARQL: select distinct ?answer where { wd:Q18216 wdt:P4954 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'aspirin', 'p': 'may prevent', 'o': '?x0'}

 Q: What is developed from fruit?
 SPARQL: select distinct ?answer where { wd:Q1364 wdt:P3094 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fruit', 'p': 'developed from', 'o': '?x0'}

 Q: What is the {municipality of the Philippines} with the {MAX(electorate)} whose {located in the administrative territorial entity} is {Bohol}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q24764 . ?ent wdt:P1831 ?obj . ?ent wdt:P131 wd:Q13752 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'electorate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of the Philippines', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Bohol'}}}

 Q: DOES THE MAXIMUM THRUST OF THE CONCORDE EQUALS 676800
 SPARQL: ASK WHERE { wd:Q6505 wdt:P2228 ?obj filter(?obj = 676800) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Concorde', 'p': 'maximum thrust', 'o': '?x0', '?x0': '676800'}

 Q: What is Vancouver Island bordered by in administrative units?
 SPARQL: SELECT ?answer WHERE { wd:Q170479 wdt:P131 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bordered by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vancouver Island', 'p': 'in administrative unit', 'o': '$y0'}}

 Q: Which Class IIIA combustible liquid has the highest IDLH?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009058 . ?ent wdt:P2129 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'IDLH', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IIIA combustible liquid'}}

 Q: What custom contains the word zwänzgerle in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q251777 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zwänzgerle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'custom'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zwänzgerle'}}

 Q: What is {position held} of {Mahathir Mohamad} that is {start time} is {2018-5-10} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181383 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mahathir Mohamad', 'p': 'position held', 'o': '?x0', 't': '2018'}

 Q: What is <product or material produced> of <Chevron Corporation> ?
 SPARQL: select distinct ?answer where { wd:Q319642 wdt:P1056 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chevron', 'p': 'product or material produced', 'o': '?x0'}

 Q: what is the {subject has role} for {John Hope Franklin} has {member of} as {American Historical Association} ?
 SPARQL: SELECT ?value WHERE { wd:Q1367397 p:P463 ?s . ?s ps:P463 wd:Q464915 . ?s pq:P2868 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hope Franklin', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'American Historical Association'}}}

 Q: What is the {geometric concept} for {manifestation of} of {spacetime}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q133327 . ?sbj wdt:P31 wd:Q21550639 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'spacetime', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geometric concept'}}

 Q: What is the {business enterprise} with the {MAX(target interest rate)} whose {instance of} is {central bank}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P2661 ?obj . ?ent wdt:P31 wd:Q66344 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'target interest rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'central bank'}}}

 Q: Did {Paul_Simon} {award received} {60th Primetime Emmy Awards} and {Grammy Lifetime Achievement Award} ?
 SPARQL: ASK WHERE { wd:Q4028 wdt:P166 wd:Q1338928 . wd:Q4028 wdt:P166 wd:Q935843 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Paul Simon', 'p': 'award received', 'o': '?x0', '?x0': '60th Primetime Emmy Awards'}, {'h': 'IS', 'v': '?x1', 's': 'Paul Simon', 'p': 'award received', 'o': '?x1', '?x1': 'Grammy Lifetime Achievement Award'}]

 Q: What is {instruction set} of {runtime} of {Windows 95} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83370 wdt:P400 ?X . ?X wdt:P1068 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instruction set', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Windows 95', 'p': 'runtime', 'o': '$y0'}}

 Q: Name a mutant in X-MEN that starts with letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1094617 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mutant'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {traditional story} for {characters} of {Robin Hood}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q122634 . ?sbj wdt:P31 wd:Q7832362 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Robin Hood', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'traditional story'}}

 Q: what is the {end time} for {Reinhard Heydrich} has {position held} as {President of Interpol} ?
 SPARQL: SELECT ?value WHERE { wd:Q60039 p:P39 ?s . ?s ps:P39 wd:Q19698214 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reinhard Heydrich', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Interpol'}}}

 Q: "Which is {portrait of} of {A Sunday Afternoon on the Island of La Grande Jatte}, which has {sound emitted} is {female voice} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1044742 wdt:P180 ?answer . ?answer wdt:P4733 wd:Q50810224}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'A Sunday Afternoon on the Island of La Grande Jatte', 'p': 'portrait of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sound emitted', 'o': 'female voice'}}

 Q: "Where is {death place} of {Ignaz Semmelweis}, which has {next to} is {Heiligenstadt} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q59736 wdt:P20 ?answer . ?answer wdt:P47 wd:Q379531}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ignaz Semmelweis', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next to', 'o': 'Heiligenstadt'}}

 Q: Mention the qualifying degree and the major specialization course in which Jeff Bezos graduated from the Princeton University
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q312556 p:P69 ?s . ?s ps:P69 wd:Q21578 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeff Bezos', 'p': 'graduated from', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'graduated from', 'o': 'Princeton University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeff Bezos', 'p': 'graduated from', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'graduated from', 'o': 'Princeton University'}}}]

 Q: Which is gait for horse?
 SPARQL: select distinct ?answer where { wd:Q726 wdt:P2839 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'horse', 'p': 'gait', 'o': '?x0'}

 Q: Which is the German cattle breed ID of Jersey cattle?
 SPARQL: select distinct ?answer where { wd:Q987965 wdt:P2024 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jersey cattle', 'p': 'German cattle breed ID', 'o': '?x0'}

 Q: What is {guilty of} of {presented by} of {Paris Hilton's My New BFF} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1513736 wdt:P371 ?X . ?X wdt:P1399 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'guilty of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Paris Hilton's My New BFF", 'p': 'presented by', 'o': '$y0'}}

 Q: Which is the date of baptism in early childhood of Diego Velázquez?
 SPARQL: select distinct ?answer where { wd:Q297 wdt:P1636 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Diego Velázquez', 'p': 'date of baptism in early childhood', 'o': '?x0'}

 Q: what is the {for work} for {Seal} has {nominated for} as {Grammy Award for Best Pop Vocal Album} ?
 SPARQL: SELECT ?value WHERE { wd:Q218091 p:P1411 ?s . ?s ps:P1411 wd:Q1027891 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seal', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Grammy Award for Best Pop Vocal Album'}}}

 Q: Give me {separation process} that {discoverer or inventor} {Zosimos of Panopolis} and which contains the word {distillation} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q898987 . ?sbj wdt:P61 wd:Q226868 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'distillation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'separation process', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'Zosimos of Panopolis'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'distillation'}}

 Q: Tell me the association football stadium of the structural engineer Sinclair Knight Merz which starts with the letter s?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1154710 . ?sbj wdt:P631 wd:Q3459673 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'football stadium', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'structural engineer', 'o': 'Sinclair Knight Merz'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {mother} and {date of death} of {{Charlemagne} has {child} as {Charles the Younger}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q283107 . ?s pq:P25 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles the Younger'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles the Younger'}}}]

 Q: What is the {monetary authority} with the {MAX(target interest rate)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6899005 . ?ent wdt:P2661 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'target interest rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monetary authority'}}

 Q: What was the population of Guinea in 1961?
 SPARQL: SELECT ?obj WHERE { wd:Q1006 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guinea', 'p': 'population', 'o': '?x0', 't': '1961'}

 Q: What is the {human} for {named after} of {Calvinism}
 SPARQL:  select distinct ?obj where { wd:Q101849 wdt:P138 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Calvinism', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the periapsis 15817 Lucianotesi less than 1.40172756?
 SPARQL: ASK WHERE { wd:Q141068 wdt:P2244 ?obj filter(?obj < 1.40172756) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '15817 Lucianotesi', 'p': 'periapsis', 'o': '?x0', '?x0': '1.40172756'}

 Q: When is Naruto Uzumaki's birthday?
 SPARQL: select distinct ?answer where { wd:Q931 wdt:P3150 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Naruto Uzumaki', 'p': 'birthday', 'o': '?x0'}

 Q: What is {position held} of {David Trimble} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q192556 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Trimble', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Trimble', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {spouse} of {Chrissie Hynde} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q239202 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chrissie Hynde', 'p': 'married', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chrissie Hynde', 'p': 'married', 'o': '$y0'}}]

 Q: What is {bordered by} of {died in} of {William Booth} ?
 SPARQL: SELECT ?answer WHERE { wd:Q309882 wdt:P20 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bordered by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Booth', 'p': 'died in', 'o': '$y0'}}

 Q: Give me {communist party} that contains the word {práce} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q233591 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'práce')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'communist party'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'práce'}}

 Q: what is the {start time} for {Leslie Lamport} has {employer} as {Microsoft Research} ?
 SPARQL: SELECT ?value WHERE { wd:Q92613 p:P108 ?s . ?s ps:P108 wd:Q1144725 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leslie Lamport', 'p': 'working for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'working for', 'o': 'Microsoft Research'}}}

 Q: What was the significant event happend when Gina Rinehart was came to an end in 1981
 SPARQL: SELECT ?obj WHERE { wd:Q242982 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gina Rinehart', 'p': 'significant event', 'o': '?x0', 't': '1981'}

 Q: What is the {democratic republic} for {indigenous to} of {American English}
 SPARQL:  select distinct ?obj where { wd:Q7976 wdt:P2341 ?obj . ?obj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American English', 'p': 'indigenous to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: Tell me an arithmetic calendar that has the word calendar in it's name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q669102 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'calendar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'arithmetic calendar'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'calendar'}}

 Q: What is the {human} for {cast member} of {Game of Thrones}
 SPARQL:  select distinct ?obj where { wd:Q23572 wdt:P161 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Game of Thrones', 'p': 'cast member', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the twin city of Basel which has an establishment date of 751-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q78 wdt:P190 ?answer . ?answer wdt:P571 ?x FILTER(contains(?x,'751-0-0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Basel', 'p': 'twin city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'establishment date', 'o': '751-0-0'}}

 Q: What film production company owns the American Broadcasting Company?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1830 wd:Q169889 . ?sbj wdt:P31 wd:Q1762059 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owns', 'o': 'American Broadcasting Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film production company'}}

 Q: What is formed in burial place of William IV, Prince of Orange ?
 SPARQL: SELECT ?answer WHERE { wd:Q380949 wdt:P119 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'formed in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William IV, Prince of Orange', 'p': 'burial place', 'o': '$y0'}}

 Q: What is the {HTML4 named color} for {color} of {ruby}
 SPARQL:  select distinct ?obj where { wd:Q43088 wdt:P462 ?obj . ?obj wdt:P31 wd:Q56053097 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ruby', 'p': 'color', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'HTML4 named color'}}

 Q: what is the {point in time} for {Jonathan Franzen} has {award received} as {National Book Award for Fiction} ?
 SPARQL: SELECT ?value WHERE { wd:Q316607 p:P166 ?s . ?s ps:P166 wd:Q3873144 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jonathan Franzen', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'National Book Award for Fiction'}, 't': '?x0'}

 Q: Which Shumen cave has the lowest temperature?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q35509 . ?ent wdt:P2076 ?obj . ?ent wdt:P131 wd:Q181830} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cave', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Shumen'}}}

 Q: Is Burt Reynolds a citizen of America?
 SPARQL: ASK WHERE { wd:Q202148 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Burt Reynolds', 'p': 'citizen of', 'o': '?x0', '?x0': 'America'}]

 Q: What is the {country} and the {continent} of {Bangalore} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1355 wdt:P17 ?ans_1 . wd:Q1355 wdt:P30 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Bangalore', 'p': 'country', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Bangalore', 'p': 'continent', 'o': '?x1'}]

 Q: What is webcam page URL for Metz ?
 SPARQL: select distinct ?answer where { wd:Q22690 wdt:P4238 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Metz', 'p': 'webcam page URL', 'o': '?x0'}

 Q: what is the {point in time} for {Romário} has {award received} as {World Cup Golden Ball} ?
 SPARQL: SELECT ?value WHERE { wd:Q178649 p:P166 ?s . ?s ps:P166 wd:Q17355204 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Romario', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'World Cup Golden Ball'}, 't': '?x0'}

 Q: What is the {human} for {cause of death} of {amyotrophic lateral sclerosis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P509 wd:Q206901 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of death', 'o': 'amyotrophic lateral sclerosis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {partner in sports} of {co-founder} of {E. & H. T. Anthony & Co.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5321681 wdt:P112 ?X . ?X wdt:P1327 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'partner in sports', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anthony', 'p': 'co-founder', 'o': '$y0'}}

 Q: Who is the writer of On Liberty who's birthday is May 20, 1806?
 SPARQL: SELECT ?answer WHERE { wd:Q1055881 wdt:P50 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1806'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'On Liberty', 'p': 'writer', 'o': '?x0', 't': '1806'}

 Q: What are the paradox which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q483372 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'paradox'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is <Africultures person ID> of <Ryszard Kapuściński> ?
 SPARQL: select distinct ?answer where { wd:Q216813 wdt:P4514 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ryszard Kapuściński', 'p': 'Africultures person ID', 'o': '?x0'}

 Q: Tell me the studio album of the tracklist of Rock and Roll that starts with the letter i?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208569 . ?sbj wdt:P658 wd:Q2331674 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'studio album', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tracklist', 'o': 'Rock and Roll'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: Is William Lawson's first name the same as Gwyllym?
 SPARQL: SELECT ?answer WHERE { wd:Q249724 wdt:P735 ?answer . ?answer wdt:P460 wd:Q19874199}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Lawson', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Gwyllym'}}

 Q: what is the {start time} for {Katharine Graham} has {award received} as {Library of Congress Living Legend} ?
 SPARQL: SELECT ?value WHERE { wd:Q435203 p:P166 ?s . ?s ps:P166 wd:Q6542686 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katharine Graham', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Library of Congress Living Legend'}}}

 Q: Which award was received by Kobe Bryant in 2007?
 SPARQL: SELECT ?obj WHERE { wd:Q25369 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kobe Bryant', 'p': 'award', 'o': '?x0', 't': '2007'}

 Q: What is the {chemical compound} for {significant drug interaction} of {erythromycin}
 SPARQL:  select distinct ?obj where { wd:Q213511 wdt:P769 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'erythromycin', 'p': 'significant drug interaction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: what biblical episode commemorates Palm Sunday?
 SPARQL:  select distinct ?obj where { wd:Q42236 wdt:P547 ?obj . ?obj wdt:P31 wd:Q22704077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Palm Sunday', 'p': 'commemorates', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}}

 Q: What is <office held by head of government> of <governor> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1313 wd:Q132050}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'office held by head of government', 'o': 'governor'}

 Q: What is the {human} for {voice actor} of {The Lion King}
 SPARQL:  select distinct ?obj where { wd:Q36479 wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Lion King', 'p': 'voice actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the event location in action of the Allies?
 SPARQL: SELECT ?answer WHERE { wd:Q215669 wdt:P607 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Allies', 'p': 'in action', 'o': '$y0'}}

 Q: What is dissertation submitted to for Gordon Brown ?
 SPARQL: select distinct ?answer where { wd:Q10648 wdt:P4101 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gordon Brown', 'p': 'dissertation submitted to', 'o': '?x0'}

 Q: How many academic major subjects required for {jurisprudence} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P812 wd:Q4932206 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'academic major', 'o': 'jurisprudence'}

 Q: What happened in New Zealand on 11/25/1947?
 SPARQL: SELECT ?obj WHERE { wd:Q664 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1947')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New Zealand', 'p': 'type', 'o': '?x0', 't': '1947'}

 Q: What is {construction material} of {tea}, that has {made from} is {Camellia sinensis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6097 wdt:P186 ?answer . ?answer wdt:P1582 wd:Q101815}
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'tea', 'p': 'made from', 'o': '?x0', '?x0': 'Camellia sinensis'}]

 Q: what is the {end time} for {George Frideric Handel} has {educated at} as {University of Halle-Wittenberg} ?
 SPARQL: SELECT ?value WHERE { wd:Q7302 p:P69 ?s . ?s ps:P69 wd:Q32120 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Handel', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Halle-Wittenberg'}}}

 Q: When did educated at of Melinda Gates and academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q463877 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Melinda Gates', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Melinda Gates', 'p': 'educated at', 'o': '$y0'}}]

 Q: Which is the bore of AK-47?
 SPARQL: select distinct ?answer where { wd:Q37116 wdt:P2556 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'AK-47', 'p': 'bore', 'o': '?x0'}

 Q: Which dialect is the official language of the Achaemenid Empire?
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P37 ?obj . ?obj wdt:P31 wd:Q33384 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'official language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect'}}

 Q: What is <male form of label> of <military officer> ?
 SPARQL: select distinct ?answer where { wd:Q189290 wdt:P3321 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'military officer', 'p': 'male form of label', 'o': '?x0'}

 Q: what is the {for work} for {Omar Sharif} has {award received} as {César Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q170515 p:P166 ?s . ?s ps:P166 wd:Q900494 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Omar Sharif', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Cesar Award for Best Actor'}}}

 Q: Tell me about employer of Nora Ephron and occupation?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q214677 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P106 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'occupation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nora Ephron', 'p': 'employer', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'employer', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nora Ephron', 'p': 'employer', 'o': '$y0'}}]

 Q: Which is the Movieplayer film ID for Once Upon a Time in the West?
 SPARQL: select distinct ?answer where { wd:Q168154 wdt:P4783 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Once Upon a Time in the West', 'p': 'Movieplayer film ID', 'o': '?x0'}

 Q: What is the {participant} and the {location} of {Battle_of_Gettysburg} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q33132 wdt:P710 ?ans_1 . wd:Q33132 wdt:P276 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Battle of Gettysburg', 'p': 'participant', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Battle of Gettysburg', 'p': 'location', 'o': '?x1'}]

 Q: What is {has sister} of {actress} of {Red Line} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7304498 wdt:P161 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Red Line', 'p': 'actress', 'o': '$y0'}}

 Q: What is the holds position of the government headed by Frankfurt?
 SPARQL: SELECT ?answer WHERE { wd:Q1794 wdt:P6 ?X . ?X wdt:P39 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'holds position', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frankfurt', 'p': 'government headed by', 'o': '$y0'}}

 Q: Give me {arithmetic calendar} that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q669102 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'arithmetic calendar'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Give me {space probe} that {start point} {Cape Canaveral Air Force Station Space Launch Complex 41} and which that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q26529 . ?sbj wdt:P1427 wd:Q1034348 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space probe', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'from', 'o': 'Launch Complex 41'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {seat} of {team played for} of {Alcides Peña} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2467100 wdt:P54 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alcides Peña', 'p': 'team', 'o': '$y0'}}

 Q: Was Natalia Molchanova born in the Bashkir Autonomous Soviet Socialist Republic?
 SPARQL: SELECT ?obj WHERE { wd:Q59920 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q809806 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Natalia Molchanova', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Bashkir Autonomous Soviet Socialist Republic'}}}

 Q: What is {member of crew of} of {cosmonaut mission} of {Michael Fincke} ?
 SPARQL: SELECT ?answer WHERE { wd:Q362261 wdt:P450 ?X . ?X wdt:P1029 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of crew of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Fincke', 'p': 'cosmonaut mission', 'o': '$y0'}}

 Q: What award medal was given to John Steinbeck ?
 SPARQL:  select distinct ?obj where { wd:Q39212 wdt:P166 ?obj . ?obj wdt:P31 wd:Q131647 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Steinbeck', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medal'}}

 Q: What is timeline of topic for culture of Belle Barth ?
 SPARQL: SELECT ?answer WHERE { wd:Q4883606 wdt:P172 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timeline of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belle Barth', 'p': 'culture', 'o': '$y0'}}

 Q: who is depicted by Phan Thi Kim Phuc ?
 SPARQL: select distinct ?answer where { wd:Q233383 wdt:P1299 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phan Thi Kim Phuc', 'p': 'depicted by', 'o': '?x0'}

 Q: What is {born at} of {Oliver Hazard Perry}, that has {diplomatic relation} is {Chile} ?
 SPARQL: SELECT ?answer WHERE { wd:Q580513 wdt:P19 ?answer . ?answer wdt:P530 wd:Q298}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oliver Hazard Perry', 'p': 'born at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Chile'}}

 Q: What is {award received} of {Star Wars Episode V: The Empire Strikes Back} that is {winner} is {Bill Varney} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181795 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q4911227 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'Bill Varney'}}}

 Q: What is the {state} with the {MIN(inflation rate)} whose {instance of} is {sovereign state}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7275 . ?ent wdt:P1279 ?obj . ?ent wdt:P31 wd:Q3624078} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'inflation rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}}

 Q: What is {followed by} and {follows} of {{Communist Party of China} has {chairperson} as {Zhao Ziyang}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99829 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Zhao Ziyang'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Zhao Ziyang'}}}]

 Q: What is {inception} and {dissolved, abolished or demolished} of {{European Union} has {follows} as {European Community}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 wd:Q260487 . ?s pq:P571 ?value1 . ?s pq:P576 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'European Community'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'abolished', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'European Community'}}}]

 Q: What is the motto of Shahada?
 SPARQL: select distinct ?answer where { ?answer wdt:P1546 wd:Q41831}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'motto', 'o': 'Shahada'}

 Q: What is the {official tourism agency} for {tourist office} of {Frankfurt}
 SPARQL:  select distinct ?obj where { wd:Q1794 wdt:P2872 ?obj . ?obj wdt:P31 wd:Q26989327 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Frankfurt', 'p': 'tourist office', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'official tourism agency'}}

 Q: What is ICTV virus ID of Asfarviridae?
 SPARQL: select distinct ?answer where { wd:Q250204 wdt:P1076 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Asfarviridae', 'p': 'ICTV virus ID', 'o': '?x0'}

 Q: what is the {start time} for {Saint-Étienne} has {twinned administrative body} as {Fes} ?
 SPARQL: SELECT ?value WHERE { wd:Q42716 p:P190 ?s . ?s ps:P190 wd:Q80985 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saint-Étienne', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Fes'}}}

 Q: Who is {mother} of {kids} of {Jason Robards} ?
 SPARQL: SELECT ?answer WHERE { wd:Q296630 wdt:P40 ?X . ?X wdt:P25 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jason Robards', 'p': 'son', 'o': '$y0'}}

 Q: What invention contains the word tourbillion in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18119757 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tourbillon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'invention'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tourbillon'}}

 Q: What are the place of birth and the child of Pete Wentz?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q310166 wdt:P19 ?ans_1 . wd:Q310166 wdt:P40 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Pete Wentz', 'p': 'place of birth', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Pete Wentz', 'p': 'child', 'o': '?x1'}]

 Q: What part of the series is preceded by "Hooked on Monkey Fonics"?
 SPARQL: SELECT ?answer WHERE { wd:Q724150 wdt:P155 ?X . ?X wdt:P179 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'part of the series', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hooked on Monkey Fonics', 'p': 'preceded by', 'o': '$y0'}}

 Q: What is the {type of quantum particle} for {antiparticle} of {neutron}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2152 wd:Q2348 . ?sbj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'antiparticle', 'o': 'neutron', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: Is the pKa of ammonia equal to 7.368?
 SPARQL: ASK WHERE { wd:Q4087 wdt:P1117 ?obj filter(?obj = 7.368) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'ammonia', 'p': 'pKa', 'o': '?x0', '?x0': '7.368'}

 Q: Where is the death location of Louisa May Alcott, that has its geographic centre in 41.2596 -71.8083?
 SPARQL: SELECT ?answer WHERE { wd:Q185696 wdt:P20 ?answer . ?answer wdt:P5140 ?x FILTER(contains(?x,'42.2596 -71.8083'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louisa May Alcott', 'p': 'death location', 'o': '?x0'}

 Q: What is {originates from} of {belongs to} of {DVD} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5294 wdt:P127 ?X . ?X wdt:P740 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'DVD', 'p': 'belongs to', 'o': '$y0'}}

 Q: Tell me about historical country for headquarters location of Nazi Germany?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q7318 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Nazi Germany', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: How many share borders are with the {Wiesbaden} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P47 wd:Q1721 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Wiesbaden'}

 Q: What is {position held} of {Louis X of France} that is {start time} is {1314-11-29} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8384 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1314')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louis X of France', 'p': 'position held', 'o': '?x0', 't': '1314'}

 Q: What is {profession} of {sculptors} of {Drawing Hands} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2390890 wdt:P170 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Drawing Hands', 'p': 'sculptor', 'o': '$y0'}}

 Q: What is the {human} for {chief executive officer} of {Walmart}
 SPARQL:  select distinct ?obj where { wd:Q483551 wdt:P169 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Walmart', 'p': 'chief executive officer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Shimon Peres won what award together with someone else?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q57410 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shimon Peres', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shimon Peres', 'p': 'award', 'o': '$y0'}}]

 Q: What is the location of the headquarters of Asahi Shimbun given the number 34.6937?
 SPARQL: SELECT ?answer WHERE { wd:Q720503 wdt:P159 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'34.6937'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Asahi Shimbun', 'p': 'headquarters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': '34.6937'}}

 Q: what is the {date of birth} for {Pedro I} has {child} as {Pedro II of Brazil} ?
 SPARQL: SELECT ?value WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q156774 . ?s pq:P569 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Pedro II of Brazil'}}}

 Q: To which musical movement did John Cage belong?
 SPARQL:  select distinct ?obj where { wd:Q180727 wdt:P135 ?obj . ?obj wdt:P31 wd:Q12020884 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Cage', 'p': 'movement', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical movement'}}

 Q: Tell me Original Public Ivy whose name has the word university in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20971972 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Original Public Ivy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'university'}}

 Q: What is cover artist for Peter Blake ?
 SPARQL: select distinct ?answer where { ?answer wdt:P736 wd:Q504611}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cover artist', 'o': 'Peter Blake'}

 Q: What is {connected with} of {moveable object location} of {Umayyad conquest of Hispania} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1455917 wdt:P276 ?X . ?X wdt:P2789 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'connected with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Umayyad conquest of Hispania', 'p': 'location', 'o': '$y0'}}

 Q: who is the writer of Julius Caesar who has a sister named Joan Shakespeare?
 SPARQL: SELECT ?answer WHERE { wd:Q215750 wdt:P50 ?answer . ?answer wdt:P3373 wd:Q6205446}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Julius Caesar', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister', 'o': 'Joan Shakespeare'}}

 Q: Which is the language of work or name of Appetite for Destruction?
 SPARQL: select distinct ?answer where { wd:Q270690 wdt:P407 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Appetite for Destruction', 'p': 'language of work or name', 'o': '?x0'}

 Q: Who gave the{son of} of {son of} of {William FitzMaurice, 2nd Earl of Kerry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8009095 wdt:P25 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William FitzMaurice, 2nd Earl of Kerry', 'p': 'son of', 'o': '?x0'}

 Q: Give me {condition} that {facet of} {meteorology} and which contains the word {drought} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q813912 . ?sbj wdt:P1269 wd:Q25261 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'drought')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'condition', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'meteorology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'drought'}}

 Q: What is the {television character} for {sidekick of} of {Superman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2546 wd:Q79015 . ?sbj wdt:P31 wd:Q15773317 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sidekick of', 'o': 'Superman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television character'}}

 Q: Which flammable liquid has the highest ionization energy ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5457310 . ?ent wdt:P2260 ?obj . ?ent wdt:P31 wd:Q21073026 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ionization energy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable gas'}}}

 Q: What is {human population} of {borders} of {Malawi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1020 wdt:P47 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malawi', 'p': 'border', 'o': '$y0'}}

 Q: What is <GONIAT place ID> of <Staffordshire> ?
 SPARQL: select distinct ?answer where { wd:Q23105 wdt:P5215 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Staffordshire', 'p': 'GONIAT place ID', 'o': '?x0'}

 Q: How many describe a project that uses Twitter?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4510 wd:Q918 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'Twitter'}

 Q: Which is dan/kyu rank of wushu ?
 SPARQL: select distinct ?answer where { wd:Q3479346 wdt:P468 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'wushu', 'p': 'dan/kyu rank', 'o': '?x0'}

 Q: On June 24th of 1948 what award did Kliment Voroshilov received?
 SPARQL: SELECT ?obj WHERE { wd:Q186185 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1948')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kliment Voroshilov', 'p': 'award', 'o': '?x0', 't': '1948'}

 Q: What operating system component starts with the letter "f"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30059018 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operating system component'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: Name the award received by Greta Garbo in the year 1954?
 SPARQL: SELECT ?obj WHERE { wd:Q5443 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1954')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Greta Garbo', 'p': 'award received', 'o': '?x0', 't': '1954'}

 Q: what is the {of} for {Harley Quinn} has {performer} as {Jacqui Verdura} ?
 SPARQL: SELECT ?value WHERE { wd:Q849477 p:P175 ?s . ?s ps:P175 wd:Q33228927 . ?s pq:P642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harley Quinn', 'p': 'performer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'performer', 'o': 'Jacqui Verdura'}}}

 Q: Which is the filmography for Orange Is the New Black?
 SPARQL: select distinct ?answer where { ?answer wdt:P1283 wd:Q7099650}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'filmography', 'o': 'Orange Is the New Black'}

 Q: "What is {name after} of {Carnot heat engine}, which has {Christian name} is {Nicolas} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1335241 wdt:P138 ?answer . ?answer wdt:P735 wd:Q7029481}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carnot heat engine', 'p': 'name after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Christian name', 'o': 'Nicolas'}}

 Q: What is {born in} of {Gong Qiuxia}, that has {has local government areas} is {Zhenjiang} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1139517 wdt:P19 ?answer . ?answer wdt:P150 wd:Q57958}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gong Qiuxia', 'p': 'born in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has local government areas', 'o': 'Zhenjiang'}}

 Q: Is satellite of Saturn have a date of discovery of 2000-8-7?
 SPARQL: SELECT ?answer WHERE { wd:Q193 wdt:P398 ?answer . ?answer wdt:P575 ?x FILTER(contains(YEAR(?x),'2000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saturn', 'p': 'satellite', 'o': '?x0', 't': '2000'}

 Q: Which is the Sandbox-String for degree Fahrenheit?
 SPARQL: select distinct ?answer where { wd:Q42289 wdt:P370 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'degree Fahrenheit', 'p': 'Sandbox-String', 'o': '?x0'}

 Q: Which is the instruction set of 16-bit architecture?
 SPARQL: select distinct ?answer where { ?answer wdt:P1068 wd:Q194368}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'instruction set', 'o': '16-bit architecture'}

 Q: what is the {place of marriage} for {Zelda Fitzgerald} has {spouse} as {F. Scott Fitzgerald} ?
 SPARQL: SELECT ?value WHERE { wd:Q187324 p:P26 ?s . ?s ps:P26 wd:Q93354 . ?s pq:P2842 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zelda Fitzgerald', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'F. Scott Fitzgerald'}}}

 Q: Tell me art movement whose name has the word yamato in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q968159 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yamato')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yamato'}}

 Q: How many {victory} are for {Maureen Connolly} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q53390 wdt:P2522 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Maureen Connolly', 'p': 'victory', 'o': '?x0'}

 Q: what is the {for work} for {Jennifer Lawrence} has {award received} as {MTV Movie Award for Best Female Performance} ?
 SPARQL: SELECT ?value WHERE { wd:Q189490 p:P166 ?s . ?s ps:P166 wd:Q15096815 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jennifer Lawrence', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'MTV Movie Award for Best Female Performance'}}}

 Q: What is {diplomatic relation} of {party} of {Laotian Civil War} ?
 SPARQL: SELECT ?answer WHERE { wd:Q877450 wdt:P710 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Laotian Civil War', 'p': 'party', 'o': '$y0'}}

 Q: what is the {point in time} for {Cicely Tyson} has {award received} as {Candace Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q238081 p:P166 ?s . ?s ps:P166 wd:Q27851929 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Cicely Tyson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Candace Award'}, 't': '?x0'}

 Q: Is it true that the cost of Primer equals to 7000?
 SPARQL: ASK WHERE { wd:Q1434995 wdt:P2130 ?obj filter(?obj = 7000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Primer', 'p': 'cost', 'o': '?x0', '?x0': '7000'}

 Q: what is the {point in time} for {Phil Taylor} has {winner} as {BDO World Darts Championship} ?
 SPARQL: SELECT ?value WHERE { wd:Q550313 p:P1346 ?s . ?s ps:P1346 wd:Q2629008 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Phil Taylor', 'p': 'winner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'BDO World Darts Championship'}, 't': '?x0'}

 Q: Which is the Italian Senate ID for Giosuè Carducci?
 SPARQL: select distinct ?answer where { wd:Q43440 wdt:P3954 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Giosuè Carducci', 'p': 'Italian Senate ID', 'o': '?x0'}

 Q: Is the horizontal depth of the High-necked spheroid vase (DP 0212 equal to 28.8?
 SPARQL: ASK WHERE { wd:Q59417224 wdt:P5524 ?obj filter(?obj = 28.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'High-necked spheroid vase (DP 0212)', 'p': 'horizontal depth', 'o': '?x0', '?x0': '28.8'}

 Q: Did Carole King work with the record labels Epic Records and Avatar Records?
 SPARQL: ASK WHERE { wd:Q217787 wdt:P264 wd:Q216364 . wd:Q217787 wdt:P264 wd:Q4827811 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Carole King', 'p': 'record label', 'o': '?x0', '?x0': 'Epic Records'}, {'h': 'IS', 'v': '?x1', 's': 'Carole King', 'p': 'record label', 'o': '?x1', '?x1': 'Avatar Records'}]

 Q: What is the antonym of painting of Samson and the Philistines?
 SPARQL: SELECT ?answer WHERE { wd:Q20355202 wdt:P180 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Samson and the Philistines', 'p': 'painting of', 'o': '$y0'}}

 Q: Give me {capital} that {twinned administrative body} {Kiel} and which contains the word {tallinn} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5119 . ?sbj wdt:P190 wd:Q1707 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tallinn')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Kiel'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tallinn'}}

 Q: What is the name of film studio that starts with letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q375336 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film studio'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Who gave the  {summit} of {system of mountains} of {Stevens Pass} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3494853 wdt:P4552 ?X . ?X wdt:P610 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'summit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stevens Pass', 'p': 'system of mountains', 'o': '$y0'}}

 Q: Which is the Historical Gazetteer GOV ID for German Confederation?
 SPARQL: select distinct ?answer where { wd:Q151624 wdt:P2503 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'German Confederation', 'p': 'GOV ID', 'o': '?x0'}

 Q: Did {Chris_Pratt} {notable work} {Guardians of the Galaxy}?
 SPARQL: ASK WHERE { wd:Q503706 wdt:P800 wd:Q5887360 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chris Pratt', 'p': 'notable work', 'o': '?x0', '?x0': 'Guardians of the Galaxy'}]

 Q: what is the {series ordinal} for {Ted Hughes} has {given name} as {James} ?
 SPARQL: SELECT ?value WHERE { wd:Q272194 p:P735 ?s . ?s ps:P735 wd:Q677191 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ted Hughes', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'name', 'o': 'James'}}}

 Q: What is the {sovereign state} for {official language} of {Romanian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7913 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Romanian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Which is the mass excess of helium-4?
 SPARQL: select distinct ?answer where { wd:Q1151346 wdt:P2160 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'helium-4', 'p': 'mass excess', 'o': '?x0'}

 Q: What is {work location} of {Willem de Kooning} that is {end time} is {1926-7-18} ?
 SPARQL: SELECT ?obj WHERE { wd:Q132305 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1926')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Willem de Kooning', 'p': 'work location', 'o': '?x0', 't': '1926'}

 Q: What is {authors} of {succeeds to} of {The Glory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7736826 wdt:P155 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'author', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Glory', 'p': 'succeeds to', 'o': '$y0'}}

 Q: What is won by the honorary titles of The Settlers of Catan?
 SPARQL: SELECT ?answer WHERE { wd:Q17271 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'won by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Settlers of Catan', 'p': 'honorary title', 'o': '$y0'}}

 Q: What is Hulk Hogan's Wrestlingdata person ID?
 SPARQL: select distinct ?answer where { wd:Q44176 wdt:P2764 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hulk Hogan', 'p': 'Wrestlingdata person ID', 'o': '?x0'}

 Q: What is {twinned administrative body} of {Nagoya} that is {start time} is {1978-12-21} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11751 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1978')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nagoya', 'p': 'twinned administrative body', 'o': '?x0', 't': '1978'}

 Q: Is the Elo rating of the Noa Saxon Gardiner equal to 1004.0?
 SPARQL: ASK WHERE { wd:Q28479683 wdt:P1087 ?obj filter(?obj = 1004.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Noa Saxon Gardiner', 'p': 'Elo rating', 'o': '?x0', '?x0': '1004.0'}

 Q: What is {member of sports team} of {Valeriy Lobanovskyi} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q324484 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valeriy Lobanovskyi', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valeriy Lobanovskyi', 'p': 'team', 'o': '$y0'}}]

 Q: Give me {human settlement} that contains the word {zanzibar} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q486972 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zanzibar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human settlement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zanzibar'}}

 Q: How many {programming paradigm} are to/by {dynamic programming} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3966 wd:Q380679 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'programming paradigm', 'o': 'dynamic programming'}

 Q: Which is the Entomologists of the World ID for Jean-Baptiste de Lamarck?
 SPARQL: select distinct ?answer where { wd:Q82122 wdt:P5370 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean-Baptiste de Lamarck', 'p': 'Entomologists of the World ID', 'o': '?x0'}

 Q: What is {place of death} of {Clement I} that is {country} is {Bosporan Kingdom} ?
 SPARQL: SELECT ?obj WHERE { wd:Q42887 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q321371 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement I', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Bosporan Kingdom'}}}

 Q: Who was the presenter for Meet the Press starting on September 16, 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q1543066 p:P371 ?s . ?s ps:P371 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Meet the Press', 'p': 'presenter', 'o': '?x0', 't': '1984'}

 Q: Which is the GSS code (2011) of the Lake District?
 SPARQL: select distinct ?answer where { wd:Q211778 wdt:P836 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake District', 'p': 'GSS code (2011)', 'o': '?x0'}

 Q: What award did Mel Brooks receive in 2003?
 SPARQL: SELECT ?obj WHERE { wd:Q104266 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mel Brooks', 'p': 'award', 'o': '?x0', 't': '2003'}

 Q: what is the {elected in} for {John Dalberg-Acton, 1st Baron Acton} has {position held} as {Member of the 19th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q311778 p:P39 ?s . ?s ps:P39 wd:Q41582559 . ?s pq:P2715 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Dalberg-Acton, 1st Baron Acton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 19th Parliament of the United Kingdom'}}}

 Q: Ruth Benedict lives in what administrative location?
 SPARQL: SELECT ?answer WHERE { wd:Q228822 wdt:P551 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ruth Benedict', 'p': 'lives in', 'o': '$y0'}}

 Q: Which is the National Discography of Italian Song artist/group ID for Mikhail Lermontov?
 SPARQL: select distinct ?answer where { wd:Q46599 wdt:P2510 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mikhail Lermontov', 'p': 'National Discography of Italian Song artist/group ID', 'o': '?x0'}

 Q: Is it true that the payload mass of the Vale Beijing equals to 404389?
 SPARQL: ASK WHERE { wd:Q3553528 wdt:P4519 ?obj filter(?obj = 404389) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Vale Beijing', 'p': 'payload mass', 'o': '?x0', '?x0': '404389'}

 Q: Please tell me Alistair Brownlee's IAT triathlete ID.
 SPARQL: select distinct ?answer where { wd:Q716308 wdt:P2778 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alistair Brownlee', 'p': 'IAT triathlete ID', 'o': '?x0'}

 Q: What is {depiction of} of {The Son of Man}, that has {pronunciation audio} is {La-cls-malum.ogg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1151384 wdt:P180 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'La-cls-malum.ogg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Son of Man', 'p': 'depiction of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pronunciation audio', 'o': 'la-cls-malum.ogg'}}

 Q: What is the pole vault height record held by Igor Potapovich and where was the event?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q2330636 . ?s pq:P2048 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Igor Potapovich'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Igor Potapovich'}}}]

 Q: What is {position held} of {James Bryant Conant} that is {replaced by} is {Nathan M. Pusey} ?
 SPARQL: SELECT ?obj WHERE { wd:Q49355 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q1772795 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Bryant Conant', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Nathan M. Pusey'}}}

 Q: what is the {end time} for {Auckland} has {head of government} as {Len Brown} ?
 SPARQL: SELECT ?value WHERE { wd:Q37100 p:P6 ?s . ?s ps:P6 wd:Q4116955 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Auckland', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Len Brown'}}}

 Q: Tell me chemical substance whose name has the word zeolite in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q79529 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeolite')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical substance'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeolite'}}

 Q: When was Estelle Parsons nominated for a Tony Award for Best Actress in a Play?
 SPARQL: SELECT ?value WHERE { wd:Q232541 p:P1411 ?s . ?s ps:P1411 wd:Q185299 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Estelle Parsons', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Tony Award for Best Actress in a Play'}, 't': '?x0'}

 Q: what is the {mother} for {Philip III of France} has {child} as {Louis, Count of Évreux} ?
 SPARQL: SELECT ?value WHERE { wd:Q172203 p:P40 ?s . ?s ps:P40 wd:Q352940 . ?s pq:P25 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip III of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Louis, Count of Évreux'}}}

 Q: what is the {place of marriage} for {Catherine, Duchess of Cambridge} has {spouse} as {Prince William, Duke of Cambridge} ?
 SPARQL: SELECT ?value WHERE { wd:Q10479 p:P26 ?s . ?s ps:P26 wd:Q36812 . ?s pq:P2842 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Catherine, Duchess of Cambridge', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Prince William, Duke of Cambridge'}}}

 Q: What is the {organ} for {position held} of {Justin Trudeau}
 SPARQL:  select distinct ?obj where { wd:Q3099714 wdt:P39 ?obj . ?obj wdt:P31 wd:Q895526 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Justin Trudeau', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organ'}}

 Q: What is {instrument played} of {plays} of {Darrell Pace} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1166597 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Darrell Pace', 'p': 'play', 'o': '$y0'}}

 Q: Is it true that the face value of the United States two-dollar bill equals to 2?
 SPARQL: ASK WHERE { wd:Q1189454 wdt:P3934 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'United States two-dollar bill', 'p': 'face value', 'o': '?x0', '?x0': '2'}

 Q: Who did Seiji Ozawa marry in the year 1962?
 SPARQL: SELECT ?obj WHERE { wd:Q313649 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1962')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Seiji Ozawa', 'p': 'marry', 'o': '?x0', 't': '1962'}

 Q: Name a former municipality of the Netherlands that shares a border with Rotterdam
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q34370 . ?sbj wdt:P31 wd:Q7265977 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Rotterdam', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'former municipality of the Netherlands'}}

 Q: Did {Venice} {twinned administrative body} {Sarajevo} and {Tallinn} ?
 SPARQL: ASK WHERE { wd:Q641 wdt:P190 wd:Q11194 . wd:Q641 wdt:P190 wd:Q1770 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Venice', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Sarajevo'}, {'h': 'IS', 'v': '?x1', 's': 'Venice', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Tallinn'}]

 Q: What is {date of birth} of {Hamilcar Barca} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q185101 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hamilcar Barca', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Is the base salary of Gary Chan equal to 77000?
 SPARQL: ASK WHERE { wd:Q5524836 wdt:P3618 ?obj filter(?obj = 77000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Gary Chan', 'p': 'base salary', 'o': '?x0', '?x0': '77000'}

 Q: In the birth place of Gerard Reve, what is the earliest record of 1275-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q364153 wdt:P19 ?answer . ?answer wdt:P1249 ?x FILTER(contains(YEAR(?x),'1275'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gerard Reve', 'p': 'birth place', 'o': '?x0', 't': '1275'}

 Q: What is {nominated for} of {D. T. Suzuki} that is {point in time} is {1963-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q44847 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1963')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'D. T. Suzuki', 'p': 'nominated for', 'o': '?x0', 't': '1963'}

 Q: What is {mother tongue} of {Ben Carson}, that has {script} is {English alphabet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q816459 wdt:P103 ?answer . ?answer wdt:P282 wd:Q754673}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ben Carson', 'p': 'mother tongue', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alphabet', 'o': 'English alphabet'}}

 Q: what is the {statement supported by} for {Fiji} has {has quality} as {partly free country} ?
 SPARQL: SELECT ?value WHERE { wd:Q712 p:P1552 ?s . ?s ps:P1552 wd:Q47185145 . ?s pq:P3680 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement supported by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fiji', 'p': 'has quality', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has quality', 'o': 'partly free country'}}}

 Q: Which is the ISWC of Symphony No. 9?
 SPARQL: select distinct ?answer where { wd:Q11985 wdt:P1827 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Symphony No. 9', 'p': 'ISWC', 'o': '?x0'}

 Q: Who is the developer of Stirling engine whose died in Galston
 SPARQL: SELECT ?answer WHERE { wd:Q186212 wdt:P61 ?answer . ?answer wdt:P20 wd:Q3997296}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Stirling engine', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Galston'}}

 Q: What is {visitors per year} of {Yellowstone National Park} that is {point in time} is {2015-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q351 p:P1174 ?s . ?s ps:P1174 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yellowstone National Park', 'p': 'visitors per year', 'o': '?x0', 't': '2015'}

 Q: Is it true that the term length of office of Captain Regent of San Marino equals to 0.5?
 SPARQL: ASK WHERE { wd:Q258045 wdt:P2097 ?obj filter(?obj = 0.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Captain Regent of San Marino', 'p': 'term length of office', 'o': '?x0', '?x0': '0.5'}

 Q: Tell me universal library whose name has the word library in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2495568 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'library')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'universal library'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'library'}}

 Q: What is the {impact wrench model} with the {MAX(power consumed)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q23811265 . ?ent wdt:P2791 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'power consumed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'impact wrench model'}}

 Q: Who is {favorite player} of {The Rolling Stones}, that has {found guilty of} is {tax evasion}
 SPARQL: SELECT ?answer WHERE { wd:Q11036 wdt:P737 ?answer . ?answer wdt:P1399 wd:Q6502151}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Rolling Stones', 'p': 'favorite player', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'guilty of', 'o': 'tax evasion'}}

 Q: What is the density of water?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q283 wdt:P2054 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'water', 'p': 'density', 'o': '?x0'}

 Q: What is award received of Richard M. Karp that is point in time is 1985-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q92612 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1985')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Richard M. Karp', 'p': 'award received', 'o': '?x0', 't': '1985'}

 Q: Does Bob Dylan have archives at the University of Georgia?
 SPARQL: ASK WHERE { wd:Q392 wdt:P485 wd:Q761534 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bob Dylan', 'p': 'archives at', 'o': '?x0', '?x0': 'University of Georgia'}]

 Q: Is the slope rating of the Crosswater Club equal to 145?
 SPARQL: ASK WHERE { wd:Q5188884 wdt:P3840 ?obj filter(?obj = 145) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Crosswater Club', 'p': 'slope rating', 'o': '?x0', '?x0': '145'}

 Q: What is {end cause} and {elected in} of {{Oswald Mosley} has {position held} as {Member of the 35th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q332400 p:P39 ?s . ?s ps:P39 wd:Q41582588 . ?s pq:P1534 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oswald Mosley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 35th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oswald Mosley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 35th Parliament of the United Kingdom'}}}]

 Q: What is {location of burial} of {Deniz Gezmiş}, that has {wgs 84} is {39.992} ?
 SPARQL: SELECT ?answer WHERE { wd:Q982419 wdt:P119 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'39.992'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Deniz Gezmiş', 'p': 'burial location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wgs 84', 'o': '39.992'}}

 Q: In what neighborhood that covers a surface area of 50.41 units was the Battle of Rocroi fought?
 SPARQL: SELECT ?answer WHERE { wd:Q728480 wdt:P276 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'50.41'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Rocroi', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area', 'o': '50.41'}}

 Q: What is INTEGRAL's start point?
 SPARQL: select distinct ?answer where { wd:Q50021 wdt:P1427 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'INTEGRAL', 'p': 'start point', 'o': '?x0'}

 Q: What is {facet of a polytope} of {shape} of {six-sided die} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17639282 wdt:P1419 ?X . ?X wdt:P1312 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'facet of a polytope', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'six-sided die', 'p': 'shape', 'o': '$y0'}}

 Q: which sport in a geographic region has maximum number of clubs in Australia?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29791211 . ?ent wdt:P4999 ?obj . ?ent wdt:P276 wd:Q408 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of clubs', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport in a geographic region', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Australia'}}}

 Q: What is the trunk prefix of the shooting location Seven Samurai?
 SPARQL: SELECT ?answer WHERE { wd:Q189540 wdt:P915 ?X . ?X wdt:P3238 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'trunk prefix', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seven Samurai', 'p': 'shooting location', 'o': '$y0'}}

 Q: Who is the inventor or discoverer of Dobsonian telescope, whose location of birth is Beijing?
 SPARQL: SELECT ?answer WHERE { wd:Q1430326 wdt:P61 ?answer . ?answer wdt:P19 wd:Q956}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dobsonian telescope', 'p': 'inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of birth', 'o': 'Beijing'}}

 Q: Which are the subsidiary entities of the maintainer of Forth Bridge?
 SPARQL: SELECT ?answer WHERE { wd:Q275 wdt:P126 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Forth Bridge', 'p': 'maintainer', 'o': '$y0'}}

 Q: What is the {business} for {parent organization} of {American Broadcasting Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q169889 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'American Broadcasting Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: what is the {point in time} for {Charlie Rose} has {award received} as {James Madison Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q715515 p:P166 ?s . ?s ps:P166 wd:Q16987872 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Charlie Rose', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'James Madison Award'}, 't': '?x0'}

 Q: "Which is {is in the arrondissement of} of {Arkansas River}, that has {divided into} is {Trego County} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q8319 wdt:P131 ?answer . ?answer wdt:P150 wd:Q374626}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arkansas River', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Trego County'}}

 Q: What is {mayor} of {active in} of {Johann Gottlieb Fichte} ?
 SPARQL: SELECT ?answer WHERE { wd:Q102585 wdt:P937 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mayor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johann Gottlieb Fichte', 'p': 'active in', 'o': '$y0'}}

 Q: What is the {group} for {located on terrain feature} of {City of London}
 SPARQL:  select distinct ?obj where { wd:Q23311 wdt:P706 ?obj . ?obj wdt:P31 wd:Q16887380 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'City of London', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group'}}

 Q: What is {birth location} of {Erik Erikson}, that has {head of national government} is {Kurt Blaum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58074 wdt:P19 ?answer . ?answer wdt:P6 wd:Q1764115}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Erik Erikson', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'head of national government', 'o': 'Kurt Blaum'}}

 Q: When was Pablo Neruda awarded the National Prize for Literature?
 SPARQL: SELECT ?value WHERE { wd:Q34189 p:P166 ?s . ?s ps:P166 wd:Q860699 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pablo Neruda', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'National Prize for Literature'}, 't': '?x0'}

 Q: What is {has influence} of {portrayed by} of {Standards} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7598413 wdt:P175 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has influence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Standards', 'p': 'portrayed by', 'o': '$y0'}}

 Q: How many {stated in} are for {Zaporizhzhia} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q157835 wdt:P248 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Zaporizhzhia', 'p': 'stated in', 'o': '?x0'}

 Q: Tell me about the codon that is encoded by glycine.
 SPARQL:  select distinct ?obj where { wd:Q620730 wdt:P702 ?obj . ?obj wdt:P31 wd:Q165052 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'glycine', 'p': 'encoded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'codon'}}

 Q: What award did Arthur Rubinstein win on 1/1/1961?
 SPARQL: SELECT ?obj WHERE { wd:Q183182 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arthur Rubinstein', 'p': 'award', 'o': '?x0', 't': '1961'}

 Q: What has  pet of dog ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1429 wd:Q144}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'pet', 'o': 'dog'}

 Q: What is {academic major} and {academic degree} of {{George Lucas} has {educated at} as {University of Southern California}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q38222 p:P69 ?s . ?s ps:P69 wd:Q4614 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Lucas', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Southern California'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Lucas', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Southern California'}}}]

 Q: Was Franklin D. Roosevelt awarded the Albert Medal?
 SPARQL: ASK WHERE { wd:Q8007 wdt:P166 wd:Q4710826 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Franklin D. Roosevelt', 'p': 'award', 'o': '?x0', '?x0': 'Albert Medal'}]

 Q: What is the name of a branch of service that starts with the letter v.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q690109 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of service'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the master name of Michel de Montaigne, who has the native name Marc Antoine Muret?
 SPARQL: SELECT ?answer WHERE { wd:Q41568 wdt:P1066 ?answer . ?answer wdt:P1559 ?x FILTER(contains(?x,'Marc Antoine Muret'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michel de Montaigne', 'p': 'master', 'o': '?x0'}

 Q: How many {influenced by} are for {Maimonides} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q127398 wdt:P737 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Maimonides', 'p': 'influenced by', 'o': '?x0'}

 Q: Is the embodied energy of the glass more than 18.0?
 SPARQL: ASK WHERE { wd:Q11469 wdt:P6075 ?obj filter(?obj > 18.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'glass', 'p': 'embodied energy', 'o': '?x0', '?x0': '18.0'}

 Q: Where was Milton Friedman educated at and what was his academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q47426 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milton Friedman', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milton Friedman', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is <update method> of <Windows 10> ?
 SPARQL: select distinct ?answer where { wd:Q18168774 wdt:P4387 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Windows 10', 'p': 'update method', 'o': '?x0'}

 Q: What is {record held} of {pole vault} and {location}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: Give me {rotary cannon} that {designed by} {General Electric} and which that starts with {'m'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1966482 . ?sbj wdt:P287 wd:Q54173 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rotary cannon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'General Electric'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: what is the {end time} for {Cardinal Mazarin} has {position held} as {Bishop of Metz} ?
 SPARQL: SELECT ?value WHERE { wd:Q166056 p:P39 ?s . ?s ps:P39 wd:Q15729481 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cardinal Mazarin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Bishop of Metz'}}}

 Q: Who is the {empire} for {country of citizenship} of {Vladimir Lenin}
 SPARQL:  select distinct ?obj where { wd:Q1394 wdt:P27 ?obj . ?obj wdt:P31 wd:Q48349 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Lenin', 'p': 'country of citizenship', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire'}}

 Q: What is {written by} of {appears in} of {Professor Shattuck} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28658577 wdt:P1441 ?X . ?X wdt:P58 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'written by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Professor Shattuck', 'p': 'appeared in', 'o': '$y0'}}

 Q: What is {built out of} of {operates} of {Air China} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51747 wdt:P121 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'built out of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Air China', 'p': 'operates', 'o': '$y0'}}

 Q: When did Alexander Shelepin stop being chairperson for the KGB?
 SPARQL: SELECT ?value WHERE { wd:Q80919 p:P488 ?s . ?s ps:P488 wd:Q533890 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'KGB', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Alexander Shelepin'}}}

 Q: What is {graduate of} of {played by} of {Burnin' the Roadhouse Down} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4999805 wdt:P175 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'graduate of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Burnin' the Roadhouse Down", 'p': 'played by', 'o': '$y0'}}

 Q: What is Spock's occupation in 2286?
 SPARQL: SELECT ?obj WHERE { wd:Q16341 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2286')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Spock', 'p': 'occupation', 'o': '?x0', 't': '2286'}

 Q: What is Francis's religious name?
 SPARQL: select distinct ?answer where { wd:Q450675 wdt:P1635 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Francis', 'p': 'religious name', 'o': '?x0'}

 Q: The Chinese garden has what FOIH heritage types ID?
 SPARQL: select distinct ?answer where { wd:Q47692 wdt:P4307 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chinese garden', 'p': 'FOIH heritage types ID', 'o': '?x0'}

 Q: How much chemical structure are for oxytocin?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q169960 wdt:P117 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'oxytocin', 'p': 'chemical structure', 'o': '?x0'}

 Q: What is <order of battle> of <Battle of Lepanto> ?
 SPARQL: select distinct ?answer where { wd:Q165425 wdt:P4220 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Battle of Lepanto', 'p': 'order of battle', 'o': '?x0'}

 Q: What is the type of government in the state of Norfolk?
 SPARQL: SELECT ?answer WHERE { wd:Q23109 wdt:P17 ?X . ?X wdt:P122 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Norfolk', 'p': 'state', 'o': '$y0'}}

 Q: What is the {opera} for {characters} of {Dionysus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q41680 . ?sbj wdt:P31 wd:Q1344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Dionysus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'opera'}}

 Q: What company was Steve Jobs a board member of?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3320 wd:Q19837 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'board member', 'o': 'Steve Jobs', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'company'}}

 Q: Frank Gehry created what sculpture?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q180374 . ?sbj wdt:P31 wd:Q860861 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'created', 'o': 'Frank Gehry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sculpture'}}

 Q: Tell me me a textile fibre whose name consist of the word "woman" and whose fabrication method sericulture silk
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3071311 . ?sbj wdt:P2079 wd:Q864650 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'silk')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'textile fibre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'fabrication method', 'o': 'sericulture'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'silk'}}

 Q: What is the {G-type main-sequence star} for {child astronomical body} of {Planet Nine}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q22133699 . ?sbj wdt:P31 wd:Q5864 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Planet Nine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: What is {prequel is} of {in narrative} of {Ray Stantz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2559996 wdt:P1441 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prequel is', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ray Stantz', 'p': 'in narrative', 'o': '$y0'}}

 Q: what is the {point in time} for {Tom Cruise} has {award received} as {Golden Globe Award for Best Actor – Motion Picture Musical or Comedy} ?
 SPARQL: SELECT ?value WHERE { wd:Q37079 p:P166 ?s . ?s ps:P166 wd:Q181883 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tom Cruise', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Golden Globe Award for Best Actor – Motion Picture Musical or Comedy'}, 't': '?x0'}

 Q: What is {start time} and {end time} of {{Aleksandr Solzhenitsyn} has {spouse} as {Natalia Solzhenitsyna}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q34474 p:P26 ?s . ?s ps:P26 wd:Q4427694 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Natalia Solzhenitsyna'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'to', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Natalia Solzhenitsyna'}}}]

 Q: What is the {human} for {student} of {Michel Foucault}
 SPARQL:  select distinct ?obj where { wd:Q44272 wdt:P802 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Foucault', 'p': 'student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the original language of Television in Mexico's typology?
 SPARQL: SELECT ?answer WHERE { wd:Q11704292 wdt:P364 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Television in Mexico', 'p': 'original language', 'o': '$y0'}}

 Q: What is the {disease} with the {MAX(disease burden)} whose {drug used for treatment} is {erythromycin}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12136 . ?ent wdt:P2854 ?obj . ?ent wdt:P2176 wd:Q213511 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'disease burden', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used for treatment', 'o': 'Erythromycin'}}}

 Q: Did World War II took place in Mediterranean Sea?
 SPARQL: ASK WHERE { wd:Q362 wdt:P276 wd:Q4918 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'World War II', 'p': 'location', 'o': '?x0', '?x0': 'Mediterranean Sea'}]

 Q: What is {founders} of {superior formation} of {Weyerhauser (Canada)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29123048 wdt:P749 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founders', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Weyerhauser (Canada)', 'p': 'superior formation', 'o': '$y0'}}

 Q: What is the business enterprise with the highest maximum gradient whose instance of is business enterprise?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P2595 ?obj . ?ent wdt:P31 wd:Q4830453 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum gradient', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What are the words by My Old Kentucky Home whose career is lyricist?
 SPARQL: SELECT ?answer WHERE { wd:Q1153133 wdt:P676 ?answer . ?answer wdt:P106 wd:Q822146}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'My Old Kentucky Home', 'p': 'lyricist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'lyricist'}}

 Q: Is the magnification of the TZF 9b equal to 2.5?
 SPARQL: ASK WHERE { wd:Q42292630 wdt:P4163 ?obj filter(?obj = 2.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'TZF 9b', 'p': 'magnification', 'o': '?x0', '?x0': '2.5'}

 Q: What is the {monument} for {depicted by} of {Iroquois}
 SPARQL:  select distinct ?obj where { wd:Q68518 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q4989906 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iroquois', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monument'}}

 Q: Which is the voice type of Paul McCartney?
 SPARQL: select distinct ?answer where { wd:Q2599 wdt:P412 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paul McCartney', 'p': 'voice type', 'o': '?x0'}

 Q: Tell me operating system component whose name has the word file in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30059018 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'file')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operating system component'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'file'}}

 Q: Who was the spouse of Honoré de Balzac in the year 1850?
 SPARQL: SELECT ?obj WHERE { wd:Q9711 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1850')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Honoré de Balzac', 'p': 'spouse', 'o': '?x0', 't': '1850'}

 Q: What is {position held} of {Andrea Mantegna} that is {start time} is {1460-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5681 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1460')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrea Mantegna', 'p': 'position held', 'o': '?x0', 't': '1460'}

 Q: What is the {position} for {office held by head of government} of {Greater London}
 SPARQL:  select distinct ?obj where { wd:Q23306 wdt:P1313 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Greater London', 'p': 'office held by head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: what is the {series ordinal} for {James A. Garfield} has {position held} as {President of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q34597 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James A. Garfield', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the United States'}}}

 Q: What was the award received by Anne, Princess Royal that is point in time was 1969-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q151754 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anne, Princess Royal', 'p': 'award received', 'o': '?x0', 't': '1969'}

 Q: What is {nominated for} of {Gérard Depardieu} that is {for work} is {Camille Claudel} ?
 SPARQL: SELECT ?obj WHERE { wd:Q106508 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1029155 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerard Depardieu', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Camille Claudel'}}}

 Q: What is the {owned by} and the {founded by} of {JPMorgan_Chase} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q192314 wdt:P127 ?ans_1 . wd:Q192314 wdt:P112 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'JPMorgan Chase', 'p': 'owned by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'JPMorgan Chase', 'p': 'founded by', 'o': '?x1'}]

 Q: What was Melinda Gates' academic major and degree when she studied at Duke University?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q463877 p:P69 ?s . ?s ps:P69 wd:Q168751 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Melinda Gates', 'p': 'studied at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'studied at', 'o': 'Duke University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Melinda Gates', 'p': 'studied at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'studied at', 'o': 'Duke University'}}}]

 Q: Who is the  {chemical compound} for {significant drug interaction} of {(RS)-methadone}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P769 wd:Q179996 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant drug interaction', 'o': '(RS)-methadone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is the {protein} for {physically interacts with} of {adenosine triphosphate}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P129 wd:Q80863 . ?sbj wdt:P31 wd:Q8054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'physically interacts with', 'o': 'ATP', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'protein'}}

 Q: Is Colin Firth a sibling of Jonathan Firth and Kate Firth?
 SPARQL: ASK WHERE { wd:Q162492 wdt:P3373 wd:Q713766 . wd:Q162492 wdt:P3373 wd:Q4532014 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Colin Firth', 'p': 'sibling', 'o': '?x0', '?x0': 'Jonathan Firth'}, {'h': 'IS', 'v': '?x1', 's': 'Colin Firth', 'p': 'sibling', 'o': '?x1', '?x1': 'Kate Firth'}]

 Q: What is the number of out of school children in the planetary system of the Moon?
 SPARQL: SELECT ?answer WHERE { wd:Q405 wdt:P397 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moon', 'p': 'planetary system', 'o': '$y0'}}

 Q: Which is the {international sport governing body} for {authority} of {baseball}?
 SPARQL:  select distinct ?obj where { wd:Q5369 wdt:P797 ?obj . ?obj wdt:P31 wd:Q11422536 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'baseball', 'p': 'authority', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international sport governing body'}}

 Q: What is the largest depth of a lunar crater?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1348589 . ?ent wdt:P4511 ?obj . ?ent wdt:P31 wd:Q1348589 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'depth', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lunar crater'}}

 Q: What is the {abdication} for {significant event} of {Juan Carlos I}
 SPARQL:  select distinct ?obj where { wd:Q19943 wdt:P793 ?obj . ?obj wdt:P31 wd:Q207549 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Juan Carlos I', 'p': 'significant event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abdication'}}

 Q: When has Košice been doing as head of government since 2010-12-21?
 SPARQL: SELECT ?obj WHERE { wd:Q25409 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Košice', 'p': 'head of government', 'o': '?x0', 't': '2010'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Clarence Seedorf} has {member of sports team} as {Real Madrid C.F.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q484909 p:P54 ?s . ?s ps:P54 wd:Q8682 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clarence Seedorf', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Real'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clarence Seedorf', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Real'}}}]

 Q: Is the maximum age of compulsory education in Sweden equal to 16 ?
 SPARQL: ASK WHERE { wd:Q34 wdt:P3271 ?obj filter(?obj = 16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sweden', 'p': 'compulsory education (maximum age)', 'o': '?x0', '?x0': '16'}

 Q: What is {child} of {Philip II of France} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q34428 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip II of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip II of France', 'p': 'child', 'o': '$y0'}}]

 Q: What award John Berryman received at 1969-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q522192 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Berryman', 'p': 'award', 'o': '?x0', 't': '1969'}

 Q: Tell me about the television program WWE and its production company.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P272 wd:Q35339 . ?sbj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'production company', 'o': 'WWE', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television program'}}

 Q: Who is the stepparent of Ludwig von Mises?
 SPARQL: select distinct ?answer where { ?answer wdt:P3448 wd:Q84233}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stepparent', 'o': 'Ludwig von Mises'}

 Q: What is Joy Division's country of origin and what is her genre?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q172763 wdt:P495 ?ans_1 . wd:Q172763 wdt:P136 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Joy Division', 'p': 'country of origin', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Joy Division', 'p': 'genre', 'o': '?x1'}]

 Q: Who is the prime minister at admin HQ of the International Ice Hockey Federation?
 SPARQL: SELECT ?answer WHERE { wd:Q190173 wdt:P159 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prime minister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'International Ice Hockey Federation', 'p': 'HQ', 'o': '$y0'}}

 Q: What is {population} of {San Cristóbal de La Laguna} that is {determination method} is {register office} ?
 SPARQL: SELECT ?obj WHERE { wd:Q54898 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'San Cristóbal de La Laguna', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: What is the {discography} for {discography} of {Duran Duran}
 SPARQL:  select distinct ?obj where { wd:Q58381 wdt:P358 ?obj . ?obj wdt:P31 wd:Q273057 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Duran Duran', 'p': 'discography', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discography'}}

 Q: What is the {nomadic empire} for {country} of {Golden Horde}
 SPARQL:  select distinct ?obj where { wd:Q79965 wdt:P17 ?obj . ?obj wdt:P31 wd:Q2495771 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Golden Horde', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nomadic empire'}}

 Q: What is {age of majority} of {loyalty} of {Moshe Dayan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q188783 wdt:P945 ?X . ?X wdt:P2997 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'age of majority', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moshe Dayan', 'p': 'loyalty', 'o': '$y0'}}

 Q: Did {Jacqueline_Kennedy_Onassis} {religion} {Melkite Greek Catholic Church}?
 SPARQL: ASK WHERE { wd:Q165421 wdt:P140 wd:Q64885 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jacqueline Kennedy Onassis', 'p': 'religion', 'o': '?x0', '?x0': 'Melkite Greek Catholic Church'}]

 Q: Which is the inscription for Le Déjeuner sur l'herbe?
 SPARQL: select distinct ?answer where { wd:Q152509 wdt:P1684 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Le Déjeuner sur l'herbe", 'p': 'inscription', 'o': '?x0'}

 Q: What is the SI derived unit for the measured physical quantity of density?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P111 wd:Q29539 . ?sbj wdt:P31 wd:Q208469 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'density', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'SI derived unit'}}

 Q: How many power plants use two-stroke engines?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P516 wd:Q152323 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'engine', 'o': 'two-stroke engine'}

 Q: What is {chronology of topic} of {located in the administrative territorial entity} of {Grace Episcopal Church} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5591137 wdt:P131 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chronology of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grace Episcopal Church', 'p': 'in', 'o': '$y0'}}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: Is Roseanne Barr a member of the political party the Republican Party and the Republican Governors Association?
 SPARQL: ASK WHERE { wd:Q232301 wdt:P102 wd:Q29468 . wd:Q232301 wdt:P102 wd:Q7314590 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Roseanne Barr', 'p': 'party', 'o': '?x0', '?x0': 'Republican Party'}, {'h': 'IS', 'v': '?x1', 's': 'Roseanne Barr', 'p': 'party', 'o': '?x1', '?x1': 'Republican Governors Association'}]

 Q: "Where is {place of residence} of {Ewan McGregor}, whhich has {subdivided into} is {Alhambra} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q165518 wdt:P551 ?answer . ?answer wdt:P150 wd:Q752681}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ewan McGregor', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Alhambra'}}

 Q: What is {satellite} of {motif} of {Jupiter Heliopolitanus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20669412 wdt:P180 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'satellite', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jupiter Heliopolitanus', 'p': 'motif', 'o': '$y0'}}

 Q: What is {child} of {Pedro I} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the Deezer artist ID for Green Day?
 SPARQL: select distinct ?answer where { wd:Q47871 wdt:P2722 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Green Day', 'p': 'Deezer artist ID', 'o': '?x0'}

 Q: What is {series} of {Parshvanatha} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1400271 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Parshvanatha', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Parshvanatha', 'p': 'series', 'o': '$y0'}}]

 Q: Is the watershed area of Itzstedter Sea .28?
 SPARQL: ASK WHERE { wd:Q1675385 wdt:P2053 ?obj filter(?obj = 0.28) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Itzstedter See', 'p': 'watershed area', 'o': '?x0', '?x0': '0.28'}

 Q: What is the crafted from of the artist of The Thin Mercury Sound?
 SPARQL: SELECT ?answer WHERE { wd:Q7768705 wdt:P175 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'crafted from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Thin Mercury Sound', 'p': 'artist', 'o': '$y0'}}

 Q: What is {voice actresses} of {from work} of {Death the Kid} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3704333 wdt:P1441 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'voice actress', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Death the Kid', 'p': 'from work', 'o': '$y0'}}

 Q: tell me steroid hormone that starts with t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q422137 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steroid hormone'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: what is the {for work} for {Sissy Spacek} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q190994 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sissy Spacek', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Who is in the administrative unit of Cilegon whose Wikivoyage banner is Banten region banner.jpg?
 SPARQL: SELECT ?answer WHERE { wd:Q10124 wdt:P131 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Banten region banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cilegon', 'p': 'in', 'o': '?x0'}

 Q: when is the {point in time} for {Jawaharlal Nehru} who {nominated for} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q1047 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jawaharlal Nehru', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: How many {home port} are to/by {Southampton} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P504 wd:Q79848 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'home port', 'o': 'Southampton'}

 Q: What is {head of state} of {Georgia} that is {end time} is {2004-1-25} ?
 SPARQL: SELECT ?obj WHERE { wd:Q230 p:P35 ?s . ?s ps:P35 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Georgia', 'p': 'head of state', 'o': '?x0', 't': '2004'}

 Q: what is the {point in time} for {Nicki Minaj} has {nominated for} as {Grammy Award for Album of the Year} ?
 SPARQL: SELECT ?value WHERE { wd:Q162202 p:P1411 ?s . ?s ps:P1411 wd:Q904528 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nicki Minaj', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Grammy Award for Album of the Year'}, 't': '?x0'}

 Q: Tell me the CGNDB Unique ID of the Saskatchewan River?
 SPARQL: select distinct ?answer where { wd:Q3047 wdt:P821 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Saskatchewan River', 'p': 'CGNDB Unique ID', 'o': '?x0'}

 Q: What is {open period to} and {closed on} of {{British Museum} has {open days} as {all weekdays}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 wd:Q26214163 . ?s pq:P3028 ?value1 . ?s pq:P3026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'closed on', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}]

 Q: What kind of employment do the spouses of Jussi Björling do?
 SPARQL: SELECT ?answer WHERE { wd:Q56157 wdt:P26 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jussi Björling', 'p': 'spouse', 'o': '$y0'}}

 Q: Which is the genealogics.org person ID of Robert Walpole?
 SPARQL: select distinct ?answer where { wd:Q104190 wdt:P1819 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Walpole', 'p': 'genealogics.org person ID', 'o': '?x0'}

 Q: What are the political system which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28108 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {noble title} of {Louis the Pious} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q43974 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'royal title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'royal title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'royal title', 'o': '$y0'}}]

 Q: What award did Amnesty International receive in 1988?
 SPARQL: SELECT ?obj WHERE { wd:Q42970 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Amnesty International', 'p': 'award', 'o': '?x0', 't': '1988'}

 Q: What was Ian McEwan nominated for in 2007?
 SPARQL: SELECT ?obj WHERE { wd:Q190379 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ian McEwan', 'p': 'nominated for', 'o': '?x0', 't': '2007'}

 Q: Is the vibration of the Makita GA7021 equal to 12.3?
 SPARQL: ASK WHERE { wd:Q23775563 wdt:P2806 ?obj filter(?obj = 12.3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Makita GA7021', 'p': 'vibration', 'o': '?x0', '?x0': '12.3'}

 Q: Did {Wladimir_Klitschko} {victory} {Wladimir Klitschko vs. Sultan Ibragimov}?
 SPARQL: ASK WHERE { wd:Q18797 wdt:P2522 wd:Q39059190 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Wladimir Klitschko', 'p': 'victory', 'o': '?x0', '?x0': 'Wladimir Klitschko vs. Sultan Ibragimov'}]

 Q: What is Abigail Adams child's deathdate?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'deathdate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the Butterflies and Moths of North America ID for Geometridae?
 SPARQL: select distinct ?answer where { wd:Q45559 wdt:P3398 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Geometridae', 'p': 'Butterflies and Moths of North America ID', 'o': '?x0'}

 Q: Is it true that the prize money of the Aleksis Kivi Award is 150000?
 SPARQL: ASK WHERE { wd:Q1812708 wdt:P2121 ?obj filter(?obj = 15000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Aleksis Kivi Award', 'p': 'prize money', 'o': '?x0', '?x0': '15000'}

 Q: What is <Twitch game ID> of <Dota 2> ?
 SPARQL: select distinct ?answer where { wd:Q771541 wdt:P4467 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dota 2', 'p': 'Twitch game ID', 'o': '?x0'}

 Q: what is the {start time} for {Billie Jean King} has {award received} as {Library of Congress Living Legend} ?
 SPARQL: SELECT ?value WHERE { wd:Q54527 p:P166 ?s . ?s ps:P166 wd:Q6542686 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Billie Jean King', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Library of Congress Living Legend'}}}

 Q: Give me {Flavored tea} that {named after} {Charles Grey, 2nd Earl Grey} and which contains the word {earl} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3526264 . ?sbj wdt:P138 wd:Q294662 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'earl')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flavored tea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Charles Grey, 2nd Earl Grey'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'earl'}}

 Q: What is {member of sports team} of {Garrincha} and {number of points/goals/set scored}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q180642 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Garrincha', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Garrincha', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is {treated by} of {method of murder} of {Mohammed Rafi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q156815 wdt:P509 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mohammed Rafi', 'p': 'method of murder', 'o': '$y0'}}

 Q: What is the local authority for Greater London?
 SPARQL:  select distinct ?obj where { wd:Q23306 wdt:P797 ?obj . ?obj wdt:P31 wd:Q837766 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Greater London', 'p': 'authority', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'local authority'}}

 Q: What is the name of the secondary national association football team for the Zinedine Zidane Team members?
 SPARQL:  select distinct ?obj where { wd:Q1835 wdt:P54 ?obj . ?obj wdt:P31 wd:Q45053817 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zinedine Zidane', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'secondary national association football team'}}

 Q: What is {postal index number} of {lives in} of {Ludwig Mies van der Rohe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41508 wdt:P551 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zipcode', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ludwig Mies van der Rohe', 'p': 'lives in', 'o': '$y0'}}

 Q: What are the human which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {human} for {significant event} of {Indian independence movement}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q12444025 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Indian independence movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is the permanent duplicated item of famine?
 SPARQL: select distinct ?answer where { ?answer wdt:P2959 wd:Q168247}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'permanent duplicated item', 'o': 'famine'}

 Q: Who gave the {prequel of} of {location of narrative} of {Candide} ?
 SPARQL: SELECT ?answer WHERE { wd:Q215894 wdt:P840 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prequel of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Candide', 'p': 'location of narrative', 'o': '$y0'}}

 Q: What is {ortholog} of {genetic association} of {amyotrophic lateral sclerosis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q206901 wdt:P2293 ?X . ?X wdt:P684 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ortholog', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'amyotrophic lateral sclerosis', 'p': 'genetic association', 'o': '$y0'}}

 Q: Who is the publisher and illustrator of The Little Prince?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q25338 wdt:P123 ?ans_1 . wd:Q25338 wdt:P110 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Little Prince', 'p': 'publisher', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Little Prince', 'p': 'illustrator', 'o': '?x1'}]

 Q: What is the {vehicle model} with the {MAX(shelf life)} whose {subclass of} is {spacecraft}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29048322 . ?ent wdt:P4218 ?obj . ?ent wdt:P279 wd:Q40218 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'shelf life', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vehicle model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'spaceship'}}}

 Q: Tell me artistic theme whose name has the word theotokos in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1406161 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'theotokos')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'artistic theme'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'theotokos'}}

 Q: What is {nominated for} of {Jon Voight} that is {for work} is {Anaconda} ?
 SPARQL: SELECT ?obj WHERE { wd:Q167520 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q464042 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jon Voight', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Anaconda'}}}

 Q: With a population of 434516, what is the capital of Majorca?
 SPARQL: SELECT ?answer WHERE { wd:Q8828 wdt:P36 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'434516'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Majorca', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '434516'}}

 Q: What is {has brother} of {Nefertiti}, that has {daddy} is {Ay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40930 wdt:P3373 ?answer . ?answer wdt:P22 wd:Q146029}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nefertiti', 'p': 'bro', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'father', 'o': 'Ay'}}

 Q: Is Uruguay's minimum age for compulsory education the number 6?
 SPARQL: ASK WHERE { wd:Q77 wdt:P3270 ?obj filter(?obj = 6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Uruguay', 'p': 'compulsory education (minimum age)', 'o': '?x0', '?x0': '6'}

 Q: What is the earliest date for John the Baptist's death in the year 30?
 SPARQL: SELECT ?value WHERE { wd:Q40662 p:P570 ?s . ?s ps:P570 ?x filter(contains(?x,'30-0-0')) . ?s pq:P1319 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'earliest date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John the Baptist', 'p': 'death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'death', 'o': '30-0-0'}}}

 Q: Tell me freeway network whose name has the word system in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55504191 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'system')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'freeway network'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'system'}}

 Q: Which is the Model Manual ID for Cindy Crawford?
 SPARQL: select distinct ?answer where { wd:Q199801 wdt:P3379 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cindy Crawford', 'p': 'Model Manual ID', 'o': '?x0'}

 Q: What is the U.S. National Geodetic Survey ID of Mount Mitchell?
 SPARQL: select distinct ?answer where { wd:Q615337 wdt:P3514 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mount Mitchell', 'p': 'U.S. National Geodetic Survey ID', 'o': '?x0'}

 Q: Which is the Scoresway soccer person ID for Gareth Bale?
 SPARQL: select distinct ?answer where { wd:Q184586 wdt:P3043 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gareth Bale', 'p': 'Scoresway soccer person ID', 'o': '?x0'}

 Q: What are the writing system which start with the letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8192 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'writing system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {silent short film} for {depicted by} of {Richard III of England}
 SPARQL:  select distinct ?obj where { wd:Q133028 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q20667187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Richard III of England', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'silent short film'}}

 Q: How many people are appointed by the pope?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P748 wd:Q19546 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'appointed by', 'o': 'pope'}

 Q: IS THE TIME IN SPACE OF CATHERINE COLEMAN EQUALS TO 207552.O
 SPARQL: ASK WHERE { wd:Q7468 wdt:P2873 ?obj filter(?obj = 207552.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Catherine Coleman', 'p': 'time in space', 'o': '?x0', '?x0': '207552.0'}

 Q: Which is the Ethnologue language status for Esperanto?
 SPARQL: select distinct ?answer where { wd:Q143 wdt:P3823 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'Ethnologue language status', 'o': '?x0'}

 Q: What is the {goddess} for {country of citizenship} of {Inca Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P27 wd:Q28573 . ?sbj wdt:P31 wd:Q205985 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'Inca Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'goddess'}}

 Q: which doctrine starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q117850 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'doctrine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is Mathematical Reviews ID for Gérard Debreu ?
 SPARQL: select distinct ?answer where { wd:Q210960 wdt:P889 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gérard Debreu', 'p': 'Mathematical Reviews ID', 'o': '?x0'}

 Q: Give me {pair of enantiomers} that {disjoint union of} {list values as qualifiers} and which contains the word {nicotine} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55662747 . ?sbj wdt:P2738 wd:Q23766486 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nicotine')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pair of enantiomers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'disjoint union of', 'o': 'list values as qualifiers'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'nicotine'}}

 Q: What is the {insecticide} with the {MAX(melting point)} whose {has part} is {phosphorus}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q181322 . ?ent wdt:P2101 ?obj . ?ent wdt:P527 wd:Q674 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'melting point', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'insecticide', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'contain', 'o': 'phosphorus'}}}

 Q: what is the {start time} for {Auschwitz concentration camp} has {instance of} as {Nazi concentration camp} ?
 SPARQL: SELECT ?value WHERE { wd:Q7341 p:P31 ?s . ?s ps:P31 wd:Q328468 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Auschwitz', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'Nazi concentration camp'}}}

 Q: What is in conflict of armed with of A.100 ?
 SPARQL: SELECT ?answer WHERE { wd:Q381204 wdt:P520 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A.100', 'p': 'armed with', 'o': '$y0'}}

 Q: What is {antiparticle of} of {positron}, that has {interaction} is {gravity} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3229 wdt:P2152 ?answer . ?answer wdt:P517 wd:Q11412}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'positron', 'p': 'antiparticle', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'gravity'}}

 Q: How many collections are in the Royal Danish Library?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P195 wd:Q867885 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'Royal Danish Library'}

 Q: Who is the speaker Nicolas Sarkozy?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P823 wd:Q329 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'speaker', 'o': 'Nicolas Sarkozy'}

 Q: What is the {cooperative} for {editor} of {Dewey Decimal Classification}
 SPARQL:  select distinct ?obj where { wd:Q48460 wdt:P98 ?obj . ?obj wdt:P31 wd:Q4539 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dewey Decimal Classification', 'p': 'editor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cooperative'}}

 Q: Which is the WikiSkripta ID for cell signaling?
 SPARQL: select distinct ?answer where { wd:Q210973 wdt:P3471 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cell signaling', 'p': 'WikiSkripta ID', 'o': '?x0'}

 Q: What is {inhabitants} of {studio where filmed} of {Halloween} ?
 SPARQL: SELECT ?answer WHERE { wd:Q221103 wdt:P915 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Halloween', 'p': 'studio where filmed', 'o': '$y0'}}

 Q: what is the {criterion used} for {Higgs boson} has {mean lifetime} as {1e-05} ?
 SPARQL: SELECT ?value WHERE { wd:Q402 p:P2645 ?s . ?s ps:P2645 ?x filter(contains(?x,'1e-05')) . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Higgs boson', 'p': 'mean lifetime', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mean lifetime', 'o': '1e-05'}}}

 Q: What's the cell component of cholesterol?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q43656 wdt:P681 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'cholesterol', 'p': 'cell component', 'o': '?x0'}

 Q: What is the birthplace of Yi Xing, that borders Anhui.
 SPARQL: SELECT ?answer WHERE { wd:Q710705 wdt:P19 ?answer . ?answer wdt:P47 wd:Q40956}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yi Xing', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Anhui'}}

 Q: What are the data serialization format that contains the word yaml in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24451526 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yaml')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'data serialization format'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yaml'}}

 Q: IS THE SUBLIMATION TEMPERTATURE OF THE SYNTHETIC GRAPHITE GREATER THAN 7922.4
 SPARQL: ASK WHERE { wd:Q21057320 wdt:P2113 ?obj filter(?obj > 7922.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'synthetic graphite', 'p': 'sublimation temperature', 'o': '?x0', '?x0': '7922.4'}

 Q: what is the {point in time} for {Raghuram Rajan} has {award received} as {Fischer Black Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q981496 p:P166 ?s . ?s ps:P166 wd:Q741683 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Raghuram Rajan', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Fischer Black Prize'}, 't': '?x0'}

 Q: When was Whoopi Goldberg has received award for British Academy of Film and Television Arts?
 SPARQL: SELECT ?value WHERE { wd:Q49001 p:P166 ?s . ?s ps:P166 wd:Q159661 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Whoopi Goldberg', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'British Academy of Film and Television Arts'}, 't': '?x0'}

 Q: when was National Film Award for Best Screenplay  award received of the Arundhati Roy?
 SPARQL: SELECT ?value WHERE { wd:Q212801 p:P166 ?s . ?s ps:P166 wd:Q1967202 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Arundhati Roy', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'National Film Award for Best Screenplay'}, 't': '?x0'}

 Q: What is {type of taxon} of {taxon parent} of {Cupressus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q146911 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of taxon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cupressus', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What is {is in the municipality of} of {The Kyle and Jackie O Show}, that has {has counties} is {City of Fairfield} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7745007 wdt:P131 ?answer . ?answer wdt:P150 wd:Q571368}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Kyle and Jackie O Show', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': 'City of Fairfield'}}

 Q: Is it true that the maximum operating altitude of the Albatros D.I is greater than 11808?
 SPARQL: ASK WHERE { wd:Q114039 wdt:P2254 ?obj filter(?obj > 11808.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Albatros D.I', 'p': 'maximum operating altitude', 'o': '?x0', '?x0': '11808.0'}

 Q: which mosque starts with s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q32815 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mosque'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {award received} of {Dolly Parton} that is {for work} is {Transamerica} ?
 SPARQL: SELECT ?obj WHERE { wd:Q180453 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q742614 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dolly Parton', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Transamerica'}}}

 Q: what is the {start time} for {Alan Sugar} has {position held} as {Enterprise Champion} ?
 SPARQL: SELECT ?value WHERE { wd:Q336520 p:P39 ?s . ?s ps:P39 wd:Q5380297 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Sugar', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Enterprise Champion'}}}

 Q: What is Peter Gabriel's record label?
 SPARQL:  select distinct ?obj where { wd:Q175195 wdt:P264 ?obj . ?obj wdt:P31 wd:Q18127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Peter Gabriel', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'record label'}}

 Q: What is the leaf material used for ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P186 wd:Q33971 . ?sbj wdt:P31 wd:Q1724915 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'material used', 'o': 'leaf', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'use'}}

 Q: What is <students count> of <Aix-Marseille University> ?
 SPARQL: select distinct ?answer where { wd:Q2302586 wdt:P2196 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aix-Marseille University', 'p': 'students count', 'o': '?x0'}

 Q: What area of law starts with "l"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1756157 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of law'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Which means {instrument} for {harmonica} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1303 wd:Q51290}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'instrument', 'o': 'harmonica'}

 Q: what is the {start time} for {Anni-Frid Lyngstad} has {spouse} as {Prince Heinrich Ruzzo Reuss of Plauen} ?
 SPARQL: SELECT ?value WHERE { wd:Q201908 p:P26 ?s . ?s ps:P26 wd:Q1208883 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anni-Frid Lyngstad', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Prince Heinrich Ruzzo Reuss of Plauen'}}}

 Q: What is {date of death} of {Al-Nawawi}? That is {instance of} is {statement with Gregorian date earlier than 1584}?
 SPARQL: SELECT ?obj WHERE { wd:Q293571 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Al-Nawawi', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Who gave the{product of} of {series} of {Honda RC174} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15074515 wdt:P179 ?X . ?X wdt:P176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'product of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honda RC174', 'p': 'series', 'o': '$y0'}}

 Q: How many {language of work or name} are to/by {Esperanto} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P407 wd:Q143 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Esperanto'}

 Q: Which the venue of the bibliographic citation of the Toward a general psychobiological theory of emotions?
 SPARQL: SELECT ?answer WHERE { wd:Q22251380 wdt:P2860 ?X . ?X wdt:P1433 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'venue', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Toward a general psychobiological theory of emotions', 'p': 'bibliographic citation', 'o': '$y0'}}

 Q: what is the {type of kinship} for {Gina Lollobrigida} has {relative} as {Guido Lollobrigida} ?
 SPARQL: SELECT ?value WHERE { wd:Q56009 p:P1038 ?s . ?s ps:P1038 wd:Q1553604 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gina Lollobrigida', 'p': 'family', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'family', 'o': 'Guido Lollobrigida'}}}

 Q: what is the {conferred by} for {Paulo Freire} has {award received} as {doctor honoris causa} ?
 SPARQL: SELECT ?value WHERE { wd:Q164797 p:P166 ?s . ?s ps:P166 wd:Q11415564 . ?s pq:P1027 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conferred by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paulo Freire', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'doctor honoris causa'}}}

 Q: What is {nominated for} of {Claude Rains} that is {for work} is {Notorious} ?
 SPARQL: SELECT ?obj WHERE { wd:Q318734 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q587419 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Claude Rains', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Notorious'}}}

 Q: What is {born in} of {Frank Zamboni}, that has {has villages} is {Carbon County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1287174 wdt:P19 ?answer . ?answer wdt:P150 wd:Q156467}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frank Zamboni', 'p': 'born in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has villages', 'o': 'Carbon County'}}

 Q: Who is the {human} for {position held} of {United Nations Secretary-General}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P39 wd:Q81066 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'position held', 'o': 'United Nations Secretary-General', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When was Leonardo DiCaprio nominated for the Academy Award for Best Actor.
 SPARQL: SELECT ?value WHERE { wd:Q38111 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Leonardo DiCaprio', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}, 't': '?x0'}

 Q: Which is the Hans Christian Andersen Centre work ID of The Little Mermaid?
 SPARQL: select distinct ?answer where { wd:Q11859 wdt:P3675 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Little Mermaid', 'p': 'Hans Christian Andersen Centre work ID', 'o': '?x0'}

 Q: What is the {monument} for {place of death} of {David Livingstone}
 SPARQL:  select distinct ?obj where { wd:Q48373 wdt:P20 ?obj . ?obj wdt:P31 wd:Q4989906 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Livingstone', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monument'}}

 Q: what is the {start time} for {Cornelis Drebbel} has {work location} as {Haarlem} ?
 SPARQL: SELECT ?value WHERE { wd:Q365463 p:P937 ?s . ?s ps:P937 wd:Q9920 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cornelis Drebbel', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'Haarlem'}}}

 Q: What is {leader} of {awards} of {Cliff Robinson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1101335 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'leader', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cliff Robinson', 'p': 'awards', 'o': '$y0'}}

 Q: Is the right ascension of the Sh2-308 greater than 82.84?
 SPARQL: ASK WHERE { wd:Q30086636 wdt:P6257 ?obj filter(?obj > 82.84) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Sh2-308', 'p': 'right ascension', 'o': '?x0', '?x0': '82.84'}

 Q: What is {employer} of {Gabriel Fauré} that is {position held} is {kapellmeister} ?
 SPARQL: SELECT ?obj WHERE { wd:Q104919 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P39 wd:Q215793 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gabriel Fauré', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'kapellmeister'}}}

 Q: What are the phonetic alphabet which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q579287 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phonetic alphabet'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {record producer} of {preceded by} of {The Dark Knight Rises} ?
 SPARQL: SELECT ?answer WHERE { wd:Q189330 wdt:P155 ?X . ?X wdt:P162 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Dark Knight Rises', 'p': 'preceded by', 'o': '$y0'}}

 Q: What is {married to} of {is daughter of} of {Constantine VII} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41608 wdt:P25 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Constantine VII', 'p': 'is daughter of', 'o': '$y0'}}

 Q: Which is the antonym of the location of the moustache?
 SPARQL: SELECT ?answer WHERE { wd:Q15179 wdt:P276 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'moustache', 'p': 'location', 'o': '$y0'}}

 Q: what is the {end time} for {Ban Ki-moon} has {position held} as {United Nations Secretary-General} ?
 SPARQL: SELECT ?value WHERE { wd:Q1253 p:P39 ?s . ?s ps:P39 wd:Q81066 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ban Ki-moon', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United Nations Secretary-General'}}}

 Q: Give me {patent medicine} that {discoverer or inventor} {John Pemberton} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3480271 . ?sbj wdt:P61 wd:Q215959 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'patent medicine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'John Pemberton'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Is principle office Girls' Generation new label?
 SPARQL: SELECT ?answer WHERE { wd:Q20153 wdt:P264 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'principle office', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Girls' Generation", 'p': 'label', 'o': '$y0'}}

 Q: When did member of sports team of George Weah and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q173139 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Weah', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Weah', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is {award received} and {together with} of {{Park Sung-hyun} has {participant of} as {2008 FITA Archery World Cup}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q233884 p:P1344 ?s . ?s ps:P1344 wd:Q2232366 . ?s pq:P166 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Sung-hyun', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'participant of', 'o': '2008 FITA Archery World Cup'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'together with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Sung-hyun', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'participant of', 'o': '2008 FITA Archery World Cup'}}}]

 Q: Is the Gini coefficient of the USA less than 41.52?
 SPARQL: ASK WHERE { wd:Q30 wdt:P1125 ?obj filter(?obj < 41.52) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'USA', 'p': 'Gini coefficient', 'o': '?x0', '?x0': '41.52'}

 Q: What is {date of birth} and {date of death} of {{Joseph Stalin} has {child} as {Vasily Dzhugashvili}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q459216 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Vasily Dzhugashvili'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Vasily Dzhugashvili'}}}]

 Q: What are the incorporation which start with the letter g
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25394665 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'incorporation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: what is the {sourcing circumstances} for {Roger Bacon} has {date of birth} as {1219-0-0} ?
 SPARQL: SELECT ?value WHERE { wd:Q171677 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1219')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roger Bacon', 'p': 'date of birth', 'o': '$y0'}}

 Q: Is -306 the melting point of propane?
 SPARQL: ASK WHERE { wd:Q131189 wdt:P2101 ?obj filter(?obj = -306) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'propane', 'p': 'melting point', 'o': '?x0', '?x0': '-306'}

 Q: what is the {start time} for {Uma Thurman} has {spouse} as {Ethan Hawke} ?
 SPARQL: SELECT ?value WHERE { wd:Q125017 p:P26 ?s . ?s ps:P26 wd:Q484615 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uma Thurman', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Ethan Hawke'}}}

 Q: what is the {replaces} for {Benazir Bhutto} has {position held} as {Prime Minister of Pakistan} ?
 SPARQL: SELECT ?value WHERE { wd:Q34413 p:P39 ?s . ?s ps:P39 wd:Q735575 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benazir Bhutto', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Pakistan'}}}

 Q: What award Roald Dahl received on 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q25161 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Roald Dahl', 'p': 'award', 'o': '?x0', 't': '1984'}

 Q: Who was the owner of Willie Nelson's guitar?
 SPARQL:  select distinct ?obj where { wd:Q206112 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q6607 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Willie Nelson', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'guitar'}}

 Q: Did {Donald_Glover} {occupation} {screenwriter}?
 SPARQL: ASK WHERE { wd:Q1239933 wdt:P106 wd:Q28389 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Donald Glover', 'p': 'occupation', 'o': '?x0', '?x0': 'screenwriter'}]

 Q: What is the current time in Singapore MRT?
 SPARQL: SELECT ?answer WHERE { wd:Q40176 wdt:P131 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Singapore MRT', 'p': 'in', 'o': '$y0'}}

 Q: What item is used to play with a list of sleds?
 SPARQL: SELECT ?answer WHERE { wd:Q50210255 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'list of sleds', 'p': 'play', 'o': '$y0'}}

 Q: Canada contains administrative territorial entity of how many?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q16 wdt:P150 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Canada', 'p': 'contains administrative territorial entity', 'o': '?x0'}

 Q: What is {prize money} and {together with} of {{Frederick Sanger} has {award received} as {Nobel Prize in Chemistry}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q151564 p:P166 ?s . ?s ps:P166 wd:Q44585 . ?s pq:P2121 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick Sanger', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Prize in Chemistry'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick Sanger', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Prize in Chemistry'}}}]

 Q: What is {position held} of {Kanishka} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q312544 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'until', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kanishka', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kanishka', 'p': 'position held', 'o': '$y0'}}]

 Q: Is the observing time available for the Very Large Telescope less than 272.0?
 SPARQL: ASK WHERE { wd:Q265628 wdt:P3891 ?obj filter(?obj < 272.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Very Large Telescope', 'p': 'observing time available', 'o': '?x0', '?x0': '272.0'}

 Q: What is {position held} of {Lady Jane Grey} that is {of} is {Kingdom of England} ?
 SPARQL: SELECT ?obj WHERE { wd:Q162356 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P642 wd:Q179876 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lady Jane Grey', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'England'}}}

 Q: What is {divided into} of {South Holland}, that has {populated places within} is {Streefkerk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q694 wdt:P150 ?answer . ?answer wdt:P1383 wd:Q959585}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Holland', 'p': 'divided into', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'populated places within', 'o': 'Streefkerk'}}

 Q: what is the series ordinal for Rainer Maria Rilke has name as Karl ?
 SPARQL: SELECT ?value WHERE { wd:Q76483 p:P735 ?s . ?s ps:P735 wd:Q15731830 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rainer Maria Rilke', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'name', 'o': 'Karl'}}}

 Q: What is {results in} of {developed by} of {iPod Touch 6} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20670531 wdt:P178 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'results in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'iPod Touch 6', 'p': 'developer', 'o': '$y0'}}

 Q: What is the {academic major} for {field of work} of {Claude Shannon}
 SPARQL:  select distinct ?obj where { wd:Q92760 wdt:P101 ?obj . ?obj wdt:P31 wd:Q4671286 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Claude Shannon', 'p': 'field of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'major'}}

 Q: Tell me the branch of biology that contains the word virology in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28598684 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'virology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of biology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'virology'}}

 Q: Which is the domain of saint or deity of Francis of Assisi?
 SPARQL: select distinct ?answer where { wd:Q676555 wdt:P2925 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Francis of Assisi', 'p': 'domain of saint or deity', 'o': '?x0'}

 Q: Who gave the {titleholder} of {nomination received} of {Jennifer Capriati} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11680 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'titleholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jennifer Capriati', 'p': 'nomination received', 'o': '$y0'}}

 Q: When did noble title of Guy of Lusignan and follows?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q294192 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is {Institution template} of {papers at} of {Religious Society of Friends} ?
 SPARQL: SELECT ?answer WHERE { wd:Q170208 wdt:P485 ?X . ?X wdt:P1612 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Institution template', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Religious Society of Friends', 'p': 'papers at', 'o': '$y0'}}

 Q: What is {seiyu} of {Last Exile}, that has {place of residence} is {St. Petersburg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1052846 wdt:P725 ?answer . ?answer wdt:P551 wd:Q49236}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Last Exile', 'p': 'seiyu', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'residence', 'o': 'St. Petersburg'}}

 Q: Which is replaced by Tamar of Georgia?
 SPARQL: select distinct ?answer where { wd:Q244007 wdt:P1366 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tamar of Georgia', 'p': 'replaced by', 'o': '?x0'}

 Q: Who left the Neymar sports team on 8-3-2017?
 SPARQL: SELECT ?obj WHERE { wd:Q142794 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Neymar', 'p': 'team', 'o': '?x0', 't': '2017'}

 Q: Who is the {discography} for {discography} of {Yo-Yo Ma}
 SPARQL:  select distinct ?obj where { wd:Q234891 wdt:P358 ?obj . ?obj wdt:P31 wd:Q273057 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yo-Yo Ma', 'p': 'discography', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discography'}}

 Q: Which is the Catalan Biographical Dictionary of Women ID for Alicia de Larrocha?
 SPARQL: select distinct ?answer where { wd:Q232255 wdt:P2498 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alicia de Larrocha', 'p': 'Catalan Biographical Dictionary of Women ID', 'o': '?x0'}

 Q: who citrate anion for conjugate base of citric acid?
 SPARQL:  select distinct ?obj where { wd:Q159683 wdt:P4149 ?obj . ?obj wdt:P31 wd:Q55502846 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'citric acid', 'p': 'conjugate base', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'citrate anion'}}

 Q: what is the speed of sound of a nitric oxide at a temperature of 10 degree celcius?
 SPARQL: SELECT ?obj WHERE { wd:Q207843 p:P2075 ?s . ?s ps:P2075 ?obj . ?s pq:P2076 ?x filter(contains(?x,'10.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'speed of sound', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nitric oxide', 'p': 'speed of sound', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'temperature', 'o': '10.0'}}}

 Q: what is the {point in time} for {Jaromír Jágr} has {award received} as {Golden Hockey Stick} ?
 SPARQL: SELECT ?value WHERE { wd:Q295345 p:P166 ?s . ?s ps:P166 wd:Q207219 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jaromír Jágr', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Golden Hockey Stick'}, 't': '?x0'}

 Q: What is {start time} and {end time} of {{Gore Vidal} has {partner} as {Howard Austen}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q167821 p:P451 ?s . ?s ps:P451 wd:Q17309157 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gore Vidal', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Howard Austen'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gore Vidal', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Howard Austen'}}}]

 Q: Give me {Original Public Ivy} that {office held by head of the organisation} {chancellor} and which contains the word {carolina} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20971972 . ?sbj wdt:P2388 wd:Q61061 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'carolina')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Original Public Ivy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'chancellor'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'carolina'}}

 Q: Who was Ruby Dee's spouse when their marriage ended in 2005?
 SPARQL: SELECT ?obj WHERE { wd:Q234360 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ruby Dee', 'p': 'spouse', 'o': '?x0', 't': '2005'}

 Q: Which is located and participated in the conflict of Thomas Blamey?
 SPARQL: SELECT ?answer WHERE { wd:Q952813 wdt:P607 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Blamey', 'p': 'conflict', 'o': '$y0'}}

 Q: What is {season begins} of {takes part} of {Austria Fed Cup team} ?
 SPARQL: SELECT ?answer WHERE { wd:Q301938 wdt:P1344 ?X . ?X wdt:P4794 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'season begins', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Austria Fed Cup team', 'p': 'takes part', 'o': '$y0'}}

 Q: Give me {unit of time} that {measured physical quantity} {duration} and which contains the word {year} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790144 . ?sbj wdt:P111 wd:Q2199864 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'year')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of time', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'duration'}}}

 Q: what is the {statement is subject of} for {Ralph Richardson} has {nominated for} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q381285 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ralph Richardson', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: what is the {determination method} for {Los Ríos Region} has {population} as {380131} ?
 SPARQL: SELECT ?value WHERE { wd:Q2177 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'380131')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Los Rios Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '380131'}}}

 Q: Is it true that the vehicle range of H120 Colibri is less than 459.6?
 SPARQL: ASK WHERE { wd:Q39665 wdt:P2073 ?obj filter(?obj < 459.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'H120 Colibri', 'p': 'vehicle range', 'o': '?x0', '?x0': '459.6'}

 Q: What are the Mahavidya which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1076022 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Mahavidya'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {style of architecture} of {correspondence at} of {Geraldine Page} ?
 SPARQL: SELECT ?answer WHERE { wd:Q228650 wdt:P485 ?X . ?X wdt:P149 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'style of architecture', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geraldine Page', 'p': 'correspondence at', 'o': '$y0'}}

 Q: How many {country} are to/by {Luxembourg} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P17 wd:Q32 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Luxembourg'}

 Q: What is the {country code top-level domain} for {top-level Internet domain} of {European Union}
 SPARQL:  select distinct ?obj where { wd:Q458 wdt:P78 ?obj . ?obj wdt:P31 wd:Q42032 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Union', 'p': 'domain', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country code top-level domain'}}

 Q: Tell me the activity which has social control as fabrication method and contains the word management in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1914636 . ?sbj wdt:P2079 wd:Q623971 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'management')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'activity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'fabrication method', 'o': 'social control'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'management'}}

 Q: What is the received signal type of Gaia?
 SPARQL: select distinct ?answer where { wd:Q767805 wdt:P1194 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gaia', 'p': 'received signal type', 'o': '?x0'}

 Q: How many {significant event} are for {Universe} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1 wdt:P793 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Universe', 'p': 'event', 'o': '?x0'}

 Q: Did {John_Wayne} {partner} {Marlene Dietrich}?
 SPARQL: ASK WHERE { wd:Q40531 wdt:P451 wd:Q4612 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Wayne', 'p': 'partner', 'o': '?x0', '?x0': 'Marlene Dietrich'}]

 Q: Which is the review score for 12 Angry Men?
 SPARQL: select distinct ?answer where { wd:Q2345 wdt:P444 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '12 Angry Men', 'p': 'review score', 'o': '?x0'}

 Q: what is  classical Japanese performing arts practiced by kabuki actor whose  name has the word kabuki in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11615913 . ?sbj wdt:P3095 wd:Q48146261 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'kabuki')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'classical Japanese performing arts', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'kabuki actor'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'kabuki'}}

 Q: what is the {for work} for {Neil Patrick Harris} has {award received} as {Emmy Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q485310 p:P166 ?s . ?s ps:P166 wd:Q123737 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neil Patrick Harris', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Emmy Award'}}}

 Q: What is {member of sports team} of {Michael Jordan} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41421 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Jordan', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Jordan', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Which is the Israel Antiquities Authority ID for Rishon LeZion?
 SPARQL: select distinct ?answer where { wd:Q201051 wdt:P3941 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rishon LeZion', 'p': 'Israel Antiquities Authority ID', 'o': '?x0'}

 Q: What is the {animated series} for {voice actor} of {Phil LaMarr}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q356541 . ?sbj wdt:P31 wd:Q581714 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Phil LaMarr', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated series'}}

 Q: In what year did Bruce Willis win a Primetime Emmy Award for Outstanding Lead Actor in a Drama Series?
 SPARQL: SELECT ?value WHERE { wd:Q2680 p:P166 ?s . ?s ps:P166 wd:Q989439 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bruce Willis', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Primetime Emmy Award for Outstanding Lead Actor in a Drama Series'}, 't': '?x0'}

 Q: what is the {located on terrain feature} for {Honshu} has {coordinates of easternmost point} as {39.533333333333 142.06666666667} ?
 SPARQL: SELECT ?value WHERE { wd:Q13989 p:P1334 ?s . ?s ps:P1334 ?x filter(contains(?x,'39.533333333333 142.06666666667')) . ?s pq:P706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honshu', 'p': 'coordinates of easternmost point', 'o': '$y0'}}

 Q: Which is Models.com person ID for Viola Davis?
 SPARQL: select distinct ?answer where { wd:Q229181 wdt:P2471 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Viola Davis', 'p': 'Models.com person ID', 'o': '?x0'}

 Q: what is the {end time} for {The Daily Show} has {cast member} as {Rachael Harris} ?
 SPARQL: SELECT ?value WHERE { wd:Q824192 p:P161 ?s . ?s ps:P161 wd:Q267400 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Daily Show', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Rachael Harris'}}}

 Q: What is {architecture firm} of {home water} of {Boston Celtics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131371 wdt:P115 ?X . ?X wdt:P84 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'architect', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boston Celtics', 'p': 'home water', 'o': '$y0'}}

 Q: what is the {valid in period} for {Oxford} has {located in time zone} as {Western European Time} ?
 SPARQL: SELECT ?value WHERE { wd:Q34217 p:P421 ?s . ?s ps:P421 wd:Q843589 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oxford', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'Western European Time'}}}

 Q: What is {eponym} of {becquerel}, that has {honorary title} is {Nobel Prize in Physics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q102573 wdt:P138 ?answer . ?answer wdt:P166 wd:Q38104}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'becquerel', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'honorary title', 'o': 'Nobel Prize in Physics'}}

 Q: What is the award received by Amnesty International and the amount of the prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q42970 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amnesty International', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amnesty International', 'p': 'award received', 'o': '$y0'}}]

 Q: What is the characters of the appears in of Stacy Warner ?
 SPARQL: SELECT ?answer WHERE { wd:Q2737645 wdt:P1441 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stacy Warner', 'p': 'appears in', 'o': '$y0'}}

 Q: Which monetary authority on the Singapore dollar has the lowest target interest rate ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6899005 . ?ent wdt:P2661 ?obj . ?ent wdt:P38 wd:Q190951} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'target interest rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monetary authority', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Singapore dollar'}}}

 Q: What is {end time} and {start time} of {{Ruhollah Khomeini} has {position held} as {Supreme Leader of Iran}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q38823 p:P39 ?s . ?s ps:P39 wd:Q332486 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ruhollah Khomeini', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Supreme Leader of Iran'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ruhollah Khomeini', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Supreme Leader of Iran'}}}]

 Q: What is the {discoverer or inventor} and the {named after} of {Titanium} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q716 wdt:P61 ?ans_1 . wd:Q716 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ti', 'p': 'discoverer or inventor', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ti', 'p': 'named after', 'o': '?x1'}]

 Q: What is <water as percent of area> of <Kentucky> ?
 SPARQL: select distinct ?answer where { wd:Q1603 wdt:P2927 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kentucky', 'p': 'water as percent of area', 'o': '?x0'}

 Q: Which Soyuz-T has the largest periapsis?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2637056 . ?ent wdt:P2244 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'periapsis', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Soyuz-T'}}

 Q: Who is the director of photography of Persona?
 SPARQL: select distinct ?answer where { wd:Q695255 wdt:P344 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Persona', 'p': 'director of photography', 'o': '?x0'}

 Q: What is {position held} of {Ahmad ibn Ibrihim al-Ghazi} that is {start time} is {1526-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q335728 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1526')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ahmad ibn Ibrihim al-Ghazi', 'p': 'position held', 'o': '?x0', 't': '1526'}

 Q: What is {educated at} of {Xi Jinping} that is {start time} is {1975-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q15031 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Xi Jinping', 'p': 'educated at', 'o': '?x0', 't': '1975'}

 Q: When is Louis Leakey received award of Hubbard Medal
 SPARQL: SELECT ?value WHERE { wd:Q14837 p:P166 ?s . ?s ps:P166 wd:Q4287207 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Louis Leakey', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Hubbard Medal'}, 't': '?x0'}

 Q: What is {died in} of {John Nevil Maskelyne}, that has {twin cities} is {Buenos Aires} ?
 SPARQL: SELECT ?answer WHERE { wd:Q965961 wdt:P20 ?answer . ?answer wdt:P190 wd:Q1486}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Nevil Maskelyne', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Buenos Aires'}}

 Q: Who is the head of government of Delaware?
 SPARQL: select distinct ?answer where { wd:Q1393 wdt:P6 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Delaware', 'p': 'head of government', 'o': '?x0'}

 Q: Is Gwen Stefani's given name Belinda?
 SPARQL: ASK WHERE { wd:Q483379 wdt:P735 wd:Q1094239 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Gwen Stefani', 'p': 'given name', 'o': '?x0', '?x0': 'Belinda'}]

 Q: what is the {end time} for {Pedro Martinez} has {member of sports team} as {Boston Red Sox} ?
 SPARQL: SELECT ?value WHERE { wd:Q726918 p:P54 ?s . ?s ps:P54 wd:Q213959 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro Martinez', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Boston Red Sox'}}}

 Q: What award did Susan Sarandon receive in the year 1994?
 SPARQL: SELECT ?obj WHERE { wd:Q133050 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Susan Sarandon', 'p': 'award', 'o': '?x0', 't': '1994'}

 Q: what is the {point in time} for {James Prescott Joule} has {award received} as {Albert Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q8962 p:P166 ?s . ?s ps:P166 wd:Q4710826 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'James Prescott Joule', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Albert Medal'}, 't': '?x0'}

 Q: What is {on bay} of {Tsushima Island}, that has {tributary} is {Iwaki River} ?
 SPARQL: SELECT ?answer WHERE { wd:Q52051 wdt:P206 ?answer . ?answer wdt:P974 wd:Q5359180}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tsushima Island', 'p': 'on bay', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Iwaki River'}}

 Q: what is the {start time} for {Lucas Cranach the Elder} has {work location} as {Vienna} ?
 SPARQL: SELECT ?value WHERE { wd:Q191748 p:P937 ?s . ?s ps:P937 wd:Q1741 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lucas Cranach', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'Vienna'}}}

 Q: Did {Prince_George_of_Cambridge} {relative} {Charles, Prince of Wales} and {Pippa Middleton} ?
 SPARQL: ASK WHERE { wd:Q13590412 wdt:P1038 wd:Q43274 . wd:Q13590412 wdt:P1038 wd:Q232465 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Prince George of Cambridge', 'p': 'relative', 'o': '?x0', '?x0': 'Charles, Prince of Wales'}, {'h': 'IS', 'v': '?x1', 's': 'Prince George of Cambridge', 'p': 'relative', 'o': '?x1', '?x1': 'Pippa Middleton'}]

 Q: What is at the extreme point deepest of Guatemala, whose tributary is Riviere de Cavaillon?
 SPARQL: SELECT ?answer WHERE { wd:Q774 wdt:P1589 ?answer . ?answer wdt:P974 wd:Q7338932}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guatemala', 'p': 'extreme point deepest', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Riviere de Cavaillon'}}

 Q: What is Sanskrit's writing system?
 SPARQL: select distinct ?answer where { wd:Q11059 wdt:P282 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sanskrit', 'p': 'writing system', 'o': '?x0'}

 Q: What is {year established} of {developed by} of {Grand Theft Auto} ?
 SPARQL: SELECT ?answer WHERE { wd:Q132730 wdt:P178 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grand Theft Auto', 'p': 'developed by', 'o': '$y0'}}

 Q: What is {performer} of {Samus Aran} that is {language of work or name} is {Japanese} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12400 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P407 wd:Q5287 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'performer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Samus Aran', 'p': 'performer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'Japanese'}}}

 Q: What is {position held} of {Arthur Henderson} that is {replaces} is {Austen Chamberlain} ?
 SPARQL: SELECT ?obj WHERE { wd:Q208665 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q188999 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Henderson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Austen Chamberlain'}}}

 Q: What is {cat films shot} of {narrative set in} of {One Flew Over the Cuckoo's Nest} ?
 SPARQL: SELECT ?answer WHERE { wd:Q171669 wdt:P840 ?X . ?X wdt:P1740 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cat films shot', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "One Flew Over the Cuckoo's Nest", 'p': 'narrative set in', 'o': '$y0'}}

 Q: Which is the soft drink, manufactured by the Coca Cola Company?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q3295867 . ?sbj wdt:P31 wd:Q147538 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufactured by', 'o': 'Coca Cola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'soft drink'}}

 Q: Which is the shooting handedness for Mario Lemieux?
 SPARQL: select distinct ?answer where { wd:Q316249 wdt:P423 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mario Lemieux', 'p': 'shooting handedness', 'o': '?x0'}

 Q: Who has the daughter and son of Aglaé Auguié ?
 SPARQL: SELECT ?answer WHERE { wd:Q2826888 wdt:P40 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aglaé Auguié', 'p': 'son', 'o': '$y0'}}

 Q: What's the capital of Ōtsu?
 SPARQL: select distinct ?answer where { ?answer wdt:P36 wd:Q202907}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Ōtsu'}

 Q: Which is a Index Fungorum ID of Neurospora crassa?
 SPARQL: select distinct ?answer where { wd:Q133459 wdt:P1391 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Neurospora crassa', 'p': 'Index Fungorum ID', 'o': '?x0'}

 Q: Was Srinivasa Ramanujan's field of work number theory?
 SPARQL: ASK WHERE { wd:Q83163 wdt:P101 wd:Q12479 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Srinivasa Ramanujan', 'p': 'field of work', 'o': '?x0', '?x0': 'number theory'}]

 Q: What is the {position played on team / speciality} and the {participant of} of {Isiah_Thomas} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q298512 wdt:P413 ?ans_1 . wd:Q298512 wdt:P1344 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Isiah Thomas', 'p': 'position played on team / speciality', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Isiah Thomas', 'p': 'participant of', 'o': '?x1'}]

 Q: What is {has immediate outcome} of {originated due to} of {Silvertown explosion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3960716 wdt:P828 ?X . ?X wdt:P1536 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'immediate outcome', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Silvertown explosion', 'p': 'due to', 'o': '$y0'}}

 Q: What are the chemical phenomenon which start with the letter corrosion
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3382117 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'corrosion')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical phenomenon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'corrosion'}}

 Q: What's the currency for the Ryukyu Kingdom?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q28025 wdt:P38 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ryukyu Kingdom', 'p': 'currency', 'o': '?x0'}

 Q: what is the {ticker symbol} for {NEC} has {stock exchange} as {Nagoya Stock Exchange} ?
 SPARQL: SELECT ?value WHERE { wd:Q219203 p:P414 ?s . ?s ps:P414 wd:Q1188840 . ?s pq:P249 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ticker symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NEC', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'stock exchange', 'o': 'Nagoya Stock Exchange'}}}

 Q: Did {Lionel_Richie} {occupation} {singer} and {Alexander Osminin} ?
 SPARQL: ASK WHERE { wd:Q26695 wdt:P106 wd:Q177220 . wd:Q26695 wdt:P106 wd:Q620773 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lionel Richie', 'p': 'occupation', 'o': '?x0', '?x0': 'singer'}, {'h': 'IS', 'v': '?x1', 's': 'Lionel Richie', 'p': 'occupation', 'o': '?x1', '?x1': 'Alexander Osminin'}]

 Q: Was Rafael Nadal nominated for Best Male Athlete ESPY Award?
 SPARQL: ASK WHERE { wd:Q10132 wdt:P1411 wd:Q4896724 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Rafael Nadal', 'p': 'nominated for', 'o': '?x0', '?x0': 'Best Male Athlete ESPY Award'}]

 Q: What is the {legal form} and the {located in the administrative territorial entity} of {Intel} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q248 wdt:P1454 ?ans_1 . wd:Q248 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Intel', 'p': 'legal form', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Intel', 'p': 'in', 'o': '?x1'}]

 Q: When did John Wooden receive the Sports Illustrated Sportsperson of the Year award?
 SPARQL: SELECT ?value WHERE { wd:Q551032 p:P166 ?s . ?s ps:P166 wd:Q1653207 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'John Wooden', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Sports Illustrated Sportsperson of the Year'}, 't': '?x0'}

 Q: What is {place of burial} of {František Kupka} that is {catalog code} is {22696} ?
 SPARQL: SELECT ?obj WHERE { wd:Q167414 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P528 ?x filter(contains(?x,'22696')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of burial', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frantisek Kupka', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'catalog code', 'o': '22696'}}}

 Q: Which is the IUCN conservation status for Equus ferus przewalskii?
 SPARQL: select distinct ?answer where { wd:Q22712 wdt:P141 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Equus ferus przewalskii', 'p': 'IUCN conservation status', 'o': '?x0'}

 Q: What is {birth location} of {Arnold Rothstein}, that has {head of national government} is {Ardolph L. Kline} ?
 SPARQL: SELECT ?answer WHERE { wd:Q696052 wdt:P19 ?answer . ?answer wdt:P6 wd:Q4121154}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arnold Rothstein', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'head of national government', 'o': 'Ardolph L. Kline'}}

 Q: What is the {principal organ of the United Nations} for {office held by head of the organisation} of {United Nations Secretary-General}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2388 wd:Q81066 . ?sbj wdt:P31 wd:Q15899789 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'United Nations Secretary-General', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'principal organ of the United Nations'}}

 Q: What is the number of manufacturers held by Daimler AG?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P176 wd:Q27530 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Daimler AG'}

 Q: What is the {data set} for {currency} of {renminbi}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q39099 . ?sbj wdt:P31 wd:Q1172284 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'renminbi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'data set'}}

 Q: what is the {start time} for {Rennes} has {head of government} as {Henri Fréville} ?
 SPARQL: SELECT ?value WHERE { wd:Q647 p:P6 ?s . ?s ps:P6 wd:Q3131134 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rennes', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Henri Fréville'}}}

 Q: What is the {architectural structure} for {residence} of {Walter Scott}
 SPARQL:  select distinct ?obj where { wd:Q79025 wdt:P551 ?obj . ?obj wdt:P31 wd:Q811979 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Walter Scott', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'architectural structure'}}

 Q: Who is the regulatory body of the official language of the Republic of Venice?
 SPARQL: SELECT ?answer WHERE { wd:Q4948 wdt:P37 ?X . ?X wdt:P1018 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'regulatory body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Republic of Venice', 'p': 'official language', 'o': '$y0'}}

 Q: Which is the taxonomic type for Papilionidae?
 SPARQL: select distinct ?answer where { wd:Q59905 wdt:P427 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Papilionidae', 'p': 'taxonomic type', 'o': '?x0'}

 Q: What is {start time} and {end time} of {{Kim Novak} has {spouse} as {Richard Johnson}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q212879 p:P26 ?s . ?s ps:P26 wd:Q166422 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kim Novak', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Richard Johnson'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kim Novak', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Richard Johnson'}}}]

 Q: Which play in the Rugby League World Cup has made use of the rugby league ball?
 SPARQL: SELECT ?answer WHERE { wd:Q1639293 wdt:P641 ?answer . ?answer wdt:P2283 wd:Q53374579}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rugby League World Cup', 'p': 'play', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'made use of', 'o': 'rugby league ball'}}

 Q: Chris Froome has how many points classifications?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3494 wd:Q319591 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'points classification', 'o': 'Chris Froome'}

 Q: Who is the {human} for {chief executive officer} of {Ford Motor Company}
 SPARQL:  select distinct ?obj where { wd:Q44294 wdt:P169 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ford Motor Company', 'p': 'chief executive officer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is character role of Turandot ?
 SPARQL: select distinct ?answer where { ?answer wdt:P453 wd:Q207990}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'character role', 'o': 'Turandot'}

 Q: What is the {abjad} for {writing system} of {Hebrew}
 SPARQL:  select distinct ?obj where { wd:Q9288 wdt:P282 ?obj . ?obj wdt:P31 wd:Q185087 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hebrew', 'p': 'writing system', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abjad'}}

 Q: What is {educated at} of {Wilhelm Röntgen} that is {start time} is {1872-4-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q35149 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1872')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wilhelm Röntgen', 'p': 'education', 'o': '?x0', 't': '1872'}

 Q: What is the AFI Catalog of Feature Films ID of the movie Raiders of the Lost Ark?
 SPARQL: select distinct ?answer where { wd:Q174284 wdt:P3593 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Raiders of the Lost Ark', 'p': 'AFI Catalog of Feature Films ID', 'o': '?x0'}

 Q: What is {orbits} of {Dione}, that has {has moon} is {Mimas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15040 wdt:P397 ?answer . ?answer wdt:P398 wd:Q15034}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dione', 'p': 'orbits', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has moon', 'o': 'Mimas'}}

 Q: Tell me bell tower whose name has the word tower in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200334 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tower')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bell tower'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tower'}}

 Q: What island is farthest from the river mouth?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q23442 . ?ent wdt:P2148 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'distance from river mouth', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island'}}

 Q: What award did Bob Cousy receive in 1961?
 SPARQL: SELECT ?obj WHERE { wd:Q312643 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bob Cousy', 'p': 'award', 'o': '?x0', 't': '1961'}

 Q: what is the {coordinate location} for {National Aeronautics and Space Administration} has {headquarters location} as {Washington, D.C.} ?
 SPARQL: SELECT ?value WHERE { wd:Q23548 p:P159 ?s . ?s ps:P159 wd:Q61 . ?s pq:P625 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'National Aeronautics and Space Administration', 'p': 'headquarters location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'headquarters location', 'o': 'Washington, D.C.'}}}

 Q: What genre is the work of Sylvain Guyot?
 SPARQL: SELECT ?answer WHERE { wd:Q3665127 wdt:P800 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sylvain Guyot', 'p': 'work', 'o': '$y0'}}

 Q: What are the international parliament which start with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6054776 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international parliament'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Which is the periodical literature that has the edition of Rolling Stone?
 SPARQL:  select distinct ?obj where { wd:Q33511 wdt:P747 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rolling Stone', 'p': 'edition', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: What is the {Wikimedia list article} for {list of monuments} of {Paris}
 SPARQL:  select distinct ?obj where { wd:Q90 wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paris', 'p': 'list of monuments', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'list'}}

 Q: How many parent peaks does Ben Nevis have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3137 wd:Q104674 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'parent peak', 'o': 'Ben Nevis'}

 Q: What is {chief executive officer} of {BNP Paribas} that is {start time} is {2011-12-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q499707 p:P169 ?s . ?s ps:P169 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'BNP Paribas', 'p': 'chief executive officer', 'o': '?x0', 't': '2011'}

 Q: How many {solved by} are to/by {Leonhard Euler} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1136 wd:Q7604 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'solved by', 'o': 'Leonhard Euler'}

 Q: Is Lucille Ball a child of Desi Arnaz, Jr.?
 SPARQL: ASK WHERE { wd:Q209662 wdt:P40 wd:Q324882 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lucille Ball', 'p': 'child', 'o': '?x0', '?x0': 'Desi Arnaz, Jr.'}]

 Q: Who gave the  {has states} of {deathplace} of {Pyotr Zakharov-Chechenets} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2366448 wdt:P20 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has states', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pyotr Zakharov-Chechenets', 'p': 'deathplace', 'o': '$y0'}}

 Q: Who is the  {Wikidata qualifier} for {subject item of this property} of {syntax}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1629 wd:Q37437 . ?sbj wdt:P31 wd:Q15720608 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'item', 'o': 'syntax', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata qualifier'}}

 Q: What is {diplomatic relation} of {citizenship} of {Ajay Devgan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q146929 wdt:P27 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ajay Devgan', 'p': 'citizenship', 'o': '$y0'}}

 Q: What is the {federal state} for {country} of {Watergate scandal}
 SPARQL:  select distinct ?obj where { wd:Q42761 wdt:P17 ?obj . ?obj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Watergate scandal', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What is the {archaeological site} for {place of death} of {Akhenaten}
 SPARQL:  select distinct ?obj where { wd:Q81794 wdt:P20 ?obj . ?obj wdt:P31 wd:Q839954 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Akhenaten', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site'}}

 Q: What is {number of points/goals/set scored} and {number of matches played} of {{Malcolm Allison} has {member of sports team} as {Charlton Athletic F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q1383862 p:P54 ?s . ?s ps:P54 wd:Q19462 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Allison', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Charlton Athletic F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Allison', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Charlton Athletic F.C.'}}}]

 Q: what is the {point in time} for {Burt Bacharach} has {award received} as {Grammy Trustees Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q212762 p:P166 ?s . ?s ps:P166 wd:Q5593916 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Burt Bacharach', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grammy Trustees Award'}, 't': '?x0'}

 Q: What is {population} of {Valladolid} that is {determination method} is {register office} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8356 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valladolid', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: What is {partner} of {Mel Gibson} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q42229 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mel Gibson', 'p': 'partner', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'partner', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mel Gibson', 'p': 'partner', 'o': '$y0'}}]

 Q: What is {co-founded by} of {label} of {Scotty McCreery} ?
 SPARQL: SELECT ?answer WHERE { wd:Q255969 wdt:P264 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Scotty McCreery', 'p': 'label', 'o': '$y0'}}

 Q: Tell me the male organ that has lymphatic drainage of the Lumbar lymph nodes and contains the word testicle in it's name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25553355 . ?sbj wdt:P2288 wd:Q1662950 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'testicle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'male organ', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'lymphatic drainage', 'o': 'Lumbar lymph nodes'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'testicle'}}

 Q: Is 275-9-0 the end time for the position held by Aurelian?
 SPARQL: SELECT ?obj WHERE { wd:Q46780 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(?x,'275-9-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aurelian', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end time', 'o': '275-9-0'}}}

 Q: What is the {sovereign state} for {narrative location} of {Twenty Thousand Leagues Under the Sea}
 SPARQL:  select distinct ?obj where { wd:Q183565 wdt:P840 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Twenty Thousand Leagues Under the Sea', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is Newton's law of cooling named after, that was born in Parnu?
 SPARQL: SELECT ?answer WHERE { wd:Q2902868 wdt:P138 ?answer . ?answer wdt:P19 wd:Q102365}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Newton's law of cooling", 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Parnu'}}

 Q: What is {Christian name} of {Edmund Gwenn}, that has {disputed equivalence} is {Hans} ?
 SPARQL: SELECT ?answer WHERE { wd:Q344750 wdt:P735 ?answer . ?answer wdt:P460 wd:Q632842}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Edmund Gwenn', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'disputed equivalence', 'o': 'Hans'}}

 Q: How many different boyar social classifications are there?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3716 wd:Q203563 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'social classification', 'o': 'boyar'}

 Q: what is the {followed by} for {The Handmaid's Tale} has {award received} as {Arthur C. Clarke Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q1541914 p:P166 ?s . ?s ps:P166 wd:Q708830 . ?s pq:P156 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Handmaid's Tale", 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Arthur C. Clarke Award'}}}

 Q: What are the political philosophy which start with the letter whiggism
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179805 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'whiggism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political philosophy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'whiggism'}}

 Q: What is the birth place of Raffaele Calace, whose patron saint is Januarius?
 SPARQL: SELECT ?answer WHERE { wd:Q1344676 wdt:P19 ?answer . ?answer wdt:P417 wd:Q315312}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Raffaele Calace', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Januarius'}}

 Q: Does the total number of penalty minutes in Gary Dineen's career equal 0.0?
 SPARQL: ASK WHERE { wd:Q256419 wdt:P6546 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Gary Dineen', 'p': 'penalty minutes in career', 'o': '?x0', '?x0': '0.0'}

 Q: What is the {moon of Jupiter} for {child astronomical body} of {Jupiter}
 SPARQL:  select distinct ?obj where { wd:Q319 wdt:P398 ?obj . ?obj wdt:P31 wd:Q61702557 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jupiter', 'p': 'child astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'moon of Jupiter'}}

 Q: What is {nephew} of {sister or brother} of {Sanada Nobumasa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11583366 wdt:P3373 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nephew', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sanada Nobumasa', 'p': 'sister', 'o': '$y0'}}

 Q: How many presenters are held in the {Adriano Celentano} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P371 wd:Q199943 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'Adriano Celentano'}

 Q: What is {has administrative divisions} of {neighborhood} of {Eastern Front} ?
 SPARQL: SELECT ?answer WHERE { wd:Q154573 wdt:P276 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has administrative divisions', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eastern Front', 'p': 'location', 'o': '$y0'}}

 Q: What are the game of skill  which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1368898 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'game of skill'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {used language} of {Latin literature}, that has {cases} is {ablative case} ?
 SPARQL: SELECT ?answer WHERE { wd:Q184890 wdt:P407 ?answer . ?answer wdt:P2989 wd:Q156986}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Latin literature', 'p': 'used language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'cases', 'o': 'ablative case'}}

 Q: Is the shear modulus of polyethylene equal to 93.6?
 SPARQL: ASK WHERE { wd:Q143429 wdt:P5673 ?obj filter(?obj = 93.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'polyethylene', 'p': 'shear modulus', 'o': '?x0', '?x0': '93.6'}

 Q: Which is the approximation algorithm of pi?
 SPARQL: select distinct ?answer where { wd:Q167 wdt:P1171 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pi', 'p': 'approximation algorithm', 'o': '?x0'}

 Q: what is the {for work} for {Hayley Williams} has {award received} as {Grammy Award for Best Rock Song} ?
 SPARQL: SELECT ?value WHERE { wd:Q201562 p:P166 ?s . ?s ps:P166 wd:Q282636 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hayley Williams', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best Rock Song'}}}

 Q: Who is {chairperson} and {member of} {Popular Unity} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21957427 wdt:P463 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chairperson', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Popular Unity', 'p': 'member of', 'o': '$y0'}}

 Q: What's the population of Yokohama in 2018?
 SPARQL: SELECT ?obj WHERE { wd:Q38283 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yokohama', 'p': 'population', 'o': '?x0', 't': '2018'}

 Q: Tell me {city of India} which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58339717 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of India'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Tell me about cola for product or material produced of The Coca-Cola Company?
 SPARQL:  select distinct ?obj where { wd:Q3295867 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q134041 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Coca-Cola Company', 'p': 'product or material produced', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cola'}}

 Q: What is the {city/town} for {currency} of {Russian ruble}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q41044 . ?sbj wdt:P31 wd:Q7930989 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Russian ruble', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city/town'}}

 Q: what is the {end time} for {Frank Peters Jr.} has {employer} as {KWTO (AM)} ?
 SPARQL: SELECT ?value WHERE { wd:Q19839467 p:P108 ?s . ?s ps:P108 wd:Q15231856 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Peters Jr.', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'KWTO'}}}

 Q: What is the {arch bridge} for {designed by} of {Isambard Kingdom Brunel}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q207380 . ?sbj wdt:P31 wd:Q158438 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'arch bridge'}}

 Q: What is the destination point of Franz Josef Land ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1444 wd:Q185018}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'destination point', 'o': 'Franz Josef Land'}

 Q: What UNICEF was awarded in the year 1957?
 SPARQL: SELECT ?obj WHERE { wd:Q740308 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1957')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'UNICEF', 'p': 'award', 'o': '?x0', 't': '1957'}

 Q: What are the dog type which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q38672 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {human} for {sibling} of {Paul McCartney}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3373 wd:Q2599 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Paul McCartney', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is after a work by Stanisława Przybyszewska?
 SPARQL: select distinct ?answer where { ?answer wdt:P1877 wd:Q3067991}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'after a work by', 'o': 'Stanisława Przybyszewska'}

 Q: What petroleum product has the lowest consumption rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2424752 . ?ent wdt:P2292 ?obj . ?ent wdt:P910 wd:Q6572327} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'consumption rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'product', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': "topic's main category", 'o': 'Category:Petroleum'}}}

 Q: Which is the category for employees of the organization of the National Autonomous University of Mexico?
 SPARQL: select distinct ?answer where { wd:Q222738 wdt:P4195 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'National Autonomous University of Mexico', 'p': 'category for employees of the organization', 'o': '?x0'}

 Q: what is the {replaces} for {Albert Gallatin} has {position held} as {United States senator} ?
 SPARQL: SELECT ?value WHERE { wd:Q500046 p:P39 ?s . ?s ps:P39 wd:Q13217683 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Albert Gallatin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States senator'}}}

 Q: "Where is {work location} of {William Beveridge}, that has {PIN Code} is {SW3 6RS} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q335049 wdt:P937 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'SW3 6RS'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Beveridge', 'p': 'work location', 'o': '?x0'}

 Q: Did the brother of Frederick IV, Duke of Austria have any children?
 SPARQL: SELECT ?answer WHERE { wd:Q550692 wdt:P3373 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick IV, Duke of Austria', 'p': 'bro', 'o': '$y0'}}

 Q: What cellular component has the word "vesicle" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5058355 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vesicle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cellular component'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vesicle'}}

 Q: What Academy Awards was Ron Howard nominated for?
 SPARQL:  select distinct ?obj where { wd:Q103646 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q19020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ron Howard', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Academy Awards'}}

 Q: Did {Phil_Hartman} {educated at} {Santa Monica College} and {Manual Arts High School} ?
 SPARQL: ASK WHERE { wd:Q366834 wdt:P69 wd:Q1033692 . wd:Q366834 wdt:P69 wd:Q6752299 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Phil Hartman', 'p': 'educated at', 'o': '?x0', '?x0': 'Santa Monica College'}, {'h': 'IS', 'v': '?x1', 's': 'Phil Hartman', 'p': 'educated at', 'o': '?x1', '?x1': 'Manual Arts High School'}]

 Q: When was Nicholas I of Russia awarded the Order of St. Alexander Nevsky?
 SPARQL: SELECT ?value WHERE { wd:Q130734 p:P166 ?s . ?s ps:P166 wd:Q10514065 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nicholas I of Russia', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of St. Alexander Nevsky'}, 't': '?x0'}

 Q: Who is ideology of member of party of Michel Pouzol ?
 SPARQL: SELECT ?answer WHERE { wd:Q3310625 wdt:P102 ?X . ?X wdt:P1142 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ideology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michel Pouzol', 'p': 'party', 'o': '$y0'}}

 Q: Was the dissertation submitted to TU Dresden?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4101 wd:Q158158 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'dissertation submitted to', 'o': 'TU Dresden'}

 Q: What is {award received} of {George Orwell} that is {for work} is {Animal Farm} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3335 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q1396889 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Orwell', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Animal Farm'}}}

 Q: What was Eyvind Johnson nominated for in 1963?
 SPARQL: SELECT ?obj WHERE { wd:Q131326 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1963')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eyvind Johnson', 'p': 'nominated for', 'o': '?x0', 't': '1963'}

 Q: what is the {point in time} for {Charles Mingus Jr.} has {award received} as {Grammy Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q107432 p:P166 ?s . ?s ps:P166 wd:Q81180 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Charles Mingus', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grammy Hall of Fame'}, 't': '?x0'}

 Q: For what Cyril Ramaphosa was in position held in the year 2018?
 SPARQL: SELECT ?obj WHERE { wd:Q1148669 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cyril Ramaphosa', 'p': 'position held', 'o': '?x0', 't': '2018'}

 Q: Who was stepparent of Emperor Wu of Liu Song?
 SPARQL: select distinct ?answer where { wd:Q49699 wdt:P3448 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Emperor Wu of Liu Song', 'p': 'stepparent', 'o': '?x0'}

 Q: Is the suicide rate of Nigeria more than 7.6?
 SPARQL: ASK WHERE { wd:Q1033 wdt:P3864 ?obj filter(?obj > 7.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Nigeria', 'p': 'suicide rate', 'o': '?x0', '?x0': '7.6'}

 Q: What is the population of Timisoara that is determined by the questionnaire?
 SPARQL: SELECT ?obj WHERE { wd:Q83404 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q747810 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Timisoara', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determined by', 'o': 'questionnaire'}}}

 Q: What is the {human} with the {MIN(century breaks)} whose {country for sport} is {Scotland}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P4912 ?obj . ?ent wdt:P1532 wd:Q22} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'century breaks', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country for sport', 'o': 'Scotland'}}}

 Q: What is {publisher} and {publication date} of {{Christopher Hitchens} has {notable work} as {Mortality}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 wd:Q6914395 . ?s pq:P123 ?value1 . ?s pq:P577 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Mortality'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publication date', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Mortality'}}}]

 Q: Who is the {human} for {composer} of {My Fair Lady}
 SPARQL:  select distinct ?obj where { wd:Q591943 wdt:P86 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'My Fair Lady', 'p': 'composer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {for work} for {Francis Ford Coppola} has {nominated for} as {Academy Award for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q56094 p:P1411 ?s . ?s ps:P1411 wd:Q103360 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Francis Ford Coppola', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Director'}}}

 Q: Was Mohenjo-daro discovered by John Marshall and Rakhaldas Bandyopadhyay?
 SPARQL: ASK WHERE { wd:Q5725 wdt:P61 wd:Q1376456 . wd:Q5725 wdt:P61 wd:Q7286651 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mohenjo-daro', 'p': 'discovered by', 'o': '?x0', '?x0': 'John Marshall'}, {'h': 'IS', 'v': '?x1', 's': 'Mohenjo-daro', 'p': 'discovered by', 'o': '?x1', '?x1': 'Rakhaldas Bandyopadhyay'}]

 Q: What are the cryptid which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q772636 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cryptid'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is <MNCARS artist ID> of <Lee Miller> ?
 SPARQL: select distinct ?answer where { wd:Q265131 wdt:P4439 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lee Miller', 'p': 'MNCARS artist ID', 'o': '?x0'}

 Q: What {type of music} is {songwriter} {Princess Mononoke} ?
 SPARQL: SELECT ?answer WHERE { wd:Q186572 wdt:P86 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Princess Mononoke', 'p': 'songwriter', 'o': '$y0'}}

 Q: What is the {isotope of silver} with the {MAX(neutron number)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1373385 . ?ent wdt:P1148 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'neutron number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of silver'}}

 Q: Is the takeoff roll on the Airbus A400M less than 752?
 SPARQL: ASK WHERE { wd:Q6496 wdt:P2430 ?obj filter(?obj < 752.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Airbus A400M', 'p': 'takeoff roll', 'o': '?x0', '?x0': '752.0'}

 Q: Which is the consumption rate per capital of petroleum?
 SPARQL: select distinct ?answer where { wd:Q22656 wdt:P2662 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'petroleum', 'p': 'consumption rate per capita', 'o': '?x0'}

 Q: What's the first human that starts with the letter "p"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4349921 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'first human'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Which is Australian Statistical Geography 2011 ID for Hobart?
 SPARQL: select distinct ?answer where { wd:Q40191 wdt:P4014 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hobart', 'p': 'Australian Statistical Geography 2011 ID', 'o': '?x0'}

 Q: What is the {Irritant} with the {MAX(enthalpy of vaporization)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6073871 . ?ent wdt:P2116 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'enthalpy of vaporization', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Irritant'}}

 Q: Did {Twenty Years After} {characters} {Charles I of England} and {Louis XIII of France} ?
 SPARQL: ASK WHERE { wd:Q1639633 wdt:P674 wd:Q81506 . wd:Q1639633 wdt:P674 wd:Q737533 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Twenty Years After', 'p': 'characters', 'o': '?x0', '?x0': 'Charles I of England'}, {'h': 'IS', 'v': '?x1', 's': 'Twenty Years After', 'p': 'characters', 'o': '?x1', '?x1': 'Louis XIII of France'}]

 Q: What is {category of associated people} of {civilisation} of {Hadrian's Wall} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57357 wdt:P2596 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Hadrian's Wall", 'p': 'civilisation', 'o': '$y0'}}

 Q: Who is the spouse of Erich Honecker in the series ordinal 3?
 SPARQL: SELECT ?obj WHERE { wd:Q2607 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1545 ?x filter(contains(?x,'3')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'spouse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erich Honecker', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '3'}}}

 Q: what is the {for work} for {Nine Inch Nails} has {nominated for} as {Grammy Award for Best Alternative Music Album} ?
 SPARQL: SELECT ?value WHERE { wd:Q11647 p:P1411 ?s . ?s ps:P1411 wd:Q1542129 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nine Inch Nails', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Grammy Award for Best Alternative Music Album'}}}

 Q: Tell me which eau de vie contains the word williamine in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2166541 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'williamine')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'eau de vie'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'williamine'}}

 Q: Which is the satellite state that has the motto Workers of the world, unite! and contains the word democratic in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q325261 . ?sbj wdt:P1546 wd:Q877781 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'democratic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'satellite state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'motto', 'o': 'Workers of the world, unite!'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'democratic'}}

 Q: Was Stephen King born in Portland?
 SPARQL: ASK WHERE { wd:Q39829 wdt:P19 wd:Q49201 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Stephen King', 'p': 'born in', 'o': '?x0', '?x0': 'Portland'}]

 Q: What is {has boroughs} of {death place} of {James, son of Alphaeus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44047 wdt:P20 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has boroughs', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James, son of Alphaeus', 'p': 'death place', 'o': '$y0'}}

 Q: What award did Olafur Eliasson receive in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q365691 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Olafur Eliasson', 'p': 'award', 'o': '?x0', 't': '2014'}

 Q: What is angular diameter for  Sun ?
 SPARQL: select distinct ?answer where { wd:Q525 wdt:P5348 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sun', 'p': 'angular diameter', 'o': '?x0'}

 Q: Tell me archaeological site whose name has the word tripolis in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q839954 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tripolis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tripolis'}}

 Q: How many {has facet polytope} are to/by {rectangle} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1312 wd:Q209 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'has facet polytope', 'o': 'rectangle'}

 Q: What is the formation of Zero Mostel with subsidiary company in the United States Army Human Resources Command?
 SPARQL: SELECT ?answer WHERE { wd:Q191952 wdt:P241 ?answer . ?answer wdt:P355 wd:Q7889484}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zero Mostel', 'p': 'formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'United States Army Human Resources Command'}}

 Q: In the Diocese of Lapua, which church is the smallest in capacity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16970 . ?ent wdt:P1083 ?obj . ?ent wdt:P708 wd:Q871032} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diocese', 'o': 'Diocese of Lapua'}}}

 Q: What is a phase change that starts with the letter s.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185357 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phase change'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: How many demonyms are there for Africa?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q15 wdt:P1549 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Africa', 'p': 'demonym', 'o': '?x0'}

 Q: Who was the spouse of Ilona Staller at the beginning of 1991?
 SPARQL: SELECT ?obj WHERE { wd:Q49941 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ilona Staller', 'p': 'spouse', 'o': '?x0', 't': '1991'}

 Q: What is opposite of reality ?
 SPARQL: select distinct ?answer where { ?answer wdt:P461 wd:Q9510}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'reality'}

 Q: Give me {decimal classification} that {has edition} {DDC 23} and which contains the word {classification} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1207369 . ?sbj wdt:P747 wd:Q15222117 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'classification')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'decimal classification', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'DDC 23'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'classification'}}

 Q: In what field of work was Theodosius Dobzhansky awarded the National Medal of Science?
 SPARQL: SELECT ?value WHERE { wd:Q246731 p:P166 ?s . ?s ps:P166 wd:Q737051 . ?s pq:P101 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodosius Dobzhansky', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'National Medal of Science'}}}

 Q: What is {has effect} and {killed by} of {{John F. Kennedy} has {cause of death} as {ballistic trauma}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q9696 p:P509 ?s . ?s ps:P509 wd:Q2140674 . ?s pq:P1542 ?value1 . ?s pq:P157 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has effect', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'JFK', 'p': 'cause of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cause of death', 'o': 'shot'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'killed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'JFK', 'p': 'cause of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cause of death', 'o': 'shot'}}}]

 Q: what is the {start time} for {Franz Liszt} has {partner} as {Marie d'Agoult} ?
 SPARQL: SELECT ?value WHERE { wd:Q41309 p:P451 ?s . ?s ps:P451 wd:Q253453 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Liszt', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': "Marie d'Agoult"}}}

 Q: Which is the Canadian Olympic Committee athlete ID of Scott Moir?
 SPARQL: select distinct ?answer where { wd:Q440940 wdt:P4054 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Scott Moir', 'p': 'Canadian Olympic Committee athlete ID', 'o': '?x0'}

 Q: What is GitHub username of Google ?
 SPARQL: select distinct ?answer where { wd:Q95 wdt:P2037 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Google', 'p': 'GitHub username', 'o': '?x0'}

 Q: Did {John_Candy} {award received} {Canada's Walk of Fame} and {Canadian Comedy Awards} ?
 SPARQL: ASK WHERE { wd:Q218532 wdt:P166 wd:Q857933 . wd:Q218532 wdt:P166 wd:Q5029887 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Candy', 'p': 'award', 'o': '?x0', '?x0': "Canada's Walk of Fame"}, {'h': 'IS', 'v': '?x1', 's': 'John Candy', 'p': 'award', 'o': '?x1', '?x1': 'Canadian Comedy Awards'}]

 Q: Are the total assets of the Zlin Aircraft equal to 291600000?
 SPARQL: ASK WHERE { wd:Q207278 wdt:P2403 ?obj filter(?obj = 291600000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Zlin Aircraft', 'p': 'total assets', 'o': '?x0', '?x0': '291600000'}

 Q: How many number of wins in this tournament?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q500834 . ?ent wdt:P1355 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of wins', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tournament'}}

 Q: What is the {animated feature film} for {narrator} of {David Spade}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2438 wd:Q298658 . ?sbj wdt:P31 wd:Q29168811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'narrator', 'o': 'David Spade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated feature film'}}

 Q: Give me {historical language} that {has grammatical gender} {feminine} and which contains the word {ancient} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2315359 . ?sbj wdt:P5109 wd:Q1775415 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ancient')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical gender', 'o': 'feminine'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ancient'}}

 Q: What is {known for} of {writer} of {Shakespeare's sonnets} ?
 SPARQL: SELECT ?answer WHERE { wd:Q662550 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'known for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Shakespeare's sonnets", 'p': 'writer', 'o': '$y0'}}

 Q: Which are the afflicts that has a result of ethylene glycol?
 SPARQL: SELECT ?answer WHERE { wd:Q194207 wdt:P1542 ?X . ?X wdt:P689 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afflicts', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ethylene glycol', 'p': 'result', 'o': '$y0'}}

 Q: what is the {valid in period} for {Newcastle upon Tyne} has {located in time zone} as {UTC+01:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q1425428 p:P421 ?s . ?s ps:P421 wd:Q6655 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Newcastle upon Tyne', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+01:00'}}}

 Q: What is the {branch of chemistry} for {studies} of {peat}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q184624 . ?sbj wdt:P31 wd:Q11790203 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'peat', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of chemistry'}}

 Q: How many {court} are to/by {Supreme Court of the United Kingdom} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4884 wd:Q1122261 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'court', 'o': 'Supreme Court of the United Kingdom'}

 Q: What is the {filmography} for {named after} of {Denzel Washington}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q42101 . ?sbj wdt:P31 wd:Q1371849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Denzel Washington', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'filmography'}}

 Q: What award did Paul Dirac receive and how much was the prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q47480 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Dirac', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Dirac', 'p': 'award', 'o': '$y0'}}]

 Q: What is tourist office for  office ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2872 wd:Q182060}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'tourist office', 'o': 'office'}

 Q: Tell me which train service that is operated by Compagnie Internationale des Wagons-Lits and that contains the word express in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15141321 . ?sbj wdt:P137 wd:Q1121141 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'express')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'train service', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operated by', 'o': 'Compagnie Internationale des Wagons-Lits'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'express'}}

 Q: What literary work follows the book of Exodus?
 SPARQL:  select distinct ?obj where { wd:Q9190 wdt:P155 ?obj . ?obj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Exodus', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: which institution that starts with the letter r
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178706 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'institution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What is {position held} of {James Callaghan} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9576 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Callaghan', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Callaghan', 'p': 'position held', 'o': '$y0'}}]

 Q: What is the {chemical compound} for {drug used for treatment} of {post-traumatic stress disorder}
 SPARQL:  select distinct ?obj where { wd:Q202387 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PTSD', 'p': 'treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is {discoverer or inventor of} of {major event} of {Nick Faldo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q531520 wdt:P793 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discoverer or inventor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nick Faldo', 'p': 'major event', 'o': '$y0'}}

 Q: what is the {determination method} for {Tolyatti} has {population} as {6381.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q1341 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'6381.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tolyatti', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '6381.0'}}}

 Q: What is {animals species kept} of {place of residence} of {Harambe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26388682 wdt:P551 ?X . ?X wdt:P1990 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'species kept', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harambe', 'p': 'residence', 'o': '$y0'}}

 Q: What is {shares border with} of {Île-de-France} that is {start time} is {2016-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q13917 p:P47 ?s . ?s ps:P47 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Île-de-France', 'p': 'border', 'o': '?x0', 't': '2016'}

 Q: Tell me biblical place whose name has the word zorah in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12404340 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zorah')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical place'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zorah'}}

 Q: What is the {proposed aircraft} with the {MAX(wing area)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15061018 . ?ent wdt:P2112 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'wing area', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'proposed aircraft'}}

 Q: What is {profession} of {José Martí}, that has {is said to be the same as} is {Dichter} ?
 SPARQL: SELECT ?answer WHERE { wd:Q103285 wdt:P106 ?answer . ?answer wdt:P460 wd:Q1293108}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jose Marti', 'p': 'profession', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'Dichter'}}

 Q: Is Barbara Streisand's net worth greater than 312,000,000?
 SPARQL: ASK WHERE { wd:Q4636 wdt:P2218 ?obj filter(?obj > 312000000.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Barbra Streisand', 'p': 'net worth', 'o': '?x0', '?x0': '312000000.0'}

 Q: How many students does Jacques-Louis David teach?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q83155 wdt:P802 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Jacques-Louis David', 'p': 'student', 'o': '?x0'}

 Q: What is {mother} and {date of birth} of {{Pedro I} has {child} as {Pedro II of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q156774 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Pedro II of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'birthdate', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Pedro II of Brazil'}}}]

 Q: Who is the {life stance} of {Zhuang people} who has {formed in} {Bodh Gaya} ?
 SPARQL: SELECT ?answer WHERE { wd:Q36692 wdt:P140 ?answer . ?answer wdt:P740 wd:Q176767}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zhuang people', 'p': 'life stance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'formed in', 'o': 'Bodh Gaya'}}

 Q: What is the {human} for {employer} of {J. R. R. Tolkien}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P108 wd:Q892 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'Tolkien', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {most eastern} of {comes from} of {sonata} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131269 wdt:P495 ?X . ?X wdt:P1334 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'most eastern', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'sonata', 'p': 'comes from', 'o': '$y0'}}

 Q: What is the {director of photography} and the {director} of {Blade_Runner} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q184843 wdt:P344 ?ans_1 . wd:Q184843 wdt:P57 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Blade Runner', 'p': 'director of photography', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Blade Runner', 'p': 'director', 'o': '?x1'}]

 Q: Which is the NASA biographical ID for Gordon Cooper?
 SPARQL: select distinct ?answer where { wd:Q312833 wdt:P2030 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gordon Cooper', 'p': 'NASA biographical ID', 'o': '?x0'}

 Q: What are the world day which start with the letter n
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2558684 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'world day'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is {writer} of {Ninety-five Theses}, that has {tomb} is {All Saints' Church} ?
 SPARQL: SELECT ?answer WHERE { wd:Q157506 wdt:P50 ?answer . ?answer wdt:P119 wd:Q661752}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ninety-five Theses', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tomb', 'o': "All Saints' Church"}}

 Q: What are the standards developing organisation of IEEE 1394, that have subsidiary entities of IEEE Nuclear and Plasma Sciences Society?
 SPARQL: SELECT ?answer WHERE { wd:Q181693 wdt:P1462 ?answer . ?answer wdt:P355 wd:Q3639101}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'IEEE 1394', 'p': 'standards developing organisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'IEEE Nuclear and Plasma Sciences Society'}}

 Q: What is {results in} of {belongs to} of {AT&T Laboratories} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4654538 wdt:P127 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'results in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'AT&T Laboratories', 'p': 'belongs to', 'o': '$y0'}}

 Q: Is the VAT-rate of South Korea equal to 10?
 SPARQL: ASK WHERE { wd:Q884 wdt:P2855 ?obj filter(?obj = 10) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'South Korea', 'p': 'VAT-rate', 'o': '?x0', '?x0': '10'}

 Q: What is the {human} for {employer} of {Qantas}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P108 wd:Q32491 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'Qantas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {world war} for {has cause} of {Treaty of Versailles}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P828 wd:Q8736 . ?sbj wdt:P31 wd:Q103495 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has cause', 'o': 'Treaty of Versailles', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'world war'}}

 Q: What is the {aspect of history} for {history of topic} of {cryptography}
 SPARQL:  select distinct ?obj where { wd:Q8789 wdt:P2184 ?obj . ?obj wdt:P31 wd:Q17524420 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cryptography', 'p': 'history of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical aspect'}}

 Q: Which is the bridge that is located in the administrative territorial entity of London Borough of Southwark and whose name contains the word bridge?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12280 . ?sbj wdt:P131 wd:Q730706 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bridge')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bridge', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'London Borough of Southwark'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'bridge'}}

 Q: is it true that the age of candidacy of the member of the chamber of deputies of the parliament of czech republic is equal to 18?
 SPARQL: ASK WHERE { wd:Q19803234 wdt:P2998 ?obj filter(?obj = 18) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Member of the Chamber of Deputies of the Parliament of the Czech Republic', 'p': 'age of candidacy', 'o': '?x0', '?x0': '18'}

 Q: What is the location of birth of Bob Weinstein, who has a PIN Code of 11100-11499?
 SPARQL: SELECT ?answer WHERE { wd:Q888311 wdt:P19 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'11100–11499'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bob Weinstein', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'PIN Code', 'o': '11100–11499'}}

 Q: Give me {mantra} that {facet of} {Hinduism} and which that starts with {'g'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131510 . ?sbj wdt:P1269 wd:Q9089 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mantra', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Hinduism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: What is the {owner of} and the {member of} of {Bono} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q834621 wdt:P1830 ?ans_1 . wd:Q834621 wdt:P463 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Bono', 'p': 'owner of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Bono', 'p': 'member of', 'o': '?x1'}]

 Q: What is the Belgium's Enterprise number for the European Parliament?
 SPARQL: select distinct ?answer where { wd:Q8889 wdt:P3376 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Parliament', 'p': 'Enterprise number', 'o': '?x0'}

 Q: What is the {human biblical figure} for {mother} of {Jesus Christ}
 SPARQL:  select distinct ?obj where { wd:Q302 wdt:P25 ?obj . ?obj wdt:P31 wd:Q20643955 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jesus', 'p': 'mother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human biblical figure'}}

 Q: What basic emotion starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16748867 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'basic emotion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {award received} of {Tomas Tranströmer} that is {prize money} is {1e+07} ?
 SPARQL: SELECT ?obj WHERE { wd:Q42122 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'1e+07')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tomas Tranströmer', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '1e+07'}}}

 Q: Was Old English John F. Kennedy's native language?
 SPARQL: ASK WHERE { wd:Q9696 wdt:P103 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John F. Kennedy', 'p': 'native language', 'o': '?x0', '?x0': 'Old English'}]

 Q: How many birth name are for Sarah Bernhardt?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q4605 wdt:P1477 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Sarah Bernhardt', 'p': 'birth name', 'o': '?x0'}

 Q: What was the population of Kokand in 1970?
 SPARQL: SELECT ?obj WHERE { wd:Q489890 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kokand', 'p': 'population', 'o': '?x0', 't': '1970'}

 Q: Which is the worst-case space complexity of quicksort?
 SPARQL: select distinct ?answer where { wd:Q486598 wdt:P3755 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'quicksort', 'p': 'worst-case space complexity', 'o': '?x0'}

 Q: What is {catchment basin} of {tributary} of {Lake Saint Clair} ?
 SPARQL: SELECT ?answer WHERE { wd:Q736707 wdt:P974 ?X . ?X wdt:P2053 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'catchment basin', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lake Saint Clair', 'p': 'tributary', 'o': '$y0'}}

 Q: What is {together with} and {earliest date} of {{Alexander Pushkin} has {residence} as {Ulyanovsk}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q7200 p:P551 ?s . ?s ps:P551 wd:Q5627 . ?s pq:P1706 ?value1 . ?s pq:P1319 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Pushkin', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Ulyanovsk'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'earliest date', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Pushkin', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Ulyanovsk'}}}]

 Q: What is the {place of birth} and the {place of death} of {Jane_Austen} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q36322 wdt:P19 ?ans_1 . wd:Q36322 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Jane Austen', 'p': 'place of birth', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Jane Austen', 'p': 'place of death', 'o': '?x1'}]

 Q: "What is  {Sovietskyi Raion} of {annexation of Crimea by the Russian Federation}, that has {moveable object location}  {has shires} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q15920546 wdt:P276 ?answer . ?answer wdt:P150 wd:Q595689}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'annexation of Crimea by the Russian Federation', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has shires', 'o': 'Sovietskyi Raion'}}

 Q: What is {head of government} of {Tbilisi} that is {end time} is {2004-4-19} ?
 SPARQL: SELECT ?obj WHERE { wd:Q994 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tbilisi', 'p': 'head of government', 'o': '?x0', 't': '2004'}

 Q: Where is the aerodrome reference point at Hiroshima?
 SPARQL: select distinct ?answer where { wd:Q34664 wdt:P2786 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hiroshima', 'p': 'aerodrome reference point', 'o': '?x0'}

 Q: what is the {point in time} for {Wendy Wasserstein} has {award received} as {William Inge Theatre Festival Distinguished Achievement in the American Theatre Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q450050 p:P166 ?s . ?s ps:P166 wd:Q29458167 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Wendy Wasserstein', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'William Inge Theatre Festival Distinguished Achievement in the American Theatre Award'}, 't': '?x0'}

 Q: What is the {imprint} for {record label} of {50 Cent}
 SPARQL:  select distinct ?obj where { wd:Q6060 wdt:P264 ?obj . ?obj wdt:P31 wd:Q2608849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '50 Cent', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'imprint'}}

 Q: Is Martin Luther a son of Magdalena Luther?
 SPARQL: ASK WHERE { wd:Q9554 wdt:P40 wd:Q6729875 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Martin Luther', 'p': 'son', 'o': '?x0', '?x0': 'Magdalena Luther'}]

 Q: What is the {megacity} for {official language} of {Urdu}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q1617 . ?sbj wdt:P31 wd:Q174844 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Urdu', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'megacity'}}

 Q: How many countries have been renamed after the collapse of the Soviet Union?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P138 wd:Q15180 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Soviet Union'}

 Q: what is the {point in time} for {Diana Ross} has {award received} as {Michigan Women's Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q36290 p:P166 ?s . ?s ps:P166 wd:Q6837811 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Diana Ross', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': "Michigan Women's Hall of Fame"}, 't': '?x0'}

 Q: What is <Flora of China ID> of <Citrus ×limon> ?
 SPARQL: select distinct ?answer where { wd:Q500 wdt:P1747 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Citrus ×limon', 'p': 'Flora of China ID', 'o': '?x0'}

 Q: What is license of iTunes ?
 SPARQL: select distinct ?answer where { wd:Q9589 wdt:P275 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'iTunes', 'p': 'license', 'o': '?x0'}

 Q: What is {zipcode} of {buried in} of {Georges Bizet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q56158 wdt:P119 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zip code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georges Bizet', 'p': 'buried in', 'o': '$y0'}}

 Q: What is cinematografo ID for Wallace Beery?
 SPARQL: select distinct ?answer where { wd:Q322179 wdt:P4768 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wallace Beery', 'p': 'cinematografo ID', 'o': '?x0'}

 Q: What's the capital of Paris?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q90 wdt:P1376 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Paris', 'p': 'capital of', 'o': '?x0'}

 Q: When was Thomas Hardy nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q132805 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Thomas Hardy', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: Did {Mitt_Romney} {position held} {bishop} and {United States senator} ?
 SPARQL: ASK WHERE { wd:Q4496 wdt:P39 wd:Q4917468 . wd:Q4496 wdt:P39 wd:Q13217683 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mitt Romney', 'p': 'position held', 'o': '?x0', '?x0': 'bishop'}, {'h': 'IS', 'v': '?x1', 's': 'Mitt Romney', 'p': 'position held', 'o': '?x1', '?x1': 'US senator'}]

 Q: What is {dissolved, abolished or demolished} of {Achaemenid Empire} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q389688 p:P576 ?s . ?s ps:P576 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'abolished', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Achaemenid Empire', 'p': 'abolished', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Where is the location of death of John Dowland whose zipcode is BR?
 SPARQL: SELECT ?answer WHERE { wd:Q207355 wdt:P20 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'BR'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Dowland', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'zipcode', 'o': 'br'}}

 Q: What is {agent} of {in conflict} of {Hosni Mubarak} ?
 SPARQL: SELECT ?answer WHERE { wd:Q34105 wdt:P607 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'agent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hosni Mubarak', 'p': 'conflict', 'o': '$y0'}}

 Q: Which member of the sports team Ian Botham left in 1988?
 SPARQL: SELECT ?obj WHERE { wd:Q982121 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ian Botham', 'p': 'team', 'o': '?x0', 't': '1988'}

 Q: What is time zone of subitem of of history of Lithuania?
 SPARQL: SELECT ?answer WHERE { wd:Q215063 wdt:P1269 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Lithuania', 'p': 'subitem of', 'o': '$y0'}}

 Q: Which is the currency symbol description for Australian dollar?
 SPARQL: select distinct ?answer where { wd:Q259502 wdt:P489 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Australian dollar', 'p': 'currency symbol description', 'o': '?x0'}

 Q: Which unit of pressure has maximum conversion to standard unit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q10751953 . ?ent wdt:P2442 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'conversion to standard unit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of pressure'}}

 Q: Which is the sexual orientation for asexuality?
 SPARQL: select distinct ?answer where { ?answer wdt:P91 wd:Q724351}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sexual orientation', 'o': 'asexuality'}

 Q: Which is the league level above the Ligue 1?
 SPARQL: select distinct ?answer where { ?answer wdt:P2499 wd:Q13394}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'league level above', 'o': 'Ligue 1'}

 Q: Which is the clan for the family name of Genghis Khan?
 SPARQL:  select distinct ?obj where { wd:Q720 wdt:P734 ?obj . ?obj wdt:P31 wd:Q211503 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genghis Khan', 'p': 'family name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'clan'}}

 Q: Can the topic of Prajnaparamita be found on the Wikivoyage banner also known as Ho Chi Minh city banner Bai Buddhas.jpg?
 SPARQL: SELECT ?answer WHERE { wd:Q751147 wdt:P1269 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Ho Chi Minh city banner Bai Buddhas.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Prajnaparamita', 'p': 'topic of', 'o': '?x0'}

 Q: God Save the Queen is the anthem for which island nation?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P85 wd:Q40807 . ?sbj wdt:P31 wd:Q112099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'God Save the Queen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation'}}

 Q: what is the {statement is subject of} for {Burl Ives} has {award received} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q315723 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Burl Ives', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: What is {rector} of {works for} of {Georg Simmel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q76849 wdt:P108 ?X . ?X wdt:P1075 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rector', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georg Simmel', 'p': 'works for', 'o': '$y0'}}

 Q: What is the {musical} for {screenwriter} of {Andrew Lloyd Webber}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P58 wd:Q180975 . ?sbj wdt:P31 wd:Q2743 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'screenwriter', 'o': 'Andrew Lloyd Webber', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical'}}

 Q: Which is the Romanian Olympic and Sports Committee athlete ID for Nadia Comăneci?
 SPARQL: select distinct ?answer where { wd:Q33228 wdt:P4067 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nadia Comăneci', 'p': 'Romanian Olympic and Sports Committee athlete ID', 'o': '?x0'}

 Q: What is {educated at} of {Manmohan Singh} that is {academic degree} is {Doctor of Philosophy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41914 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q752297 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Manmohan Singh', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Doctor of Philosophy'}}}

 Q: What effect did the Big Bang have on the universe?
 SPARQL:  select distinct ?obj where { wd:Q323 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q36906466 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Big Bang', 'p': 'effect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'universe'}}

 Q: Did {Atlanta} {twinned administrative body} {Athens} and {Nuremberg} ?
 SPARQL: ASK WHERE { wd:Q23556 wdt:P190 wd:Q1524 . wd:Q23556 wdt:P190 wd:Q2090 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Atlanta', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Athens'}, {'h': 'IS', 'v': '?x1', 's': 'Atlanta', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Nuremberg'}]

 Q: Give me {borough of New York City} that {located in or next to body of water} {Upper New York Bay} and which that starts with {'m'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408804 . ?sbj wdt:P206 wd:Q1064776 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'borough of New York City', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in or next to body of water', 'o': 'Upper New York Bay'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is {area} of {Indian Ocean} that is {point in time} is {1982-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1239 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Indian Ocean', 'p': 'area', 'o': '?x0', 't': '1982'}

 Q: Which satellite  orbits of Messier 22?
 SPARQL: SELECT ?answer WHERE { wd:Q11392 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'satellite', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 22', 'p': 'orbits', 'o': '$y0'}}

 Q: What is the {sovereign state} for {diplomatic relation} of {African Union}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q7159 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'African Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who is the parent organization and chief executive officer of the Society of Jesus?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q36380 wdt:P749 ?ans_1 . wd:Q36380 wdt:P169 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Society of Jesus', 'p': 'parent organization', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Society of Jesus', 'p': 'chief executive officer', 'o': '?x1'}]

 Q: What is the {food manufacturer} for {owned by} of {Burger King}
 SPARQL:  select distinct ?obj where { wd:Q177054 wdt:P127 ?obj . ?obj wdt:P31 wd:Q1252971 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Burger King', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'food manufacturer'}}

 Q: Who is Pan's Labyrinth's make-up artist?
 SPARQL: select distinct ?answer where { wd:Q216006 wdt:P4805 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Pan's Labyrinth", 'p': 'make-up artist', 'o': '?x0'}

 Q: Which is the sausage sandwich of the parent astronomical body of Proxima Centauri that starts with the letter d?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7427595 . ?sbj wdt:P397 wd:Q14266 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sausage sandwich', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Proxima Centauri'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is the residence and the work of Derek Hough?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1189327 wdt:P551 ?ans_1 . wd:Q1189327 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Derek Hough', 'p': 'residence', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Derek Hough', 'p': 'work', 'o': '?x1'}]

 Q: What is {made of} of {maker of} of {tea house} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1072166 wdt:P1056 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'made of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'tea house', 'p': 'maker of', 'o': '$y0'}}

 Q: What is <start period> of <menopause> ?
 SPARQL: select distinct ?answer where { wd:Q177708 wdt:P3415 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'menopause', 'p': 'start period', 'o': '?x0'}

 Q: What is {has villages} of {birth location} of {Pan Yue} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6464972 wdt:P19 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has villages', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pan Yue', 'p': 'born in', 'o': '$y0'}}

 Q: What is the notation that implies centrifugal force ?
 SPARQL: SELECT ?answer WHERE { wd:Q178733 wdt:P1542 ?X . ?X wdt:P2534 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'notation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'centrifugal force', 'p': 'implies', 'o': '$y0'}}

 Q: What language does William Johnson's, who has the label ccs-angles-spreadthesign.gov, speak?
 SPARQL: SELECT ?answer WHERE { wd:Q1883000 wdt:P1412 ?answer . ?answer wdt:P2919 ?x FILTER(contains(?x,'Csc-anglès-spreadthesign.ogv'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Johnson', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sign', 'o': 'csc-anglès-spreadthesign.ogv'}}

 Q: who honorific for honorific prefix of Salman of Saudi Arabia?
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P511 ?obj . ?obj wdt:P31 wd:Q1326966 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'honorific prefix', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'honorific'}}

 Q: What is <BBFC rating> of <Who Framed Roger Rabbit> ?
 SPARQL: select distinct ?answer where { wd:Q379873 wdt:P2629 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Who Framed Roger Rabbit', 'p': 'BBFC rating', 'o': '?x0'}

 Q: How many {depends on software} are to/by {PHP} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1547 wd:Q59 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'depends on software', 'o': 'PHP'}

 Q: Tell me theme park whose name has the word  woman  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2416723 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theme park'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: Which is the superhero from the fictional universe of DC Universe that starts with the letter s?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q188784 . ?sbj wdt:P1080 wd:Q1152150 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superhero', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'universe', 'o': 'DC Universe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Is it true that the attendance of the 47th World Science Fiction Convention equals to 6837?
 SPARQL: ASK WHERE { wd:Q4638583 wdt:P1110 ?obj filter(?obj = 6837) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '47th World Science Fiction Convention', 'p': 'attendance', 'o': '?x0', '?x0': '6837'}

 Q: What is {executive director} of {working place} of {Christopher Wylie} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50845422 wdt:P108 ?X . ?X wdt:P169 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'executive director', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Wylie', 'p': 'working place', 'o': '$y0'}}

 Q: What is {fleet} of {service branch} of {Robert D. Russ} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7343340 wdt:P241 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fleet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert D. Russ', 'p': 'branch', 'o': '$y0'}}

 Q: What is {trend} of {role model} of {Buckminster Fuller} ?
 SPARQL: SELECT ?answer WHERE { wd:Q102289 wdt:P737 ?X . ?X wdt:P135 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'trend', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Buckminster Fuller', 'p': 'role model', 'o': '$y0'}}

 Q: What is <parent of this hybrid, breed, or cultivar> of <hinny> ?
 SPARQL: select distinct ?answer where { wd:Q217584 wdt:P1531 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hinny', 'p': 'parent of this hybrid, breed, or cultivar', 'o': '?x0'}

 Q: is the M sin i of HD 181342 b equal to 2.54?
 SPARQL: ASK WHERE { wd:Q4039888 wdt:P2051 ?obj filter(?obj = 2.54) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'HD 181342 b', 'p': 'M sin i', 'o': '?x0', '?x0': '2.54'}

 Q: Does the water footprint of the chicken egg equal less than 2612.0?
 SPARQL: ASK WHERE { wd:Q15260613 wdt:P6000 ?obj filter(?obj < 2612.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'chicken egg', 'p': 'water footprint', 'o': '?x0', '?x0': '2612.0'}

 Q: What is {musical key} of {Symphony No. 40}, that has {previous is} is {F-sharp minor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q231390 wdt:P826 ?answer . ?answer wdt:P155 wd:Q283910}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Symphony No. 40', 'p': 'musical key', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prev', 'o': 'F-sharp minor'}}

 Q: What is the {TV tower} with the {MAX(number of elevators)} whose {significant event} is {construction}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11166728 . ?ent wdt:P1301 ?obj . ?ent wdt:P793 wd:Q385378 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of elevators', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV tower', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'construction'}}}

 Q: What is {type of taxon} of {taxon parent} of {Xynenon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15872518 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of taxon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Xynenon', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What is the {book of the Bible} for {followed by} of {Exodus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P156 wd:Q9190 . ?sbj wdt:P31 wd:Q29154430 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'Exodus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book of the Bible'}}

 Q: Does the scoeville grade of bell pepper equal to 0.0?
 SPARQL: ASK WHERE { wd:Q1548030 wdt:P2658 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'bell pepper', 'p': 'Scoville grade', 'o': '?x0', '?x0': '0.0'}

 Q: The physical quantity of a millimetre is represented by the symbol L. Which is it?
 SPARQL: SELECT ?answer WHERE { wd:Q174789 wdt:P111 ?answer . ?answer wdt:P416 ?x FILTER(contains(?x,'L'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'millimetre', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'symbol', 'o': 'l'}}

 Q: What is Charity Commission no. of British Library ?
 SPARQL: select distinct ?answer where { wd:Q23308 wdt:P3057 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'British Library', 'p': 'Charity Commission no.', 'o': '?x0'}

 Q: Which is the JapanTour golf player ID for Ernie Els?
 SPARQL: select distinct ?answer where { wd:Q440171 wdt:P3535 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ernie Els', 'p': 'JapanTour golf player ID', 'o': '?x0'}

 Q: How many surface tensions are there for ethyl acetate?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q407153 wdt:P3013 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'ethyl acetate', 'p': 'surface tension', 'o': '?x0'}

 Q: What is {genetic association} of {lung cancer}, that has {ortholog} is {vti1a} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47912 wdt:P2293 ?answer . ?answer wdt:P684 wd:Q29782872}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'lung cancer', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ortholog', 'o': 'vti1a'}}

 Q: What is {nominated for} of {Pearl Jam} that is {for work} is {The Fixer} ?
 SPARQL: SELECT ?obj WHERE { wd:Q142701 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1582205 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pearl Jam', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Fixer'}}}

 Q: How many start points are by Denver?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1427 wd:Q16554 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'Denver'}

 Q: What are the feminist movement which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15580856 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'feminist movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which lake outflow's from the Nile?
 SPARQL: select distinct ?answer where { ?answer wdt:P201 wd:Q3392}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lake outflow', 'o': 'Nile'}

 Q: Is the decomposition point of the limestone equal to 1820.4?
 SPARQL: ASK WHERE { wd:Q23757 wdt:P2107 ?obj filter(?obj = 1820.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'limestone', 'p': 'decomposition point', 'o': '?x0', '?x0': '1820.4'}

 Q: What was the population of Bonn as of December 31st, 1970?
 SPARQL: SELECT ?obj WHERE { wd:Q586 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bonn', 'p': 'population', 'o': '?x0', 't': '1970'}

 Q: Does the Sigma baryon have isospin z-component that is more than 0.8
 SPARQL: ASK WHERE { wd:Q424078 wdt:P1127 ?obj filter(?obj > 0.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Sigma baryon', 'p': 'isospin z-component', 'o': '?x0', '?x0': '0.8'}

 Q: What is the gender of Cecilia Bartoli, which has the abbreviation 'жін'?
 SPARQL: SELECT ?answer WHERE { wd:Q18828 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'жін'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cecilia Bartoli', 'p': 'gender', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'abbreviation', 'o': 'жін'}}

 Q: Who was the spouse of Jim Carrey prior to their divorce in 1997?
 SPARQL: SELECT ?obj WHERE { wd:Q40504 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1997')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jim Carrey', 'p': 'spouse', 'o': '?x0', 't': '1997'}

 Q: Which daughter of Apollo has a male son?
 SPARQL: SELECT ?answer WHERE { wd:Q37340 wdt:P40 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Apollo', 'p': 'son', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'male'}}

 Q: What is the {human} for {mother} of {Hadrian}
 SPARQL:  select distinct ?obj where { wd:Q1427 wdt:P25 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hadrian', 'p': 'mother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {start time} for {Boston Globe} has {owned by} as {John W. Henry} ?
 SPARQL: SELECT ?value WHERE { wd:Q824451 p:P127 ?s . ?s ps:P127 wd:Q1186372 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boston Globe', 'p': 'owner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'owner', 'o': 'John W. Henry'}}}

 Q: What is the asteroid with the lowest rotation period whose site of astronomical discovery is Bishop Observatory ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3863 . ?ent wdt:P2147 ?obj . ?ent wdt:P65 wd:Q4329955} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'rotation period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'site of astronomical discovery', 'o': 'Bishop Observatory'}}}

 Q: What is {location of birth} of {William the Conqueror}, that has {gps coordinates} is {48.8922} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37594 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'48.8922'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William the Conqueror', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinates', 'o': '48.8922'}}

 Q: who is the replaced by John Hancock has position held as Governor of Massachusetts ?
 SPARQL: SELECT ?value WHERE { wd:Q272774 p:P39 ?s . ?s ps:P39 wd:Q887117 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hancock', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Governor of Massachusetts'}}}

 Q: What is HGNC gene symbol for RHO?
 SPARQL: select distinct ?answer where { wd:Q14859555 wdt:P353 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'RHO', 'p': 'HGNC gene symbol', 'o': '?x0'}

 Q: What was the population of Puerto Rico in 1962?
 SPARQL: SELECT ?obj WHERE { wd:Q1183 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1962')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Puerto Rico', 'p': 'population', 'o': '?x0', 't': '1962'}

 Q: Who is the professional or sports partner of Madge Syers?
 SPARQL: select distinct ?answer where { wd:Q49292 wdt:P1327 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Madge Syers', 'p': 'sports partner', 'o': '?x0'}

 Q: Is it true that the standard enthalpy of formation of hydrogen fluoride is greater than -218.64?
 SPARQL: ASK WHERE { wd:Q2468 wdt:P3078 ?obj filter(?obj > -218.64) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'hydrogen fluoride', 'p': 'standard enthalpy of formation', 'o': '?x0', '?x0': '-218.64'}

 Q: what is the {country} for {Fred MacMurray} has {place of death} as {Santa Monica} ?
 SPARQL: SELECT ?value WHERE { wd:Q356309 p:P20 ?s . ?s ps:P20 wd:Q47164 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fred MacMurray', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Santa Monica'}}}

 Q: What is {famous for} of {writers} of {Sonnet 72} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3490580 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'famous for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sonnet 72', 'p': 'writer', 'o': '$y0'}}

 Q: Which is the historical region located on the terrain feature of the classical antiquity?
 SPARQL:  select distinct ?obj where { wd:Q486761 wdt:P706 ?obj . ?obj wdt:P31 wd:Q1620908 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'classical antiquity', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical region'}}

 Q: Give me {heptalogy} that {takes place in fictional universe} {Harry Potter universe} and which contains the word {harry} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q614101 . ?sbj wdt:P1434 wd:Q5410773 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'harry')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'heptalogy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'takes place in fictional universe', 'o': 'Harry Potter universe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'harry'}}

 Q: Who did Juan Domingo Perón get married to on 1929-1-5?
 SPARQL: SELECT ?obj WHERE { wd:Q93330 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1929')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Juan Domingo Perón', 'p': 'married to', 'o': '?x0', 't': '1929'}

 Q: When did member of sports team of Andriy Shevchenko and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41244 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Is the drag coefficient of the Hummer H2 equal to 0.424?
 SPARQL: ASK WHERE { wd:Q618590 wdt:P6497 ?obj filter(?obj = 0.424) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hummer H2', 'p': 'drag coefficient', 'o': '?x0', '?x0': '0.424'}

 Q: What is the databaseFootball.com ID for O.J. Simpson?
 SPARQL: select distinct ?answer where { wd:Q44473 wdt:P3532 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'O.J. Simpson', 'p': 'databaseFootball.com ID', 'o': '?x0'}

 Q: What is {spouse} of {Pierre Curie} that is {place of marriage} is {Sceaux} ?
 SPARQL: SELECT ?obj WHERE { wd:Q37463 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q370498 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'wife', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pierre Curie', 'p': 'wife', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of marriage', 'o': 'Sceaux'}}}

 Q: Give me {physical constant} that contains the word {wavelength} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q173227 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wavelength')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical constant'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wavelength'}}

 Q: Is Woody Harrelson's last name really Harrelson?
 SPARQL: ASK WHERE { wd:Q201279 wdt:P734 wd:Q21450338 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Woody Harrelson', 'p': 'last name', 'o': '?x0', '?x0': 'Harrelson'}]

 Q: What is the {artistic theme} for {significant person} of {Noah}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3342 wd:Q81422 . ?sbj wdt:P31 wd:Q1406161 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Noah', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theme'}}

 Q: Give me {comics character} that {from fictional universe} {Mickey Mouse universe} and which that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1114461 . ?sbj wdt:P1080 wd:Q3260246 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comics character', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'universe', 'o': 'Mickey Mouse universe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {inhabitants} of {workplace} of {Willy Brandt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2514 wdt:P937 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Willy Brandt', 'p': 'workplace', 'o': '$y0'}}

 Q: Which is the website affiliated with Harvard University?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q13371 . ?sbj wdt:P31 wd:Q35127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliated with', 'o': 'Harvard University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'website'}}

 Q: Which actor portrayed Batman in the movie Batman?
 SPARQL: SELECT ?obj WHERE { wd:Q2695156 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q116852 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Batman', 'p': 'actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Batman'}}}

 Q: Is it true that the angular resolution of Hobby-Eberly Telescope equals to 1.8?
 SPARQL: ASK WHERE { wd:Q139605 wdt:P3439 ?obj filter(?obj = 1.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hobby-Eberly Telescope', 'p': 'angular resolution', 'o': '?x0', '?x0': '1.8'}

 Q: What was the population of Sierra Leone in the year 1982?
 SPARQL: SELECT ?obj WHERE { wd:Q1044 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sierra Leone', 'p': 'population', 'o': '?x0', 't': '1982'}

 Q: What is {antonym of} of {religious affiliation} of {Pol Pot} ?
 SPARQL: SELECT ?answer WHERE { wd:Q39464 wdt:P140 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pol Pot', 'p': 'religious affiliation', 'o': '$y0'}}

 Q: What what is  property measured by Wechsler Intelligence Scale for Children   which that starts with letters i
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q937228 . ?sbj wdt:P1880 wd:Q1572850 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'property', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'Wechsler Intelligence Scale for Children'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: Which is the streak color for apatite?
 SPARQL: select distinct ?answer where { wd:Q178397 wdt:P534 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'apatite', 'p': 'streak color', 'o': '?x0'}

 Q: What is the designer of iPad whose output is Apple Pay?
 SPARQL: SELECT ?answer WHERE { wd:Q2796 wdt:P287 ?answer . ?answer wdt:P1056 wd:Q18010990}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'iPad', 'p': 'designer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'output', 'o': 'Apple Pay'}}

 Q: What type of sport is jujutsu?
 SPARQL: select distinct ?answer where { ?answer wdt:P641 wd:Q163770}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'jujutsu'}

 Q: Which is the source of inspiration for the characters of The Lion King?
 SPARQL: SELECT ?answer WHERE { wd:Q36479 wdt:P941 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'source of inspiration', 'o': '$y0'}}

 Q: What is the {human} for {officeholder} of {pope}
 SPARQL:  select distinct ?obj where { wd:Q19546 wdt:P1308 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pope', 'p': 'officeholder', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {songwriter} of {Leck mich im Arsch}, that has {first language} is {German} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1373720 wdt:P86 ?answer . ?answer wdt:P103 wd:Q188}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leck mich im Arsch', 'p': 'songwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first language', 'o': 'German'}}

 Q: What is {elected in} and {end cause} of {{Arthur Henderson} has {position held} as {Member of the 29th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q208665 p:P39 ?s . ?s ps:P39 wd:Q41582579 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Henderson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 29th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Henderson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 29th Parliament of the United Kingdom'}}}]

 Q: Is it true that the median income of the Australia equal 37244.0?
 SPARQL: ASK WHERE { wd:Q408 wdt:P3529 ?obj filter(?obj = 37244.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Australia', 'p': 'median income', 'o': '?x0', '?x0': '37244.0'}

 Q: Does the Norwegian krone price equal 0.13
 SPARQL: ASK WHERE { wd:Q132643 wdt:P2284 ?obj filter(?obj = 0.13) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Norwegian krone', 'p': 'price', 'o': '?x0', '?x0': '0.13'}

 Q: Who is the {person} for {place of birth} in {Chicago}?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P19 wd:Q1297 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of birth', 'o': 'Chicago', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Who is the {music genre} for {based on} of {country music}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q83440 . ?sbj wdt:P31 wd:Q188451 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'country music', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music genre'}}

 Q: what is the {start time} for {Iannis Xenakis} has {spouse} as {Françoise Xenakis} ?
 SPARQL: SELECT ?value WHERE { wd:Q152880 p:P26 ?s . ?s ps:P26 wd:Q3086635 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iannis Xenakis', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Françoise Xenakis'}}}

 Q: What are the diplomatic relations of the Kam people living in South Sudan?
 SPARQL: SELECT ?answer WHERE { wd:Q958 wdt:P530 ?answer . ?answer wdt:P172 wd:Q216096}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Sudan', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'people', 'o': 'Kam people'}}

 Q: Is the maximum temperature record of Russia less than 54.48?
 SPARQL: ASK WHERE { wd:Q159 wdt:P6591 ?obj filter(?obj < 54.48) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Russia', 'p': 'maximum temperature record', 'o': '?x0', '?x0': '54.48'}

 Q: What is the {Semitic languages} for {writing system} of {Phoenician alphabet}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q26752 . ?sbj wdt:P31 wd:Q34049 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'alphabet', 'o': 'Phoenician', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Semitic languages'}}

 Q: When will Dublin stop being a part of United Kingdom of Great Britain and Ireland?
 SPARQL: SELECT ?value WHERE { wd:Q1761 p:P17 ?s . ?s ps:P17 wd:Q174193 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dublin', 'p': 'land', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'United Kingdom of Great Britain and Ireland'}}}

 Q: Who is followed by Oliver Twist?
 SPARQL: select distinct ?answer where { wd:Q164974 wdt:P156 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oliver Twist', 'p': 'followed by', 'o': '?x0'}

 Q: When did position held of Gianni Agnelli and appointed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q356351 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P748 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'appointed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gianni Agnelli', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gianni Agnelli', 'p': 'position held', 'o': '$y0'}}]

 Q: What uses the German language and was co-founded by the Gestapo?
 SPARQL: SELECT ?answer WHERE { wd:Q43250 wdt:P112 ?answer . ?answer wdt:P1412 wd:Q188}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gestapo', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language', 'o': 'German'}}

 Q: what is the {end time} for {Mickey Rourke} has {spouse} as {Carré Otis} ?
 SPARQL: SELECT ?value WHERE { wd:Q178552 p:P26 ?s . ?s ps:P26 wd:Q508366 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mickey Rourke', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Carré Otis'}}}

 Q: Which is the annexation that contains the word war in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194465 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'annexation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: What takes place in the House of Cards, if the highest judicial authority is the DC Court of Appeals?
 SPARQL: SELECT ?answer WHERE { wd:Q3330940 wdt:P840 ?answer . ?answer wdt:P209 wd:Q5283409}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'House of Cards', 'p': 'takes place in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest judicial authority', 'o': 'DC Court of Appeals'}}

 Q: What is the {belt sander model} with the {MIN(power consumed)} whose {subclass of} is {power tool}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q23811260 . ?ent wdt:P2791 ?obj . ?ent wdt:P279 wd:Q1327701} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'power consumed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'belt sander model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'power tool'}}}

 Q: What is the birth location of Johann Heinrich Pestalozzi, which has a population of 360980?
 SPARQL: SELECT ?answer WHERE { wd:Q105428 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'360980.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Johann Heinrich Pestalozzi', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '360980.0'}}

 Q: Did {Spider-Man} {present in work} {Spider-Man: Shattered Dimensions}?
 SPARQL: ASK WHERE { wd:Q79037 wdt:P1441 wd:Q729212 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Spider Man', 'p': 'present in work', 'o': '?x0', '?x0': 'Spider-Man: Shattered Dimensions'}]

 Q: What team did Mahela Jayawardene play for until 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q2739165 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mahela Jayawardene', 'p': 'team', 'o': '?x0', 't': '2010'}

 Q: what is the {replaced by} for {Maurice Maeterlinck} has {member of} as {Belgium Royal Academy of French language and literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q49747 p:P463 ?s . ?s ps:P463 wd:Q2166029 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maurice Maeterlinck', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Belgium Royal Academy of French language and literature'}}}

 Q: What is the {influenced by} and the {genre} of {Joy_Division} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q172763 wdt:P737 ?ans_1 . wd:Q172763 wdt:P136 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Joy Division', 'p': 'influenced by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Joy Division', 'p': 'genre', 'o': '?x1'}]

 Q: What is the {data controller (GDPR)} for {operator} of {Facebook}
 SPARQL:  select distinct ?obj where { wd:Q355 wdt:P137 ?obj . ?obj wdt:P31 wd:Q59859818 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Facebook', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'data controller'}}

 Q: What are Mira Sorvino's gender and religion?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q212026 wdt:P21 ?ans_1 . wd:Q212026 wdt:P140 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Mira Sorvino', 'p': 'gender', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Mira Sorvino', 'p': 'religion', 'o': '?x1'}]

 Q: What is the namesake of Hall effect whose craft is university teacher?
 SPARQL: SELECT ?answer WHERE { wd:Q10656 wdt:P138 ?answer . ?answer wdt:P106 wd:Q1622272}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hall effect', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'university teacher'}}

 Q: Which active ingredient is the duty of Vivelle?
 SPARQL: SELECT ?answer WHERE { wd:Q48826042 wdt:P3781 ?X . ?X wdt:P2868 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'duty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vivelle', 'p': 'active ingredient', 'o': '$y0'}}

 Q: What is <Dharma Drum Buddhist College place ID> of <Mount Song> ?
 SPARQL: select distinct ?answer where { wd:Q1140980 wdt:P1188 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mount Song', 'p': 'Dharma Drum Buddhist College place ID', 'o': '?x0'}

 Q: What is Movieplayer TV-series ID for Supernatural ?
 SPARQL: select distinct ?answer where { wd:Q130585 wdt:P4784 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Supernatural', 'p': 'Movieplayer TV-series ID', 'o': '?x0'}

 Q: what is the {start time} for {Palestine} has {instance of} as {historical region} ?
 SPARQL: SELECT ?value WHERE { wd:Q23792 p:P31 ?s . ?s ps:P31 wd:Q1620908 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Palestine', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'historical region'}}}

 Q: When did Uganda have an inflation rate of 146.7?
 SPARQL: SELECT ?value WHERE { wd:Q1036 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'146.7')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Uganda', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '146.7'}, 't': '?x0'}

 Q: What is the {creative work} for {has edition} of {HTML5}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P747 wd:Q2053 . ?sbj wdt:P31 wd:Q17537576 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'HTML5', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'creative work'}}

 Q: what is the {start time} for {David Susskind} has {spouse} as {Joyce Davidson} ?
 SPARQL: SELECT ?value WHERE { wd:Q4408937 p:P26 ?s . ?s ps:P26 wd:Q6297452 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Susskind', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Joyce Davidson'}}}

 Q: what is the {series ordinal} for {Camillo Benso di Cavour} has {given name} as {Paolo} ?
 SPARQL: SELECT ?value WHERE { wd:Q166092 p:P735 ?s . ?s ps:P735 wd:Q15731774 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Camillo Benso di Cavour', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Paolo'}}}

 Q: Which is the Collective Biographies of Women ID of Catherine of Aragon?
 SPARQL: select distinct ?answer where { wd:Q162819 wdt:P4539 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Catherine of Aragon', 'p': 'Collective Biographies of Women ID', 'o': '?x0'}

 Q: What is {award received} of {Midnight's Children} that is {follows} is {Rites of Passage} ?
 SPARQL: SELECT ?obj WHERE { wd:Q625764 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P155 wd:Q3937279 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Midnight's Children", 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'Rites of Passage'}}}

 Q: who first language of executive power headed by of North Rhine-Westphalia?
 SPARQL: SELECT ?answer WHERE { wd:Q1198 wdt:P6 ?X . ?X wdt:P103 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North Rhine-Westphalia', 'p': 'executive power headed by', 'o': '$y0'}}

 Q: What was the allegiance of Wernher von Braun at the beginning of 1937?
 SPARQL: SELECT ?obj WHERE { wd:Q57384 p:P945 ?s . ?s ps:P945 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1937')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wernher von Braun', 'p': 'allegiance', 'o': '?x0', 't': '1937'}

 Q: what is the {start time} for {Technical University of Munich} has {member of} as {German Universities Excellence Initiative} ?
 SPARQL: SELECT ?value WHERE { wd:Q157808 p:P463 ?s . ?s ps:P463 wd:Q705657 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Technical University of Munich', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'German Universities Excellence Initiative'}}}

 Q: what is the {language of work or name} for {egg} has {pronunciation audio} as {Sv-ägg.ogg} ?
 SPARQL: SELECT ?value WHERE { wd:Q17147 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'Sv-ägg.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'egg', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'pronunciation audio', 'o': 'sv-ägg.ogg'}}}

 Q: How many {cast member} are for {Bicycle Thieves} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q172837 wdt:P161 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Bicycle Thieves', 'p': 'cast member', 'o': '?x0'}

 Q: How many {type of orbit} are to/by {geosynchronous orbit} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P522 wd:Q472251 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'orbit', 'o': 'geosynchronous orbit'}

 Q: What is <At the Circulating Library ID> of <Charles Dickens> ?
 SPARQL: select distinct ?answer where { wd:Q5686 wdt:P1564 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Dickens', 'p': 'At the Circulating Library ID', 'o': '?x0'}

 Q: What is {human population} of {comes from} of {Foreigner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q275059 wdt:P495 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Foreigner', 'p': 'comes from', 'o': '$y0'}}

 Q: Which is the CRIStin ID for Finn E. Kydland?
 SPARQL: select distinct ?answer where { wd:Q211097 wdt:P2287 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Finn E. Kydland', 'p': 'CRIStin ID', 'o': '?x0'}

 Q: which dwarf planet has the highest rotation period?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2199 . ?ent wdt:P2147 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'rotation period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dwarf planet'}}

 Q: What is {location born} of {Henri Poincaré}, that has {is in the shire of} is {Meurthe-et-Moselle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q81082 wdt:P19 ?answer . ?answer wdt:P131 wd:Q12626}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henri Poincare', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Meurthe-et-Moselle'}}

 Q: What are technical specification which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20819677 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'technical specification'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Is the quantity buried of the Forest Lawn Memorial Park equal to 119216?
 SPARQL: ASK WHERE { wd:Q1302545 wdt:P2324 ?obj filter(?obj = 119216) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Forest Lawn Memorial Park', 'p': 'quantity buried', 'o': '?x0', '?x0': '119216'}

 Q: Who is the referee for Earl Strom?
 SPARQL: select distinct ?answer where { ?answer wdt:P1652 wd:Q735731}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'referee', 'o': 'Earl Strom'}

 Q: What is the {river} for {located in or next to body of water} of {Shanghai}
 SPARQL:  select distinct ?obj where { wd:Q8686 wdt:P206 ?obj . ?obj wdt:P31 wd:Q4022 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shanghai', 'p': 'located in or next to body of water', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'river'}}

 Q: Give me {soft drink} that {country of origin} {North America} and which that starts with {'b'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q147538 . ?sbj wdt:P495 wd:Q49 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'soft drink', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'North America'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: What { working language or name } does { Vatican City } have { detail map } like { Vatican City map IT.png }?
 SPARQL: SELECT ?value WHERE { wd:Q237 p:P1621 ?s . ?s ps:P1621 ?x filter(contains(?x,'Vatican City map IT.png')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vatican City', 'p': 'detail map', 'o': '$y0'}}

 Q: How many {set in period} are to/by {World War II} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2408 wd:Q362 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'era', 'o': 'World War II'}

 Q: What is <safety classification and labelling> of <hydrochloric acid> ?
 SPARQL: select distinct ?answer where { wd:Q2409 wdt:P4952 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hydrochloric acid', 'p': 'safety classification and labelling', 'o': '?x0'}

 Q: Where is the Crux constellation?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P59 wd:Q10542 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Crux'}

 Q: Who is the {human} for {student} of {Francis Bacon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P802 wd:Q37388 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student', 'o': 'Francis Bacon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {profession} of {first described} of {(225088) 2007 OR10} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6587 wdt:P61 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'job', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '(225088) 2007 OR10', 'p': 'first described', 'o': '$y0'}}

 Q: What is the {milestone} for {commemorates} of {Jefferson Davis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P547 wd:Q162269 . ?sbj wdt:P31 wd:Q10145 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commemorates', 'o': 'Jefferson Davis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'milestone'}}

 Q: What is the type of kinship Ana Boyer Preysler has as a relative of Enrique Iglesias?
 SPARQL: SELECT ?value WHERE { wd:Q47122 p:P1038 ?s . ?s ps:P1038 wd:Q27665550 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Enrique Iglesias', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Ana Boyer Preysler'}}}

 Q: Which is the Internet Wrestling Database ID for John Cena?
 SPARQL: select distinct ?answer where { wd:Q44437 wdt:P2829 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Cena', 'p': 'Internet Wrestling Database ID', 'o': '?x0'}

 Q: What award did Tom Holland receive in the year 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q2023710 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tom Holland', 'p': 'award', 'o': '?x0', 't': '2012'}

 Q: When is {end time} and {start time} of {{Leontien van Moorsel} has {member of sports team} as {Farm Frites - Hartol}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q234158 p:P54 ?s . ?s ps:P54 wd:Q2694122 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leontien van Moorsel', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Farm Frites - Hartol'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leontien van Moorsel', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Farm Frites - Hartol'}}}]

 Q: Is the net profit of the Eastern-Siberian Inland Navigation Company equal to 5,578,000?
 SPARQL: ASK WHERE { wd:Q639310 wdt:P2295 ?obj filter(?obj = 5578800.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'The Eastern-Siberian Inland Navigation Company', 'p': 'net profit', 'o': '?x0', '?x0': '5578800.0'}

 Q: What is {music by} of {Symphony No. 2}, that has {L1 speaker of} is {Swedish} ?
 SPARQL: SELECT ?answer WHERE { wd:Q210577 wdt:P86 ?answer . ?answer wdt:P103 wd:Q9027}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Symphony No. 2', 'p': 'music by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'L1 speaker of', 'o': 'Swedish'}}

 Q: What is {member of sports team} of {Javier Zanetti} that is {end time} is {1995-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q52876 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1995')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Javier Zanetti', 'p': 'member of sports team', 'o': '?x0', 't': '1995'}

 Q: What is {date of foundation or creation} of {citizen of} of {Alan Bond} ?
 SPARQL: SELECT ?answer WHERE { wd:Q550179 wdt:P27 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'created', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Bond', 'p': 'citizen of', 'o': '$y0'}}

 Q: What is the {siege} for {conflict} of {Cardinal Richelieu}
 SPARQL:  select distinct ?obj where { wd:Q26702 wdt:P607 ?obj . ?obj wdt:P31 wd:Q188055 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cardinal Richelieu', 'p': 'battle', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'siege'}}

 Q: What is {favorite player} of {writer} of {Think Like a Freak} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18786735 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'favorite player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Think Like a Freak', 'p': 'writer', 'o': '$y0'}}

 Q: Which is the flag carrier which contains the word qantas in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q721639 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'qantas')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flag carrier'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'qantas'}}

 Q: what is the {start time} for {Plácido Domingo} has {spouse} as {Marta Domingo} ?
 SPARQL: SELECT ?value WHERE { wd:Q130853 p:P26 ?s . ?s ps:P26 wd:Q18206431 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Placido Domingo', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Marta Domingo'}}}

 Q: What is the genetic association with the {post-traumatic stress disorder} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q202387 wdt:P2293 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'post-traumatic stress disorder', 'p': 'genetic association', 'o': '?x0'}

 Q: What is {located in time zone} of {Rhodes} that is {valid in period} is {daylight saving time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43048 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rhodes', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'daylight saving time'}}}

 Q: What is the {business} for {parent organization} of {American Airlines}
 SPARQL:  select distinct ?obj where { wd:Q32396 wdt:P749 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Airlines', 'p': 'parent organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: what is the {follows} for {Princess Mononoke} has {award received} as {Animation Kobe Theatrical Film Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q186572 p:P166 ?s . ?s ps:P166 wd:Q19830564 . ?s pq:P155 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Princess Mononoke', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Animation Kobe Theatrical Film Award'}}}

 Q: What is {position held} of {Austen Chamberlain} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q188999 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Austen Chamberlain', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Austen Chamberlain', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {nominated for} of {Carole Lombard} that is {for work} is {My Man Godfrey} ?
 SPARQL: SELECT ?obj WHERE { wd:Q207739 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1811134 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carole Lombard', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'My Man Godfrey'}}}

 Q: What is the {high-speed railway line} with the {MAX(speed limit)} whose {owned by} is {Réseau Ferré de France}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q858485 . ?ent wdt:P3086 ?obj . ?ent wdt:P127 wd:Q1071978 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'speed limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'high-speed railway line', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'Reseau Ferre de France'}}}

 Q: What is {civilisation} of {place of activity} of {Clement XI} ?
 SPARQL: SELECT ?answer WHERE { wd:Q129967 wdt:P937 ?X . ?X wdt:P2596 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'civilisation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement XI', 'p': 'place of activity', 'o': '$y0'}}

 Q: Which is the place of birth for Chengguan District?
 SPARQL: select distinct ?answer where { ?answer wdt:P19 wd:Q1026100}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of birth', 'o': 'Chengguan District'}

 Q: What is Laura Kenny's Cycling Quotient female cyclist ID?
 SPARQL: select distinct ?answer where { wd:Q272598 wdt:P2709 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Laura Kenny', 'p': 'Cycling Quotient female cyclist ID', 'o': '?x0'}

 Q: What is <Queensland place ID> of <Brisbane> ?
 SPARQL: select distinct ?answer where { wd:Q34932 wdt:P3257 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brisbane', 'p': 'Queensland place ID', 'o': '?x0'}

 Q: What is {position held} of {Stephen of England} that is {start time} is {1141-11-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q60849 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1141')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Stephen of England', 'p': 'position held', 'o': '?x0', 't': '1141'}

 Q: What was Svante August Arrhenius nominated for in 1912?
 SPARQL: SELECT ?obj WHERE { wd:Q80956 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1912')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Svante August Arrhenius', 'p': 'nominated for', 'o': '?x0', 't': '1912'}

 Q: what is the {for work} for {J. K. Simmons} has {award received} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q150482 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'J. K. Simmons', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: what is the {point in time} for {Camilo José Cela} has {award received} as {Princess of Asturias Literary Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q132589 p:P166 ?s . ?s ps:P166 wd:Q3332454 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Camilo José Cela', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Princess of Asturias Literary Prize'}, 't': '?x0'}

 Q: What is the {conflict} for {time period} of {World War II}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2348 wd:Q362 . ?sbj wdt:P31 wd:Q180684 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'WWII', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conflict'}}

 Q: What is {assembly method} of {antonym of} of {daylight} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16491 wdt:P461 ?X . ?X wdt:P2079 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'assembly method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'daylight', 'p': 'antonym', 'o': '$y0'}}

 Q: What genre in film is Lisa Marie Presley in, that started in 1-1-1950?
 SPARQL: SELECT ?answer WHERE { wd:Q237324 wdt:P136 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1950'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lisa Marie Presley', 'p': 'genre', 'o': '?x0', 't': '1950'}

 Q: What is the {residence} and the {occupation} of {Martin_Garrix} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q14544318 wdt:P551 ?ans_1 . wd:Q14544318 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Martin Garrix', 'p': 'residence', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Martin Garrix', 'p': 'occupation', 'o': '?x1'}]

 Q: What is the {British crown dependency} for {currency} of {pound sterling}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q25224 . ?sbj wdt:P31 wd:Q185086 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'pound sterling', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'British crown dependency'}}

 Q: Which is the route of administration of erythromycin?
 SPARQL: select distinct ?answer where { wd:Q213511 wdt:P636 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'erythromycin', 'p': 'route of administration', 'o': '?x0'}

 Q: was William III of England religion Protestantism cassock?
 SPARQL: ASK WHERE { wd:Q129987 wdt:P140 wd:Q23540 . wd:Q129987 wdt:P140 wd:Q324708 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'William III', 'p': 'religion', 'o': '?x0', '?x0': 'Protestantism'}, {'h': 'IS', 'v': '?x1', 's': 'William III', 'p': 'religion', 'o': '?x1', '?x1': 'cassock'}]

 Q: Who is the  {plantation} for {architect} of {Thomas Jefferson}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q11812 . ?sbj wdt:P31 wd:Q188913 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Thomas Jefferson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'plantation'}}

 Q: What is {elected in} and {electoral district} of {{Edmund Barton} has {position held} as {Member of the Australian House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q23342 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P2715 ?value1 . ?s pq:P768 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edmund Barton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'electoral district', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edmund Barton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}]

 Q: What is the {Christian Church} for {office held by head of the organisation} of {pope}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2388 wd:Q19546 . ?sbj wdt:P31 wd:Q34651 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'pope', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian Church'}}

 Q: Give me {fertility deity} that {official residence} {Mount Olympus} and which that starts with {'h'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23015914 . ?sbj wdt:P263 wd:Q80344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fertility deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official residence', 'o': 'Mount Olympus'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: What is SlideShare username of Kennedy Space Center ?
 SPARQL: select distinct ?answer where { wd:Q48821 wdt:P4016 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kennedy Space Center', 'p': 'SlideShare username', 'o': '?x0'}

 Q: Tell me the dialect of the writing system of written Cantonese that contains the word cantonese in it's name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33384 . ?sbj wdt:P282 wd:Q2472605 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cantonese')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'written Cantonese'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cantonese'}}

 Q: What is the {literary work} for {language of work or name} of {English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q1860 . ?sbj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: What research institute is a subsidiary of Brown University?
 SPARQL:  select distinct ?obj where { wd:Q49114 wdt:P355 ?obj . ?obj wdt:P31 wd:Q31855 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brown University', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research institute'}}

 Q: What is the {primary color} for {color} of {ruby}
 SPARQL:  select distinct ?obj where { wd:Q43088 wdt:P462 ?obj . ?obj wdt:P31 wd:Q166902 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ruby', 'p': 'color', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'primary color'}}

 Q: Is it true that Wikidata time precision of the million years equals to 3.6?
 SPARQL: ASK WHERE { wd:Q24004475 wdt:P2803 ?obj filter(?obj = 3.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'million years', 'p': 'Wikidata time precision', 'o': '?x0', '?x0': '3.6'}

 Q: What is {pronunciation audio} of {main topic} of {structure of the Earth} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1664027 wdt:P1269 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Earth's structure", 'p': 'main topic', 'o': '$y0'}}

 Q: What is {subtopic of} of {history of Louisiana}, that has {divided into} is {Iberia Parish} ?
 SPARQL: SELECT ?answer WHERE { wd:Q656802 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q504415}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Louisiana', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Iberia Parish'}}

 Q: What is {real gross domestic product growth rate} of {Belize} that is {point in time} is {2016-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q242 p:P2219 ?s . ?s ps:P2219 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Belize', 'p': 'real gross domestic product growth rate', 'o': '?x0', 't': '2016'}

 Q: Is the number of season of the Malibu Country less than 1.2?
 SPARQL: ASK WHERE { wd:Q210665 wdt:P2437 ?obj filter(?obj < 1.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Malibu Country', 'p': 'number of seasons', 'o': '?x0', '?x0': '1.2'}

 Q: What is the {abdication} for {significant person} of {Juan Carlos I}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3342 wd:Q19943 . ?sbj wdt:P31 wd:Q207549 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Juan Carlos I', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abdication'}}

 Q: What is the {dam} with the {MAX(installed capacity)} whose {instance of} is {hydroelectric power station}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12323 . ?ent wdt:P2109 ?obj . ?ent wdt:P31 wd:Q15911738 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'installed capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dam', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hydroelectric power station'}}}

 Q: Who is the person in the time period of Ancient Egypt?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2348 wd:Q11768 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Ancient Egypt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is the {fictional family} for {family} of {Donald Duck}
 SPARQL:  select distinct ?obj where { wd:Q6550 wdt:P53 ?obj . ?obj wdt:P31 wd:Q15331236 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Donald Duck', 'p': 'family', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional family'}}

 Q: What is the {human} for {director} of {Who Framed Roger Rabbit}
 SPARQL:  select distinct ?obj where { wd:Q379873 wdt:P57 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Who Framed Roger Rabbit', 'p': 'director', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the diplomatic relation of Limp Bizkit's place of origin?
 SPARQL: SELECT ?answer WHERE { wd:Q240767 wdt:P495 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Limp Bizkit', 'p': 'place of origin', 'o': '$y0'}}

 Q: What is the Magnus Carlsen participant's chess competition?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q106807 . ?sbj wdt:P31 wd:Q59387863 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Magnus Carlsen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chess competition'}}

 Q: Which is the Companies House officer ID for Boris Johnson?
 SPARQL: select distinct ?answer where { wd:Q180589 wdt:P5297 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Boris Johnson', 'p': 'Companies House officer ID', 'o': '?x0'}

 Q: What is {fields} of {published in journal} of {Laser photodetachment of O3 -} ?
 SPARQL: SELECT ?answer WHERE { wd:Q31929734 wdt:P1433 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fields', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Laser photodetachment of O3 -', 'p': 'published in', 'o': '$y0'}}

 Q: What is the {eye color} and the {hair color} of {Brigitte_Bardot} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q36268 wdt:P1340 ?ans_1 . wd:Q36268 wdt:P1884 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Brigitte Bardot', 'p': 'eyes', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Brigitte Bardot', 'p': 'hair color', 'o': '?x1'}]

 Q: What is <FIS freestyle skier ID> of <Mikaël Kingsbury> ?
 SPARQL: select distinct ?answer where { wd:Q430936 wdt:P2774 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mikaël Kingsbury', 'p': 'FIS freestyle skier ID', 'o': '?x0'}

 Q: what is the {point in time} for {Chinua Achebe} has {nominated for} as {Neustadt International Prize for Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q155845 p:P1411 ?s . ?s ps:P1411 wd:Q580574 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Chinua Achebe', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Neustadt International Prize for Literature'}, 't': '?x0'}

 Q: What is the {flammable solid} with the {MAX(pKa)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21073024 . ?ent wdt:P1117 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'pKa', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable solid'}}

 Q: What is the {fictional human} for {narrator} of {The Catcher in the Rye}
 SPARQL:  select distinct ?obj where { wd:Q183883 wdt:P2438 ?obj . ?obj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Catcher in the Rye', 'p': 'narrator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional human'}}

 Q: What is ISO 3166-1 alpha-3 code for Réunion ?
 SPARQL: select distinct ?answer where { wd:Q17070 wdt:P298 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Réunion', 'p': 'ISO 3166-1 alpha-3 code', 'o': '?x0'}

 Q: Did {Louis_XVI_of_France} {sibling} {Louis XIV of France} and {Charles X of France} ?
 SPARQL: ASK WHERE { wd:Q7732 wdt:P3373 wd:Q7742 . wd:Q7732 wdt:P3373 wd:Q7758 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Louis XVI', 'p': 'sibling', 'o': '?x0', '?x0': 'Louis XIV of France'}, {'h': 'IS', 'v': '?x1', 's': 'Louis XVI', 'p': 'sibling', 'o': '?x1', '?x1': 'Charles X of France'}]

 Q: What is <season of club or team> of <Chicago Bulls> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P5138 wd:Q128109}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'season of club or team', 'o': 'Bulls'}

 Q: How many bases does a quadrilateral have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3263 wd:Q36810 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'base', 'o': 'quadrilateral'}

 Q: What is {owner} of {player of} of {Milt Palacio} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2449958 wdt:P54 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milt Palacio', 'p': 'player of', 'o': '$y0'}}

 Q: Which is the Revised Romanization for Jangsu?
 SPARQL: select distinct ?answer where { wd:Q498810 wdt:P2001 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jangsu', 'p': 'Revised Romanization', 'o': '?x0'}

 Q: What is {country of citizenship} of {Hedy Lamarr} that is {end time} is {1953-4-10} ?
 SPARQL: SELECT ?obj WHERE { wd:Q49034 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hedy Lamarr', 'p': 'citizenship', 'o': '?x0', 't': '1953'}

 Q: What is {has grammatical person} of {language read} of {George Michael} ?
 SPARQL: SELECT ?answer WHERE { wd:Q130311 wdt:P1412 ?X . ?X wdt:P5110 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical person', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Michael', 'p': 'language', 'o': '$y0'}}

 Q: Tell me which is the operation which contains the word product in their name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3884033 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'product')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'product'}}

 Q: What is {physically interacts with} of {drug interaction} of {erythromycin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q213511 wdt:P769 ?X . ?X wdt:P129 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'physically interacts with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erythromycin', 'p': 'drug interaction', 'o': '$y0'}}

 Q: What are the scientific theory which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3239681 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scientific theory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is <decays to> of <helium-4> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P816 wd:Q1151346}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'decays to', 'o': 'helium-4'}

 Q: What is {has moon} of {parent body} of {Messier 7} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11234 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has moon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 7', 'p': 'parent body', 'o': '$y0'}}

 Q: What is the {practiced by} and the {main regulatory text} of {Taoism} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q9598 wdt:P3095 ?ans_1 . wd:Q9598 wdt:P92 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Taoism', 'p': 'practiced by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Taoism', 'p': 'main regulatory text', 'o': '?x1'}]

 Q: What is {shares border with} of {Andorra} that is {statement is subject of} is {Andorra–France border} ?
 SPARQL: SELECT ?obj WHERE { wd:Q228 p:P47 ?s . ?s ps:P47 ?obj . ?s pq:P805 wd:Q2009420 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andorra', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Andorra-France border'}}}

 Q: What toponym of the Spitzer Space Telescope has the forename of Lyman?
 SPARQL: SELECT ?answer WHERE { wd:Q201953 wdt:P138 ?answer . ?answer wdt:P735 wd:Q19830595}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Spitzer Space Telescope', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'forename', 'o': 'Lyman'}}

 Q: Give me {type of statistic} that contains the word {variance} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47103999 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'variance')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of statistic'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'variance'}}

 Q: What is {date of death} and {date of birth} of {{Isabella I of Castile} has {child} as {John, Prince of Asturias}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q45859 p:P40 ?s . ?s ps:P40 wd:Q381871 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'John, Prince of Asturias'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'John, Prince of Asturias'}}}]

 Q: What was the population of Navotas, on January 1, 1939?
 SPARQL: SELECT ?obj WHERE { wd:Q17179 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1939')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Navotas', 'p': 'population', 'o': '?x0', 't': '1939'}

 Q: What is {headquarters location} of {Symantec} that is {country} is {United States of America} ?
 SPARQL: SELECT ?obj WHERE { wd:Q677085 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P17 wd:Q30 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Symantec', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'United States of America'}}}

 Q: what is the {replaces} for {Bonaventure} has {position held} as {cardinal-bishop} ?
 SPARQL: SELECT ?value WHERE { wd:Q43746 p:P39 ?s . ?s ps:P39 wd:Q1729113 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonaventure', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'cardinal-bishop'}}}

 Q: What is {name in official language} of {writes language} of {Giovanni Battista Rubini} ?
 SPARQL: SELECT ?answer WHERE { wd:Q941040 wdt:P1412 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name in official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giovanni Battista Rubini', 'p': 'language', 'o': '$y0'}}

 Q: what is the {point in time} for {David Robinson} has {award received} as {Sports Illustrated Sportsperson of the Year} ?
 SPARQL: SELECT ?value WHERE { wd:Q211876 p:P166 ?s . ?s ps:P166 wd:Q1653207 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'David Robinson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Sports Illustrated Sportsperson of the Year'}, 't': '?x0'}

 Q: What is the { determination method } for { Parkinson's disease } { genetic association } like { RIT2 }?
 SPARQL: SELECT ?value WHERE { wd:Q11085 p:P2293 ?s . ?s ps:P2293 wd:Q18031133 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Parkinson's disease", 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'RIT2'}}}

 Q: What award did Cornelia Funke receive in 2004?
 SPARQL: SELECT ?obj WHERE { wd:Q57971 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cornelia Funke', 'p': 'award', 'o': '?x0', 't': '2004'}

 Q: Tell me rapid transit  whose name has the word subway in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5503 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subway')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rapid transit'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'subway'}}

 Q: What is the official language of the topic of the history of Jamaica?
 SPARQL: SELECT ?answer WHERE { wd:Q1994210 wdt:P1269 ?X . ?X wdt:P37 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Jamaica', 'p': 'topic of', 'o': '$y0'}}

 Q: What is the {doctoral student} and the {doctoral advisor} of {Isaac_Newton} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q935 wdt:P185 ?ans_1 . wd:Q935 wdt:P184 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Isaac Newton', 'p': 'doctoral student', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Isaac Newton', 'p': 'doctoral advisor', 'o': '?x1'}]

 Q: Who was the rector of Autonomous University of Barcelona from 2009-1-14?
 SPARQL: SELECT ?obj WHERE { wd:Q43452 p:P1075 ?s . ?s ps:P1075 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Autonomous University of Barcelona', 'p': 'rector', 'o': '?x0', 't': '2009'}

 Q: Which is the Theatricalia theatre ID for Budapest?
 SPARQL: select distinct ?answer where { wd:Q1781 wdt:P2468 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Budapest', 'p': 'Theatricalia theatre ID', 'o': '?x0'}

 Q: What is succeded by Three Kingdoms whose used money is ancient Chinese coinage?
 SPARQL: SELECT ?answer WHERE { wd:Q185043 wdt:P156 ?answer . ?answer wdt:P38 wd:Q4752816}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Three Kingdoms', 'p': 'succeded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used money', 'o': 'ancient Chinese coinage'}}

 Q: What territory was Wrocław a part of during 1138?
 SPARQL: SELECT ?obj WHERE { wd:Q1799 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1138')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wrocław', 'p': 'in', 'o': '?x0', 't': '1138'}

 Q: What is {nominated for} of {Robert Downey, Jr.} that is {for work} is {Chaplin} ?
 SPARQL: SELECT ?obj WHERE { wd:Q165219 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q556967 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Downey', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Chaplin'}}}

 Q: What are the postal codes for Sioux Falls?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q131335 wdt:P281 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Sioux Falls', 'p': 'postal code', 'o': '?x0'}

 Q: Give me {territory of Australia} that {replaced by} {North Australia} and which that starts with {'n'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q14192199 . ?sbj wdt:P1366 wd:Q15640003 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'territory of Australia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'North Australia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: Where is the headquarters of Hewlett-Packard with the zip code 94304?
 SPARQL: SELECT ?obj WHERE { wd:Q80978 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P281 ?x filter(contains(?x,'94304')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hewlett-Packard', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'zip code', 'o': '94304'}}}

 Q: What is <Images d'Art artwork ID> of <Mona Lisa> ?
 SPARQL: select distinct ?answer where { wd:Q12418 wdt:P4761 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mona Lisa', 'p': "Images d'Art artwork ID", 'o': '?x0'}

 Q: what is the {start time} for {PayPal} has {parent organization} as {eBay} ?
 SPARQL: SELECT ?value WHERE { wd:Q483959 p:P749 ?s . ?s ps:P749 wd:Q58024 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'PayPal', 'p': 'parent organization', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'parent organization', 'o': 'eBay'}}}

 Q: what is military decoration starts with w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1788716 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military decoration'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: When did member of sports team of Franz Beckenbauer and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q4457 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Which presidential election had the most eligible voters?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q858439 . ?ent wdt:P1867 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'eligible voters', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'presidential election'}}

 Q: Which is the artist-info artist ID for Camille Claudel?
 SPARQL: select distinct ?answer where { wd:Q120582 wdt:P5489 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Camille Claudel', 'p': 'artist-info artist ID', 'o': '?x0'}

 Q: Name the country maintaining the diplomatic relationship with Soviet Union
 SPARQL:  select distinct ?obj where { wd:Q15180 wdt:P530 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Soviet Union', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Which sequel is Kingdom of Sardinia, whose chef-lieu is in Rome?
 SPARQL: SELECT ?answer WHERE { wd:Q165154 wdt:P156 ?answer . ?answer wdt:P36 wd:Q220}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kingdom of Sardinia', 'p': 'sequel is', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chef-lieu', 'o': 'Rome'}}

 Q: Mention the location of headquarters of University of Toronto which has coordinate location 43.661666666667 -79.395?
 SPARQL: SELECT ?obj WHERE { wd:Q180865 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P625 ?x filter(contains(?x,'43.661666666667 -79.395')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of Toronto', 'p': 'headquarters', 'o': '?x0'}

 Q: What's the active ingredient in fentanyl?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3781 wd:Q407541 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'active ingredient', 'o': 'fentanyl'}

 Q: What is <Australian Poetry Library poet ID> of <Henry Parkes> ?
 SPARQL: select distinct ?answer where { wd:Q1607143 wdt:P5465 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Henry Parkes', 'p': 'Australian Poetry Library poet ID', 'o': '?x0'}

 Q: Is the isospin quantum number of pion less than 1.2?
 SPARQL: ASK WHERE { wd:Q4097 wdt:P1126 ?obj filter(?obj < 1.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'pion', 'p': 'isospin quantum number', 'o': '?x0', '?x0': '1.2'}

 Q: Which is the big city in the continent of North America that starts with the letter v?:
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1549591 . ?sbj wdt:P30 wd:Q49 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'big city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'North America'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {operating profit} of {managed by} of {Taiwan High Speed Rail} ?
 SPARQL: SELECT ?answer WHERE { wd:Q706198 wdt:P137 ?X . ?X wdt:P3362 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operating profit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taiwan High Speed Rail', 'p': 'managed by', 'o': '$y0'}}

 Q: What is the {enterprise} for {business division} of {Walt Disney Parks and Resorts}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P199 wd:Q1431781 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'business division', 'o': 'Disney Parks', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'company'}}

 Q: What is structure replaced by World Trade Center ?
 SPARQL: select distinct ?answer where { wd:Q11235 wdt:P167 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'World Trade Center', 'p': 'structure replaced by', 'o': '?x0'}

 Q: Which is the resource which contains the word natural in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1554231 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'natural')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'resource'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'natural'}}

 Q: What is the gender expression of Tatum O'Neal, the American actress with the shortened name Аял?
 SPARQL: SELECT ?answer WHERE { wd:Q230138 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'Аял'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Tatum O'Neal", 'p': 'gender expression', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'аял'}}

 Q: What is the Erdos number for G.H. Hardy?
 SPARQL: select distinct ?answer where { wd:Q184337 wdt:P2021 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'G.H. Hardy', 'p': 'Erdos number', 'o': '?x0'}

 Q: Which is the inception for The Peasants?
 SPARQL: select distinct ?answer where { wd:Q2896338 wdt:P571 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Peasants', 'p': 'inception', 'o': '?x0'}

 Q: What is the work of Annibale Carracci, whose patron saint is Luke the Evangelist?
 SPARQL: SELECT ?answer WHERE { wd:Q7824 wdt:P106 ?answer . ?answer wdt:P417 wd:Q128538}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Annibale Carracci', 'p': 'work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Luke the Evangelist'}}

 Q: Which flammable solid has the highest flammable limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21073024 . ?ent wdt:P2203 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'upper flammable limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable solid'}}

 Q: What start located in the constellation of Centaurus has the least radial velocity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q523 . ?ent wdt:P2216 ?obj . ?ent wdt:P59 wd:Q8844} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'radial velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'star', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Centaurus'}}}

 Q: Who is the person that had Adelaide as place of death?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P20 wd:Q5112 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of death', 'o': 'Adelaide', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is confused with semi-trailer truck born on 1977-2-1?
 SPARQL: SELECT ?answer WHERE { wd:Q1936841 wdt:P1889 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1977'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'semi-trailer truck', 'p': 'confused with', 'o': '?x0', 't': '1977'}

 Q: What is the {college} for {affiliation} of {McGill University}
 SPARQL:  select distinct ?obj where { wd:Q201492 wdt:P1416 ?obj . ?obj wdt:P31 wd:Q189004 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'McGill University', 'p': 'affiliation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college'}}

 Q: What is ethanol's UN class?
 SPARQL: select distinct ?answer where { wd:Q153 wdt:P874 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethanol', 'p': 'UN class', 'o': '?x0'}

 Q: what is the {statement is subject of} for {The Deer Hunter} has {award received} as {Academy Award for Best Picture} ?
 SPARQL: SELECT ?value WHERE { wd:Q201674 p:P166 ?s . ?s ps:P166 wd:Q102427 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Deer Hunter', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Picture'}}}

 Q: What is {working language} of {deity of} of {Yahweh} ?
 SPARQL: SELECT ?answer WHERE { wd:Q766677 wdt:P1049 ?X . ?X wdt:P2936 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'working language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yahweh', 'p': 'deity of', 'o': '$y0'}}

 Q: What are the specialty which start with the letter visagie
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1047113 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'visagie')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'visagie'}}

 Q: What is the outcome of Hamad bin Khalifa Al Thani that which has been coined Univision?
 SPARQL: SELECT ?answer WHERE { wd:Q57360 wdt:P793 ?answer . ?answer wdt:P61 wd:Q731824}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hamad bin Khalifa Al Thani', 'p': 'outcome', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coined', 'o': 'Univision'}}

 Q: Which piece that contains the favorite player Plautus was written by Richard II?
 SPARQL: SELECT ?answer WHERE { wd:Q649562 wdt:P50 ?answer . ?answer wdt:P737 wd:Q47160}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Richard II', 'p': 'written by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'favorite player', 'o': 'Plautus'}}

 Q: What is {genetic association} of {tuberculosis}, that has {start coordinate} is {103109431} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12204 wdt:P2293 ?answer . ?answer wdt:P644 ?x FILTER(contains(?x,'103109431'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'tuberculosis', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'start coordinate', 'o': '103109431'}}

 Q: What are the mode of transport that starts with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q334166 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mode of transport'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {educated at} of {Josef Mengele} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q57109 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josef Mengele', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josef Mengele', 'p': 'educated at', 'o': '$y0'}}]

 Q: Did {Holly_Holm} {competition class} {bantamweight}?
 SPARQL: ASK WHERE { wd:Q2414305 wdt:P2094 wd:Q948780 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Holly Holm', 'p': 'competition class', 'o': '?x0', '?x0': 'bantamweight'}]

 Q: what is the {point in time} for {Zibo} has {twinned administrative body} as {Gwangju} ?
 SPARQL: SELECT ?value WHERE { wd:Q198370 p:P190 ?s . ?s ps:P190 wd:Q42069 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Zibo', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Gwangju'}, 't': '?x0'}

 Q: What is the natural product of taxon from Mammuthus?
 SPARQL: select distinct ?answer where { ?answer wdt:P1582 wd:Q36715}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'natural product of taxon', 'o': 'Mammuthus'}

 Q: Is the average short length of the Russian Ark 96?
 SPARQL: ASK WHERE { wd:Q59721 wdt:P2208 ?obj filter(?obj = 96) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Russian Ark', 'p': 'average shot length', 'o': '?x0', '?x0': '96'}

 Q: What is list of works for Charlie Chaplin ?
 SPARQL: select distinct ?answer where { wd:Q882 wdt:P1455 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charlie Chaplin', 'p': 'list of works', 'o': '?x0'}

 Q: What was Patton Oswalt nominated for in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q374065 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Patton Oswalt', 'p': 'nominated for', 'o': '?x0', 't': '2011'}

 Q: How much money did Sully Prudhomme win when they received the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q42247 p:P166 ?s . ?s ps:P166 wd:Q37922 . ?s pq:P2121 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sully Prudhomme', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Nobel Prize in Literature'}}}

 Q: What is the executive body of Cyprus?
 SPARQL: select distinct ?answer where { wd:Q229 wdt:P208 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cyprus', 'p': 'executive body', 'o': '?x0'}

 Q: Tell me the award received by Arthur Smith Woodward in 1924?
 SPARQL: SELECT ?obj WHERE { wd:Q542973 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1924')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arthur Smith Woodward', 'p': 'award received', 'o': '?x0', 't': '1924'}

 Q: tell  me social service that name has the word social in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16605260 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'social')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social service'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'social'}}

 Q: what is the {applies to part} for {Nile} has {origin of the watercourse} as {Lake Tana} ?
 SPARQL: SELECT ?value WHERE { wd:Q3392 p:P885 ?s . ?s ps:P885 wd:Q116685 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nile', 'p': 'origin of the watercourse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'origin of the watercourse', 'o': 'Lake Tana'}}}

 Q: Tell me the festival which starts with the letter v!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q132241 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'festival'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the {National Society of Film Critics Award} for {nominated for} of {Javier Bardem}
 SPARQL:  select distinct ?obj where { wd:Q134895 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q21866939 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Javier Bardem', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'National Society of Film Critics Award'}}

 Q: What metropolis is the sister city of Bern?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q70 . ?sbj wdt:P31 wd:Q200250 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Bern', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolis'}}

 Q: Which is the business that has as parent organization the Oracle Corporation?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q19900 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Oracle Corporation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: which is the {point in time} for {Liechtenstein} that has {population} as {36388.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q347 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'36388.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Liechtenstein', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '36388.0'}, 't': '?x0'}

 Q: Tell me the security agency which starts with the letter s!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3238445 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'security agency'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {unincorporated territory} for {anthem} of {The Star-Spangled Banner}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P85 wd:Q44696 . ?sbj wdt:P31 wd:Q783733 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'Star-Spangled Banner', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unincorporated territory'}}

 Q: What is {position held} of {Robert I of Scotland} that is {replaced by} is {David II of Scotland} ?
 SPARQL: SELECT ?obj WHERE { wd:Q187312 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q239486 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert I of Scotland', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'David II of Scotland'}}}

 Q: Did Neil deGrasse Tyson win the NASA Distinguished Service Medal and the Public Welfare Medal?
 SPARQL: ASK WHERE { wd:Q310903 wdt:P166 wd:Q4286902 . wd:Q310903 wdt:P166 wd:Q4811818 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Neil deGrasse Tyson', 'p': 'win', 'o': '?x0', '?x0': 'NASA Distinguished Service Medal'}, {'h': 'IS', 'v': '?x1', 's': 'Neil deGrasse Tyson', 'p': 'win', 'o': '?x1', '?x1': 'Public Welfare Medal'}]

 Q: What is the {taxon} with the {MAX(basic reproduction number)} whose {found in taxon} is {Homo sapiens}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P3492 ?obj . ?ent wdt:P703 wd:Q15978631 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'basic reproduction number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'found in taxon', 'o': 'Homo sapiens'}}}

 Q: Is the standard enthalpy of formation for ethanol less than -333.12?
 SPARQL: ASK WHERE { wd:Q153 wdt:P3078 ?obj filter(?obj < -333.12) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'ethanol', 'p': 'standard enthalpy of formation', 'o': '?x0', '?x0': '-333.12'}

 Q: What is {notable work} of {Christopher Hitchens} and {publication date}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P577 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'notable work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}]

 Q: What is the {attempted murder} for {conflict} of {Guy Fawkes}
 SPARQL:  select distinct ?obj where { wd:Q13898 wdt:P607 ?obj . ?obj wdt:P31 wd:Q4818169 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Guy Fawkes', 'p': 'conflict', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'attempted murder'}}

 Q: Is the heat capacity of benzoic acid equal to 102.7?
 SPARQL: ASK WHERE { wd:Q191700 wdt:P2056 ?obj filter(?obj = 102.7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'benzoic acid', 'p': 'heat capacity', 'o': '?x0', '?x0': '102.7'}

 Q: Did {Chris_Martin} {instrument} {guitar}?
 SPARQL: ASK WHERE { wd:Q712860 wdt:P1303 wd:Q6607 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chris Martin', 'p': 'instrument', 'o': '?x0', '?x0': 'guitar'}]

 Q: What is {cast member} of {Roots} that is {character role} is {Kunta Kinte} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1247168 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q636142 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cast member', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roots', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'character role', 'o': 'Kunta Kinte'}}}

 Q: What is the {record label} and the {discography} of {Sex_Pistols} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q82545 wdt:P264 ?ans_1 . wd:Q82545 wdt:P358 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Sex Pistols', 'p': 'record label', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Sex Pistols', 'p': 'discography', 'o': '?x1'}]

 Q: How many seats are in prefectural assembly?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q28362371 . ?ent wdt:P1342 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of seats', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prefectural assembly'}}

 Q: What is the {single-family detached home} for {architect} of {Frank Lloyd Wright}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q5604 . ?sbj wdt:P31 wd:Q1307276 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Frank Lloyd Wright', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single-family detached home'}}

 Q: what is the {start time} for {Nicolas Jean-de-Dieu Soult} has {position held} as {head of government of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q296023 p:P39 ?s . ?s ps:P39 wd:Q15135541 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean-de-Dieu Soult', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'head of government of France'}}}

 Q: Did {Heart} {connects with} {artery} and {human body} ?
 SPARQL: ASK WHERE { wd:Q1072 wdt:P2789 wd:Q9655 . wd:Q1072 wdt:P2789 wd:Q23852 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'heart', 'p': 'connects with', 'o': '?x0', '?x0': 'arteries'}, {'h': 'IS', 'v': '?x1', 's': 'heart', 'p': 'connects with', 'o': '?x1', '?x1': 'human body'}]

 Q: what is the {end time} for {Jeannette Rankin} has {position held} as {United States representative} ?
 SPARQL: SELECT ?value WHERE { wd:Q232407 p:P39 ?s . ?s ps:P39 wd:Q13218630 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeannette Rankin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States representative'}}}

 Q: The memory capacity of the Nokia X is 409.6, correct?
 SPARQL: ASK WHERE { wd:Q15299648 wdt:P2928 ?obj filter(?obj = 409.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Nokia X', 'p': 'memory capacity', 'o': '?x0', '?x0': '409.6'}

 Q: Is the number of survivors of PIA Flight 661 less than 0?
 SPARQL: ASK WHERE { wd:Q100021 wdt:P1561 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'PIA Flight 661', 'p': 'number of survivors', 'o': '?x0', '?x0': '0.0'}

 Q: Was the number of casualties of the King's Cross fire equal to 100?
 SPARQL: ASK WHERE { wd:Q58395 wdt:P1590 ?obj filter(?obj = 100) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "King's Cross fire", 'p': 'number of casualties', 'o': '?x0', '?x0': '100'}

 Q: what is the {end time} for {Vicente Guerrero} has {position held} as {President of Mexico} ?
 SPARQL: SELECT ?value WHERE { wd:Q315618 p:P39 ?s . ?s ps:P39 wd:Q628004 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vicente Guerrero', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Mexico'}}}

 Q: What is the taxonomic rank of the blue whale?
 SPARQL:  select distinct ?obj where { wd:Q42196 wdt:P105 ?obj . ?obj wdt:P31 wd:Q427626 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'blue whale', 'p': 'taxonomic rank', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxonomic rank'}}

 Q: What is the {state-owned enterprise} for {item operated} of {Airbus A330}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P121 wd:Q6478 . ?sbj wdt:P31 wd:Q270791 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operates', 'o': 'Airbus A330', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state-owned enterprise'}}

 Q: Give me {international association football clubs cup} that {anthem} {UEFA Champions League Anthem} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542757 . ?sbj wdt:P85 wd:Q1453101 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international association football clubs cup', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'UEFA Champions League Anthem'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Which is the chronology which starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q130788 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chronology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: what is the {point in time} for {Pau Gasol} has {award received} as {Gold Medal of Work Merit (Spain)} ?
 SPARQL: SELECT ?value WHERE { wd:Q193052 p:P166 ?s . ?s ps:P166 wd:Q39946570 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pau Gasol', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Gold Medal of Work Merit (Spain)'}, 't': '?x0'}

 Q: What is {published by} of {works for} of {Harold James Mowat} ?
 SPARQL: SELECT ?answer WHERE { wd:Q54453167 wdt:P108 ?X . ?X wdt:P123 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold James Mowat', 'p': 'works for', 'o': '$y0'}}

 Q: Did {Al_Capone} {religion} {Melkite Greek Catholic Church}?
 SPARQL: ASK WHERE { wd:Q80048 wdt:P140 wd:Q64885 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Al Capone', 'p': 'religion', 'o': '?x0', '?x0': 'Melkite Greek Catholic Church'}]

 Q: What is the Royal Society ID of Jocelyn Bell Burnell?
 SPARQL: select distinct ?answer where { wd:Q233974 wdt:P2070 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jocelyn Bell Burnell', 'p': 'Royal Society ID', 'o': '?x0'}

 Q: Dilma Rousseff received what award in the year 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q40722 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dilma Rousseff', 'p': 'award', 'o': '?x0', 't': '2015'}

 Q: Tell me the mathematical model that contains the word theory in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q486902 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'theory')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mathematical model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'theory'}}

 Q: Which is the DAAO ID for Louise Bourgeois?
 SPARQL: select distinct ?answer where { wd:Q159409 wdt:P1707 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Louise Bourgeois', 'p': 'DAAO ID', 'o': '?x0'}

 Q: What is the {Irinotecan} for {medical condition treated} of {colorectal cancer}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2175 wd:Q188874 . ?sbj wdt:P31 wd:Q26989371 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical condition treated', 'o': 'colorectal cancer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Irinotecan'}}

 Q: Is the minimal incubation period of Ebola in humans more or less than 1.6?
 SPARQL: ASK WHERE { wd:Q51993 wdt:P3488 ?obj filter(?obj < 1.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Ebola', 'p': 'minimal incubation period in humans', 'o': '?x0', '?x0': '1.6'}

 Q: What is <ForaDeJogo player ID> of <Eusébio> ?
 SPARQL: select distinct ?answer where { wd:Q162043 wdt:P3046 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eusébio', 'p': 'ForaDeJogo player ID', 'o': '?x0'}

 Q: What is {characters} of {famous books} of {Wolfgang Amadeus Mozart} ?
 SPARQL: SELECT ?answer WHERE { wd:Q254 wdt:P800 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wolfgang Amadeus Mozart', 'p': 'famous books', 'o': '$y0'}}

 Q: What is {academic degree} and {doctoral thesis} of {{Angela Merkel} has {educated at} as {German Academy of Sciences at Berlin}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q567 p:P69 ?s . ?s ps:P69 wd:Q49738 . ?s pq:P512 ?value1 . ?s pq:P1026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Angela Merkel', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'German Academy of Sciences at Berlin'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'thesis', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Angela Merkel', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'German Academy of Sciences at Berlin'}}}]

 Q: Who was Gale Sondergaard married to until 1971-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q233845 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1971')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gale Sondergaard', 'p': 'married to', 'o': '?x0', 't': '1971'}

 Q: What is the {literary work} for {language of work or name} of {Old English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q42365 . ?sbj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Old English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: What is <depicts Iconclass notation> of <The Garden of Earthly Delights> ?
 SPARQL: select distinct ?answer where { wd:Q321303 wdt:P1257 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Garden of Earthly Delights', 'p': 'depicts Iconclass notation', 'o': '?x0'}

 Q: tell  me American football team that home venue Lambeau Field  name has the  the word bay in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17156793 . ?sbj wdt:P115 wd:Q860790 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bay')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'American football team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'home venue', 'o': 'Lambeau Field'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'bay'}}

 Q: What is extended from and written by The Man with Two Faces?
 SPARQL: SELECT ?answer WHERE { wd:Q7750132 wdt:P144 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'written by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Man with Two Faces', 'p': 'extended from', 'o': '$y0'}}

 Q: What is {awarded} of {headed by} of {International Council for Science} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1162568 wdt:P488 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'International Council for Science', 'p': 'headed by', 'o': '$y0'}}

 Q: What is the numeric writing system that starts with the letter 'n'?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q140774 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'numeric writing system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is {Indian reservation} of {Telangana}, that has {compulsory education (minimum age)} is {6.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q677037 wdt:P131 ?answer . ?answer wdt:P3270 ?x FILTER(contains(?x,'6.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Telangana', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'compulsory education (minimum age)', 'o': '6.0'}}

 Q: What is the {G-type main-sequence star} for {child astronomical body} of {Uranus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q324 . ?sbj wdt:P31 wd:Q5864 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Uranus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: Who is the {religious identity} for {manifestation of} of {atheism}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q7066 . ?sbj wdt:P31 wd:Q4392985 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'atheism', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious identity'}}

 Q: What is the Terminologia Histologica for stem cell?
 SPARQL: select distinct ?answer where { wd:Q48196 wdt:P1694 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'stem cell', 'p': 'Terminologia Histologica', 'o': '?x0'}

 Q: What is the {medication} for {drug used for treatment} of {asthma}
 SPARQL:  select distinct ?obj where { wd:Q35869 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'asthma', 'p': 'used for treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medication'}}

 Q: What is the {ranch} for {residence} of {Ronald Reagan}
 SPARQL:  select distinct ?obj where { wd:Q9960 wdt:P551 ?obj . ?obj wdt:P31 wd:Q509028 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ronald Reagan', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ranch'}}

 Q: Who is the {local coat of arms} for {coat of arms} of {Jerusalem}
 SPARQL:  select distinct ?obj where { wd:Q1218 wdt:P237 ?obj . ?obj wdt:P31 wd:Q480260 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jerusalem', 'p': 'coat of arms', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'local coat of arms'}}

 Q: what is the {point in time} for {Rachel Carson} has {award received} as {Presidential Medal of Freedom} ?
 SPARQL: SELECT ?value WHERE { wd:Q100948 p:P166 ?s . ?s ps:P166 wd:Q17144 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Rachel Carson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Presidential Medal of Freedom'}, 't': '?x0'}

 Q: What { partner } of { Kirsten Dunst } is { start time } { 2002 - 0 }?
 SPARQL: SELECT ?obj WHERE { wd:Q76478 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kirsten Dunst', 'p': 'partner', 'o': '?x0', 't': '2002'}

 Q: Which chemical tanker has the largest payload mass?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15254 . ?ent wdt:P4519 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'payload mass', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical tanker'}}

 Q: What is {twin town} of {Chiba}, that has {has shires} is {Shengze} ?
 SPARQL: SELECT ?answer WHERE { wd:Q170616 wdt:P190 ?answer . ?answer wdt:P150 wd:Q13821942}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chiba', 'p': 'twin town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has shires', 'o': 'Shengze'}}

 Q: What is the {snooker tournament} for {location} of {Indore}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q66616 . ?sbj wdt:P31 wd:Q17299750 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Indore', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'snooker tournament'}}

 Q: What is {isn't} of {Dave Marsh}, that has {biological sex} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q753476 wdt:P1889 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dave Marsh', 'p': "isn't", 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'biological sex', 'o': 'male'}}

 Q: When was the population of Kazan 1.19085e+06?
 SPARQL: SELECT ?value WHERE { wd:Q900 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.19085e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kazan', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.19085e+06'}, 't': '?x0'}

 Q: What is {written by} of {The Origins of Totalitarianism}, that has {role model} is {Karl Jaspers} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1327843 wdt:P50 ?answer . ?answer wdt:P737 wd:Q76509}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Origins of Totalitarianism', 'p': 'written by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'role model', 'o': 'Karl Jaspers'}}

 Q: What is the domain of compact space?
 SPARQL: select distinct ?answer where { ?answer wdt:P1568 wd:Q381892}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'domain', 'o': 'compact space'}

 Q: Which is the Tela Botanica ID for Diospyros?
 SPARQL: select distinct ?answer where { wd:Q165258 wdt:P3105 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Diospyros', 'p': 'Tela Botanica ID', 'o': '?x0'}

 Q: Who {follows} and {followed by} of {{Lothair I} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150735 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: What is the {point in time} {Lodz} had a {population} of {45200.0}?
 SPARQL: SELECT ?value WHERE { wd:Q580 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'452000.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lodz', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '452000.0'}, 't': '?x0'}

 Q: When did Budapest have a population of 1.74 million?
 SPARQL: SELECT ?value WHERE { wd:Q1781 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.74004e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Budapest', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.74004e+06'}, 't': '?x0'}

 Q: What is {computing platform} of {series} of {Mario Bros. II} ?
 SPARQL: SELECT ?answer WHERE { wd:Q886260 wdt:P179 ?X . ?X wdt:P400 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'platform', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mario Bros. II', 'p': 'series', 'o': '$y0'}}

 Q: What are the factors of therapeutic area for the  {major depressive disorder} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4044 wd:Q42844 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'therapeutic area', 'o': 'major depressive disorder'}

 Q: What award was Nicolas Cage nominated for that he received?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q42869 wdt:P1411 ?ans_1 . wd:Q42869 wdt:P166 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Nicolas Cage', 'p': 'nominated for', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Nicolas Cage', 'p': 'award', 'o': '?x1'}]

 Q: What is {phase point} of {water} and {pressure}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 ?obj . ?s pq:P2077 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase point', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}]

 Q: Was Atom studied by a list of academic disciplines and atomic physics?
 SPARQL: ASK WHERE { wd:Q9121 wdt:P2579 wd:Q221173 . wd:Q9121 wdt:P2579 wd:Q26383 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'atom', 'p': 'studied by', 'o': '?x0', '?x0': 'list of academic disciplines'}, {'h': 'IS', 'v': '?x1', 's': 'atom', 'p': 'studied by', 'o': '?x1', '?x1': 'atomic physics'}]

 Q: What was the depth over terrain presented by Good Morning America?
 SPARQL: SELECT ?answer WHERE { wd:Q825946 wdt:P371 ?X . ?X wdt:P2048 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'depth over terrain', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Good Morning America', 'p': 'presented by', 'o': '$y0'}}

 Q: Is it true that the foreign transaction fee of the MLP Mastercard equals to 1.5?
 SPARQL: ASK WHERE { wd:Q56511321 wdt:P5895 ?obj filter(?obj = 1.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'MLP Mastercard', 'p': 'foreign transaction fee', 'o': '?x0', '?x0': '1.5'}

 Q: Which is the category of people buried here in Amsterdam?
 SPARQL: select distinct ?answer where { wd:Q727 wdt:P1791 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amsterdam', 'p': 'category of people buried here', 'o': '?x0'}

 Q: Did {German_language} {linguistic typology} {Romance languages} and {V2 word order} ?
 SPARQL: ASK WHERE { wd:Q188 wdt:P4132 wd:Q19814 . wd:Q188 wdt:P4132 wd:Q1516105 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'German', 'p': 'linguistic typology', 'o': '?x0', '?x0': 'Romance languages'}, {'h': 'IS', 'v': '?x1', 's': 'German', 'p': 'linguistic typology', 'o': '?x1', '?x1': 'V2 word order'}]

 Q: What is the {manga} for {language of work or name} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q5287 . ?sbj wdt:P31 wd:Q8274 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'manga'}}

 Q: Is the clock speed of GP2X Wiz equal to 533?
 SPARQL: ASK WHERE { wd:Q930260 wdt:P2149 ?obj filter(?obj = 533) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'GP2X Wiz', 'p': 'clock speed', 'o': '?x0', '?x0': '533'}

 Q: When did open days of British Museum and closed on?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?obj . ?s pq:P3026 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'closed on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'open days', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}]

 Q: Who is the Muslim ibn al-Hajjaj with a death date of 875?
 SPARQL: SELECT ?value WHERE { wd:Q140124 p:P570 ?s . ?s ps:P570 ?x filter(contains(?x,'875-5-6')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Muslim ibn al-Hajjaj', 'p': 'death date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'death date', 'o': '875-5-6'}}}

 Q: What is the {holding company} for {chief executive officer} of {Al-Waleed bin Talal}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q293679 . ?sbj wdt:P31 wd:Q219577 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Al-Waleed bin Talal', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'holding company'}}

 Q: What is the {practiced by} and the {named after} of {Marathon} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q40244 wdt:P3095 ?ans_1 . wd:Q40244 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'marathon', 'p': 'practiced by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'marathon', 'p': 'named after', 'o': '?x1'}]

 Q: what is the {point in time} for {Gary Becker} has {award received} as {National Medal of Science} ?
 SPARQL: SELECT ?value WHERE { wd:Q191020 p:P166 ?s . ?s ps:P166 wd:Q737051 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gary Becker', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'National Medal of Science'}, 't': '?x0'}

 Q: What is the {human} for {publisher} of {The New York Times}
 SPARQL:  select distinct ?obj where { wd:Q9684 wdt:P123 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'New York Times', 'p': 'publisher', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {end time} for {Alfonso VI of León and Castile} has {spouse} as {Zaida of Seville} ?
 SPARQL: SELECT ?value WHERE { wd:Q235080 p:P26 ?s . ?s ps:P26 wd:Q2543811 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfonso VI', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Zaida of Seville'}}}

 Q: Is the atomic number of calcium equal to 16.0?
 SPARQL: ASK WHERE { wd:Q706 wdt:P1086 ?obj filter(?obj = 16.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'calcium', 'p': 'atomic number', 'o': '?x0', '?x0': '16.0'}

 Q: What are the meteorological phenomenon which start with the letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16332653 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'meteorological phenomenon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {streak color} of {calcite}, that has {label in sign language} is {Csc-blanc-spreadthesign.ogv} ?
 SPARQL: SELECT ?answer WHERE { wd:Q171917 wdt:P534 ?answer . ?answer wdt:P2919 ?x FILTER(contains(?x,'Csc-blanc-spreadthesign.ogv'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'calcite', 'p': 'streak color', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'label in sign language', 'o': 'csc-blanc-spreadthesign.ogv'}}

 Q: Does the number of wins of the 2013 National Women's Soccer League regular season  equal to 79.2?
 SPARQL: ASK WHERE { wd:Q41479097 wdt:P1355 ?obj filter(?obj = 79.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "2013 National Women's Soccer League regular season", 'p': 'number of wins', 'o': '?x0', '?x0': '79.2'}

 Q: What show was Ricky Nelson a cast member?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P161 wd:Q303207 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'cast member', 'o': 'Ricky Nelson'}

 Q: Which battery storage power station has the max energy storage capacity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q810924 . ?ent wdt:P4140 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'energy storage capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'battery storage power station'}}

 Q: What excipient that's part carbon has the lowest refractive index?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q902638 . ?ent wdt:P1109 ?obj . ?ent wdt:P527 wd:Q623} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'refractive index', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'excipient', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'carbon'}}}

 Q: What was the population of Bogota in 1775?
 SPARQL: SELECT ?obj WHERE { wd:Q2841 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1775')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bogota', 'p': 'population', 'o': '?x0', 't': '1775'}

 Q: What is connecting service of AVE ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1192 wd:Q433671}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'connecting service', 'o': 'AVE'}

 Q: Tell me posthumous work whose name has the word people in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17518461 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'people')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'posthumous work'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'people'}}

 Q: What is {chief executive officer} of {Yahoo} that is {start time} is {2011-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q37093 p:P169 ?s . ?s ps:P169 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yahoo', 'p': 'chief executive officer', 'o': '?x0', 't': '2011'}

 Q: Give me {shipwrecking} that {start point} {Southampton} and which that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q906512 . ?sbj wdt:P1427 wd:Q79848 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'shipwrecking', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'Southampton'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: When was Harold Urey nominated for Nobel Prize in Physics?
 SPARQL: SELECT ?value WHERE { wd:Q179777 p:P1411 ?s . ?s ps:P1411 wd:Q38104 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Harold Urey', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physics'}, 't': '?x0'}

 Q: What is the smartphone model with the highest maximum size or capacity whose brand is Motorola?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q19723451 . ?ent wdt:P3559 ?obj . ?ent wdt:P1716 wd:Q259011 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum size or capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'smartphone model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'brand', 'o': 'Motorola'}}}

 Q: Is Adam Mickiewicz a resident in the area that divides into Vyborgsky District, Saint Petersburg
 SPARQL: SELECT ?answer WHERE { wd:Q79822 wdt:P551 ?answer . ?answer wdt:P150 wd:Q219907}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Adam Mickiewicz', 'p': 'resident in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Vyborgsky District, Saint Petersburg'}}

 Q: When was Shiraz female population of 842454.0?
 SPARQL: SELECT ?value WHERE { wd:Q6397066 p:P1539 ?s . ?s ps:P1539 ?x filter(contains(?x,'842454.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Shiraz', 'p': 'female population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'female population', 'o': '842454.0'}, 't': '?x0'}

 Q: What is the Gazetteer of Planetary Nomenclature ID for Olympus Mons?
 SPARQL: select distinct ?answer where { wd:Q520 wdt:P2824 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Olympus Mons', 'p': 'Gazetteer of Planetary Nomenclature ID', 'o': '?x0'}

 Q: What is {award received} of {Katie Ledecky} that is {follows} is {Simone Biles} ?
 SPARQL: SELECT ?obj WHERE { wd:Q137374 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P155 wd:Q7520267 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katie Ledecky', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'Simone Biles'}}}

 Q: Which is the {province of Iran} with the {MAX(unemployment rate)} what {described by source} is {Sytin Military Encyclopedia} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1344695 . ?ent wdt:P1198 ?obj . ?ent wdt:P1343 wd:Q4114391 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'unemployment rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'province of Iran', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'Sytin Military Encyclopedia'}}}

 Q: What is {nominated for} of {Gregg Toland} that is {statement is subject of} is {14th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q166000 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q508406 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregg Toland', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '14th Academy Awards'}}}

 Q: Which are the floors below ground of Taipei 101?
 SPARQL: select distinct ?answer where { wd:Q83101 wdt:P1139 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Taipei 101', 'p': 'floors below ground', 'o': '?x0'}

 Q: Did {Chelsea_Manning} {residence} {North Bethesda}?
 SPARQL: ASK WHERE { wd:Q298423 wdt:P551 wd:Q602896 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chelsea Manning', 'p': 'residence', 'o': '?x0', '?x0': 'North Bethesda'}]

 Q: What is the inhabitants of the arrondissement of Apulia ?
 SPARQL: SELECT ?answer WHERE { wd:Q1447 wdt:P131 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Apulia', 'p': 'in', 'o': '$y0'}}

 Q: What is the {human} for {professional or sports partner} of {Matt Stone}
 SPARQL:  select distinct ?obj where { wd:Q44410 wdt:P1327 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Matt Stone', 'p': 'sports partner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {member of sports team} of {Ricardo Zamora} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q296337 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ricardo Zamora', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ricardo Zamora', 'p': 'team', 'o': '$y0'}}]

 Q: Name a recurring event happening in the Pershing County that starts with letter B
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15275719 . ?sbj wdt:P131 wd:Q484342 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring event', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Pershing County'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: What is {location of death} of {Alp Arslan}, that has {tributary} is {Vakhsh River} ?
 SPARQL: SELECT ?answer WHERE { wd:Q200193 wdt:P20 ?answer . ?answer wdt:P974 wd:Q8526}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alp Arslan', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Vakhsh River'}}

 Q: In Georgius Agricola, what section, paragraph, and verse is it in?
 SPARQL: select distinct ?answer where { wd:Q76579 wdt:P958 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georgius Agricola', 'p': 'section', 'o': '?x0'}

 Q: Which is the photo library of the chairperson of Bill Gates?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q5284 . ?sbj wdt:P31 wd:Q2912944 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Bill Gates', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'photo library'}}

 Q: What is {award received} of {John Huston} that is {for work} is {The Treasure of the Sierra Madre} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51575 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q251559 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Huston', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Treasure of the Sierra Madre'}}}

 Q: What is {god of} of {solar deity}, that has {orbited by} is {400308 Antonkutter} ?
 SPARQL: SELECT ?answer WHERE { wd:Q511056 wdt:P2925 ?answer . ?answer wdt:P398 wd:Q25397719}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'solar deity', 'p': 'god of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'orbited by', 'o': '400308 Antonkutter'}}

 Q: Give me {state function} that contains the word {zenitverzögerung} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q230937 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zenitverzögerung')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state function'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zenitverzögerung'}}

 Q: What is the DocCheck Flexikon De ID of myocardial infarction?
 SPARQL: select distinct ?answer where { wd:Q12152 wdt:P3292 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'myocardial infarction', 'p': 'DocCheck Flexikon De ID', 'o': '?x0'}

 Q: What is the {god} for {culture} of {Hittites}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2596 wd:Q5406 . ?sbj wdt:P31 wd:Q6058157 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'culture', 'o': 'Hittites', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'god'}}

 Q: Is it true that the maximum temperature record of the Massachusetts equals to 107?
 SPARQL: ASK WHERE { wd:Q771 wdt:P6591 ?obj filter(?obj = 107) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Massachusetts', 'p': 'maximum temperature record', 'o': '?x0', '?x0': '107'}

 Q: What is {date of death} of {Kanishka} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q312544 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kanishka', 'p': 'death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: How many architectural styles are detectable in the Peterhof Palace?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1258473 wdt:P149 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Peterhof Palace', 'p': 'architectural style', 'o': '?x0'}

 Q: When did Sophia Loren received an award as Telegatto?
 SPARQL: SELECT ?value WHERE { wd:Q43252 p:P166 ?s . ?s ps:P166 wd:Q843823 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Sophia Loren', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Telegatto'}, 't': '?x0'}

 Q: Where is Glasgow nearest body of water located and where is the administrative territorial entity located?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q4093 wdt:P206 ?ans_1 . wd:Q4093 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Glasgow', 'p': 'body of water', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Glasgow', 'p': 'in', 'o': '?x1'}]

 Q: iWhat are the isotope of hydrogen that contains the word tritium in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q466603 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tritium')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of hydrogen'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tritium'}}

 Q: what is the {for work} for {Penelope Lively} has {award received} as {Carnegie Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q262274 p:P166 ?s . ?s ps:P166 wd:Q1043985 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Penelope Lively', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Carnegie Medal'}}}

 Q: Was the official symbol of Seattle the bald eagle?
 SPARQL: ASK WHERE { wd:Q5083 wdt:P2238 wd:Q127216 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Seattle', 'p': 'official symbol', 'o': '?x0', '?x0': 'bald eagle'}]

 Q: Which is the IETF language tag of the Classical Chinese?
 SPARQL: select distinct ?answer where { wd:Q37041 wdt:P305 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Classical Chinese', 'p': 'IETF language tag', 'o': '?x0'}

 Q: Tell me who is found guilty of the head of national government of Pitcairn Islands.
 SPARQL: SELECT ?answer WHERE { wd:Q35672 wdt:P6 ?X . ?X wdt:P1399 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'guilty of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pitcairn Islands', 'p': 'head of national government', 'o': '$y0'}}

 Q: which is significant person of Frederick Douglass ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3342 wd:Q215562}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Frederick Douglass'}

 Q: What is {afflicts} of {treats} of {ibuprofen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q186969 wdt:P2175 ?X . ?X wdt:P689 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afflicts', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ibuprofen', 'p': 'treats', 'o': '$y0'}}

 Q: What is {operator of} of {administrator} of {RAF Ascension Island} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1968916 wdt:P137 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'RAF Ascension Island', 'p': 'operator', 'o': '$y0'}}

 Q: What is {educated at} of {Barack Obama} that is {start time} is {1988-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q76 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barack Obama', 'p': 'educated at', 'o': '?x0', 't': '1988'}

 Q: Does arsenic-76 half life equal to 1.0942?
 SPARQL: ASK WHERE { wd:Q2070638 wdt:P2114 ?obj filter(?obj = 1.0942) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'arsenic-76', 'p': 'half-life', 'o': '?x0', '?x0': '1.0942'}

 Q: What is {worked at} of {grandchildren} of {Jan Smets} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19334606 wdt:P1038 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'worked at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jan Smets', 'p': 'grandchild', 'o': '$y0'}}

 Q: What is {date of death} of {Callimachus} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192417 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Callimachus', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'c'}}}

 Q: "Which is {party} of {congress of Berlin}, that has {inflation rate of consumer price index} is {5.6} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q151423 wdt:P710 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'5.6'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'congress of Berlin', 'p': 'party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '5.6'}}

 Q: What is {peerage} of {creators} of {A l'aube} ?
 SPARQL: SELECT ?answer WHERE { wd:Q22041562 wdt:P170 ?X . ?X wdt:P97 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'peerage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "A l'aube", 'p': 'creator', 'o': '$y0'}}

 Q: How many {location of discovery} are to/by {Naples} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P189 wd:Q2634 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'location of discovery', 'o': 'Naples'}

 Q: What are the colours of Mark Zuckerberg's education?
 SPARQL: SELECT ?answer WHERE { wd:Q36215 wdt:P69 ?X . ?X wdt:P462 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'colour', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mark Zuckerberg', 'p': 'education', 'o': '$y0'}}

 Q: Who is the {geography of geographic location} for {geography of topic} of {Arab League}
 SPARQL:  select distinct ?obj where { wd:Q7172 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arab League', 'p': 'geography of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geography of geographic location'}}

 Q: What is {constructed out of} of {goat cheese}, that has {made from} is {goat} ?
 SPARQL: SELECT ?answer WHERE { wd:Q198815 wdt:P186 ?answer . ?answer wdt:P1582 wd:Q2934}
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'goat cheese', 'p': 'made from', 'o': '?x0', '?x0': 'goat'}]

 Q: Tell me about this edition of Rolling Stone.
 SPARQL:  select distinct ?obj where { wd:Q33511 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rolling Stone', 'p': 'edition', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'edition'}}

 Q: What is the {imprint} for {record label} of {Eminem}
 SPARQL:  select distinct ?obj where { wd:Q5608 wdt:P264 ?obj . ?obj wdt:P31 wd:Q2608849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eminem', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'imprint'}}

 Q: What Marjane Satrapi was nominated for at 2009-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q126633 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marjane Satrapi', 'p': 'nominated for', 'o': '?x0', 't': '2009'}

 Q: Was Joan Crawford married to Phillip Terry?
 SPARQL: ASK WHERE { wd:Q40475 wdt:P26 wd:Q1846029 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Joan Crawford', 'p': 'married to', 'o': '?x0', '?x0': 'Phillip Terry'}]

 Q: What significant event occurred in The Blue Boy on 1-1-1802?
 SPARQL: SELECT ?obj WHERE { wd:Q604761 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1802')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Blue Boy', 'p': 'significant event', 'o': '?x0', 't': '1802'}

 Q: What is {publication place} of {Variety}, that has {council} is {New York City Council} ?
 SPARQL: SELECT ?answer WHERE { wd:Q471728 wdt:P291 ?answer . ?answer wdt:P194 wd:Q645195}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Variety', 'p': 'publication place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'council', 'o': 'New York City Council'}}

 Q: Which head of state has the shortest term length of office?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4164871 . ?ent wdt:P2097 ?obj . ?ent wdt:P279 wd:Q48352} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'term length of office', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'office', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'head of state'}}}

 Q: Give me {historical region} that {studied by} {egyptology} and which that starts with {'a'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1620908 . ?sbj wdt:P2579 wd:Q145903 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical region', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'egyptology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is the {human} for {stepparent} of {John Huston}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3448 wd:Q51575 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stepparent', 'o': 'John Huston', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is population of Osh in the point in time of 1897-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q47282 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1897')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Osh', 'p': 'population', 'o': '?x0', 't': '1897'}

 Q: What is {son of} of {has brother} of {Piero the Unfortunate} ?
 SPARQL: SELECT ?answer WHERE { wd:Q262212 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piero the Unfortunate', 'p': 'bro', 'o': '$y0'}}

 Q: What is the native language and languages spoken, written, or signed of Robert Plant?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q428223 wdt:P103 ?ans_1 . wd:Q428223 wdt:P1412 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Robert Plant', 'p': 'native language', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Robert Plant', 'p': 'language', 'o': '?x1'}]

 Q: What is the {nation at the Olympics} for {country} of {Hong Kong}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q8646 . ?sbj wdt:P31 wd:Q26213387 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Hong Kong', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nation at the Olympics'}}

 Q: Which is the Foursquare venue ID of Sequoia National Park?
 SPARQL: select distinct ?answer where { wd:Q152660 wdt:P1968 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sequoia National Park', 'p': 'Foursquare venue ID', 'o': '?x0'}

 Q: What is the {mountain stage} with the {MAX(speed)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q20646668 . ?ent wdt:P2052 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'speed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mountain stage'}}

 Q: What is {role model} of {words by} of {¿Dónde Estás Corazón?} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2728376 wdt:P676 ?X . ?X wdt:P737 ?answer}
 ALIST: {}

 Q: What is the name of an algorithm that starts with the letter s.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8366 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'algorithm'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Is the life expectancy of Lithuania greater than 89.18634?
 SPARQL: ASK WHERE { wd:Q37 wdt:P2250 ?obj filter(?obj > 89.18634) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Lithuania', 'p': 'life expectancy', 'o': '?x0', '?x0': '89.18634'}

 Q: what is the {statement is subject of} for {William Wyler} has {award received} as {Academy Award for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q51495 p:P166 ?s . ?s ps:P166 wd:Q103360 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Wyler', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Director'}}}

 Q: tell me geological process name has  word subduction in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11827301 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subduction')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geological process'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'subduction'}}

 Q: How many {present in work} are for {Catwoman} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q158952 wdt:P1441 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Catwoman', 'p': 'present in work', 'o': '?x0'}

 Q: How many people or cargo transported to coal?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3437 wd:Q24489 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'people or cargo transported', 'o': 'coal'}

 Q: What is the {type of quantum particle} with the {MAX(decay width)} whose {subclass of} is {boson}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2223 ?obj . ?ent wdt:P279 wd:Q43101 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'decay width', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'boson'}}}

 Q: What is {writer} of {is shown in} of {Nico Robin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1190653 wdt:P1441 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nico Robin', 'p': 'is shown in', 'o': '$y0'}}

 Q: What is {date of commencement} of {role model} of {BASIC} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42979 wdt:P737 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'commencement date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'BASIC', 'p': 'role model', 'o': '$y0'}}

 Q: Is the operating temperature of TACLANE-10G less than 30.0?
 SPARQL: ASK WHERE { wd:Q55236031 wdt:P5066 ?obj filter(?obj < 30.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'TACLANE-10G', 'p': 'operating temperature', 'o': '?x0', '?x0': '30.0'}

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: What is {position held} of {Robert Menzies} that is {replaces} is {Albert Dunstan} ?
 SPARQL: SELECT ?obj WHERE { wd:Q214438 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q4710054 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Menzies', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Albert Dunstan'}}}

 Q: How many movements are for The Internationale ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q49617 wdt:P135 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Internationale', 'p': 'movement', 'o': '?x0'}

 Q: What is {employer} of {Fernand Braudel} that is {position held} is {professor} ?
 SPARQL: SELECT ?obj WHERE { wd:Q185105 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P39 wd:Q121594 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fernand Braudel', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'professor'}}}

 Q: Which is the translation of the edition of Twenty Thousand Leagues Under the Sea?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P629 wd:Q183565 . ?sbj wdt:P31 wd:Q39811647 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition of', 'o': 'Twenty Thousand Leagues Under the Sea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'translation'}}

 Q: What is {diplomatic relation} of {South Ossetia} that is {statement is subject of} is {Nicaragua–South Ossetia relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23427 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q7024510 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'South Ossetia', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Nicaragua–South Ossetia relations'}}}

 Q: What is {category of associated people} of {adjacent to} of {Extremadura} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5777 wdt:P47 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Extremadura', 'p': 'next to', 'o': '$y0'}}

 Q: Give me {district of Austria} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q871419 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'district of Austria'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {place of burial} of {Michel Ney} that is {start time} is {1815-12-8} ?
 SPARQL: SELECT ?obj WHERE { wd:Q40756 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1815')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michel Ney', 'p': 'place of burial', 'o': '?x0', 't': '1815'}

 Q: What is {followed by} and {follows} of {{Isaiah} has {series} as {Nevi'im}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q131458 p:P179 ?s . ?s ps:P179 wd:Q216383 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'precedes', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isaiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "Nevi'im"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isaiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "Nevi'im"}}}]

 Q: what is the {language of work or name} for {Antigone} has {has edition} as {Antygona} ?
 SPARQL: SELECT ?value WHERE { wd:Q241077 p:P747 ?s . ?s ps:P747 wd:Q24791655 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antigone', 'p': 'edition', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'edition', 'o': 'Antygona'}}}

 Q: Give me {federal holidays in the United States} that {location} {Spain} and which contains the word {thanksgiving} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5440534 . ?sbj wdt:P276 wd:Q29 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thanksgiving')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal holidays in the United States', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Spain'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'thanksgiving'}}

 Q: Which is the location on terrain feature for Iberian Peninsula?
 SPARQL: select distinct ?answer where { ?answer wdt:P706 wd:Q12837}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Iberian Peninsula'}

 Q: What is {position held} of {John F. Kennedy} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9696 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John F. Kennedy', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John F. Kennedy', 'p': 'position held', 'o': '$y0'}}]

 Q: Which is the dog that is in exhibition history of Anchorage Museum and starts with the letter b?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q144 . ?sbj wdt:P608 wd:Q4752732 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'exhibition history', 'o': 'Anchorage Museum'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: Tell me language whose name has the word äynu in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34770 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'äynu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'äynu'}}

 Q: who is predecessor of position held by head of government of Tainan ?
 SPARQL: SELECT ?answer WHERE { wd:Q140631 wdt:P1313 ?X . ?X wdt:P1365 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'predecessor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tainan', 'p': 'position held by head of government', 'o': '$y0'}}

 Q: Where in Paradisgatan 2 is the Lund University headquarters located?
 SPARQL: SELECT ?obj WHERE { wd:Q218506 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x filter(contains(?x,'Paradisgatan 2')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lund University', 'p': 'headquarters', 'o': '?x0'}

 Q: What are the medical specialty which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q930752 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical specialty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: How many children does Grover Cleveland have?
 SPARQL: select distinct ?answer where { wd:Q35171 wdt:P1971 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Grover Cleveland', 'p': 'children', 'o': '?x0'}

 Q: IS THE NOTATION PERIOD OF THE 17 THETIS EQUALS 12.27048
 SPARQL: ASK WHERE { wd:Q142553 wdt:P2147 ?obj filter(?obj = 12.27048) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '17 Thetis', 'p': 'rotation period', 'o': '?x0', '?x0': '12.27048'}

 Q: How many developers of Panasonic are there?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P178 wd:Q53247 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Panasonic'}

 Q: Which  member of the deme Aristophanes ?
 SPARQL: select distinct ?answer where { wd:Q43353 wdt:P2462 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aristophanes', 'p': 'member of the deme', 'o': '?x0'}

 Q: What is an international association football national teams competition that starts with the letter c.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542827 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international association football national teams competition'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Which season is the opposite of midnight sun based on the naming criteria used?
 SPARQL: SELECT ?obj WHERE { wd:Q774621 p:P461 ?s . ?s ps:P461 ?obj . ?s pq:P1013 wd:Q24384 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'midnight sun', 'p': 'opposite of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'criteria used', 'o': 'season'}}}

 Q: What is the {commune of France} for {twinned administrative body} of {Bilbao}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q8692 . ?sbj wdt:P31 wd:Q484170 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Bilbao', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France'}}

 Q: Which is the Académie des sciences d'outre-mer member ID for Aimé Césaire?
 SPARQL: select distinct ?answer where { wd:Q223955 wdt:P5374 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aimé Césaire', 'p': "Académie des sciences d'outre-mer member ID", 'o': '?x0'}

 Q: Who was {participant in conflict} of {sister} {Emilio Polli} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3724488 wdt:P3373 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emilio Polli', 'p': 'sister', 'o': '$y0'}}

 Q: What is {educated at} of {Niels Bohr} and {doctoral thesis}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7085 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P1026 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'thesis', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Niels Bohr', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Niels Bohr', 'p': 'educated at', 'o': '$y0'}}]

 Q: when was Linus Pauling nominated for a Nobel Prize in Chemistry
 SPARQL: SELECT ?value WHERE { wd:Q48983 p:P1411 ?s . ?s ps:P1411 wd:Q44585 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Linus Pauling', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Chemistry'}, 't': '?x0'}

 Q: What is the {film} for {fictional universe described in} of {Marvel Cinematic Universe}
 SPARQL:  select distinct ?obj where { wd:Q642878 wdt:P1445 ?obj . ?obj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marvel Cinematic Universe', 'p': 'fictional universe described in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: Give the name of the earthquake with the highest magnitude on the Richter magnitude scale?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2528 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'magnitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'earthquake'}}

 Q: Which is the CycleBase cyclist ID for Greg LeMond?
 SPARQL: select distinct ?answer where { wd:Q312697 wdt:P4508 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Greg LeMond', 'p': 'CycleBase cyclist ID', 'o': '?x0'}

 Q: Which is the pregnancy category for penicillin?
 SPARQL: select distinct ?answer where { wd:Q12190 wdt:P3489 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'penicillin', 'p': 'pregnancy category', 'o': '?x0'}

 Q: What is the {landlocked country} for {located on terrain feature} of {East Asia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P706 wd:Q27231 . ?sbj wdt:P31 wd:Q123480 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'East Asia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'landlocked country'}}

 Q: What is {has administrative divisions} of {Nicaragua}, that has {location} is {11.85 -86.2} ?
 SPARQL: SELECT ?answer WHERE { wd:Q811 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'11.85 -86.2'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nicaragua', 'p': 'has administrative divisions', 'o': '?x0'}

 Q: What is {given name} of {Louis Agassiz} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q122972 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis Agassiz', 'p': 'first name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: "What is the co-ordinate location  -90.0? do not to be confused with of the Western world
 SPARQL: SELECT ?answer WHERE { wd:Q160381 wdt:P1889 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-90.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Western world', 'p': 'confused with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-ordinate location', 'o': '-90.0'}}

 Q: What is {nominated for} of {Rachel McAdams} that is {statement is subject of} is {88th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q190386 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q20022969 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rachel McAdams', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '88th Academy Awards'}}}

 Q: Who is Michel Houellebecq's role model, that works as a librarian?
 SPARQL: SELECT ?answer WHERE { wd:Q103114 wdt:P737 ?answer . ?answer wdt:P106 wd:Q182436}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michel Houellebecq', 'p': 'role model', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'librarian'}}

 Q: What is Sybaris' Digital Atlas of the Roman Empire ID?
 SPARQL: select distinct ?answer where { wd:Q220583 wdt:P1936 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sybaris', 'p': 'Digital Atlas of the Roman Empire ID', 'o': '?x0'}

 Q: What is the synonym with the highest gestation period whose instance of is synonym?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1040689 . ?ent wdt:P3063 ?obj . ?ent wdt:P31 wd:Q1040689 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'gestation period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'synonym'}}

 Q: Who was the dedicatee at the place of interment for Jude the Apostle?
 SPARQL: SELECT ?answer WHERE { wd:Q43945 wdt:P119 ?X . ?X wdt:P825 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dedicatee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jude the Apostle', 'p': 'interment', 'o': '$y0'}}

 Q: What is the {republican regime in France} for {head of state} of {Emmanuel Macron}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q3052772 . ?sbj wdt:P31 wd:Q17152708 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Emmanuel Macron', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republican regime in France'}}

 Q: Which mid-air collision, involving an F-16 Fighting Falcon, had the most survivors?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1863435 . ?ent wdt:P1561 ?obj . ?ent wdt:P121 wd:Q100026 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'survivors', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mid-air collision', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'item operated', 'o': 'F-16 Fighting Falcon'}}}

 Q: What was the end time for Eino Kaila's spouse Anna Snellman-Kaila?
 SPARQL: SELECT ?value WHERE { wd:Q670103 p:P26 ?s . ?s ps:P26 wd:Q11851614 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eino Kaila', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Anna Snellman-Kaila'}}}

 Q: What is {victory} of {Jackie Stewart} that is {point in time} is {1969-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3188 p:P2522 ?s . ?s ps:P2522 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jackie Stewart', 'p': 'victory', 'o': '?x0', 't': '1969'}

 Q: Tell me social networking service whose name has the word yak in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3220391 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yak')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social networking service'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yak'}}

 Q: Who was the partner of Edith Piaf in 1948?
 SPARQL: SELECT ?obj WHERE { wd:Q1631 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1948')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Edith Piaf', 'p': 'partner', 'o': '?x0', 't': '1948'}

 Q: What is {start time} and {end time} of {{Abigail Adams} has {spouse} as {John Adams}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P26 ?s . ?s ps:P26 wd:Q11806 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'John Adams'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'John Adams'}}}]

 Q: Give me {Pavo} that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3917160 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Pavo'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: How many languages did Oscar Wilde speak, write, or sign?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q30875 wdt:P1412 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Oscar Wilde', 'p': 'language', 'o': '?x0'}

 Q: Tell me the name of Thomas Piketty's spouse as of 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q984448 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Piketty', 'p': 'spouse', 'o': '?x0', 't': '2014'}

 Q: What is the {whistleblower platform} for {author} of {Julian Assange}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P50 wd:Q360 . ?sbj wdt:P31 wd:Q1344897 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Julian Assange', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'whistleblower platform'}}

 Q: Which is the mushroom ecological type of parasitism?
 SPARQL: select distinct ?answer where { ?answer wdt:P788 wd:Q186517}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mushroom ecological type', 'o': 'parasitism'}

 Q: What thermodynamic potential starts with the letter "g"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2420179 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'thermodynamic potential'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: Which is the IEDB Epitope ID for L-Serine?
 SPARQL: select distinct ?answer where { wd:Q183290 wdt:P4168 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L-Ser', 'p': 'IEDB Epitope ID', 'o': '?x0'}

 Q: What religious order did Augustine of Hippo belong to?
 SPARQL:  select distinct ?obj where { wd:Q8018 wdt:P611 ?obj . ?obj wdt:P31 wd:Q2061186 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Augustine of Hippo', 'p': 'religious order', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious order'}}

 Q: who is the steamship for designed by of Isambard Kingdom Brunel?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q207380 . ?sbj wdt:P31 wd:Q12859788 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steamship'}}

 Q: Which is an academic major studied by Nubia?
 SPARQL:  select distinct ?obj where { wd:Q135028 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q4671286 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nubia', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic major'}}

 Q: what is the {start time} for {Metz} has {located in the administrative territorial entity} as {Moselle} ?
 SPARQL: SELECT ?value WHERE { wd:Q22690 p:P131 ?s . ?s ps:P131 wd:Q12652 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Metz', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Moselle'}}}

 Q: Was Megyn Kelly CNN employer ?
 SPARQL: ASK WHERE { wd:Q293260 wdt:P108 wd:Q48340 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Megyn Kelly', 'p': 'employer', 'o': '?x0', '?x0': 'CNN'}]

 Q: Which is the Australian Standard Geographic Classification 2006 ID for South Australia?
 SPARQL: select distinct ?answer where { wd:Q35715 wdt:P4094 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Australia', 'p': 'Australian Standard Geographic Classification 2006 ID', 'o': '?x0'}

 Q: what is the {end time} for {John Winthrop} has {position held} as {Governor of the Massachusetts Bay Colony} ?
 SPARQL: SELECT ?value WHERE { wd:Q720766 p:P39 ?s . ?s ps:P39 wd:Q48955989 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Winthrop', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Governor of the Massachusetts Bay Colony'}}}

 Q: What is {position held} of {Justin Trudeau} that is {start time} is {2008-10-14} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3099714 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Justin Trudeau', 'p': 'position held', 'o': '?x0', 't': '2008'}

 Q: What is the isotope of lutetium with the highest half-life whose instance of is isotope of lutetium?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q618200 . ?ent wdt:P2114 ?obj . ?ent wdt:P31 wd:Q618200 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'half-life', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of lutetium'}}

 Q: What is {adjacent to} of {death location} of {Michelangelo Antonioni} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55433 wdt:P20 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'adjacent to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michelangelo Antonioni', 'p': 'death location', 'o': '$y0'}}

 Q: Tell me the survival skill that followed by food presentation and which contains the word cooking in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q891382 . ?sbj wdt:P156 wd:Q3480053 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cooking')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'survival skill', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'food presentation'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cooking'}}

 Q: Does Botnkrona Opp have an average gradient of less than 0.1884?
 SPARQL: ASK WHERE { wd:Q11962019 wdt:P2198 ?obj filter(?obj < 0.1884) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Botnkrona Opp', 'p': 'average gradient', 'o': '?x0', '?x0': '0.1884'}

 Q: What is the {sense} for {anatomical location} of {ear}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P927 wd:Q7362 . ?sbj wdt:P31 wd:Q173253 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'ear', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sense'}}

 Q: what is the {end time} for {Asturias} has {head of government} as {Sergio Marqués Fernández} ?
 SPARQL: SELECT ?value WHERE { wd:Q3934 p:P6 ?s . ?s ps:P6 wd:Q3181289 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asturias', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Sergio Marqués Fernández'}}}

 Q: Which position applies to the jurisdiction of Bilbao?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q8692 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'jurisdiction', 'o': 'Bilbao', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is the {place of death} and the {place of birth} of {Catherine_the_Great} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q36450 wdt:P20 ?ans_1 . wd:Q36450 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Catherine the Great', 'p': 'place of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Catherine the Great', 'p': 'place of birth', 'o': '?x1'}]

 Q: "Which is {language of work} of {L'après-midi d'un faune}, that has {name in official language} is {langue française} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1880607 wdt:P407 ?answer . ?answer wdt:P1705 ?x FILTER(contains(?x,'langue française'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "L'après-midi d'un faune", 'p': 'language of work', 'o': '?x0'}

 Q: What is the musical instrument of the songwriter of "Piano Concerto No. 5"?
 SPARQL: SELECT ?answer WHERE { wd:Q239700 wdt:P86 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piano Concerto No. 5', 'p': 'songwriter', 'o': '$y0'}}

 Q: How many {manifestation of} are to/by {UTF-8} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1557 wd:Q193537 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'UTF-8'}

 Q: Which is the weekly newspaper owner of which is StarWipe and contains the word onion in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2305295 . ?sbj wdt:P1830 wd:Q21189788 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'onion')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weekly newspaper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'owner of', 'o': 'StarWipe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'onion'}}

 Q: What is {first name} of {Jules Léotard}, that has {is said to be the same as} is {Júlio} ?
 SPARQL: SELECT ?answer WHERE { wd:Q356388 wdt:P735 ?answer . ?answer wdt:P460 wd:Q6321687}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jules Léotard', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Júlio'}}

 Q: Where is the place of grave of Makarios III, founded in 1001-1-17?
 SPARQL: SELECT ?answer WHERE { wd:Q153509 wdt:P119 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1001'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Makarios III', 'p': 'place of grave', 'o': '?x0', 't': '1001'}

 Q: Name the mascot for Iron Maiden.
 SPARQL:  select distinct ?obj where { wd:Q42482 wdt:P822 ?obj . ?obj wdt:P31 wd:Q18670161 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iron Maiden', 'p': 'mascot', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mascot'}}

 Q: What is {founder} of {Cricket World Cup}, that has {has states} is {North East England} ?
 SPARQL: SELECT ?answer WHERE { wd:Q192202 wdt:P112 ?answer . ?answer wdt:P150 wd:Q47983}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cricket World Cup', 'p': 'founder', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has states', 'o': 'North East England'}}

 Q: Is the Ministry of Biblical and History Prophecy Symbols thickness less than 0.508
 SPARQL: ASK WHERE { wd:Q20537968 wdt:P2610 ?obj filter(?obj < 0.508) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Ministry of Biblical and History Prophecy Symbols', 'p': 'thickness', 'o': '?x0', '?x0': '0.508'}

 Q: What is {comes from} of {label} of {LCD Soundsystem} ?
 SPARQL: SELECT ?answer WHERE { wd:Q45752 wdt:P264 ?X . ?X wdt:P495 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'comes from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'LCD Soundsystem', 'p': 'label', 'o': '$y0'}}

 Q: What is the {procedural programming language} for {developer} of {Dennis M. Ritchie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P178 wd:Q45575 . ?sbj wdt:P31 wd:Q28922885 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'developed by', 'o': 'Dennis M. Ritchie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'procedural programming language'}}

 Q: What is {easterly} of {national of} of {Henry Luce} ?
 SPARQL: SELECT ?answer WHERE { wd:Q516473 wdt:P27 ?X . ?X wdt:P1334 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'easterly', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Luce', 'p': 'national of', 'o': '$y0'}}

 Q: What is the {human spaceflight} with the {MAX(orbits completed)} whose {instance of} is {spacecraft}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q752783 . ?ent wdt:P1418 ?obj . ?ent wdt:P31 wd:Q40218 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'orbits completed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human spaceflight', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spacecraft'}}}

 Q: What is {diplomatic relation} of {citizen of} of {Dizzee Rascal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q366506 wdt:P27 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dizzee Rascal', 'p': 'citizen of', 'o': '$y0'}}

 Q: Which is the Ringgold ID for Kyoto University?
 SPARQL: select distinct ?answer where { wd:Q336264 wdt:P3500 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kyoto University', 'p': 'Ringgold ID', 'o': '?x0'}

 Q: When did publisher of Pac-Man and publication date?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q173626 p:P123 ?s . ?s ps:P123 ?obj . ?s pq:P577 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publisher', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0'}}]

 Q: What is the {county of Oklahoma} for {located in the administrative territorial entity} of {Oklahoma City}
 SPARQL:  select distinct ?obj where { wd:Q34863 wdt:P131 ?obj . ?obj wdt:P31 wd:Q13414760 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oklahoma City', 'p': 'is located in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'county of Oklahoma'}}

 Q: What award did Ousmane Sembène receive in 1966?
 SPARQL: SELECT ?obj WHERE { wd:Q314966 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1966')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ousmane Sembène', 'p': 'award', 'o': '?x0', 't': '1966'}

 Q: What is {mother} and {date of birth} of {{Charlemagne} has {child} as {Bertha, daughter of Charlemagne}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q827676 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Bertha'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Bertha'}}}]

 Q: For what was Isabelle Adjani nominated for in the year 1995.
 SPARQL: SELECT ?obj WHERE { wd:Q106383 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1995')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isabelle Adjani', 'p': 'nominated for', 'o': '?x0', 't': '1995'}

 Q: What is {to be distinguished from} of {pub}, that has {co-ordinates} is {25.9077 64.3467} ?
 SPARQL: SELECT ?answer WHERE { wd:Q212198 wdt:P1889 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'25.9077 64.3467'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pub', 'p': 'distinguished from', 'o': '?x0'}

 Q: What is the son of Ja'far al-Sadiq whose sister is Asmaa Bint Jafar?
 SPARQL: SELECT ?answer WHERE { wd:Q170046 wdt:P40 ?answer . ?answer wdt:P3373 wd:Q18595646}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Ja'far al-Sadiq", 'p': 'son', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister', 'o': 'Asmaa Bint Jafar'}}

 Q: What is {open period from} and {closed on} of {{British Museum} has {open days} as {all weekdays}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 wd:Q26214163 . ?s pq:P3027 ?value1 . ?s pq:P3026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'closed on', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}]

 Q: How much is to be replaced by the Canadian dollar?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1366 wd:Q1104069 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Canadian dollar'}

 Q: What award did Kiri Te Kanawa receive on 1/26/1990?
 SPARQL: SELECT ?obj WHERE { wd:Q380133 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kiri Te Kanawa', 'p': 'award', 'o': '?x0', 't': '1990'}

 Q: What is the {Mario franchise character} for {notable work} of {Shigeru Miyamoto}
 SPARQL:  select distinct ?obj where { wd:Q12382 wdt:P800 ?obj . ?obj wdt:P31 wd:Q33093124 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shigeru Miyamoto', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Mario franchise character'}}

 Q: At what point in history did Cologne have a population of 1.0817e+06?
 SPARQL: SELECT ?value WHERE { wd:Q365 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.0817e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Cologne', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.0817e+06'}, 't': '?x0'}

 Q: IS THE SLOPE OF THE BLACK RUN EQAULS TO 50
 SPARQL: ASK WHERE { wd:Q1923663 wdt:P4184 ?obj filter(?obj = 50) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'black run', 'p': 'slope', 'o': '?x0', '?x0': '50'}

 Q: What is the oxidation state for nickel?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q744 wdt:P1121 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'nickel', 'p': 'oxidation state', 'o': '?x0'}

 Q: When Anna Netrebko was awarded State Prize of the Russian Federation?
 SPARQL: SELECT ?value WHERE { wd:Q78516 p:P166 ?s . ?s ps:P166 wd:Q4146631 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Anna Netrebko', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'State Prize of the Russian Federation'}, 't': '?x0'}

 Q: Tell me the organization that has the anthem of Anthem of Europe and contains the word community in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43229 . ?sbj wdt:P85 wd:Q11993 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'community')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'Anthem of Europe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'community'}}

 Q: What is the {political party} for {chairperson} of {Aung San Suu Kyi}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q36740 . ?sbj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Aung San Suu Kyi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: what is the {field of work} for {Zubin Mehta} has {award received} as {Padma Vibhushan} ?
 SPARQL: SELECT ?value WHERE { wd:Q157635 p:P166 ?s . ?s ps:P166 wd:Q672392 . ?s pq:P101 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zubin Mehta', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Padma Vibhushan'}}}

 Q: What is the {political conspiracy} for {conflict} of {Guy Fawkes}
 SPARQL:  select distinct ?obj where { wd:Q13898 wdt:P607 ?obj . ?obj wdt:P31 wd:Q25446819 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Guy Fawkes', 'p': 'conflict', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conspiracy'}}

 Q: Which dwarf elliptical galaxy for parent astronomical body of  Andromeda Galaxy
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P397 wd:Q2469 . ?sbj wdt:P31 wd:Q234077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Andromeda Galaxy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dwarf elliptical galaxy'}}

 Q: Was Seinfeld characters Cosmo Kramer and Jackie Chiles?
 SPARQL: ASK WHERE { wd:Q23733 wdt:P674 wd:Q2916792 . wd:Q23733 wdt:P674 wd:Q6116288 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Seinfeld', 'p': 'characters', 'o': '?x0', '?x0': 'Cosmo Kramer'}, {'h': 'IS', 'v': '?x1', 's': 'Seinfeld', 'p': 'characters', 'o': '?x1', '?x1': 'Jackie Chiles'}]

 Q: When did Philip K. Dick receive the Science Fiction Hall of Fame award?
 SPARQL: SELECT ?value WHERE { wd:Q171091 p:P166 ?s . ?s ps:P166 wd:Q7433537 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Philip K. Dick', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Science Fiction Hall of Fame'}, 't': '?x0'}

 Q: What is {award received} of {Paul Heyse} that is {prize money} is {140703.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q76487 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'140703.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Heyse', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '140703.0'}}}

 Q: What is {pronunciation audio} of {language native} of {Guy de Maupassant} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9327 wdt:P103 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy de Maupassant', 'p': 'language native', 'o': '$y0'}}

 Q: What is the educational level of Joseph Koo, who has PIN Code 02215?
 SPARQL: SELECT ?answer WHERE { wd:Q698537 wdt:P69 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'02215'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph Koo', 'p': 'education', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'PIN Code', 'o': '02215'}}

 Q: Which is the language of the writing system of the Arabic alphabet?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q8196 . ?sbj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'Arabic alphabet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Is the angular resolution of the Discovery Channel Telescope equal to .03?
 SPARQL: ASK WHERE { wd:Q1383460 wdt:P3439 ?obj filter(?obj = 0.03) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Discovery Channel Telescope', 'p': 'angular resolution', 'o': '?x0', '?x0': '0.03'}

 Q: What is {award received} of {Michael Collins} that is {for work} is {The Keepers of Truth} ?
 SPARQL: SELECT ?obj WHERE { wd:Q104859 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q7744059 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Collins', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Keepers of Truth'}}}

 Q: What is {start time} and {end time} of {{Charles I of England} has {position held} as {monarch of Scotland}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q81506 p:P39 ?s . ?s ps:P39 wd:Q18810063 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles I of England', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of Scotland'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'until', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles I of England', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of Scotland'}}}]

 Q: What are interdisciplinary science which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1665984 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'interdisciplinary science'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {made from} of {Sichuan pepper}, that has {taxon parent} is {Zanthoxylum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q756800 wdt:P1582 ?answer . ?answer wdt:P171 wd:Q147050}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sichuan pepper', 'p': 'made from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'taxon parent', 'o': 'Zanthoxylum'}}

 Q: What disputed territory in Levant is located on terrain feature?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P706 wd:Q81483 . ?sbj wdt:P31 wd:Q15239622 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Levant', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disputed territory'}}

 Q: Who is the thunder god that appears as Artemis?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4675 wd:Q39503 . ?sbj wdt:P31 wd:Q842697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'appears as', 'o': 'Artemis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'thunder god'}}

 Q: What is <place of death> of <Las Vegas> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P20 wd:Q23768}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of death', 'o': 'Las Vegas'}

 Q: What is the {canal} for {terminus location} of {Bruges}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P609 wd:Q12994 . ?sbj wdt:P31 wd:Q12284 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'terminus location', 'o': 'Bruges', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'canal'}}

 Q: Which is the bibliography for the list of works of Jessica Lange?
 SPARQL:  select distinct ?obj where { wd:Q173585 wdt:P1455 ?obj . ?obj wdt:P31 wd:Q1631107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jessica Lange', 'p': 'list of works', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bibliography'}}

 Q: What is the circle of Cornelius Jansen?
 SPARQL: select distinct ?answer where { ?answer wdt:P1776 wd:Q318943}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'circle of', 'o': 'Cornelius Jansen'}

 Q: What is located in the administrative territorial entity and twinned administrative body of Toronto?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q172 wdt:P131 ?ans_1 . wd:Q172 wdt:P190 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Toronto', 'p': 'located in the administrative territorial entity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Toronto', 'p': 'twinned administrative body', 'o': '?x1'}]

 Q: What is the gender of Sancho Panza, who is often confused with being a man?
 SPARQL: SELECT ?answer WHERE { wd:Q630823 wdt:P21 ?answer . ?answer wdt:P1889 wd:Q8441}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sancho Panza', 'p': 'gender', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'confused with', 'o': 'man'}}

 Q: What is {higher taxon} of {budgerigar}, that has {common name} is {Budgerigar} ?
 SPARQL: SELECT ?answer WHERE { wd:Q121221 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Budgerigar'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'budgerigar', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'common name', 'o': 'budgerigar'}}

 Q: What is the {chemical compound} for {medical condition treated} of {bipolar disorder}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2175 wd:Q131755 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical condition treated', 'o': 'bipolar disorder', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Which is {facility operated} and {operated by} {Singapore Airlines Flight 368} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24844462 wdt:P137 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'facility operated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Singapore Airlines Flight 368', 'p': 'operated by', 'o': '$y0'}}

 Q: What is the {historical country} for {replaced by} of {Joseon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1366 wd:Q28179 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Joseon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is {notable event} of {papers at} of {KLM} ?
 SPARQL: SELECT ?answer WHERE { wd:Q181912 wdt:P485 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'notable event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'KLM', 'p': 'papers at', 'o': '$y0'}}

 Q: What is {disciple} of {Zeno of Citium}, that has {dead} is {-232-1-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q171303 wdt:P802 ?answer . ?answer wdt:P570 ?x FILTER(contains(?x,'-232-1-1'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zeno of Citium', 'p': 'disciple', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'dead', 'o': '-232-1-1'}}

 Q: What is the {pureblood} for {characters} of {Harry Potter}
 SPARQL:  select distinct ?obj where { wd:Q8337 wdt:P674 ?obj . ?obj wdt:P31 wd:Q12372870 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Harry Potter', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pureblood'}}

 Q: Tell me slave rebellion whose name have the word war in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1155622 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'slave rebellion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: Is the lower flammable limit of the hydrogen cyanide equal to 5.6?
 SPARQL: ASK WHERE { wd:Q26075 wdt:P2202 ?obj filter(?obj = 5.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'hydrogen cyanide', 'p': 'lower flammable limit', 'o': '?x0', '?x0': '5.6'}

 Q: Does the number of injured of the Monbar Hotel attack equals 1?
 SPARQL: ASK WHERE { wd:Q15255064 wdt:P1339 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Monbar Hotel attack', 'p': 'number of injured', 'o': '?x0', '?x0': '1'}

 Q: What is {characters} of {Faust}, that has {female} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29478 wdt:P674 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Faust', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'man', 'o': 'male'}}

 Q: what is geographic region that starts with s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q82794 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'š')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geographic region'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'š'}}

 Q: Mount Rushmore is in what mountain range?
 SPARQL: select distinct ?answer where { wd:Q83497 wdt:P4552 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mount Rushmore', 'p': 'mountain range', 'o': '?x0'}

 Q: How many {this taxon is source of} are to/by {Sichuan pepper} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1672 wd:Q756800 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'this taxon is source of', 'o': 'Sichuan pepper'}

 Q: who is the art movement for movement of John Cage?
 SPARQL:  select distinct ?obj where { wd:Q180727 wdt:P135 ?obj . ?obj wdt:P31 wd:Q968159 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Cage', 'p': 'movement', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art movement'}}

 Q: Is it true that the Duvall Earthquake's aftershocks equalled 54.0?
 SPARQL: ASK WHERE { wd:Q5317612 wdt:P2320 ?obj filter(?obj = 54.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Duvall earthquake', 'p': 'aftershocks', 'o': '?x0', '?x0': '54.0'}

 Q: what is the {series ordinal} for {The Lord of the Rings} has {award received} as {NPR Top 100 Science Fiction and Fantasy Books} ?
 SPARQL: SELECT ?value WHERE { wd:Q15228 p:P166 ?s . ?s ps:P166 wd:Q20899118 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lord of the Rings', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'NPR Top 100 Science Fiction and Fantasy Books'}}}

 Q: What is {date of death} and {date of birth} of {{Frederick William I of Prussia} has {child} as {Prince Augustus Ferdinand of Prussia}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 wd:Q50922 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Prince Augustus Ferdinand of Prussia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'birth date', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Prince Augustus Ferdinand of Prussia'}}}]

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Alan Shearer} has {member of sports team} as {England B national football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q483583 p:P54 ?s . ?s ps:P54 wd:Q1110944 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Shearer', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'England B'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Shearer', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'England B'}}}]

 Q: What is <Gewässerkennzahl> of <Morava> ?
 SPARQL: select distinct ?answer where { wd:Q179251 wdt:P1183 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Morava', 'p': 'Gewässerkennzahl', 'o': '?x0'}

 Q: Give me {azane} that {safety classification and labelling} {NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response} and which contains the word {hydrazine} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4832226 . ?sbj wdt:P4952 wd:Q51139288 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hydrazine')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'azane', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'hydrazine'}}

 Q: Who was the spouse of Myrna Loy in 1944?
 SPARQL: SELECT ?obj WHERE { wd:Q105941 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1944')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Myrna Loy', 'p': 'spouse', 'o': '?x0', 't': '1944'}

 Q: What is meant by flattening of the Earth?
 SPARQL: select distinct ?answer where { wd:Q2 wdt:P1102 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Earth', 'p': 'flattening', 'o': '?x0'}

 Q: Tell me which is the agricultural deity which starts with the letter s?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24284226 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'agricultural deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Where is the capital that is adjacent to the Rewari district?
 SPARQL: SELECT ?answer WHERE { wd:Q2301759 wdt:P47 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rewari district', 'p': 'adjacent to', 'o': '$y0'}}

 Q: What is {nominated for} of {Stagecoach} that is {nominee} is {W. Franke Harling} ?
 SPARQL: SELECT ?obj WHERE { wd:Q50714 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q331123 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stagecoach', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'W. Franke Harling'}}}

 Q: What is {elected in} and {end cause} of {{Clement Attlee} has {position held} as {Member of the 38th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q129006 p:P39 ?s . ?s ps:P39 wd:Q41582597 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement Attlee', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 38th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement Attlee', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 38th Parliament of the United Kingdom'}}}]

 Q: what is the {point in time} for {Karl Malone} has {award received} as {All-NBA Team} ?
 SPARQL: SELECT ?value WHERE { wd:Q199896 p:P166 ?s . ?s ps:P166 wd:Q674359 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Karl Malone', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'All-NBA Team'}, 't': '?x0'}

 Q: What is {educated at} of {Jacques Lacan} that is {end time} is {1919-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q169906 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1919')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacques Lacan', 'p': 'educated at', 'o': '?x0', 't': '1919'}

 Q: Can you describe the state of Hagia Sophia in 1931?
 SPARQL: SELECT ?obj WHERE { wd:Q12506 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1931')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hagia Sophia', 'p': 'type', 'o': '?x0', 't': '1931'}

 Q: Tell me the federal states that starts with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43702 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the area of engineering in the field of work of Claude Shannon?
 SPARQL:  select distinct ?obj where { wd:Q92760 wdt:P101 ?obj . ?obj wdt:P31 wd:Q12015335 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Claude Shannon', 'p': 'field of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of engineering'}}

 Q: What is {continues from} of {county seat for} of {Erfurt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1729 wdt:P1376 ?X . ?X wdt:P1365 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continues from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erfurt', 'p': 'county seat of', 'o': '$y0'}}

 Q: What is the {drug} with the {MAX(speed of sound)} whose {found in taxon} is {Homo sapiens}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12140 . ?ent wdt:P2075 ?obj . ?ent wdt:P703 wd:Q15978631 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'speed of sound', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'drug', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'found in taxon', 'o': 'Homo sapiens'}}}

 Q: Is the flattening of the moon 0.00125?
 SPARQL: ASK WHERE { wd:Q405 wdt:P1102 ?obj filter(?obj = 0.00125) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'moon', 'p': 'flattening', 'o': '?x0', '?x0': '0.00125'}

 Q: Name the asteroid belonging to an asteroid belt with the highest mean anomaly.
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3863 . ?ent wdt:P2325 ?obj . ?ent wdt:P196 wd:Q2179 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'mean anomaly', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'minor planet group', 'o': 'asteroid belt'}}}

 Q: Tell me  meteorological phenomenon   whose name has the word WIND IN IT
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16332653 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wind')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'meteorological phenomenon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wind'}}

 Q: What is the {human} for {stepparent} of {Jiang Zemin}
 SPARQL:  select distinct ?obj where { wd:Q16597 wdt:P3448 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jiang Zemin', 'p': 'stepparent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What are the prediction which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q748250 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prediction'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {position held} of {David Lloyd George} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q134982 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {start time} and {end time} of {{Alfred Marshall} has {residence} as {Marshall House, Cambridge}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q13529 p:P551 ?s . ?s ps:P551 wd:Q6773623 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Marshall', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Marshall House, Cambridge'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'until', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Marshall', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Marshall House, Cambridge'}}}]

 Q: How many notable works did Muriel Spark create?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q233956 wdt:P800 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Muriel Spark', 'p': 'notable work', 'o': '?x0'}

 Q: Which is the takeoff roll for Typhoon?
 SPARQL: select distinct ?answer where { wd:Q151384 wdt:P2430 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Typhoon', 'p': 'takeoff roll', 'o': '?x0'}

 Q: Did {abortion} {has cause} {sexual intercourse} and {vaginal intercourse} ?
 SPARQL: ASK WHERE { wd:Q8452 wdt:P828 wd:Q5873 . wd:Q8452 wdt:P828 wd:Q164654 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'abortion', 'p': 'cause', 'o': '?x0', '?x0': 'sexual intercourse'}, {'h': 'IS', 'v': '?x1', 's': 'abortion', 'p': 'cause', 'o': '?x1', '?x1': 'vaginal intercourse'}]

 Q: What is {publication date} of {Team Fortress 2} that is {distribution} is {retail software} ?
 SPARQL: SELECT ?obj WHERE { wd:Q382108 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P437 wd:Q7316614 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Team Fortress 2', 'p': 'published', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'distribution', 'o': 'retail software'}}}

 Q: How many {field of work} are to/by {Middle Ages} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P101 wd:Q12554 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'fields', 'o': 'Middle Ages'}

 Q: What is the {war} for {participant} of {Allies}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q329888 . ?sbj wdt:P31 wd:Q198 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Allies', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war'}}

 Q: What is {this taxon is the source of} of {higher taxon} of {Dioscorea cubijensis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55846241 wdt:P171 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is the source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dioscorea cubijensis', 'p': 'higher taxon', 'o': '$y0'}}

 Q: What is the painting of the pendant to Le feu aux poudres?
 SPARQL: SELECT ?answer WHERE { wd:Q19966700 wdt:P1639 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painting of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Le feu aux poudres', 'p': 'pendant to', 'o': '$y0'}}

 Q: What is the {galaxy} for {child astronomical body} of {Andromeda Galaxy}
 SPARQL:  select distinct ?obj where { wd:Q2469 wdt:P398 ?obj . ?obj wdt:P31 wd:Q318 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andromeda', 'p': 'child astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'galaxy'}}

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: What is {award received} of {Brno} where {point in time} is {2008-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q14960 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Brno', 'p': 'award received', 'o': '?x0', 't': '2008'}

 Q: What is {mother tongue} of {Chris Hansen}, that has {has case} is {nominative case} ?
 SPARQL: SELECT ?answer WHERE { wd:Q562448 wdt:P103 ?answer . ?answer wdt:P2989 wd:Q131105}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chris Hansen', 'p': 'mother tongue', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has case', 'o': 'nominative case'}}

 Q: Which {academic major} and {academic degree} of {{Henry Cabot Lodge} was {educated at} as {Harvard University}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q174037 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Cabot Lodge', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Cabot Lodge', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard University'}}}]

 Q: Who is the member of the political party and also the participant of Fedor Emelianenko?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q205953 wdt:P102 ?ans_1 . wd:Q205953 wdt:P1344 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Fedor Emelianenko', 'p': 'party', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Fedor Emelianenko', 'p': 'participant of', 'o': '?x1'}]

 Q: What is the {class of award} for {nominated for} of {Ron Howard}
 SPARQL:  select distinct ?obj where { wd:Q103646 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q38033430 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ron Howard', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'class of award'}}

 Q: who  is the sculpture for collection of Venice?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P195 wd:Q641 . ?sbj wdt:P31 wd:Q860861 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'Venice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sculpture'}}

 Q: Which is indigenous to Liguria?
 SPARQL: select distinct ?answer where { ?answer wdt:P2341 wd:Q1256}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'indigenous to', 'o': 'Liguria'}

 Q: What is {written by} of {prequel of} of {The Structures of Everyday Life} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55399602 wdt:P156 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'written by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Structures of Everyday Life', 'p': 'prequel of', 'o': '$y0'}}

 Q: Which is the ASMP member ID of Jean Tirole?
 SPARQL: select distinct ?answer where { wd:Q173994 wdt:P5362 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean Tirole', 'p': 'ASMP member ID', 'o': '?x0'}

 Q: what is the {character role} for {Lost} has {cast member} as {Yunjin Kim} ?
 SPARQL: SELECT ?value WHERE { wd:Q23567 p:P161 ?s . ?s ps:P161 wd:Q229389 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lost', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Yunjin Kim'}}}

 Q: Which company owns Walt Disney Parks and Resorts?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1830 wd:Q1431781 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owns', 'o': 'Disney Parks', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'company'}}

 Q: What is the voting round with the  maximum number of abstentions whose office contested is State Vice Governor of Brazil?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q24097670 . ?ent wdt:P5043 ?obj . ?ent wdt:P541 wd:Q51334165 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of abstentions', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'voting round', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'office contested', 'o': 'State Vice Governor of Brazil'}}}

 Q: What is the {national railway} for {location of formation} of {Paris}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P740 wd:Q90 . ?sbj wdt:P31 wd:Q2324835 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'formed in', 'o': 'Paris', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national railway'}}

 Q: Which is in the Indian reserve of the County Meath having gps coordinate of -6.25972?
 SPARQL: SELECT ?answer WHERE { wd:Q183544 wdt:P131 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-6.25972'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'County Meath', 'p': 'is in the Indian reserve of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gps coordinate', 'o': '-6.25972'}}

 Q: Which is a fictional universe described in Bleach?
 SPARQL: select distinct ?answer where { ?answer wdt:P1445 wd:Q904}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional universe described in', 'o': 'Bleach'}

 Q: Mobutu Sese Seko is the chairperson for which political party?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q164535 . ?sbj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Mobutu Sese Seko', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: When was the language of the digital signal processor created?
 SPARQL: SELECT ?answer WHERE { wd:Q106370 wdt:P277 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'created', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'digital signal processor', 'p': 'language', 'o': '$y0'}}

 Q: How many were killed by Giovanni Falcone?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q207073 wdt:P157 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Giovanni Falcone', 'p': 'killed by', 'o': '?x0'}

 Q: How many sports are for the {draughts} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P641 wd:Q1293 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'draughts'}

 Q: what is the {determination method} for {Bari} has {population} as {324198.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q3519 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'324198.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bari', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '324198.0'}}}

 Q: what is the {start time} for {Fritz Walter} has {member of sports team} as {Germany national football team} ?
 SPARQL: SELECT ?value WHERE { wd:Q22717 p:P54 ?s . ?s ps:P54 wd:Q43310 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fritz Walter', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Germany national football team'}}}

 Q: Who is confused with Pearl Bailey that has an alma mater at North Carolina State University?
 SPARQL: SELECT ?answer WHERE { wd:Q462118 wdt:P1889 ?answer . ?answer wdt:P69 wd:Q1132346}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pearl Bailey', 'p': 'confused with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alma mater', 'o': 'North Carolina State University'}}

 Q: What is the reason for Sophocles death on January 1st, 405 BCE?
 SPARQL: SELECT ?value WHERE { wd:Q7235 p:P570 ?s . ?s ps:P570 ?x filter(contains(?x,'-405-1-1')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sophocles', 'p': 'death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'death', 'o': '-405-1-1'}}}

 Q: Which is the animated feature film where David Spade is a voice actor?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q298658 . ?sbj wdt:P31 wd:Q29168811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'David Spade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated feature film'}}

 Q: "Which exchange of Nokia, is shown in Die Hard with a Vengeance?"
 SPARQL: SELECT ?answer WHERE { wd:Q1418 wdt:P414 ?answer . ?answer wdt:P1441 wd:Q106871}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nokia', 'p': 'exchange', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is shown in', 'o': 'Die Hard with a Vengeance'}}

 Q: Which cultural area has the lowest total imports from the significant event Harrying of the North
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q518261 . ?ent wdt:P2136 ?obj . ?ent wdt:P793 wd:Q1703402} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'total imports', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cultural area', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Harrying of the North'}}}

 Q: What is the {doctoral thesis} for {doctoral thesis} of {Stephen Hawking}
 SPARQL:  select distinct ?obj where { wd:Q17714 wdt:P1026 ?obj . ?obj wdt:P31 wd:Q187685 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stephen Hawking', 'p': 'thesis', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'doctoral thesis'}}

 Q: What is {environment} of {Five Nights at Freddy's}, that has {licence} is {GNU General Public License} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19847113 wdt:P400 ?answer . ?answer wdt:P275 wd:Q7603}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Five Nights at Freddy's", 'p': 'environment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'licence', 'o': 'GNU General Public License'}}

 Q: What is the {madhhab} for {religion} of {Druze}
 SPARQL:  select distinct ?obj where { wd:Q163943 wdt:P140 ?obj . ?obj wdt:P31 wd:Q209928 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Druze', 'p': 'religion', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'madhhab'}}

 Q: When Vin Diesel, with its net worth estimate 1.9e+08, started?
 SPARQL: SELECT ?value WHERE { wd:Q178166 p:P2218 ?s . ?s ps:P2218 ?x filter(contains(?x,'1.9e+08')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vin Diesel', 'p': 'net worth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'net worth', 'o': '1.9e+08'}, 't': '?x0'}

 Q: What is the Dailymotion channel ID of David Guetta?
 SPARQL: select distinct ?answer where { wd:Q8298 wdt:P2942 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Guetta', 'p': 'Dailymotion channel ID', 'o': '?x0'}

 Q: What was the name of Antonio Gades's wife?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q561048 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio Gades', 'p': 'wife', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'wife', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio Gades', 'p': 'wife', 'o': '$y0'}}]

 Q: Is the number of perpetrators of the Gladbeck hostage crisis equal to 3?
 SPARQL: ASK WHERE { wd:Q896727 wdt:P3886 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Gladbeck hostage crisis', 'p': 'number of perpetrators', 'o': '?x0', '?x0': '3'}

 Q: What is {adjacent to} of {Düsseldorf}, that has {twin cities} is {Żnin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1718 wdt:P47 ?answer . ?answer wdt:P190 wd:Q324941}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Düsseldorf', 'p': 'adjacent to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin cities', 'o': 'Żnin'}}

 Q: What is {produces} of {administrator} of {Q/U Imaging ExperimenT} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7265603 wdt:P137 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'produces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Q/U Imaging ExperimenT', 'p': 'administrator', 'o': '$y0'}}

 Q: What fictional location starts with the letter "z"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3895768 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional location'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: From what country is Jacques Cartier, who was born in Rotheneuf?
 SPARQL: SELECT ?value WHERE { wd:Q7321 p:P19 ?s . ?s ps:P19 wd:Q2168809 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacques Cartier', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Rotheneuf'}}}

 Q: what is the {replaces} for {Zachary Taylor} has {position held} as {President of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q11896 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zachary Taylor', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the United States'}}}

 Q: Which is the communist party of the mouthpiece of Pravda and which contains the word communist in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q233591 . ?sbj wdt:P2813 wd:Q183644 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'communist')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'communist party', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mouthpiece', 'o': 'Pravda'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'communist'}}

 Q: Tell me asymmetric warfare  whose name has the word drug  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q752673 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'drug')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asymmetric warfare'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'drug'}}

 Q: Who is the {human} for {relative} of {Joseph Conrad}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1038 wd:Q82925 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'relative', 'o': 'Joseph Conrad', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the Euler characteristic of G2 equal to 0?
 SPARQL: ASK WHERE { wd:Q869338 wdt:P6438 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'G2', 'p': 'Euler characteristic', 'o': '?x0', '?x0': '0'}

 Q: Which is the adjacent building for Tate Modern?
 SPARQL: select distinct ?answer where { wd:Q193375 wdt:P3032 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tate Modern', 'p': 'adjacent building', 'o': '?x0'}

 Q: Which United States single has the maximum beats per minute?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q134556 . ?ent wdt:P1725 ?obj . ?ent wdt:P495 wd:Q30 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'beats per minute', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'United States'}}}

 Q: What is {award received} of {Frank Borzage} that is {for work} is {Seventh Heaven} ?
 SPARQL: SELECT ?obj WHERE { wd:Q369190 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q368451 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Borzage', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Seventh Heaven'}}}

 Q: What is the sign language for the written spelling of Ronnie Corbett?
 SPARQL: SELECT ?answer WHERE { wd:Q756377 wdt:P1412 ?X . ?X wdt:P2919 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sign', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ronnie Corbett', 'p': 'language', 'o': '$y0'}}

 Q: Where is the {architectural structure} of {architect} {Zaha Hadid}?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q47780 . ?sbj wdt:P31 wd:Q811979 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Zaha Hadid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'architectural structure'}}

 Q: What sculpture is located at Yale University?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q49112 . ?sbj wdt:P31 wd:Q860861 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Yale University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sculpture'}}

 Q: What is the {residence} and the {occupation} of {Christopher_Walken} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q185051 wdt:P551 ?ans_1 . wd:Q185051 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Christopher Walken', 'p': 'residence', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Christopher Walken', 'p': 'occupation', 'o': '?x1'}]

 Q: Is the number of spans of Ponte dell'Accademia equal to 1.2?
 SPARQL: ASK WHERE { wd:Q52509 wdt:P1314 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "Ponte dell'Accademia", 'p': 'number of spans', 'o': '?x0', '?x0': '1.2'}

 Q: What federal state was replaced by the Thirteen Colonies?
 SPARQL:  select distinct ?obj where { wd:Q179997 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thirteen Colonies', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: Which is the geochronological unit which contains the word silurian in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6156156 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'silurian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geochronological unit'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'silurian'}}

 Q: To whom was Osip Mandelstam married in the year 1922?
 SPARQL: SELECT ?obj WHERE { wd:Q189950 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1922')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Osip Mandelstam', 'p': 'married', 'o': '?x0', 't': '1922'}

 Q: How many {place of publication} are to/by {Nottingham} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P291 wd:Q41262 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'place of publication', 'o': 'Nottingham'}

 Q: How many Pokémon browser numbers are there for the {Pikachu} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9351 wdt:P1685 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Pikachu', 'p': 'Pokémon browser number', 'o': '?x0'}

 Q: Who was head of government of Chemnitz on 1961?
 SPARQL: SELECT ?obj WHERE { wd:Q2795 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chemnitz', 'p': 'head of government', 'o': '?x0', 't': '1961'}

 Q: Is the boyfriend of Poseidon who has daughters Briareus?
 SPARQL: SELECT ?answer WHERE { wd:Q41127 wdt:P451 ?answer . ?answer wdt:P40 wd:Q849647}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Poseidon', 'p': 'boyfriend', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'daughter', 'o': 'Briareus'}}

 Q: How many are influenced by Gustave Courbet?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P737 wd:Q34618 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'influenced by', 'o': 'Gustave Courbet'}

 Q: Was Tina Turner's discography known as 50 Cent discography?
 SPARQL: ASK WHERE { wd:Q131814 wdt:P358 wd:Q1513998 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Tina Turner', 'p': 'discography', 'o': '?x0', '?x0': '50 Cent discography'}]

 Q: What is {division} of {teams played for} of {Harry Beadles} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10449958 wdt:P54 ?X . ?X wdt:P118 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'division', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harry Beadles', 'p': 'team', 'o': '$y0'}}

 Q: what is the {replaced by} for {Lester B. Pearson} has {position held} as {Prime Minister of Canada} ?
 SPARQL: SELECT ?value WHERE { wd:Q128604 p:P39 ?s . ?s ps:P39 wd:Q839078 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lester B. Pearson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Canada'}}}

 Q: What is the {native language} and the {languages spoken, written or signed} of {Swami_Vivekananda} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q47478 wdt:P103 ?ans_1 . wd:Q47478 wdt:P1412 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Vivekananda', 'p': 'native language', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Vivekananda', 'p': 'language', 'o': '?x1'}]

 Q: Is the size of the team at the finish of the 2015 Iditarod larger than 4.8?
 SPARQL: ASK WHERE { wd:Q19455277 wdt:P2105 ?obj filter(?obj > 4.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '2015 Iditarod', 'p': 'size of team at finish', 'o': '?x0', '?x0': '4.8'}

 Q: Give me {therapy} that {author} {Sigmund Freud} and which contains the word {psychoanalysis} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179661 . ?sbj wdt:P50 wd:Q9215 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'psychoanalysis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'therapy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Sigmund Freud'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'psychoanalysis'}}

 Q: Was David Foster Wallace's notable works "Infinite Jest" and "House of Leaves"?
 SPARQL: ASK WHERE { wd:Q313246 wdt:P800 wd:Q1077445 . wd:Q313246 wdt:P800 wd:Q521688 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'David Foster Wallace', 'p': 'notable work', 'o': '?x0', '?x0': 'Infinite Jest'}, {'h': 'IS', 'v': '?x1', 's': 'David Foster Wallace', 'p': 'notable work', 'o': '?x1', '?x1': 'House of Leaves'}]

 Q: What was Anne Bancroft nominated for in 1967?
 SPARQL: SELECT ?obj WHERE { wd:Q183532 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anne Bancroft', 'p': 'nominated for', 'o': '?x0', 't': '1967'}

 Q: How many fabrication methods are used by illustrations?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2079 wd:Q178659 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'fabrication method', 'o': 'illustration'}

 Q: What is the common name with the highest minimum frequency of audible sound whose on focus list of Wikimedia project is Wikipedia:Vital articles?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q502895 . ?ent wdt:P3387 ?obj . ?ent wdt:P5008 wd:Q5460604 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'minimum frequency of audible sound', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'common name', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on focus list of Wikimedia project', 'o': 'Wikipedia:Vital articles'}}}

 Q: Is the orbital period of the 4765 Wasserburg equal to 2.71?
 SPARQL: ASK WHERE { wd:Q285478 wdt:P2146 ?obj filter(?obj = 2.71) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '4765 Wasserburg', 'p': 'orbital period', 'o': '?x0', '?x0': '2.71'}

 Q: Vanessa Redgrave was nominated for the Academy Awards.
 SPARQL:  select distinct ?obj where { wd:Q347879 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q19020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vanessa Redgrave', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Academy Awards'}}

 Q: Did {Kareena_Kapoor} {ethnic group} {Punjabi Muslim}?
 SPARQL: ASK WHERE { wd:Q184885 wdt:P172 wd:Q19893558 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kareena Kapoor', 'p': 'ethnic group', 'o': '?x0', '?x0': 'Punjabi Muslim'}]

 Q: What is {genomic start} of {AVP} that is {genomic assembly} is {Genome assembly GRCh38} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12009087 p:P644 ?s . ?s ps:P644 ?obj . ?s pq:P659 wd:Q20966585 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genomic start', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'AVP', 'p': 'genomic start', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genomic assembly', 'o': 'GRCh38'}}}

 Q: Which extinct language uses the Arabic alphabet?
 SPARQL:  select distinct ?obj where { wd:Q8196 wdt:P407 ?obj . ?obj wdt:P31 wd:Q38058796 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arabic alphabet', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'extinct language'}}

 Q: what is the {replaced by} for {Henry Addington, 1st Viscount Sidmouth} has {position held} as {Secretary of State for the Home Department} ?
 SPARQL: SELECT ?value WHERE { wd:Q312577 p:P39 ?s . ?s ps:P39 wd:Q2484309 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Addington, 1st Viscount Sidmouth', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary of State for the Home Department'}}}

 Q: Who was the plaintiff in the Nuremberg trials?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80130 wdt:P1620 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'plaintiff', 'o': '?x0'}

 Q: what is the {determination method} for {Olongapo} has {population} as {233040} ?
 SPARQL: SELECT ?value WHERE { wd:Q56759 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'233040')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Olongapo', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '233040'}}}

 Q: What is {position held} of {Leo X} that is {replaced by} is {Adrian VI} ?
 SPARQL: SELECT ?obj WHERE { wd:Q49237 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q57087 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leo X', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Adrian VI'}}}

 Q: What is {based in} of {New Mexico}, that has {diplomatic relation} is {Cayman Islands} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1522 wdt:P131 ?answer . ?answer wdt:P530 wd:Q5785}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New Mexico', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Cayman Islands'}}

 Q: What is the {human} for {work location} of {Yekaterinburg}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P937 wd:Q887 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Yekaterinburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the game platform of Candy Crush Saga that reads file format of WebM?
 SPARQL: SELECT ?answer WHERE { wd:Q8768018 wdt:P400 ?answer . ?answer wdt:P1072 wd:Q309440}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Candy Crush Saga', 'p': 'platform', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'reads file format', 'o': 'WebM'}}

 Q: What is the {monument} with the {MAX(lighthouse range)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4989906 . ?ent wdt:P2929 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'lighthouse range', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monument'}}

 Q: What is {end time} and {start time} of {{Nigel Farage} has {employer} as {Refco}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q318471 p:P108 ?s . ?s ps:P108 wd:Q2136640 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nigel Farage', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'Refco'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nigel Farage', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'Refco'}}}]

 Q: What is the {ancient civilization} for {located on terrain feature} of {classical antiquity}
 SPARQL:  select distinct ?obj where { wd:Q486761 wdt:P706 ?obj . ?obj wdt:P31 wd:Q28171280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'classical antiquity', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient civilization'}}

 Q: Are there 411600000.0 children on Earth out of school
 SPARQL: ASK WHERE { wd:Q2 wdt:P2573 ?obj filter(?obj = 411600000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Earth', 'p': 'number of out-of-school children', 'o': '?x0', '?x0': '411600000.0'}

 Q: Is Chuck Norris the student of Sun Hwan Chung?
 SPARQL: ASK WHERE { wd:Q2673 wdt:P1066 wd:Q15987799 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chuck Norris', 'p': 'student of', 'o': '?x0', '?x0': 'Sun Hwan Chung'}]

 Q: Tell mebook series whose name has the word world in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q277759 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book series'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: what is in the IRS Employer Identification Number of Chevron Corporation ?
 SPARQL: select distinct ?answer where { wd:Q319642 wdt:P1297 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chevron Corporation', 'p': 'IRS Employer Identification Number', 'o': '?x0'}

 Q: Is the field of view of the TZF 5d equal to 25?
 SPARQL: ASK WHERE { wd:Q42302419 wdt:P4036 ?obj filter(?obj = 25) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'TZF 5d', 'p': 'field of view', 'o': '?x0', '?x0': '25'}

 Q: What is {followed by} and {together with} of {{Guy of Lusignan} has {noble title} as {King of Jerusalem}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q294192 p:P97 ?s . ?s ps:P97 wd:Q693614 . ?s pq:P156 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'King of Jerusalem'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'together with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'King of Jerusalem'}}}]

 Q: How many names are there for Almaty?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q35493 wdt:P1448 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Almaty', 'p': 'name', 'o': '?x0'}

 Q: what is the {statement is subject of} for {Annette Bening} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q190602 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Annette Bening', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Did {Ernest_Hemingway} {country of citizenship} {United States of America}?
 SPARQL: ASK WHERE { wd:Q23434 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ernest Hemingway', 'p': 'country of citizenship', 'o': '?x0', '?x0': 'US'}]

 Q: Give me {season} that {month of the year} {August} and which that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24384 . ?sbj wdt:P2922 wd:Q122 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'season', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'month', 'o': 'August'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which is the short film that was produced by Hayao Miyazaki?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P162 wd:Q55400 . ?sbj wdt:P31 wd:Q24862 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'produced by', 'o': 'Hayao Miyazaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'short film'}}

 Q: What are the interdisciplinary science which start with the letter toxicology
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1665984 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'toxicology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'interdisciplinary science'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'toxicology'}}

 Q: For Bryansk Oblast, what is the aspect of Russian literature that has cities?
 SPARQL: SELECT ?answer WHERE { wd:Q179161 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q2810}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Russian literature', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Bryansk Oblast'}}

 Q: What is {location of burial} of {Mehmed the Conqueror}, that has {partner city} is {Damascus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q34503 wdt:P119 ?answer . ?answer wdt:P190 wd:Q3766}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mehmed the Conqueror', 'p': 'location of burial', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Damascus'}}

 Q: what is the {replaces} for {Henry VI of England} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q160337 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry VI of England', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: What is {located in the administrative territorial entity} of {Vilnius} that is {start time} is {1413-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q216 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1413')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vilnius', 'p': 'in', 'o': '?x0', 't': '1413'}

 Q: who SI derived unit for measured by energy?
 SPARQL:  select distinct ?obj where { wd:Q11379 wdt:P1880 ?obj . ?obj wdt:P31 wd:Q208469 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'energy', 'p': 'measured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'SI derived unit'}}

 Q: Which means {Banque de noms de lieux du Québec ID} at{Hudson Bay} ?
 SPARQL: select distinct ?answer where { wd:Q3040 wdt:P2100 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hudson Bay', 'p': 'Banque de noms de lieux du Québec ID', 'o': '?x0'}

 Q: What is {written by} of {Ficciones}, that has {autograph} is {Jorge Luis Borges autograph.png} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2483432 wdt:P50 ?answer . ?answer wdt:P109 ?x FILTER(contains(?x,'Jorge Luis Borges signature.png'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ficciones', 'p': 'written by', 'o': '?x0'}

 Q: which natural number with the highest numeric value whose instance is natural number?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21199 . ?ent wdt:P1181 ?obj . ?ent wdt:P31 wd:Q21199 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'numeric value', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural number'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Neymar} has {member of sports team} as {Brazil national under-17 football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q142794 p:P54 ?s . ?s ps:P54 wd:Q2402747 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neymar', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Brazil national under-17 football team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neymar', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Brazil national under-17 football team'}}}]

 Q: What is the {producer} and the {executive producer} of {Eternal_Sunshine_of_the_Spotless_Mind} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q208269 wdt:P162 ?ans_1 . wd:Q208269 wdt:P1431 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Eternal Sunshine of the Spotless Mind', 'p': 'producer', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Eternal Sunshine of the Spotless Mind', 'p': 'executive producer', 'o': '?x1'}]

 Q: What is Animal Farm derivative work?
 SPARQL: select distinct ?answer where { wd:Q1396889 wdt:P4969 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Animal Farm', 'p': 'derivative work', 'o': '?x0'}

 Q: Which is the song of the tracklist of OK Computer?
 SPARQL:  select distinct ?obj where { wd:Q202996 wdt:P658 ?obj . ?obj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'OK Computer', 'p': 'tracklist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: What is {headquarters location} of {HBO} that is {country} is {United States of America} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23633 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P17 wd:Q30 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'HBO', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'the United States'}}}

 Q: Who is the musician a split from of Tell Me 'bout It?
 SPARQL: SELECT ?answer WHERE { wd:Q1158846 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Tell Me 'bout It", 'p': 'split from', 'o': '$y0'}}

 Q: what is the {together with} for {Wladimir Klitschko} has {award received} as {Steiger Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q18797 p:P166 ?s . ?s ps:P166 wd:Q821717 . ?s pq:P1706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wladimir Klitschko', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Steiger Award'}}}

 Q: What particle radiation stars with the letter c?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q945733 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'particle radiation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Which is the refractive index for calcium carbonate?
 SPARQL: select distinct ?answer where { wd:Q23767 wdt:P1109 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'calcium carbonate', 'p': 'refractive index', 'o': '?x0'}

 Q: What is the galaxy cluster with the lowest flux whose constellation is Virgo ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q204107 . ?ent wdt:P2221 ?obj . ?ent wdt:P59 wd:Q8842} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'flux', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'galaxy cluster', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Virgo'}}}

 Q: What is the {sovereign state} for {head of government} of {Vladimir Lenin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q1394 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Vladimir Lenin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what is the {point in time} for {Harold Eugene Edgerton} has {award received} as {SPIE Gold Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q475733 p:P166 ?s . ?s ps:P166 wd:Q8153695 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Harold Eugene Edgerton', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'SPIE Gold Medal'}, 't': '?x0'}

 Q: Which is the Brit Humes's faculty that has been founded by Thomas Jefferson?
 SPARQL: SELECT ?answer WHERE { wd:Q2245635 wdt:P69 ?answer . ?answer wdt:P112 wd:Q11812}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Brit Hume', 'p': 'faculty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Thomas Jefferson'}}

 Q: What motto of Spain has the words "Further Beyond"?
 SPARQL: SELECT ?obj WHERE { wd:Q29 p:P1546 ?s . ?s ps:P1546 ?obj . ?s pq:P1451 ?x filter(contains(?x,'Further Beyond')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Spain', 'p': 'motto', 'o': '?x0'}

 Q: Which  business has the most subscribers?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P3744 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'subscribers', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What TV show is inspired by the life of Blackbeard?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P941 wd:Q213518 . ?sbj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'inspired by', 'o': 'Blackbeard', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV show'}}

 Q: When was Halley's Comet discovered?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q23054 wdt:P575 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': "Halley's Comet", 'p': 'discovered', 'o': '?x0'}

 Q: Is the vehicle range of INS Talwar equal to 4215?
 SPARQL: ASK WHERE { wd:Q175967 wdt:P2073 ?obj filter(?obj = 4215) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'INS Talwar', 'p': 'vehicle range', 'o': '?x0', '?x0': '4215'}

 Q: Who is the competitor for Battle of Breitenfeld(1631), that has language official as Italian?
 SPARQL: SELECT ?answer WHERE { wd:Q205379 wdt:P710 ?answer . ?answer wdt:P37 wd:Q652}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Breitenfeld', 'p': 'competitor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language official', 'o': 'Italian'}}

 Q: What is Anthony van Dyck's ECARTICO person ID?
 SPARQL: select distinct ?answer where { wd:Q150679 wdt:P2915 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anthony van Dyck', 'p': 'ECARTICO person ID', 'o': '?x0'}

 Q: What are the enterprise which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6881511 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is {human population} of {place of origin} of {culinary mustard} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131748 wdt:P495 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mustard', 'p': 'place of origin', 'o': '$y0'}}

 Q: Which cricket team has Mahela Jayawardene as the head coach and also starts with the letter "i"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17376093 . ?sbj wdt:P286 wd:Q2739165 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cricket team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'head coach', 'o': 'Mahela Jayawardene'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: What award did Richard Meier recieve on Janurary 1, 1988?
 SPARQL: SELECT ?obj WHERE { wd:Q159612 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Richard Meier', 'p': 'award', 'o': '?x0', 't': '1988'}

 Q: What is the {animated film} for {film editor} of {Hayao Miyazaki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1040 wd:Q55400 . ?sbj wdt:P31 wd:Q202866 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'film editor', 'o': 'Hayao Miyazaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated film'}}

 Q: What is {publication date} and {publisher} of {{Christopher Hitchens} has {notable work} as {God Is Not Great}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 wd:Q24596 . ?s pq:P577 ?value1 . ?s pq:P123 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'God Is Not Great'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publisher', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'God Is Not Great'}}}]

 Q: Who authored the Second Epistle of John, equivalent to John of Patmos?
 SPARQL: SELECT ?answer WHERE { wd:Q131453 wdt:P50 ?answer . ?answer wdt:P460 wd:Q2733634}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Second Epistle of John', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'equivalent to', 'o': 'John of Patmos'}}

 Q: What is the {posture} for {different from} of {sign language}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1889 wd:Q34228 . ?sbj wdt:P31 wd:Q8514257 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'different from', 'o': 'sign language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'posture'}}

 Q: Tell me the album which has The Tourist in the tracklist and starts with the letter c?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q482994 . ?sbj wdt:P658 wd:Q16639859 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'album', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tracklist', 'o': 'The Tourist'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Tell me mythical human-animal hybrid that contains the word polkan in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20902363 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'polkan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythical human-animal hybrid'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'polkan'}}

 Q: What is {date of birth} of {Chlothar II} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q209118 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What are the space observatory which start with the letter x
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q148578 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space observatory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: Tell me the sedative that starts with the letter n
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q847705 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sedative'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is the nominal GDP of La Rioja in the year 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q5727 p:P2131 ?s . ?s ps:P2131 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'La Rioja', 'p': 'nominal GDP', 'o': '?x0', 't': '2015'}

 Q: Does the number of losses of the 1924 British Lions tour to South Africa equal 9?
 SPARQL: ASK WHERE { wd:Q3535469 wdt:P1356 ?obj filter(?obj = 9) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1924 British Lions tour to South Africa', 'p': 'number of losses', 'o': '?x0', '?x0': '9'}

 Q: what {pupil of} {gioachino Rossini} has a {career} as a {musicologist}
 SPARQL: SELECT ?answer WHERE { wd:Q9726 wdt:P1066 ?answer . ?answer wdt:P106 wd:Q14915627}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rossini', 'p': 'pupil of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'musicologist'}}

 Q: Is the pitting resistance equivalent number of the UNS S32760 / EN 1.4501 super duplex stainless steel more than 48?
 SPARQL: ASK WHERE { wd:Q55841586 wdt:P5624 ?obj filter(?obj > 48.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'UNS S32760 / EN 1.4501 super duplex stainless steel', 'p': 'pitting resistance equivalent number', 'o': '?x0', '?x0': '48.0'}

 Q: What Lebesgue integration etymology died in 1942-7-26?
 SPARQL: SELECT ?answer WHERE { wd:Q853831 wdt:P138 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1942'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lebesgue integration', 'p': 'etymology', 'o': '?x0', 't': '1942'}

 Q: What position is referred to by the honorific prefix "Salman of Saudi Arabia"?
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P511 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'honorific prefix', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: Who is the {human} for {professional or sports partner} of {Scott Moir}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1327 wd:Q440940 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports partner', 'o': 'Scott Moir', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the administration head quarters of the twin city of Politecnico di Milano?
 SPARQL: SELECT ?answer WHERE { wd:Q392904 wdt:P159 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Politecnico di Milano', 'p': 'head quarters', 'o': '$y0'}}

 Q: What is {has grammatical person} of {uses language} of {PewDiePie} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13423853 wdt:P1412 ?X . ?X wdt:P5110 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical person', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'PewDiePie', 'p': 'language', 'o': '$y0'}}

 Q: What is {position held} of {Helmut Schmidt} that is {start time} is {1953-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2516 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Helmut Schmidt', 'p': 'position held', 'o': '?x0', 't': '1953'}

 Q: When was A.C. Milan retired from Head coach post?
 SPARQL: SELECT ?obj WHERE { wd:Q1543 p:P286 ?s . ?s ps:P286 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'A.C. Milan', 'p': 'coach', 'o': '?x0', 't': '2016'}

 Q: what is the {valid in period} for {Aix-en-Provence} has {located in time zone} as {UTC+02:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q47465 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aix-en-Provence', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+02:00'}}}

 Q: What is the {city} for {country} of {Roman Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q2277 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What are the historical event which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13418847 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical event'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Does Vince Vaughn have a residence in both Lake Forest and Buffalo Grove?
 SPARQL: ASK WHERE { wd:Q107730 wdt:P551 wd:Q575355 . wd:Q107730 wdt:P551 wd:Q967086 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Vince Vaughn', 'p': 'residence', 'o': '?x0', '?x0': 'Lake Forest'}, {'h': 'IS', 'v': '?x1', 's': 'Vince Vaughn', 'p': 'residence', 'o': '?x1', '?x1': 'Buffalo Grove'}]

 Q: What is the {God} for {incarnation of} of {Jesus Christ}
 SPARQL:  select distinct ?obj where { wd:Q302 wdt:P3701 ?obj . ?obj wdt:P31 wd:Q190 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jesus', 'p': 'incarnation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'God'}}

 Q: What is the {second family name in Spanish name} and the {position played on team / speciality} of {Diego_Maradona} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q17515 wdt:P1950 ?ans_1 . wd:Q17515 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Diego Maradona', 'p': 'second family name in Spanish name', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Diego Maradona', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: When was Gian Maria Volonté awarded the Silver Bear?
 SPARQL: SELECT ?value WHERE { wd:Q317110 p:P166 ?s . ?s ps:P166 wd:Q708135 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gian Maria Volonté', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Silver Bear'}, 't': '?x0'}

 Q: What is {has translation} of {originating source} of {Lê dynasty} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10800789 wdt:P248 ?X . ?X wdt:P747 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has translation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lê dynasty', 'p': 'originating source', 'o': '$y0'}}

 Q: Does the local dialling code for Houston include the country calling code +1?
 SPARQL: SELECT ?obj WHERE { wd:Q16555 p:P473 ?s . ?s ps:P473 ?obj . ?s pq:P474 ?x filter(contains(?x,'+1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dialling code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Houston', 'p': 'dialling code', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country calling code', 'o': '+1'}}}

 Q: what is the {start time} for {Nebraska} has {motto text} as {Equality before the law} ?
 SPARQL: SELECT ?value WHERE { wd:Q1553 p:P1451 ?s . ?s ps:P1451 ?x filter(contains(?x,'Equality before the law')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nebraska', 'p': 'motto', 'o': '$y0'}}

 Q: Which bridge is maintained by Amtrak?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P126 wd:Q23239 . ?sbj wdt:P31 wd:Q12280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'maintained by', 'o': 'Amtrak', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bridge'}}

 Q: What is {position held} of {Eisaku Satō} that is {replaced by} is {Kaneshichi Masuda} ?
 SPARQL: SELECT ?obj WHERE { wd:Q179871 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q11429351 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eisaku Sato', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Kaneshichi Masuda'}}}

 Q: What is Catalogus Professorum Lipsiensis ID for Peter Debye?
 SPARQL: select distinct ?answer where { wd:Q103835 wdt:P3409 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Peter Debye', 'p': 'Catalogus Professorum Lipsiensis ID', 'o': '?x0'}

 Q: Which is the part which is partially coincident with the curriculum?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1382 wd:Q207137 . ?sbj wdt:P31 wd:Q15989253 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partially coincident with', 'o': 'curriculum', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'part'}}

 Q: What are the colors of coal that have a sign language label of Csc-negre-spreadthesign.ogv?
 SPARQL: SELECT ?answer WHERE { wd:Q24489 wdt:P462 ?answer . ?answer wdt:P2919 ?x FILTER(contains(?x,'Csc-negre-spreadthesign.ogv'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'coal', 'p': 'color', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sign', 'o': 'csc-negre-spreadthesign.ogv'}}

 Q: What is {genetic association} of {regulates (molecular biology)} of {hsa-miR-7110-3p} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27594530 wdt:P128 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hsa-miR-7110-3p', 'p': 'regulates (molecular biology)', 'o': '$y0'}}

 Q: What is the {type of language} for {used by} of {human}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1535 wd:Q5 . ?sbj wdt:P31 wd:Q20829075 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'used by', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of language'}}

 Q: What is {followed by} and {follows} of {{Maroon 5} has {award received} as {Grammy Award for Best New Artist}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q182223 p:P166 ?s . ?s ps:P166 wd:Q1453643 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maroon 5', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best New Artist'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maroon 5', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best New Artist'}}}]

 Q: Does the brother of Fatimah have a Christian name of Abdullah?
 SPARQL: SELECT ?answer WHERE { wd:Q180123 wdt:P3373 ?answer . ?answer wdt:P735 wd:Q307578}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fatimah', 'p': 'bro', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Christian name', 'o': 'Abdullah'}}

 Q: What is printed by Johannes Gutenberg ?
 SPARQL: select distinct ?answer where { ?answer wdt:P872 wd:Q8958}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'printed by', 'o': 'Johannes Gutenberg'}

 Q: What is {series} of {Twenty Thousand Leagues Under the Sea} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q183565 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Twenty Thousand Leagues Under the Sea', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Twenty Thousand Leagues Under the Sea', 'p': 'series', 'o': '$y0'}}]

 Q: What was the population of Fes in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q80985 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fes', 'p': 'population', 'o': '?x0', 't': '2014'}

 Q: What is {location of work} of {Heinrich Schliemann}, that has {sister city} is {Amsterdam} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57106 wdt:P937 ?answer . ?answer wdt:P190 wd:Q9899}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Heinrich Schliemann', 'p': 'location of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Amsterdam'}}

 Q: What is {elected in} and {end cause} of {{Harold Macmillan} has {position held} as {Member of the 39th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q128985 p:P39 ?s . ?s ps:P39 wd:Q41582600 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 39th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 39th Parliament of the United Kingdom'}}}]

 Q: Which is the Instagram username for One Direction?
 SPARQL: select distinct ?answer where { wd:Q146027 wdt:P2003 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'One Direction', 'p': 'Instagram username', 'o': '?x0'}

 Q: Where is the place of death of Harry Mazer's wife?
 SPARQL: SELECT ?answer WHERE { wd:Q5670943 wdt:P26 ?X . ?X wdt:P20 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harry Mazer', 'p': 'wife', 'o': '$y0'}}

 Q: Which landlocked country follows the Islam religion?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P140 wd:Q432 . ?sbj wdt:P31 wd:Q123480 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'Islam', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'landlocked country'}}

 Q: what is the {replaced by} for {Ma Ying-jeou} has {position held} as {Chairperson of the Kuomintang} ?
 SPARQL: SELECT ?value WHERE { wd:Q19216 p:P39 ?s . ?s ps:P39 wd:Q16056439 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ma Ying-jeou', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chairperson of the Kuomintang'}}}

 Q: what is the {point in time} for {Ivan Bunin} has {award received} as {Pushkin Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q46602 p:P166 ?s . ?s ps:P166 wd:Q840693 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ivan Bunin', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Pushkin Prize'}, 't': '?x0'}

 Q: What is the Routard.com place ID for Arches National Park?
 SPARQL: select distinct ?answer where { wd:Q223969 wdt:P4986 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arches National Park', 'p': 'Routard.com place ID', 'o': '?x0'}

 Q: Tell me ethnolect whose name has the word perkerdansk in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q951873 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'perkerdansk')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnolect'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'perkerdansk'}}

 Q: What is the {male given name} for {given name} of {King Arthur}
 SPARQL:  select distinct ?obj where { wd:Q45792 wdt:P735 ?obj . ?obj wdt:P31 wd:Q12308941 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'King Arthur', 'p': 'given name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'male given name'}}

 Q: Is it true that the slope of El Dorado Speedway equals to 14?
 SPARQL: ASK WHERE { wd:Q16559802 wdt:P4184 ?obj filter(?obj = 14) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'El Dorado Speedway', 'p': 'slope', 'o': '?x0', '?x0': '14'}

 Q: Do the number of cylinders of the Prussian S 6 equal 2?
 SPARQL: ASK WHERE { wd:Q316791 wdt:P1100 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Prussian S 6', 'p': 'number of cylinders', 'o': '?x0', '?x0': '2'}

 Q: which language that starts with u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34770 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What character role did cast member Burt Ward play in Batman?
 SPARQL: SELECT ?value WHERE { wd:Q1247201 p:P161 ?s . ?s ps:P161 wd:Q537747 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'character role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Batman', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Burt Ward'}}}

 Q: Name the Boston-published commercial catalogue edition with the least pages ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q55089312 . ?ent wdt:P1104 ?obj . ?ent wdt:P291 wd:Q100} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'pages', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commercial catalogue', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'place of publication', 'o': 'Boston'}}}

 Q: what is the {point in time} for {Tony Bennett} has {award received} as {Grammy Lifetime Achievement Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q296729 p:P166 ?s . ?s ps:P166 wd:Q935843 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tony Bennett', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Lifetime Achievement Award'}, 't': '?x0'}

 Q: What is JSTOR journal code for Foreign Affairs ?
 SPARQL: select distinct ?answer where { wd:Q1135577 wdt:P1230 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Foreign Affairs', 'p': 'JSTOR journal code', 'o': '?x0'}

 Q: Give me {economic sector} that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3958441 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic sector'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: When did member of sports team of John Charles and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q312404 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Charles', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Charles', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Planet Nine is the parent astronomical body of what Population I star?
 SPARQL:  select distinct ?obj where { wd:Q22133699 wdt:P397 ?obj . ?obj wdt:P31 wd:Q3592493 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Planet Nine', 'p': 'parent astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Population I star'}}

 Q: What is {state headed by} of {is in the town of} of {Caraga} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13704 wdt:P131 ?X . ?X wdt:P35 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'state headed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Caraga', 'p': 'town', 'o': '$y0'}}

 Q: what is the {end cause} for {Dario Fo} has {spouse} as {Franca Rame} ?
 SPARQL: SELECT ?value WHERE { wd:Q765 p:P26 ?s . ?s ps:P26 wd:Q444509 . ?s pq:P1534 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dario Fo', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Franca Rame'}}}

 Q: what is the {end time} for {Shirley Temple} has {position held} as {United States Ambassador to Ghana} ?
 SPARQL: SELECT ?value WHERE { wd:Q182580 p:P39 ?s . ?s ps:P39 wd:Q7889302 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shirley Temple', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States Ambassador to Ghana'}}}

 Q: What is the position held by Peter Garrett who is replaced by Matt Thistlethwaite?
 SPARQL: SELECT ?obj WHERE { wd:Q528907 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q6789423 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Garrett', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Matt Thistlethwaite'}}}

 Q: When did Bremen lose territory in the year 1949?
 SPARQL: SELECT ?obj WHERE { wd:Q1209 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1949')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bremen', 'p': 'in', 'o': '?x0', 't': '1949'}

 Q: what is the {number of points/goals/set scored} for {David Campese} has {member of sports team} as {Australia national rugby union team} ?
 SPARQL: SELECT ?value WHERE { wd:Q1173922 p:P54 ?s . ?s ps:P54 wd:Q622443 . ?s pq:P1351 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Campese', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Australia national rugby union team'}}}

 Q: what is the {for work} for {John Barry} has {award received} as {Academy Award for Best Original Score, no Musical} ?
 SPARQL: SELECT ?value WHERE { wd:Q111074 p:P166 ?s . ?s ps:P166 wd:Q22752734 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Barry', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Original Score, no Musical'}}}

 Q: Did {influenza} {genetic association} {SLC15A1} and {COL28A1} ?
 SPARQL: ASK WHERE { wd:Q2840 wdt:P2293 wd:Q18031564 . wd:Q2840 wdt:P2293 wd:Q18055395 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'influenza', 'p': 'genetic association', 'o': '?x0', '?x0': 'SLC15A1'}, {'h': 'IS', 'v': '?x1', 's': 'influenza', 'p': 'genetic association', 'o': '?x1', '?x1': 'COL28A1'}]

 Q: Is the orbital eccentricity of Desdemona more than 0.000156?
 SPARQL: ASK WHERE { wd:Q15637 wdt:P1096 ?obj filter(?obj > 0.000156) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Desdemona', 'p': 'orbital eccentricity', 'o': '?x0', '?x0': '0.000156'}

 Q: What is {co-founded by} of {member of} of {Gianfranco Sanguinetti} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3105216 wdt:P463 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gianfranco Sanguinetti', 'p': 'member of', 'o': '$y0'}}

 Q: Tell me logographic writing system whose name has the word script in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3953107 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'script')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'logographic writing system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'script'}}

 Q: What is the {medication} for {drug used for treatment} of {mental disorder}
 SPARQL:  select distinct ?obj where { wd:Q12135 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mental disorder', 'p': 'used for treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medication'}}

 Q: What is {has moon} of {parent body} of {Ring Nebula} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13969 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has moon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ring Nebula', 'p': 'parent body', 'o': '$y0'}}

 Q: What is {sister} of {child of} of {Charles de Valois, Duke of Angoulême} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1066613 wdt:P22 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles de Valois, Duke of Angoulême', 'p': 'child of', 'o': '$y0'}}

 Q: What is {sister city} of {birth place} of {Lisa Nowak} ?
 SPARQL: SELECT ?answer WHERE { wd:Q49264 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lisa Nowak', 'p': 'birth place', 'o': '$y0'}}

 Q: What is {genetic association} of {murder method} of {Alexander Woollcott} ?
 SPARQL: SELECT ?answer WHERE { wd:Q361859 wdt:P509 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Woollcott', 'p': 'murder method', 'o': '$y0'}}

 Q: Which family member of Luca Signorelli is a writer by profession? 

Name the family member of Luca Signorelli who is a writer by profession. 

Which of Luca Signorelli's relatives has a career in writing? 

Who is the relative of Luca Signorelli who has a career in writing?
 SPARQL: SELECT ?answer WHERE { wd:Q7031 wdt:P1038 ?answer . ?answer wdt:P106 wd:Q36180}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Luca Signorelli', 'p': 'relative', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'writer'}}

 Q: what is the {character role} for {ER} has {cast member} as {Noah Wyle} ?
 SPARQL: SELECT ?value WHERE { wd:Q207375 p:P161 ?s . ?s ps:P161 wd:Q315208 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ER', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Noah Wyle'}}}

 Q: How many distributions are there of a printed circuit board?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P437 wd:Q173350 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'distribution', 'o': 'printed circuit board'}

 Q: Were the number of casualties of the 2005 Jilin chemical plant explosions less than 4.8?
 SPARQL: ASK WHERE { wd:Q904738 wdt:P1590 ?obj filter(?obj < 4.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '2005 Jilin chemical plant explosions', 'p': 'number of casualties', 'o': '?x0', '?x0': '4.8'}

 Q: Which is the strand orientation for RHO?
 SPARQL: select distinct ?answer where { wd:Q14859555 wdt:P2548 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'RHO', 'p': 'strand orientation', 'o': '?x0'}

 Q: What is the abjad that is the language of work or name of Hebrew and contains the word alphabet?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185087 . ?sbj wdt:P407 wd:Q9288 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alphabet')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abjad', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Hebrew'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'alphabet'}}

 Q: Did {Shiva} {mount} {Nandi}?
 SPARQL: ASK WHERE { wd:Q11378 wdt:P3091 wd:Q841255 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Shiva', 'p': 'mount', 'o': '?x0', '?x0': 'Nandi'}]

 Q: The Lagrangian point of Wilkinson Microwave Anisotropy Probe is?
 SPARQL: select distinct ?answer where { wd:Q274106 wdt:P1145 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wilkinson Microwave Anisotropy Probe', 'p': 'Lagrangian point', 'o': '?x0'}

 Q: What awards did George Meredith receive for Merit?
 SPARQL: SELECT ?answer WHERE { wd:Q90238 wdt:P166 ?answer . ?answer wdt:P1451 ?x FILTER(contains(?x,'For Merit'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Meredith', 'p': 'awards', 'o': '?x0'}

 Q: Which is the Japanese writing system for the writing system of Japanese?
 SPARQL:  select distinct ?obj where { wd:Q5287 wdt:P282 ?obj . ?obj wdt:P31 wd:Q190502 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Japanese', 'p': 'writing system', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Japanese writing system'}}

 Q: Where is {subsidiary entity} {built by} {B-1 Lancer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q218636 wdt:P176 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'B-1 Lancer', 'p': 'built by', 'o': '$y0'}}

 Q: Which is the schism for the significant event of the Russian Orthodox Church?
 SPARQL:  select distinct ?obj where { wd:Q60995 wdt:P793 ?obj . ?obj wdt:P31 wd:Q41521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian Orthodox Church', 'p': 'significant event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'schism'}}

 Q: "Which is {not the same as} of {mushroom}, whose {type of taxon} is {species} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q83093 wdt:P1889 ?answer . ?answer wdt:P105 wd:Q7432}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'mushroom', 'p': 'not the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type of taxon', 'o': 'species'}}

 Q: What is {number of points/goals/set scored} and {number of matches played} of {{Kevin Keegan} has {member of sports team} as {Newcastle United F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q152832 p:P54 ?s . ?s ps:P54 wd:Q18716 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Keegan', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Newcastle United F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Keegan', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Newcastle United F.C.'}}}]

 Q: Give me {Norse deity} that {official residence} {Asgard} and which that starts with {'o'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16513881 . ?sbj wdt:P263 wd:Q178182 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Norse deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official residence', 'o': 'Asgard'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: What is { nominated for } of { Peter Matthiessen } that is { point in time } is { 2002 - 0 }?
 SPARQL: SELECT ?obj WHERE { wd:Q892108 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Matthiessen', 'p': 'nominated for', 'o': '?x0', 't': '2002'}

 Q: what is the {end time} for {Ernest Shackleton} has {record held} as {Farthest South} ?
 SPARQL: SELECT ?value WHERE { wd:Q957543 p:P1000 ?s . ?s ps:P1000 wd:Q2342357 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ernest Shackleton', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Farthest South'}}}

 Q: What is {nominated for} of {Éric Rohmer} that is {for work} is {The Marquise of O} ?
 SPARQL: SELECT ?obj WHERE { wd:Q50764 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q553649 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Éric Rohmer', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Marquise of O'}}}

 Q: What is the trend of sculptors of Physichromie 48
 SPARQL: SELECT ?answer WHERE { wd:Q28036714 wdt:P170 ?X . ?X wdt:P135 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'trend', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Physichromie 48', 'p': 'sculptor', 'o': '$y0'}}

 Q: Did Marilyn Monroe speak Romance languages?
 SPARQL: ASK WHERE { wd:Q4616 wdt:P1412 wd:Q19814 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Marilyn Monroe', 'p': 'language', 'o': '?x0', '?x0': 'Romance languages'}]

 Q: what is the {point in time} for {Karrie Webb} has {award received} as {Australian Sports Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q271024 p:P166 ?s . ?s ps:P166 wd:Q1649458 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Karrie Webb', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Australian Sports Medal'}, 't': '?x0'}

 Q: Where is Jacob W. Davis' place of death that is adjacent to Daly City?
 SPARQL: SELECT ?answer WHERE { wd:Q1488960 wdt:P20 ?answer . ?answer wdt:P47 wd:Q370925}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacob W. Davis', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'adjacent to', 'o': 'Daly City'}}

 Q: What number of theft convictions exist?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1399 wd:Q2727213 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'conviction', 'o': 'theft'}

 Q: What are the mantra which start with the letter M
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131510 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mantra'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: Which is the MusicBrainz work ID for Adagio in G minor?
 SPARQL: select distinct ?answer where { wd:Q346741 wdt:P435 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Adagio in G minor', 'p': 'MusicBrainz work ID', 'o': '?x0'}

 Q: what is the {end time} for {Condé Nast} has {chief executive officer} as {Steven Florio} ?
 SPARQL: SELECT ?value WHERE { wd:Q605401 p:P169 ?s . ?s ps:P169 wd:Q16017756 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Condé Nast', 'p': 'chief executive officer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chief executive officer', 'o': 'Steven Florio'}}}

 Q: what is the {start time} for {Kareena Kapoor} has {spouse} as {Saif Ali Khan} ?
 SPARQL: SELECT ?value WHERE { wd:Q184885 p:P26 ?s . ?s ps:P26 wd:Q252290 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareena Kapoor', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Saif Ali Khan'}}}

 Q: What is {human population} of {county seat for} of {Baghdad} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1530 wdt:P1376 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Baghdad', 'p': 'county seat for', 'o': '$y0'}}

 Q: Which is the rigid airship named after Paul von Hindenburg?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q2667 . ?sbj wdt:P31 wd:Q738584 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Paul von Hindenburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rigid airship'}}

 Q: what is the {for work} for {Gary Oldman} has {award received} as {BAFTA Award for Best Actor in a Leading Role} ?
 SPARQL: SELECT ?value WHERE { wd:Q83492 p:P166 ?s . ?s ps:P166 wd:Q400007 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gary Oldman', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'BAFTA Award for Best Actor in a Leading Role'}}}

 Q: What is {product} of {owners} of {Video CD} ?
 SPARQL: SELECT ?answer WHERE { wd:Q321259 wdt:P127 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'product', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Video CD', 'p': 'owner', 'o': '$y0'}}

 Q: When did spouse of Aleksandr Solzhenitsyn and end time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q34474 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is the {human} for {sport} of {cricket}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P641 wd:Q5375 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'cricket', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which federal state participated in the American Revolutionary War?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q40949 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participated in', 'o': 'American Revolutionary War', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What are the Christian movement which start with the letter P
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q995347 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is ISU figure skater ID for Ilia Kulik ?
 SPARQL: select distinct ?answer where { wd:Q1325882 wdt:P2694 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ilia Kulik', 'p': 'ISU figure skater ID', 'o': '?x0'}

 Q: How many {port of registry} are to/by {Tallinn} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P532 wd:Q1770 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'port of registry', 'o': 'Tallinn'}

 Q: What is the human being for Steven Pinker's sibling?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3373 wd:Q212730 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Steven Pinker', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What are the natural number which start with the letter g
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21199 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural number'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: Which is the cast member for King Kong?
 SPARQL: select distinct ?answer where { wd:Q309048 wdt:P161 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'King Kong', 'p': 'cast member', 'o': '?x0'}

 Q: Did {Kanye_West} {genre} {gangsta rap}?
 SPARQL: ASK WHERE { wd:Q15935 wdt:P136 wd:Q753679 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kanye West', 'p': 'genre', 'o': '?x0', '?x0': 'gangsta rap'}]

 Q: What's the patent number for MP3?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q42591 wdt:P1246 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'MP3', 'p': 'patent number', 'o': '?x0'}

 Q: Give me {noble family} that {basic form of government} {absolute monarchy} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13417114 . ?sbj wdt:P122 wd:Q184558 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble family', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'basic form of government', 'o': 'absolute monarchy'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Who is the disciple of sculptors of Village Street?
 SPARQL: SELECT ?answer WHERE { wd:Q20548739 wdt:P170 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disciple of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Village Street', 'p': 'sculptor', 'o': '$y0'}}

 Q: What is the {human} for {affiliation} of {McGill University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q201492 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'McGill University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {libretto by} of {Tristan und Isolde}, that has {has kid} is {Siegfried Wagner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1324254 wdt:P87 ?answer . ?answer wdt:P40 wd:Q143867}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tristan und Isolde', 'p': 'libretto by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Siegfried Wagner'}}

 Q: What is <Hockey-reference player ID> of <Bobby Hull> ?
 SPARQL: select distinct ?answer where { wd:Q456688 wdt:P3598 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bobby Hull', 'p': 'Hockey-reference player ID', 'o': '?x0'}

 Q: What is <BC Geographical Names ID> of <Strait of Juan de Fuca> ?
 SPARQL: select distinct ?answer where { wd:Q867627 wdt:P2099 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Strait of Juan de Fuca', 'p': 'BC Geographical Names ID', 'o': '?x0'}

 Q: What is the {star cluster} with the {MAX(apparent magnitude)} whose {discoverer or inventor} is {James Dunlop}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q168845 . ?ent wdt:P1215 ?obj . ?ent wdt:P61 wd:Q375158 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'apparent magnitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'star cluster', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discovered by', 'o': 'James Dunlop'}}}

 Q: what is the {for work} for {Gary Cooper} has {nominated for} as {Academy Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q93957 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gary Cooper', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}}}

 Q: How many {basic form of government} are to/by {republic} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P122 wd:Q7270 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'basic form of government', 'o': 'republic'}

 Q: What is the motif, whose symbol is the Earth symbol, of The Blue Marble?
 SPARQL: SELECT ?answer WHERE { wd:Q202014 wdt:P180 ?answer . ?answer wdt:P913 wd:Q426529}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Blue Marble', 'p': 'motif', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'symbol', 'o': 'Earth symbol'}}

 Q: What military order starts with the letter "s"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q474717 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military order'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {location of death} of {Doris Ulmann}, that has {inhabitants} is {391114.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q388471 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'391114.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Doris Ulmann', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '391114.0'}}

 Q: When John Dueholm ended as manager/director at Scandinavian Airlines?
 SPARQL: SELECT ?value WHERE { wd:Q187854 p:P1037 ?s . ?s ps:P1037 wd:Q24175767 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Scandinavian Airlines', 'p': 'manager', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'manager', 'o': 'John Dueholm'}}}

 Q: what is the {end time} for {Menachem Mendel Schneerson} has {notable work} as {Likkutei Sichos} ?
 SPARQL: SELECT ?value WHERE { wd:Q381397 p:P800 ?s . ?s ps:P800 wd:Q2907320 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Menachem Mendel Schneerson', 'p': 'work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work', 'o': 'Likkutei Sichos'}}}

 Q: What is the {chemical compound} for {drug used for treatment} of {anthrax}
 SPARQL:  select distinct ?obj where { wd:Q129104 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'anthrax', 'p': 'used for treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: what is the {end time} for {François Hollande} has {partner} as {Valérie Trierweiler} ?
 SPARQL: SELECT ?value WHERE { wd:Q157 p:P451 ?s . ?s ps:P451 wd:Q230539 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'François Hollande', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Valerie Trierweiler'}}}

 Q: what is the {replaced by} for {Jiang Zemin} has {position held} as {President of the People's Republic of China} ?
 SPARQL: SELECT ?value WHERE { wd:Q16597 p:P39 ?s . ?s ps:P39 wd:Q655407 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jiang Zemin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': "President of the People's Republic of China"}}}

 Q: What is the {IT consulting company} with the {MIN(market capitalization)} whose {subsidiary} is {IBM Denmark}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q20031260 . ?ent wdt:P2226 ?obj . ?ent wdt:P355 wd:Q16323757} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'market capitalization', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'IT consulting company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'IBM Denmark'}}}

 Q: what is the {end time} for {Nazareth} has {country} as {Ottoman Empire} ?
 SPARQL: SELECT ?value WHERE { wd:Q430776 p:P17 ?s . ?s ps:P17 wd:Q12560 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nazareth', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Ottoman Empire'}}}

 Q: What is the {country of the Kingdom of the Netherlands} with the {MAX(VAT-rate)} whose {member of} is {International Trade Union Confederation}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15304003 . ?ent wdt:P2855 ?obj . ?ent wdt:P463 wd:Q1071706 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'VAT-rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country of the Kingdom of the Netherlands', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Trade Union Confederation'}}}

 Q: What is {place of birth} of {Max von Sydow} that is {country} is {Sweden} ?
 SPARQL: SELECT ?obj WHERE { wd:Q203215 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q34 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Max von Sydow', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Sweden'}}}

 Q: Ireland  has how many ancestral homes?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P66 wd:Q27 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'ancestral home', 'o': 'Ireland'}

 Q: What is the number of Parkinson's disease genetic associations?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2293 wd:Q11085 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': "Parkinson's disease"}

 Q: What was Mary Martin nominated for in 1967?
 SPARQL: SELECT ?obj WHERE { wd:Q285483 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mary Martin', 'p': 'nominated for', 'o': '?x0', 't': '1967'}

 Q: What is {pronunciation audio} of {taxon parent} of {Mentha spicata} ?
 SPARQL: SELECT ?answer WHERE { wd:Q160114 wdt:P171 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mentha spicata', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What is the {physically interacts with} and the {significant drug interaction} of {Cocaine} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q41576 wdt:P129 ?ans_1 . wd:Q41576 wdt:P769 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Cocain', 'p': 'physically interacts with', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Cocain', 'p': 'drug interaction', 'o': '?x1'}]

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Dixie Dean} has {member of sports team} as {Sligo Rovers F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q316323 p:P54 ?s . ?s ps:P54 wd:Q244874 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dixie Dean', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Sligo Rovers F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dixie Dean', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Sligo Rovers F.C.'}}}]

 Q: Which is Swedish Film Database film ID for Nausicaä of the Valley of the Wind?
 SPARQL: select distinct ?answer where { wd:Q8885676 wdt:P2334 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nausicaä of the Valley of the Wind', 'p': 'Swedish Film Database film ID', 'o': '?x0'}

 Q: What is {typology} of {language of expression} of {Wayne Carey} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7976079 wdt:P1412 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wayne Carey', 'p': 'language', 'o': '$y0'}}

 Q: What award did Roger Federer receive in 2009?
 SPARQL: SELECT ?obj WHERE { wd:Q1426 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Roger Federer', 'p': 'award', 'o': '?x0', 't': '2009'}

 Q: What is the {inner planet} for {parent astronomical body} of {Mir}
 SPARQL:  select distinct ?obj where { wd:Q48604 wdt:P397 ?obj . ?obj wdt:P31 wd:Q3504248 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mir', 'p': 'parent astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inner planet'}}

 Q: What is the quantity for canton of Switzerland?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q23058 wdt:P1114 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'canton of Switzerland', 'p': 'quantity', 'o': '?x0'}

 Q: What is {owned by} and the {influenced by} of {JavaScript} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q2005 wdt:P127 ?ans_1 . wd:Q2005 wdt:P737 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'JavaScript', 'p': 'owned by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'JavaScript', 'p': 'influenced by', 'o': '?x1'}]

 Q: what is the {start time} for {Elon Musk} has {spouse} as {Justine Musk} ?
 SPARQL: SELECT ?value WHERE { wd:Q317521 p:P26 ?s . ?s ps:P26 wd:Q6318376 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Elon Musk', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Justine Musk'}}}

 Q: Give me {king in Greek mythology} that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24434794 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'king in Greek mythology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What are the series ordinal for hydrazine whose ionization energy is 8.93?
 SPARQL: SELECT ?value WHERE { wd:Q58447 p:P2260 ?s . ?s ps:P2260 ?x filter(contains(?x,'8.93')) . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hydrazine', 'p': 'ionization energy', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ionization energy', 'o': '8.93'}}}

 Q: What is the antonym of the aspect of animal colouration?
 SPARQL: SELECT ?answer WHERE { wd:Q3242894 wdt:P1269 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'animal colouration', 'p': 'aspect of', 'o': '$y0'}}

 Q: What  typology does Richard Wright use when writing languages?
 SPARQL: SELECT ?answer WHERE { wd:Q190251 wdt:P1412 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Wright', 'p': 'language', 'o': '$y0'}}

 Q: what is the {start time} for {Innsbruck} has {twinned administrative body} as {Kraków} ?
 SPARQL: SELECT ?value WHERE { wd:Q1735 p:P190 ?s . ?s ps:P190 wd:Q31487 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Innsbruck', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Kraków'}}}

 Q: How many {means of locomotion} are to/by {quadrupedalism} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3512 wd:Q21907045 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'means of locomotion', 'o': 'quadrupedalism'}

 Q: What is the {human} for {culture} of {Etruschi}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2596 wd:Q17161 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'culture', 'o': 'Etruschi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Did {Jay-Z} {native language} {Icelandic}?
 SPARQL: ASK WHERE { wd:Q62766 wdt:P103 wd:Q294 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jay-Z', 'p': 'native language', 'o': '?x0', '?x0': 'Icelandic'}]

 Q: What are the condiment which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2596997 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'condiment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: what is the {end time} for {FIFA} has {chairperson} as {João Havelange} ?
 SPARQL: SELECT ?value WHERE { wd:Q253414 p:P488 ?s . ?s ps:P488 wd:Q207358 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'FIFA', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'João Havelange'}}}

 Q: When did educated at of Carl Sagan and academic degree?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q410 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Sagan', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Sagan', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the {point in time} for {Dominican Republic} has {number of out of school children} as {385433.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q786 p:P2573 ?s . ?s ps:P2573 ?x filter(contains(?x,'385433.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dominican Republic', 'p': 'number of out of school children', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of out of school children', 'o': '385433.0'}, 't': '?x0'}

 Q: What is <The Encyclopedia of Science Fiction ID> of <Sherlock Holmes> ?
 SPARQL: select distinct ?answer where { wd:Q4653 wdt:P5357 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sherlock Holmes', 'p': 'The Encyclopedia of Science Fiction ID', 'o': '?x0'}

 Q: What is {same} of {assault}, that has {distinct from} is {homicide} ?
 SPARQL: SELECT ?answer WHERE { wd:Q365680 wdt:P460 ?answer . ?answer wdt:P1889 wd:Q149086}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'assault', 'p': 'same', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'distinct from', 'o': 'murder'}}

 Q: What is Women's Basketball Hall of Fame ID for Lisa Leslie ?
 SPARQL: select distinct ?answer where { wd:Q257980 wdt:P4410 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lisa Leslie', 'p': "Women's Basketball Hall of Fame ID", 'o': '?x0'}

 Q: How many {cuisine} are to/by {veganism} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2012 wd:Q181138 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'cuisine', 'o': 'veganism'}

 Q: What is {publication date} of {Nintendo 3DS} that is {place of publication} is {Australia} ?
 SPARQL: SELECT ?obj WHERE { wd:Q203597 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P291 wd:Q408 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nintendo 3DS', 'p': 'published', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of publication', 'o': 'Australia'}}}

 Q: When was Dwayne Johnson nominated for the MTV Movie Award for Best Villain?
 SPARQL: SELECT ?value WHERE { wd:Q10738 p:P1411 ?s . ?s ps:P1411 wd:Q1062026 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dwayne Johnson', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'MTV Movie Award for Best Villain'}, 't': '?x0'}

 Q: What is {significant incident} of {marry} of {Anna Berliner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q53834036 wdt:P26 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significant incident', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Berliner', 'p': 'marry', 'o': '$y0'}}

 Q: Whose brother painted a painting of Shiva with Parvati, Ganesha, and Nandi?
 SPARQL: SELECT ?answer WHERE { wd:Q50817372 wdt:P180 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shiva with Parvati, Ganesha, and Nandi', 'p': 'painting of', 'o': '$y0'}}

 Q: What is {exchange} of {distributed by} of {Leaf Trombone: World Stage} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6508851 wdt:P750 ?X . ?X wdt:P414 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leaf Trombone: World Stage', 'p': 'distributed by', 'o': '$y0'}}

 Q: What is the magnetic ordering which starts with the letter p?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15706549 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magnetic ordering'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Who is the spouse of Ivan Pyryev on 1936-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q552450 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1936')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ivan Pyryev', 'p': 'spouse', 'o': '?x0', 't': '1936'}

 Q: What is the {opera} for {language of work or name} of {Russian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q7737 . ?sbj wdt:P31 wd:Q1344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'opera'}}

 Q: What is the {written work} for {edition or translation of} of {Septuagint}
 SPARQL:  select distinct ?obj where { wd:Q29334 wdt:P629 ?obj . ?obj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Septuagint', 'p': 'version of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What is the {academic major} for {studies} of {peat}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q184624 . ?sbj wdt:P31 wd:Q4671286 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'peat', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'major'}}

 Q: What is Paul Hindemith's GTAA ID?
 SPARQL: select distinct ?answer where { wd:Q57244 wdt:P1741 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paul Hindemith', 'p': 'GTAA ID', 'o': '?x0'}

 Q: What is {partner city} of {born in} of {Phil LaMarr} ?
 SPARQL: SELECT ?answer WHERE { wd:Q356541 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'partner city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Phil LaMarr', 'p': 'born in', 'o': '$y0'}}

 Q: What is the {digital rights management} for {language used} of {Norwegian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q9043 . ?sbj wdt:P31 wd:Q192532 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Norwegian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'DRM'}}

 Q: What is FIDE ID for Anatoly Karpov ?
 SPARQL: select distinct ?answer where { wd:Q131674 wdt:P1440 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anatoly Karpov', 'p': 'FIDE ID', 'o': '?x0'}

 Q: Who is a team member of the Chicago Cubs?
 SPARQL: select distinct ?answer where { ?answer wdt:P54 wd:Q246782}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'team', 'o': 'Chicago Cubs'}

 Q: Is it true that the number of deaths of Air Transat Flight 236 is less than 0.0?
 SPARQL: ASK WHERE { wd:Q406609 wdt:P1120 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Air Transat Flight 236', 'p': 'number of deaths', 'o': '?x0', '?x0': '0.0'}

 Q: When did Tallahassee have a population of 181376?
 SPARQL: SELECT ?value WHERE { wd:Q37043 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'181376')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tallahassee', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '181376'}, 't': '?x0'}

 Q: What topic of meditation has its originating source in Tripitaka?
 SPARQL: SELECT ?answer WHERE { wd:Q108458 wdt:P1269 ?answer . ?answer wdt:P248 wd:Q1321432}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'meditation', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'originating source', 'o': 'Tripitaka'}}

 Q: Who is the business owner of Barbie the doll maker
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1830 wd:Q167447 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owner of', 'o': 'Barbie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What sub-province-level division starts with the letter "x"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q250811 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sub-province-level division'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: Who gave the{type of music} of {working place} of {Derek Blasberg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5261816 wdt:P108 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Derek Blasberg', 'p': 'working place', 'o': '$y0'}}

 Q: What is the {human} for {record label} of {Korn}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P264 wd:Q80304 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'label', 'o': 'Korn', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When did position for officeholder of Mauricio Macri?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q561837 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Mauricio Macri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is played by a baseball bat that has the field of this profession as baseball?
 SPARQL: SELECT ?answer WHERE { wd:Q809910 wdt:P1535 ?answer . ?answer wdt:P425 wd:Q5369}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'baseball bat', 'p': 'played by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'field of this profession', 'o': 'baseball'}}

 Q: How many captains are there for the Montreal Canadiens?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q188143 wdt:P634 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Montreal Canadiens', 'p': 'captain', 'o': '?x0'}

 Q: Is the electric dipole moment of pyrrole less than 2.1204?
 SPARQL: ASK WHERE { wd:Q242627 wdt:P2201 ?obj filter(?obj < 2.1204) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'pyrrole', 'p': 'electric dipole moment', 'o': '?x0', '?x0': '2.1204'}

 Q: What was the population of Galicia in Jan. 1st, 2018
 SPARQL: SELECT ?obj WHERE { wd:Q3908 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Galicia', 'p': 'population', 'o': '?x0', 't': '2018'}

 Q: Which is the candidacy in election for Felipe González?
 SPARQL: select distinct ?answer where { wd:Q156799 wdt:P3602 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Felipe González', 'p': 'candidacy in election', 'o': '?x0'}

 Q: What is {electoral district} and {elected in} of {{Moon Jae-in} has {position held} as {Member of National Assembly of South Korea}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q21001 p:P39 ?s . ?s ps:P39 wd:Q14850694 . ?s pq:P768 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moon Jae-in', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of National Assembly of South Korea'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moon Jae-in', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of National Assembly of South Korea'}}}]

 Q: What award did Marvin Minsky receive in the early 1900's ?
 SPARQL: SELECT ?obj WHERE { wd:Q204815 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marvin Minsky', 'p': 'award', 'o': '?x0', 't': '1990'}

 Q: What is {nominated for} of {Martin Landau} that is {for work} is {Tucker: The Man and His Dream} ?
 SPARQL: SELECT ?obj WHERE { wd:Q294641 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1421355 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Landau', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Tucker: The Man and His Dream'}}}

 Q: What is the {human} for {participant of} of {Manhattan Project}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q127050 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant of', 'o': 'Manhattan Project', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {member of sports team} of {Josef Bican} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q352017 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josef Bican', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josef Bican', 'p': 'team', 'o': '$y0'}}]

 Q: Give me a social class name that contains the word 'zeugitae' in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q187588 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeugitae')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social class'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeugitae'}}

 Q: What is {spouse} of {Carl Gustav Jung} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41532 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Gustav Jung', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Gustav Jung', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is {mascot} of {sequel of} of {Lord Strathcona's Horse (Royal Canadians)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3259400 wdt:P155 ?X . ?X wdt:P822 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mascot', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Lord Strathcona's Horse (Royal Canadians)", 'p': 'sequel of', 'o': '$y0'}}

 Q: How many {mushroom ecological type} are to/by {parasitism} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P788 wd:Q186517 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'mushroom ecological type', 'o': 'parasitism'}

 Q: Who is the patron saint active in Innocent III?
 SPARQL: SELECT ?answer WHERE { wd:Q128076 wdt:P937 ?X . ?X wdt:P417 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'patron saint', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Innocent III', 'p': 'active in', 'o': '$y0'}}

 Q: Were there 6265 votes received on the Sixth Amendment of the Constitution of Ireland?
 SPARQL: ASK WHERE { wd:Q7533104 wdt:P1111 ?obj filter(?obj = 6265) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sixth Amendment of the Constitution of Ireland', 'p': 'votes received', 'o': '?x0', '?x0': '6265'}

 Q: What city does Curtis Institute of Music reside in, and has wards in Cameron County?
 SPARQL: SELECT ?answer WHERE { wd:Q60450 wdt:P131 ?answer . ?answer wdt:P150 wd:Q494142}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Curtis Institute of Music', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has wards', 'o': 'Cameron County'}}

 Q: What is {played by} of {subcellular localization} of {EH-domain containing 1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21498376 wdt:P681 ?X . ?X wdt:P1535 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'EH-domain containing 1', 'p': 'subcellular localization', 'o': '$y0'}}

 Q: who is rector of Karl Weierstraß ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1075 wd:Q57103}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'rector', 'o': 'Karl Weierstraß'}

 Q: When is {publication date} of {Taxi Driver} where is {place of publication} is {Germany} ?
 SPARQL: SELECT ?obj WHERE { wd:Q47221 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P291 wd:Q183 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taxi Driver', 'p': 'publication date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of publication', 'o': 'Germany'}}}

 Q: How many diocese are there in the Russian Orthodox Church?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P708 wd:Q60995 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'diocese', 'o': 'Russian Orthodox Church'}

 Q: Who is native to the British English area, that has diplomatic relation to Russia?
 SPARQL: SELECT ?answer WHERE { wd:Q7979 wdt:P2341 ?answer . ?answer wdt:P530 wd:Q159}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'British English', 'p': 'native to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Russia'}}

 Q: What is {academic degree} and {academic major} of {{Bernice Rubens} has {educated at} as {University of Wales}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q449028 p:P69 ?s . ?s ps:P69 wd:Q1072029 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernice Rubens', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Wales'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernice Rubens', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Wales'}}}]

 Q: Who is the husband of the costume designer from The Fuller Brush Girl?
 SPARQL: SELECT ?answer WHERE { wd:Q3604163 wdt:P2515 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'husband', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Fuller Brush Girl', 'p': 'costume designer', 'o': '$y0'}}

 Q: what is the {determination method} for {The Bronx} has {population} as {1.40794e+06} ?
 SPARQL: SELECT ?value WHERE { wd:Q18426 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.40794e+06')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Bronx', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.40794e+06'}}}

 Q: What is {diplomatic relation} of {land} of {Dezful} ?
 SPARQL: SELECT ?answer WHERE { wd:Q605142 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dezful', 'p': 'land', 'o': '$y0'}}

 Q: What is {subject had role} of {sidekick of} of {Heihei} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27048565 wdt:P2546 ?X . ?X wdt:P2868 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Heihei', 'p': 'sidekick of', 'o': '$y0'}}

 Q: Tell me metropolitan city of South Korea whose name has the word ulsan in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q482821 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ulsan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolitan city of South Korea'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ulsan'}}

 Q: What sports team did athlete Marco van Basten leave after Jan. 1st, 1987?
 SPARQL: SELECT ?obj WHERE { wd:Q483629 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1987')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marco van Basten', 'p': 'team', 'o': '?x0', 't': '1987'}

 Q: what is the {end time} for {Robert Byrd} has {position held} as {Member of the West Virginia House of Delegates} ?
 SPARQL: SELECT ?value WHERE { wd:Q276524 p:P39 ?s . ?s ps:P39 wd:Q19772501 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Byrd', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the West Virginia House of Delegates'}}}

 Q: Which is the Thyssen-Bornemisza artist ID of Maurice de Vlaminck?
 SPARQL: select distinct ?answer where { wd:Q241098 wdt:P2431 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maurice de Vlaminck', 'p': 'Thyssen-Bornemisza artist ID', 'o': '?x0'}

 Q: What award did Frank Herbert receive in 1966?
 SPARQL: SELECT ?obj WHERE { wd:Q7934 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1966')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frank Herbert', 'p': 'award', 'o': '?x0', 't': '1966'}

 Q: Who gave the{ZIP+4} of {resident in} of {James Ellroy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q318487 wdt:P551 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ZIP+4', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Ellroy', 'p': 'resident in', 'o': '$y0'}}

 Q: what is the {named after} for {France Gall} has {pseudonym} as {France Gall} ?
 SPARQL: SELECT ?value WHERE { wd:Q208258 p:P742 ?s . ?s ps:P742 ?x filter(contains(?x,'France Gall')) . ?s pq:P138 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'named after', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'France Gall', 'p': 'pseudonym', 'o': '$y0'}}

 Q: What is the {administrative territorial entity} for {capital} of {England}
 SPARQL:  select distinct ?obj where { wd:Q179876 wdt:P36 ?obj . ?obj wdt:P31 wd:Q56061 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'England', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'administrative territorial entity'}}

 Q: What was the population of Lubeck in 1946?
 SPARQL: SELECT ?obj WHERE { wd:Q2843 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lubeck', 'p': 'population', 'o': '?x0', 't': '1946'}

 Q: Abu Musab al-Zarqawir is chairperson of what organization?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q181049 . ?sbj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Abu Musab al-Zarqawi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: what is the {replaced by} for {Ion Antonescu} has {position held} as {Prime Minister of Romania} ?
 SPARQL: SELECT ?value WHERE { wd:Q152030 p:P39 ?s . ?s ps:P39 wd:Q15304810 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ion Antonescu', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Romania'}}}

 Q: What is {end time} and {start time} of {{William Michael Rossetti} has {work location} as {London}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q719428 p:P937 ?s . ?s ps:P937 wd:Q84 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Michael Rossetti', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'London'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Michael Rossetti', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'London'}}}]

 Q: What is the release version of the Apple Macintosh operating system?
 SPARQL: SELECT ?answer WHERE { wd:Q75687 wdt:P306 ?X . ?X wdt:P348 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'version', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Apple Macintosh', 'p': 'operating system', 'o': '$y0'}}

 Q: what is the {statement is subject of} for {Citizen Kane} has {nominated for} as {Academy Award for Best Art Direction, Black and White} ?
 SPARQL: SELECT ?value WHERE { wd:Q24815 p:P1411 ?s . ?s ps:P1411 wd:Q22253133 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Citizen Kane', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Art Direction, Black and White'}}}

 Q: What city of Isla Grande de Tierra del Fuego has 6801 inhabitants?
 SPARQL: SELECT ?answer WHERE { wd:Q1674067 wdt:P131 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'6801'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isla Grande de Tierra del Fuego', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '6801'}}

 Q: What is {start time} and {elected in} of {{Angela Merkel} has {position held} as {member of the German Bundestag}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q567 p:P39 ?s . ?s ps:P39 wd:Q1939555 . ?s pq:P580 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Angela Merkel', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the German Bundestag'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'election', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Angela Merkel', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the German Bundestag'}}}]

 Q: What award did Barbara Cook receive in 1955?
 SPARQL: SELECT ?obj WHERE { wd:Q2883930 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1955')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barbara Cook', 'p': 'award', 'o': '?x0', 't': '1955'}

 Q: When did Dwyane Wade win the Sports Illustrated Sportsperson of the Year award?
 SPARQL: SELECT ?value WHERE { wd:Q31683 p:P166 ?s . ?s ps:P166 wd:Q1653207 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dwyane Wade', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Sports Illustrated Sportsperson of the Year'}, 't': '?x0'}

 Q: what is the {start time} for {Humphrey Bogart} has {spouse} as {Mayo Methot} ?
 SPARQL: SELECT ?value WHERE { wd:Q16390 p:P26 ?s . ?s ps:P26 wd:Q529654 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Humphrey Bogart', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Mayo Methot'}}}

 Q: Is the stall speed of the Boing 747 equal to 200.0?
 SPARQL: ASK WHERE { wd:Q179 wdt:P6510 ?obj filter(?obj = 200.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '747', 'p': 'stall speed', 'o': '?x0', '?x0': '200.0'}

 Q: What is {position held} of {Manuel I Komnenos} that is {start time} is {1143-4-8} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41610 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1143')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Manuel I Komnenos', 'p': 'position held', 'o': '?x0', 't': '1143'}

 Q: What technique used in tapestry is not used for upholstery?
 SPARQL: SELECT ?answer WHERE { wd:Q184296 wdt:P2079 ?answer . ?answer wdt:P1889 wd:Q1123578}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'tapestry', 'p': 'technique used', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is not', 'o': 'upholstery'}}

 Q: What is the opposite of led to when referencing a family?
 SPARQL: SELECT ?answer WHERE { wd:Q8436 wdt:P1542 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'family', 'p': 'led to', 'o': '$y0'}}

 Q: IS THE NUMBER OF PAGES OF PERCEPTIONS ABOUT POSTDOCS EQUALS 1
 SPARQL: ASK WHERE { wd:Q22121983 wdt:P1104 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Perceptions about postdocs', 'p': 'number of pages', 'o': '?x0', '?x0': '1'}

 Q: Which {daddy} of {starring} of {Sweet Little Lies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4189751 wdt:P161 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dad', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sweet Little Lies', 'p': 'starring', 'o': '$y0'}}

 Q: Which is the game mode that contains the word versus in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1971694 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'versus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'game mode'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'versus'}}

 Q: Which was the political party of the chairperson of Josip Broz Tito?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q9161 . ?sbj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Josip Broz Tito', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: What is <SummitPost mountain ID> of <Oregon Coast Range> ?
 SPARQL: select distinct ?answer where { wd:Q2029517 wdt:P3309 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oregon Coast Range', 'p': 'SummitPost mountain ID', 'o': '?x0'}

 Q: What is {date of birth} and {date of death} of {{Frederick William I of Prussia} has {child} as {Princess Friederike Luise of Prussia}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 wd:Q288925 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Friederike Luise of Prussia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Friederike Luise of Prussia'}}}]

 Q: What is {taxon parent} of {Demospongiae}, that has {science, that studies} is {spongiology} ?
 SPARQL: SELECT ?answer WHERE { wd:Q248530 wdt:P171 ?answer . ?answer wdt:P2579 wd:Q18392412}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Demospongiae', 'p': 'taxon parent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'science, that studies', 'o': 'spongiology'}}

 Q: Where is the location of the Samsung headquarters with the postal code of 443-742?
 SPARQL: SELECT ?obj WHERE { wd:Q20716 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P281 ?x filter(contains(?x,'443-742')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Samsung', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'postal code', 'o': '443-742'}}}

 Q: Which is the {video game} of {voice actor} {Sasha Grey}?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q2709 . ?sbj wdt:P31 wd:Q7889 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Sasha Grey', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game'}}

 Q: Who {is son of} {Eileen O'Casey} {has children} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18559727 wdt:P40 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Eileen O'Casey", 'p': 'child', 'o': '$y0'}}

 Q: What is the {human} with the {MAX(Elo rating)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1087 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Elo rating', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is it true that the Tsing Ma Bridge has a clearance that is equal to 62?
 SPARQL: ASK WHERE { wd:Q16396 wdt:P2793 ?obj filter(?obj = 62) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tsing Ma Bridge', 'p': 'clearance', 'o': '?x0', '?x0': '62'}

 Q: What is the {film} for {cast member} of {Amanda Bynes}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P161 wd:Q212002 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cast member', 'o': 'Amanda Bynes', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: Is it true that the volume as quantity of Barragem Canrobert 1 equals to 0.0056?
 SPARQL: ASK WHERE { wd:Q62012350 wdt:P2234 ?obj filter(?obj = 0.0056) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Barragem Canrobert 1', 'p': 'volume as quantity', 'o': '?x0', '?x0': '0.0056'}

 Q: Is the maximum capacity of the Zipflbob less than 1.2?
 SPARQL: ASK WHERE { wd:Q205443 wdt:P1083 ?obj filter(?obj < 1.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Zipflbob', 'p': 'maximum capacity', 'o': '?x0', '?x0': '1.2'}

 Q: What are the video game series which start with the letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7058673 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game series'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Is the number of losses of Zaur Kasumov equal to 2?
 SPARQL: ASK WHERE { wd:Q18510232 wdt:P1356 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Zaur Kasumov', 'p': 'number of losses', 'o': '?x0', '?x0': '2'}

 Q: What is {famous books} of {written by} of {Maurice} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1241741 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'famous books', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maurice', 'p': 'written by', 'o': '$y0'}}

 Q: What is {topic of} of {History of Haiti}, that has {has boroughs} is {Nippes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q846445 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q125232}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Haiti', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has boroughs', 'o': 'Nippes'}}

 Q: which is located in the administrative territorial entity of Honolulu and what is the start time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q18094 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honolulu', 'p': 'located in the administrative territorial entity', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honolulu', 'p': 'located in the administrative territorial entity', 'o': '$y0'}}]

 Q: What is the domain child of Roman Smoluchowski?
 SPARQL: SELECT ?answer WHERE { wd:Q9312628 wdt:P22 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'domain', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roman Smoluchowski', 'p': 'child of', 'o': '$y0'}}

 Q: What is {mediatised to} of {characters} of {Merrie Melodies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1750628 wdt:P674 ?X . ?X wdt:P1366 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mediatised to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Merrie Melodies', 'p': 'characters', 'o': '$y0'}}

 Q: What is {product of} of {game platform} of {Deflektor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3263157 wdt:P400 ?X . ?X wdt:P176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'product of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Deflektor', 'p': 'platform', 'o': '$y0'}}

 Q: The {Finnish MP ID} of {Urho Kekkonen} is what?
 SPARQL: select distinct ?answer where { wd:Q179858 wdt:P2181 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Urho Kekkonen', 'p': 'Finnish MP ID', 'o': '?x0'}

 Q: What is the birth city of Laurie Anderson that is a partner town to Mexico City?
 SPARQL: SELECT ?answer WHERE { wd:Q235066 wdt:P19 ?answer . ?answer wdt:P190 wd:Q1489}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Laurie Anderson', 'p': 'birth city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Mexico City'}}

 Q: Give me {aspect of history} that {facet of} {India} and which contains the word {history} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17524420 . ?sbj wdt:P1269 wd:Q668 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'history')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of history', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'India'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'history'}}

 Q: What is <VGMdb artist ID> of <Burt Bacharach> ?
 SPARQL: select distinct ?answer where { wd:Q212762 wdt:P3435 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Burt Bacharach', 'p': 'VGMdb artist ID', 'o': '?x0'}

 Q: When did Wisconsin have a population of 1.05467e+0.6?
 SPARQL: SELECT ?value WHERE { wd:Q1537 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.05467e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Wisconsin', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.05467e+06'}, 't': '?x0'}

 Q: Who is the child of Charlemagne and who is their mother?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the roof shape which contains the word tower in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1156686 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tower')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'roof shape'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tower'}}

 Q: What is the National Inventors Hall of Fame ID for Douglas Engelbart?
 SPARQL: select distinct ?answer where { wd:Q92614 wdt:P3468 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Douglas Engelbart', 'p': 'National Inventors Hall of Fame ID', 'o': '?x0'}

 Q: What is {death location} of {Robert Aldrich}, that has {sister city} is {Bordeaux} ?
 SPARQL: SELECT ?answer WHERE { wd:Q95133 wdt:P20 ?answer . ?answer wdt:P190 wd:Q1479}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Robert Aldrich', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Bordeaux'}}

 Q: What international airport is Delta Air Lines' hub?
 SPARQL:  select distinct ?obj where { wd:Q188920 wdt:P113 ?obj . ?obj wdt:P31 wd:Q644371 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Delta Air Lines', 'p': 'hub', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international airport'}}

 Q: What is {number of points/goals/set scored} and {number of matches played} of {{Brian Clough} has {member of sports team} as {England B national football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q207658 p:P54 ?s . ?s ps:P54 wd:Q1110944 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brian Clough', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'England B'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brian Clough', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'England B'}}}]

 Q: What is {educated at} of {Christopher A. Sims} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q109737 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher A. Sims', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher A. Sims', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the {for work} for {Hans Zimmer} has {nominated for} as {Academy Award for Best Original Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q76364 p:P1411 ?s . ?s ps:P1411 wd:Q488651 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Zimmer', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Score'}}}

 Q: What is the member of sports team of Danie Craven that ended at 1938-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q742873 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1938')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Danie Craven', 'p': 'member of sports team', 'o': '?x0', 't': '1938'}

 Q: What are the property which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q937228 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'property'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is the tributary for Mississippi River having a height of 242.0?
 SPARQL: SELECT ?answer WHERE { wd:Q1497 wdt:P974 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'242.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mississippi River', 'p': 'tributary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'height', 'o': '242.0'}}

 Q: What is the {Reichstag election in the Weimar Republic} for {applies to jurisdiction} of {Weimar Republic}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q41304 . ?sbj wdt:P31 wd:Q2047484 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'Weimar Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Reichstag election in the Weimar Republic'}}

 Q: Who did Eddie Fisher marry in 1967?
 SPARQL: SELECT ?obj WHERE { wd:Q363708 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eddie Fisher', 'p': 'marry', 'o': '?x0', 't': '1967'}

 Q: What is the territorial jurisdiction of Plessy v. Ferguson, that has a total fertility rate of 2.0075?
 SPARQL: SELECT ?answer WHERE { wd:Q656660 wdt:P1001 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'2.0075'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Plessy v. Ferguson', 'p': 'jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '2.0075'}}

 Q: What is in the ward of the University of Groningen, of which the coat of arms is the coat of arms of Groningen?
 SPARQL: SELECT ?answer WHERE { wd:Q850730 wdt:P131 ?answer . ?answer wdt:P237 wd:Q2764050}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of Groningen', 'p': 'is in the ward of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'coat of arms of Groningen'}}

 Q: "Who is the namesake of the Lorentz force, who was also a member of the Royal Netherlands Academy of Arts and Sciences?"
 SPARQL: SELECT ?answer WHERE { wd:Q172137 wdt:P138 ?answer . ?answer wdt:P463 wd:Q253439}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lorentz force', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Royal Netherlands Academy of Arts and Sciences'}}

 Q: What is the {located in or next to body of water} and the {located in time zone} of {Belgrade} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q3711 wdt:P206 ?ans_1 . wd:Q3711 wdt:P421 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Belgrade', 'p': 'body of water', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Belgrade', 'p': 'time zone', 'o': '?x1'}]

 Q: How many home worlds are determined for Venus?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1165 wd:Q313 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'home world', 'o': 'Venus'}

 Q: What is the {television series} for {executive producer} of {Donald Trump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1431 wd:Q22686 . ?sbj wdt:P31 wd:Q5398426 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'executive producer', 'o': 'Donald Trump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV show'}}

 Q: Who is the husband of Madhuri Dixit, who has gender identity as male?
 SPARQL: SELECT ?answer WHERE { wd:Q232451 wdt:P26 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Madhuri Dixit', 'p': 'husband', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gender identity', 'o': 'male'}}

 Q: What is the molar mass of the parent body of Titania?
 SPARQL: SELECT ?answer WHERE { wd:Q3322 wdt:P397 ?X . ?X wdt:P2067 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mass', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Titania', 'p': 'parent body', 'o': '$y0'}}

 Q: Which is the Reddit username for American Civil Liberties Union?
 SPARQL: select distinct ?answer where { wd:Q21637 wdt:P4265 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Civil Liberties Union', 'p': 'Reddit username', 'o': '?x0'}

 Q: what is the {statement is subject of} for {William Walton} has {nominated for} as {Academy Award for Best Original Dramatic or Comedy Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q310939 p:P1411 ?s . ?s ps:P1411 wd:Q22752868 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Walton', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Dramatic or Comedy Score'}}}

 Q: Which is the FootballFacts.ru player ID of Diego Maradona?
 SPARQL: select distinct ?answer where { wd:Q17515 wdt:P3660 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Diego Maradona', 'p': 'FootballFacts.ru player ID', 'o': '?x0'}

 Q: What award did Jerome Robbins receive in 1976?
 SPARQL: SELECT ?obj WHERE { wd:Q353019 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jerome Robbins', 'p': 'award', 'o': '?x0', 't': '1976'}

 Q: What is the country in the Kuril Islands that ends at 1875-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q80389 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1875')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kuril Islands', 'p': 'country', 'o': '?x0', 't': '1875'}

 Q: How many drainage basins are by Chad Basin?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4614 wd:Q575245 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'drainage basin', 'o': 'Chad Basin'}

 Q: How many ethnic groups are in Brazil?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q155 wdt:P172 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Brazil', 'p': 'ethnic group', 'o': '?x0'}

 Q: What is <location of formation> of <NSYNC> ?
 SPARQL: select distinct ?answer where { wd:Q154454 wdt:P740 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'NSYNC', 'p': 'location of formation', 'o': '?x0'}

 Q: What is <Dictionary of Ulster Biography ID> of <Samuel Beckett> ?
 SPARQL: select distinct ?answer where { wd:Q37327 wdt:P2029 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Samuel Beckett', 'p': 'Dictionary of Ulster Biography ID', 'o': '?x0'}

 Q: what is the {electoral district} for {Gordon Brown} has {position held} as {Member of the 54th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q10648 p:P39 ?s . ?s ps:P39 wd:Q35647955 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gordon Brown', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 54th Parliament of the United Kingdom'}}}

 Q: What is {first name} of {Paul Verhoeven}, that has {said to be different from} is {Paweł} ?
 SPARQL: SELECT ?answer WHERE { wd:Q129079 wdt:P735 ?answer . ?answer wdt:P460 wd:Q19816823}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paul Verhoeven', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be different from', 'o': 'Paweł'}}

 Q: What is <signed form> of <Esperanto> ?
 SPARQL: select distinct ?answer where { wd:Q143 wdt:P3969 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'signed form', 'o': '?x0'}

 Q: What is the ATC code of halothane?
 SPARQL: select distinct ?answer where { wd:Q32921 wdt:P267 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'halothane', 'p': 'ATC code', 'o': '?x0'}

 Q: what is the {start time} for {Nigel Farage} has {position held} as {member of the European Parliament} ?
 SPARQL: SELECT ?value WHERE { wd:Q318471 p:P39 ?s . ?s ps:P39 wd:Q27169 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nigel Farage', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the European Parliament'}}}

 Q: Tell me about member of sports team of Bobby Moore and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q191492 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bobby Moore', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bobby Moore', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is associated with the sport played in physical fitness?
 SPARQL: SELECT ?answer WHERE { wd:Q309252 wdt:P641 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'associated with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'physical fitness', 'p': 'sport', 'o': '$y0'}}

 Q: What is <by-product> of <animal husbandry> ?
 SPARQL: select distinct ?answer where { wd:Q80962 wdt:P2821 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'animal husbandry', 'p': 'by-product', 'o': '?x0'}

 Q: What is the {recurrent event edition} for {genre} of {ballet}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P136 wd:Q41425 . ?sbj wdt:P31 wd:Q27968055 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'ballet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurrent event edition'}}

 Q: What gunpowder developer has a 1318-0-0 birthdate?
 SPARQL: SELECT ?answer WHERE { wd:Q12861 wdt:P61 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1318'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'gunpowder', 'p': 'developer', 'o': '?x0', 't': '1318'}

 Q: What award did Alec Baldwin win in 2017?
 SPARQL: SELECT ?obj WHERE { wd:Q170572 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alec Baldwin', 'p': 'award', 'o': '?x0', 't': '2017'}

 Q: When did Robert Musil earn his doctoral degree?
 SPARQL: SELECT ?value WHERE { wd:Q78487 p:P512 ?s . ?s ps:P512 wd:Q849697 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Robert Musil', 'p': 'degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'doctoral degree'}, 't': '?x0'}

 Q: Is the height of Sumbawa Pony greater than 0.96?
 SPARQL: ASK WHERE { wd:Q919647 wdt:P2048 ?obj filter(?obj > 0.96) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Sumbawa Pony', 'p': 'height', 'o': '?x0', '?x0': '0.96'}

 Q: what is the {end time} for {Cha Bum-kun} has {member of sports team} as {Bayer 04 Leverkusen} ?
 SPARQL: SELECT ?value WHERE { wd:Q346751 p:P54 ?s . ?s ps:P54 wd:Q104761 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cha Bum-kun', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Bayer 04 Leverkusen'}}}

 Q: Who gave the{affiliate of} of {plays for} of {Amauri Sanit} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2841376 wdt:P54 ?X . ?X wdt:P831 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'affiliate of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amauri Sanit', 'p': 'plays for', 'o': '$y0'}}

 Q: Which is the road bridge in the next crossing upstream of Sydney Harbour Bridge?
 SPARQL:  select distinct ?obj where { wd:Q54495 wdt:P2673 ?obj . ?obj wdt:P31 wd:Q537127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sydney Harbour Bridge', 'p': 'next crossing upstream', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road bridge'}}

 Q: What is {makes} of {branch} of {Jorkwang Film} ?
 SPARQL: SELECT ?answer WHERE { wd:Q35980843 wdt:P452 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'makes', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jorkwang Film', 'p': 'branch', 'o': '$y0'}}

 Q: What was NCIS nominated for in the year 2013?
 SPARQL: SELECT ?obj WHERE { wd:Q4525 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'NCIS', 'p': 'nominated for', 'o': '?x0', 't': '2013'}

 Q: Who are members of sports team of Clarence Seedorf since the year 2002?
 SPARQL: SELECT ?obj WHERE { wd:Q484909 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Clarence Seedorf', 'p': 'team', 'o': '?x0', 't': '2002'}

 Q: What is {prevalence} of {dementia} that is {location} is {Americas} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83030 p:P1193 ?s . ?s ps:P1193 ?obj . ?s pq:P276 wd:Q828 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prevalence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'dementia', 'p': 'prevalence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'location', 'o': 'Americas'}}}

 Q: Is the longest span of the Deutz Suspension Bridge equal 184?
 SPARQL: ASK WHERE { wd:Q316976 wdt:P2787 ?obj filter(?obj = 184) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Deutz Suspension Bridge', 'p': 'longest span', 'o': '?x0', '?x0': '184'}

 Q: What sovereign state uses the Australian dollar as currency?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q259502 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Australian dollar', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is {member of sports team} of {Kareem Abdul-Jabbar} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q179051 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareem Abdul-Jabbar', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareem Abdul-Jabbar', 'p': 'team', 'o': '$y0'}}]

 Q: Which is the written work which has English as a language of work?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q1860 . ?sbj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work', 'o': 'English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: Who was the wife of Valentinian I?
 SPARQL: select distinct ?answer where { wd:Q46720 wdt:P26 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Valentinian I', 'p': 'wife', 'o': '?x0'}

 Q: Which limestone powder has the highest emissivity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2908004 . ?ent wdt:P1295 ?obj . ?ent wdt:P186 wd:Q23757 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'emissivity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'powder', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'material used', 'o': 'limestone'}}}

 Q: Which is the ZDB ID for Maxim?
 SPARQL: select distinct ?answer where { wd:Q3552325 wdt:P1042 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maxim', 'p': 'ZDB ID', 'o': '?x0'}

 Q: What is {origin of the watercourse} of {Mittelland Canal} that is {coordinate location} is {52.277033333333 7.6040944444444} ?
 SPARQL: SELECT ?obj WHERE { wd:Q48480 p:P885 ?s . ?s ps:P885 ?obj . ?s pq:P625 ?x filter(contains(?x,'52.277033333333 7.6040944444444')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mittelland Canal', 'p': 'origin of the watercourse', 'o': '?x0'}

 Q: which country club has the highest slop rating?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1137210 . ?ent wdt:P3840 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'slope rating', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country club'}}

 Q: What is {formed on date} of {agent} of {Battle of Quiberon Bay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q450318 wdt:P710 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'formed on date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle of Quiberon Bay', 'p': 'agent', 'o': '$y0'}}

 Q: What is {nominated for} of {Mr. Smith Goes to Washington} that is {statement is subject of} is {12th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q866120 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q508513 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mr. Smith Goes to Washington', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '12th Academy Awards'}}}

 Q: What is {school attended} of {brother} of {Thomas J. Healey} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7791077 wdt:P3373 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'school attended', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas J. Healey', 'p': 'sibling', 'o': '$y0'}}

 Q: Which is the Royal Academy new identifier for Cardinal Richelieu?
 SPARQL: select distinct ?answer where { wd:Q26702 wdt:P4808 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cardinal Richelieu', 'p': 'Royal Academy new identifier', 'o': '?x0'}

 Q: Were the Navirman Andolan arrested 8000 times?
 SPARQL: ASK WHERE { wd:Q1744162 wdt:P5582 ?obj filter(?obj = 8000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Navnirman Andolan', 'p': 'number of arrests', 'o': '?x0', '?x0': '8000'}

 Q: What is BoardGameGeek ID of Carrom?
 SPARQL: select distinct ?answer where { wd:Q900489 wdt:P2339 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carrom', 'p': 'BoardGameGeek ID', 'o': '?x0'}

 Q: What is {activity corresponding to this occupation} of {associated with} of {trumpet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8338 wdt:P3095 ?X . ?X wdt:P425 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'activity corresponding to this occupation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'trumpet', 'p': 'associated with', 'o': '$y0'}}

 Q: Tell me the military decoration of the next lower rank to George Cross and starts with the letter c?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1788716 . ?sbj wdt:P3729 wd:Q1143510 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military decoration', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next lower rank', 'o': 'George Cross'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {circumstance of death} of {Nizam al-Mulk}, that has {implied by} is {human} ?
 SPARQL: SELECT ?answer WHERE { wd:Q298427 wdt:P1196 ?answer . ?answer wdt:P828 wd:Q5}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nizam al-Mulk', 'p': 'circumstance of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'implied by', 'o': 'people'}}

 Q: Does the angle from vertical of the Leaning Tower of Pisa equal 3.97?
 SPARQL: ASK WHERE { wd:Q39054 wdt:P4183 ?obj filter(?obj = 3.97) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Leaning Tower of Pisa', 'p': 'angle from vertical', 'o': '?x0', '?x0': '3.97'}

 Q: what is the {winner} for {Mick Jagger} has {award received} as {Golden Globe Award for Best Original Song} ?
 SPARQL: SELECT ?value WHERE { wd:Q128121 p:P166 ?s . ?s ps:P166 wd:Q1472235 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mick Jagger', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Golden Globe Award for Best Original Song'}}}

 Q: What is {country} of {Belgrade} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3711 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belgrade', 'p': 'country', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'country', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belgrade', 'p': 'country', 'o': '$y0'}}]

 Q: How many fastest lap times are held by Lewis Hamilton?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P5053 wd:Q9673 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'fastest lap', 'o': 'Lewis Hamilton'}

 Q: What are the examinations of the consequences of alcoholism?
 SPARQL: SELECT ?answer WHERE { wd:Q15326 wdt:P1542 ?X . ?X wdt:P923 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'examinations', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'alcoholism', 'p': 'consequence', 'o': '$y0'}}

 Q: Which is the location of first performance of Palace of Versailles?
 SPARQL: select distinct ?answer where { ?answer wdt:P4647 wd:Q2946}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location of first performance', 'o': 'Palace of Versailles'}

 Q: What is William of Rubruck's date of birth?
 SPARQL: SELECT ?value WHERE { wd:Q316083 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1220')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William of Rubruck', 'p': 'date of birth', 'o': '$y0'}}

 Q: What is {suspect} of {present at} of {Luxembourg in the Eurovision Song Contest 1976} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10321144 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'suspect', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Luxembourg in the Eurovision Song Contest 1976', 'p': 'present at', 'o': '$y0'}}

 Q: Is the frequency of events for DFB-Pokal equal to 1?
 SPARQL: ASK WHERE { wd:Q150880 wdt:P2257 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'DFB-Pokal', 'p': 'frequency of event', 'o': '?x0', '?x0': '1'}

 Q: What has cause of Universiade ?
 SPARQL: select distinct ?answer where { wd:Q188158 wdt:P828 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Universiade', 'p': 'has cause', 'o': '?x0'}

 Q: What is {type of music} of {part of work} of {School of Ragtime, Exercise No. 6} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29541175 wdt:P1433 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'School of Ragtime, Exercise No. 6', 'p': 'part of work', 'o': '$y0'}}

 Q: What diplomatic relation to Canada is in the administrative unit of Victoria?
 SPARQL: SELECT ?answer WHERE { wd:Q36687 wdt:P131 ?answer . ?answer wdt:P530 wd:Q16}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Victoria', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Canada'}}

 Q: What is {mother} and {date of birth} of {{Charlemagne} has {child} as {Drogo}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q723791 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Drogo'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'birthdate', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Drogo'}}}]

 Q: What is {sequel of} of {day of periodic occurrence} of {Purim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q180115 wdt:P837 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sequel of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Purim', 'p': 'day', 'o': '$y0'}}

 Q: Is it true that the wavelength of the Radio Astronomical Telescope Academy Nauk 600 is greater than 24.88?
 SPARQL: ASK WHERE { wd:Q1590725 wdt:P2808 ?obj filter(?obj > 24.88) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Radio Astronomical Telescope Academy Nauk 600', 'p': 'wavelength', 'o': '?x0', '?x0': '24.88'}

 Q: Which is the USK rating of Grand Theft Auto III?
 SPARQL: select distinct ?answer where { wd:Q149106 wdt:P914 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Grand Theft Auto III', 'p': 'USK rating', 'o': '?x0'}

 Q: what is the {for work} for {François Mauriac} has {award received} as {Grand Prix du roman de l'Académie française} ?
 SPARQL: SELECT ?value WHERE { wd:Q81685 p:P166 ?s . ?s ps:P166 wd:Q1542826 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'François Mauriac', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': "Grand Prix du roman de l'Académie française"}}}

 Q: What is the name of the culture of pupil of Isocrates?
 SPARQL: SELECT ?answer WHERE { wd:Q221182 wdt:P802 ?X . ?X wdt:P172 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'culture', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isocrates', 'p': 'pupil', 'o': '$y0'}}

 Q: what is the {type of kinship} for {Pieter Brueghel the Elder} has {relative} as {Pieter III. Brueghel} ?
 SPARQL: SELECT ?value WHERE { wd:Q43270 p:P1038 ?s . ?s ps:P1038 wd:Q2094250 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pieter Brueghel the Elder', 'p': 'relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relation', 'o': 'Pieter III. Brueghel'}}}

 Q: Tell me if the natural abundance of iron-56 is more than 0.734032
 SPARQL: ASK WHERE { wd:Q1052454 wdt:P2374 ?obj filter(?obj > 0.734032) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'iron-56', 'p': 'natural abundance', 'o': '?x0', '?x0': '0.734032'}

 Q: What is the {human} for {founded by} of {International Olympic Committee}
 SPARQL:  select distinct ?obj where { wd:Q40970 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'International Olympic Committee', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {rank} of {taxon parent} of {Salvia officinalis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1111359 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Salvia officinalis', 'p': 'taxon parent', 'o': '$y0'}}

 Q: Give me {spiral galaxy} that contains the word {ugc} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2488 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ugc')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spiral galaxy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ugc'}}

 Q: Did {Bryan_Adams} {nominated for} {Grammy Award for Album of the Year} and {Juno Award for Entertainer of the Year} ?
 SPARQL: ASK WHERE { wd:Q482907 wdt:P1411 wd:Q904528 . wd:Q482907 wdt:P1411 wd:Q6314074 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bryan Adams', 'p': 'nominated for', 'o': '?x0', '?x0': 'Grammy Award for Album of the Year'}, {'h': 'IS', 'v': '?x1', 's': 'Bryan Adams', 'p': 'nominated for', 'o': '?x1', '?x1': 'Juno Award for Entertainer of the Year'}]

 Q: What is {diplomatic relation} of {Philippines} that is {statement is subject of} is {Philippines–Qatar relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q928 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q15948934 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philippines', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Philippines–Qatar relations'}}}

 Q: Which is the IAFD male performer ID of Jamie Gillis?
 SPARQL: select distinct ?answer where { wd:Q725962 wdt:P4505 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jamie Gillis', 'p': 'IAFD male performer ID', 'o': '?x0'}

 Q: What is the {feature film} for {director} of {Jim Henson}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q191037 . ?sbj wdt:P31 wd:Q24869 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Jim Henson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'feature film'}}

 Q: What is {partner} of {characters} of {Disney's Magical Quest 3 Starring Mickey & Donald} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3030325 wdt:P674 ?X . ?X wdt:P451 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'partner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Disney's Magical Quest 3 Starring Mickey & Donald", 'p': 'characters', 'o': '$y0'}}

 Q: What is {has moon} of {topic of} of {heliosphere} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131687 wdt:P1269 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has moon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'heliosphere', 'p': 'topic of', 'o': '$y0'}}

 Q: What is the sister city of Antwerp, that has cities in Minhang District?
 SPARQL: SELECT ?answer WHERE { wd:Q12892 wdt:P190 ?answer . ?answer wdt:P150 wd:Q661695}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antwerp', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Minhang District'}}

 Q: where is mouth of the watercourse of Neva that is of is Gulf of Finland ?
 SPARQL: SELECT ?obj WHERE { wd:Q645 p:P403 ?s . ?s ps:P403 ?obj . ?s pq:P642 wd:Q14686 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mouth of the watercourse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neva', 'p': 'mouth of the watercourse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'Gulf of Finland'}}}

 Q: what is the {number of matches played} for {Eric Cantona} has {member of sports team} as {FC Martigues} ?
 SPARQL: SELECT ?value WHERE { wd:Q170328 p:P54 ?s . ?s ps:P54 wd:Q1132418 . ?s pq:P1350 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Cantona', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'FC Martigues'}}}

 Q: What is {played by} of {sequel is} of {Healing Hands} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1633950 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Healing Hands', 'p': 'sequel is', 'o': '$y0'}}

 Q: What is {has administrative divisions} of {originates} of {As the World Turns} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1261578 wdt:P495 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has administrative divisions', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'As the World Turns', 'p': 'originates from', 'o': '$y0'}}

 Q: Which is the end period for the old age?
 SPARQL: select distinct ?answer where { wd:Q191089 wdt:P3416 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'old age', 'p': 'end period', 'o': '?x0'}

 Q: Is the number of spoilt votes of the Passo Fundo mayoral election, 2016 3968?
 SPARQL: ASK WHERE { wd:Q61868913 wdt:P5044 ?obj filter(?obj = 3968) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Passo Fundo mayoral election, 2016', 'p': 'number of spoilt votes', 'o': '?x0', '?x0': '3968'}

 Q: Give me {folk religion} that {foundational text} {Nihon Shoki} and which contains the word {shinto} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1068640 . ?sbj wdt:P457 wd:Q813935 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'shinto')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'folk religion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'foundational text', 'o': 'Nihon Shoki'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'shinto'}}

 Q: What are the ancient city which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15661340 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Who is {nominated for} of {Kate Winslet} whose {for work} is {Sense and Sensibility} ?
 SPARQL: SELECT ?obj WHERE { wd:Q202765 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q643263 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kate Winslet', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Sense and Sensibility'}}}

 Q: What is {has moon} of {star} of {Tarantula Nebula} ?
 SPARQL: SELECT ?answer WHERE { wd:Q224145 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has moon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tarantula Nebula', 'p': 'star', 'o': '$y0'}}

 Q: What is <LIBRIS editions> of <New Scientist> ?
 SPARQL: select distinct ?answer where { wd:Q525592 wdt:P1182 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'New Scientist', 'p': 'LIBRIS editions', 'o': '?x0'}

 Q: What is {sister or brother} of {Caligula}, that has {public office} is {quaestor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1409 wdt:P3373 ?answer . ?answer wdt:P39 wd:Q189430}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Caligula', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'public office', 'o': 'quaestor'}}

 Q: What is <ECHA InfoCard ID> of <starch> ?
 SPARQL: select distinct ?answer where { wd:Q41534 wdt:P2566 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'starch', 'p': 'ECHA InfoCard ID', 'o': '?x0'}

 Q: what is the {end time} for {Pyotr Ilyich Tchaikovsky} has {educated at} as {Saint Petersburg Conservatory} ?
 SPARQL: SELECT ?value WHERE { wd:Q7315 p:P69 ?s . ?s ps:P69 wd:Q178416 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pyotr Ilyich Tchaikovsky', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Saint Petersburg Conservatory'}}}

 Q: what is the {end time} for {Kyrgyzstan} has {head of state} as {Kurmanbek Bakiyev} ?
 SPARQL: SELECT ?value WHERE { wd:Q813 p:P35 ?s . ?s ps:P35 wd:Q484816 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kyrgyzstan', 'p': 'head of state', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of state', 'o': 'Kurmanbek Bakiyev'}}}

 Q: Which is the direct-controlled municipality which contains the word tianjin in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1208802 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tianjin')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'direct-controlled municipality'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tianjin'}}

 Q: What is {works at} of {writer} of {Metal-induced pre-organisation for anion recognition in a neutral platinum-containing receptor.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q43262021 wdt:P50 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'works at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Metal-induced pre-organisation for anion recognition in a neutral platinum-containing receptor.', 'p': 'writer', 'o': '$y0'}}

 Q: Which language is the stable version of Android?
 SPARQL: SELECT ?answer WHERE { wd:Q94 wdt:P277 ?X . ?X wdt:P348 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'version', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Android', 'p': 'language', 'o': '$y0'}}

 Q: Which is the ISO 639-5 code of Aramaic?
 SPARQL: select distinct ?answer where { wd:Q28602 wdt:P1798 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aramaic', 'p': 'ISO 639-5 code', 'o': '?x0'}

 Q: What is the {republic} with the {MAX(Human Development Index)} whose {member of} is {International Centre for Settlement of Investment Disputes}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7270 . ?ent wdt:P1081 ?obj . ?ent wdt:P463 wd:Q899770 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Human Development Index', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Centre for Settlement of Investment Disputes'}}}

 Q: What award did David Foster win in 2003?
 SPARQL: SELECT ?obj WHERE { wd:Q77112 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Foster', 'p': 'award', 'o': '?x0', 't': '2003'}

 Q: Mention the film based on the description of Batman
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q2695156 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Batman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: Which is the {country of citizenship} and the {occupation} of {Deadpool} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1631090 wdt:P27 ?ans_1 . wd:Q1631090 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Deadpool', 'p': 'country of citizenship', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Deadpool', 'p': 'occupation', 'o': '?x1'}]

 Q: What is {inflation rate of consumer price index} of {findspot} of {magnesium} ?
 SPARQL: SELECT ?answer WHERE { wd:Q660 wdt:P189 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'magnesium', 'p': 'findspot', 'o': '$y0'}}

 Q: What team did Yao Ming play for in 2002?
 SPARQL: SELECT ?obj WHERE { wd:Q58590 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yao Ming', 'p': 'team', 'o': '?x0', 't': '2002'}

 Q: What arch bridge is named after Paul von Hindenburg?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q2667 . ?sbj wdt:P31 wd:Q158438 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Paul von Hindenburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'arch bridge'}}

 Q: what is the {for work} for {Helen Hunt} has {nominated for} as {Academy Award for Best Supporting Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q170574 p:P1411 ?s . ?s ps:P1411 wd:Q106301 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Helen Hunt', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actress'}}}

 Q: Nale a low-cost airline that operates Boeing 737-800 and that contains the word "Ryanair" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190915 . ?sbj wdt:P121 wd:Q12476717 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ryanair')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'low-cost airline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operates', 'o': 'Boeing 737-800'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ryanair'}}

 Q: Which is the main subject for history of religions?
 SPARQL: select distinct ?answer where { ?answer wdt:P921 wd:Q846742}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'main subject', 'o': 'history of religions'}

 Q: Which award did Leon Festinger receive in 1959?
 SPARQL: SELECT ?obj WHERE { wd:Q315916 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1959')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leon Festinger', 'p': 'award', 'o': '?x0', 't': '1959'}

 Q: who is daddy of movie director for Valentine's Day ?
 SPARQL: SELECT ?answer WHERE { wd:Q27671399 wdt:P57 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dad', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Valentine's Day", 'p': 'director', 'o': '$y0'}}

 Q: what is the {sourcing circumstances} for {Lady Godiva} has {date of death} as {1067-9-10} ?
 SPARQL: SELECT ?value WHERE { wd:Q106077 p:P570 ?s . ?s ps:P570 ?x filter(contains(YEAR(?x),'1067')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lady Godiva', 'p': 'death', 'o': '$y0'}}

 Q: How many teams are participating for {Chicago Bulls} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1923 wd:Q128109 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'teams', 'o': 'Chicago Bulls'}

 Q: what is the {end time} for {Abu Bakr} has {position held} as {Rashidun Caliphate} ?
 SPARQL: SELECT ?value WHERE { wd:Q334923 p:P39 ?s . ?s ps:P39 wd:Q12490507 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abu Bakr', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Rashidun Caliphate'}}}

 Q: Which is the VIAF ID for Tom Holland?
 SPARQL: select distinct ?answer where { wd:Q2023710 wdt:P214 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tom Holland', 'p': 'VIAF ID', 'o': '?x0'}

 Q: what is the star has the highest proper motion?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q523 . ?ent wdt:P2215 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'proper motion', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'star'}}

 Q: What is {time of foundation or creation} of {awards received} of {Penélope Cruz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q39666 wdt:P166 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'foundation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Penélope Cruz', 'p': 'awards', 'o': '$y0'}}

 Q: Which is the currency that has a location of final assembly the Royal Mint and contains the word pound in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8142 . ?sbj wdt:P1071 wd:Q951830 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pound')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'currency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of final assembly', 'o': 'Royal Mint'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pound'}}

 Q: what is the {position played on team / speciality} for {Jim Brown} has {member of sports team} as {Syracuse Orange football} ?
 SPARQL: SELECT ?value WHERE { wd:Q927916 p:P54 ?s . ?s ps:P54 wd:Q7663046 . ?s pq:P413 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position played on team / speciality', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jim Brown', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Syracuse Orange football'}}}

 Q: Who was Howard Hughes spouse in December 1957?
 SPARQL: SELECT ?obj WHERE { wd:Q189081 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1957')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Howard Hughes', 'p': 'spouse', 'o': '?x0', 't': '1957'}

 Q: What award did Anna Politkovskaya receive in 2003-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q131240 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anna Politkovskaya', 'p': 'award', 'o': '?x0', 't': '2003'}

 Q: What is {suffers from} of {Joseph Kibweteere}, that has {genetic association} is {DLC1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3185163 wdt:P1050 ?answer . ?answer wdt:P2293 wd:Q18035350}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph Kibweteere', 'p': 'ailment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'DLC1'}}

 Q: How many official religions are there for the {Protestantism} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3075 wd:Q23540 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'official religion', 'o': 'Protestantism'}

 Q: Who is the partner/spouse of Manuel Ferrara?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q715159 wdt:P451 ?ans_1 . wd:Q715159 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Manuel Ferrara', 'p': 'partner', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Manuel Ferrara', 'p': 'spouse', 'o': '?x1'}]

 Q: When did open days of British Museum and closed on?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?obj . ?s pq:P3026 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'closed on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'open days', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}]

 Q: What award did Henry Dunant receive that granted him $75,391 in prize money?
 SPARQL: SELECT ?obj WHERE { wd:Q12091 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'75391.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '75391.0'}}}

 Q: Who gave the {has grammatical person} of {language} of {Franz Kline} ?
 SPARQL: SELECT ?answer WHERE { wd:Q374492 wdt:P1412 ?X . ?X wdt:P5110 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical person', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Kline', 'p': 'language', 'o': '$y0'}}

 Q: Who is the member of Neymar's sports team and what is their start time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q142794 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neymar', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neymar', 'p': 'team', 'o': '$y0'}}]

 Q: When did Kaunas have the area of 157?
 SPARQL: SELECT ?value WHERE { wd:Q4115712 p:P2046 ?s . ?s ps:P2046 ?x filter(contains(?x,'157.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kaunas', 'p': 'area', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'area', 'o': '157.0'}, 't': '?x0'}

 Q: What is {child body} of {Milky Way}, that has {light-travel distance} is {33600.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q321 wdt:P398 ?answer . ?answer wdt:P2583 ?x FILTER(contains(?x,'33600.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Milky Way', 'p': 'child body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'light-travel distance', 'o': '33600.0'}}

 Q: What is {plays} of {participated in} of {Ieva Januškevičiūtė} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15676906 wdt:P1344 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'play', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ieva Januškevičiūtė', 'p': 'participated in', 'o': '$y0'}}

 Q: what is the {series ordinal} for {Edmund Gwenn} has {given name} as {Edmund} ?
 SPARQL: SELECT ?value WHERE { wd:Q344750 p:P735 ?s . ?s ps:P735 wd:Q401836 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edmund Gwenn', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Edmund'}}}

 Q: What is the {strain} with the {MAX(maximum viable temperature)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q855769 . ?ent wdt:P3252 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum viable temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'strain'}}

 Q: Who gave the{mayor} of {mediatised to} of {Government of the 1st Dáil} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5589360 wdt:P1366 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mayor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Government of the 1st Dáil', 'p': 'mediatised to', 'o': '$y0'}}

 Q: DC-3 is operated by which airline?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P121 wd:Q190211 . ?sbj wdt:P31 wd:Q46970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operated', 'o': 'DC-3', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}}

 Q: What was the partner town of Toulon that was first recorded in 766-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q44160 wdt:P190 ?answer . ?answer wdt:P1249 ?x FILTER(contains(?x,'766-0-0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Toulon', 'p': 'partner town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first recorded in', 'o': '766-0-0'}}

 Q: In 1967, what city was the twinned administrative body of Skopje?
 SPARQL: SELECT ?obj WHERE { wd:Q384 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Skopje', 'p': 'twinned administrative body', 'o': '?x0', 't': '1967'}

 Q: Was Zakir Hussain the winner for the Grammy Award for Best Contemporary World Music Album?
 SPARQL: SELECT ?value WHERE { wd:Q144719 p:P166 ?s . ?s ps:P166 wd:Q5593776 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zakir Hussain', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Grammy Award for Best Contemporary World Music Album'}}}

 Q: What desalination plant material has the greatest yield strength?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q214609 . ?ent wdt:P5529 ?obj . ?ent wdt:P366 wd:Q51932686 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'yield strength', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'material', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'as', 'o': 'desalination plant'}}}

 Q: What is the outcome of  the antonym  of plasma recombination?
 SPARQL: SELECT ?answer WHERE { wd:Q4392902 wdt:P461 ?X . ?X wdt:P1542 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'outcome', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'plasma recombination', 'p': 'antonym', 'o': '$y0'}}

 Q: What is <conifers.org ID> of <Ginkgo biloba> ?
 SPARQL: select distinct ?answer where { wd:Q43284 wdt:P1940 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ginkgo biloba', 'p': 'conifers.org ID', 'o': '?x0'}

 Q: What is the TA98 Latin term of epidermis?
 SPARQL: select distinct ?answer where { wd:Q212743 wdt:P3982 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'epidermi', 'p': 'TA98 Latin term', 'o': '?x0'}

 Q: What is the {protein} for {encodes} of {INS}
 SPARQL:  select distinct ?obj where { wd:Q21163221 wdt:P688 ?obj . ?obj wdt:P31 wd:Q8054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'INS', 'p': 'encodes', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'protein'}}

 Q: What is {not the same as} of {moorland}, that has {geographic coordinate} is {55.9439} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1092661 wdt:P1889 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'55.9439'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'moorland', 'p': 'not the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'geographic coordinate', 'o': '55.9439'}}

 Q: What is the ISO 639-3 code for Tagalog?
 SPARQL: select distinct ?answer where { wd:Q34057 wdt:P220 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tagalog', 'p': 'ISO 639-3 code', 'o': '?x0'}

 Q: What is the architectural style of Gothic art?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P149 wd:Q46825 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'architectural style', 'o': 'Gothic art'}

 Q: Tell me sports league whose name has the word shield in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q623109 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'shield')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports league'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'shield'}}

 Q: "What is the {continent} of {West Antarctica}, that {has boroughs} named {Heard Island and McDonald Islands} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q530917 wdt:P30 ?answer . ?answer wdt:P150 wd:Q131198}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'West Antarctica', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has boroughs', 'o': 'Heard Island and McDonald Islands'}}

 Q: Which is the sports database that is maintained by the International Olympic Committee?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P126 wd:Q40970 . ?sbj wdt:P31 wd:Q29043181 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'maintained by', 'o': 'International Olympic Committee', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports database'}}

 Q: Is the upper flammable limit of the toulene less than 8.52?
 SPARQL: ASK WHERE { wd:Q15779 wdt:P2203 ?obj filter(?obj < 8.52) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'toluene', 'p': 'upper flammable limit', 'o': '?x0', '?x0': '8.52'}

 Q: How many {sexual orientation} are to/by {heterosexuality} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P91 wd:Q1035954 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sexual orientation', 'o': 'heterosexuality'}

 Q: What is the {studio album} for {tracklist} of {Stairway to Heaven}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P658 wd:Q192023 . ?sbj wdt:P31 wd:Q208569 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'tracklist', 'o': 'Stairway to Heaven', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'album'}}

 Q: What is the {book review} with the {MAX(number of pages)} whose {published in} is {The Archaeological Journal}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q637866 . ?ent wdt:P1104 ?obj . ?ent wdt:P1433 wd:Q7714165 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of pages', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book review', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'The Archaeological Journal'}}}

 Q: What is the dimension of works by Jean Racine?
 SPARQL: SELECT ?answer WHERE { wd:Q742 wdt:P800 ?X . ?X wdt:P2043 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dimension', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean Racine', 'p': 'work', 'o': '$y0'}}

 Q: Is the cruise speed of the Airbus A340 equal to 905?
 SPARQL: ASK WHERE { wd:Q6481 wdt:P2217 ?obj filter(?obj = 905) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Airbus A340', 'p': 'cruise speed', 'o': '?x0', '?x0': '905'}

 Q: When did character from Star Wars for killed by of Luke Skywalker?
 SPARQL:  select distinct ?obj where { wd:Q51746 wdt:P157 ?obj . ?obj wdt:P31 wd:Q33125444 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Luke Skywalker', 'p': 'killed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character from Star Wars'}}

 Q: What is {member of} of {Richard Hofstadter}, that has {specialism} is {American studies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q982698 wdt:P463 ?answer . ?answer wdt:P101 wd:Q470125}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Richard Hofstadter', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'American studies'}}

 Q: What is The Merchant of Venice's genre and characters?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q206400 wdt:P136 ?ans_1 . wd:Q206400 wdt:P674 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Merchant of Venice', 'p': 'genre', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Merchant of Venice', 'p': 'characters', 'o': '?x1'}]

 Q: what is the {valid in period} for {Bologna} has {located in time zone} as {UTC+02:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q1891 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bologna', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+02:00'}}}

 Q: What is {place of death} of {Carl Theodor Dreyer} that is {country} is {Denmark} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51127 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q35 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Theodor Dreyer', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Denmark'}}}

 Q: What university is located in Karachi?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q8660 . ?sbj wdt:P31 wd:Q3918 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is located in', 'o': 'Karachi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university'}}

 Q: What is the {human} for {chief operating officer} of {Nintendo}
 SPARQL:  select distinct ?obj where { wd:Q8093 wdt:P1789 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nintendo', 'p': 'chief operating officer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {end time} for {Bradley Wiggins} has {member of sports team} as {Wiggins} ?
 SPARQL: SELECT ?value WHERE { wd:Q193876 p:P54 ?s . ?s ps:P54 wd:Q18786386 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bradley Wiggins', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Wiggins'}}}

 Q: What is Orthodox Encyclopedia ID for Elizabeth of Russia?
 SPARQL: select distinct ?answer where { wd:Q130752 wdt:P5002 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Elizabeth of Russia', 'p': 'Orthodox Encyclopedia ID', 'o': '?x0'}

 Q: Who is named for the Boltzmann distribution, who is a member of the Accademia Nazionale delle Scienze detta dei XL?
 SPARQL: SELECT ?answer WHERE { wd:Q834200 wdt:P138 ?answer . ?answer wdt:P463 wd:Q3603946}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Boltzmann distribution', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Accademia Nazionale delle Scienze detta dei XL'}}

 Q: What was the amount of female population of Sana'a in 2004-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q2471 p:P1539 ?s . ?s ps:P1539 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sana', 'p': 'female population', 'o': '?x0', 't': '2004'}

 Q: Which is the bite force quotient for sun bear?
 SPARQL: select distinct ?answer where { wd:Q144923 wdt:P3485 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sun bear', 'p': 'bite force quotient', 'o': '?x0'}

 Q: What is the {Chinese dynasty} for {capital of} of {Nanjing}
 SPARQL:  select distinct ?obj where { wd:Q16666 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q12857432 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nanjing', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Chinese dynasty'}}

 Q: What is {follows} and {followed by} of {{Amy Winehouse} has {award received} as {Grammy Award for Best New Artist}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q15897 p:P166 ?s . ?s ps:P166 wd:Q1453643 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amy Winehouse', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best New Artist'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amy Winehouse', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best New Artist'}}}]

 Q: What is the {student of} and the {student} of {Pablo_Picasso} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q5593 wdt:P1066 ?ans_1 . wd:Q5593 wdt:P802 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Pablo Picasso', 'p': 'student of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Pablo Picasso', 'p': 'student', 'o': '?x1'}]

 Q: Is the size of team at start of the World Poker Tour season 5 results equal to 639?
 SPARQL: ASK WHERE { wd:Q2635350 wdt:P2103 ?obj filter(?obj = 639) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'World Poker Tour season 5 results', 'p': 'size of team at start', 'o': '?x0', '?x0': '639'}

 Q: What is {toponym} of {Mensa}, that has {continent} is {Africa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9289 wdt:P138 ?answer . ?answer wdt:P30 wd:Q15}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mensa', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'Africa'}}

 Q: Which is the distribution map for Yue Chinese?
 SPARQL: select distinct ?answer where { wd:Q7033959 wdt:P1846 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yue Chinese', 'p': 'distribution map', 'o': '?x0'}

 Q: Does the longitude of ascending node for the 10387 Bepicolombo equal 0.77616?
 SPARQL: ASK WHERE { wd:Q121527 wdt:P2213 ?obj filter(?obj = 0.77616) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '10387 Bepicolombo', 'p': 'longitude of ascending node', 'o': '?x0', '?x0': '0.77616'}

 Q: What is {buried in} of {discoverer} of {lutetium} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1857 wdt:P61 ?X . ?X wdt:P119 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'buried in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lutetium', 'p': 'discoverer', 'o': '$y0'}}

 Q: What is the title of the anthem of Somaliland?
 SPARQL: SELECT ?obj WHERE { wd:Q34754 p:P85 ?s . ?s ps:P85 ?obj . ?s pq:P51 ?x filter(contains(?x,'Heesta Qaranka Somaliland.ogg')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Somaliland', 'p': 'anthem', 'o': '?x0'}

 Q: What was the population of Le Mans at the beginning of 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q1476 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Le Mans', 'p': 'population', 'o': '?x0', 't': '2015'}

 Q: What is {nominated for} of {Judy Holliday} that is {for work} is {Born Yesterday} ?
 SPARQL: SELECT ?obj WHERE { wd:Q253298 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q375594 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Judy Holliday', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Born Yesterday'}}}

 Q: Which is {PIN Code} of {deathplace} of {Doug Henning} ?
 SPARQL: SELECT ?answer WHERE { wd:Q301559 wdt:P20 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'PIN Code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Doug Henning', 'p': 'deathplace', 'o': '$y0'}}

 Q: "What is {confused with} {kinematics}, that is the {inverse} of {statics} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q11476 wdt:P1889 ?answer . ?answer wdt:P461 wd:Q169019}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'kinematics', 'p': 'confused with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inverse', 'o': 'statics'}}

 Q: What is the mouthpiece of the {Deutsche Bahn} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9322 wdt:P2813 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Deutsche Bahn', 'p': 'mouthpiece', 'o': '?x0'}

 Q: Which is the FilmPolski.pl ID of Constantin Stanislavski?
 SPARQL: select distinct ?answer where { wd:Q49484 wdt:P3495 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Constantin Stanislavski', 'p': 'FilmPolski.pl ID', 'o': '?x0'}

 Q: What is <WOEID> of <Stuttgart> ?
 SPARQL: select distinct ?answer where { wd:Q1022 wdt:P1281 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stuttgart', 'p': 'WOEID', 'o': '?x0'}

 Q: What is the {charter city} for {narrative location} of {Die Hard}
 SPARQL:  select distinct ?obj where { wd:Q105598 wdt:P840 ?obj . ?obj wdt:P31 wd:Q13218391 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Die Hard', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'charter city'}}

 Q: What is {afflicts} of {cause of} of {2,4,6-trinitrotoluene} ?
 SPARQL: SELECT ?answer WHERE { wd:Q170167 wdt:P1542 ?X . ?X wdt:P689 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afflicts', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '2,4,6-trinitrotoluene', 'p': 'cause of', 'o': '$y0'}}

 Q: What is the {sovereign state} for {country} of {Himachal Pradesh}
 SPARQL:  select distinct ?obj where { wd:Q1177 wdt:P17 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Himachal Pradesh', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: For Karlheinz Stockhausen was spoused was in the end time in the year 1972?
 SPARQL: SELECT ?obj WHERE { wd:Q154556 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1972')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Karlheinz Stockhausen', 'p': 'spouse', 'o': '?x0', 't': '1972'}

 Q: Give me {shipwrecking} that contains the word {ålesundsolyckorna} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q906512 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ålesundsolyckorna')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'shipwrecking'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ålesundsolyckorna'}}

 Q: Which is the FFH-Habitat which contains the word vegetation in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60029820 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vegetation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'FFH-Habitat'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vegetation'}}

 Q: Give me {occupation} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12737077 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'occupation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {aspect of history} for {facet of} of {polymerase chain reaction}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1269 wd:Q176996 . ?sbj wdt:P31 wd:Q17524420 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'polymerase chain reaction', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of history'}}

 Q: What is {writers} of {The Right Stuff}, that has {career} is {non-fiction writer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3301814 wdt:P50 ?answer . ?answer wdt:P106 wd:Q15980158}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Right Stuff', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'non-fiction writer'}}

 Q: Which is the position that applies to the jurisdiction of Coptic Orthodox Church of Alexandria?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q198998 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'jurisdiction', 'o': 'Coptic Orthodox Church of Alexandria', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: Which is the international organization of the secretary general Vladimir Norov and contains the word cooperation in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q484652 . ?sbj wdt:P3975 wd:Q365665 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cooperation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international organization', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'secretary general', 'o': 'Vladimir Norov'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cooperation'}}

 Q: Tell me the population of Makati on 2010-5-1?
 SPARQL: SELECT ?obj WHERE { wd:Q1508 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Makati', 'p': 'population', 'o': '?x0', 't': '2010'}

 Q: What is {spouse} of {Ingrid Bergman} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q43247 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ingrid Bergman', 'p': 'married', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ingrid Bergman', 'p': 'married', 'o': '$y0'}}]

 Q: Is the refractive index of water equal to 1.32524?
 SPARQL: ASK WHERE { wd:Q283 wdt:P1109 ?obj filter(?obj = 1.32524) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'water', 'p': 'refractive index', 'o': '?x0', '?x0': '1.32524'}

 Q: What is the ISSF ID of Kim Rhode?
 SPARQL: select distinct ?answer where { wd:Q233759 wdt:P2730 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kim Rhode', 'p': 'ISSF ID', 'o': '?x0'}

 Q: Is it true that the VAT-rate of the Australia equals to 8.0?
 SPARQL: ASK WHERE { wd:Q408 wdt:P2855 ?obj filter(?obj = 8.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Australia', 'p': 'VAT-rate', 'o': '?x0', '?x0': '8.0'}

 Q: Where is the tourist office of Hanover?
 SPARQL: select distinct ?answer where { wd:Q1715 wdt:P2872 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hanover', 'p': 'tourist office', 'o': '?x0'}

 Q: Is it true that the foreign direct investment net inflow of Belarus equals to 16663500000?
 SPARQL: ASK WHERE { wd:Q184 wdt:P2141 ?obj filter(?obj = 16663500000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Belarus', 'p': 'foreign direct investment net inflow', 'o': '?x0', '?x0': '16663500000'}

 Q: What is the {film} for {director} of {Baz Luhrmann}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q250545 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Baz Luhrmann', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie'}}

 Q: Who is the current holder of the award once won by Andre Geim?
 SPARQL: SELECT ?answer WHERE { wd:Q104104 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'won by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andre Geim', 'p': 'award', 'o': '$y0'}}

 Q: What actor plays Professor X in the film X-Men: Apocalypse?
 SPARQL: SELECT ?obj WHERE { wd:Q838076 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q17042878 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Professor X', 'p': 'actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'X-Men: Apocalypse'}}}

 Q: what is the {end time} for {Sebastian Vettel} has {member of sports team} as {Scuderia Toro Rosso} ?
 SPARQL: SELECT ?value WHERE { wd:Q42311 p:P54 ?s . ?s ps:P54 wd:Q141818 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sebastian Vettel', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Scuderia Toro Rosso'}}}

 Q: Give me {integer} that contains the word {10} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12503 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '10')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'integer'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': '10'}}

 Q: Is the topographic isolation of Signalkuppe equal to 0.56?
 SPARQL: ASK WHERE { wd:Q30405 wdt:P2659 ?obj filter(?obj = 0.56) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Signalkuppe', 'p': 'topographic isolation', 'o': '?x0', '?x0': '0.56'}

 Q: Who is {educated at} of {Rachel Maddow} where {end time} is {2001-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q555 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rachel Maddow', 'p': 'educated at', 'o': '?x0', 't': '2001'}

 Q: What is the {country} for {contains administrative territorial entity} of {Beijing}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q956 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Beijing', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: When did Alexander III of Russia receive the award for Knight Grand Cross of the Military Order of William?
 SPARQL: SELECT ?value WHERE { wd:Q120180 p:P166 ?s . ?s ps:P166 wd:Q2424158 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Alexander III of Russia', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Knight Grand Cross of the Military Order of William'}, 't': '?x0'}

 Q: How many constellations are there in the Milky Way?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q321 wdt:P59 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Milky Way', 'p': 'constellation', 'o': '?x0'}

 Q: What award was Terry Pratchett nominated for?
 SPARQL:  select distinct ?obj where { wd:Q46248 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q618779 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Terry Pratchett', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award'}}

 Q: Is the unemployment rate of Lesotho equal to 26?
 SPARQL: ASK WHERE { wd:Q1013 wdt:P1198 ?obj filter(?obj = 26) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lesotho', 'p': 'unemployment rate', 'o': '?x0', '?x0': '26'}

 Q: How many {record held} are to/by {pole vault} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1000 wd:Q185027 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'record held', 'o': 'pole vault'}

 Q: is it true that the thermal conductivity of tin II oxide is equal to 38.24?
 SPARQL: ASK WHERE { wd:Q204980 wdt:P2068 ?obj filter(?obj = 38.24) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'tin(II) oxide', 'p': 'thermal conductivity', 'o': '?x0', '?x0': '38.24'}

 Q: What is the {geography of geographic location} for {geography of topic} of {Sindh}
 SPARQL:  select distinct ?obj where { wd:Q37211 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sindh', 'p': 'geography of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geography of geographic location'}}

 Q: what is the {start time} for {Marche} has {head of government} as {Luca Ceriscioli} ?
 SPARQL: SELECT ?value WHERE { wd:Q1279 p:P6 ?s . ?s ps:P6 wd:Q3838079 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marche', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Luca Ceriscioli'}}}

 Q: What is {developed by} of {Advanced Audio Coding}, that has {wgs 84} is {49.5472} ?
 SPARQL: SELECT ?answer WHERE { wd:Q337594 wdt:P178 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'49.5472'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Advanced Audio Coding', 'p': 'developed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wgs 84', 'o': '49.5472'}}

 Q: What is {split from} of {musical key} of {Violin Concerto No. 1 (Bruch)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q163689 wdt:P826 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'split from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Violin Concerto No. 1', 'p': 'musical key', 'o': '$y0'}}

 Q: Is the vertical depth of Midenata peshtera equal to 0?
 SPARQL: ASK WHERE { wd:Q60040067 wdt:P4511 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Midenata peshtera', 'p': 'vertical depth', 'o': '?x0', '?x0': '0'}

 Q: Is it true that the number of survivors of September 13 incident is greater than 0?
 SPARQL: ASK WHERE { wd:Q10878635 wdt:P1561 ?obj filter(?obj > 0.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'September 13 incident', 'p': 'number of survivors', 'o': '?x0', '?x0': '0.0'}

 Q: What is the conflict of J.R.R. Tolkien?
 SPARQL: select distinct ?answer where { wd:Q892 wdt:P607 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tolkien', 'p': 'conflict', 'o': '?x0'}

 Q: How many {member of} are to/by {International Hydrographic Organization} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P463 wd:Q233611 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Hydrographic Organization'}

 Q: What is the combustion enthalpy for acetylene?
 SPARQL: select distinct ?answer where { wd:Q133145 wdt:P2117 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'acetylene', 'p': 'combustion enthalpy', 'o': '?x0'}

 Q: What is the {type of quantum particle} for {antiparticle} of {photon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2152 wd:Q3198 . ?sbj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'antiparticle', 'o': 'photon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: How many {influenced by} are to/by {Thomas Hobbes} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P737 wd:Q37621 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'influenced by', 'o': 'Thomas Hobbes'}

 Q: what is the {point in time} for {Shania Twain} has {nominated for} as {Grammy Award for Best Female Country Vocal Performance} ?
 SPARQL: SELECT ?value WHERE { wd:Q131433 p:P1411 ?s . ?s ps:P1411 wd:Q5593802 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Shania Twain', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Grammy Award for Best Female Country Vocal Performance'}, 't': '?x0'}

 Q: what is the {start time} for {Kaliningrad} has {twinned administrative body} as {Baranovichi} ?
 SPARQL: SELECT ?value WHERE { wd:Q1829 p:P190 ?s . ?s ps:P190 wd:Q237655 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kaliningrad', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Baranovichi'}}}

 Q: What is the {human} for {editor} of {The New York Times}
 SPARQL:  select distinct ?obj where { wd:Q9684 wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The New York Times', 'p': 'editor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {goddess of} of {executioner} of {Osiris} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46491 wdt:P157 ?X . ?X wdt:P2925 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'goddess of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Osiris', 'p': 'executioner', 'o': '$y0'}}

 Q: what is the {object has role} for {Buddenbrooks} has {characters} as {Bendix Grünlich} ?
 SPARQL: SELECT ?value WHERE { wd:Q326909 p:P674 ?s . ?s ps:P674 wd:Q42324827 . ?s pq:P3831 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'object has role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Buddenbrooks', 'p': 'characters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'characters', 'o': 'Bendix Grünlich'}}}

 Q: What's the total amount of operators employed in the London Underground?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q20075 wdt:P137 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'London Underground', 'p': 'operator', 'o': '?x0'}

 Q: Does the takeoff roll of the G.91T equal to 4760?
 SPARQL: ASK WHERE { wd:Q21024216 wdt:P2430 ?obj filter(?obj = 4760) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'G.91T', 'p': 'takeoff roll', 'o': '?x0', '?x0': '4760'}

 Q: Which taxon has the highest heart rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P3395 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'heart rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: When did the Dakahlia Governorate have the population 6492381?
 SPARQL: SELECT ?value WHERE { wd:Q31068 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'6492381')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dakahlia Governorate', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '6492381'}, 't': '?x0'}

 Q: What is Tampere's Finnish municipality number?
 SPARQL: select distinct ?answer where { wd:Q40840 wdt:P1203 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tampere', 'p': 'Finnish municipality number', 'o': '?x0'}

 Q: Is the total shots in career of  Kyle Rossiter equal to 1?
 SPARQL: ASK WHERE { wd:Q3200939 wdt:P6543 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Kyle Rossiter', 'p': 'total shots in career', 'o': '?x0', '?x0': '1'}

 Q: What is {actress} of {comes before} of {Dumb and Dumberer: When Harry Met Lloyd} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1265087 wdt:P156 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actress', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dumb and Dumberer: When Harry Met Lloyd', 'p': 'comes before', 'o': '$y0'}}

 Q: What is {position held} of {Donald Tusk} that is {replaces} is {Herman Van Rompuy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q946 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q12983 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Tusk', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Herman Van Rompuy'}}}

 Q: Who did Wallis Simpson marry in 1928?
 SPARQL: SELECT ?obj WHERE { wd:Q209417 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1928')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wallis Simpson', 'p': 'marry', 'o': '?x0', 't': '1928'}

 Q: Name the district of China that contains Shanghai.
 SPARQL:  select distinct ?obj where { wd:Q8686 wdt:P150 ?obj . ?obj wdt:P31 wd:Q1065118 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shanghai', 'p': 'contains', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'district of China'}}

 Q: What is Zygoptera's BHL Page ID?
 SPARQL: select distinct ?answer where { wd:Q230502 wdt:P687 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zygoptera', 'p': 'BHL Page ID', 'o': '?x0'}

 Q: Which is {label in official language} of {muscle insertion} {clavicle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16343 wdt:P3491 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'label in official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'clavicle', 'p': 'muscle insertion', 'o': '$y0'}}

 Q: How many {position played on team / speciality} are to/by {sprinting} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P413 wd:Q624482 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'player position', 'o': 'sprinting'}

 Q: What is the {television station} for {language used} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q5287 . ?sbj wdt:P31 wd:Q1616075 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television station'}}

 Q: What is Spotify artist ID for R. Kelly ?
 SPARQL: select distinct ?answer where { wd:Q273055 wdt:P1902 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'R. Kelly', 'p': 'Spotify artist ID', 'o': '?x0'}

 Q: Which is the MOOMA artist ID of Vanessa Paradis?
 SPARQL: select distinct ?answer where { wd:Q51023 wdt:P3733 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vanessa Paradis', 'p': 'MOOMA artist ID', 'o': '?x0'}

 Q: Did {Philosophy} {different from} {dogma}?
 SPARQL: ASK WHERE { wd:Q5891 wdt:P1889 wd:Q620749 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'philosophy', 'p': 'different from', 'o': '?x0', '?x0': 'dogma'}]

 Q: Give me {disease} that {pathogen transmission process} {contact transmission} and which that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12136 . ?sbj wdt:P1060 wd:Q15304512 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pathogen transmission process', 'o': 'contact'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What product was built by Asus ZenWatch 3?
 SPARQL: SELECT ?answer WHERE { wd:Q30161124 wdt:P176 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'product', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asus ZenWatch 3', 'p': 'built by', 'o': '$y0'}}

 Q: What is the academic subject of Michael J. D. Powell's recognition title?
 SPARQL: SELECT ?answer WHERE { wd:Q588371 wdt:P166 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael J. D. Powell', 'p': 'recognition title', 'o': '$y0'}}

 Q: What is the {human settlement} for {capital of} of {Tokugawa shogunate}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1376 wd:Q205662 . ?sbj wdt:P31 wd:Q486972 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital of', 'o': 'Tokugawa Shogunate', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human settlement'}}

 Q: What is {nominated for} of {Adolf von Baeyer} that is {point in time} is {1904-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q57078 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1904')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Adolf von Baeyer', 'p': 'nominated for', 'o': '?x0', 't': '1904'}

 Q: What is {twinned administrative body} of {Qingdao} that is {start time} is {2009-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q170322 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Qingdao', 'p': 'twinned administrative body', 'o': '?x0', 't': '2009'}

 Q: What is {eponym} of {Gaussian elimination}, that has {birth year} is {1777-4-30} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2658 wdt:P138 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1777'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gaussian elimination', 'p': 'eponym', 'o': '?x0', 't': '1777'}

 Q: What is {sequel is} of {temporal range end} of {Iguanodon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q130980 wdt:P524 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sequel is', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iguanodon', 'p': 'temporal range end', 'o': '$y0'}}

 Q: How many superpowers does Superman have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q79015 wdt:P2563 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Superman', 'p': 'superpower', 'o': '?x0'}

 Q: What is {disease treated} of {treated by} of {lymphoma} ?
 SPARQL: SELECT ?answer WHERE { wd:Q208414 wdt:P2176 ?X . ?X wdt:P2175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disease treated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lymphoma', 'p': 'treatment', 'o': '$y0'}}

 Q: What is {played by] of {computer network} that {painting of} is {network}?
 SPARQL: SELECT ?answer WHERE { wd:Q1301371 wdt:P1299 ?answer . ?answer wdt:P180 wd:Q1900326}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'computer network', 'p': 'played by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'painting of', 'o': 'network'}}

 Q: Give me {Devi} that {worshipped by} {Hinduism} and which that starts with {'l'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q494511 . ?sbj wdt:P1049 wd:Q9089 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'devi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': 'Hinduism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: which set of numbers with the highest upper limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3054943 . ?ent wdt:P5448 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'upper limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'set of numbers'}}

 Q: What is the {standards body} and the {main regulatory text} of {Hypertext_Transfer_Protocol} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8777 wdt:P1462 ?ans_1 . wd:Q8777 wdt:P92 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hypertext Transfer Protocol', 'p': 'standards body', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hypertext Transfer Protocol', 'p': 'main regulatory text', 'o': '?x1'}]

 Q: Is BDSM different from violence?
 SPARQL: ASK WHERE { wd:Q190845 wdt:P1889 wd:Q124490 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'BDSM', 'p': 'different from', 'o': '?x0', '?x0': 'violence'}]

 Q: What is {established} of {member of} of {Franz Boas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q76857 wdt:P463 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Boas', 'p': 'member of', 'o': '$y0'}}

 Q: Which country shared border with Nazi Germany until 1939?
 SPARQL: SELECT ?obj WHERE { wd:Q7318 p:P47 ?s . ?s ps:P47 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1939')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nazi Germany', 'p': 'border', 'o': '?x0', 't': '1939'}

 Q: What is {admin HQ} of {team played for} of {Somchai Subpherm} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4926223 wdt:P54 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'HQ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Somchai Subpherm', 'p': 'team', 'o': '$y0'}}

 Q: What is {position held} of {Lenín Moreno} that is {elected in} is {Ecuadorian general election, 2006} ?
 SPARQL: SELECT ?obj WHERE { wd:Q518626 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 wd:Q1285633 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lenín Moreno', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'election', 'o': 'Ecuadorian general election, 2006'}}}

 Q: IS THE BASIC SALARY OF GEORGE STEHENSON LESS THAN 528?
 SPARQL: ASK WHERE { wd:Q133614 wdt:P3618 ?obj filter(?obj < 528.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'George Stephenson', 'p': 'base salary', 'o': '?x0', '?x0': '528.0'}

 Q: Which is the Orphanet ID of leprosy?
 SPARQL: select distinct ?answer where { wd:Q36956 wdt:P1550 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'leprosy', 'p': 'Orphanet ID', 'o': '?x0'}

 Q: What is the MPAA film rating of Ghostbusters?
 SPARQL: select distinct ?answer where { wd:Q108745 wdt:P1657 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ghostbusters', 'p': 'MPAA film rating', 'o': '?x0'}

 Q: Who is the plaintiff of Plessy v. Ferguson?
 SPARQL: select distinct ?answer where { wd:Q656660 wdt:P1620 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Plessy v. Ferguson', 'p': 'plaintiff', 'o': '?x0'}

 Q: Is it true that the annual number of weddings of Kaprijke is less than 16.8?
 SPARQL: ASK WHERE { wd:Q12437 wdt:P5982 ?obj filter(?obj < 16.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Kaprijke', 'p': 'annual number of weddings', 'o': '?x0', '?x0': '16.8'}

 Q: Does the attendance of the 19th Grey Cup equal 4089.6?
 SPARQL: ASK WHERE { wd:Q4595757 wdt:P1110 ?obj filter(?obj = 4089.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '19th Grey Cup', 'p': 'attendance', 'o': '?x0', '?x0': '4089.6'}

 Q: What fictional dog is said to be the same dog as Goofy?
 SPARQL:  select distinct ?obj where { wd:Q111135 wdt:P460 ?obj . ?obj wdt:P31 wd:Q15720625 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Goofy', 'p': 'same', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional dog'}}

 Q: What is {occupation} of {Bettie Page} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q61898 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'job', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'job', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'job', 'o': '$y0'}}]

 Q: What is {culture} of {executioner} of {Juan Rodríguez Suárez} ?
 SPARQL: SELECT ?answer WHERE { wd:Q598409 wdt:P157 ?X . ?X wdt:P172 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'culture', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Juan Rodriguez Suarez', 'p': 'executioner', 'o': '$y0'}}

 Q: What is the {country of citizenship} and the {occupation} of {Alice_Cooper} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q332032 wdt:P27 ?ans_1 . wd:Q332032 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Alice Cooper', 'p': 'country of citizenship', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Alice Cooper', 'p': 'occupation', 'o': '?x1'}]

 Q: What is Fashion Model Directory model ID for Paris Hilton ?
 SPARQL: select distinct ?answer where { wd:Q47899 wdt:P2266 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paris Hilton', 'p': 'Fashion Model Directory model ID', 'o': '?x0'}

 Q: Which is {official language} {is in the department of} {Kali Penjalin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q25249655 wdt:P131 ?X . ?X wdt:P37 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kali Penjalin', 'p': 'is in the department of', 'o': '$y0'}}

 Q: What is the {protected area} for {creator} of {Frank Gehry}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q180374 . ?sbj wdt:P31 wd:Q473972 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'creator', 'o': 'Frank Gehry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'protected area'}}

 Q: DOES THE MAXIMUM GLIDE RATIO OF DG FLUZEUGBAU L S 10 EQUALS 60.0
 SPARQL: ASK WHERE { wd:Q2163977 wdt:P1470 ?obj filter(?obj = 60.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'DG Flugzeugbau LS10', 'p': 'maximum glide ratio', 'o': '?x0', '?x0': '60.0'}

 Q: What is the watercourse that outflows of Walker Lake?
 SPARQL: SELECT ?answer WHERE { wd:Q679846 wdt:P201 ?X . ?X wdt:P403 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'outflow', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Walker Lake', 'p': 'outflows', 'o': '$y0'}}

 Q: what is the {start time} for {Charles Stewart Parnell} has {position held} as {Member of the 24th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q317436 p:P39 ?s . ?s ps:P39 wd:Q41582570 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Stewart Parnell', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 24th Parliament of the United Kingdom'}}}

 Q: is ANZUS a signatory?
 SPARQL: select distinct ?answer where { wd:Q295875 wdt:P1891 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ANZUS', 'p': 'signatory', 'o': '?x0'}

 Q: What is the {book of the Bible} for {follows} of {Exodus}
 SPARQL:  select distinct ?obj where { wd:Q9190 wdt:P155 ?obj . ?obj wdt:P31 wd:Q29154430 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Exodus', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book of the Bible'}}

 Q: What colossal statue starts with the letter "s"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1779653 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'colossal statue'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is <Sandbox-Item> of <1> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P369 wd:Q199}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'Sandbox-Item', 'o': 'one'}

 Q: Who is the mother of Elektra that is married to Agamemnon?
 SPARQL: SELECT ?answer WHERE { wd:Q131651 wdt:P25 ?answer . ?answer wdt:P26 wd:Q128176}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Elektra', 'p': 'mother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'married to', 'o': 'Agamemnon'}}

 Q: what is the {for work} for {John Updike} has {award received} as {PEN/Faulkner Award for Fiction} ?
 SPARQL: SELECT ?value WHERE { wd:Q105756 p:P166 ?s . ?s ps:P166 wd:Q1188661 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Updike', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'PEN/Faulkner Award for Fiction'}}}

 Q: tell me that aerospace manufacturer which contains the word zeebruges on its own name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q936518 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeebruges')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aerospace manufacturer'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeebruges'}}

 Q: What is the {business} for {replaced by} of {Oracle Corporation}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1366 wd:Q19900 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Oracle Corporation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: what is the {end time} for {Eugenio Montale} has {position held} as {senatore a vita} ?
 SPARQL: SELECT ?value WHERE { wd:Q83174 p:P39 ?s . ?s ps:P39 wd:Q826589 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eugenio Montale', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'senatore a vita'}}}

 Q: Which is the twin city of place of death of Clark Gable?
 SPARQL: SELECT ?answer WHERE { wd:Q71243 wdt:P20 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clark Gable', 'p': 'place of death', 'o': '$y0'}}

 Q: What is {type locality (geology)} of {diopside}, that has {total area} is {11.14} ?
 SPARQL: SELECT ?answer WHERE { wd:Q316671 wdt:P2695 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'11.14'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'diopside', 'p': 'type locality (geology)', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area', 'o': '11.14'}}

 Q: What are the salad which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9266 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'salad'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: what is the {end time} for {Ptolemy I Soter} has {noble title} as {pharaoh} ?
 SPARQL: SELECT ?value WHERE { wd:Q168261 p:P97 ?s . ?s ps:P97 wd:Q37110 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ptolemy I Soter', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'pharaoh'}}}

 Q: Who is the {factory} for {product or material produced} of {butter}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q34172 . ?sbj wdt:P31 wd:Q83405 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'butter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'factory'}}

 Q: Who gave the {unit symbol} of {based upon} of {lumen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q484092 wdt:P144 ?X . ?X wdt:P5061 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'unit symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lumen', 'p': 'based upon', 'o': '$y0'}}

 Q: Who is the wife of Medgar Evers in 1951?
 SPARQL: SELECT ?obj WHERE { wd:Q717985 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1951')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Medgar Evers', 'p': 'wife', 'o': '?x0', 't': '1951'}

 Q: Tell me the name of a non-metal with the most electronegativity
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q19600 . ?ent wdt:P1108 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'electronegativity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'non-metal'}}

 Q: Who owns CNN is owned and who is CNN owned by?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q48340 wdt:P1830 ?ans_1 . wd:Q48340 wdt:P127 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'CNN', 'p': 'owns', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'CNN', 'p': 'owned by', 'o': '?x1'}]

 Q: What is {pronunciation audio} of {media} of {chocolate milk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13253 wdt:P186 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'chocolate milk', 'p': 'media', 'o': '$y0'}}

 Q: How many {number of cases} are for {malaria} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q12156 wdt:P1603 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'malaria', 'p': 'number of cases', 'o': '?x0'}

 Q: What is the adjacent station for Oregon City?
 SPARQL: select distinct ?answer where { wd:Q849596 wdt:P197 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oregon City', 'p': 'adjacent station', 'o': '?x0'}

 Q: What is <PhilPapers topic> of <Roger Bacon> ?
 SPARQL: select distinct ?answer where { wd:Q171677 wdt:P3235 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roger Bacon', 'p': 'PhilPapers topic', 'o': '?x0'}

 Q: What is the Operabase ID for Terry Gilliam?
 SPARQL: select distinct ?answer where { wd:Q25078 wdt:P4869 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Terry Gilliam', 'p': 'Operabase ID', 'o': '?x0'}

 Q: What is {date of birth} of {Polybius} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131169 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Polybius', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'circa'}}}

 Q: What is <area> of <Channel Islands> ?
 SPARQL: select distinct ?answer where { wd:Q42314 wdt:P2046 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Channel Islands', 'p': 'area', 'o': '?x0'}

 Q: Which country was Medina from at the time of her inception 632-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q35484 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(?x,'632-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Medina', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'from', 'o': '632-0-0'}}}

 Q: What is the {human} for {cover artist} of {All Quiet on the Western Front}
 SPARQL:  select distinct ?obj where { wd:Q207332 wdt:P736 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'All Quiet on the Western Front', 'p': 'cover artist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is Chicago located in Cook County?
 SPARQL: ASK WHERE { wd:Q1297 wdt:P131 wd:Q108418 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chicago', 'p': 'in', 'o': '?x0', '?x0': 'Cook County'}]

 Q: Name a silent movie written by Thomas Dixon Jr that starts with letter B
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q226730 . ?sbj wdt:P58 wd:Q4993107 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'silent movie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'written by', 'o': 'Thomas Dixon'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: Did {Angkor_Wat} {architectural style} {Dravidian architecture} and {Medang Kingdom} ?
 SPARQL: ASK WHERE { wd:Q43473 wdt:P149 wd:Q171309 . wd:Q43473 wdt:P149 wd:Q402580 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Angkor Wat', 'p': 'style of architecture', 'o': '?x0', '?x0': 'Dravidian architecture'}, {'h': 'IS', 'v': '?x1', 's': 'Angkor Wat', 'p': 'style of architecture', 'o': '?x1', '?x1': 'Medang Kingdom'}]

 Q: What was the population of Nunavut in the year 2017?
 SPARQL: SELECT ?obj WHERE { wd:Q2023 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nunavut', 'p': 'population', 'o': '?x0', 't': '2017'}

 Q: Which is the license for copyright?
 SPARQL: select distinct ?answer where { ?answer wdt:P275 wd:Q12948581}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'license', 'o': 'copyright'}

 Q: What is {location born} of {Murray Perahia}, that has {executive power headed by} is {Michael Bloomberg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q326221 wdt:P19 ?answer . ?answer wdt:P6 wd:Q607}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Murray Perahia', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive power headed by', 'o': 'Michael Bloomberg'}}

 Q: What is {position held} of {Alexander Dubček} that is {start time} is {1989-12-28} ?
 SPARQL: SELECT ?obj WHERE { wd:Q150543 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alexander Dubcek', 'p': 'position held', 'o': '?x0', 't': '1989'}

 Q: What is <legal status (medicine)> of <prescription drug> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3493 wd:Q1643563}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'legal status (medicine)', 'o': 'prescription drug'}

 Q: what is the {point in time} for {Serbia} has {total fertility rate} as {1.59} ?
 SPARQL: SELECT ?value WHERE { wd:Q403 p:P4841 ?s . ?s ps:P4841 ?x filter(contains(?x,'1.59')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Serbia', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'total fertility rate', 'o': '1.59'}, 't': '?x0'}

 Q: What what is  international parliament  office held by head of the organisation by President of the United Nations General Assembly and also which starts with letter a
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6054776 . ?sbj wdt:P2388 wd:Q1161813 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international parliament', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'President of the United Nations General Assembly'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is treated by capable of inhibiting or preventing pathological process of silver nitrate ?
 SPARQL: SELECT ?answer WHERE { wd:Q207442 wdt:P2175 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'silver nitrate', 'p': 'capable of inhibiting or preventing pathological process', 'o': '$y0'}}

 Q: what is the {point in time} for {Celine Dion} has {award received} as {Officer of the National Order of Quebec} ?
 SPARQL: SELECT ?value WHERE { wd:Q5105 p:P166 ?s . ?s ps:P166 wd:Q15464524 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Celine Dion', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Officer of the National Order of Quebec'}, 't': '?x0'}

 Q: What is {educated at} of {Marina Abramović} that is {end time} is {1970-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q47496 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marina Abramovic', 'p': 'educated at', 'o': '?x0', 't': '1970'}

 Q: Who has the country seat of Taipei, who also has diplomatic relations with the country of Mali?
 SPARQL: SELECT ?answer WHERE { wd:Q1867 wdt:P1376 ?answer . ?answer wdt:P530 wd:Q912}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Taipei', 'p': 'seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Mali'}}

 Q: Who are the sons starring in H. Con-172
 SPARQL: SELECT ?answer WHERE { wd:Q5628146 wdt:P161 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'H. Con-172', 'p': 'starring', 'o': '$y0'}}

 Q: What is {town} of {Capua}, that has {has cities} is {Tora e Piccilli} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58477 wdt:P131 ?answer . ?answer wdt:P150 wd:Q58909}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Capua', 'p': 'town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Tora e Piccilli'}}

 Q: What is {topic of} of {history of Washington, D.C.}, that has {prime minister} is {Marion Barry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q685093 wdt:P1269 ?answer . ?answer wdt:P6 wd:Q938243}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Washington, D.C.', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prime minister', 'o': 'Marion Barry'}}

 Q: what is the {for work} for {Sydney Pollack} has {nominated for} as {Academy Award for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q51522 p:P1411 ?s . ?s ps:P1411 wd:Q103360 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sydney Pollack', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Director'}}}

 Q: What is the {relative} and the {position played on team / speciality} of {Dwayne_Johnson} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q10738 wdt:P1038 ?ans_1 . wd:Q10738 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Dwayne Johnson', 'p': 'relative', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Dwayne Johnson', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: What is {wikibase:geoLatitude ?max} {land} of {history of Senegal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1151513 wdt:P17 ?X . ?X wdt:P1332 ?answer}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'history of Senegal', 'p': 'land', 'o': '$y0'}

 Q: Name an airline company using the Chennai International Airport as a hub that contains the word "spicejet"" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q46970 . ?sbj wdt:P113 wd:Q502670 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'spicejet')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'hub', 'o': 'Chennai International Airport'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'spicejet'}}

 Q: What is {position held} of {Ralf Dahrendorf} that is {start time} is {1993-7-15} ?
 SPARQL: SELECT ?obj WHERE { wd:Q76959 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ralf Dahrendorf', 'p': 'position held', 'o': '?x0', 't': '1993'}

 Q: Who is the operator of Sydney Metro?
 SPARQL: select distinct ?answer where { ?answer wdt:P137 wd:Q14774571}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'Sydney Metro'}

 Q: what is the {point in time} for {Kenny Rogers} has {award received} as {American Music Award for Favorite Country Album} ?
 SPARQL: SELECT ?value WHERE { wd:Q217160 p:P166 ?s . ?s ps:P166 wd:Q1441539 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kenny Rogers', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'American Music Award for Favorite Country Album'}, 't': '?x0'}

 Q: how is remake of makes use of Roman numerals?
 SPARQL: SELECT ?answer WHERE { wd:Q38918 wdt:P2283 ?X . ?X wdt:P144 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'remake of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roman numerals', 'p': 'makes use of', 'o': '$y0'}}

 Q: what is the {serial number} for {Andrei Gromyko} has {award received} as {Order of Lenin} ?
 SPARQL: SELECT ?value WHERE { wd:Q184267 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P2598 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'serial number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andrei Gromyko', 'p': 'awards', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'awards', 'o': 'Order of Lenin'}}}

 Q: Is the decomposition point of citric acid greater than 140.0?
 SPARQL: ASK WHERE { wd:Q159683 wdt:P2107 ?obj filter(?obj > 140.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'citric acid', 'p': 'decomposition point', 'o': '?x0', '?x0': '140.0'}

 Q: Is the IDLH of carbon dioxide equal to 72000?
 SPARQL: ASK WHERE { wd:Q1997 wdt:P2129 ?obj filter(?obj = 72000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'carbon dioxide', 'p': 'IDLH', 'o': '?x0', '?x0': '72000'}

 Q: Tell me postgraduate degree whose name has the word philosophy in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23015928 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'philosophy')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'postgraduate degree'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'philosophy'}}

 Q: Who is the  {horse} for {owner of} of {Ulysses S. Grant}
 SPARQL:  select distinct ?obj where { wd:Q34836 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q726 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ulysses S. Grant', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'horse'}}

 Q: Is power pop the genre of Phil Collins' music?
 SPARQL: ASK WHERE { wd:Q144622 wdt:P136 wd:Q837837 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Phil Collins', 'p': 'genre', 'o': '?x0', '?x0': 'power pop'}]

 Q: What is {member of} of {musical artist} of {The Trip into the Light World Tour} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28405906 wdt:P175 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Trip into the Light World Tour', 'p': 'artist', 'o': '$y0'}}

 Q: Which is the film the was produced by Isabelle Adjani?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P162 wd:Q106383 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'produced by', 'o': 'Isabelle Adjani', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is {genetic association} of {cardiovascular disease} that is {determination method} is {TAS} ?
 SPARQL: SELECT ?obj WHERE { wd:Q389735 p:P2293 ?s . ?s ps:P2293 ?obj . ?s pq:P459 wd:Q23190853 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cardiovascular disease', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'TAS'}}}

 Q: What is the rate of fire of a VAP submachine gun?
 SPARQL: ASK WHERE { wd:Q61235737 wdt:P3792 ?obj filter(?obj = 900) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'VAP submachine gun', 'p': 'rate of fire', 'o': '?x0', '?x0': '900'}

 Q: Which animated film series whose distributor Metro-Goldwyn-Mayer and which that starts with the letter j
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56884562 . ?sbj wdt:P750 wd:Q179200 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated film series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'distributor', 'o': 'Metro-Goldwyn-Mayer'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'j'}}

 Q: What is the {federal state} for {diplomatic relation} of {Soviet Union}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q15180 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What is the construction with the maximum slope rating whose located in the administrative territorial entity is Oregon ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q811430 . ?ent wdt:P3840 ?obj . ?ent wdt:P131 wd:Q824 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'slope rating', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'construction', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Oregon'}}}

 Q: What is <Discogs artist ID> of <Heinrich Heine> ?
 SPARQL: select distinct ?answer where { wd:Q44403 wdt:P1953 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Heinrich Heine', 'p': 'Discogs artist ID', 'o': '?x0'}

 Q: Tell me baseball league whose name has the word professional in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6631808 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'professional')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'baseball league'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'professional'}}

 Q: What is formation of succeeded by of Julian calendar ?
 SPARQL: SELECT ?answer WHERE { wd:Q11184 wdt:P1366 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'formation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julian calendar', 'p': 'succeeded by', 'o': '$y0'}}

 Q: What is {place of activity} of {Lotte Jacobi}, that has {has towns} is {Berg am Laim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q70006 wdt:P937 ?answer . ?answer wdt:P150 wd:Q533054}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lotte Jacobi', 'p': 'place of activity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has towns', 'o': 'Berg am Laim'}}

 Q: What country was Jiangsu a part of in October 1949?
 SPARQL: SELECT ?obj WHERE { wd:Q16963 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1949')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jiangsu', 'p': 'country', 'o': '?x0', 't': '1949'}

 Q: Which is the TAXREF ID for Salvia officinalis?
 SPARQL: select distinct ?answer where { wd:Q1111359 wdt:P3186 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salvia officinalis', 'p': 'TAXREF ID', 'o': '?x0'}

 Q: Who are the characters of the series Civilization V: Gods & Kings?
 SPARQL: SELECT ?answer WHERE { wd:Q2418673 wdt:P179 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Civilization V: Gods & Kings', 'p': 'series', 'o': '$y0'}}

 Q: Tell meGerman nationalism whose name has the word national in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q370744 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'national')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'German nationalism'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'national'}}

 Q: The Erie Canal has what Structurae ID (structure)?
 SPARQL: select distinct ?answer where { wd:Q459578 wdt:P454 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Erie Canal', 'p': 'Structurae ID (structure)', 'o': '?x0'}

 Q: What is the movement in Les Demoiselles d'Avignon?
 SPARQL: select distinct ?answer where { wd:Q910199 wdt:P135 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Les Demoiselles d'Avignon", 'p': 'movement', 'o': '?x0'}

 Q: What opera was composed by Pyotr Ilyich Tchaikovsky?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q7315 . ?sbj wdt:P31 wd:Q1344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composed by', 'o': 'Pyotr Ilyich Tchaikovsky', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'opera'}}

 Q: Name a MediaWiki website located in Amsterdam that starts with letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15633582 . ?sbj wdt:P276 wd:Q727 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'MediaWiki website', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Amsterdam'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: When did country for participant of of World War II?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q362 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant of', 'o': 'World War II', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {established by} of {distributed by} of {Children of the Corn 666: Isaac's Return} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1502325 wdt:P750 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Children of the Corn 6', 'p': 'distributed by', 'o': '$y0'}}

 Q: When did Yerevan's population reach 1.0547e+06?
 SPARQL: SELECT ?value WHERE { wd:Q1953 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.0547e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Yerevan', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.0547e+06'}, 't': '?x0'}

 Q: Is the magnetic moment of the Ganymede equal to 1.056e+20?
 SPARQL: ASK WHERE { wd:Q3169 wdt:P2069 ?obj filter(?obj = 1.056e+20) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ganymede', 'p': 'magnetic moment', 'o': '?x0', '?x0': '1.056e+20'}

 Q: Is 17 the age of consent in South Australia?
 SPARQL: ASK WHERE { wd:Q35715 wdt:P2999 ?obj filter(?obj = 17) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'South Australia', 'p': 'age of consent', 'o': '?x0', '?x0': '17'}

 Q: Which is the LittleSis people ID for Shinzō Abe?
 SPARQL: select distinct ?answer where { wd:Q132345 wdt:P3388 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shinzō Abe', 'p': 'LittleSis people ID', 'o': '?x0'}

 Q: What is {member of sports team} of {Lucien Laurent} that is {number of points/goals/set scored} is {4.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q315286 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x filter(contains(?x,'4.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lucien Laurent', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '4.0'}}}

 Q: What is {buried at} of {David Vetter}, that has {has cities} is {Dawson County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q726179 wdt:P119 ?answer . ?answer wdt:P150 wd:Q110670}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Vetter', 'p': 'buried at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Dawson County'}}

 Q: Which is the film character of the husband of Princess Leia?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P26 wd:Q51797 . ?sbj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'husband', 'o': 'Princess Leia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character'}}

 Q: Did {Lance_Armstrong} {member of sports team} {HTC-Highroad} and {RadioShack} ?
 SPARQL: ASK WHERE { wd:Q2172 wdt:P54 wd:Q169272 . wd:Q2172 wdt:P54 wd:Q897818 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lance Armstrong', 'p': 'member of sports team', 'o': '?x0', '?x0': 'HTC-Highroad'}, {'h': 'IS', 'v': '?x1', 's': 'Lance Armstrong', 'p': 'member of sports team', 'o': '?x1', '?x1': 'RadioShack'}]

 Q: what is the {start time} for {Lufthansa} has {chief executive officer} as {Christoph Franz} ?
 SPARQL: SELECT ?value WHERE { wd:Q9325 p:P169 ?s . ?s ps:P169 wd:Q92434 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lufthansa', 'p': 'CEO', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'CEO', 'o': 'Christoph Franz'}}}

 Q: What is {significant event} of {Edgar Mitchell} that is {point in time} is {1971-2-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q295873 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1971')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Edgar Mitchell', 'p': 'event', 'o': '?x0', 't': '1971'}

 Q: What is {nominated for} of {Bing Crosby} that is {statement is subject of} is {18th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q72984 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917178 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bing Crosby', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '18th Academy Awards'}}}

 Q: What is {claimed by} of {Alexander Island}, that has {total fertility rate} is {2.322} ?
 SPARQL: SELECT ?answer WHERE { wd:Q200223 wdt:P1336 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'2.322'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alexander Island', 'p': 'claimed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '2.322'}}

 Q: What is {has grammatical gender} of {languages spoken, written, or signed} of {Max Factor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q868560 wdt:P1412 ?X . ?X wdt:P5109 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical gender', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Max Factor', 'p': 'language', 'o': '$y0'}}

 Q: Tell me if the number of cases of malaria is 343527.
 SPARQL: ASK WHERE { wd:Q12156 wdt:P1603 ?obj filter(?obj = 343527) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'malaria', 'p': 'number of cases', 'o': '?x0', '?x0': '343527'}

 Q: Tell me chemical property whose name has the word tetravalence in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q764285 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tetravalence')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical property'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tetravalence'}}

 Q: Is the tuition fee of Indian Institute of Technology Kanpur equal to 100000?
 SPARQL: ASK WHERE { wd:Q782682 wdt:P5894 ?obj filter(?obj = 100000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Indian Institute of Technology Kanpur', 'p': 'tuition fee', 'o': '?x0', '?x0': '100000'}

 Q: What is typology in Altaic languages and it is the opposite of fusional language?
 SPARQL: SELECT ?answer WHERE { wd:Q37845 wdt:P4132 ?answer . ?answer wdt:P461 wd:Q318917}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Altaic languages', 'p': 'typology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'fusional language'}}

 Q: What is {series} of {Once Upon a Time in the West} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q168154 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Once Upon a Time in the West', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: What is EMLO location ID for Riga ?
 SPARQL: select distinct ?answer where { wd:Q1773 wdt:P4672 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Riga', 'p': 'EMLO location ID', 'o': '?x0'}

 Q: What is {member of} of {Erich Honecker}, that has {establishment date} is {1949-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2607 wdt:P463 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1949'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Erich Honecker', 'p': 'member of', 'o': '?x0', 't': '1949'}

 Q: what is the {start time} for {Ben Chifley} has {position held} as {Prime Minister of Australia} ?
 SPARQL: SELECT ?value WHERE { wd:Q23379 p:P39 ?s . ?s ps:P39 wd:Q319145 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ben Chifley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Australia'}}}

 Q: Give me {conjecture} that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q319141 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conjecture'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is {located in time zone} of {Stockholm} that is {valid in period} is {daylight saving time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1754 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timezone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stockholm', 'p': 'timezone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'daylight saving time'}}}

 Q: What is the human population of the administrative headquarters of French Indochina?
 SPARQL: SELECT ?answer WHERE { wd:Q185682 wdt:P36 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'French Indochina', 'p': 'administrative headquarters', 'o': '$y0'}}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: Who created the etymology of Curie temperature and has the birth date of 1859-5-15?
 SPARQL: SELECT ?answer WHERE { wd:Q191073 wdt:P138 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1859'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Curie temperature', 'p': 'etymology', 'o': '?x0', 't': '1859'}

 Q: Which research institute is owned by the University of Oxford?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q34433 . ?sbj wdt:P31 wd:Q31855 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'University of Oxford', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research institute'}}

 Q: In Venice, do you know the work location of human?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P937 wd:Q641 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Venice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {informed by} of {John Rawls}, that has {Christian name} is {Immanuel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q172544 wdt:P737 ?answer . ?answer wdt:P735 wd:Q18199901}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Rawls', 'p': 'informed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Christian name', 'o': 'Immanuel'}}

 Q: what is the {applies to part} for {North Platte River} has {coordinate location} as {41.1139} ?
 SPARQL: SELECT ?value WHERE { wd:Q1755015 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'41.1139')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North Platte River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'coordinate location', 'o': '41.1139'}}}

 Q: What is the {sovereign state} for {country for sport} of {George Weah}
 SPARQL:  select distinct ?obj where { wd:Q173139 wdt:P1532 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Weah', 'p': 'country for sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is {female form of label} of {mayor} that is {alternate names} is {mairesse} ?
 SPARQL: SELECT ?obj WHERE { wd:Q30185 p:P2521 ?s . ?s ps:P2521 ?obj . ?s pq:P4970 ?x filter(contains(?x,'mairesse')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'female form of label', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mayor', 'p': 'female form of label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'alternate name', 'o': 'mairesse'}}}

 Q: What is the AmphibiaWeb Species ID of Notophthalmus viridescens?
 SPARQL: select distinct ?answer where { wd:Q1552306 wdt:P5036 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Notophthalmus viridescens', 'p': 'AmphibiaWeb Species ID', 'o': '?x0'}

 Q: What is the {operating system} for {developer} of {Dennis M. Ritchie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P178 wd:Q45575 . ?sbj wdt:P31 wd:Q9135 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Dennis M. Ritchie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operating system'}}

 Q: what is the {applies to part} for {Saxony} has {replaces} as {Cottbus District} ?
 SPARQL: SELECT ?value WHERE { wd:Q1202 p:P1365 ?s . ?s ps:P1365 wd:Q48046 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saxony', 'p': 'replaces', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Cottbus District'}}}

 Q: What is {educated at} of {P. J. Patterson} that is {end time} is {1953-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q109130 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'P. J. Patterson', 'p': 'educated at', 'o': '?x0', 't': '1953'}

 Q: What is the current version of the Great Expectations?
 SPARQL:  select distinct ?obj where { wd:Q219552 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Great Expectations', 'p': 'version', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version'}}

 Q: What is the Internet Standard edition or translation of Internet Protocol version 6?
 SPARQL:  select distinct ?obj where { wd:Q2551624 wdt:P629 ?obj . ?obj wdt:P31 wd:Q290378 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Internet Protocol version 6', 'p': 'edition or translation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Internet Standard'}}

 Q: What weapon family starts with the letter "u"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15142889 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon family'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: what is the {end time} for {Fergie} has {record label} as {Interscope Records} ?
 SPARQL: SELECT ?value WHERE { wd:Q180004 p:P264 ?s . ?s ps:P264 wd:Q231694 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fergie', 'p': 'record label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record label', 'o': 'Interscope'}}}

 Q: Is the perimeter of the Lai da Schmorras equal to 0.168?
 SPARQL: ASK WHERE { wd:Q42308574 wdt:P2547 ?obj filter(?obj = 0.168) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lai da Schmorras', 'p': 'perimeter', 'o': '?x0', '?x0': '0.168'}

 Q: What is the antonym of midnight sun whose timespan is 20?
 SPARQL: SELECT ?answer WHERE { wd:Q774621 wdt:P461 ?answer . ?answer wdt:P2047 ?x FILTER(contains(?x,'20'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'midnight sun', 'p': 'antonym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timespan', 'o': '20'}}

 Q: In 1930, what was the capital of Türkmenabat?
 SPARQL: SELECT ?obj WHERE { wd:Q487684 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1930')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Türkmenabat', 'p': 'capital of', 'o': '?x0', 't': '1930'}

 Q: What is the ingredients in beer whose phase point is the critical point?
 SPARQL: SELECT ?answer WHERE { wd:Q44 wdt:P186 ?answer . ?answer wdt:P873 wd:Q111059}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'beer', 'p': 'ingredient', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'phase point', 'o': 'critical point'}}

 Q: What is {honours} of {discoverer or inventor of} of {general relativity} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11452 wdt:P61 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'honours', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'general relativity', 'p': 'discoverer or inventor', 'o': '$y0'}}

 Q: Tell me the performing arts genre that contains the word videotanz in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q45971958 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'videotanz')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'performing arts genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'videotanz'}}

 Q: Which character from Star Wars is the husband of Princess Leia?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P26 wd:Q51797 . ?sbj wdt:P31 wd:Q33125444 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'husband', 'o': 'Princess Leia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character from Star Wars'}}

 Q: What is {oblateness} of {orbits} {Amalthea} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3257 wdt:P397 ?X . ?X wdt:P1102 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'oblateness', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amalthea', 'p': 'orbits', 'o': '$y0'}}

 Q: What is the Snooker Database player ID of Stephen Hendry?
 SPARQL: select distinct ?answer where { wd:Q295201 wdt:P4538 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stephen Hendry', 'p': 'Snooker Database player ID', 'o': '?x0'}

 Q: Is Gini coefficient of 47.7 native to American English?
 SPARQL: SELECT ?answer WHERE { wd:Q7976 wdt:P2341 ?answer . ?answer wdt:P1125 ?x FILTER(contains(?x,'47.7'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'American English', 'p': 'native to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Gini coefficient', 'o': '47.7'}}

 Q: What is the {human} for {composer} of {La traviata}
 SPARQL:  select distinct ?obj where { wd:Q186162 wdt:P86 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'La traviata', 'p': 'composer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What are the coordinates of the headquarters of Zibo?
 SPARQL: select distinct ?answer where { ?answer wdt:P159 wd:Q198370}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters', 'o': 'Zibo'}

 Q: What is {ideology} of {political party} of {Ryō Shuhama} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7385266 wdt:P102 ?X . ?X wdt:P1142 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ideology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ryō Shuhama', 'p': 'party', 'o': '$y0'}}

 Q: who  is the sports venue for operator of Indianapolis?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P137 wd:Q6346 . ?sbj wdt:P31 wd:Q1076486 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'Indianapolis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports venue'}}

 Q: What is {location} and {doctoral advisor} of {{Hans Bethe} has {academic degree} as {doctoral degree}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q155794 p:P512 ?s . ?s ps:P512 wd:Q849697 . ?s pq:P276 ?value1 . ?s pq:P184 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'doctoral degree'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'doctoral degree'}}}]

 Q: What is the {Wikimedia duplicated page} for {measured by} of {energy}
 SPARQL:  select distinct ?obj where { wd:Q11379 wdt:P1880 ?obj . ?obj wdt:P31 wd:Q17362920 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'energy', 'p': 'measured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'duplicate'}}

 Q: Which is the lowest note of Mariah Carey
 SPARQL: select distinct ?answer where { wd:Q41076 wdt:P1898 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mariah Carey', 'p': 'lowest note', 'o': '?x0'}

 Q: What is {location of death} of {Kang Sheng}, that has {sister town} is {Tokyo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q544432 wdt:P20 ?answer . ?answer wdt:P190 wd:Q1490}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kang Sheng', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister town', 'o': 'Tokyo'}}

 Q: What is {portrait of} of {famous works} of {Severin Roesen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q88498 wdt:P800 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrait of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Severin Roesen', 'p': 'work', 'o': '$y0'}}

 Q: What is {located in time zone} of {Piacenza} that is {valid in period} is {standard time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q13329 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piacenza', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'standard time'}}}

 Q: What is <month of the year> of <Venice Film Festival> ?
 SPARQL: select distinct ?answer where { wd:Q49024 wdt:P2922 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Venice Film Festival', 'p': 'month of the year', 'o': '?x0'}

 Q: What is the {computer network protocol} for {depends on software} of {Hypertext Transfer Protocol}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1547 wd:Q8777 . ?sbj wdt:P31 wd:Q15836568 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depends on software', 'o': 'Hypertext Transfer Protocol', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer network protocol'}}

 Q: What unfinished/abandoned film project does screenwriter Mike Myers have?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P58 wd:Q185724 . ?sbj wdt:P31 wd:Q18011171 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'screenwriter', 'o': 'Mike Myers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abandoned film project'}}

 Q: "What is {etymology} of {Riemann sum}, which has {studied at} is {Humboldt University of Berlin} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1156903 wdt:P138 ?answer . ?answer wdt:P69 wd:Q152087}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Riemann sum', 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied at', 'o': 'Humboldt University of Berlin'}}

 Q: What is next to the Gaza Strip, that has a total fertility rate of 2.9%?
 SPARQL: SELECT ?answer WHERE { wd:Q39760 wdt:P47 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'2.9'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gaza Strip', 'p': 'next to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '2.9'}}

 Q: what is the {series ordinal} for {Jennifer Lopez} has {given name} as {Lynn} ?
 SPARQL: SELECT ?value WHERE { wd:Q40715 p:P735 ?s . ?s ps:P735 wd:Q3841018 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jennifer Lopez', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'name', 'o': 'Lynn'}}}

 Q: what are the essential medicine which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q35456 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: who is member of sports team of Franco Baresi that has number of matches played is 531.0 ?
 SPARQL: SELECT ?obj WHERE { wd:Q189984 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'531.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of sports team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franco Baresi', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '531.0'}}}

 Q: When was Robert Koch nominated for the Nobel Prize in Physiology or Medicine
 SPARQL: SELECT ?value WHERE { wd:Q37193 p:P1411 ?s . ?s ps:P1411 wd:Q80061 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Robert Koch', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physiology or Medicine'}, 't': '?x0'}

 Q: Give me {ideology} that {named by} {Donald Watson} and which that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7257 . ?sbj wdt:P3938 wd:Q178402 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ideology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'named by', 'o': 'Donald Watson'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what is the {end time} for {Dag Hammarskjöld} has {position held} as {United Nations Secretary-General} ?
 SPARQL: SELECT ?value WHERE { wd:Q1267 p:P39 ?s . ?s ps:P39 wd:Q81066 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dag Hammarskjöld', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United Nations Secretary-General'}}}

 Q: What was "The Walking Dead" nominated for on 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q232737 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Walking Dead', 'p': 'nominated for', 'o': '?x0', 't': '2012'}

 Q: Did {Shah_Rukh_Khan} {field of work} {Koyaanisqatsi}?
 SPARQL: ASK WHERE { wd:Q9535 wdt:P101 wd:Q1127828 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Shah Rukh Khan', 'p': 'field of work', 'o': '?x0', '?x0': 'Koyaanisqatsi'}]

 Q: what is game mode starts with v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1971694 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'game mode'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Give me {demigod of Greek mythology} that {wears} {hide} and which contains the word {heracles} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23015925 . ?sbj wdt:P3828 wd:Q3291230 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'heracles')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'demigod of Greek mythology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wears', 'o': 'hide'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'heracles'}}

 Q: What is {followed by} and {follows} of {{Berengar I of Italy} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: Who is the toponym of thorium, and has a parent named Odin?
 SPARQL: SELECT ?answer WHERE { wd:Q1115 wdt:P138 ?answer . ?answer wdt:P22 wd:Q43610}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'thorium', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent', 'o': 'Odin'}}

 Q: If the female population of Sagamihara is 360244.0, what is the total population?
 SPARQL: SELECT ?obj WHERE { wd:Q209779 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P1539 ?x filter(contains(?x,'360244.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sagamihara', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'female population', 'o': '360244.0'}}}

 Q: what is the {end time} for {Cordell Hull} has {position held} as {United States representative} ?
 SPARQL: SELECT ?value WHERE { wd:Q202979 p:P39 ?s . ?s ps:P39 wd:Q13218630 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cordell Hull', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States representative'}}}

 Q: Is the minimum spend bonus for the Chase Sapphire Reserve equal to 40000.0?
 SPARQL: ASK WHERE { wd:Q38074863 wdt:P4447 ?obj filter(?obj = 40000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Chase Sapphire Reserve', 'p': 'minimum spend bonus', 'o': '?x0', '?x0': '40000.0'}

 Q: For which American football team is Bill Belichick playing
 SPARQL:  select distinct ?obj where { wd:Q720027 wdt:P54 ?obj . ?obj wdt:P31 wd:Q17156793 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bill Belichick', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'American football team'}}

 Q: What is population of Ostrava that is point in time is 2017-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q8385 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ostrava', 'p': 'population', 'o': '?x0', 't': '2017'}

 Q: Is Jane Fonda's father Henry Fonda?
 SPARQL: ASK WHERE { wd:Q41142 wdt:P22 wd:Q19155 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jane Fonda', 'p': 'father', 'o': '?x0', '?x0': 'Henry Fonda'}]

 Q: What is {member of} of {university attended} of {Douglas Southall Freeman} ?
 SPARQL: SELECT ?answer WHERE { wd:Q451929 wdt:P69 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Douglas Southall Freeman', 'p': 'university attended', 'o': '$y0'}}

 Q: What is the immediate outcome of a door with a vernacular name of Mirov?
 SPARQL: SELECT ?answer WHERE { wd:Q36794 wdt:P1478 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Mirov'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'door', 'p': 'immediate outcome of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'mirov'}}

 Q: What is {end time} and {start time} of {{Gore Vidal} has {partner} as {Howard Austen}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q167821 p:P451 ?s . ?s ps:P451 wd:Q17309157 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gore Vidal', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Howard Austen'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gore Vidal', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Howard Austen'}}}]

 Q: What is the current translated version of Hamlet
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P629 wd:Q41567 . ?sbj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'version of', 'o': 'Hamlet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version'}}

 Q: What is the {SI derived unit} for {measured by} of {frequency}
 SPARQL:  select distinct ?obj where { wd:Q11652 wdt:P1880 ?obj . ?obj wdt:P31 wd:Q208469 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'frequency', 'p': 'measured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'SI derived unit'}}

 Q: Is the embodied energy of iron 30.0?
 SPARQL: ASK WHERE { wd:Q677 wdt:P6075 ?obj filter(?obj = 30.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'iron', 'p': 'embodied energy', 'o': '?x0', '?x0': '30.0'}

 Q: What is the {owner of} and the {office held by head of the organisation} of {UNESCO} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q7809 wdt:P1830 ?ans_1 . wd:Q7809 wdt:P2388 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'UNESCO', 'p': 'owns', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'UNESCO', 'p': 'office held by head of the organisation', 'o': '?x1'}]

 Q: What is {topic of} of {history of chess}, that has {players max} is {3.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q471257 wdt:P1269 ?answer . ?answer wdt:P1873 ?x FILTER(contains(?x,'3.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of chess', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'players max', 'o': '3.0'}}

 Q: What is ploidy for  human genome ?
 SPARQL: select distinct ?answer where { wd:Q720988 wdt:P1349 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'human genome', 'p': 'ploidy', 'o': '?x0'}

 Q: When did country for contains administrative territorial entity of Tripura?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q1363 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Tripura', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Tell me physical law whose name has the word superposition in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q214070 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'superposition')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical law'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'superposition'}}

 Q: What is the NCBI Taxonomy ID of the Tsetse fly?
 SPARQL: select distinct ?answer where { wd:Q205256 wdt:P685 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tsetse fly', 'p': 'NCBI', 'o': '?x0'}

 Q: What is CLARA-ID for Audrey Munson?
 SPARQL: select distinct ?answer where { wd:Q152776 wdt:P1615 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Audrey Munson', 'p': 'CLARA-ID', 'o': '?x0'}

 Q: What is subitem of history of the English language, that has cases is nominative case?
 SPARQL: SELECT ?answer WHERE { wd:Q784975 wdt:P1269 ?answer . ?answer wdt:P2989 wd:Q131105}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of the English language', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has case', 'o': 'nominative case'}}

 Q: Which is from the fictional universe of Spock?
 SPARQL: select distinct ?answer where { wd:Q16341 wdt:P1080 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Spock', 'p': 'universe', 'o': '?x0'}

 Q: What is {causes} of {mica}, that has {first aid response} is {move to fresh air} ?
 SPARQL: SELECT ?answer WHERE { wd:Q114675 wdt:P1542 ?answer . ?answer wdt:P2239 wd:Q21010971}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'mica', 'p': 'causes', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first aid response', 'o': 'move to fresh air'}}

 Q: What is the {sport in a geographic region} with the {MIN(number of players in region)} whose {sport} is {netball}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29791211 . ?ent wdt:P4909 ?obj . ?ent wdt:P641 wd:Q231200} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of players in region', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport in a geographic region', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'netball'}}}

 Q: What is {elected in} and {end cause} of {{Neville Chamberlain} has {position held} as {Member of the 31st Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q10664 p:P39 ?s . ?s ps:P39 wd:Q41582582 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neville Chamberlain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 31st Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neville Chamberlain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 31st Parliament of the United Kingdom'}}}]

 Q: Tell me private not-for-profit educational institution whose name has the word university in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23002054 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private not-for-profit educational institution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'university'}}

 Q: Tell me least squares method  whose name has the word least in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q74304 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'least')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'least squares method'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'least'}}

 Q: Which is the country of Iloilo City?
 SPARQL: select distinct ?answer where { wd:Q459787 wdt:P17 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iloilo City', 'p': 'country', 'o': '?x0'}

 Q: Who is member of Marguerite Yourcenar since 1980-3-6?
 SPARQL: SELECT ?obj WHERE { wd:Q163118 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marguerite Yourcenar', 'p': 'member of', 'o': '?x0', 't': '1980'}

 Q: Does the number of records for  the Boijmans artist ID equal 4681?
 SPARQL: ASK WHERE { wd:P3888 wdt:P4876 ?obj filter(?obj = 4681) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Boijmans artist ID', 'p': 'number of records', 'o': '?x0', '?x0': '4681'}

 Q: What is {prize awarded} of {Carcassonne}, that has {victor} is {Elfenland} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17262 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q1328502}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carcassonne', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'victor', 'o': 'Elfenland'}}

 Q: What is {academic degree} and {academic major} of {{Chanda Kochhar} has {educated at} as {Jamnalal Bajaj Institute of Management Studies}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q539281 p:P69 ?s . ?s ps:P69 wd:Q6148070 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chanda Kochhar', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Jamnalal Bajaj Institute of Management Studies'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chanda Kochhar', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Jamnalal Bajaj Institute of Management Studies'}}}]

 Q: Tell me about award received of Animal Farm and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1396889 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Animal Farm', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Animal Farm', 'p': 'award received', 'o': '$y0'}}]

 Q: What is the service ribbon image for the Medal of Honor?
 SPARQL: select distinct ?answer where { wd:Q203535 wdt:P2425 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Medal of Honor', 'p': 'service ribbon image', 'o': '?x0'}

 Q: what is the {start time} for {John of the Cross} has {religious name} as {Juan de la Cruz} ?
 SPARQL: SELECT ?value WHERE { wd:Q190388 p:P1635 ?s . ?s ps:P1635 ?x filter(contains(?x,'Juan de la Cruz')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John of the Cross', 'p': 'religious name', 'o': '$y0'}}

 Q: What is {twinned administrative body} of {Charleroi} that is {start time} is {1958-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q81046 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1958')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charleroi', 'p': 'twinned administrative body', 'o': '?x0', 't': '1958'}

 Q: What is {sister} of {daddy} of {Adad} ?
 SPARQL: SELECT ?answer WHERE { wd:Q346547 wdt:P22 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adad', 'p': 'dad', 'o': '$y0'}}

 Q: What was the population of Gharbia Governorate on 11/19/1996?
 SPARQL: SELECT ?obj WHERE { wd:Q30835 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gharbia Governorate', 'p': 'population', 'o': '?x0', 't': '1996'}

 Q: What is the natural language for the Arabic alphabet?
 SPARQL:  select distinct ?obj where { wd:Q8196 wdt:P407 ?obj . ?obj wdt:P31 wd:Q33742 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arabic alphabet', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural language'}}

 Q: what is the {start time} for {Jonny Wilkinson} has {member of sports team} as {RC Toulonnais} ?
 SPARQL: SELECT ?value WHERE { wd:Q318920 p:P54 ?s . ?s ps:P54 wd:Q1857064 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jonny Wilkinson', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'RC Toulonnais'}}}

 Q: What is the {human} for {work location} of {Hamburg}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P937 wd:Q1055 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Hamburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {elected in} and {end cause} of {{Enoch Powell} has {position held} as {Member of the 48th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q333028 p:P39 ?s . ?s ps:P39 wd:Q41582619 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Enoch Powell', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 48th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Enoch Powell', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 48th Parliament of the United Kingdom'}}}]

 Q: What is {place of birth} of {Sylvester II} that is {country} is {Kingdom of France} ?
 SPARQL: SELECT ?obj WHERE { wd:Q172383 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q70972 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birth place', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sylvester II', 'p': 'birth place', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Kingdom of France'}}}

 Q: Give me {flammable gas} that {safety classification and labelling} {NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response} and which contains the word {vinyl} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10913792 . ?sbj wdt:P4952 wd:Q51139288 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vinyl')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable gas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vinyl'}}

 Q: What is the supervisor of the painter of quantum mechanics?
 SPARQL: SELECT ?answer WHERE { wd:Q944 wdt:P170 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'supervisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'quantum mechanics', 'p': 'painter', 'o': '$y0'}}

 Q: What is {position held} of {George Reid} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q23352 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Reid', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Reid', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {founders} of {distributed by} of {Ain't Nobody Got Time for That} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16826312 wdt:P750 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founders', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Ain't Nobody Got Time for That", 'p': 'distributed by', 'o': '$y0'}}

 Q: Taungoo Dynasty covers what area?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q519718 wdt:P2046 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Taungoo Dynasty', 'p': 'area', 'o': '?x0'}

 Q: What group of people died in Tenochtitlan?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P20 wd:Q13695 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Tenochtitlan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: What is the {partner} and the {spouse} of {Neil_Young} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q633 wdt:P451 ?ans_1 . wd:Q633 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Neil Young', 'p': 'partner', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Neil Young', 'p': 'spouse', 'o': '?x1'}]

 Q: Which is AllMovie movie ID for Amélie?
 SPARQL: select distinct ?answer where { wd:Q484048 wdt:P1562 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amélie', 'p': 'AllMovie movie ID', 'o': '?x0'}

 Q: Is 15 service life of the Intelsat 15?
 SPARQL: ASK WHERE { wd:Q195783 wdt:P5069 ?obj filter(?obj = 15) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Intelsat 15', 'p': 'service life', 'o': '?x0', '?x0': '15'}

 Q: What is {prize money} and {together with} of {{William Henry Bragg} has {award received} as {Nobel Prize in Physics}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q133747 p:P166 ?s . ?s ps:P166 wd:Q38104 . ?s pq:P2121 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Henry Bragg', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Nobel Prize in Physics'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'together with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Henry Bragg', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Nobel Prize in Physics'}}}]

 Q: How many {commanded by} are for {Warsaw Pact} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q41644 wdt:P4791 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Warsaw Pact', 'p': 'commanded by', 'o': '?x0'}

 Q: What is the electrical plug type that is used in Nicaragua?
 SPARQL: select distinct ?answer where { wd:Q811 wdt:P2853 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nicaragua', 'p': 'electrical plug type', 'o': '?x0'}

 Q: what is the {point in time} for {Fahrenheit 451} has {award received} as {Prometheus Award - Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q202009 p:P166 ?s . ?s ps:P166 wd:Q19360203 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Fahrenheit 451', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Prometheus Award - Hall of Fame'}, 't': '?x0'}

 Q: Who gave the{located in} of {participant of event} of {Annemarie Moser-Pröll} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9586 wdt:P1344 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Annemarie Moser-Pröll', 'p': 'participant of event', 'o': '$y0'}}

 Q: What is {horse} of {characters} of {Madame Sans-Gêne (play)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3136222 wdt:P674 ?X . ?X wdt:P3091 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'horse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Madame Sans-Gêne (play)', 'p': 'characters', 'o': '$y0'}}

 Q: What is the {sovereign state} for {applies to jurisdiction} of {U.S. Declaration of Independence}
 SPARQL:  select distinct ?obj where { wd:Q127912 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Declaration of Independence', 'p': 'applies to jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the {Casada Nova} for {residence} of {Venice}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P551 wd:Q641 . ?sbj wdt:P31 wd:Q58439237 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'residence', 'o': 'Venice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Casada Nova'}}

 Q: Is it true that the total expenditure of the Central Catholic High School is less than 4272234.24?
 SPARQL: ASK WHERE { wd:Q5060518 wdt:P2402 ?obj filter(?obj < 4272234.24) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Central Catholic High School', 'p': 'total expenditure', 'o': '?x0', '?x0': '4272234.24'}

 Q: Name the twinned administrative body of Salt Lake City when it was started in 1989?
 SPARQL: SELECT ?obj WHERE { wd:Q23337 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Salt Lake City', 'p': 'twinned administrative body', 'o': '?x0', 't': '1989'}

 Q: what is the {replaced by} for {Park Chung-hee} has {position held} as {president of South Korea} ?
 SPARQL: SELECT ?value WHERE { wd:Q14356 p:P39 ?s . ?s ps:P39 wd:Q6296418 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Chung-hee', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'president of South Korea'}}}

 Q: How many anatomical locations are by the thymus?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P927 wd:Q163987 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'thymus'}

 Q: who coach of player of Simone Biles ?
 SPARQL: SELECT ?answer WHERE { wd:Q7520267 wdt:P54 ?X . ?X wdt:P286 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coach', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Simone Biles', 'p': 'player of', 'o': '$y0'}}

 Q: Is it true that the thermal design power of AMD Ryzen Threadripper 1920X is less than 216?
 SPARQL: ASK WHERE { wd:Q56062735 wdt:P2229 ?obj filter(?obj < 216.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'AMD Ryzen Threadripper 1920X', 'p': 'thermal design power', 'o': '?x0', '?x0': '216.0'}

 Q: what is the {replaced by} for {Alfred Deakin} has {position held} as {Member of the Victorian Legislative Assembly} ?
 SPARQL: SELECT ?value WHERE { wd:Q313805 p:P39 ?s . ?s ps:P39 wd:Q18534408 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Deakin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Victorian Legislative Assembly'}}}

 Q: What is the name of the sovereign state located in Benghazi?
 SPARQL:  select distinct ?obj where { wd:Q40816 wdt:P131 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Benghazi', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who are the founders of Benelux, which has an inflation rate of consumer price index of 1.4?
 SPARQL: SELECT ?answer WHERE { wd:Q13116 wdt:P112 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'1.4'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Benelux', 'p': 'founders', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '1.4'}}

 Q: Which is the corporation for the products produced by Coca-Cola?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q2813 . ?sbj wdt:P31 wd:Q167037 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product', 'o': 'Coca-Cola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'corporation'}}

 Q: What is {characters} of {The Name of the Rose}, that has {musician} is {Christian Slater} ?
 SPARQL: SELECT ?answer WHERE { wd:Q172850 wdt:P674 ?answer . ?answer wdt:P175 wd:Q204590}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Name of the Rose', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'musician', 'o': 'Christian Slater'}}

 Q: What is the {human} for {country of citizenship} of {German Democratic Republic}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P27 wd:Q16957 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'German Democratic Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {end time} and {start time} of {{Louis VII of France} has {position held} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q134259 p:P39 ?s . ?s ps:P39 wd:Q22923081 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VII of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VII of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'king of Franks'}}}]

 Q: what is the statement for subject of Kuwait which has diplomatic relation as Mexico?
 SPARQL: SELECT ?value WHERE { wd:Q817 p:P530 ?s . ?s ps:P530 wd:Q96 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kuwait', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'diplomatic relation', 'o': 'Mexico'}}}

 Q: Which is the language of the writing system of the Phoenician alphabet?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q26752 . ?sbj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'Phoenician', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Which is the museum for the parent organization of the Smithsonian Institution?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q131626 . ?sbj wdt:P31 wd:Q33506 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Smithsonian Institution', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'museum'}}

 Q: What is the refractive index for water?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q283 wdt:P1109 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'water', 'p': 'refractive index', 'o': '?x0'}

 Q: Tell me metabolite whose name has the word violaxanthin in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q407595 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'violaxanthin')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metabolite'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'violaxanthin'}}

 Q: "Where is {administrative centre} of {Holy Roman Empire}, which has {populated places within} is {Dolní Černošice} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q12548 wdt:P36 ?answer . ?answer wdt:P1383 wd:Q26807279}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Holy Roman Empire', 'p': 'administrative centre', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'populated places within', 'o': 'Dolní Černošice'}}

 Q: Where is {land} {adjacent to} {Villanova University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1466001 wdt:P17 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'adjacent to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Villanova University', 'p': 'land', 'o': '$y0'}}

 Q: Which is the married name for Angel Merkel?
 SPARQL: select distinct ?answer where { wd:Q567 wdt:P2562 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Merkel', 'p': 'married name', 'o': '?x0'}

 Q: What is {end time} and {start time} of {{William Henry Bragg} has {employer} as {University of Leeds}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q133747 p:P108 ?s . ?s ps:P108 wd:Q503424 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Henry Bragg', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'University of Leeds'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Henry Bragg', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'University of Leeds'}}}]

 Q: What is the {human} for {killed by} of {Commodus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P157 wd:Q1434 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'killed by', 'o': 'Commodus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is parent organization of ARD ?
 SPARQL: select distinct ?answer where { ?answer wdt:P749 wd:Q49653}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'ARD'}

 Q: Are Juliet and Friar Laurence characters in Romeo and Juliet?
 SPARQL: ASK WHERE { wd:Q83186 wdt:P674 wd:Q1092632 . wd:Q83186 wdt:P674 wd:Q5503354 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Romeo and Juliet', 'p': 'characters', 'o': '?x0', '?x0': 'Juliet'}, {'h': 'IS', 'v': '?x1', 's': 'Romeo and Juliet', 'p': 'characters', 'o': '?x1', '?x1': 'Friar Laurence'}]

 Q: Did the cost of damage from Hurricane Ike equal 38,000,000,000?
 SPARQL: ASK WHERE { wd:Q392603 wdt:P2630 ?obj filter(?obj = 38000000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hurricane Ike', 'p': 'cost of damage', 'o': '?x0', '?x0': '38000000000'}

 Q: Which outer planet has the most flattening?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q30014 . ?ent wdt:P1102 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'flattening', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'outer planet'}}

 Q: Which {record label} and the {genre} is of {Radiohead} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q44190 wdt:P264 ?ans_1 . wd:Q44190 wdt:P136 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Radiohead', 'p': 'record label', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Radiohead', 'p': 'genre', 'o': '?x1'}]

 Q: What was Dmitry Merezhkovsky nominated for on 1-1-1937?
 SPARQL: SELECT ?obj WHERE { wd:Q326459 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1937')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dmitry Merezhkovsky', 'p': 'nominated for', 'o': '?x0', 't': '1937'}

 Q: What is <instruction set> of <x86> ?
 SPARQL: select distinct ?answer where { wd:Q182933 wdt:P1068 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'x86', 'p': 'instruction set', 'o': '?x0'}

 Q: What is the island nation with the lowest marriageable age whose member of is United Nations Educational, Scientific and Cultural Organization?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q112099 . ?ent wdt:P3000 ?obj . ?ent wdt:P463 wd:Q7809} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'marriageable age', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'United Nations Educational, Scientific and Cultural Organization'}}}

 Q: What is the {sovereign state} for {country} of {pound sterling}
 SPARQL:  select distinct ?obj where { wd:Q25224 wdt:P17 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pound sterling', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what are the cold war which start with the letter g
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4176199 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cold war'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: What is {characters} of {Married... with Children} that is {performer} is {Ed O'Neill} ?
 SPARQL: SELECT ?obj WHERE { wd:Q208647 p:P674 ?s . ?s ps:P674 ?obj . ?s pq:P175 wd:Q16758 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Married... with Children', 'p': 'characters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'performer', 'o': "Ed O'Neill"}}}

 Q: Give me {square root} that contains the word {root} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134237 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'root')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'square root'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'root'}}

 Q: What is {spouse} of {Charlie Parker} that is {end time} is {1955-3-12} ?
 SPARQL: SELECT ?obj WHERE { wd:Q103767 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1955')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charlie Parker', 'p': 'spouse', 'o': '?x0', 't': '1955'}

 Q: Which is the organization that has it's headquarters located in Cleveland?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q37320 . ?sbj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters', 'o': 'Cleveland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: What is the {political murder} for {significant event} of {Sirhan Sirhan}
 SPARQL:  select distinct ?obj where { wd:Q297112 wdt:P793 ?obj . ?obj wdt:P31 wd:Q1139665 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sirhan Sirhan', 'p': 'significant event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political murder'}}

 Q: what is the {point in time} for {Jacqueline Wilson} has {award received} as {Guardian Children's Fiction Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q240647 p:P166 ?s . ?s ps:P166 wd:Q971363 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jacqueline Wilson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': "Guardian Children's Fiction Prize"}, 't': '?x0'}

 Q: What is {member of sports team} of {Kareem Abdul-Jabbar} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q179051 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareem Abdul-Jabbar', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareem Abdul-Jabbar', 'p': 'team', 'o': '$y0'}}]

 Q: Did {Berlin_Wall} {country} {Germany}?
 SPARQL: ASK WHERE { wd:Q5086 wdt:P17 wd:Q183 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Berlin Wall', 'p': 'country', 'o': '?x0', '?x0': 'Germany'}]

 Q: What is <open days> of <British Museum> ?
 SPARQL: select distinct ?answer where { wd:Q6373 wdt:P3025 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'British Museum', 'p': 'open days', 'o': '?x0'}

 Q: What is {professorship} of {Isaac Newton} that is {start time} is {1669-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q935 p:P803 ?s . ?s ps:P803 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1669')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isaac Newton', 'p': 'professorship', 'o': '?x0', 't': '1669'}

 Q: tell me comic genre whose name has the word novel in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20087698 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'novel')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comic genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'novel'}}

 Q: What region of Salerno divides into Teggiano?
 SPARQL: SELECT ?answer WHERE { wd:Q1083 wdt:P131 ?answer . ?answer wdt:P150 wd:Q81728}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Salerno', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Teggiano'}}

 Q: Which chemical element of subclass period 5 has the highest density?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11344 . ?ent wdt:P2054 ?obj . ?ent wdt:P279 wd:Q244982 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'density', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical element', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'period 5'}}}

 Q: What is the correct family name for the family name of Genghis Khan?
 SPARQL:  select distinct ?obj where { wd:Q720 wdt:P734 ?obj . ?obj wdt:P31 wd:Q101352 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genghis Khan', 'p': 'family name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'family name'}}

 Q: Name a principality located in the Weimar Republic
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q41304 . ?sbj wdt:P31 wd:Q208500 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Weimar Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'principality'}}

 Q: What is {played for} of {directed by} of {The Night of the Headless Horseman} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7754144 wdt:P57 ?X . ?X wdt:P54 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Night of the Headless Horseman', 'p': 'directed by', 'o': '$y0'}}

 Q: Give me {şəhər} that {category for films shot at this location} {Category:Films shot in Baku} and which contains the word {baku} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56557664 . ?sbj wdt:P1740 wd:Q10047453 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'baku')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'şəhər', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category for films shot at this location', 'o': 'Category:Films shot in Baku'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'baku'}}

 Q: Which  is torch lit by of Li Ning ?
 SPARQL: select distinct ?answer where { ?answer wdt:P545 wd:Q314032}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'torch lit by', 'o': 'Li Ning'}

 Q: What is {economic branch} of {licensor} of {macOS} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14116 wdt:P3931 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'branch', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'macOS', 'p': 'licensor', 'o': '$y0'}}

 Q: What is {work location} of {Konrad Zacharias Lorenz} that is {start time} is {1940-8-31} ?
 SPARQL: SELECT ?obj WHERE { wd:Q78496 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1940')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Konrad Zacharias Lorenz', 'p': 'work location', 'o': '?x0', 't': '1940'}

 Q: what is the {instance of} for {Cesare Borgia} has {date of birth} as {1475-0-0} ?
 SPARQL: SELECT ?value WHERE { wd:Q187998 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1475')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cesare Borgia', 'p': 'date of birth', 'o': '$y0'}}

 Q: what is the {language of work or name} for {sugar} has {pronunciation audio} as {Ru-сахар.ogg} ?
 SPARQL: SELECT ?value WHERE { wd:Q11002 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'Ru-сахар.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language of work or name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'sugar', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'pronunciation audio', 'o': 'ru-сахар.ogg'}}}

 Q: What award did Maureen O'Hara receive in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q229276 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Maureen O'Hara", 'p': 'award', 'o': '?x0', 't': '2014'}

 Q: What is <takes place in fictional universe> of <The Walking Dead> ?
 SPARQL: select distinct ?answer where { wd:Q232737 wdt:P1434 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Walking Dead', 'p': 'takes place in fictional universe', 'o': '?x0'}

 Q: what is the {start time} for {Brazil} has {currency} as {cruzeiro} ?
 SPARQL: SELECT ?value WHERE { wd:Q155 p:P38 ?s . ?s ps:P38 wd:Q8351983 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brazil', 'p': 'currency', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'currency', 'o': 'cruzeiro'}}}

 Q: What is {preceeds} of {Watership Down}, that has {date released} is {1996-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q936801 wdt:P156 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'1996'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Watership Down', 'p': 'preceeds', 'o': '?x0', 't': '1996'}

 Q: What is {genetic association} of {attention deficit hyperactivity disorder} that is {determination method} is {TAS} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181923 p:P2293 ?s . ?s ps:P2293 ?obj . ?s pq:P459 wd:Q23190853 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'attention deficit hyperactivity disorder', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'TAS'}}}

 Q: What is {place of death} of {Anton Chekhov} that is {country} is {German Empire} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5685 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q43287 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anton Chekhov', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'German Empire'}}}

 Q: Name a video game that starts with the letter Z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7889 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is <Football Federation of Ukraine player ID> of <Andriy Shevchenko> ?
 SPARQL: select distinct ?answer where { wd:Q41244 wdt:P3662 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andriy Shevchenko', 'p': 'Football Federation of Ukraine player ID', 'o': '?x0'}

 Q: What is {nominated for} of {Orson Welles} that is {for work} is {Citizen Kane} ?
 SPARQL: SELECT ?obj WHERE { wd:Q24829 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q24815 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Orson Welles', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Citizen Kane'}}}

 Q: What is {operates} of {profession} of {Eduard Hitzberger} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1288748 wdt:P106 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eduard Hitzberger', 'p': 'profession', 'o': '$y0'}}

 Q: What is the area of provinces that border the Entre Rios Province?
 SPARQL: SELECT ?answer WHERE { wd:Q44762 wdt:P47 ?X . ?X wdt:P2046 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Entre Rios Province', 'p': 'border', 'o': '$y0'}}

 Q: What is ideology of member  party of Lars Krarup ?
 SPARQL: SELECT ?answer WHERE { wd:Q12323862 wdt:P102 ?X . ?X wdt:P1142 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ideology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lars Krarup', 'p': 'party', 'o': '$y0'}}

 Q: Which is the painting that depicts the Richard III of England?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P180 wd:Q133028 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'Richard III of England', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: What is {publication date} of {Mulholland Drive} that is {place of publication} is {Germany} ?
 SPARQL: SELECT ?obj WHERE { wd:Q272608 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P291 wd:Q183 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mulholland Drive', 'p': 'published', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of publication', 'o': 'Germany'}}}

 Q: "Which venue in Toulouse, has a total area of 190000.0?"
 SPARQL: SELECT ?answer WHERE { wd:Q7880 wdt:P276 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'190000.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Toulouse', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area', 'o': '190000.0'}}

 Q: What is {base} of {dual to} of {decagonal antiprism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2717560 wdt:P1322 ?X . ?X wdt:P3263 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'base', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'decagonal antiprism', 'p': 'dual to', 'o': '$y0'}}

 Q: What is the {human} for {doctoral advisor} of {Ted Kaczynski}
 SPARQL:  select distinct ?obj where { wd:Q222134 wdt:P184 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ted Kaczynski', 'p': 'doctoral advisor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {start time} for {Æthelred the Unready} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q183499 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Æthelred the Unready', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: what is the {replaces} for {Bhumibol Adulyadej} has {position held} as {King of Thailand} ?
 SPARQL: SELECT ?value WHERE { wd:Q855252 p:P39 ?s . ?s ps:P39 wd:Q27330121 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bhumibol Adulyadej', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of Thailand'}}}

 Q: What is {position held} of {Frederick Douglass} that is {start time} is {1881-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q215562 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1881')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frederick Douglass', 'p': 'position held', 'o': '?x0', 't': '1881'}

 Q: Who was Dino De Laurentiis' spouse when their marriage ended in 1988?
 SPARQL: SELECT ?obj WHERE { wd:Q296796 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dino De Laurentiis', 'p': 'spouse', 'o': '?x0', 't': '1988'}

 Q: What is <depends on software> of <Hypertext Transfer Protocol> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1547 wd:Q8777}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depends on software', 'o': 'Hypertext Transfer Protocol'}

 Q: What is {given name} of {Prince} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7542 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'given name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prince', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: what is the {sourcing circumstances} for {Roger Williams} has {date of birth} as {1603-0-0} ?
 SPARQL: SELECT ?value WHERE { wd:Q391591 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1603')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roger Williams', 'p': 'date of birth', 'o': '$y0'}}

 Q: What is the {human} for {website account on} of {YouTube}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P553 wd:Q866 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'website account on', 'o': 'Youtube', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Which is the GNIS ID of Bridgeport?
 SPARQL: select distinct ?answer where { wd:Q49174 wdt:P590 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bridgeport', 'p': 'GNIS ID', 'o': '?x0'}

 Q: Which is Berlin cultural heritage ID for  Pergamon Museum?
 SPARQL: select distinct ?answer where { wd:Q157298 wdt:P2424 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pergamon Museum', 'p': 'Berlin cultural heritage ID', 'o': '?x0'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Landon Donovan} has {member of sports team} as {United States men's national under-23 soccer team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 wd:Q3590572 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Landon Donovan', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': "United States men's national under-23 soccer team"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Landon Donovan', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': "United States men's national under-23 soccer team"}}}]

 Q: What is  the timezone of the civilisation of Chinese mythology ?
 SPARQL: SELECT ?answer WHERE { wd:Q210677 wdt:P2596 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timezone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chinese mythology', 'p': 'civilisation', 'o': '$y0'}}

 Q: What is {award received} of {Kurt Gödel} that is {point in time} is {1974-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41390 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kurt Gödel', 'p': 'award', 'o': '?x0', 't': '1974'}

 Q: What is {spouse} of {Alexander Hamilton} and {end cause}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q178903 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1534 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Hamilton', 'p': 'wife', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'wife', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Hamilton', 'p': 'wife', 'o': '$y0'}}]

 Q: What is the opposite genre for fiction ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P461 wd:Q8253 . ?sbj wdt:P31 wd:Q483394 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'opposite', 'o': 'fiction', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'genre'}}

 Q: What is {position held} of {Fernando Álvarez de Toledo, 3rd Duke of Alba} that is {start time} is {1581-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80847 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1581')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fernando Álvarez de Toledo, 3rd Duke of Alba', 'p': 'position held', 'o': '?x0', 't': '1581'}

 Q: What is the {taxon} for {parent taxon} of {goldfish}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P171 wd:Q123141 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent taxon', 'o': 'goldfish', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: Which human Go player, has the minimum EGF rating?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P4105 ?obj . ?ent wdt:P106 wd:Q12039558} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'EGF rating', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'occupation', 'o': 'Go player'}}}

 Q: What is the {record company} for {record label} of {David Foster}
 SPARQL:  select distinct ?obj where { wd:Q77112 wdt:P264 ?obj . ?obj wdt:P31 wd:Q2442401 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Foster', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'record company'}}

 Q: What is <Isidore ID> of <Horace Silver> ?
 SPARQL: select distinct ?answer where { wd:Q365560 wdt:P4491 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Horace Silver', 'p': 'Isidore ID', 'o': '?x0'}

 Q: How many brands does Coca-Cola have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1716 wd:Q2813 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'brand', 'o': 'Coca-Cola'}

 Q: Which is {cases} of {language used} in {Ismail Kadare} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179695 wdt:P1412 ?X . ?X wdt:P2989 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cases', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ismail Kadare', 'p': 'language used', 'o': '$y0'}}

 Q: What is {Charles Baudelaire}'s {Poets.org poet ID}?
 SPARQL: select distinct ?answer where { wd:Q501 wdt:P5343 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Baudelaire', 'p': 'Poets.org poet ID', 'o': '?x0'}

 Q: What is {nominated for} of {Good Will Hunting} that is {statement is subject of} is {70th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193835 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q536749 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Good Will Hunting', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '70th Academy Awards'}}}

 Q: What is {formation} of {accused} of {Nivelle Offensive} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2005867 wdt:P710 ?X . ?X wdt:P241 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'formation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nivelle Offensive', 'p': 'accused', 'o': '$y0'}}

 Q: What is {death location} of {Sergei Prokudin-Gorskii}, that has {has counties} is {7th arrondissement of Paris} ?
 SPARQL: SELECT ?answer WHERE { wd:Q101516 wdt:P20 ?answer . ?answer wdt:P150 wd:Q259463}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sergei Prokudin-Gorskii', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': '7th arrondissement of Paris'}}

 Q: what is the {start time} for {Paul Erdős} has {residence} as {Manchester} ?
 SPARQL: SELECT ?value WHERE { wd:Q173746 p:P551 ?s . ?s ps:P551 wd:Q18125 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Erdős', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Manchester'}}}

 Q: What was the population of the Central African Republic in 1987?
 SPARQL: SELECT ?obj WHERE { wd:Q929 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1987')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Central African Republic', 'p': 'population', 'o': '?x0', 't': '1987'}

 Q: What is the {cable-stayed bridge} with the {MAX(number of spans)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q158555 . ?ent wdt:P1314 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of spans', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cable-stayed bridge'}}

 Q: What is <location map> of <Kherson Oblast> ?
 SPARQL: select distinct ?answer where { wd:Q163271 wdt:P1943 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kherson Oblast', 'p': 'location map', 'o': '?x0'}

 Q: What are the national economy which start with the letter e
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6456916 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national economy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: give me the name of Theophile Gautier that has series ordinal is 3?
 SPARQL: SELECT ?obj WHERE { wd:Q183713 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'3')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theophile Gautier', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '3'}}}

 Q: Which award did Jaroslav Seifert receive in the year 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q102483 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jaroslav Seifert', 'p': 'award', 'o': '?x0', 't': '1984'}

 Q: What is <National Cancer Institute ID> of <melanoma> ?
 SPARQL: select distinct ?answer where { wd:Q180614 wdt:P1395 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'melanoma', 'p': 'National Cancer Institute ID', 'o': '?x0'}

 Q: What is the {agent} for {used by} of {communication}
 SPARQL:  select distinct ?obj where { wd:Q11024 wdt:P1535 ?obj . ?obj wdt:P31 wd:Q24229398 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'communication', 'p': 'used by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'agent'}}

 Q: Give me {film} that starts with {'y'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11424 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is located on linear feature of the London Underground?
 SPARQL: select distinct ?answer where { ?answer wdt:P795 wd:Q20075}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located on linear feature', 'o': 'London Underground'}

 Q: What is the {powerplant} and the {manufacturer} of {McDonnell_Douglas_F-15_Eagle} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q29251 wdt:P516 ?ans_1 . wd:Q29251 wdt:P176 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Eagle', 'p': 'powerplant', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Eagle', 'p': 'manufacturer', 'o': '?x1'}]

 Q: Is it true Facebook founded by Andrew McCollum?
 SPARQL: ASK WHERE { wd:Q355 wdt:P112 wd:Q4757939 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Facebook', 'p': 'founded by', 'o': '?x0', '?x0': 'Andrew McCollum'}]

 Q: What is the {place of burial} and the {place of death} of {Stonewall_Jackson} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q216124 wdt:P119 ?ans_1 . wd:Q216124 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Stonewall Jackson', 'p': 'place of burial', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Stonewall Jackson', 'p': 'place of death', 'o': '?x1'}]

 Q: Who is the person that was the professional or sport partner of Paul McCartney?
 SPARQL:  select distinct ?obj where { wd:Q2599 wdt:P1327 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paul McCartney', 'p': 'sport partner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Were Grendel's mother and Hygelac characters in Beowulf?
 SPARQL: ASK WHERE { wd:Q48328 wdt:P674 wd:Q2361245 . wd:Q48328 wdt:P674 wd:Q889694 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Beowulf', 'p': 'characters', 'o': '?x0', '?x0': "Grendel's mother"}, {'h': 'IS', 'v': '?x1', 's': 'Beowulf', 'p': 'characters', 'o': '?x1', '?x1': 'Hygelac'}]

 Q: What is the {cenotaph} for {occupant} of {Jean-Jacques Rousseau}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P466 wd:Q6527 . ?sbj wdt:P31 wd:Q321053 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'occupant', 'o': 'Jean-Jacques Rousseau', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cenotaph'}}

 Q: What is the INDUCKS story ID of Toy Story?
 SPARQL: select distinct ?answer where { wd:Q171048 wdt:P4483 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Toy Story', 'p': 'INDUCKS story ID', 'o': '?x0'}

 Q: What is {significant event} of {Gisele Bündchen} that is {point in time} is {2012-12-5} ?
 SPARQL: SELECT ?obj WHERE { wd:Q152208 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gisele Bundchen', 'p': 'significant event', 'o': '?x0', 't': '2012'}

 Q: What are the  legal status of medicine   whose name has the word UK IN IT
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q26715005 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'uk')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legal status of medicine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'uk'}}

 Q: What is {name in native language} of {Theodosius I} that is {start time} is {347-1-11} ?
 SPARQL: SELECT ?obj WHERE { wd:Q46696 p:P1559 ?s . ?s ps:P1559 ?obj . ?s pq:P580 ?x filter(contains(?x,'347-1-11')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name in native language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodosius I', 'p': 'name in native language', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '347-1-11'}}}

 Q: tell me about language family starts with the letter q
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25295 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language family'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'q'}}

 Q: What is the {ecclesiastical title} for {office held by head of the organisation} of {Coptic Orthodox Church of Alexandria}
 SPARQL:  select distinct ?obj where { wd:Q198998 wdt:P2388 ?obj . ?obj wdt:P31 wd:Q11773926 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coptic Orthodox Church of Alexandria', 'p': 'office held by head of the organisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ecclesiastical title'}}

 Q: What is {employment} of {Michelangelo}, that has {shortened name} is {inż.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5592 wdt:P106 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'inż.'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michelangelo', 'p': 'job', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'inż.'}}

 Q: What is {administrative territorial entity} of {works at} of {Georg Rudinger} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1505786 wdt:P108 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georg Rudinger', 'p': 'works at', 'o': '$y0'}}

 Q: Did {Apple} {color} {red} and {blue} ?
 SPARQL: ASK WHERE { wd:Q89 wdt:P462 wd:Q3142 . wd:Q89 wdt:P462 wd:Q1088 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'apple', 'p': 'color', 'o': '?x0', '?x0': 'red'}, {'h': 'IS', 'v': '?x1', 's': 'apple', 'p': 'color', 'o': '?x1', '?x1': 'blue'}]

 Q: Which is {detection method} for {child body} of {Ross 128} ?
 SPARQL: SELECT ?answer WHERE { wd:Q926610 wdt:P398 ?X . ?X wdt:P1046 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'detection method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ross 128', 'p': 'child body', 'o': '$y0'}}

 Q: What is {location of birth} of {Muhammad al-Idrisi}, that has {is in the settlement of} is {Spain} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173441 wdt:P19 ?answer . ?answer wdt:P131 wd:Q29}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Muhammad al-Idrisi', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Spain'}}

 Q: What is the {human} for {sport} of {biathlon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P641 wd:Q166788 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'biathlon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {chairperson} of {United States Department of State} that is {end time} is {2013-2-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q789915 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'United States Department of State', 'p': 'chairperson', 'o': '?x0', 't': '2013'}

 Q: Give me {creation myth} that contains the word {dreamtime} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q215304 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dreamtime')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'creation myth'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dreamtime'}}

 Q: What genre of music is part of the series of Bomberman II?
 SPARQL: SELECT ?answer WHERE { wd:Q2002828 wdt:P179 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bomberman II', 'p': 'part of the series', 'o': '$y0'}}

 Q: What is {co-founded by} of {order} of {Antonin Eymieu} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2857113 wdt:P611 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonin Eymieu', 'p': 'order', 'o': '$y0'}}

 Q: Which is practiced by fencing?
 SPARQL: select distinct ?answer where { wd:Q12100 wdt:P3095 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fencing', 'p': 'practiced by', 'o': '?x0'}

 Q: Give me {academic writing} that {author} {Charles Darwin} and which that starts with {'o'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4119870 . ?sbj wdt:P50 wd:Q1035 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic writing', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Charles Darwin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: What is {translation of} of {comes after} of {17th Scripps National Spelling Bee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16155303 wdt:P155 ?X . ?X wdt:P629 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'translation of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '17th Scripps National Spelling Bee', 'p': 'comes after', 'o': '$y0'}}

 Q: Did {Lemmy} used {instrument} as {harmonica}?
 SPARQL: ASK WHERE { wd:Q309926 wdt:P1303 wd:Q51290 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lemmy', 'p': 'instrument', 'o': '?x0', '?x0': 'harmonica'}]

 Q: What is {chronology of topic} of {continent} of {Western Asia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27293 wdt:P30 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chronology of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Western Asia', 'p': 'continent', 'o': '$y0'}}

 Q: Did {Sarah_Michelle_Gellar} {sport} {taekwondo}?
 SPARQL: ASK WHERE { wd:Q180665 wdt:P641 wd:Q36389 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Sarah Michelle Gellar', 'p': 'sport', 'o': '?x0', '?x0': 'taekwondo'}]

 Q: Is it true that the Hurricane Ike number of missing is less than 192?
 SPARQL: ASK WHERE { wd:Q392603 wdt:P1446 ?obj filter(?obj < 19.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Hurricane Ike', 'p': 'number of missing', 'o': '?x0', '?x0': '19.2'}

 Q: What is studied at the co-ords 50.84638889 -0.30416667, where Sit Tim Rice is the Patron of the Foundation?
 SPARQL: SELECT ?answer WHERE { wd:Q298295 wdt:P69 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'50.84638889 -0.30416667'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tim Rice', 'p': 'studied at', 'o': '?x0'}

 Q: what is the {type of kinship} for {Carl Maria von Weber} has {relative} as {Constanze Mozart} ?
 SPARQL: SELECT ?value WHERE { wd:Q154812 p:P1038 ?s . ?s ps:P1038 wd:Q84464 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Maria von Weber', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Constanze Mozart'}}}

 Q: Which financial center is a twinned administrative body of Mumbai?
 SPARQL:  select distinct ?obj where { wd:Q1156 wdt:P190 ?obj . ?obj wdt:P31 wd:Q1066984 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mumbai', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'financial center'}}

 Q: Tom Hanks played as voice actor in which short animated film?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q2263 . ?sbj wdt:P31 wd:Q17517379 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Tom Hanks', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'short animated film'}}

 Q: What is the {war} for {participant} of {Soviet Union}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q15180 . ?sbj wdt:P31 wd:Q198 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war'}}

 Q: When did Vyacheslav Molotov received the Order of Lenin award?
 SPARQL: SELECT ?value WHERE { wd:Q132899 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vyacheslav Molotov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of Lenin'}, 't': '?x0'}

 Q: What was the population of Maharashtra in the year 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q1191 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maharashtra', 'p': 'population', 'o': '?x0', 't': '2011'}

 Q: What is developed by SPICE that has working languages in English?
 SPARQL: SELECT ?answer WHERE { wd:Q174907 wdt:P178 ?answer . ?answer wdt:P2936 wd:Q1860}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'SPICE', 'p': 'developed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'working languages', 'o': 'English'}}

 Q: What is a significant event that Matthias Corvinus was apart of and  what was the location of that event?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q188634 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matthias Corvinus', 'p': 'significant event', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'significant event', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matthias Corvinus', 'p': 'significant event', 'o': '$y0'}}]

 Q: What is the territory of Australia with the highest age of consent whose public holiday is Queen's official birthday?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q14192199 . ?ent wdt:P2999 ?obj . ?ent wdt:P832 wd:Q2564633 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'age of consent', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'territory of Australia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'public holiday', 'o': "Queen's official birthday"}}}

 Q: IS THE COMPULSORY EDUCATION MAXIMUM AGE OF THE SPAIN EQUALS 16
 SPARQL: ASK WHERE { wd:Q29 wdt:P3271 ?obj filter(?obj = 16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Spain', 'p': 'compulsory education (maximum age)', 'o': '?x0', '?x0': '16'}

 Q: What is the {aircraft model} with the {MAX(takeoff roll)} whose {significant event} is {Seville A400M crash}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056995 . ?ent wdt:P2430 ?obj . ?ent wdt:P793 wd:Q19882906 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'takeoff roll', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Seville A400M crash'}}}

 Q: Where is the head office location of Miss World, whose twin city is Los Angeles?
 SPARQL: SELECT ?answer WHERE { wd:Q173402 wdt:P159 ?answer . ?answer wdt:P190 wd:Q65}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Miss World', 'p': 'head office location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Los Angeles'}}

 Q: How many {head of state} are for {Ukraine} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q212 wdt:P35 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ukraine', 'p': 'head of state', 'o': '?x0'}

 Q: Which is the fictional analog of the source of inspiration of Captain Ahab?
 SPARQL: SELECT ?answer WHERE { wd:Q2630009 wdt:P941 ?X . ?X wdt:P1074 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fictional analog of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Captain Ahab', 'p': 'source of inspiration', 'o': '$y0'}}

 Q: What is {noble title} of {Berengar I of Italy} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is Sandbox-Item of The Last Supper ?
 SPARQL: select distinct ?answer where { wd:Q128910 wdt:P369 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Last Supper', 'p': 'Sandbox-Item', 'o': '?x0'}

 Q: What is {position held} of {François Guizot} that is {electoral district} is {Calvados} ?
 SPARQL: SELECT ?obj WHERE { wd:Q157324 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 wd:Q3249 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'François Guizot', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'electoral district', 'o': 'Calvados'}}}

 Q: what is the {end time} for {Prince Harry, Duke of Sussex} has {partner} as {Chelsy Davy} ?
 SPARQL: SELECT ?value WHERE { wd:Q152316 p:P451 ?s . ?s ps:P451 wd:Q529485 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prince Harry, Duke of Sussex', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Chelsy Davy'}}}

 Q: Which is the capital for the official residence of the Parthian Empire?
 SPARQL:  select distinct ?obj where { wd:Q1986139 wdt:P263 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Parthian Empire', 'p': 'official residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: What is {publication date} and {publisher} of {{Christopher Hitchens} has {notable work} as {Hitch-22}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 wd:Q3138625 . ?s pq:P577 ?value1 . ?s pq:P123 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Hitch-22'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publisher', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Hitch-22'}}}]

 Q: What is {year written} of {historical period} of {Zeno} ?
 SPARQL: SELECT ?answer WHERE { wd:Q183452 wdt:P2348 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'year written', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zeno', 'p': 'historical period', 'o': '$y0'}}

 Q: What is the name of the capital of Estonia whose first letter is T ?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5119 . ?sbj wdt:P1376 wd:Q191 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capital of', 'o': 'Estonia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What skill contains the word "suction" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q205961 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'suction')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'skill'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'suction'}}

 Q: What is {subsidiary entities} of {Islamic Azad University}, that has {is in the department of} is {Bukan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2661844 wdt:P355 ?answer . ?answer wdt:P131 wd:Q606564}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Islamic Azad University', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is in the department of', 'o': 'Bukan'}}

 Q: What is {native label} of {Sangha} that is {Revised Romanization} is {seungga} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193944 p:P1705 ?s . ?s ps:P1705 ?obj . ?s pq:P2001 ?x filter(contains(?x,'seungga')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'native label', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sangha', 'p': 'native label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'Revised Romanization', 'o': 'seungga'}}}

 Q: What is the {has edition} and the {author} of {Pied_Piper_of_Hamelin} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q111502 wdt:P747 ?ans_1 . wd:Q111502 wdt:P50 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Pied Piper of Hamelin', 'p': 'edition', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Pied Piper of Hamelin', 'p': 'author', 'o': '?x1'}]

 Q: Who were the Amazons that were killed by Heracles?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P157 wd:Q122248 . ?sbj wdt:P31 wd:Q134154 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'killed by', 'o': 'Heracles', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Amazons'}}

 Q: What is {award received} of {Dune} that is {followed by} is {Babel-17} ?
 SPARQL: SELECT ?obj WHERE { wd:Q190192 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P156 wd:Q2722309 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dune', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'followed by', 'o': 'Babel-17'}}}

 Q: Which communications protocol contains the word zmodem in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q132364 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zmodem')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'communications protocol'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zmodem'}}

 Q: Is air pollution caused by methane and volcanic eruption?
 SPARQL: ASK WHERE { wd:Q131123 wdt:P828 wd:Q37129 . wd:Q131123 wdt:P828 wd:Q7692360 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'air pollution', 'p': 'cause', 'o': '?x0', '?x0': 'methane'}, {'h': 'IS', 'v': '?x1', 's': 'air pollution', 'p': 'cause', 'o': '?x1', '?x1': 'volcanic eruption'}]

 Q: What is the {human} for {lyrics by} of {Auld Lang Syne}
 SPARQL:  select distinct ?obj where { wd:Q211939 wdt:P676 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Auld Lang Syne', 'p': 'lyrics by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {point in time} for {Alexander Ovechkin} has {award received} as {gold medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q311374 p:P166 ?s . ?s ps:P166 wd:Q406039 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Alexander Ovechkin', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'gold medal'}, 't': '?x0'}

 Q: Mariano Rajoy is a member of what political party?
 SPARQL:  select distinct ?obj where { wd:Q10819 wdt:P102 ?obj . ?obj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mariano Rajoy', 'p': 'party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: Which extinct human group starts with the letter w?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55208590 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'extinct human group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Tell me condiment whose name has the word yondu in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2596997 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yondu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'condiment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yondu'}}

 Q: What is the {railway} for {owned by} of {Milwaukee}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q37836 . ?sbj wdt:P31 wd:Q22667 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'Milwaukee', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway'}}

 Q: what is the {number of points/goals/set scored} for {Liverpool F.C.} has {participant of} as {1950 FA Cup Final} ?
 SPARQL: SELECT ?value WHERE { wd:Q1130849 p:P1344 ?s . ?s ps:P1344 wd:Q4484491 . ?s pq:P1351 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Liverpool F.C.', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'participant of', 'o': '1950 FA Cup Final'}}}

 Q: What is {died in} of {Jacques Mesrine}, that has {county seat of} is {Neustria} ?
 SPARQL: SELECT ?answer WHERE { wd:Q520852 wdt:P20 ?answer . ?answer wdt:P1376 wd:Q106577}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacques Mesrine', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat of', 'o': 'Neustria'}}

 Q: Tell me the name of the female idol group whose name contains the word zero?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11446438 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zero')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'female idol group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zero'}}

 Q: What is {inflation rate} of {Colombia} that is {point in time} is {1995-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q739 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1995')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Colombia', 'p': 'inflation rate', 'o': '?x0', 't': '1995'}

 Q: What television program is produced by Ellen DeGeneres?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P162 wd:Q483325 . ?sbj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'produced by', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television program'}}

 Q: Tell medisputed territory whose name has the word triangle in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15239622 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'triangle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disputed territory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'triangle'}}

 Q: Which is the combination classification for Chris Froome?
 SPARQL: select distinct ?answer where { ?answer wdt:P4324 wd:Q319591}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'combination classification', 'o': 'Chris Froome'}

 Q: What is the {Wikimedia disambiguation page} for {participant} of {Diplo}
 SPARQL:  select distinct ?obj where { wd:Q533781 wdt:P710 ?obj . ?obj wdt:P31 wd:Q4167410 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Diplo', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia disambiguation page'}}

 Q: tell  me mineral species that streak color black that name has  the word tenorite in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55076514 . ?sbj wdt:P534 wd:Q23445 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tenorite')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral species', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'streak color', 'o': 'black'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tenorite'}}

 Q: How many are designed by Niklaus Wirth?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P287 wd:Q92604 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Niklaus Wirth'}

 Q: what is the {electoral district} for {Tommy Douglas} has {position held} as {member of the House of Commons of Canada} ?
 SPARQL: SELECT ?value WHERE { wd:Q359653 p:P39 ?s . ?s ps:P39 wd:Q15964890 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tommy Douglas', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the House of Commons of Canada'}}}

 Q: which painting movement that contains the word verismo in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3326867 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'verismo')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'verismo'}}

 Q: what is the {cast member} for {Boris Godunov} has {date of first performance} as {1874-1-27} ?
 SPARQL: SELECT ?value WHERE { wd:Q386846 p:P1191 ?s . ?s ps:P1191 ?x filter(contains(YEAR(?x),'1874')) . ?s pq:P161 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cast member', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boris Godunov', 'p': 'date of first performance', 'o': '$y0'}}

 Q: What is {position held} of {Spencer Perceval} that is {end time} is {1812-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q233992 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1812')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Spencer Perceval', 'p': 'position held', 'o': '?x0', 't': '1812'}

 Q: Is it true that the total fertility rate of Luxembourg is 1.55?
 SPARQL: ASK WHERE { wd:Q32 wdt:P4841 ?obj filter(?obj = 1.55) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Luxembourg', 'p': 'total fertility rate', 'o': '?x0', '?x0': '1.55'}

 Q: What is {start time} and {end time} of {{Gerard Reve} has {spouse} as {Hanny Michaelis}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q364153 p:P26 ?s . ?s ps:P26 wd:Q2090463 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerard Reve', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Hanny Michaelis'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerard Reve', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Hanny Michaelis'}}}]

 Q: What part of Somogy County came to an end in the year 1989 which was located in the administrative territorial entity?
 SPARQL: SELECT ?obj WHERE { wd:Q190522 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Somogy County', 'p': 'located in the administrative territorial entity', 'o': '?x0', 't': '1989'}

 Q: What is the {federal state} for {foundational text} of {U.S. Declaration of Independence}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P457 wd:Q127912 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'foundational text', 'o': 'Declaration of Independence', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: what is the {point in time} for {Yasser Arafat} has {award received} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q34211 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Yasser Arafat', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: What is total fertility rate  in the principal area of Libertador General Bernardo O'Higgins Region
 SPARQL: SELECT ?answer WHERE { wd:Q2133 wdt:P131 ?X . ?X wdt:P4841 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "O'Higgins Region", 'p': 'in', 'o': '$y0'}}

 Q: What is the currency used in Norman conquest of England} ?
 SPARQL: SELECT ?answer WHERE { wd:Q200485 wdt:P276 ?X . ?X wdt:P38 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'currency', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Norman conquest of England', 'p': 'location', 'o': '$y0'}}

 Q: What is Star Wars ' narrative location fictional gas giant Episode V: The Empire Strikes Back?
 SPARQL:  select distinct ?obj where { wd:Q181795 wdt:P840 ?obj . ?obj wdt:P31 wd:Q17480830 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Empire Strikes Back', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional gas giant'}}

 Q: What is pronunciation audio of plays of kayak ?
 SPARQL: SELECT ?answer WHERE { wd:Q179246 wdt:P641 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'kayak', 'p': 'play', 'o': '$y0'}}

 Q: On 1-1-1678 William Petty, 2nd Earl of Shelburne founded what party membership
 SPARQL: SELECT ?answer WHERE { wd:Q312573 wdt:P102 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1678'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Petty, 2nd Earl of Shelburne', 'p': 'party', 'o': '?x0', 't': '1678'}

 Q: Which are the YouTube Play Buttons that are conferred by YouTube?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1027 wd:Q866 . ?sbj wdt:P31 wd:Q18157145 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conferred by', 'o': 'YouTube', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'YouTube Play Buttons'}}

 Q: What is the M.49 code of Eastern Europe?
 SPARQL: select distinct ?answer where { wd:Q27468 wdt:P2082 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eastern Europe', 'p': 'M.49 code', 'o': '?x0'}

 Q: What is the {fictional vehicle} for {present in work} of {Star Wars Episode V: The Empire Strikes Back}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q181795 . ?sbj wdt:P31 wd:Q20871196 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Star Wars Episode V: The Empire Strikes Back', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional vehicle'}}

 Q: Which is the anatomical location for mumps?
 SPARQL: select distinct ?answer where { wd:Q176741 wdt:P927 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mumps', 'p': 'anatomical location', 'o': '?x0'}

 Q: How many mountains are there for the {Lester Piggott} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q377345 wdt:P3091 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Lester Piggott', 'p': 'mount', 'o': '?x0'}

 Q: Tell me bank whose name has the word unicredit in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22687 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'unicredit')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bank'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'unicredit'}}

 Q: What is {owned by} of {NTV} that is {start time} is {2001-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q574625 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'NTV', 'p': 'owned by', 'o': '?x0', 't': '2001'}

 Q: Archbasilica of St. John Lateran architectural style?
 SPARQL: select distinct ?answer where { wd:Q84090 wdt:P149 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Archbasilica of St. John Lateran', 'p': 'architectural style', 'o': '?x0'}

 Q: Did Jimmy Carter received an award in the 2008 Grammy Awards?
 SPARQL: ASK WHERE { wd:Q23685 wdt:P166 wd:Q1518357 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jimmy Carter', 'p': 'award', 'o': '?x0', '?x0': '2008 Grammy Awards'}]

 Q: How many medical conditions did Ludwig van Beethoven have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q255 wdt:P1050 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ludwig van Beethoven', 'p': 'medical condition', 'o': '?x0'}

 Q: "Which Christian name from Charles I of Hungary, is close to the name Carl?"
 SPARQL: SELECT ?answer WHERE { wd:Q213061 wdt:P735 ?answer . ?answer wdt:P460 wd:Q2529610}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles I of Hungary', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'close to', 'o': 'Carl'}}

 Q: What is {head office location} of {International Chamber of Commerce}, that has {next to} is {Issy-les-Moulineaux} ?
 SPARQL: SELECT ?answer WHERE { wd:Q848633 wdt:P159 ?answer . ?answer wdt:P47 wd:Q135265}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'International Chamber of Commerce', 'p': 'head office location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next to', 'o': 'Issy-les-Moulineaux'}}

 Q: What is the {human} for {voice actor} of {Aqua Teen Hunger Force}
 SPARQL:  select distinct ?obj where { wd:Q622946 wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aqua Teen Hunger Force', 'p': 'voice actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is describes a project that uses of Urban Dictionary ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4510 wd:Q310004}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'describes a project that uses', 'o': 'Urban Dictionary'}

 Q: What is {date of birth} and {date of death} of {{Abigail Adams} has {child} as {Charles Adams}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q5074968 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles Adams'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles Adams'}}}]

 Q: Is the natural abundance of samarium-152 equal to .321?
 SPARQL: ASK WHERE { wd:Q2288129 wdt:P2374 ?obj filter(?obj = 0.321) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'samarium-152', 'p': 'natural abundance', 'o': '?x0', '?x0': '0.321'}

 Q: Who has children with Domnall mac Ailpín, who is buried at Iona?
 SPARQL: SELECT ?answer WHERE { wd:Q312589 wdt:P40 ?answer . ?answer wdt:P119 wd:Q610}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Domnall mac Ailpín', 'p': 'child', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'buried at', 'o': 'Iona'}}

 Q: How many {anatomical location} are to/by {heart} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P927 wd:Q1072 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'heart'}

 Q: What is <PubMed ID> of <tuberculosis> ?
 SPARQL: select distinct ?answer where { wd:Q12204 wdt:P698 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'tuberculosis', 'p': 'PubMed ID', 'o': '?x0'}

 Q: Tell me the noble family who has the son of Georgina Kennard?
 SPARQL: SELECT ?answer WHERE { wd:Q5548261 wdt:P25 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'family', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georgina Kennard', 'p': 'son of', 'o': '$y0'}}

 Q: what is the {production date} for {Arthur Sullivan} has {notable work} as {The Yeomen of the Guard} ?
 SPARQL: SELECT ?value WHERE { wd:Q212692 p:P800 ?s . ?s ps:P800 wd:Q499778 . ?s pq:P2754 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'production date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Sullivan', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'The Yeomen of the Guard'}}}

 Q: Did {Goldie_Hawn} {ethnic group} {Hispanic and Latino Americans}?
 SPARQL: ASK WHERE { wd:Q188459 wdt:P172 wd:Q58669 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Goldie Hawn', 'p': 'ethnic group', 'o': '?x0', '?x0': 'Hispanic and Latino Americans'}]

 Q: What is the genetic association of leprosy?
 SPARQL: select distinct ?answer where { wd:Q36956 wdt:P2293 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'leprosy', 'p': 'genetic association', 'o': '?x0'}

 Q: What book by Siegfried has the famous work Tristan und Isolde?
 SPARQL: SELECT ?answer WHERE { wd:Q333146 wdt:P87 ?answer . ?answer wdt:P800 wd:Q1324254}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Siegfried', 'p': 'book by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'Tristan und Isolde'}}

 Q: What is {part of constellation} of {orbits} of {HD 45364 b} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5174324 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'HD 45364 b', 'p': 'orbits', 'o': '$y0'}}

 Q: Give me {political party} that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7278 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is in Angles, whose partner city is Hyōgo Prefecture?
 SPARQL: SELECT ?answer WHERE { wd:Q104238 wdt:P276 ?answer . ?answer wdt:P190 wd:Q130290}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Angles', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Hyōgo Prefecture'}}

 Q: What is the FilmAffinity ID for Sherlock?
 SPARQL: select distinct ?answer where { wd:Q192837 wdt:P480 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sherlock', 'p': 'FilmAffinity ID', 'o': '?x0'}

 Q: Name an infectious disease that afflicts liver and that contains the word "hepatitis" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18123741 . ?sbj wdt:P689 wd:Q9368 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hepatitis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'infectious disease', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'afflicts', 'o': 'liver'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'hepatitis'}}

 Q: What is {child} of {Pedro I} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the Cycling Database ID for Lance Armstrong?
 SPARQL: select distinct ?answer where { wd:Q2172 wdt:P1664 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lance Armstrong', 'p': 'Cycling Database ID', 'o': '?x0'}

 Q: Which is the taxon rank for class?
 SPARQL: select distinct ?answer where { ?answer wdt:P105 wd:Q37517}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'taxon rank', 'o': 'class'}

 Q: Give me {taxon} that {taxon rank} {family} and which contains the word {xyridaceae} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16521 . ?sbj wdt:P105 wd:Q35409 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xyridaceae')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'taxon rank', 'o': 'family'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'xyridaceae'}}

 Q: What is {diameter} of {5.56×45mm NATO} that is {applies to part} is {base} ?
 SPARQL: SELECT ?obj WHERE { wd:Q238456 p:P2386 ?s . ?s ps:P2386 ?obj . ?s pq:P518 wd:Q29841371 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diameter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '5.56×45mm NATO', 'p': 'diameter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'base'}}}

 Q: Tell me the location of  the administrative territorial entity for Harry Harlow has place of death as Tucson?
 SPARQL: SELECT ?value WHERE { wd:Q1356498 p:P20 ?s . ?s ps:P20 wd:Q18575 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harry Harlow', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Tucson'}}}

 Q: What spouse of Max Ernst has a birthdate of 1-1-1946?
 SPARQL: SELECT ?obj WHERE { wd:Q154842 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Max Ernst', 'p': 'spouse', 'o': '?x0', 't': '1946'}

 Q: Did Carol Burnett win the Prisoner of War Medal and the Library of Congress Living Legend award?
 SPARQL: ASK WHERE { wd:Q255565 wdt:P166 wd:Q1816763 . wd:Q255565 wdt:P166 wd:Q6542686 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Carol Burnett', 'p': 'award', 'o': '?x0', '?x0': 'Prisoner of War Medal'}, {'h': 'IS', 'v': '?x1', 's': 'Carol Burnett', 'p': 'award', 'o': '?x1', '?x1': 'Library of Congress Living Legend'}]

 Q: Who was Hugh Hefner`s partner who died in 1976 ?
 SPARQL: SELECT ?obj WHERE { wd:Q194280 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hugh Hefner', 'p': 'partner', 'o': '?x0', 't': '1976'}

 Q: what is the {series ordinal} for {Lola Flores} has {child} as {Rosario Flores} ?
 SPARQL: SELECT ?value WHERE { wd:Q242084 p:P40 ?s . ?s ps:P40 wd:Q251210 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lola Flores', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Rosario Flores'}}}

 Q: Is the maximum frequency of audible sound of the Varanus komodoensis equal 2400.0?
 SPARQL: ASK WHERE { wd:Q4504 wdt:P3465 ?obj filter(?obj = 2400.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Varanus komodoensis', 'p': 'maximum frequency of audible sound', 'o': '?x0', '?x0': '2400.0'}

 Q: What is the place of interment of Albert Anastasia, that has a foundation date of 1838-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q706235 wdt:P119 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1838'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Albert Anastasia', 'p': 'interment', 'o': '?x0', 't': '1838'}

 Q: What are innervates of liver?
 SPARQL: select distinct ?answer where { ?answer wdt:P3190 wd:Q9368}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'innervates', 'o': 'liver'}

 Q: Tell me which industry contains the word winemaking in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8148 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winemaking')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'industry'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'winemaking'}}

 Q: What is the orbital eccentricity of Planet Nine?
 SPARQL: select distinct ?answer where { wd:Q22133699 wdt:P1096 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Planet Nine', 'p': 'orbital eccentricity', 'o': '?x0'}

 Q: Alexander Scriabin is a tutor of which musical instrument?
 SPARQL: SELECT ?answer WHERE { wd:Q185647 wdt:P1066 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Scriabin', 'p': 'tutor', 'o': '$y0'}}

 Q: What is date of death for Charles Le Brun ?
 SPARQL: select distinct ?answer where { wd:Q271676 wdt:P570 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Le Brun', 'p': 'date of death', 'o': '?x0'}

 Q: What is the diplomatic relation of Slovenia whose acronym is ЗША?
 SPARQL: SELECT ?answer WHERE { wd:Q215 wdt:P530 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'ЗША'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Slovenia', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'acronym', 'o': 'зша'}}

 Q: How many religions are by animism?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P140 wd:Q43004 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'animism'}

 Q: who is user of fleet of Qantas ?
 SPARQL: SELECT ?answer WHERE { wd:Q32491 wdt:P121 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'user', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Qantas', 'p': 'fleet', 'o': '$y0'}}

 Q: What variety is influenced by English?
 SPARQL:  select distinct ?obj where { wd:Q1860 wdt:P737 ?obj . ?obj wdt:P31 wd:Q3329375 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'English', 'p': 'influenced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'variety'}}

 Q: What is {won by} of {award} of {Fleetwood Mac} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106648 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'won by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fleetwood Mac', 'p': 'award', 'o': '$y0'}}

 Q: What are the modern languages which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1288568 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'modern language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {spouse} of {Henry IV of France} that is {end cause} is {divorce} ?
 SPARQL: SELECT ?obj WHERE { wd:Q936976 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1534 wd:Q93190 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'spouse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry IV of France', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end cause', 'o': 'divorce'}}}

 Q: What is the {British Academy Film Awards} for {nominated for} of {Javier Bardem}
 SPARQL:  select distinct ?obj where { wd:Q134895 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q732997 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Javier Bardem', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'British Academy Film Awards'}}

 Q: IS THE MINIMALL INCUBATION PERIOD IN HUMANS OF BOTULISM LESS THAN 7.2
 SPARQL: ASK WHERE { wd:Q154865 wdt:P3488 ?obj filter(?obj < 7.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'botulism', 'p': 'minimal incubation period in humans', 'o': '?x0', '?x0': '7.2'}

 Q: What is {honors} of {W. H. Auden}, that has {prizewinner} is {Joan Didion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q178698 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q267691}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'W. H. Auden', 'p': 'honors', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Joan Didion'}}

 Q: What are the children's game  which start with the letter zapp
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1509934 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zapp')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': "children's game"}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zapp'}}

 Q: What is <width> of <Lake District> ?
 SPARQL: select distinct ?answer where { wd:Q211778 wdt:P2049 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake District', 'p': 'width', 'o': '?x0'}

 Q: Which is the enterprise that is a subsidiary of CBS?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P355 wd:Q43380 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'CBS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: Which aircraft family has highest time to altitude?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056993 . ?ent wdt:P2362 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'time to altitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: Are there no households in Vidvathkumaryachasamudram?
 SPARQL: ASK WHERE { wd:Q16346016 wdt:P1538 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Vidvathkumaryachasamudram', 'p': 'households', 'o': '?x0', '?x0': '0'}

 Q: What is {inception} of {Islamic State of Iraq and the Levant} that is {identity of subject in context} is {Islamic State of Iraq} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2429253 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P4649 wd:Q18206631 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Islamic State of Iraq and the Levant', 'p': 'inception', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'identity of subject in context', 'o': 'Islamic State of Iraq'}}}

 Q: How many {World Health Organisation International Nonproprietary Name} are for {amphetamine} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q179452 wdt:P2275 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'amphetamine', 'p': 'World Health Organisation International Nonproprietary Name', 'o': '?x0'}

 Q: Which is language of platforms of Army of Darkness: Defense ?
 SPARQL: SELECT ?answer WHERE { wd:Q4794301 wdt:P400 ?X . ?X wdt:P277 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Army of Darkness: Defense', 'p': 'platform', 'o': '$y0'}}

 Q: Which is the TERYT municipality code of Wrocław?
 SPARQL: select distinct ?answer where { wd:Q1799 wdt:P1653 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wrocław', 'p': 'TERYT municipality code', 'o': '?x0'}

 Q: What is {antonym of} of {streak color} of {emerald} ?
 SPARQL: SELECT ?answer WHERE { wd:Q43513 wdt:P534 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'emerald', 'p': 'streak color', 'o': '$y0'}}

 Q: What principality replaced the Ottoman Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q12560 . ?sbj wdt:P31 wd:Q208500 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced', 'o': 'Ottoman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'principality'}}

 Q: Who gave the {painters} of {series} of {Bash} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16243529 wdt:P179 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bash', 'p': 'series', 'o': '$y0'}}

 Q: When did Thomas Young receive the award for Bakerian Lecture?
 SPARQL: SELECT ?value WHERE { wd:Q25820 p:P166 ?s . ?s ps:P166 wd:Q1107771 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Thomas Young', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Bakerian Lecture'}, 't': '?x0'}

 Q: What was the instance of the so called "Black Death" on 1347?
 SPARQL: SELECT ?value WHERE { wd:Q42005 p:P585 ?s . ?s ps:P585 ?x filter(contains(YEAR(?x),'1347')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': '?x0'}

 Q: What is {co-founded by} of {employed by} of {Gerhard Gentzen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q60502 wdt:P108 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerhard Gentzen', 'p': 'employed by', 'o': '$y0'}}

 Q: How many {illustrator} are to/by {E. H. Shepard} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P110 wd:Q382031 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'illustrator', 'o': 'E. H. Shepard'}

 Q: What is {academic major} and {academic degree} of {{Donald Trump} has {educated at} as {The Wharton School}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q22686 p:P69 ?s . ?s ps:P69 wd:Q1329269 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Trump', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'The Wharton School'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Trump', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'The Wharton School'}}}]

 Q: What is <health specialty> of <infection> ?
 SPARQL: select distinct ?answer where { wd:Q166231 wdt:P1995 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'infection', 'p': 'health specialty', 'o': '?x0'}

 Q: What is {head of government} of {Atlanta} that is {start time} is {2002-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23556 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Atlanta', 'p': 'head of government', 'o': '?x0', 't': '2002'}

 Q: what is the {burial plot reference} for {Alwin Nikolais} has {place of burial} as {Crématorium-columbarium du Père-Lachaise} ?
 SPARQL: SELECT ?value WHERE { wd:Q449880 p:P119 ?s . ?s ps:P119 wd:Q3006253 . ?s pq:P965 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'burial plot reference', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alwin Nikolais', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of burial', 'o': 'Crématorium-columbarium du Père-Lachaise'}}}

 Q: who is the child of Zeus whose mother is Leda?
 SPARQL: SELECT ?obj WHERE { wd:Q34201 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 wd:Q182019 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zeus', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mother', 'o': 'Leda'}}}

 Q: What is the {country} for {replaced by} of {Czechoslovakia}
 SPARQL:  select distinct ?obj where { wd:Q33946 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Czechoslovakia', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Did Edward VIII hold the military rank of field marshal?
 SPARQL: ASK WHERE { wd:Q590227 wdt:P410 wd:Q2703373 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Edward VIII', 'p': 'military rank', 'o': '?x0', '?x0': 'field marshal'}]

 Q: What is  thealphabet  language official of Tokugawa shogunate ?
 SPARQL: SELECT ?answer WHERE { wd:Q205662 wdt:P37 ?X . ?X wdt:P282 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'alphabet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tokugawa shogunate', 'p': 'language official', 'o': '$y0'}}

 Q: Who is the president and CEO of BP?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q152057 wdt:P488 ?ans_1 . wd:Q152057 wdt:P169 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'BP', 'p': 'president', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'BP', 'p': 'CEO', 'o': '?x1'}]

 Q: What is {physical quantity} of {cubic inch}, that has {observable dimension} is {L^3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2140397 wdt:P111 ?answer . ?answer wdt:P4020 ?x FILTER(contains(?x,'L^3'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cubic inch', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'observable dimension', 'o': 'l^3'}}

 Q: What is the death date of Peter, Count of Perche and Alençon, the son of Louis IX of France?
 SPARQL: SELECT ?value WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 wd:Q739327 . ?s pq:P570 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Peter, Count of Perche and Alençon'}}}

 Q: Tell me the sect that contains the word valentinianism in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19097 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'valentinianism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sect'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'valentinianism'}}

 Q: Wich means{is a list of} at {lawsuit} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P360 wd:Q697327}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is a list of', 'o': 'lawsuit'}

 Q: What is {titleholder} of {honours} of {Kelly Miller} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1032247 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'titleholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kelly Miller', 'p': 'honours', 'o': '$y0'}}

 Q: Which is the weather history for New York City?
 SPARQL: select distinct ?answer where { wd:Q60 wdt:P4150 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'New York City', 'p': 'weather history', 'o': '?x0'}

 Q: What sovereign states have a diplomatic relationship with the Russian Empire?
 SPARQL:  select distinct ?obj where { wd:Q34266 wdt:P530 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian Empire', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Which is the subreddit for Srinagar?
 SPARQL: select distinct ?answer where { wd:Q170115 wdt:P3984 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Srinagar', 'p': 'subreddit', 'o': '?x0'}

 Q: Is 16 the age of consent in Spain?
 SPARQL: ASK WHERE { wd:Q29 wdt:P2999 ?obj filter(?obj = 16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Spain', 'p': 'age of consent', 'o': '?x0', '?x0': '16'}

 Q: What is the {filmography} for {performer} of {Cecil B. DeMille}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P175 wd:Q72267 . ?sbj wdt:P31 wd:Q1371849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Cecil B. DeMille', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'filmography'}}

 Q: In what country does Mother's Day take place on March 8th?
 SPARQL: SELECT ?value WHERE { wd:Q47502 p:P837 ?s . ?s ps:P837 wd:Q2395 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Mother's Day", 'p': 'take place on', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'take place on', 'o': 'March 8'}}}

 Q: What military branch of the air force did Yuri Gagarin work for?
 SPARQL:  select distinct ?obj where { wd:Q7327 wdt:P241 ?obj . ?obj wdt:P31 wd:Q61883 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yuri Gagarin', 'p': 'military branch', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'air force'}}

 Q: Who is the{road bridge} for {structure replaced by} of {London Bridge}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P167 wd:Q130206 . ?sbj wdt:P31 wd:Q537127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'structure replaced by', 'o': 'London Bridge', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road bridge'}}

 Q: What is the ammonia conjugate acid monocation?
 SPARQL:  select distinct ?obj where { wd:Q4087 wdt:P4147 ?obj . ?obj wdt:P31 wd:Q55523831 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ammonia', 'p': 'conjugate acid', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monocation'}}

 Q: Which is the track gauge for Trans-Australian Railway?
 SPARQL: select distinct ?answer where { wd:Q1361233 wdt:P1064 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Trans-Australian Railway', 'p': 'track gauge', 'o': '?x0'}

 Q: What is the {residence} and the {occupation} of {Benjamin_Millepied} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q583186 wdt:P551 ?ans_1 . wd:Q583186 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Benjamin Millepied', 'p': 'residence', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Benjamin Millepied', 'p': 'occupation', 'o': '?x1'}]

 Q: what is the {point in time} for {Herta Müller} has {award received} as {Ehrengabe der Heinrich-Heine-Gesellschaft} ?
 SPARQL: SELECT ?value WHERE { wd:Q38049 p:P166 ?s . ?s ps:P166 wd:Q15096434 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Herta Müller', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Ehrengabe der Heinrich-Heine-Gesellschaft'}, 't': '?x0'}

 Q: What is Moscow State University's elibrary.ru organisation ID?
 SPARQL: select distinct ?answer where { wd:Q13164 wdt:P2463 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Moscow State University', 'p': 'elibrary.ru organisation ID', 'o': '?x0'}

 Q: what is the {end time} for {Serge Gainsbourg} has {spouse} as {Caroline von Paulus} ?
 SPARQL: SELECT ?value WHERE { wd:Q1698 p:P26 ?s . ?s ps:P26 wd:Q581225 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Serge Gainsbourg', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Caroline von Paulus'}}}

 Q: What is the {non-metropolitan district} for {contains administrative territorial entity} of {Norfolk}
 SPARQL:  select distinct ?obj where { wd:Q23109 wdt:P150 ?obj . ?obj wdt:P31 wd:Q1187580 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Norfolk', 'p': 'contains administrative territorial entity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'non-metropolitan district'}}

 Q: When did Santa Cruz de Tenerife have the population of 206593.0?
 SPARQL: SELECT ?value WHERE { wd:Q14328 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'206593.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Santa Cruz de Tenerife', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '206593.0'}, 't': '?x0'}

 Q: What are the designed by and the programming paradigm of SQL?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q47607 wdt:P287 ?ans_1 . wd:Q47607 wdt:P3966 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'SQL', 'p': 'designed by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'SQL', 'p': 'programming paradigm', 'o': '?x1'}]

 Q: When was Robert Frank awarded the Hasselblad Award?
 SPARQL: SELECT ?value WHERE { wd:Q467574 p:P166 ?s . ?s ps:P166 wd:Q1324112 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Robert Frank', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Hasselblad Award'}, 't': '?x0'}

 Q: What was Liège's twin city in 1955?
 SPARQL: SELECT ?obj WHERE { wd:Q3992 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1955')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Liège', 'p': 'twin city', 'o': '?x0', 't': '1955'}

 Q: what is the {publication date} for {Alexandre Dumas} has {notable work} as {The Count of Monte Cristo} ?
 SPARQL: SELECT ?value WHERE { wd:Q38337 p:P800 ?s . ?s ps:P800 wd:Q191838 . ?s pq:P577 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexandre Dumas', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'The Count of Monte Cristo'}}}

 Q: What is the profession of Guillermo Lasso that is different from a bank teller
 SPARQL: SELECT ?answer WHERE { wd:Q4414537 wdt:P106 ?answer . ?answer wdt:P1889 wd:Q806805}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guillermo Lasso', 'p': 'profession', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'different from', 'o': 'bank teller'}}

 Q: Give me a female idol group that starts with the letter z.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11446438 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'female idol group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What pizza comes from the head of government?
 SPARQL: SELECT ?answer WHERE { wd:Q177 wdt:P495 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'head of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pizza', 'p': 'comes from', 'o': '$y0'}}

 Q: What is the {type of quantum particle} for {antiparticle} of {neutron}
 SPARQL:  select distinct ?obj where { wd:Q2348 wdt:P2152 ?obj . ?obj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'neutron', 'p': 'antiparticle', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: Which {play} {participated in} {Micronesia at the 2011 World Aquatics Championships} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1177107 wdt:P1344 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'play', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Micronesia at the 2011 World Aquatics Championships', 'p': 'participated in', 'o': '$y0'}}

 Q: Who is the discoverer of Impressionism who had Oscar-Claude Monet as their full name at birth?
 SPARQL: SELECT ?answer WHERE { wd:Q40415 wdt:P61 ?answer . ?answer wdt:P1477 ?x FILTER(contains(?x,'Oscar-Claude Monet'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Impressionism', 'p': 'discoverer', 'o': '?x0'}

 Q: Which is the language of work or name for Old Church Slavonic?
 SPARQL: select distinct ?answer where { ?answer wdt:P407 wd:Q35499}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Old Church Slavonic'}

 Q: Is the par of the Royal St George's Golf Club equal to 56.0?
 SPARQL: ASK WHERE { wd:Q1586134 wdt:P3530 ?obj filter(?obj = 56.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "Royal St George's Golf Club", 'p': 'par', 'o': '?x0', '?x0': '56.0'}

 Q: What is the {periodical literature} for {mouthpiece} of {Air Canada}
 SPARQL:  select distinct ?obj where { wd:Q185339 wdt:P2813 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Air Canada', 'p': 'mouthpiece', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: Which is the valid in period of Easter?
 SPARQL: select distinct ?answer where { ?answer wdt:P1264 wd:Q21196}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'valid in period', 'o': 'Easter'}

 Q: What is {coordinate location} of {Dnieper River} that is {applies to part} is {river source} ?
 SPARQL: SELECT ?obj WHERE { wd:Q40855 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dnieper River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river source'}}}

 Q: When was did Bursa cease being the capital of the Ottoman Empire?
 SPARQL: SELECT ?value WHERE { wd:Q12560 p:P36 ?s . ?s ps:P36 wd:Q40738 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ottoman Empire', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': 'Bursa'}}}

 Q: Is the conversion to SI unit of the base pair equal 4.08e-10?
 SPARQL: ASK WHERE { wd:Q145911 wdt:P2370 ?obj filter(?obj = 4.08e-10) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'base pair', 'p': 'conversion to SI unit', 'o': '?x0', '?x0': '4.08e-10'}

 Q: Which is the {drug used for treatment} of the {medical treatment} of {Tuberculosis} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q12204 wdt:P2176 ?ans_1 . wd:Q12204 wdt:P924 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Tuberculosis', 'p': 'used for treatment', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Tuberculosis', 'p': 'treatment', 'o': '?x1'}]

 Q: what is the {point in time} for {Georgia} has {population} as {2.60912e+06} ?
 SPARQL: SELECT ?value WHERE { wd:Q1428 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'2.60912e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Georgia', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '2.60912e+06'}, 't': '?x0'}

 Q: Give me {area of mathematics} that {practiced by} {algebraist} and which that starts with {'a'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1936384 . ?sbj wdt:P3095 wd:Q23900107 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of mathematics', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'algebraist'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is {density} of {brass} that is {phase of matter} is {solid} ?
 SPARQL: SELECT ?obj WHERE { wd:Q39782 p:P2054 ?s . ?s ps:P2054 ?obj . ?s pq:P515 wd:Q11438 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'density', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'brass', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase of matter', 'o': 'solid'}}}

 Q: Which is the item used in the plays of Graham Thorpe?
 SPARQL: SELECT ?answer WHERE { wd:Q3527096 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'item used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Graham Thorpe', 'p': 'play', 'o': '$y0'}}

 Q: During the conflict of the Mexican-American War, which branch was Nate Dogg in?
 SPARQL: SELECT ?answer WHERE { wd:Q47159 wdt:P241 ?answer . ?answer wdt:P607 wd:Q6683}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nate Dogg', 'p': 'branch', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'Mexican-American War'}}

 Q: what is the {replaces} for {Teodoro Obiang Nguema Mbasogo} has {position held} as {Chairperson of the African Union} ?
 SPARQL: SELECT ?value WHERE { wd:Q57385 p:P39 ?s . ?s ps:P39 wd:Q946339 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Obiang Nguema Mbasogo', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chairperson of the African Union'}}}

 Q: "Which is {facet of a polytope} of {pyramid}, whose {next is} is {quadrilateral} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q3358290 wdt:P1312 ?answer . ?answer wdt:P156 wd:Q36810}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pyramid', 'p': 'facet of a polytope', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next is', 'o': 'quadrilateral'}}

 Q: How many {tracklist} are for {The Wall} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q151114 wdt:P658 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Wall', 'p': 'tracklist', 'o': '?x0'}

 Q: Was Aphrodite the child of Phobos and Dictys?
 SPARQL: ASK WHERE { wd:Q35500 wdt:P40 wd:Q105019 . wd:Q35500 wdt:P40 wd:Q26618397 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Aphrodite', 'p': 'child', 'o': '?x0', '?x0': 'Phobos'}, {'h': 'IS', 'v': '?x1', 's': 'Aphrodite', 'p': 'child', 'o': '?x1', '?x1': 'Dictys'}]

 Q: Give me {international sport governing body} that contains the word {world} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11422536 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international sport governing body'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: What is the {free or open-source video game} with the {MAX(maximum number of players)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21125433 . ?ent wdt:P1873 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum number of players', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'free or open-source video game'}}

 Q: Name the death location of Derek Walcott, which has a human population of 90913.
 SPARQL: SELECT ?answer WHERE { wd:Q132701 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'90913.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Derek Walcott', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '90913.0'}}

 Q: Which is the conflict of Joan of Arc?
 SPARQL:  select distinct ?obj where { wd:Q7226 wdt:P607 ?obj . ?obj wdt:P31 wd:Q180684 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joan of Arc', 'p': 'conflict', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conflict'}}

 Q: What award did Liam Neeson receive on December 31, 1999?
 SPARQL: SELECT ?obj WHERE { wd:Q58444 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Liam Neeson', 'p': 'award', 'o': '?x0', 't': '1999'}

 Q: Is drinking waters electrical resistivity equal to 20?
 SPARQL: ASK WHERE { wd:Q7892 wdt:P5679 ?obj filter(?obj = 20) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'drinking water', 'p': 'electrical resistivity', 'o': '?x0', '?x0': '20'}

 Q: Who is the child of Charlemagne and who is their mother?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}]

 Q: What is {scholarly field for} of {academic discipline} of {Mieczysław Kobylański} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11779820 wdt:P101 ?X . ?X wdt:P2578 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'scholarly field for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mieczysław Kobylański', 'p': 'discipline', 'o': '$y0'}}

 Q: What is {date of death} of {Croesus} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q184462 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Croesus', 'p': 'death date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: When did Muhammad stop practicing the Hanif religion?
 SPARQL: SELECT ?value WHERE { wd:Q9458 p:P140 ?s . ?s ps:P140 wd:Q425381 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Muhammad', 'p': 'religion', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'religion', 'o': 'Hanif'}}}

 Q: What is the highest point by Mount Ararat?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P610 wd:Q72303 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'highest point', 'o': 'Mount Ararat'}

 Q: What is the parent organization of the United States Secret Service and where is their headquarters located?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q503224 wdt:P159 ?ans_1 . wd:Q503224 wdt:P749 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'United States Secret Service', 'p': 'headquarters', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'United States Secret Service', 'p': 'parent organization', 'o': '?x1'}]

 Q: what is the {end time} for {Cindy Crawford} has {spouse} as {Richard Gere} ?
 SPARQL: SELECT ?value WHERE { wd:Q199801 p:P26 ?s . ?s ps:P26 wd:Q48410 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cindy Crawford', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Richard Gere'}}}

 Q: What is the national anthem the topic of in the history of Dagestan?
 SPARQL: SELECT ?answer WHERE { wd:Q2024068 wdt:P1269 ?X . ?X wdt:P85 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'anthem', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Dagestan', 'p': 'topic of', 'o': '$y0'}}

 Q: What is the JUFO ID of The New York Review of Books?
 SPARQL: select distinct ?answer where { wd:Q1426223 wdt:P1277 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The New York Review of Books', 'p': 'JUFO ID', 'o': '?x0'}

 Q: Give me {economic indicator} that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1167393 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic indicator'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is Family Guy's country of origin and the language?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q5930 wdt:P495 ?ans_1 . wd:Q5930 wdt:P407 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Family Guy', 'p': 'country of origin', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Family Guy', 'p': 'language', 'o': '?x1'}]

 Q: Where is the list of episodes for "Lassie"?
 SPARQL: select distinct ?answer where { wd:Q289537 wdt:P1811 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lassie', 'p': 'list of episodes', 'o': '?x0'}

 Q: What is <BHL creator ID> of <William Bateson> ?
 SPARQL: select distinct ?answer where { wd:Q297302 wdt:P4081 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Bateson', 'p': 'BHL creator ID', 'o': '?x0'}

 Q: What is {academic major} and {end time} of {{Christopher A. Sims} has {educated at} as {Harvard University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q109737 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P812 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher A. Sims', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'to', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher A. Sims', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard'}}}]

 Q: 262570000000 is the market capitalization of the Nokia?
 SPARQL: ASK WHERE { wd:Q1418 wdt:P2226 ?obj filter(?obj = 26257000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Nokia', 'p': 'market capitalization', 'o': '?x0', '?x0': '26257000000'}

 Q: What is {governing body} of {sports} of {FIFA World Cup} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19317 wdt:P641 ?X . ?X wdt:P797 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'governing body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'FIFA World Cup', 'p': 'sport', 'o': '$y0'}}

 Q: "What is  Hiroshima Prefecture'S borders, that has Tsugumasa Muraoka   
as head of national government?"
 SPARQL: SELECT ?answer WHERE { wd:Q617375 wdt:P47 ?answer . ?answer wdt:P6 wd:Q15830756}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hiroshima Prefecture', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'head of national government', 'o': 'Tsugumasa Muraoka'}}

 Q: How many approved by are by Free Software Foundation?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P790 wd:Q48413 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'approved by', 'o': 'Free Software Foundation'}

 Q: What is the {Austrian legislative election} with the {MAX(age of candidacy)} whose {candidate} is {Die Grünen}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22268901 . ?ent wdt:P2998 ?obj . ?ent wdt:P726 wd:Q193178 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'age of candidacy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Austrian legislative election', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'candidate', 'o': 'Die Grünen'}}}

 Q: What is art-name of Lin Biao ?
 SPARQL: select distinct ?answer where { wd:Q315475 wdt:P1787 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lin Biao', 'p': 'art-name', 'o': '?x0'}

 Q: Which is the WHO INN used for treatment of the attention deficit hyperactivity disorder?
 SPARQL: SELECT ?answer WHERE { wd:Q181923 wdt:P2176 ?X . ?X wdt:P2275 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'WHO INN', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'attention deficit hyperactivity disorder', 'p': 'used for treatment', 'o': '$y0'}}

 Q: When did Jolin Tsai and Jay Chou stop being partners?
 SPARQL: SELECT ?value WHERE { wd:Q51101 p:P451 ?s . ?s ps:P451 wd:Q238819 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jolin Tsai', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Jay Chou'}}}

 Q: What award did Jean Tirole receive in 1998?
 SPARQL: SELECT ?obj WHERE { wd:Q173994 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1998')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jean Tirole', 'p': 'award', 'o': '?x0', 't': '1998'}

 Q: what is the {start time} for {Marcel Dassault} has {position held} as {member of the French National Assembly} ?
 SPARQL: SELECT ?value WHERE { wd:Q160802 p:P39 ?s . ?s ps:P39 wd:Q3044918 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marcel Dassault', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the French National Assembly'}}}

 Q: What is {genre} and {publisher} of {{Christopher Hitchens} has {notable work} as {Hitch-22}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 wd:Q3138625 . ?s pq:P136 ?value1 . ?s pq:P123 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Hitch-22'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publisher', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Hitch-22'}}}]

 Q: What is {subitem of} of {history of Quebec}, that has {border} is {Maine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q375513 wdt:P1269 ?answer . ?answer wdt:P47 wd:Q724}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Quebec', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Maine'}}

 Q: What is the {human} for {head of government} of {Auckland}
 SPARQL:  select distinct ?obj where { wd:Q37100 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Auckland', 'p': 'head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the vapor pressure of fluorine?
 SPARQL: select distinct ?answer where { wd:Q650 wdt:P2119 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fluorine', 'p': 'vapor pressure', 'o': '?x0'}

 Q: What is the {gene} for {genetic association} of {Asperger syndrome}
 SPARQL:  select distinct ?obj where { wd:Q161790 wdt:P2293 ?obj . ?obj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Asperger syndrome', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: How many creators are with the Pokémon?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q239937 wdt:P170 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Pokémon', 'p': 'creator', 'o': '?x0'}

 Q: How many protocol in the Internet Protocol version 4?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2700 wd:Q11103 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'protocol', 'o': 'Internet Protocol version 4'}

 Q: Is the retirement age of the Netherlands 67?
 SPARQL: ASK WHERE { wd:Q55 wdt:P3001 ?obj filter(?obj = 67) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Netherlands', 'p': 'retirement age', 'o': '?x0', '?x0': '67'}

 Q: Is the points for the Hermann Pernsteiner more than 9.6?
 SPARQL: ASK WHERE { wd:Q25713100 wdt:P1358 ?obj filter(?obj > 9.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Hermann Pernsteiner', 'p': 'points for', 'o': '?x0', '?x0': '9.6'}

 Q: Bohemian Rhapsody's Tab4u song ID?
 SPARQL: select distinct ?answer where { wd:Q187745 wdt:P3838 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bohemian Rhapsody', 'p': 'Tab4u song ID', 'o': '?x0'}

 Q: What is {elected in} and {end cause} of {{Henry Campbell-Bannerman} has {position held} as {Member of the 20th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q106618 p:P39 ?s . ?s ps:P39 wd:Q41582560 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Campbell-Bannerman', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 20th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Campbell-Bannerman', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 20th Parliament of the United Kingdom'}}}]

 Q: Is the flexural strain at break of the beauxite filled epoxy composite less than 4.8?
 SPARQL: ASK WHERE { wd:Q57594719 wdt:P6014 ?obj filter(?obj < 4.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'beauxite filled epoxy composite', 'p': 'flexural strain at break', 'o': '?x0', '?x0': '4.8'}

 Q: Does the GDP (PPP) of North Macedonia equal to 29257308598.29?
 SPARQL: ASK WHERE { wd:Q221 wdt:P4010 ?obj filter(?obj = 29257308598.29) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'North Macedonia', 'p': 'GDP (PPP)', 'o': '?x0', '?x0': '29257308598.29'}

 Q: when is the {start time} for {Wales} thathas {located in the administrative territorial entity} as {Kingdom of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q25 p:P131 ?s . ?s ps:P131 wd:Q179876 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wales', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Kingdom of England'}}}

 Q: What is distinct from the 111.212 carillon of Hornbostel-Sachs?
 SPARQL: SELECT ?answer WHERE { wd:Q505174 wdt:P1889 ?answer . ?answer wdt:P1762 ?x FILTER(contains(?x,'111.212'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'carillon', 'p': 'distinct from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Hornbostel-Sachs', 'o': '111.212'}}

 Q: What is {date of birth} and {date of death} of {{Frederick William I of Prussia} has {child} as {Prince Augustus William of Prussia}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 wd:Q213658 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Prince Augustus William of Prussia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Prince Augustus William of Prussia'}}}]

 Q: what is the {start time} for {Ferenc Molnár} has {spouse} as {Lili Darvas} ?
 SPARQL: SELECT ?value WHERE { wd:Q296809 p:P26 ?s . ?s ps:P26 wd:Q762952 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ferenc Molnár', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Lili Darvas'}}}

 Q: Who gave the{birthdate} of {doctoral student} of {Martin Luther} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9554 wdt:P185 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birthdate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Luther', 'p': 'doctoral student', 'o': '$y0'}}

 Q: What is <Digital Rights Management system> of <die> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1032 wd:Q45089}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'Digital Rights Management system', 'o': 'die'}

 Q: How many {encoded by} are for {L-Threonine} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q186521 wdt:P702 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'L-Threonine', 'p': 'encoded by', 'o': '?x0'}

 Q: what is the {appointed by} for {John Dryden} has {position held} as {Poet Laureate of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q213355 p:P39 ?s . ?s ps:P39 wd:Q877838 . ?s pq:P748 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'appointed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Dryden', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Poet Laureate of the United Kingdom'}}}

 Q: Which is the dwarf elliptical galaxy for the child astronomical body of the Andromeda Galaxy?
 SPARQL:  select distinct ?obj where { wd:Q2469 wdt:P398 ?obj . ?obj wdt:P31 wd:Q234077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andromeda Galaxy', 'p': 'child astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dwarf elliptical galaxy'}}

 Q: What's the Carnegie Classification of Institutions of Higher Education that Ben Affleck graduated from?
 SPARQL: SELECT ?answer WHERE { wd:Q483118 wdt:P69 ?X . ?X wdt:P2643 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Carnegie Classification of Institutions of Higher Education', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ben Affleck', 'p': 'graduated from', 'o': '$y0'}}

 Q: What is the {lighthouse} for {country} of {Ancient Egypt}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q11768 . ?sbj wdt:P31 wd:Q39715 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Ancient Egypt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lighthouse'}}

 Q: Is the minimum wavelength of sensitivity of the human eye equal to 320.0?
 SPARQL: ASK WHERE { wd:Q430024 wdt:P3738 ?obj filter(?obj = 320.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'human eye', 'p': 'minimum wavelength of sensitivity', 'o': '?x0', '?x0': '320.0'}

 Q: What is the {human} for {student} of {Enrico Fermi}
 SPARQL:  select distinct ?obj where { wd:Q8753 wdt:P802 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Enrico Fermi', 'p': 'student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {polyatomic cation} for {conjugate acid} of {ammonia}
 SPARQL:  select distinct ?obj where { wd:Q4087 wdt:P4147 ?obj . ?obj wdt:P31 wd:Q55511472 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ammonia', 'p': 'conjugate acid', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'polyatomic cation'}}

 Q: What is {member of sports team} of {Cha Bum-kun} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346751 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cha Bum-kun', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cha Bum-kun', 'p': 'team', 'o': '$y0'}}]

 Q: Which is the constituency of the Rajya Sabha of the coextensive with Karnataka?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3403 wd:Q1185 . ?sbj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'coextensive with', 'o': 'Karnataka', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: What is the alma mater of Andrew Marvell, which is also the alma mater of director Martin Rees?
 SPARQL: SELECT ?answer WHERE { wd:Q365935 wdt:P69 ?answer . ?answer wdt:P1037 wd:Q335213}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrew Marvell', 'p': 'alma mater', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Martin Rees'}}

 Q: What is {member of sports team} of {Malcolm Allison} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1383862 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Allison', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Allison', 'p': 'team', 'o': '$y0'}}]

 Q: Which  is asteroid family of Haumea ?
 SPARQL: select distinct ?answer where { wd:Q601 wdt:P744 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Haumea', 'p': 'asteroid family', 'o': '?x0'}

 Q: Who are the members of sports team Dixie Dean in the year 1931?
 SPARQL: SELECT ?obj WHERE { wd:Q316323 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'9311')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dixie Dean', 'p': 'team', 'o': '?x0', 't': '9311'}

 Q: What federation has the highest median income?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q43702 . ?ent wdt:P3529 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'median income', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federation'}}

 Q: Which is {award received} of {Michael Ende} where {point in time} is {1986-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q76498 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1986')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michael Ende', 'p': 'award received', 'o': '?x0', 't': '1986'}

 Q: What is {nominated for} of {Top Gun} that is {statement is subject of} is {59th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q110138 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917235 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Top Gun', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '59th Academy Awards'}}}

 Q: Tell me contract whose name has the word zeitausgleich in it name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q93288 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitausgleich')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'contract'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeitausgleich'}}

 Q: Is Jack the Ripper said to be the same as Sir John Williams, 1st Baronet of the City of London?
 SPARQL: ASK WHERE { wd:Q43963 wdt:P460 wd:Q7528143 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jack the Ripper', 'p': 'said to be the same as', 'o': '?x0', '?x0': 'John Williams'}]

 Q: What is the {website} for {language used} of {Esperanto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q143 . ?sbj wdt:P31 wd:Q35127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Esperanto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'website'}}

 Q: What are the uses and the opposite of linear regression?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q10861030 wdt:P2283 ?ans_1 . wd:Q10861030 wdt:P461 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'linear regression', 'p': 'uses', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'linear regression', 'p': 'opposite of', 'o': '?x1'}]

 Q: what is the {end cause} for {C. P. Scott} has {country of citizenship} as {United Kingdom of Great Britain and Ireland} ?
 SPARQL: SELECT ?value WHERE { wd:Q5006750 p:P27 ?s . ?s ps:P27 wd:Q174193 . ?s pq:P1534 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'C. P. Scott', 'p': 'country of citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country of citizenship', 'o': 'United Kingdom of Great Britain and Ireland'}}}

 Q: What is <demonym> of <Alaska> ?
 SPARQL: select distinct ?answer where { wd:Q797 wdt:P1549 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alaska', 'p': 'demonym', 'o': '?x0'}

 Q: what is the {for work} for {Romy Schneider} has {nominated for} as {César Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q78469 p:P1411 ?s . ?s ps:P1411 wd:Q24241 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Romy Schneider', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Actress'}}}

 Q: What is the common name used for Laozi?
 SPARQL: select distinct ?answer where { wd:Q9333 wdt:P1782 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Laozi', 'p': 'zi', 'o': '?x0'}

 Q: What is the attendee Korean War in southernmost point located at 35.80859081 36.15096331
 SPARQL: SELECT ?answer WHERE { wd:Q8663 wdt:P710 ?answer . ?answer wdt:P1333 ?x FILTER(contains(?x,'35.80859081 36.15096331'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Korean War', 'p': 'attendee', 'o': '?x0'}

 Q: What is the version of the Old Testament that contains the word "septuagint " in its name ?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3331189 . ?sbj wdt:P629 wd:Q19786 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'septuagint')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'version of', 'o': 'Old Testament'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'septuagint'}}

 Q: What is {has shires} of {sports country} of {Tonya Harding} ?
 SPARQL: SELECT ?answer WHERE { wd:Q236278 wdt:P1532 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has shires', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tonya Harding', 'p': 'sports country', 'o': '$y0'}}

 Q: Which is the statement supported by Al-Qaeda?
 SPARQL: select distinct ?answer where { ?answer wdt:P3680 wd:Q34490}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'statement supported by', 'o': 'Al-Qaeda'}

 Q: What is the {author} and the {genre} of {The_Adventures_of_Tintin} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q744536 wdt:P50 ?ans_1 . wd:Q744536 wdt:P136 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Adventures of Tintin', 'p': 'author', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Adventures of Tintin', 'p': 'genre', 'o': '?x1'}]

 Q: When did Goldman Sachs count 34400.0 employees?
 SPARQL: SELECT ?value WHERE { wd:Q193326 p:P1128 ?s . ?s ps:P1128 ?x filter(contains(?x,'34400.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Goldman Sachs', 'p': 'employees', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employees', 'o': '34400.0'}, 't': '?x0'}

 Q: What is the {world day} for {founded by} of {United Nations General Assembly}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q47423 . ?sbj wdt:P31 wd:Q2558684 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'General Assembly', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'world day'}}

 Q: What are the plays of the organizer of the UMB World Three-cushion Championship?
 SPARQL: SELECT ?answer WHERE { wd:Q1812109 wdt:P664 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'play', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'UMB World Three-cushion Championship', 'p': 'organizer', 'o': '$y0'}}

 Q: tell me king in Greek mythology  name has  the word thestrus in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24434794 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thestrus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'king in Greek mythology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'thestrus'}}

 Q: What is {start time} and {end time} of {{Reg Gasnier} has {member of sports team} as {Australia national rugby league team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3423313 p:P54 ?s . ?s ps:P54 wd:Q3589757 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reg Gasnier', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Australia national rugby league team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reg Gasnier', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Australia national rugby league team'}}}]

 Q: What is the {sport} and the {country for sport} of {Theodore_Roosevelt} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q33866 wdt:P641 ?ans_1 . wd:Q33866 wdt:P1532 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Theodore Roosevelt', 'p': 'sport', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Theodore Roosevelt', 'p': 'country for sport', 'o': '?x1'}]

 Q: What is {position held} of {Nursultan Nazarbayev} that is {end time} is {1989-7-27} ?
 SPARQL: SELECT ?obj WHERE { wd:Q57394 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nursultan Nazarbayev', 'p': 'position held', 'o': '?x0', 't': '1989'}

 Q: What writer is known for the work titled Montague Summers?
 SPARQL: SELECT ?answer WHERE { wd:Q712220 wdt:P800 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Montague Summers', 'p': 'work', 'o': '$y0'}}

 Q: "Where is the place of filming (American Graffiti) with 8247420.0 human population?"
 SPARQL: SELECT ?answer WHERE { wd:Q375855 wdt:P915 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'827420.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'American Graffiti', 'p': 'place of filming', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '827420.0'}}

 Q: What is the { start time } for { Chris Gayle } as { Royal Challengers Bangalore } { sports team member }?
 SPARQL: SELECT ?value WHERE { wd:Q2732196 p:P54 ?s . ?s ps:P54 wd:Q1156897 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chris Gayle', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Royal Challengers Bangalore'}}}

 Q: What is the Library of Congress's collection or exhibition size?
 SPARQL: select distinct ?answer where { wd:Q131454 wdt:P1436 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Library of Congress', 'p': 'collection or exhibition size', 'o': '?x0'}

 Q: What is the {Wikimedia disambiguation page} for {official language} of {Parthian Empire}
 SPARQL:  select distinct ?obj where { wd:Q1986139 wdt:P37 ?obj . ?obj wdt:P31 wd:Q4167410 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Parthian Empire', 'p': 'official language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia disambiguation page'}}

 Q: What are the cross  which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q40843 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cross'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Where is tributary take place in Polynesia?
 SPARQL: SELECT ?answer WHERE { wd:Q35942 wdt:P706 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Polynesia', 'p': 'location', 'o': '$y0'}}

 Q: What is SPARQL endpoint of Biblioteca Nacional de España?
 SPARQL: select distinct ?answer where { wd:Q750403 wdt:P5305 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Biblioteca Nacional de España', 'p': 'SPARQL endpoint', 'o': '?x0'}

 Q: what is the {end time} for {Eleanor Roosevelt} has {spouse} as {Franklin Delano Roosevelt} ?
 SPARQL: SELECT ?value WHERE { wd:Q83396 p:P26 ?s . ?s ps:P26 wd:Q8007 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divorced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eleanor Roosevelt', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Franklin Delano Roosevelt'}}}

 Q: what is the {start time} for {Ludwig Maximilian University of Munich} has {located in the administrative territorial entity} as {Landshut} ?
 SPARQL: SELECT ?value WHERE { wd:Q55044 p:P131 ?s . ?s ps:P131 wd:Q3974 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ludwig Maximilian University of Munich', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Landshut'}}}

 Q: What is the {written work} for {series} of {His Dark Materials trilogy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q129240 . ?sbj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'His Dark Materials trilogy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What is {unemployment rate} of {place of origin} of {The Sugarhill Gang} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1413494 wdt:P495 ?X . ?X wdt:P1198 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'unemployment rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Sugarhill Gang', 'p': 'place of origin', 'o': '$y0'}}

 Q: What is {personal name} of {William Marwood}, that has {close to} is {Guilhem} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3568818 wdt:P735 ?answer . ?answer wdt:P460 wd:Q28048558}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Marwood', 'p': 'personal name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'close to', 'o': 'Guilhem'}}

 Q: Give me {state or insular area capital in the United States} that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21518270 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state or insular area capital in the United States'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {gospel} for {present in work} of {David}
 SPARQL:  select distinct ?obj where { wd:Q41370 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q34274 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gospel'}}

 Q: Which is the eWRC-results.com racer ID for Sébastien Ogier?
 SPARQL: select distinct ?answer where { wd:Q368793 wdt:P3927 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sébastien Ogier', 'p': 'eWRC-results.com racer ID', 'o': '?x0'}

 Q: When Kassel has its population 194268.0?
 SPARQL: SELECT ?value WHERE { wd:Q2865 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'194268.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kassel', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '194268.0'}, 't': '?x0'}

 Q: What are the historic county of England which start with the letter Y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1138494 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historic county of England'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: what is the {language of work or name} for {β-lactose} has {pronunciation audio} as {Sv-laktos.ogg} ?
 SPARQL: SELECT ?value WHERE { wd:Q127900 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'Sv-laktos.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'β-lactose', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'pronunciation audio', 'o': 'sv-laktos.ogg'}}}

 Q: What is <RKD/ESD (Slovenia) ID> of <Lipizzaner> ?
 SPARQL: select distinct ?answer where { wd:Q217671 wdt:P1715 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lipizzaner', 'p': 'RKD/ESD (Slovenia) ID', 'o': '?x0'}

 Q: On December 28, 1946, who did Aristotle Onassis marry?
 SPARQL: SELECT ?obj WHERE { wd:Q180455 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aristotle Onassis', 'p': 'marry', 'o': '?x0', 't': '1946'}

 Q: What is {victor} of {prize awarded} of {John R. Pierce} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1340677 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'victor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John R. Pierce', 'p': 'award', 'o': '$y0'}}

 Q: Is the orbital inclination of the 8076 Foscarini equal 0.28578?
 SPARQL: ASK WHERE { wd:Q628640 wdt:P2045 ?obj filter(?obj = 0.28578) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '8076 Foscarini', 'p': 'orbital inclination', 'o': '?x0', '?x0': '0.28578'}

 Q: What is the {human} for {spouse} of {Betty White}
 SPARQL:  select distinct ?obj where { wd:Q373895 wdt:P26 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Betty White', 'p': 'husband', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {publication date} of {Super Mario Bros.} that is {place of publication} is {Europe} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11168 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P291 wd:Q46 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Super Mario Brothers', 'p': 'publication date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of publication', 'o': 'Europe'}}}

 Q: Does the Crab Pulsar have a galactic latitude over 18.29464?
 SPARQL: ASK WHERE { wd:Q1044623 wdt:P6261 ?obj filter(?obj > 18.29464) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Crab Pulsar', 'p': 'galactic latitude', 'o': '?x0', '?x0': '18.29464'}

 Q: what is land-grant university starts with v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q615150 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'land-grant university'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: How many {after a work by} are to/by {Nathaniel Hawthorne} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1877 wd:Q69339 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'after a work by', 'o': 'Nathaniel Hawthorne'}

 Q: Who married Madeleine L'Engle on 1/26/1946?
 SPARQL: SELECT ?obj WHERE { wd:Q257261 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Madeleine L'Engle", 'p': 'married', 'o': '?x0', 't': '1946'}

 Q: What is {founder} of {region} of {Spring} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18147629 wdt:P276 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Spring', 'p': 'location', 'o': '$y0'}}

 Q: Give me {computer network protocol} that contains the word {widi} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15836568 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'widi')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer network protocol'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'widi'}}

 Q: What Sam Kinison label has Warner Music Group stockholders?
 SPARQL: SELECT ?answer WHERE { wd:Q333505 wdt:P264 ?answer . ?answer wdt:P127 wd:Q21077}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sam Kinison', 'p': 'label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'stockholder', 'o': 'Warner Music Group'}}

 Q: How many used by are for Transport Layer Security ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q206494 wdt:P1535 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Transport Layer Security', 'p': 'used by', 'o': '?x0'}

 Q: What is Plarr ID for Edward VII  ?
 SPARQL: select distinct ?answer where { wd:Q20875 wdt:P2944 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Edward VII', 'p': 'Plarr ID', 'o': '?x0'}

 Q: What is the Nasjonalbiblioteket photographer ID for Fridtjof Nansen
 SPARQL: select distinct ?answer where { wd:Q72292 wdt:P1847 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fridtjof Nansen', 'p': 'Nasjonalbiblioteket photographer ID', 'o': '?x0'}

 Q: What is {social media account on} of {made by} of {Xiaomi Redmi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15954223 wdt:P176 ?X . ?X wdt:P553 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'social media account on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Redmi', 'p': 'made by', 'o': '$y0'}}

 Q: In what time was did the Yuan dynasty rule the Asian continent?
 SPARQL: SELECT ?answer WHERE { wd:Q7313 wdt:P30 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yuan', 'p': 'continent', 'o': '$y0'}}

 Q: Which is the measurement unit for measured physical quantity of temperature?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P111 wd:Q11466 . ?sbj wdt:P31 wd:Q47574 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'temperature', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit'}}

 Q: Which gas giant in the solar system has the biggest synodic period?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q121750 . ?ent wdt:P4341 ?obj . ?ent wdt:P361 wd:Q544 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'synodic period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gas giant', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'solar system'}}}

 Q: What is permitted food additive for citric acid ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4850 wd:Q159683}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'permitted food additive', 'o': 'citric acid'}

 Q: What is the {language of work or name} and the {owner of} of {Pinterest} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q255381 wdt:P407 ?ans_1 . wd:Q255381 wdt:P1830 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Pinterest', 'p': 'language of work or name', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Pinterest', 'p': 'owner of', 'o': '?x1'}]

 Q: What is next to the place of work of Alfred Stieglitz?
 SPARQL: SELECT ?answer WHERE { wd:Q313055 wdt:P937 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Stieglitz', 'p': 'place of work', 'o': '$y0'}}

 Q: What is {academic degree} and {academic major} of {{Christiane Amanpour} has {educated at} as {University of Rhode Island}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q236939 p:P69 ?s . ?s ps:P69 wd:Q1641788 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christiane Amanpour', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Rhode Island'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christiane Amanpour', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Rhode Island'}}}]

 Q: What is the relevant qualification of project management ?
 SPARQL: select distinct ?answer where { wd:Q179012 wdt:P4968 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'project management', 'p': 'relevant qualification', 'o': '?x0'}

 Q: I want to know Andreas Vesalius' Auckland Art Gallery artist ID.
 SPARQL: select distinct ?answer where { wd:Q170267 wdt:P3372 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andreas Vesalius', 'p': 'Auckland Art Gallery artist ID', 'o': '?x0'}

 Q: Give me {professional sports league} that {season starts} {October} and which contains the word {hockey} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15991290 . ?sbj wdt:P4794 wd:Q124 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hockey')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'professional sports league', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'season starts', 'o': 'October'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'hockey'}}

 Q: Which is the Babelio work ID for The Grapes of Wrath?
 SPARQL: select distinct ?answer where { wd:Q215983 wdt:P3631 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Grapes of Wrath', 'p': 'Babelio work ID', 'o': '?x0'}

 Q: Tell me female beauty pageant whose name has the word world in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58863414 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'female beauty pageant'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: Did the twinned administrative body of Samarkand begin August 4, 1986?
 SPARQL: SELECT ?obj WHERE { wd:Q5753 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1986')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Samarkand', 'p': 'twinned administrative body', 'o': '?x0', 't': '1986'}

 Q: What is the {business} for {product or material produced} of {Commodore 64}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q99775 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'Commodore 64', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is {production statistics} of {state} of {Paris-Charles de Gaulle Airport} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46280 wdt:P17 ?X . ?X wdt:P2746 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'production statistics', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles de Gaulle Airport', 'p': 'state', 'o': '$y0'}}

 Q: "What is the brother of Manfred von Richthofen whose burial place is Germany?"
 SPARQL: SELECT ?answer WHERE { wd:Q4701 wdt:P3373 ?answer . ?answer wdt:P119 wd:Q183}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Manfred von Richthofen', 'p': 'bro', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'burial place', 'o': 'Germany'}}

 Q: Which taxon has the longest generation time?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P3337 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'generation time', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is the Swedish Literature Bank Author ID of Erasmus?
 SPARQL: select distinct ?answer where { wd:Q43499 wdt:P5101 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Erasmus', 'p': 'Swedish Literature Bank Author ID', 'o': '?x0'}

 Q: How many {payment types accepted} are for {Louvre Museum} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q19675 wdt:P2851 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Louvre', 'p': 'payment types accepted', 'o': '?x0'}

 Q: What are the Greek deity which start with the letter zeus
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22989102 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greek deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeus'}}

 Q: What is {place of burial} of {Pete Conrad} that is {burial plot reference} is {Section 11, Site 113-3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q213076 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P965 ?x filter(contains(?x,'Section 11, Site 113-3')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pete Conrad', 'p': 'place of burial', 'o': '?x0'}

 Q: What is {surface} of {has capital} of {Malacca sultanate} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46652 wdt:P36 ?X . ?X wdt:P2046 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'surface', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malacca sultanate', 'p': 'capital', 'o': '$y0'}}

 Q: How many {studies} are to/by {jurisprudence} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2578 wd:Q4932206 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'jurisprudence'}

 Q: What are the gas law which start with the letter I
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q379231 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gas law'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: What is the {controversy} for {participant} of {Donald Trump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q22686 . ?sbj wdt:P31 wd:Q1255828 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Donald Trump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'controversy'}}

 Q: what is the {ticker symbol} for {Chevron Corporation} has {stock exchange} as {New York Stock Exchange} ?
 SPARQL: SELECT ?value WHERE { wd:Q319642 p:P414 ?s . ?s ps:P414 wd:Q13677 . ?s pq:P249 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ticker symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chevron Corporation', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'stock exchange', 'o': 'New York Stock Exchange'}}}

 Q: Who is the daughter of Guinevere's wife?
 SPARQL: SELECT ?answer WHERE { wd:Q272054 wdt:P26 ?X . ?X wdt:P25 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guinevere', 'p': 'wife', 'o': '$y0'}}

 Q: Which is the Framalibre ID for Wilhelm Furtwängler?
 SPARQL: select distinct ?answer where { wd:Q57285 wdt:P4107 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wilhelm Furtwängler', 'p': 'Framalibre ID', 'o': '?x0'}

 Q: Which is the date of disappearance of Natalia Molchanova?
 SPARQL: select distinct ?answer where { wd:Q59920 wdt:P746 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Natalia Molchanova', 'p': 'date of disappearance', 'o': '?x0'}

 Q: Richard III of England was depicted by which film ?
 SPARQL:  select distinct ?obj where { wd:Q133028 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Richard III of England', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the ruchess ID of Anatoly Karpov?
 SPARQL: select distinct ?answer where { wd:Q131674 wdt:P4994 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anatoly Karpov', 'p': 'ruchess ID', 'o': '?x0'}

 Q: Which is They Work for You ID of David Cameron?
 SPARQL: select distinct ?answer where { wd:Q192 wdt:P2171 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Cameron', 'p': 'They Work for You ID', 'o': '?x0'}

 Q: How many {distribution} are to/by {Secure Digital card} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P437 wd:Q466977 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'distribution', 'o': 'Secure Digital card'}

 Q: What are the type of business entity which start with the letter S
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1269299 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of business entity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which {telephone prefix} is {born at} {Abu Nuwas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5670 wdt:P19 ?X . ?X wdt:P473 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'telephone prefix', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abu Nuwas', 'p': 'born at', 'o': '$y0'}}

 Q: Who is noble family of has mother of Iziaslav I of Kiev ?
 SPARQL: SELECT ?answer WHERE { wd:Q332516 wdt:P25 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'family', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iziaslav I of Kiev', 'p': 'mother', 'o': '$y0'}}

 Q: What are the team which start with the letter vándormások
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q327245 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vándormások')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'team'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vándormások'}}

 Q: Which are the afflicts of mercury poisoning?
 SPARQL: select distinct ?answer where { wd:Q408089 wdt:P689 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mercury poisoning', 'p': 'afflicts', 'o': '?x0'}

 Q: What is {date of death} of {Abd ar-Rahman I} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q29000 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abd ar-Rahman I', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What is internetmedicin.se ID for breast cancer ?
 SPARQL: select distinct ?answer where { wd:Q128581 wdt:P2074 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'breast cancer', 'p': 'internetmedicin.se ID', 'o': '?x0'}

 Q: What is {date of death} and {date of birth} of {{Joseph Stalin} has {child} as {Artem Sergeev}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q4416801 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Artem Sergeev'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Artem Sergeev'}}}]

 Q: What was University of California, Berkeley students count in 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q168756 p:P2196 ?s . ?s ps:P2196 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of California, Berkeley', 'p': 'students count', 'o': '?x0', 't': '2016'}

 Q: what is the {instance of} for {Zenobia} has {date of birth} as {240-0-0} ?
 SPARQL: SELECT ?value WHERE { wd:Q189705 p:P569 ?s . ?s ps:P569 ?x filter(contains(?x,'240-0-0')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zenobia', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'date of birth', 'o': '240-0-0'}}}

 Q: Which is the Cinema ID for Amélie?
 SPARQL: select distinct ?answer where { wd:Q484048 wdt:P3933 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amélie', 'p': 'Cinema ID', 'o': '?x0'}

 Q: What is the country calling code for Nauru?
 SPARQL: select distinct ?answer where { wd:Q697 wdt:P474 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nauru', 'p': 'country calling code', 'o': '?x0'}

 Q: What is {follows} and {followed by} of {{Louis II of Italy} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q215204 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: What is the Fossilworks ID for pigeon?
 SPARQL: select distinct ?answer where { wd:Q10856 wdt:P842 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pigeon', 'p': 'Fossilworks ID', 'o': '?x0'}

 Q: What is {lake} of {place of foundation} of {John England & the Western Swingers} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6231791 wdt:P740 ?X . ?X wdt:P206 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'lake', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John England & the Western Swingers', 'p': 'place of foundation', 'o': '$y0'}}

 Q: What is {population} of {Zlín Region} that is {male population} is {285855.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192536 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P1540 ?x filter(contains(?x,'285855.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zlin Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'male population', 'o': '285855.0'}}}

 Q: Which isotope of barium decaying to caesium-116 has the most binding energy ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2555200 . ?ent wdt:P2154 ?obj . ?ent wdt:P816 wd:Q2370394 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'binding energy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of barium', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'decays to', 'o': 'caesium-116'}}}

 Q: what is an experiment that starts with the letter t.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q101965 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'experiment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which is the PagesJaunes ID for Louvre Museum?
 SPARQL: select distinct ?answer where { wd:Q19675 wdt:P4201 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Louvre Museum', 'p': 'PagesJaunes ID', 'o': '?x0'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Christine Sinclair} has {member of sports team} as {Vancouver Whitecaps}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q262802 p:P54 ?s . ?s ps:P54 wd:Q3567798 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christine Sinclair', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Vancouver Whitecaps'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christine Sinclair', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Vancouver Whitecaps'}}}]

 Q: What is {award received} of {Halldór Laxness} that is {prize money} is {190214.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80321 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'190214.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Halldór Laxness', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '190214.0'}}}

 Q: Which determination method for Tunisia has total fertility rate as 2.08 ?
 SPARQL: SELECT ?value WHERE { wd:Q948 p:P4841 ?s . ?s ps:P4841 ?x filter(contains(?x,'2.08')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tunisia', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'total fertility rate', 'o': '2.08'}}}

 Q: Is the absolute magnitude of the 10199 Chariklo equal to 6.7?
 SPARQL: ASK WHERE { wd:Q11559 wdt:P1457 ?obj filter(?obj = 6.7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '10199 Chariklo', 'p': 'absolute magnitude', 'o': '?x0', '?x0': '6.7'}

 Q: what is the {statement is subject of} for {Germany} has {shares border with} as {Poland} ?
 SPARQL: SELECT ?value WHERE { wd:Q183 p:P47 ?s . ?s ps:P47 wd:Q36 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'de', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'border', 'o': 'Poland'}}}

 Q: What is the inverse of the manufacturing method of pasteurization?
 SPARQL: SELECT ?answer WHERE { wd:Q58148 wdt:P2079 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inverse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pasteurization', 'p': 'manufacturing method', 'o': '$y0'}}

 Q: What is {characters} of {translation of} of {Божественная комедия (1855, Минъ)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21191066 wdt:P629 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Божественная комедия (1855, Минъ)', 'p': 'translation of', 'o': '$y0'}}

 Q: Which is the tracklist for Revolver?
 SPARQL: select distinct ?answer where { wd:Q185121 wdt:P658 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Revolver', 'p': 'tracklist', 'o': '?x0'}

 Q: which is the public policy that starts with letter r
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q546113 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public policy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What is the base of a cube that differs from a triangle?
 SPARQL: SELECT ?answer WHERE { wd:Q812880 wdt:P3263 ?answer . ?answer wdt:P1889 wd:Q19821}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cube', 'p': 'base', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'differs from', 'o': 'triangle'}}

 Q: What is the film genre and the name of the singer of Long Story Short?
 SPARQL: SELECT ?answer WHERE { wd:Q6673247 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Long Story Short', 'p': 'singer', 'o': '$y0'}}

 Q: Who is the architect of the Chapultepec Castleon?
 SPARQL: select distinct ?answer where { wd:Q1072510 wdt:P84 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chapultepec Castle', 'p': 'architect', 'o': '?x0'}

 Q: what is the {start time} for {George II of Great Britain} has {position held} as {duke} ?
 SPARQL: SELECT ?value WHERE { wd:Q131981 p:P39 ?s . ?s ps:P39 wd:Q166886 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George II of Great Britain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'duke'}}}

 Q: Is it true that the foreign transaction fee of the Santander 1plus Visa Card equals to 0?
 SPARQL: ASK WHERE { wd:Q56509979 wdt:P5895 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Santander 1plus Visa Card', 'p': 'foreign transaction fee', 'o': '?x0', '?x0': '0'}

 Q: Which cooperative bank that is a member of Bundesverband der Deutschen Volksbanken und Raiffeisenbanken has the most employees ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3277997 . ?ent wdt:P1128 ?obj . ?ent wdt:P463 wd:Q1009029 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'employees', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cooperative bank', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Bundesverband der Deutschen Volksbanken und Raiffeisenbanken'}}}

 Q: what is the {end time} for {Dragan Džajić} has {member of sports team} as {Yugoslavia national football team} ?
 SPARQL: SELECT ?value WHERE { wd:Q297357 p:P54 ?s . ?s ps:P54 wd:Q188363 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dragan Džajić', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Yugoslavia national football team'}}}

 Q: What is the Alcalá de Henares population determined by the register office?
 SPARQL: SELECT ?obj WHERE { wd:Q46940 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alcalá de Henares', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determined by', 'o': 'register office'}}}

 Q: Does a house cats bite force reach 46.4?
 SPARQL: ASK WHERE { wd:Q146 wdt:P3485 ?obj filter(?obj = 46.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'house cat', 'p': 'bite force quotient', 'o': '?x0', '?x0': '46.4'}

 Q: What is the {Population I star} for {child astronomical body} of {Pluto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q339 . ?sbj wdt:P31 wd:Q3592493 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Pluto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Population I star'}}

 Q: What are the computer model which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55990535 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Is the binding energy of tritium greater than 6785.436?
 SPARQL: ASK WHERE { wd:Q54389 wdt:P2154 ?obj filter(?obj > 6785.436) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'tritium', 'p': 'binding energy', 'o': '?x0', '?x0': '6785.436'}

 Q: What is {open period from} and {closed on} of {{British Museum} has {open days} as {all weekdays}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 wd:Q26214163 . ?s pq:P3027 ?value1 . ?s pq:P3026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'closed on', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}]

 Q: what is the {together with} for {Alexander Fleming} has {award received} as {Nobel Prize in Physiology or Medicine} ?
 SPARQL: SELECT ?value WHERE { wd:Q37064 p:P166 ?s . ?s ps:P166 wd:Q80061 . ?s pq:P1706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Fleming', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Prize in Physiology or Medicine'}}}

 Q: What location in Hyderabad the administrative territorial entity in the year 1724?
 SPARQL: SELECT ?obj WHERE { wd:Q1361 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1724')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hyderabad', 'p': 'in', 'o': '?x0', 't': '1724'}

 Q: What is the collection of Pietà?
 SPARQL: select distinct ?answer where { wd:Q235242 wdt:P195 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pietà', 'p': 'collection', 'o': '?x0'}

 Q: What is Cinemagia actor ID for Lionel Messi?
 SPARQL: select distinct ?answer where { wd:Q615 wdt:P4666 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lionel Messi', 'p': 'Cinemagia actor ID', 'o': '?x0'}

 Q: What is Nuremberg's Bavarikon ID?
 SPARQL: select distinct ?answer where { wd:Q2090 wdt:P4005 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nuremberg', 'p': 'Bavarikon ID', 'o': '?x0'}

 Q: What is the stateless nation of the Bilbao location?
 SPARQL:  select distinct ?obj where { wd:Q8692 wdt:P276 ?obj . ?obj wdt:P31 wd:Q1151616 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bilbao', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stateless nation'}}

 Q: Which is the National-Football-Teams.com player ID for Clarence Seedorf?
 SPARQL: select distinct ?answer where { wd:Q484909 wdt:P2574 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Clarence Seedorf', 'p': 'National-Football-Teams.com player ID', 'o': '?x0'}

 Q: What is {record producer} of {split from} of {I Feel Fine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q268440 wdt:P155 ?X . ?X wdt:P162 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I Feel Fine', 'p': 'split from', 'o': '$y0'}}

 Q: What is {position held} of {Juan Carlos I} that is {replaced by} is {Felipe VI of Spain} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19943 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q191045 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Juan Carlos I', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Felipe VI of Spain'}}}

 Q: Which is the MR Author ID of Niels Bohr?
 SPARQL: select distinct ?answer where { wd:Q7085 wdt:P4955 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Niels Bohr', 'p': 'MR Author ID', 'o': '?x0'}

 Q: Which is the Dictionnaire critique des historiens de l'art ID for Théophile Gautier?
 SPARQL: select distinct ?answer where { wd:Q183713 wdt:P5372 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Théophile Gautier', 'p': "Dictionnaire critique des historiens de l'art ID", 'o': '?x0'}

 Q: What is the {family name} for {writing system} of {Chinese characters}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q8201 . ?sbj wdt:P31 wd:Q101352 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'family name'}}

 Q: What is the aspect of Vedanta, that has Universal Decimal Classification as 233?
 SPARQL: SELECT ?answer WHERE { wd:Q2512051 wdt:P1269 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'233'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vedanta', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Universal Decimal Classification', 'o': '233'}}

 Q: what are the train service which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15141321 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'train service'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Which is the average space complexity of quicksort?
 SPARQL: select distinct ?answer where { wd:Q486598 wdt:P3757 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'quicksort', 'p': 'average space complexity', 'o': '?x0'}

 Q: What has a border that is Anguillara Sabazia and is also the birth location of Gaius Cassius Longinus?
 SPARQL: SELECT ?answer WHERE { wd:Q207370 wdt:P19 ?answer . ?answer wdt:P47 wd:Q241693}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gaius Cassius Longinus', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Anguillara Sabazia'}}

 Q: Did {John_Wayne_Gacy} {employer} {Jollibee Foods Corporation}?
 SPARQL: ASK WHERE { wd:Q298252 wdt:P108 wd:Q37614 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Gacy', 'p': 'employer', 'o': '?x0', '?x0': 'Jollibee'}]

 Q: What is the {human} for {sports discipline competed in} of {high jump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2416 wd:Q165704 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports discipline competed in', 'o': 'high jump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is <Persée author ID> of <Marija Gimbutas> ?
 SPARQL: select distinct ?answer where { wd:Q221084 wdt:P2732 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marija Gimbutas', 'p': 'Persée author ID', 'o': '?x0'}

 Q: What volcanic eruption occurred in the Dutch East Indies?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q188161 . ?sbj wdt:P31 wd:Q7692360 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Dutch East Indies', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'volcanic eruption'}}

 Q: What award did Aaliyah receive in the year 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q11617 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aaliyah', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: What is {award received} of {Laurence Fishburne} that is {statement is subject of} is {46th Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193048 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q4638408 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Laurence Fishburne', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '46th Tony Awards'}}}

 Q: How much market capitalization are for JPMorgan Chase?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q192314 wdt:P2226 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'JPMorgan Chase', 'p': 'market capitalization', 'o': '?x0'}

 Q: Where is Osama bin Laden's place of residence, that has diplomatic relation with Australia?
 SPARQL: SELECT ?answer WHERE { wd:Q1317 wdt:P551 ?answer . ?answer wdt:P530 wd:Q408}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Osama bin Laden', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Australia'}}

 Q: What is {cfsi} of {setting location} of {Le Pere Goriot} ?
 SPARQL: SELECT ?answer WHERE { wd:Q240617 wdt:P840 ?X . ?X wdt:P1740 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cfsi', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Le Pere Goriot', 'p': 'setting location', 'o': '$y0'}}

 Q: What is the {human} for {head coach} of {Boston Celtics}
 SPARQL:  select distinct ?obj where { wd:Q131371 wdt:P286 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Celtics', 'p': 'head coach', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which voting round for Marine Le Pen had the most spoilt votes?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q24097670 . ?ent wdt:P5044 ?obj . ?ent wdt:P726 wd:Q12927 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'spoilt votes', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'voting round', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'candidate', 'o': 'Marine Le Pen'}}}

 Q: What is {shares border with} of {Basque Autonomous Community} that is {applies to part} is {Pyrénées-Atlantiques} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3995 p:P47 ?s . ?s ps:P47 ?obj . ?s pq:P518 wd:Q12703 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Basque Autonomous Community', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'Pyrenees-Atlantiques'}}}

 Q: What is {predecessor} of {formed from} of {Santa Monica} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41108665 wdt:P186 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'predecessor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Santa Monica', 'p': 'formed from', 'o': '$y0'}}

 Q: What is {spouse} of {James Joyce} that is {place of marriage} is {London} ?
 SPARQL: SELECT ?obj WHERE { wd:Q6882 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q84 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Joyce', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of marriage', 'o': 'London'}}}

 Q: How many crystal systems are in an amorphous solid?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P556 wd:Q103382 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'crystal system', 'o': 'amorphous solid'}

 Q: What is the {television series} for {characters} of {Robin Hood}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q122634 . ?sbj wdt:P31 wd:Q5398426 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Robin Hood', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series'}}

 Q: What play depicts the life of Richard III of England?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P180 wd:Q133028 . ?sbj wdt:P31 wd:Q25379 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'Richard III of England', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'play'}}

 Q: What is the {building complex} with the {MIN(number of elevators)} whose {structural engineer} is {Arup}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1497364 . ?ent wdt:P1301 ?obj . ?ent wdt:P631 wd:Q716737} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'elevators', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'building complex', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'engineer', 'o': 'Arup'}}}

 Q: Who is the husband and child of Anthony Dryden Marshall
 SPARQL: SELECT ?answer WHERE { wd:Q4772424 wdt:P22 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'husband', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anthony Dryden Marshall', 'p': 'child of', 'o': '$y0'}}

 Q: At what pressure does phosphoric acid need to be at to have a boiling point of 415.0?
 SPARQL: SELECT ?value WHERE { wd:Q184782 p:P2102 ?s . ?s ps:P2102 ?x filter(contains(?x,'415.0')) . ?s pq:P2077 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'phosphoric acid', 'p': 'boiling point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'boiling point', 'o': '415.0'}}}

 Q: What is the symbol of the physical quantity of pound per square inch ?
 SPARQL: SELECT ?answer WHERE { wd:Q626299 wdt:P111 ?X . ?X wdt:P416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pound per square inch', 'p': 'quantity', 'o': '$y0'}}

 Q: When converted to SI unit, is the darcy equal to 1.18428e-12?
 SPARQL: ASK WHERE { wd:Q1165725 wdt:P2370 ?obj filter(?obj = 1.18428e-12) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'darcy', 'p': 'conversion to SI unit', 'o': '?x0', '?x0': '1.18428e-12'}

 Q: what is the {point in time} for {Seiichi Morimura} has {award received} as {Edogawa Rampo Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q2318799 p:P166 ?s . ?s ps:P166 wd:Q906975 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Seiichi Morimura', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Edogawa Rampo Award'}, 't': '?x0'}

 Q: what is economic union starts with u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3623811 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic union'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: When was Zakarpattia Oblast break from Ukrainian Soviet Socialist Republic which was situated in the administrative territorial entity?
 SPARQL: SELECT ?value WHERE { wd:Q170213 p:P131 ?s . ?s ps:P131 wd:Q133356 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zakarpattia Oblast', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Ukrainian Soviet Socialist Republic'}}}

 Q: How many opposites are there of the word parent?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P461 wd:Q7566 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'opposite', 'o': 'parent'}

 Q: What is {Christian name} of {Poul Anderson}, that has {the same as} is {Pavle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q220883 wdt:P735 ?answer . ?answer wdt:P460 wd:Q2064754}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Poul Anderson', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Pavle'}}

 Q: What is the {race horse} for {child} of {Seabiscuit}
 SPARQL:  select distinct ?obj where { wd:Q1500356 wdt:P40 ?obj . ?obj wdt:P31 wd:Q10855242 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Seabiscuit', 'p': 'child', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'race horse'}}

 Q: What is the mobile network operator founded by Verizon?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q467752 . ?sbj wdt:P31 wd:Q1941618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Verizon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mobile network operator'}}

 Q: Is Planck's constant less than 5.300856032e-34?
 SPARQL: ASK WHERE { wd:Q122894 wdt:P1181 ?obj filter(?obj < 5.300856032e-34) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'h', 'p': 'numeric value', 'o': '?x0', '?x0': '5.300856032e-34'}

 Q: Mention the doctoral advisor-ship and the academic qualifying degree achieved by Raghuram Rajan when he studied at Massachusetts Institute of Technology.
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q981496 p:P69 ?s . ?s ps:P69 wd:Q49108 . ?s pq:P184 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Raghuram Rajan', 'p': 'studied at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'studied at', 'o': 'Massachusetts Institute of Technology'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Raghuram Rajan', 'p': 'studied at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'studied at', 'o': 'Massachusetts Institute of Technology'}}}]

 Q: What was proximately caused by the consequence  of bubonic plague ?
 SPARQL: SELECT ?answer WHERE { wd:Q217519 wdt:P1542 ?X . ?X wdt:P1478 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'proximately caused by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'bubonic plague', 'p': 'consequence', 'o': '$y0'}}

 Q: What is the place of incorporation of the The Police, that has Zip + 4 and is W1F 0HS?
 SPARQL: SELECT ?answer WHERE { wd:Q178095 wdt:P740 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'W1F 0HS'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Police', 'p': 'place of incorporation', 'o': '?x0'}

 Q: Who is the person from the People's Republic of China that has the most century breaks?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P4912 ?obj . ?ent wdt:P27 wd:Q148 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'century breaks', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': "People's Republic of China"}}}

 Q: Those pledging allegiance to Ayman al-Zawahiri are part of what organization?
 SPARQL:  select distinct ?obj where { wd:Q186316 wdt:P945 ?obj . ?obj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ayman al-Zawahiri', 'p': 'allegiance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: What are the legendary figure which start with the letter e
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13002315 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'é')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legendary figure'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'é'}}

 Q: Is it true Pamela is the given name of Pamela Anderson?
 SPARQL: ASK WHERE { wd:Q83325 wdt:P735 wd:Q262119 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Pamela Anderson', 'p': 'given name', 'o': '?x0', '?x0': 'Pamela'}]

 Q: What is ceiling exposure limit for phenol which duration is 15.0?
 SPARQL: SELECT ?obj WHERE { wd:Q130336 p:P2405 ?s . ?s ps:P2405 ?obj . ?s pq:P2047 ?x filter(contains(?x,'15.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ceiling exposure limit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'phenol', 'p': 'ceiling exposure limit', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'duration', 'o': '15.0'}}}

 Q: What is the award received by Rick Barry in 1974?
 SPARQL: SELECT ?obj WHERE { wd:Q434824 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rick Barry', 'p': 'award received', 'o': '?x0', 't': '1974'}

 Q: Is the maximum number of players of Abalone equal to 6?
 SPARQL: ASK WHERE { wd:Q17247 wdt:P1873 ?obj filter(?obj = 6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Abalone', 'p': 'maximum number of players', 'o': '?x0', '?x0': '6'}

 Q: What is {team} of {teleplay by} of {Ripper} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1477823 wdt:P58 ?X . ?X wdt:P54 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ripper', 'p': 'teleplay by', 'o': '$y0'}}

 Q: Is it true that the admission rate of the Massachusetts Institute of Technology equals to 0.08?
 SPARQL: ASK WHERE { wd:Q49108 wdt:P5822 ?obj filter(?obj = 0.08) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Massachusetts Institute of Technology', 'p': 'admission rate', 'o': '?x0', '?x0': '0.08'}

 Q: What is the fault of Nazca Plate?
 SPARQL: select distinct ?answer where { ?answer wdt:P5095 wd:Q538867}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fault', 'o': 'Nazca Plate'}

 Q: what is the {start time} for {Tashkent} has {country} as {Uzbekistan} ?
 SPARQL: SELECT ?value WHERE { wd:Q269 p:P17 ?s . ?s ps:P17 wd:Q265 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tashkent', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Uzbekistan'}}}

 Q: How many {category contains} are to/by {castle} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4224 wd:Q23413 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'category contains', 'o': 'castle'}

 Q: Does the illiterate population of the Asanbani equal 0?
 SPARQL: ASK WHERE { wd:Q60376426 wdt:P6498 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Asanbani', 'p': 'illiterate population', 'o': '?x0', '?x0': '0'}

 Q: What is {net profit} of {Nissan} that is {sourcing circumstances} is {fiscal year} ?
 SPARQL: SELECT ?obj WHERE { wd:Q20165 p:P2295 ?s . ?s ps:P2295 ?obj . ?s pq:P1480 wd:Q191891 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'net profit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nissan', 'p': 'net profit', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'fiscal year'}}}

 Q: what is the {end time} for {Jagiellonian University} has {rector} as {Andrzej Pelczar} ?
 SPARQL: SELECT ?value WHERE { wd:Q189441 p:P1075 ?s . ?s ps:P1075 wd:Q515383 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jagiellonian University', 'p': 'rector', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'rector', 'o': 'Andrzej Pelczar'}}}

 Q: What is {discoverer} of {natural selection}, that has {birth year} is {1809-2-12} ?
 SPARQL: SELECT ?answer WHERE { wd:Q43478 wdt:P61 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1809'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'natural selection', 'p': 'discoverer', 'o': '?x0', 't': '1809'}

 Q: What is {position held} of {Carlos Andrés Pérez da costa} that is {replaced by} is {Luis Herrera Campins} ?
 SPARQL: SELECT ?obj WHERE { wd:Q295790 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q455661 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carlos Andres Perez', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Luis Herrera Campins'}}}

 Q: What is the profession of Henry Washington Younger sons?
 SPARQL: SELECT ?answer WHERE { wd:Q5729891 wdt:P40 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Washington Younger', 'p': 'son', 'o': '$y0'}}

 Q: Which is the vertical depth for Lake Winnipeg?
 SPARQL: select distinct ?answer where { wd:Q3272 wdt:P4511 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake Winnipeg', 'p': 'vertical depth', 'o': '?x0'}

 Q: what is the {sourcing circumstances} for {Roald Amundsen} has {place of death} as {Bear Island} ?
 SPARQL: SELECT ?value WHERE { wd:Q926 p:P20 ?s . ?s ps:P20 wd:Q194364 . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roald Amundsen', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Bear Island'}}}

 Q: Is the career plus-minus rating of the Roland Eriksson equal to -70?
 SPARQL: ASK WHERE { wd:Q283133 wdt:P6547 ?obj filter(?obj = -70) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Roland Eriksson', 'p': 'career plus-minus rating', 'o': '?x0', '?x0': '-70'}

 Q: What is the Forth Bridge's Historic Scotland ID number?
 SPARQL: select distinct ?answer where { wd:Q275 wdt:P709 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Forth Bridge', 'p': 'Historic Scotland ID', 'o': '?x0'}

 Q: Who is the producer and executive producer of Fight Club?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q190050 wdt:P162 ?ans_1 . wd:Q190050 wdt:P1431 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Fight Club', 'p': 'producer', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Fight Club', 'p': 'executive producer', 'o': '?x1'}]

 Q: Do the aftershocks of the 2011 Lorca earthquake equal 131
 SPARQL: ASK WHERE { wd:Q584613 wdt:P2320 ?obj filter(?obj = 131) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2011 Lorca earthquake', 'p': 'aftershocks', 'o': '?x0', '?x0': '131'}

 Q: Was Genghis Khan's wife named Yesui?
 SPARQL: ASK WHERE { wd:Q720 wdt:P26 wd:Q4177257 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Genghis Khan', 'p': 'wife', 'o': '?x0', '?x0': 'Yesui'}]

 Q: What was the political party membership of Robert Moses?
 SPARQL: SELECT ?answer WHERE { wd:Q1111386 wdt:P102 ?X . ?X wdt:P2124 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'membership', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Moses', 'p': 'party', 'o': '$y0'}}

 Q: What is the {single} for {tracklist} of {Led Zeppelin IV}
 SPARQL:  select distinct ?obj where { wd:Q201940 wdt:P658 ?obj . ?obj wdt:P31 wd:Q134556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Led Zeppelin IV', 'p': 'tracklist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single'}}

 Q: What's Russia's inception?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q159 wdt:P571 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Russia', 'p': 'inception', 'o': '?x0'}

 Q: Is the coastline of borovoe less than 16.32?
 SPARQL: ASK WHERE { wd:Q5092054 wdt:P5141 ?obj filter(?obj < 16.32) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Borovoe', 'p': 'coastline', 'o': '?x0', '?x0': '16.32'}

 Q: Is the mean age of England less than 30.88?
 SPARQL: ASK WHERE { wd:Q21 wdt:P4442 ?obj filter(?obj < 30.88) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'England', 'p': 'mean age', 'o': '?x0', '?x0': '30.88'}

 Q: How many demonyms are there for Croatia?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q224 wdt:P1549 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Croatia', 'p': 'demonym', 'o': '?x0'}

 Q: What is the {human} for {place of death} of {Thessaloniki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P20 wd:Q17151 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of death', 'o': 'Thessaloniki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is occupation of the TV host of Top Gear?
 SPARQL: SELECT ?answer WHERE { wd:Q33162 wdt:P371 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'occupation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Top Gear', 'p': 'host', 'o': '$y0'}}

 Q: Who was Emmylou Harris' spouse in 1984?
 SPARQL: SELECT ?obj WHERE { wd:Q231286 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Emmylou Harris', 'p': 'spouse', 'o': '?x0', 't': '1984'}

 Q: How many {does not have part} are to/by {antimatter} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3113 wd:Q83197 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'does not have part', 'o': 'antimatter'}

 Q: What is {deathdate} of {inventor} of {Messier 83} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14030 wdt:P61 ?X . ?X wdt:P570 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'deathdate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 83', 'p': 'inventor', 'o': '$y0'}}

 Q: What is {position held} of {Stanley Baldwin} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q166635 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanley Baldwin', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanley Baldwin', 'p': 'position held', 'o': '$y0'}}]

 Q: Is Tony Robbins' occupation motivational speaker and manager?
 SPARQL: ASK WHERE { wd:Q380429 wdt:P106 wd:Q15982858 . wd:Q380429 wdt:P106 wd:Q6746710 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Tony Robbins', 'p': 'occupation', 'o': '?x0', '?x0': 'motivational speaker'}, {'h': 'IS', 'v': '?x1', 's': 'Tony Robbins', 'p': 'occupation', 'o': '?x1', '?x1': 'manager'}]

 Q: What is {field of study} of {supervisor} of {Sonia Fisch-Muller} ?
 SPARQL: SELECT ?answer WHERE { wd:Q25368065 wdt:P184 ?X . ?X wdt:P2650 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of study', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sonia Fisch-Muller', 'p': 'supervisor', 'o': '$y0'}}

 Q: Who is often confused with the snake that has a higher taxon than Ophidia
 SPARQL: SELECT ?answer WHERE { wd:Q2102 wdt:P1889 ?answer . ?answer wdt:P171 wd:Q16986904}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'snake', 'p': 'confused with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'higher taxon', 'o': 'Ophidia'}}

 Q: Is the incidence of pancreatic cancer less than 1.6?
 SPARQL: ASK WHERE { wd:Q212961 wdt:P2844 ?obj filter(?obj < 1.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'pancreatic cancer', 'p': 'incidence', 'o': '?x0', '?x0': '1.6'}

 Q: What is {coordinate location} of {Amur} that is {applies to part} is {river mouth} ?
 SPARQL: SELECT ?obj WHERE { wd:Q6862 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q1233637 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amur', 'p': 'coordinates', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river mouth'}}}

 Q: What is {script} of {previous job holder} of {Modern English} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1649537 wdt:P1365 ?X . ?X wdt:P282 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'script', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Modern English', 'p': 'previous job holder', 'o': '$y0'}}

 Q: What is {followed by} and {follows} of {{Star Wars Episode V: The Empire Strikes Back} has {series} as {Star Wars original trilogy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q181795 p:P179 ?s . ?s ps:P179 wd:Q25540859 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars original trilogy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars original trilogy'}}}]

 Q: What is the {architectural structure} for {architectural style} of {Bauhaus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P149 wd:Q124354 . ?sbj wdt:P31 wd:Q811979 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architectural style', 'o': 'Bauhaus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'architectural structure'}}

 Q: "Who is {brother or sister} of {Khadijah bint Khuwaylid}, which has {marry} is {Safiyyah bint ‘Abd al-Muttalib} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q42034 wdt:P3373 ?answer . ?answer wdt:P26 wd:Q2740828}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Khadijah', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'marry', 'o': 'Safiyyah bint ‘Abd al-Muttalib'}}

 Q: Who  is married to Cheryl Tiegs in the year 1981?
 SPARQL: SELECT ?obj WHERE { wd:Q2408009 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cheryl Tiegs', 'p': 'married to', 'o': '?x0', 't': '1981'}

 Q: what is the {determination method} for {Meknes} has {number of households} as {100470.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q178663 p:P1538 ?s . ?s ps:P1538 ?x filter(contains(?x,'100470.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Meknes', 'p': 'number of households', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of households', 'o': '100470.0'}}}

 Q: What award did George Marshall receive on May the 4th, 1959?
 SPARQL: SELECT ?obj WHERE { wd:Q151414 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1959')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Marshall', 'p': 'award', 'o': '?x0', 't': '1959'}

 Q: what is the {statement is subject of} for {Geoffrey Rush} has {nominated for} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q166272 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geoffrey Rush', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: What is {workplace} of {Cnut the Great}, that has {diplomatic relation} is {Romania}
 SPARQL: SELECT ?answer WHERE { wd:Q134128 wdt:P937 ?answer . ?answer wdt:P530 wd:Q218}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cnut the Great', 'p': 'workplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Romania'}}

 Q: Did {Dave_Grohl} {member of political party} {Democratic Party}?
 SPARQL: ASK WHERE { wd:Q12006 wdt:P102 wd:Q29552 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Dave Grohl', 'p': 'member of political party', 'o': '?x0', '?x0': 'Democratic Party'}]

 Q: Is the optimum viable temperature of the Marichromatium sp. 24.0
 SPARQL: ASK WHERE { wd:Q29565261 wdt:P3253 ?obj filter(?obj = 24.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Marichromatium sp.', 'p': 'optimum viable temperature', 'o': '?x0', '?x0': '24.0'}

 Q: Which is the 90minut player ID of Robert Lewandowski?
 SPARQL: select distinct ?answer where { wd:Q151269 wdt:P3605 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Lewandowski', 'p': '90minut player ID', 'o': '?x0'}

 Q: Which is the taxon synonym of Ochotona?
 SPARQL: select distinct ?answer where { wd:Q184067 wdt:P1420 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ochotona', 'p': 'taxon synonym', 'o': '?x0'}

 Q: what is the {statement is subject of} for {Utah} has {shares border with} as {Wyoming} ?
 SPARQL: SELECT ?value WHERE { wd:Q829 p:P47 ?s . ?s ps:P47 wd:Q1214 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Utah', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'border', 'o': 'Wyoming'}}}

 Q: Is the electronegativity of the sodium less than 1.2?
 SPARQL: ASK WHERE { wd:Q658 wdt:P1108 ?obj filter(?obj < 1.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'sodium', 'p': 'electronegativity', 'o': '?x0', '?x0': '1.2'}

 Q: what is the {end time} for {Andrew Barton Paterson} has {residence} as {Binalong} ?
 SPARQL: SELECT ?value WHERE { wd:Q436699 p:P551 ?s . ?s ps:P551 wd:Q2903896 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andrew Barton Paterson', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Binalong'}}}

 Q: Ethanol is of what ZINC ID?
 SPARQL: select distinct ?answer where { wd:Q153 wdt:P2084 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ethanol', 'p': 'ZINC ID', 'o': '?x0'}

 Q: Is the minimum wavelength of sensitivity of the Large Synoptic Survey Telescope 320?
 SPARQL: ASK WHERE { wd:Q672021 wdt:P3738 ?obj filter(?obj = 320) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Large Synoptic Survey Telescope', 'p': 'minimum wavelength of sensitivity', 'o': '?x0', '?x0': '320'}

 Q: What is {location of death} of {Yemelyan Pugachev}, that has {county seat of} is {Moscow Oblast} ?
 SPARQL: SELECT ?answer WHERE { wd:Q154240 wdt:P20 ?answer . ?answer wdt:P1376 wd:Q1697}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yemelyan Pugachev', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat of', 'o': 'Moscow Oblast'}}

 Q: Tell me the metropolitan area that is maintained by the Metropolitan Manila Development Authority and starts with the letter m?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1907114 . ?sbj wdt:P126 wd:Q259278 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolitan area', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'maintained by', 'o': 'Metropolitan Manila Development Authority'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is {directs} of {holds position} of {Odo of Scarpone} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16027431 wdt:P39 ?X . ?X wdt:P2389 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'directs', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Odo of Scarpone', 'p': 'holds position', 'o': '$y0'}}

 Q: What is {member of sports team} of {Abedi Pele} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q336916 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abedi Pele', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abedi Pele', 'p': 'team', 'o': '$y0'}}]

 Q: What is the toponym of the Island of Montreal that has a geographic coordinate of -73.555?
 SPARQL: SELECT ?answer WHERE { wd:Q292354 wdt:P138 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-73.555'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Island of Montreal', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'geographic coordinate', 'o': '-73.555'}}

 Q: What is {population} of {Porto Alegre} that is {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q40269 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Porto Alegre', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: what is the {start time} for {Neil Simon} has {spouse} as {Marsha Mason} ?
 SPARQL: SELECT ?value WHERE { wd:Q315808 p:P26 ?s . ?s ps:P26 wd:Q235211 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neil Simon', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Marsha Mason'}}}

 Q: What award did Yasser Arafat receive, and what was the amount of money he won?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q34211 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yasser Arafat', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yasser Arafat', 'p': 'award', 'o': '$y0'}}]

 Q: What is {gender expression} of {Maudgalyayana}, that has {shortened name} is {чол} ?
 SPARQL: SELECT ?answer WHERE { wd:Q379814 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'чол'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maudgalyayana', 'p': 'gender expression', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'чол'}}

 Q: What is the dam of Lake Gordon
 SPARQL: select distinct ?answer where { wd:Q366813 wdt:P4792 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake Gordon', 'p': 'dam', 'o': '?x0'}

 Q: What is the {human} for {patron saint} of {Society of Jesus}
 SPARQL:  select distinct ?obj where { wd:Q36380 wdt:P417 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Society of Jesus', 'p': 'patron saint', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When did Kofi Annan receive the award Confucius Peace Prize?
 SPARQL: SELECT ?value WHERE { wd:Q1254 p:P166 ?s . ?s ps:P166 wd:Q1192712 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kofi Annan', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Confucius Peace Prize'}, 't': '?x0'}

 Q: What is the native language of Modern Standard Arabic?
 SPARQL: select distinct ?answer where { ?answer wdt:P103 wd:Q56467}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'native language', 'o': 'Modern Standard Arabic'}

 Q: What is the border of the death location of Tommy Douglas?
 SPARQL: SELECT ?answer WHERE { wd:Q359653 wdt:P20 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tommy Douglas', 'p': 'death location', 'o': '$y0'}}

 Q: how many hold the coat of arms?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P237 wd:Q14659 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'coat of arms'}

 Q: what is the {start time} for {Margaret Mead} has {spouse} as {Gregory Bateson} ?
 SPARQL: SELECT ?value WHERE { wd:Q180099 p:P26 ?s . ?s ps:P26 wd:Q314252 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Margaret Mead', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Gregory Bateson'}}}

 Q: What is {position held} of {Winston Churchill} that is {elected in} is {United Kingdom general election, 1935} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8016 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 wd:Q918378 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Winston Churchill', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'elected in', 'o': 'United Kingdom general election, 1935'}}}

 Q: what is the {start time} for {George Canning} has {position held} as {Secretary of State for Foreign and Commonwealth Affairs} ?
 SPARQL: SELECT ?value WHERE { wd:Q219731 p:P39 ?s . ?s ps:P39 wd:Q1371091 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Canning', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary of State for Foreign and Commonwealth Affairs'}}}

 Q: What is the quantity of honorific suffix for a Doctor of Philosophy?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1035 wd:Q752297 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'honorific suffix', 'o': 'Doctor of Philosophy'}

 Q: What is GAMECIP media format ID for Blu-ray Disc ?
 SPARQL: select distinct ?answer where { wd:Q47770 wdt:P5371 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Blu-ray Disc', 'p': 'GAMECIP media format ID', 'o': '?x0'}

 Q: What is <original combination> of <blue whale> ?
 SPARQL: select distinct ?answer where { wd:Q42196 wdt:P1403 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'blue whale', 'p': 'original combination', 'o': '?x0'}

 Q: What is {sports} of {succeded by} of {1993 Rally GB} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6361563 wdt:P156 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sport', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1993 Rally GB', 'p': 'succeded by', 'o': '$y0'}}

 Q: Who is the officeholder of United Nations Secretary-General?
 SPARQL: select distinct ?answer where { wd:Q81066 wdt:P1308 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'United Nations Secretary-General', 'p': 'officeholder', 'o': '?x0'}

 Q: What is the {sexual preference} for {health specialty} of {psychotherapy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1995 wd:Q183257 . ?sbj wdt:P31 wd:Q2275640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'health specialty', 'o': 'psychotherapy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sexual preference'}}

 Q: what is the {end time} for {Urban II} has {position held} as {cardinal-bishop} ?
 SPARQL: SELECT ?value WHERE { wd:Q30578 p:P39 ?s . ?s ps:P39 wd:Q1729113 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Urban II', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'cardinal-bishop'}}}

 Q: How many {studied by} are to/by {astronomy} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2579 wd:Q333 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'astronomy'}

 Q: What is the {Population I star} for {parent astronomical body} of {Uranus}
 SPARQL:  select distinct ?obj where { wd:Q324 wdt:P397 ?obj . ?obj wdt:P31 wd:Q3592493 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Uranus', 'p': 'parent astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Population I star'}}

 Q: What is SSRN author ID for Fischer Black ?
 SPARQL: select distinct ?answer where { wd:Q963275 wdt:P3747 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fischer Black', 'p': 'SSRN author ID', 'o': '?x0'}

 Q: who sexual preference for studied by of psychotherapy?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2579 wd:Q183257 . ?sbj wdt:P31 wd:Q2275640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'psychotherapy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sexual preference'}}

 Q: What are thegroup or class of chemical substances which start with the letter vitamin
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17339814 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vitamin')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group or class of chemical substances'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vitamin'}}

 Q: What is the {communist party} for {secretary general} of {Xi Jinping}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3975 wd:Q15031 . ?sbj wdt:P31 wd:Q233591 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'secretary general', 'o': 'Xi Jinping', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'communist party'}}

 Q: Who was the member of the sports team of Gordon Banks until 1-1-1959?
 SPARQL: SELECT ?obj WHERE { wd:Q213879 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1959')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gordon Banks', 'p': 'team', 'o': '?x0', 't': '1959'}

 Q: What is the luxury yacht with the highest beam whose manufacturer is Lürssen?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q443802 . ?ent wdt:P2261 ?obj . ?ent wdt:P176 wd:Q657096 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'beam', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'luxury yacht', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Lürssen'}}}

 Q: What is {has grammatical mood} of {French} that is {statement is subject of} is {French indicative} ?
 SPARQL: SELECT ?obj WHERE { wd:Q150 p:P3161 ?s . ?s ps:P3161 ?obj . ?s pq:P805 wd:Q3150151 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mood', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'French', 'p': 'mood', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'French indicative'}}}

 Q: what is the {electoral district} for {Shinzō Abe} has {position held} as {member of the House of Representatives of Japan} ?
 SPARQL: SELECT ?value WHERE { wd:Q132345 p:P39 ?s . ?s ps:P39 wd:Q17506823 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shinzō Abe', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the House of Representatives of Japan'}}}

 Q: Which  is participant in  conflict  branch of Charles Whitman ?
 SPARQL: SELECT ?answer WHERE { wd:Q453209 wdt:P241 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Whitman', 'p': 'branch', 'o': '$y0'}}

 Q: Tell me me a video game console model whose name consist of the " wii" and whose input method Classic Controller
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56682555 . ?sbj wdt:P479 wd:Q2573628 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wii')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game console model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'input method', 'o': 'Classic Controller'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wii'}}

 Q: When was Lou Reed awarded o the Rock and Roll Hall of Fame?
 SPARQL: SELECT ?value WHERE { wd:Q189080 p:P166 ?s . ?s ps:P166 wd:Q179191 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lou Reed', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Rock and Roll Hall of Fame'}, 't': '?x0'}

 Q: What is {educated at} of {Guion Bluford} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q528943 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guion Bluford', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guion Bluford', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the statement is subject of Nigeria whose diplomatic relation is Cameroon?
 SPARQL: SELECT ?value WHERE { wd:Q1033 p:P530 ?s . ?s ps:P530 wd:Q1009 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nigeria', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'diplomatic relation', 'o': 'Cameroon'}}}

 Q: What is the {single} for {performer} of {Hrithik Roshan}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P175 wd:Q233619 . ?sbj wdt:P31 wd:Q134556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Hrithik Roshan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single'}}

 Q: Give me {commune of France with specific status} that {list of monuments} {list of monuments in Lyon} and which contains the word {lyon} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22927616 . ?sbj wdt:P1456 wd:Q3252117 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'lyon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France with specific status', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'list of monuments', 'o': 'list of monuments in Lyon'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'lyon'}}

 Q: What is the {medical specialty} for {health specialty} of {cancer}
 SPARQL:  select distinct ?obj where { wd:Q12078 wdt:P1995 ?obj . ?obj wdt:P31 wd:Q930752 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cancer', 'p': 'health specialty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical specialty'}}

 Q: What is the mean anomaly of Ceres that equals 138.662?
 SPARQL: SELECT ?value WHERE { wd:Q596 p:P2325 ?s . ?s ps:P2325 ?x filter(contains(?x,'138.662')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ceres', 'p': 'mean anomaly', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mean anomaly', 'o': '138.662'}, 't': '?x0'}

 Q: Who is a member of the school attended by Sidney Mintz?
 SPARQL: SELECT ?answer WHERE { wd:Q327017 wdt:P69 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sidney Mintz', 'p': 'school attended', 'o': '$y0'}}

 Q: What is {co-founder} of {publishing house} of {Journal of experimental psychology. Human learning and memory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27711480 wdt:P123 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'co-founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Journal of experimental psychology. Human learning and memory', 'p': 'publishing house', 'o': '$y0'}}

 Q: How many {partnership with} are for {Autonomous University of Barcelona} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q43452 wdt:P2652 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Autonomous University of Barcelona', 'p': 'partnership with', 'o': '?x0'}

 Q: What is the {business} for {headquarters location} of {Cleveland}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q37320 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Cleveland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is Hansard (1803–2005) ID for Clement Attlee?
 SPARQL: select distinct ?answer where { wd:Q129006 wdt:P2015 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Clement Attlee', 'p': 'Hansard (1803–2005) ID', 'o': '?x0'}

 Q: What is the {compact space} for {solved by} of {Grigori Perelman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1136 wd:Q117346 . ?sbj wdt:P31 wd:Q381892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'solved by', 'o': 'Grigori Perelman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'compact space'}}

 Q: What is the {comune of Italy} for {patron saint} of {Thomas Aquinas}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q9438 . ?sbj wdt:P31 wd:Q747074 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Thomas Aquinas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comune of Italy'}}

 Q: What is the {epic poem} for {present in work} of {Hera}
 SPARQL:  select distinct ?obj where { wd:Q38012 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q37484 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hera', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'epic poem'}}

 Q: What is {date of death} of {Hippocrates} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5264 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hippocrates', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'c'}}}

 Q: Who is the  {protein} for {physically interacts with} of {diazepam}
 SPARQL:  select distinct ?obj where { wd:Q210402 wdt:P129 ?obj . ?obj wdt:P31 wd:Q8054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diazepam', 'p': 'physically interacts with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'protein'}}

 Q: What is {position held} of {George Reid} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q23352 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Reid', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Reid', 'p': 'position held', 'o': '$y0'}}]

 Q: Is it true that the electorate of Del Carmen is greater than 8388?
 SPARQL: ASK WHERE { wd:Q28735 wdt:P1831 ?obj filter(?obj > 8388.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Del Carmen', 'p': 'electorate', 'o': '?x0', '?x0': '8388.0'}

 Q: What is the think tank for the Smithsonian Institution's parent organization?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q131626 . ?sbj wdt:P31 wd:Q155271 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Smithsonian Institution', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'think tank'}}

 Q: Which is the locality of Vojvodina having a diplomatic relation of Holy See?
 SPARQL: SELECT ?answer WHERE { wd:Q44749 wdt:P131 ?answer . ?answer wdt:P530 wd:Q159583}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vojvodina', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Holy See'}}

 Q: What is the diocese of Paris archdiocese?
 SPARQL:  select distinct ?obj where { wd:Q90 wdt:P708 ?obj . ?obj wdt:P31 wd:Q2072238 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paris', 'p': 'diocese', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archdiocese'}}

 Q: Is the budget of Tinkoff equal to 19200000?
 SPARQL: ASK WHERE { wd:Q62424 wdt:P2769 ?obj filter(?obj = 19200000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tinkoff', 'p': 'budget', 'o': '?x0', '?x0': '19200000.0'}

 Q: Give me {use} that contains the word {tinder} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1724915 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tinder')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'use'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tinder'}}

 Q: Tell me how many kids Amlaib's sister has.
 SPARQL: SELECT ?answer WHERE { wd:Q281752 wdt:P3373 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kid', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amlaib', 'p': 'sister', 'o': '$y0'}}

 Q: What is informed by Saul Bellow whose nom-de-amore is Horatio?
 SPARQL: SELECT ?answer WHERE { wd:Q83059 wdt:P737 ?answer . ?answer wdt:P742 ?x FILTER(contains(?x,'Horatio'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saul Bellow', 'p': 'informed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'nom-de-amore', 'o': 'horatio'}}

 Q: Which is the Jewish Encyclopedia Daat ID for Numbers?
 SPARQL: select distinct ?answer where { wd:Q43099 wdt:P3710 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Numbers', 'p': 'Jewish Encyclopedia Daat ID', 'o': '?x0'}

 Q: Who is Taxi Driver's film editor and director?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q47221 wdt:P1040 ?ans_1 . wd:Q47221 wdt:P57 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Taxi Driver', 'p': 'film editor', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Taxi Driver', 'p': 'director', 'o': '?x1'}]

 Q: what is the {end time} for {Beverly Sills} has {position held} as {chairperson} ?
 SPARQL: SELECT ?value WHERE { wd:Q235517 p:P39 ?s . ?s ps:P39 wd:Q140686 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beverly Sills', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'chairperson'}}}

 Q: How many permanently duplicated items are associated with July?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2959 wd:Q121 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'duplicate', 'o': 'July'}

 Q: Did {Karen_Carpenter} {occupation} {singer} and {Ringo Starr} ?
 SPARQL: ASK WHERE { wd:Q1250861 wdt:P106 wd:Q177220 . wd:Q1250861 wdt:P106 wd:Q2632 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Karen Carpenter', 'p': 'occupation', 'o': '?x0', '?x0': 'singer'}, {'h': 'IS', 'v': '?x1', 's': 'Karen Carpenter', 'p': 'occupation', 'o': '?x1', '?x1': 'Ringo Starr'}]

 Q: Which Radofin MSX has the fastest clock speed?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q853547 . ?ent wdt:P2149 ?obj . ?ent wdt:P178 wd:Q3928891 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'clock speed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'MSX', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Radofin'}}}

 Q: what is the {end time} for {Friedrich Nietzsche} has {educated at} as {University of Bonn} ?
 SPARQL: SELECT ?value WHERE { wd:Q9358 p:P69 ?s . ?s ps:P69 wd:Q152171 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Friedrich Nietzsche', 'p': 'education', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'education', 'o': 'University of Bonn'}}}

 Q: What is {educated at} of {Ralph Abernathy} that is {academic degree} is {Master of Arts} ?
 SPARQL: SELECT ?obj WHERE { wd:Q545488 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q2091008 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ralph Abernathy', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Master of Arts'}}}

 Q: What is {followed by} and {follows} of {{Clovis I} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q82339 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What is the mineral resource that starts with the letter 'p'?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q889659 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral resource'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is the {human} for {doctoral student} of {Janet Yellen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P185 wd:Q263725 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Janet Yellen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {inspired by} and the {influenced by} of {Statue_of_Liberty} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q9202 wdt:P941 ?ans_1 . wd:Q9202 wdt:P737 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Statue of Liberty', 'p': 'inspiration', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Statue of Liberty', 'p': 'influenced by', 'o': '?x1'}]

 Q: Is the binding energy of the neon-20 equal to 160644.8?
 SPARQL: ASK WHERE { wd:Q1956685 wdt:P2154 ?obj filter(?obj = 160644.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'neon-20', 'p': 'binding energy', 'o': '?x0', '?x0': '160644.8'}

 Q: What is allegiance of Mughal Empire ?
 SPARQL: select distinct ?answer where { ?answer wdt:P945 wd:Q33296}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'allegiance', 'o': 'Mughal Empire'}

 Q: what is the {point in time} for {Frederick Sanger} has {academic degree} as {doctor honoris causa} ?
 SPARQL: SELECT ?value WHERE { wd:Q151564 p:P512 ?s . ?s ps:P512 wd:Q11415564 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Frederick Sanger', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'doctor honoris causa'}, 't': '?x0'}

 Q: What are the honours of Bill T. Jones whose winner is Jule Styne?
 SPARQL: SELECT ?answer WHERE { wd:Q2903368 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q587741}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bill T. Jones', 'p': 'honours', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Jule Styne'}}

 Q: What is the {business} for {owner of} of {American Airlines}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1830 wd:Q32396 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owner of', 'o': 'American Airlines', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What county seat of Kathmandu, has mains electricity voltage of 230.0?
 SPARQL: SELECT ?answer WHERE { wd:Q3037 wdt:P1376 ?answer . ?answer wdt:P2884 ?x FILTER(contains(?x,'230.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kathmandu', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mains electricity voltage', 'o': '230.0'}}

 Q: Give me {anime television series} that {original network} {Nippon BS Broadcasting} and which that starts with {'l'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11086742 . ?sbj wdt:P449 wd:Q843957 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anime television', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'network', 'o': 'Nippon BS Broadcasting'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Which is the tributary orientation for Ottawa River?
 SPARQL: select distinct ?answer where { wd:Q60974 wdt:P3871 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ottawa River', 'p': 'tributary orientation', 'o': '?x0'}

 Q: What is <BDFutbol player ID> of <Allan Simonsen> ?
 SPARQL: select distinct ?answer where { wd:Q153463 wdt:P3655 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Allan Simonsen', 'p': 'BDFutbol player ID', 'o': '?x0'}

 Q: Who gave the {postal index number} of {resident in} of {Robert Pattinson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q36767 wdt:P551 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'postal index number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Pattinson', 'p': 'resident in', 'o': '$y0'}}

 Q: What is {educated at} of {Douglas Adams} that is {academic major} is {English literature} ?
 SPARQL: SELECT ?obj WHERE { wd:Q42 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q186579 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Douglas Adams', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic major', 'o': 'English literature'}}}

 Q: What is {label} of {Jefferson Airplane}, that has {co-founder} is {Emile Berliner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q488260 wdt:P264 ?answer . ?answer wdt:P112 wd:Q71004}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jefferson Airplane', 'p': 'label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Emile Berliner'}}

 Q: Which is the objective of project or mission of the nuclear weapon?
 SPARQL: select distinct ?answer where { ?answer wdt:P3712 wd:Q12802}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'objective', 'o': 'nuclear weapon'}

 Q: What are the commune of France with specific status which start with the letter E
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22927616 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'è')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France with specific status'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'è'}}

 Q: What is the legal citation for Roe v. Wade?
 SPARQL: select distinct ?answer where { wd:Q300950 wdt:P1031 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roe v. Wade', 'p': 'citation', 'o': '?x0'}

 Q: What is the {historical country} for {replaced by} of {Kingdom of Great Britain}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1366 wd:Q161885 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Great Britain', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: Which is the day of week of Saturday?
 SPARQL: select distinct ?answer where { ?answer wdt:P2894 wd:Q131}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'day of week', 'o': 'Saturday'}

 Q: What geographical region and terrain feature is Thessaloniki located among?
 SPARQL:  select distinct ?obj where { wd:Q17151 wdt:P706 ?obj . ?obj wdt:P31 wd:Q82794 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thessaloniki', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'region'}}

 Q: Who stepped down as the excavation director of works in Pompeii in 1825?
 SPARQL: SELECT ?obj WHERE { wd:Q43332 p:P4345 ?s . ?s ps:P4345 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1825')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pompeii', 'p': 'excavation director', 'o': '?x0', 't': '1825'}

 Q: Give me {vegetation zone} that contains the word {taiga} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2083910 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taiga')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vegetation zone'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'taiga'}}

 Q: Is the price of the Kuwaiti dinar less than 3.6?
 SPARQL: ASK WHERE { wd:Q193098 wdt:P2284 ?obj filter(?obj < 3.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Kuwaiti dinar', 'p': 'price', 'o': '?x0', '?x0': '3.6'}

 Q: what is the {criterion used} for {Florence Griffith-Joyner} has {record held} as {200 metres} ?
 SPARQL: SELECT ?value WHERE { wd:Q31082 p:P1000 ?s . ?s ps:P1000 wd:Q211155 . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Florence Griffith', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': '200 meter'}}}

 Q: What is {educated at} of {Herbert Hoover} that is {start time} is {1891-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q35236 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1891')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Herbert Hoover', 'p': 'educated at', 'o': '?x0', 't': '1891'}

 Q: what is the {end time} for {Manchukuo} has {capital} as {Hsinking} ?
 SPARQL: SELECT ?value WHERE { wd:Q30623 p:P36 ?s . ?s ps:P36 wd:Q92237 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Manchukuo', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': 'Hsinking'}}}

 Q: Give me {state of Australia} that {executive body} {Government of South Australia} and which contains the word {australia} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5852411 . ?sbj wdt:P208 wd:Q3112580 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'australia')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state of Australia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive body', 'o': 'Government of South Australia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'australia'}}

 Q: How many {described by source} are to/by {The Times} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1343 wd:Q50008 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'Times'}

 Q: Who gave the {interment} of {consecrated by} of {Klaus Dick} ?
 SPARQL: SELECT ?answer WHERE { wd:Q76132 wdt:P1598 ?X . ?X wdt:P119 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'interment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Klaus Dick', 'p': 'consecrated by', 'o': '$y0'}}

 Q: When G. Evelyn Hutchinson was awarded Kyoto Prize in Basic Sciences?
 SPARQL: SELECT ?value WHERE { wd:Q302752 p:P166 ?s . ?s ps:P166 wd:Q18344281 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'G. Evelyn Hutchinson', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Kyoto Prize in Basic Sciences'}, 't': '?x0'}

 Q: What is the {vanity label} for {manager/director} of {David Foster}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1037 wd:Q77112 . ?sbj wdt:P31 wd:Q2510436 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manager', 'o': 'David Foster', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vanity label'}}

 Q: Who was the head coach of the Pittsburgh Steelers until December 26, 1991?
 SPARQL: SELECT ?obj WHERE { wd:Q191477 p:P286 ?s . ?s ps:P286 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pittsburgh Steelers', 'p': 'head coach', 'o': '?x0', 't': '1991'}

 Q: what is the {has cause} for {Van Morrison} has {spouse} as {Michelle Rocca} ?
 SPARQL: SELECT ?value WHERE { wd:Q272203 p:P26 ?s . ?s ps:P26 wd:Q372148 . ?s pq:P828 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Van Morrison', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Michelle Rocca'}}}

 Q: Are people or cargo transported in an ambulance?
 SPARQL: select distinct ?answer where { wd:Q180481 wdt:P3437 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ambulance', 'p': 'people or cargo transported', 'o': '?x0'}

 Q: is the minimum number of players of The Settlers of Catan more than 2.4?
 SPARQL: ASK WHERE { wd:Q17271 wdt:P1872 ?obj filter(?obj > 2.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'The Settlers of Catan', 'p': 'minimum number of players', 'o': '?x0', '?x0': '2.4'}

 Q: What is <MYmovies movie ID> of <Game of Thrones> ?
 SPARQL: select distinct ?answer where { wd:Q23572 wdt:P4780 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Game of Thrones', 'p': 'MYmovies movie ID', 'o': '?x0'}

 Q: What is {twin town} of {birth location} of {George Cukor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q56014 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Cukor', 'p': 'birth location', 'o': '$y0'}}

 Q: What is the genetic association of the regulates (molecular biology) of the hsa-miR-6887-5p?
 SPARQL: SELECT ?answer WHERE { wd:Q27593985 wdt:P128 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hsa-miR-6887-5p', 'p': 'regulates (molecular biology)', 'o': '$y0'}}

 Q: What are list of monuments in Rennes?
 SPARQL: select distinct ?answer where { wd:Q647 wdt:P1456 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rennes', 'p': 'list of monuments', 'o': '?x0'}

 Q: What is {raw material} of {square} of {Pippinger Straße 37 (München)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18745045 wdt:P669 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'raw material', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pippinger Straße 37 (München)', 'p': 'square', 'o': '$y0'}}

 Q: Which is the chartered company is a public company in it's legal form and whose name contains the word company?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q162157 . ?sbj wdt:P1454 wd:Q891723 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chartered company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'legal form', 'o': 'public company'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'company'}}

 Q: How many input methods are there for the Wii U?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q56942 wdt:P479 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Wii U', 'p': 'input method', 'o': '?x0'}

 Q: If the gender of Alwin Nikolais is the antonym of female, what gender is he?
 SPARQL: SELECT ?answer WHERE { wd:Q449880 wdt:P21 ?answer . ?answer wdt:P461 wd:Q6581072}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alwin Nikolais', 'p': 'gender', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'antonym', 'o': 'female'}}

 Q: Does the width of the Hermannskarsee equal 0.12?
 SPARQL: ASK WHERE { wd:Q260850 wdt:P2049 ?obj filter(?obj = 0.12) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hermannskarsee', 'p': 'width', 'o': '?x0', '?x0': '0.12'}

 Q: At the Wan Chai station, are there 2.4 platform faces?
 SPARQL: ASK WHERE { wd:Q15811 wdt:P5595 ?obj filter(?obj = 2.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Wan Chai station', 'p': 'platform faces', 'o': '?x0', '?x0': '2.4'}

 Q: What is <uBio ID> of <Hylidae> ?
 SPARQL: select distinct ?answer where { wd:Q53696 wdt:P4728 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hylid', 'p': 'uBio ID', 'o': '?x0'}

 Q: What is <draftexpress.com ID> of <LeBron James> ?
 SPARQL: select distinct ?answer where { wd:Q36159 wdt:P3533 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'LeBron James', 'p': 'draftexpress.com ID', 'o': '?x0'}

 Q: What is the number of points/goals/set scored for Ali Daei, the member of sports team of Saipa F.C.?
 SPARQL: SELECT ?value WHERE { wd:Q159622 p:P54 ?s . ?s ps:P54 wd:Q782983 . ?s pq:P1351 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Saipa F.C.'}}}

 Q: What is the name of the location of death for Socrates, whose governor is Marta Suplicy?
 SPARQL: SELECT ?answer WHERE { wd:Q102331 wdt:P20 ?answer . ?answer wdt:P6 wd:Q463614}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Socrates', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'governor', 'o': 'Marta Suplicy'}}

 Q: Which is the house commissioned by James Watt?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P88 wd:Q9041 . ?sbj wdt:P31 wd:Q3947 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'James Watt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'house'}}

 Q: What team was Pele' apart of on January 1st 1957?
 SPARQL: SELECT ?obj WHERE { wd:Q12897 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1957')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pele', 'p': 'team', 'o': '?x0', 't': '1957'}

 Q: what is the {criterion used} for {September} has {series ordinal} as {9} ?
 SPARQL: SELECT ?value WHERE { wd:Q123 p:P1545 ?s . ?s ps:P1545 ?x filter(contains(?x,'9')) . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'September', 'p': 'series ordinal', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '9'}}}

 Q: What is {country of origin} of {Boney M.} that is {start time} is {1975-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q156298 p:P495 ?s . ?s ps:P495 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Boney M.', 'p': 'country of origin', 'o': '?x0', 't': '1975'}

 Q: What was the earthquake magnitude on the moment magnitude scale of the 2011 Tōhoku earthquake and tsunami?
 SPARQL: select distinct ?answer where { wd:Q36204 wdt:P2527 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '2011 Tōhoku earthquake and tsunami', 'p': 'earthquake magnitude on the moment magnitude scale', 'o': '?x0'}

 Q: What was approved by Fuji followed by McIntosh?
 SPARQL: SELECT ?value WHERE { wd:Q504893 p:P156 ?s . ?s ps:P156 wd:Q1144556 . ?s pq:P790 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'approved by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fuji', 'p': 'followed by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'followed by', 'o': 'McIntosh'}}}

 Q: What is the {country club} with the {MAX(par)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1137210 . ?ent wdt:P3530 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'par', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country club'}}

 Q: Which are the studies for toxin?
 SPARQL: select distinct ?answer where { ?answer wdt:P2578 wd:Q184651}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'toxin'}

 Q: What is {followed by} and {follows} of {{Chlothar II} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q209118 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: In 2016, what was the net profit of UnitedHealth Group?
 SPARQL: SELECT ?obj WHERE { wd:Q2103926 p:P2295 ?s . ?s ps:P2295 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'UnitedHealth Group', 'p': 'net profit', 'o': '?x0', 't': '2016'}

 Q: Which is the rank for the taxon rank of the blue whale?
 SPARQL:  select distinct ?obj where { wd:Q42196 wdt:P105 ?obj . ?obj wdt:P31 wd:Q3100180 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'blue whale', 'p': 'taxon rank', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rank'}}

 Q: Which is the conjugate acid for nitric acid?
 SPARQL: select distinct ?answer where { ?answer wdt:P4147 wd:Q83320}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'nitric acid'}

 Q: what is the {start time} for {Potsdam} has {located in the administrative territorial entity} as {Province of Brandenburg} ?
 SPARQL: SELECT ?value WHERE { wd:Q1711 p:P131 ?s . ?s ps:P131 wd:Q700264 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starting', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Potsdam', 'p': 'is located in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'is located in', 'o': 'Province of Brandenburg'}}}

 Q: What country did Virginia Woolf have citizenship for starting January 25, 1882?
 SPARQL: SELECT ?obj WHERE { wd:Q40909 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1882')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Virginia Woolf', 'p': 'citizenship', 'o': '?x0', 't': '1882'}

 Q: Name a movie featuring Burt Reynolds
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P161 wd:Q202148 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'featuring', 'o': 'Burt Reynolds', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie'}}

 Q: What is the {country} for {ethnic group} of {Indigenous peoples of the United States}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P172 wd:Q49297 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'ethnic group', 'o': 'American Indians', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is the born on of advisor of Gaston Bachelard ?
 SPARQL: SELECT ?answer WHERE { wd:Q270800 wdt:P184 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gaston Bachelard', 'p': 'advisor', 'o': '$y0'}}

 Q: What is {category of associated people} of {active in} of {Éamon de Valera} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173347 wdt:P937 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eamon de Valera', 'p': 'active in', 'o': '$y0'}}

 Q: What is the {museum} for {place of death} of {Mahatma Gandhi}
 SPARQL:  select distinct ?obj where { wd:Q1001 wdt:P20 ?obj . ?obj wdt:P31 wd:Q33506 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mahatma Gandhi', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'museum'}}

 Q: What is {topic of} of {history of anarchism}, that has {to be distinguished from} is {Illegalism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2746978 wdt:P1269 ?answer . ?answer wdt:P1889 wd:Q1516296}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of anarchism', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'distinguished from', 'o': 'illegalism'}}

 Q: does the lenth of provartenka equal to 0?
 SPARQL: ASK WHERE { wd:Q61870762 wdt:P2043 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Provartenka', 'p': 'length', 'o': '?x0', '?x0': '0'}

 Q: Who are the daughters of the author of Black Lamb and Grey Falcon?
 SPARQL: SELECT ?answer WHERE { wd:Q4921153 wdt:P50 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Black Lamb and Grey Falcon', 'p': 'author', 'o': '$y0'}}

 Q: Does the Seeteufel beam equal 2?
 SPARQL: ASK WHERE { wd:Q320214 wdt:P2261 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Seeteufel', 'p': 'beam', 'o': '?x0', '?x0': '2'}

 Q: Tell me chartered company whose name has the word company in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q162157 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chartered company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'company'}}

 Q: Was Oda Nobunaga born on June 23, 1534?
 SPARQL: SELECT ?value WHERE { wd:Q171411 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1534')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oda Nobunaga', 'p': 'born on', 'o': '$y0'}}

 Q: Which state has the city that is the twin city of Geneva?
 SPARQL: SELECT ?answer WHERE { wd:Q71 wdt:P190 ?X . ?X wdt:P17 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'state', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geneva', 'p': 'twin city', 'o': '$y0'}}

 Q: "Where is {birth place} of {Louis Timothee}, which has {member of} is {Treaty on Open Skies} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q6688279 wdt:P19 ?answer . ?answer wdt:P463 wd:Q1928989}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louis Timothee', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Treaty on Open Skies'}}

 Q: What point in time did Indonesia have the inflation rate of 17.1?
 SPARQL: SELECT ?value WHERE { wd:Q252 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'17.1')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Indonesia', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '17.1'}, 't': '?x0'}

 Q: what is the {subject has role} for {caffeine} has {physically interacts with} as {Inositol 1,4,5-trisphosphate receptor type 1} ?
 SPARQL: SELECT ?value WHERE { wd:Q60235 p:P129 ?s . ?s ps:P129 wd:Q21107812 . ?s pq:P2868 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject has role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'caffeine', 'p': 'physically interacts with', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'physically interacts with', 'o': 'Inositol 1,4,5-trisphosphate receptor type 1'}}}

 Q: In the country of  Singapore what are the A.P.J Abdul Kalam languages?
 SPARQL: SELECT ?answer WHERE { wd:Q9513 wdt:P1412 ?answer . ?answer wdt:P131 wd:Q334}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Abdul Kalam', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Singapore'}}

 Q: What is the Bildindex der Kunst und Architektur ID for The Night Watch?
 SPARQL: select distinct ?answer where { wd:Q219831 wdt:P2092 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Night Watch', 'p': 'Bildindex der Kunst und Architektur ID', 'o': '?x0'}

 Q: What is Flickr's software framework in its current version 3.16.10?
 SPARQL: SELECT ?answer WHERE { wd:Q103204 wdt:P1547 ?answer . ?answer wdt:P348 ?x FILTER(contains(?x,'3.16.10'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Flickr', 'p': 'software framework', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'version', 'o': '3.16.10'}}

 Q: What is {award received} of {Marianne Moore} that is {point in time} is {1952-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q278495 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1952')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marianne Moore', 'p': 'award', 'o': '?x0', 't': '1952'}

 Q: Tell me carbine whose name has the word zastava in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q183302 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zastava')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'carbine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zastava'}}

 Q: What is {work period (start)} and {work period (end)} of {{Nastia Liukin} has {sport} as {female artistic gymnastics}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q230164 p:P641 ?s . ?s ps:P641 wd:Q3122646 . ?s pq:P2031 ?value1 . ?s pq:P2032 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (start)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nastia Liukin', 'p': 'sport', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sport', 'o': 'female artistic gymnastics'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'work period (end)', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nastia Liukin', 'p': 'sport', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sport', 'o': 'female artistic gymnastics'}}}]

 Q: How many border shares with the City of Cape Town?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1185115 wdt:P47 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'City of Cape Town', 'p': 'border', 'o': '?x0'}

 Q: What is {competed in} of {Fulgencio Batista}, that has {starttime} is {1933-9-4} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11270 wdt:P1344 ?answer . ?answer wdt:P580 ?x FILTER(contains(YEAR(?x),'1933'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fulgencio Batista', 'p': 'competed in', 'o': '?x0', 't': '1933'}

 Q: What is <JMDb person or company ID> of <Kenji Mizoguchi> ?
 SPARQL: select distinct ?answer where { wd:Q55401 wdt:P3703 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kenji Mizoguchi', 'p': 'JMDb person or company ID', 'o': '?x0'}

 Q: What is {award received} of {Chow Yun-fat} that is {for work} is {Hong Kong 1941} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181425 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q5894138 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chow Yun-fat', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Hong Kong 1941'}}}

 Q: When did animated character for characters of The Lion King?
 SPARQL:  select distinct ?obj where { wd:Q36479 wdt:P674 ?obj . ?obj wdt:P31 wd:Q15711870 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Lion King', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated character'}}

 Q: What is the name o an historical country that starts with the letter r.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3024240 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What is the China National Petroleum Corporation headquarters location that is located at 9 Dongzhimen North Street, Dongcheng District?
 SPARQL: SELECT ?obj WHERE { wd:Q588786 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x filter(contains(?x,'9 Dongzhimen North Street, Dongcheng District')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'China National Petroleum Corporation', 'p': 'headquarters location', 'o': '?x0'}

 Q: explain me that the artistic type that contains the word of venus which has its own name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16767597 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'venus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'artistic type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'venus'}}

 Q: What is movement for Renaissance music ?
 SPARQL: select distinct ?answer where { ?answer wdt:P135 wd:Q201405}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'movement', 'o': 'Renaissance music'}

 Q: What is the series ordinal of Philip V of France's child Margaret I, Countess of Burgundy?
 SPARQL: SELECT ?value WHERE { wd:Q8433 p:P40 ?s . ?s ps:P40 wd:Q261999 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip V of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Margaret I, Countess of Burgundy'}}}

 Q: How many terminus locations are by California?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P609 wd:Q99 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'terminus location', 'o': 'California'}

 Q: When did award received of Rabindranath Tagore and prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7241 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rabindranath Tagore', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rabindranath Tagore', 'p': 'award received', 'o': '$y0'}}]

 Q: Is it true that the number of participants of 2013 OFC under 17 Tournament is greater than 4.8?
 SPARQL: ASK WHERE { wd:Q2943686 wdt:P1132 ?obj filter(?obj > 4.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '2013 OFC Under 17 Tournament', 'p': 'number of participants', 'o': '?x0', '?x0': '4.8'}

 Q: How many {depicts} are for {Mona Lisa} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q12418 wdt:P180 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Mona Lisa', 'p': 'depicts', 'o': '?x0'}

 Q: Wich means{FIPS 5-2 alpha code (US states)}in {North Carolina} ?
 SPARQL: select distinct ?answer where { wd:Q1454 wdt:P5086 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'North Carolina', 'p': 'FIPS 5-2 alpha code (US states)', 'o': '?x0'}

 Q: Was Jupiter's child astronomical body Amalthea?
 SPARQL: ASK WHERE { wd:Q319 wdt:P398 wd:Q3257 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jupiter', 'p': 'child astronomical body', 'o': '?x0', '?x0': 'Amalthea'}]

 Q: Is the moisture absorption rate of the akroloy para ICF 40 equal to 1.1?
 SPARQL: ASK WHERE { wd:Q57273218 wdt:P5594 ?obj filter(?obj = 1.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AKROLOY PARA ICF 40', 'p': 'moisture absorption', 'o': '?x0', '?x0': '1.1'}

 Q: What position does the nominee for 'One Ok Rock' currently hold?
 SPARQL: SELECT ?answer WHERE { wd:Q1072736 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'One Ok Rock', 'p': 'nominee for', 'o': '$y0'}}

 Q: Was David_Bowie record label EMI?
 SPARQL: ASK WHERE { wd:Q5383 wdt:P264 wd:Q183412 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bowie', 'p': 'record label', 'o': '?x0', '?x0': 'EMI'}]

 Q: What is <ISBN-10> of <For Whom the Bell Tolls> ?
 SPARQL: select distinct ?answer where { wd:Q200920 wdt:P957 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'For Whom the Bell Tolls', 'p': 'ISBN-10', 'o': '?x0'}

 Q: what is the {acquisition transaction} for {George Best} has {member of sports team} as {Dunstable Town F.C.} ?
 SPARQL: SELECT ?value WHERE { wd:Q164521 p:P54 ?s . ?s ps:P54 wd:Q5315710 . ?s pq:P1642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'acquisition transaction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Best', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Dunstable Town'}}}

 Q: Tell me an ancient civilization whose name has the word urartu in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28171280 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'urartu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient civilization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'urartu'}}

 Q: Who is the cast member of Thomas Mitchell?
 SPARQL: select distinct ?answer where { ?answer wdt:P161 wd:Q317026}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cast member', 'o': 'Thomas Mitchell'}

 Q: What is {landscape of} of {representative work} of {Susan Luery} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15649005 wdt:P800 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'landscape of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Susan Luery', 'p': 'work', 'o': '$y0'}}

 Q: What is {portrait of} of {Fine Wind, Clear Morning}, that has {coordinate location} is {35.3625} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3565037 wdt:P180 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'35.3625'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fine Wind, Clear Morning', 'p': 'portrait of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinate location', 'o': '35.3625'}}

 Q: Is the General Electric stock exchange ticker symbol GE?
 SPARQL: SELECT ?obj WHERE { wd:Q54173 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x filter(contains(?x,'GE')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stock exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'General Electric', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ticker symbol', 'o': 'ge'}}}

 Q: What are the physical quantity that measured by watt per meter kelvin and which that starts with the letter c
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj wdt:P1880 wd:Q1463969 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical quantity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'watt per meter kelvin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: How many programmers work for John Carmack?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P943 wd:Q92605 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'programmer', 'o': 'John Carmack'}

 Q: Who is the husband of the actor in Psycho?
 SPARQL: SELECT ?answer WHERE { wd:Q163038 wdt:P161 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'husband', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Psycho', 'p': 'actor', 'o': '$y0'}}

 Q: what is the {start time} for {Pierre Laval} has {position held} as {Deputy Prime Minister of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q151983 p:P39 ?s . ?s ps:P39 wd:Q19018261 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pierre Laval', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Deputy Prime Minister of France'}}}

 Q: What award did Pete Seeger receive in the year 1977?
 SPARQL: SELECT ?obj WHERE { wd:Q244441 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pete Seeger', 'p': 'award', 'o': '?x0', 't': '1977'}

 Q: Tell me steroid hormone whose name has the world testosterone in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q422137 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'testosterone')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steroid hormone'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'testosterone'}}

 Q: What is {foundation} of {alumna of} of {David Brudnoy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15516751 wdt:P69 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'foundation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Brudnoy', 'p': 'alumna of', 'o': '$y0'}}

 Q: What is the street address of the territorial administrative entity of the Arc de Triomphe?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q64436 wdt:P669 ?ans_1 . wd:Q64436 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Arc de Triomphe', 'p': 'street', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Arc de Triomphe', 'p': 'in', 'o': '?x1'}]

 Q: what is the {start time} for {Old City of Jerusalem} has {country} as {Kingdom of Jerusalem} ?
 SPARQL: SELECT ?value WHERE { wd:Q213274 p:P17 ?s . ?s ps:P17 wd:Q55502 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Old City', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Kingdom of Jerusalem'}}}

 Q: Who is Lockheed C-130 Hercules' operator and developer?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q182027 wdt:P137 ?ans_1 . wd:Q182027 wdt:P178 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Lockheed C-130 Hercules', 'p': 'operator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Lockheed C-130 Hercules', 'p': 'developer', 'o': '?x1'}]

 Q: What is {diplomatic relation} of {Kingdom of the Netherlands} that is {statement is subject of} is {Belgium–Netherlands relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q29999 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q2684149 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'the Netherlands', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Belgium–Netherlands relations'}}}

 Q: What is {child} of {Charlemagne} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}]

 Q: What is the {place of burial} and the {place of death} of {Akhenaten} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q81794 wdt:P119 ?ans_1 . wd:Q81794 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Akhenaten', 'p': 'place of burial', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Akhenaten', 'p': 'place of death', 'o': '?x1'}]

 Q: Mention the date of birth and death of Louis IX of France having child Peter, Count of Perche and Alençon
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 wd:Q739327 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Peter, Count of Perche and Alençon'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Peter, Count of Perche and Alençon'}}}]

 Q: Where was James Clerk Maxwell born in Scotland?
 SPARQL: SELECT ?obj WHERE { wd:Q9095 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q22 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Clerk Maxwell', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'Scotland'}}}

 Q: What was the inflation rate in Jordan in 1981?
 SPARQL: SELECT ?obj WHERE { wd:Q810 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jordan', 'p': 'inflation rate', 'o': '?x0', 't': '1981'}

 Q: What is the full name of this Lucy and Ricky Ricardo musician?
 SPARQL: SELECT ?answer WHERE { wd:Q6698594 wdt:P175 ?answer . ?answer wdt:P1477 ?x FILTER(contains(?x,'Lucille Désirée Ball'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lucy and Ricky Ricardo', 'p': 'musician', 'o': '?x0'}

 Q: What is <audio recording of the subject's spoken voice> of <Charles Duke> ?
 SPARQL: select distinct ?answer where { wd:Q112284 wdt:P990 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Duke', 'p': "audio recording of the subject's spoken voice", 'o': '?x0'}

 Q: Which infectious disease is caused by Staphylococcus aureus?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P828 wd:Q188121 . ?sbj wdt:P31 wd:Q18123741 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause', 'o': 'Staphylococcus aureus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'infectious disease'}}

 Q: How many parent taxons does Brassicaceae have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P171 wd:Q156888 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'parent taxon', 'o': 'Brassicaceae'}

 Q: Who is the  {human} for {record held} of {marathon}
 SPARQL:  select distinct ?obj where { wd:Q40244 wdt:P1000 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'marathon', 'p': 'record held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What was the significant event celebrated in the honor of Hans-Georg Gadamer on February 11, 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q76356 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hans-Georg Gadamer', 'p': 'significant event', 'o': '?x0', 't': '2000'}

 Q: What is {convicted of} of {Chris Brown} that is {target} is {Rihanna} ?
 SPARQL: SELECT ?obj WHERE { wd:Q155700 p:P1399 ?s . ?s ps:P1399 ?obj . ?s pq:P533 wd:Q36844 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'convicted of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chris Brown', 'p': 'convicted of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'target', 'o': 'Rihanna'}}}

 Q: What is <National Thesaurus for Author Names ID> of <Georges Bataille> ?
 SPARQL: select distinct ?answer where { wd:Q207359 wdt:P1006 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georges Bataille', 'p': 'National Thesaurus for Author Names ID', 'o': '?x0'}

 Q: What is Rumi's culture and religion?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q43347 wdt:P2596 ?ans_1 . wd:Q43347 wdt:P140 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Rumi', 'p': 'culture', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Rumi', 'p': 'religion', 'o': '?x1'}]

 Q: What is the {human} for {movement} of {Christian Science}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P135 wd:Q624477 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'movement', 'o': 'Christian Science', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Tell me mineral resource whose name has the word petroleum in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q889659 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'petroleum')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral resource'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'petroleum'}}

 Q: What is {painters} of {characters} of {Wolves Beyond the Border} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8030575 wdt:P674 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wolves Beyond the Border', 'p': 'characters', 'o': '$y0'}}

 Q: What is the {human} for {founded by} of {judo}
 SPARQL:  select distinct ?obj where { wd:Q11420 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'judo', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the noble title given to Georges Cuvier on December 29, 1829?
 SPARQL: SELECT ?obj WHERE { wd:Q171969 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1829')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Georges Cuvier', 'p': 'noble title', 'o': '?x0', 't': '1829'}

 Q: What is the {media company} for {follows} of {Comcast}
 SPARQL:  select distinct ?obj where { wd:Q1113804 wdt:P155 ?obj . ?obj wdt:P31 wd:Q1331793 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Comcast', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'media company'}}

 Q: What is {nominated for} of {Sally Field} that is {statement is subject of} is {52nd Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q187033 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q543438 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sally Field', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '52nd Academy Awards'}}}

 Q: The UIC alphabetical country code of Lebanon is?
 SPARQL: select distinct ?answer where { wd:Q822 wdt:P2981 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lebanon', 'p': 'UIC alphabetical country code', 'o': '?x0'}

 Q: What is {open period to} and {closed on} of {{British Museum} has {open days} as {all weekdays}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 wd:Q26214163 . ?s pq:P3028 ?value1 . ?s pq:P3026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'closed on', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}]

 Q: who theater for location of Soviet Union?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q15180 . ?sbj wdt:P31 wd:Q718893 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theater'}}

 Q: Is it true that the maximum thrust of the Pratt & Whitney F100 is equal to 17800?
 SPARQL: ASK WHERE { wd:Q1154115 wdt:P2228 ?obj filter(?obj = 17800) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Pratt & Whitney F100', 'p': 'maximum thrust', 'o': '?x0', '?x0': '17800'}

 Q: Which is the place of death of Robert Aldrich?
 SPARQL: select distinct ?answer where { wd:Q95133 wdt:P20 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Aldrich', 'p': 'place of death', 'o': '?x0'}

 Q: What is {child} of {Frederick William I of Prussia} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0'}}]

 Q: What is {ethnicity} of {Luigi Pirandello}, that has {science, that studies} is {Italian studies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1403 wdt:P172 ?answer . ?answer wdt:P2579 wd:Q515601}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Luigi Pirandello', 'p': 'ethnicity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'science, that studies', 'o': 'Italian studies'}}

 Q: What is {has planet} of {makes use of} of {sundial} ?
 SPARQL: SELECT ?answer WHERE { wd:Q80793 wdt:P2283 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has planet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'sundial', 'p': 'makes use of', 'o': '$y0'}}

 Q: What is {position held} of {Martin McGuinness} that is {end time} is {2017-1-26} ?
 SPARQL: SELECT ?obj WHERE { wd:Q57689 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Martin McGuinness', 'p': 'position held', 'o': '?x0', 't': '2017'}

 Q: What is {inception} of {Gregorian calendar} that is {applies to jurisdiction} is {Papal States} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12138 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P1001 wd:Q170174 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'introduced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregorian calendar', 'p': 'introduced', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to jurisdiction', 'o': 'Papal States'}}}

 Q: Is the minimum explosive concentration of dinitro-ortho-cresol equal to 30?
 SPARQL: ASK WHERE { wd:Q209437 wdt:P2204 ?obj filter(?obj = 30) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'dinitro-ortho-cresol', 'p': 'minimum explosive concentration', 'o': '?x0', '?x0': '30'}

 Q: When did Barbara Payton the spouse of Franchot Tone die ?
 SPARQL: SELECT ?value WHERE { wd:Q457229 p:P26 ?s . ?s ps:P26 wd:Q4859221 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franchot Tone', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Barbara Payton'}}}

 Q: What is {position held} of {Sargon II} that is {start time} is {-721-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q208336 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(?x,'-721-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sargon II', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'started in', 'o': '-721-0-0'}}}

 Q: Due to what disease for anatomical location of human leg
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P927 wd:Q6027402 . ?sbj wdt:P31 wd:Q12136 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'human leg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: When was LeBron James nominated for Best Male Athlete ESPY Award?
 SPARQL: SELECT ?value WHERE { wd:Q36159 p:P1411 ?s . ?s ps:P1411 wd:Q4896724 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'LeBron James', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Best Male Athlete ESPY Award'}, 't': '?x0'}

 Q: What is <CPU> of <electronic component> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P880 wd:Q11653}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CPU', 'o': 'electronic component'}

 Q: What is the {airliner bombing} with the {MIN(number of survivors)} whose {participant} is {Umar Farouk Abdulmutallab}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q19354904 . ?ent wdt:P1561 ?obj . ?ent wdt:P710 wd:Q983843} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of survivors', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airliner bombing', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Umar Farouk Abdulmutallab'}}}

 Q: What is {first name} of {Joe Cocker}, that has {is said to be the same as} is {Ion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q190076 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1671988}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joe Cocker', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Ion'}}

 Q: "Which is {namesake} of {Lagrange multiplier}, that has {studies} is {mathematical analysis} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q598870 wdt:P138 ?answer . ?answer wdt:P101 wd:Q7754}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lagrange multiplier', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'mathematical analysis'}}

 Q: What is the {film character} for {characters} of {E.T. the Extra-Terrestrial}
 SPARQL:  select distinct ?obj where { wd:Q11621 wdt:P674 ?obj . ?obj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'E.T. the Extra-Terrestrial', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character'}}

 Q: What is the median income of Hong Kong
 SPARQL: select distinct ?answer where { wd:Q8646 wdt:P3529 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hong Kong', 'p': 'median income', 'o': '?x0'}

 Q: what was the  facet and  history of topic of copyright?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q12948581 wdt:P1269 ?ans_1 . wd:Q12948581 wdt:P2184 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'copyright', 'p': 'topic of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'copyright', 'p': 'history of topic', 'o': '?x1'}]

 Q: Which is the ULAN ID of Charles Rennie Mackintosh?
 SPARQL: select distinct ?answer where { wd:Q220703 wdt:P245 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Rennie Mackintosh', 'p': 'ULAN ID', 'o': '?x0'}

 Q: What is the {human spaceflight} for {member of the crew of} of {Christa McAuliffe}
 SPARQL:  select distinct ?obj where { wd:Q229674 wdt:P5096 ?obj . ?obj wdt:P31 wd:Q752783 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Christa McAuliffe', 'p': 'member of the crew of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human spaceflight'}}

 Q: Who is a graduate of John Key, who is a member of the Association of Research Libraries?
 SPARQL: SELECT ?answer WHERE { wd:Q57783 wdt:P69 ?answer . ?answer wdt:P463 wd:Q4810036}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Key', 'p': 'graduate of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Association of Research Libraries'}}

 Q: What is the {book publishing company} for {developer} of {Final Fantasy}
 SPARQL:  select distinct ?obj where { wd:Q189842 wdt:P178 ?obj . ?obj wdt:P31 wd:Q1320047 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Final Fantasy', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book publishing company'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Richie McCaw} has {member of sports team} as {New Zealand national rugby union team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q726148 p:P54 ?s . ?s ps:P54 wd:Q55801 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richie McCaw', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'New Zealand national rugby union team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richie McCaw', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'New Zealand national rugby union team'}}}]

 Q: What statement is subject of Louisiana that shares border with Texas?
 SPARQL: SELECT ?value WHERE { wd:Q1588 p:P47 ?s . ?s ps:P47 wd:Q1439 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louisiana', 'p': 'shares border with', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'shares border with', 'o': 'Texas'}}}

 Q: How many military casualty classification are in the prisoner of war?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1347 wd:Q179637 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'military casualty classification', 'o': 'prisoner of war'}

 Q: Which is the Norsk kunstnerleksikon ID of Edvard Munch?
 SPARQL: select distinct ?answer where { wd:Q41406 wdt:P5081 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Edvard Munch', 'p': 'Norsk kunstnerleksikon ID', 'o': '?x0'}

 Q: what is the {start time} for {Charles the Fat} has {noble title} as {king of Aquitaine} ?
 SPARQL: SELECT ?value WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q23931012 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Aquitaine'}}}

 Q: Is the sports league level of Cypriot First Division equal to 1.2?
 SPARQL: ASK WHERE { wd:Q155965 wdt:P3983 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Cypriot First Division', 'p': 'sports league level', 'o': '?x0', '?x0': '1.2'}

 Q: What is {head of government} of {Munich} that is {end time} is {1993-6-30} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1726 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Munich', 'p': 'head of government', 'o': '?x0', 't': '1993'}

 Q: What is Dmitry Medvedev's Declarator.org ID?
 SPARQL: select distinct ?answer where { wd:Q23530 wdt:P1883 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dmitry Medvedev', 'p': 'Declarator.org ID', 'o': '?x0'}

 Q: Which means{fernsehserien.de ID} from {Cheers} ?
 SPARQL: select distinct ?answer where { wd:Q732063 wdt:P5327 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cheers', 'p': 'fernsehserien.de ID', 'o': '?x0'}

 Q: What is {country} of {Honolulu} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q18094 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honolulu', 'p': 'country', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'country', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honolulu', 'p': 'country', 'o': '$y0'}}]

 Q: Tell me video game whose name has the word zauberschloß in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7889 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zauberschloß')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zauberschloß'}}

 Q: How many people have been inspired by Batman?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q2695156 wdt:P941 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Batman', 'p': 'inspired by', 'o': '?x0'}

 Q: what is the honours of Fred Astaire, that has leader of James Mason ?
 SPARQL: SELECT ?answer WHERE { wd:Q100937 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q209186}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fred Astaire', 'p': 'honours', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'leader', 'o': 'James Mason'}}

 Q: What significant event applies to the jurisdiction of Charles I of Austria?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q51068 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P1001 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'jurisdiction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles I of Austria', 'p': 'significant event', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'significant event', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles I of Austria', 'p': 'significant event', 'o': '$y0'}}]

 Q: what is the {point in time} for {South America} has {number of out of school children} as {7.07274e+06} ?
 SPARQL: SELECT ?value WHERE { wd:Q18 p:P2573 ?s . ?s ps:P2573 ?x filter(contains(?x,'7.07274e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'South America', 'p': 'number of out of school children', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of out of school children', 'o': '7.07274e+06'}, 't': '?x0'}

 Q: How many {owned by} are to/by {NSDAP} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P127 wd:Q7320 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'NSDAP'}

 Q: What is ALCUIN ID for Dante Alighieri?
 SPARQL: select distinct ?answer where { wd:Q1067 wdt:P3126 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dante Alighieri', 'p': 'ALCUIN ID', 'o': '?x0'}

 Q: what is the {series ordinal} for {Johann Wolfgang von Goethe} has {given name} as {Johann} ?
 SPARQL: SELECT ?value WHERE { wd:Q5879 p:P735 ?s . ?s ps:P735 wd:Q11122389 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'goethe', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Johann'}}}

 Q: What is the procedural programming language designed by Grace Hopper ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q11641 . ?sbj wdt:P31 wd:Q28922885 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Grace Hopper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'procedural programming language'}}

 Q: Who is the subsidiary entity of the University of British Columbia that has superior formation over the University of Victoria?
 SPARQL: SELECT ?answer WHERE { wd:Q391028 wdt:P355 ?answer . ?answer wdt:P749 wd:Q1458113}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of British Columbia', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'superior formation', 'o': 'University of Victoria'}}

 Q: How many {exhibition history} are for {L'Origine du monde} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q334138 wdt:P608 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': "L'Origine du monde", 'p': 'exhibition history', 'o': '?x0'}

 Q: What is {animals housed} of {successor} of {İzmir Zoo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6055483 wdt:P156 ?X . ?X wdt:P1990 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'animals housed', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'İzmir Zoo', 'p': 'successor', 'o': '$y0'}}

 Q: what is the {start time} for {Bobby Moore} has {member of sports team} as {Seattle Sounders} ?
 SPARQL: SELECT ?value WHERE { wd:Q191492 p:P54 ?s . ?s ps:P54 wd:Q956200 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bobby Moore', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Seattle Sounders'}}}

 Q: What is {noble title} of {Louis the Pious} that is {end time} is {814-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43974 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P582 ?x filter(contains(?x,'814-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'noble title', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end time', 'o': '814-0-0'}}}

 Q: Who are the authors of The Republic, whose school is Platonism?
 SPARQL: SELECT ?answer WHERE { wd:Q123397 wdt:P50 ?answer . ?answer wdt:P135 wd:Q193589}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Republic', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'school', 'o': 'Platonism'}}

 Q: Which is the US Federal Election Commission ID of Carly Fiorina?
 SPARQL: select distinct ?answer where { wd:Q256380 wdt:P1839 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carly Fiorina', 'p': 'US Federal Election Commission ID', 'o': '?x0'}

 Q: How many record labels are with the {Trent Reznor} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q282722 wdt:P264 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Trent Reznor', 'p': 'record label', 'o': '?x0'}

 Q: What is {minimal incubation period in humans} of {target disease} of {Influenza vaccine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q383260 wdt:P1924 ?X . ?X wdt:P3488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'minimal incubation period in humans', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'influenza vaccine', 'p': 'target disease', 'o': '$y0'}}

 Q: Who was nominated for Monday Night Football in the year 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q1088765 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Monday Night Football', 'p': 'nominated for', 'o': '?x0', 't': '1980'}

 Q: what is the binary star has the highest color index?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q50053 . ?ent wdt:P1458 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'color index', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'binary star'}}

 Q: what is the {academic major} for {Howard H. Aiken} has {educated at} as {Harvard University} ?
 SPARQL: SELECT ?value WHERE { wd:Q299723 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Howard H. Aiken', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard University'}}}

 Q: What is the {chemical compound} for {conjugate base} of {water}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4149 wd:Q283 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate base', 'o': 'water', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is {employer} of {Bram Stoker} that is {start time} is {1878-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36184 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1878')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bram Stoker', 'p': 'employer', 'o': '?x0', 't': '1878'}

 Q: What is {place of death} of {Leo III} that is {country} is {Papal States} ?
 SPARQL: SELECT ?obj WHERE { wd:Q132086 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q170174 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leo III', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Papal States'}}}

 Q: Which is the Greater Region located on terrain feature of the classical antiquity?
 SPARQL:  select distinct ?obj where { wd:Q486761 wdt:P706 ?obj . ?obj wdt:P31 wd:Q1549534 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'classical antiquity', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greater Region'}}

 Q: Is the thermal design power of the Core i7-7700 equal to 65?
 SPARQL: ASK WHERE { wd:Q28973012 wdt:P2229 ?obj filter(?obj = 65) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Core i7-7700', 'p': 'thermal design power', 'o': '?x0', '?x0': '65'}

 Q: Give me {space observatory} that {start point} {ELA-3} and which contains the word {space} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q148578 . ?sbj wdt:P1427 wd:Q455731 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'space')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space observatory', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'ELA-3'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'space'}}

 Q: What is the {human} for {production designer} of {The Birth of a Nation}
 SPARQL:  select distinct ?obj where { wd:Q220394 wdt:P2554 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Birth of a Nation', 'p': 'production designer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the standard molar entropy of ethanol?
 SPARQL: select distinct ?answer where { wd:Q153 wdt:P3071 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethanol', 'p': 'standard molar entropy', 'o': '?x0'}

 Q: Who is the spouse of John Denver, who died in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q105460 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Denver', 'p': 'spouse', 'o': '?x0', 't': '1993'}

 Q: What is founded by University of Chicago for the role of donor?
 SPARQL: SELECT ?obj WHERE { wd:Q131252 p:P112 ?s . ?s ps:P112 ?obj . ?s pq:P3831 wd:Q1968442 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University of Chicago', 'p': 'founded by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'role', 'o': 'donor'}}}

 Q: How many {this taxon is source of} are to/by {Sichuan pepper} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1672 wd:Q756800 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'this taxon is source of', 'o': 'Sichuan pepper'}

 Q: What is {number of out of school children} of {Oceania} that is {point in time} is {2005-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q538 p:P2573 ?s . ?s ps:P2573 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oceania', 'p': 'number of out of school children', 'o': '?x0', 't': '2005'}

 Q: Who is the {human} for {place of death} of {Madrid}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P20 wd:Q2807 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of death', 'o': 'Madrid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {located on terrain feature} are to/by {Andaman Sea} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P706 wd:Q47632 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Andaman Sea'}

 Q: What is the vapor pressure of butane when its temperature is at 68.0?
 SPARQL: SELECT ?obj WHERE { wd:Q134192 p:P2119 ?s . ?s ps:P2119 ?obj . ?s pq:P2076 ?x filter(contains(?x,'68.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'vapor pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'butane', 'p': 'vapor pressure', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'temperature', 'o': '68.0'}}}

 Q: What is <produced by> of <coral> ?
 SPARQL: select distinct ?answer where { wd:Q171446 wdt:P2849 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'coral', 'p': 'produced by', 'o': '?x0'}

 Q: Who was the spouse of John Gilbert up until the beginning of 1931?
 SPARQL: SELECT ?obj WHERE { wd:Q503956 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1931')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Gilbert', 'p': 'spouse', 'o': '?x0', 't': '1931'}

 Q: Is the stated age at the event of the Hammou Mouhal greater than 30.4?
 SPARQL: ASK WHERE { wd:Q3126541 wdt:P3629 ?obj filter(?obj > 30.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Hammou Mouhal', 'p': 'age at event', 'o': '?x0', '?x0': '30.4'}

 Q: What is the {mass murder} for {immediate cause of} of {War on Terror}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1536 wd:Q185729 . ?sbj wdt:P31 wd:Q750215 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'immediate cause of', 'o': 'War on Terror', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mass murder'}}

 Q: What is {award received} of {Sidney Sheldon} that is {statement is subject of} is {20th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q105118 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q303473 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sidney Sheldon', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '20th Academy Awards'}}}

 Q: Who was Jiang Qing's spouse after 1936?
 SPARQL: SELECT ?obj WHERE { wd:Q236017 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1936')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jiang Qing', 'p': 'spouse', 'o': '?x0', 't': '1936'}

 Q: What is {pronunciation audio} of {ecology} that is {language of work or name} is {German} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7150 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q188 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ecology', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'German'}}}

 Q: What is {audio} of {harpsichord} that is {media legend} is {Preludi en do major de Johann Sebastian Bach per a clavicèmbal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q81982 p:P51 ?s . ?s ps:P51 ?obj . ?s pq:P2096 ?x filter(contains(?x,'Preludi en do major de Johann Sebastian Bach per a clavicèmbal')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'harpsichord', 'p': 'audio', 'o': '?x0'}

 Q: What is the partner town of the birth place of Leonardo DiCaprio?
 SPARQL: SELECT ?answer WHERE { wd:Q38111 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'partner town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leonardo DiCaprio', 'p': 'birth place', 'o': '$y0'}}

 Q: What is the {hypothesis} for {manifestation of} of {many-worlds interpretation}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q40590 . ?sbj wdt:P31 wd:Q41719 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'many-worlds interpretation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hypothesis'}}

 Q: What was Mickey Rourke nominated for and what award did he receive?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q178552 wdt:P1411 ?ans_1 . wd:Q178552 wdt:P166 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Mickey Rourke', 'p': 'nominated for', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Mickey Rourke', 'p': 'award', 'o': '?x1'}]

 Q: The biological process of learning is what?
 SPARQL: select distinct ?answer where { ?answer wdt:P682 wd:Q133500}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'biological process', 'o': 'learning'}

 Q: What Class IB flammable liquid has the highest time-weighted average exposure limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2404 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'time-weighted average exposure limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid'}}

 Q: What is Cao Xueqin's Eight Banner register?
 SPARQL: select distinct ?answer where { wd:Q182874 wdt:P470 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cao Xueqin', 'p': 'Eight Banner register', 'o': '?x0'}

 Q: Is the nominal GDP per capita of North Macedonia more than 5823.192?
 SPARQL: ASK WHERE { wd:Q221 wdt:P2132 ?obj filter(?obj > 5823.192) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'North Macedonia', 'p': 'nominal GDP per capita', 'o': '?x0', '?x0': '5823.192'}

 Q: What is the moveable object location of the Sicilian Expedition, that has a coordinate moveable object location of 14.0154?
 SPARQL: SELECT ?answer WHERE { wd:Q844289 wdt:P276 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'14.0154'))}
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Sicilian Expedition', 'p': 'location', 'o': '?x0', '?x0': '14.0154'}]

 Q: What is {chronology of topic} of {citizenship} of {Harry Chipeni} ?
 SPARQL: SELECT ?answer WHERE { wd:Q45781169 wdt:P27 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chronology of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harry Chipeni', 'p': 'citizenship', 'o': '$y0'}}

 Q: What is {has grammatical person} of {languages of expression} of {Magda Szabó} ?
 SPARQL: SELECT ?answer WHERE { wd:Q231948 wdt:P1412 ?X . ?X wdt:P5110 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical person', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Magda Szabó', 'p': 'languages of expression', 'o': '$y0'}}

 Q: What is the artfor of the moveable object location of Ärztestopp?
 SPARQL: SELECT ?answer WHERE { wd:Q256634 wdt:P276 ?X . ?X wdt:P805 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'artfor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ärztestopp', 'p': 'location', 'o': '$y0'}}

 Q: Which is the maximum operating altitude for Airbus A380?
 SPARQL: select distinct ?answer where { wd:Q5830 wdt:P2254 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Airbus A380', 'p': 'maximum operating altitude', 'o': '?x0'}

 Q: What was the population of San Francisco at the beginning of 1880?
 SPARQL: SELECT ?obj WHERE { wd:Q62 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1880')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'San Francisco', 'p': 'population', 'o': '?x0', 't': '1880'}

 Q: What is {Classification of Instructional Programs ID} of {aspect of} of {standard deviation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q159375 wdt:P1269 ?X . ?X wdt:P2357 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Classification of Instructional Programs ID', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'standard deviation', 'p': 'aspect of', 'o': '$y0'}}

 Q: What is {position held} of {Henry Temple, 3rd Viscount Palmerston} that is {end time} is {1841-6-23} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193656 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1841')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry Temple, 3rd Viscount Palmerston', 'p': 'position held', 'o': '?x0', 't': '1841'}

 Q: What is the {business} for {chief executive officer} of {Indra Nooyi}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q264913 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chief executive officer', 'o': 'Indra Nooyi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is <Fauna Europaea New ID> of <Annelida> ?
 SPARQL: select distinct ?answer where { wd:Q25522 wdt:P4807 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Annelida', 'p': 'Fauna Europaea New ID', 'o': '?x0'}

 Q: what is the {character role} for {Seventeen Moments of Spring} has {cast member} as {Nikolay Prokopovich} ?
 SPARQL: SELECT ?value WHERE { wd:Q472018 p:P161 ?s . ?s ps:P161 wd:Q4380349 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'character role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seventeen Moments of Spring', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Nikolay Prokopovich'}}}

 Q: What is the {monoanion} for {conjugate base} of {water}
 SPARQL:  select distinct ?obj where { wd:Q283 wdt:P4149 ?obj . ?obj wdt:P31 wd:Q55523986 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'water', 'p': 'conjugate base', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monoanion'}}

 Q: What is {took part in} of {Mark Skaife}, that has {outcome} is {1926 24 Hours of Le Mans} ?
 SPARQL: SELECT ?answer WHERE { wd:Q963937 wdt:P1344 ?answer . ?answer wdt:P793 wd:Q216349}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mark Skaife', 'p': 'took part', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'outcome', 'o': '1926 24 Hours of Le Mans'}}

 Q: What is <TV.com ID> of <Schindler's List> ?
 SPARQL: select distinct ?answer where { wd:Q483941 wdt:P2638 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Schindler's List", 'p': 'TV.com ID', 'o': '?x0'}

 Q: What is the {abstract strategy game} with the {MIN(minimum number of players)} whose {instance of} is {abstract strategy game}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q573573 . ?ent wdt:P1872 ?obj . ?ent wdt:P31 wd:Q573573} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'minimum number of players', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abstract strategy game'}}

 Q: On the date 29th January 2018 , what award was received by Joko Widodo?
 SPARQL: SELECT ?obj WHERE { wd:Q3318231 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joko Widodo', 'p': 'award', 'o': '?x0', 't': '2018'}

 Q: What is the {perpetual war} for {significant event} of {Cuban Missile Crisis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q128160 . ?sbj wdt:P31 wd:Q1469686 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Cuban Missile Crisis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'perpetual war'}}

 Q: What is the motif of the mascot of the Wisconsin Badgers?
 SPARQL: SELECT ?answer WHERE { wd:Q3098117 wdt:P822 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'motif', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wisconsin Badgers', 'p': 'mascot', 'o': '$y0'}}

 Q: What is the {safety classification and labelling} and the {found in taxon} of {Ethanol} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q153 wdt:P4952 ?ans_1 . wd:Q153 wdt:P703 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ethanol', 'p': 'safety classification and labelling', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ethanol', 'p': 'found in taxon', 'o': '?x1'}]

 Q: Is the damage cost of the Tulsa Massacre 30000000?
 SPARQL: ASK WHERE { wd:Q1824714 wdt:P2630 ?obj filter(?obj = 30000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tulsa Massacre', 'p': 'damage', 'o': '?x0', '?x0': '30000000'}

 Q: What is {commands} of {Anthony Eden}, that has {demolished} is {1966-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q128995 wdt:P598 ?answer . ?answer wdt:P576 ?x FILTER(contains(YEAR(?x),'1966'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Earl of Avon', 'p': 'commands', 'o': '?x0', 't': '1966'}

 Q: What award did John Wayne receive in 2007?
 SPARQL: SELECT ?obj WHERE { wd:Q40531 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Wayne', 'p': 'award', 'o': '?x0', 't': '2007'}

 Q: What is {label in original language} of {is daughter of} of {Tyr} ?
 SPARQL: SELECT ?answer WHERE { wd:Q172713 wdt:P22 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'label in original language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tyr', 'p': 'daughter of', 'o': '$y0'}}

 Q: Is the total votes of the Popular Initiative, "Protection Against Passive Smoking" 1150388?
 SPARQL: ASK WHERE { wd:Q3151185 wdt:P1111 ?obj filter(?obj = 1150388.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Popular initiative "protection against passive smoking"', 'p': 'votes received', 'o': '?x0', '?x0': '1150388.0'}

 Q: Is the draft of Adler XI equal to 1.45?
 SPARQL: ASK WHERE { wd:Q358239 wdt:P2262 ?obj filter(?obj = 1.45) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Adler XI', 'p': 'draft', 'o': '?x0', '?x0': '1.45'}

 Q: Which is the dual to the pyramid?
 SPARQL: select distinct ?answer where { wd:Q3358290 wdt:P1322 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pyramid', 'p': 'dual to', 'o': '?x0'}

 Q: Who is the inventor of Newton's law of motion, whose professorship position is Lucasian Professor of Mathematics?
 SPARQL: SELECT ?answer WHERE { wd:Q38433 wdt:P61 ?answer . ?answer wdt:P803 wd:Q865664}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Newton's law", 'p': 'inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'professorship', 'o': 'Lucasian Professor of Mathematics'}}

 Q: What is {end cause} and {elected in} of {{Park Geun-hye} has {position held} as {Member of National Assembly of South Korea}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q138048 p:P39 ?s . ?s ps:P39 wd:Q14850694 . ?s pq:P1534 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of National Assembly of South Korea'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of National Assembly of South Korea'}}}]

 Q: What is {noble title} of {Guy of Lusignan} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q294192 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is {characters} of {SpongeBob SquarePants} that is {voice actor} is {Clancy Brown} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83279 p:P674 ?s . ?s ps:P674 ?obj . ?s pq:P725 wd:Q4488 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'SpongeBob SquarePants', 'p': 'characters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'voice actor', 'o': 'Clancy Brown'}}}

 Q: What is {field of this profession} of {profession} of {Sataspes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q956216 wdt:P106 ?X . ?X wdt:P425 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of this profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sataspes', 'p': 'work', 'o': '$y0'}}

 Q: What is {border} of {place of activity} of {Paulo Freire} ?
 SPARQL: SELECT ?answer WHERE { wd:Q164797 wdt:P937 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paulo Freire', 'p': 'place of activity', 'o': '$y0'}}

 Q: What is {form of government} of {place of origin} of {death metal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q483251 wdt:P495 ?X . ?X wdt:P122 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'form of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'death metal', 'p': 'place of origin', 'o': '$y0'}}

 Q: what is the {start time} for {Fort Lauderdale} has {twinned administrative body} as {Astrakhan} ?
 SPARQL: SELECT ?value WHERE { wd:Q165972 p:P190 ?s . ?s ps:P190 wd:Q3927 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fort Lauderdale', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Astrakhan'}}}

 Q: What is {place of burial} of {Nestor Makhno} that is {Commons category} is {Grave of Nestor Makhno} ?
 SPARQL: SELECT ?obj WHERE { wd:Q47900 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P373 ?x filter(contains(?x,'Grave of Nestor Makhno')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nestor Makhno', 'p': 'place of burial', 'o': '?x0'}

 Q: What is the {transcontinental country} for {diplomatic relation} of {Empire of Japan}
 SPARQL:  select distinct ?obj where { wd:Q188712 wdt:P530 ?obj . ?obj wdt:P31 wd:Q1323642 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire of Japan', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'transcontinental country'}}

 Q: What is the {national library} for {archives at} of {James Joyce}
 SPARQL:  select distinct ?obj where { wd:Q6882 wdt:P485 ?obj . ?obj wdt:P31 wd:Q22806 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Joyce', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national library'}}

 Q: What murder method of Camaron de la Isla is due to air pollution?
 SPARQL: SELECT ?answer WHERE { wd:Q312093 wdt:P509 ?answer . ?answer wdt:P828 wd:Q131123}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Camaron', 'p': 'murder method', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'due to', 'o': 'air pollution'}}

 Q: What award was received by Seymour Hersh in 1970?
 SPARQL: SELECT ?obj WHERE { wd:Q435792 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Seymour Hersh', 'p': 'award', 'o': '?x0', 't': '1970'}

 Q: When did Liza Minnelli and her husband David Gest get divorced?
 SPARQL: SELECT ?value WHERE { wd:Q14441 p:P26 ?s . ?s ps:P26 wd:Q10264401 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divorced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Liza Minnelli', 'p': 'husband', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'husband', 'o': 'David Gest'}}}

 Q: How many symbols are there for Manitoba?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1948 wdt:P2238 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Manitoba', 'p': 'symbol', 'o': '?x0'}

 Q: Is Ceraunius' diamater higher than 0?
 SPARQL: ASK WHERE { wd:Q24064213 wdt:P2386 ?obj filter(?obj > 0.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Ceraunius', 'p': 'diameter', 'o': '?x0', '?x0': '0.0'}

 Q: Who was married to Faye Dunaway and when did it end?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q168721 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faye Dunaway', 'p': 'married to', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married to', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faye Dunaway', 'p': 'married to', 'o': '$y0'}}]

 Q: What are the Colonial Colleges which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1188663 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Colonial Colleges'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Which is the city district that contains the administrative territorial entity of Bonn?
 SPARQL:  select distinct ?obj where { wd:Q586 wdt:P150 ?obj . ?obj wdt:P31 wd:Q4286337 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bonn', 'p': 'contains', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city district'}}

 Q: What is {award received} of {Adele} that is {statement is subject of} is {59th Annual Grammy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23215 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q25060439 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adele', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '59th Annual Grammy Awards'}}}

 Q: Does the total valid votes of the Catalan reqional election of 2015 in Montseny equal to 231?
 SPARQL: ASK WHERE { wd:Q44874612 wdt:P1697 ?obj filter(?obj = 231) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Catalan regional election 2015 in Montseny', 'p': 'total valid votes', 'o': '?x0', '?x0': '231'}

 Q: What is {award received} of {Cormac McCarthy} that is {for work} is {The Road} ?
 SPARQL: SELECT ?obj WHERE { wd:Q272610 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q1140295 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cormac McCarthy', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Road'}}}

 Q: What is Russia's national anthem?
 SPARQL:  select distinct ?obj where { wd:Q34266 wdt:P85 ?obj . ?obj wdt:P31 wd:Q23691 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russia', 'p': 'anthem', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national anthem'}}

 Q: What is {academic degree} and {academic major} of {{Dwayne Johnson} has {educated at} as {University of Miami}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q10738 p:P69 ?s . ?s ps:P69 wd:Q738258 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dwayne Johnson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Miami'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dwayne Johnson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Miami'}}}]

 Q: What is the {intergovernmental organization} for {parent organization} of {International Court of Justice}
 SPARQL:  select distinct ?obj where { wd:Q7801 wdt:P749 ?obj . ?obj wdt:P31 wd:Q245065 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'International Court of Justice', 'p': 'parent organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}}

 Q: Who is the {gene} for {genetic association} of {allergic rhinitis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2293 wd:Q272436 . ?sbj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'allergic rhinitis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: Give me {position} that {vehicle normally used} {popemobile} and which contains the word {pope} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4164871 . ?sbj wdt:P3438 wd:Q739445 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pope')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vehicle normally used', 'o': 'popemobile'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pope'}}

 Q: What is copy of products for Arcadia Machine & Tool ?
 SPARQL: SELECT ?answer WHERE { wd:Q4034274 wdt:P1056 ?X . ?X wdt:P144 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'copy of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arcadia Machine & Tool', 'p': 'product', 'o': '$y0'}}

 Q: What part of the stomach is the venous return connected to?
 SPARQL: SELECT ?answer WHERE { wd:Q1029907 wdt:P2789 ?X . ?X wdt:P2289 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'venous return', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'stomach', 'p': 'connected to', 'o': '$y0'}}

 Q: what is the {Wylie transliteration} for {Abhidharma} has {native label} as {མཛོད་ཕུག} ?
 SPARQL: SELECT ?value WHERE { wd:Q612405 p:P1705 ?s . ?s ps:P1705 ?x filter(contains(?x,'མཛོད་ཕུག')) . ?s pq:P4187 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Wylie transliteration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abhidharma', 'p': 'native label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'native label', 'o': 'མཛོད་ཕུག'}}}

 Q: Which is the FootballDatabase.eu ID of Abedi Pele?
 SPARQL: select distinct ?answer where { wd:Q336916 wdt:P3537 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Abedi Pele', 'p': 'FootballDatabase.eu ID', 'o': '?x0'}

 Q: What is {member of sports team} of {Adam Gilchrist} that is {start time} is {2008-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q349516 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Adam Gilchrist', 'p': 'team', 'o': '?x0', 't': '2008'}

 Q: What is pollinated by Coleoptera ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1703 wd:Q22671}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is pollinated by', 'o': 'Coleoptera'}

 Q: What are the binary operation which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q164307 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'binary operation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: what is the {series ordinal} for {The Godfather} has {series} as {Godfather trilogy} ?
 SPARQL: SELECT ?value WHERE { wd:Q47703 p:P179 ?s . ?s ps:P179 wd:Q3225260 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Godfather', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Godfather trilogy'}}}

 Q: what is the {applies to jurisdiction} for {George VI} has {position held} as {monarch} ?
 SPARQL: SELECT ?value WHERE { wd:Q280856 p:P39 ?s . ?s ps:P39 wd:Q116 . ?s pq:P1001 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to jurisdiction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George VI', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch'}}}

 Q: What is the diplomatic relation between Tunisia and its official language Tuvan?
 SPARQL: SELECT ?answer WHERE { wd:Q948 wdt:P530 ?answer . ?answer wdt:P37 wd:Q34119}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tunisia', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Tuvan'}}

 Q: Who started serving as the Zambia head of state on 10-24-1964?
 SPARQL: SELECT ?obj WHERE { wd:Q953 p:P35 ?s . ?s ps:P35 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1964')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zambia', 'p': 'head of state', 'o': '?x0', 't': '1964'}

 Q: Which is the organization for what is said to be the same of Scientology?
 SPARQL:  select distinct ?obj where { wd:Q131036 wdt:P460 ?obj . ?obj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Scientology', 'p': 'same', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: Which UCI ProTeam has the highest budget?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q20638319 . ?ent wdt:P2769 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'budget', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'UCI ProTeam'}}

 Q: What is {followed by} and {follows} of {{Charles the Fat} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What is the {filming location} and the {narrative location} of {The_X-Files} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q2744 wdt:P915 ?ans_1 . wd:Q2744 wdt:P840 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'X-Files', 'p': 'filming location', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'X-Files', 'p': 'narrative location', 'o': '?x1'}]

 Q: What is {previous job holder} of {published in journal} of {Acoustic discrimination of sympatric morphs in Darwin's finches: a behavioural mechanism for assortative mating?} ?
 SPARQL: SELECT ?answer WHERE { wd:Q30475867 wdt:P1433 ?X . ?X wdt:P1365 ?answer}
 ALIST: {}

 Q: Give me {decimal currency} that {central bank/issuer} {Reserve Bank of Australia} and which that starts with {'a'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28795800 . ?sbj wdt:P562 wd:Q1506724 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'decimal currency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'central bank/issuer', 'o': 'Reserve Bank of Australia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: what is the {for work} for {Angelina Jolie} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q13909 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Angelina Jolie', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: what is the {start time} for {Anne of Great Britain} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q119702 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne of Great Britain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: What is {husbands} of {daughter of} of {Edward the Confessor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q130005 wdt:P25 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'husbands', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward the Confessor', 'p': 'daughter of', 'o': '$y0'}}

 Q: What is Dewey Decimal Classification for Canton of Fribourg ?
 SPARQL: select distinct ?answer where { wd:Q12640 wdt:P1036 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Canton of Fribourg', 'p': 'Dewey Decimal Classification', 'o': '?x0'}

 Q: What is the {painting} for {depicted by} of {Charles I of England}
 SPARQL:  select distinct ?obj where { wd:Q81506 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles I of England', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: What language of URL is Oku no Hosomichi, that has typology in subject-object-verb language?
Name the language of URL of Oku no Hosomichi, that is typology of subject-object-verb language?
 SPARQL: SELECT ?answer WHERE { wd:Q1287971 wdt:P407 ?answer . ?answer wdt:P4132 wd:Q539808}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oku no Hosomichi', 'p': 'language of URL', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'typology', 'o': 'subject-object-verb'}}

 Q: What is {sports} of {International Canoe Federation}, that has {associated with} is {kayaker} ?
 SPARQL: SELECT ?answer WHERE { wd:Q684857 wdt:P641 ?answer . ?answer wdt:P3095 wd:Q16004471}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'International Canoe Federation', 'p': 'sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'associated with', 'o': 'kayaker'}}

 Q: Is the boiler pressure of the SNCF 141.R equal to 15.5?
 SPARQL: ASK WHERE { wd:Q948166 wdt:P5071 ?obj filter(?obj = 15.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'SNCF 141.R', 'p': 'boiler pressure', 'o': '?x0', '?x0': '15.5'}

 Q: What is the {grammar} for {studies} of {Hungarian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q9067 . ?sbj wdt:P31 wd:Q8091 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'Hungarian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'grammar'}}

 Q: Which was the aerial bombing participant of Allies?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q329888 . ?sbj wdt:P31 wd:Q17912683 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Allies', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aerial bombing'}}

 Q: What is the diet that is opposite and named after veganism?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q181138 wdt:P461 ?ans_1 . wd:Q181138 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'veganism', 'p': 'opposite', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'veganism', 'p': 'named after', 'o': '?x1'}]

 Q: Is it true that the magnetic moment of the triton equals 0.000000000000000000000000015046094?
 SPARQL: ASK WHERE { wd:Q488424 wdt:P2069 ?obj filter(?obj = 0.000000000000000000000000015046094) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'triton', 'p': 'magnetic moment', 'o': '?x0', '?x0': '0.000000000000000000000000015046094'}

 Q: What is <ČSFD film ID> of <The Ten Commandments> ?
 SPARQL: select distinct ?answer where { wd:Q746733 wdt:P2529 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Ten Commandments', 'p': 'ČSFD film ID', 'o': '?x0'}

 Q: Where did Guy de Maupassant end his education in 1869?
 SPARQL: SELECT ?obj WHERE { wd:Q9327 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1869')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guy de Maupassant', 'p': 'education', 'o': '?x0', 't': '1869'}

 Q: Which is the detail map of Windsor Castle?
 SPARQL: select distinct ?answer where { wd:Q42646 wdt:P1621 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Windsor Castle', 'p': 'detail map', 'o': '?x0'}

 Q: What is {noble title} of {Berengar I of Italy} that is {followed by} is {Rudolph II of Burgundy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 wd:Q442257 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'noble title', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'followed by', 'o': 'Rudolph II of Burgundy'}}}

 Q: What is <DVN ID> of <Anne Frank> ?
 SPARQL: select distinct ?answer where { wd:Q4583 wdt:P1788 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anne Frank', 'p': 'DVN ID', 'o': '?x0'}

 Q: Who gave the {ideology} of {party} of {Elisenda Alamany} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42963597 wdt:P102 ?X . ?X wdt:P1142 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ideology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Elisenda Alamany', 'p': 'party', 'o': '$y0'}}

 Q: Port Harcourt shares the border with who?
 SPARQL: select distinct ?answer where { wd:Q217432 wdt:P47 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Port Harcourt', 'p': 'border', 'o': '?x0'}

 Q: Located in the city of Washington D.C., what is the parent company of the Smithsonian Institution?
 SPARQL: SELECT ?answer WHERE { wd:Q131626 wdt:P355 ?answer . ?answer wdt:P131 wd:Q61}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Smithsonian Institution', 'p': 'parent company of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Washington'}}

 Q: What is the native language and also the languages spoken, written or signed by Iggy Pop?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q182665 wdt:P103 ?ans_1 . wd:Q182665 wdt:P1412 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Iggy Pop', 'p': 'native language', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Iggy Pop', 'p': 'languages spoken, written or signed', 'o': '?x1'}]

 Q: What is {inception} of {Uppsala University} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q185246 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uppsala University', 'p': 'inception', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What is {color} and {architectural style} of {{American Gothic} has {depicts} as {house}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q464782 p:P180 ?s . ?s ps:P180 wd:Q3947 . ?s pq:P462 ?value1 . ?s pq:P149 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'color', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'American Gothic', 'p': 'depicts', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'depicts', 'o': 'house'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'architectural style', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'American Gothic', 'p': 'depicts', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'depicts', 'o': 'house'}}}]

 Q: what is the {start time} for {Jerusalem} has {head of government} as {Daniel Auster} ?
 SPARQL: SELECT ?value WHERE { wd:Q1218 p:P6 ?s . ?s ps:P6 wd:Q676953 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jerusalem', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Daniel Auster'}}}

 Q: Which are the measures for weighing scale?
 SPARQL: select distinct ?answer where { wd:Q134566 wdt:P2575 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'weighing scale', 'p': 'measures', 'o': '?x0'}

 Q: What is {location born} of {Xu Fu}, that has {longitude} is {118.3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q700302 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'118.3'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Xu Fu', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': '118.3'}}

 Q: which inner planet has the highest orbital eccentricity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3504248 . ?ent wdt:P1096 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'orbital eccentricity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inner planet'}}

 Q: What is {spouse} of {Mark Zuckerberg} that is {place of marriage} is {Palo Alto} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36215 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q47265 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mark Zuckerberg', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of marriage', 'o': 'Palo Alto'}}}

 Q: What itime of the day that has the minimum time index in a Day?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1260524 . ?ent wdt:P4895 ?obj . ?ent wdt:P31 wd:Q1260524} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'time index', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'time of the day'}}

 Q: What is {member of sports team} of {Colin Meads} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q642380 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Colin Meads', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Colin Meads', 'p': 'team', 'o': '$y0'}}]

 Q: How many awards are given by the Académie française?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1027 wd:Q161806 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'given by', 'o': 'Académie française'}

 Q: Which is the architectural style of postmodernism?
 SPARQL: select distinct ?answer where { ?answer wdt:P149 wd:Q47783}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architectural style', 'o': 'postmodernism'}

 Q: When did award received of Alice Munro and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q234819 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alice Munro', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alice Munro', 'p': 'award received', 'o': '$y0'}}]

 Q: Is the sublimation temperature of the cobalt(III) nitrate equal to 40?
 SPARQL: ASK WHERE { wd:Q14174835 wdt:P2113 ?obj filter(?obj = 40) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'cobalt(III) nitrate', 'p': 'sublimation temperature', 'o': '?x0', '?x0': '40'}

 Q: What is the {human} for {designed by} of {Golden Gate Bridge}
 SPARQL:  select distinct ?obj where { wd:Q44440 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Golden Gate Bridge', 'p': 'designer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {archives at} are for {Grace Hopper} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q11641 wdt:P485 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Grace Hopper', 'p': 'archives at', 'o': '?x0'}

 Q: Is it true that the speed of sound through water is less than 1197.6?
 SPARQL: ASK WHERE { wd:Q283 wdt:P2075 ?obj filter(?obj < 1197.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'water', 'p': 'speed of sound', 'o': '?x0', '?x0': '1197.6'}

 Q: Which is the end and start time of Barnaul which is located in the administrative territorial entity as West Siberian Krai?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6014 p:P131 ?s . ?s ps:P131 wd:Q4186485 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barnaul', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'West Siberian Krai'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barnaul', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'West Siberian Krai'}}}]

 Q: what is the {for work} for {Steven Soderbergh} has {nominated for} as {Satellite Award for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q103917 p:P1411 ?s . ?s ps:P1411 wd:Q2092962 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Steven Soderbergh', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Satellite Award for Best Director'}}}

 Q: Which award did Mike Trout receive and to which league does he belong?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3090378 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P118 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'league', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mike Trout', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mike Trout', 'p': 'award', 'o': '$y0'}}]

 Q: What painting is exhibited at Brown University?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P608 wd:Q49114 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'exhibited at', 'o': 'Brown University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: what is the {start time} for {Emilia-Romagna} has {head of government} as {Pier Luigi Bersani} ?
 SPARQL: SELECT ?value WHERE { wd:Q1263 p:P6 ?s . ?s ps:P6 wd:Q47556 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emilia-Romagna', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Pier Luigi Bersani'}}}

 Q: What are the medical examinations for blood sugar?
 SPARQL: select distinct ?answer where { wd:Q275157 wdt:P923 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'blood sugar', 'p': 'medical examinations', 'o': '?x0'}

 Q: Which is the Argentine deputy votations ID of Cristina Kirchner?
 SPARQL: select distinct ?answer where { wd:Q40649 wdt:P4693 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cristina Kirchner', 'p': 'Argentine deputy votations ID', 'o': '?x0'}

 Q: Who is the organizer of Ultimate Fighting Championship?
 SPARQL: select distinct ?answer where { ?answer wdt:P664 wd:Q186471}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'organizer', 'o': 'Ultimate Fighting Championship'}

 Q: Give me {art genre} that {studied by} {ballet studies} and which that starts with {'b'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1792379 . ?sbj wdt:P2579 wd:Q4076591 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art genre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'ballet studies'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: In 1975, what awards were Gladys Knight & the Pips nominated for?
 SPARQL: SELECT ?obj WHERE { wd:Q1529105 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gladys Knight & the Pips', 'p': 'nominated for', 'o': '?x0', 't': '1975'}

 Q: What borders with Sao Goncalo whose start date is 11-22-1573?
 SPARQL: SELECT ?answer WHERE { wd:Q83114 wdt:P47 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1573'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sao Goncalo', 'p': 'border', 'o': '?x0', 't': '1573'}

 Q: How many films are edited by David Lynch?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1040 wd:Q2071 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'edited by', 'o': 'David Lynch'}

 Q: Which is the medical attribute for the produced sound of the respiratory system?
 SPARQL:  select distinct ?obj where { wd:Q7891 wdt:P4733 ?obj . ?obj wdt:P31 wd:Q44476427 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'respiratory system', 'p': 'produced sound', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical attribute'}}

 Q: How many Gutenberg Bible collections are there?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q158075 wdt:P195 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Gutenberg Bible', 'p': 'collection', 'o': '?x0'}

 Q: Which is the BBC News Democracy Live ID of Jeremy Corbyn?
 SPARQL: select distinct ?answer where { wd:Q291169 wdt:P2173 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jeremy Corbyn', 'p': 'BBC News Democracy Live ID', 'o': '?x0'}

 Q: When did member of sports team of George Weah and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q173139 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Weah', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Weah', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is the {taxon} with the {MAX(genome size)} whose {taxon rank} is {species}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P2143 ?obj . ?ent wdt:P105 wd:Q7432 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'genome size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'taxon rank', 'o': 'species'}}}

 Q: what is the {statement is subject of} for {John Ford} has {nominated for} as {Academy Award for Best Picture} ?
 SPARQL: SELECT ?value WHERE { wd:Q51114 p:P1411 ?s . ?s ps:P1411 wd:Q102427 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Ford', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Picture'}}}

 Q: what is the {country} for {John Barrymore} has {place of death} as {Los Angeles} ?
 SPARQL: SELECT ?value WHERE { wd:Q95034 p:P20 ?s . ?s ps:P20 wd:Q65 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Barrymore', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Los Angeles'}}}

 Q: Who is the {cricket field} for {owned by} of {Australian Football League}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q50783 . ?sbj wdt:P31 wd:Q682943 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'Australian Football League', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cricket field'}}

 Q: Which continent of South Pole , that have extreme point lowest in Bentley Subglacial Trench?
 SPARQL: SELECT ?answer WHERE { wd:Q933 wdt:P30 ?answer . ?answer wdt:P1589 wd:Q818322}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Pole', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'extreme point lowest', 'o': 'Bentley Subglacial Trench'}}

 Q: who is partner of Tyler Perry that has start time is 2009-1-1 ?
 SPARQL: SELECT ?obj WHERE { wd:Q686301 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tyler Perry', 'p': 'partner', 'o': '?x0', 't': '2009'}

 Q: "What is the result of the first aid response to move to fresh air, with regard to talc?"
 SPARQL: SELECT ?answer WHERE { wd:Q134583 wdt:P1542 ?answer . ?answer wdt:P2239 wd:Q21010971}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'talc', 'p': 'result', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first aid response', 'o': 'move to fresh air'}}

 Q: what is the {end time} for {Brandeis University} has {chairperson} as {Abram L. Sachar} ?
 SPARQL: SELECT ?value WHERE { wd:Q49119 p:P488 ?s . ?s ps:P488 wd:Q4669370 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brandeis University', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Abram L. Sachar'}}}

 Q: Where is the next crossing downstream of the London Bridge.
 SPARQL: select distinct ?answer where { wd:Q130206 wdt:P2674 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'London Bridge', 'p': 'next crossing downstream', 'o': '?x0'}

 Q: What is {next to lake} of {is in the principal area of} of {University of Medical Sciences and Technology} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7895723 wdt:P131 ?X . ?X wdt:P206 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next to lake', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University of Medical Sciences and Technology', 'p': 'in', 'o': '$y0'}}

 Q: What is {diplomatic relation} of {Brunei} that is {statement is subject of} is {Brunei–Canada relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q921 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q15949089 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brunei', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Brunei–Canada relations'}}}

 Q: Is the bite force quotient of the Vulpes vulpes equal to 92?
 SPARQL: ASK WHERE { wd:Q8332 wdt:P3485 ?obj filter(?obj = 92) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Vulpes vulpes', 'p': 'bite force quotient', 'o': '?x0', '?x0': '92'}

 Q: What is sex or gender for Mick Jagger ?
 SPARQL: select distinct ?answer where { wd:Q128121 wdt:P21 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mick Jagger', 'p': 'sex or gender', 'o': '?x0'}

 Q: What is work period start for Corín Tellado ?
 SPARQL: select distinct ?answer where { wd:Q1813126 wdt:P2031 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Corín Tellado', 'p': 'work period start', 'o': '?x0'}

 Q: what is the {burial plot reference} for {Louis-Nicolas Davout} has {place of burial} as {Père Lachaise Cemetery} ?
 SPARQL: SELECT ?value WHERE { wd:Q158778 p:P119 ?s . ?s ps:P119 wd:Q311 . ?s pq:P965 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'burial plot reference', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis-Nicolas Davout', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of burial', 'o': 'Pere Lachaise'}}}

 Q: What is the name of the skyscraper that has an architectural style of neo-futurism and that starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11303 . ?sbj wdt:P149 wd:Q17012219 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'skyscraper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'architectural style', 'o': 'neo-futurism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: The conjugate base of ammonia is what chemical compound?
 SPARQL:  select distinct ?obj where { wd:Q4087 wdt:P4149 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ammonia', 'p': 'conjugate base', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Who is the film editor and director of Reservoir Dogs?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q72962 wdt:P1040 ?ans_1 . wd:Q72962 wdt:P57 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Reservoir Dogs', 'p': 'film editor', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Reservoir Dogs', 'p': 'director', 'o': '?x1'}]

 Q: What is the female version of Józef Piłsudski with the acronym чол?
 SPARQL: SELECT ?answer WHERE { wd:Q885 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'чол'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Józef Piłsudski', 'p': 'male', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'acronym', 'o': 'чол'}}

 Q: Tell me the name of Badminton World Federation that of start time is 1934-7-5?
 SPARQL: SELECT ?obj WHERE { wd:Q126638 p:P2561 ?s . ?s ps:P2561 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1934')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Badminton World Federation', 'p': 'name', 'o': '?x0', 't': '1934'}

 Q: What is  the used for treatment of the treats disease of methocarbamol ?
 SPARQL: SELECT ?answer WHERE { wd:Q411456 wdt:P2175 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used for treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'methocarbamol', 'p': 'treats', 'o': '$y0'}}

 Q: Which is the Power of 10 athlete ID for Paula Radcliffe?
 SPARQL: select distinct ?answer where { wd:Q233672 wdt:P2090 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paula Radcliffe', 'p': 'Power of 10 athlete ID', 'o': '?x0'}

 Q: Which is the CulturaItalia ID of Uffizi?
 SPARQL: select distinct ?answer where { wd:Q51252 wdt:P1949 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Uffizi', 'p': 'CulturaItalia ID', 'o': '?x0'}

 Q: What is {award received} of {Louis Malle} that is {for work} is {Au revoir les enfants} ?
 SPARQL: SELECT ?obj WHERE { wd:Q55392 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q187276 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis Malle', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Au revoir les enfants'}}}

 Q: What is the sister city of Tirana, that has the county seat for the 4th of August Regime?
 SPARQL: SELECT ?answer WHERE { wd:Q19689 wdt:P190 ?answer . ?answer wdt:P1376 wd:Q1358836}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tirana', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat for', 'o': '4th of August Regime'}}

 Q: Which is Tilastopaja female athlete ID for Irena Szewińska?
 SPARQL: select distinct ?answer where { wd:Q229424 wdt:P3882 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Irena Szewińska', 'p': 'Tilastopaja female athlete ID', 'o': '?x0'}

 Q: What is {award received} of {Abdellatif Kechiche} that is {for work} is {The Secret of the Grain} ?
 SPARQL: SELECT ?obj WHERE { wd:Q307996 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q521484 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abdellatif Kechiche', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Secret of the Grain'}}}

 Q: Which is the Olympic sport that is an authority of International Biathlon Union and contains the word biathlon in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q212434 . ?sbj wdt:P797 wd:Q866910 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'biathlon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Olympic sport', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'authority', 'o': 'International Biathlon Union'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'biathlon'}}

 Q: who is played by next of Perfect Day ?
 SPARQL: SELECT ?answer WHERE { wd:Q3503874 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Perfect Day', 'p': 'next', 'o': '$y0'}}

 Q: What is the start time for Auguste Comte and his spouse Caroline Massin
 SPARQL: SELECT ?value WHERE { wd:Q12718 p:P26 ?s . ?s ps:P26 wd:Q1044529 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Auguste Comte', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Caroline Massin'}}}

 Q: what is the {replaces} for {William H. Seward} has {position held} as {United States Secretary of State} ?
 SPARQL: SELECT ?value WHERE { wd:Q297308 p:P39 ?s . ?s ps:P39 wd:Q14213 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William H. Seward', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary of State'}}}

 Q: Which is the Catalogue of Life in Taiwan ID for Carica papaya?
 SPARQL: select distinct ?answer where { wd:Q34887 wdt:P3088 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carica papaya', 'p': 'Catalogue of Life in Taiwan ID', 'o': '?x0'}

 Q: What time is it at the twin town of Denpasar?
 SPARQL: SELECT ?answer WHERE { wd:Q11506 wdt:P190 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Denpasar', 'p': 'twin town', 'o': '$y0'}}

 Q: Volgograd is the capital of governorate of the Russian Soviet Federative Socialist Republic
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q914 . ?sbj wdt:P31 wd:Q15733039 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Volgograd', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'governorate of the Russian Soviet Federative Socialist Republic'}}

 Q: What is key event for film producer of Selma ?
 SPARQL: SELECT ?answer WHERE { wd:Q17183770 wdt:P162 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Selma', 'p': 'producer', 'o': '$y0'}}

 Q: Who is the facet of and located in the administrative territorial entity of Assassination of John F. Kennedy?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q193484 wdt:P1269 ?ans_1 . wd:Q193484 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Assassination of John F. Kennedy', 'p': 'facet of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Assassination of John F. Kennedy', 'p': 'located in the administrative territorial entity', 'o': '?x1'}]

 Q: What is {coordinate location} of {Daugava River} that is {applies to part} is {river mouth} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8197 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q1233637 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Daugava River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'mouth'}}}

 Q: Tell me the type of statistic that starts with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47103999 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of statistic'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Who was Leonard Nimoy married to in 1989?
 SPARQL: SELECT ?obj WHERE { wd:Q16345 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leonard Nimoy', 'p': 'married to', 'o': '?x0', 't': '1989'}

 Q: Does the pulication interval of the Le Monde equal 0.8?
 SPARQL: ASK WHERE { wd:Q12461 wdt:P2896 ?obj filter(?obj = 0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Le Monde', 'p': 'publication interval', 'o': '?x0', '?x0': '0.8'}

 Q: What is <Les Enfoirés participant ID> of <Celine Dion> ?
 SPARQL: select distinct ?answer where { wd:Q5105 wdt:P5261 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Celine Dion', 'p': 'Les Enfoirés participant ID', 'o': '?x0'}

 Q: What is {tributary} of {river mouth} of {Uruguay River} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18278 wdt:P403 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uruguay River', 'p': 'river mouth', 'o': '$y0'}}

 Q: When was Mitsubishi UFJ Financial Group owned by The Vanguard Group?
 SPARQL: SELECT ?value WHERE { wd:Q1542175 p:P127 ?s . ?s ps:P127 wd:Q849363 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Mitsubishi UFJ Financial Group', 'p': 'owned by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'owned by', 'o': 'The Vanguard Group'}, 't': '?x0'}

 Q: What is {height} of {CN Tower} that is {criterion used} is {height to occupied floor} ?
 SPARQL: SELECT ?obj WHERE { wd:Q134883 p:P2048 ?s . ?s ps:P2048 ?obj . ?s pq:P1013 wd:Q31271474 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'CN Tower', 'p': 'height', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'criterion used', 'o': 'height to occupied floor'}}}

 Q: What is the {human} for {significant person} of {Rumi}
 SPARQL:  select distinct ?obj where { wd:Q43347 wdt:P3342 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rumi', 'p': 'significant person', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {symbol} of {manifestation of} of {equation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11345 wdt:P1557 ?X . ?X wdt:P913 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'equation', 'p': 'manifestation of', 'o': '$y0'}}

 Q: What is {year commenced} of {burial place} of {John Hunyadi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q242688 wdt:P119 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'year commenced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hunyadi', 'p': 'burial place', 'o': '$y0'}}

 Q: What is the {material used} and the {has effect} of {Gravitational_wave} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q190035 wdt:P186 ?ans_1 . wd:Q190035 wdt:P1542 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'gravitational wave', 'p': 'material used', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'gravitational wave', 'p': 'effect', 'o': '?x1'}]

 Q: What is {inception} of {Korea under Japanese rule} that is {statement is subject of} is {Japan–Korea Treaty of 1910} ?
 SPARQL: SELECT ?obj WHERE { wd:Q503585 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P805 wd:Q495558 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Korea under Japanese rule', 'p': 'inception', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Japan–Korea Treaty of 1910'}}}

 Q: Is the angular resolution of the Karl G. Jansky Very Large Array equal to 0.2?
 SPARQL: ASK WHERE { wd:Q461382 wdt:P3439 ?obj filter(?obj = 0.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Karl G. Jansky Very Large Array', 'p': 'angular resolution', 'o': '?x0', '?x0': '0.2'}

 Q: Tell me archipelago  whose name has the word lies in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33837 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'îles')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archipelago'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'îles'}}

 Q: What is the seal image for Medan?
 SPARQL: select distinct ?answer where { wd:Q5972 wdt:P158 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Medan', 'p': 'seal image', 'o': '?x0'}

 Q: Who produces and is the builder of the John Deere Model 4020?
 SPARQL: SELECT ?answer WHERE { wd:Q6229075 wdt:P176 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'produces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Deere Model 4020', 'p': 'builder', 'o': '$y0'}}

 Q: what is the {replaces} for {James Stanhope, 1st Earl Stanhope} has {position held} as {Chancellor of the Exchequer} ?
 SPARQL: SELECT ?value WHERE { wd:Q332603 p:P39 ?s . ?s ps:P39 wd:Q531471 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Stanhope, 1st Earl Stanhope', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chancellor of the Exchequer'}}}

 Q: What is {position held} of {Clement Attlee} that is {replaced by} is {Robert Gascoyne-Cecil, 5th Marquess of Salisbury} ?
 SPARQL: SELECT ?obj WHERE { wd:Q129006 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q333205 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement Attlee', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Robert Gascoyne-Cecil, 5th Marquess of Salisbury'}}}

 Q: Which is the OpenDOAR ID for Library and Archives Canada?
 SPARQL: select distinct ?answer where { wd:Q913250 wdt:P5332 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Library and Archives Canada', 'p': 'OpenDOAR ID', 'o': '?x0'}

 Q: Is it true that Maddie Ziegler's first name Nicole?
 SPARQL: ASK WHERE { wd:Q16240603 wdt:P735 wd:Q14753732 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Maddie Ziegler', 'p': 'first name', 'o': '?x0', '?x0': 'Nicole'}]

 Q: what is the {academic degree} for {Georges Méliès} has {educated at} as {Lycée Louis-le-Grand} ?
 SPARQL: SELECT ?value WHERE { wd:Q152272 p:P69 ?s . ?s ps:P69 wd:Q1059546 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georges Méliès', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Lycée Louis-le-Grand'}}}

 Q: Is the clock speed of the Uzebox less than 34.32?
 SPARQL: ASK WHERE { wd:Q579739 wdt:P2149 ?obj filter(?obj < 34.32) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Uzebox', 'p': 'clock speed', 'o': '?x0', '?x0': '34.32'}

 Q: What is formed at  graduated from of Christopher Marlowe ?
 SPARQL: SELECT ?answer WHERE { wd:Q28975 wdt:P69 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'formed at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Marlowe', 'p': 'graduated from', 'o': '$y0'}}

 Q: Which is the Manitoba Sports Hall of Fame athlete ID for Bobby Hull?
 SPARQL: select distinct ?answer where { wd:Q456688 wdt:P4413 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bobby Hull', 'p': 'Manitoba Sports Hall of Fame athlete ID', 'o': '?x0'}

 Q: Is the number of players in region of rugby union in Kenya equal to 42904?
 SPARQL: ASK WHERE { wd:Q3452891 wdt:P4909 ?obj filter(?obj = 42904) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'rugby union in Kenya', 'p': 'number of players in region', 'o': '?x0', '?x0': '42904'}

 Q: What is pronunciation audio made from pork ?
 SPARQL: SELECT ?answer WHERE { wd:Q191768 wdt:P1582 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pork', 'p': 'made from', 'o': '$y0'}}

 Q: What is {position held} of {Louis VII of France} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q134259 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VII of France', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VII of France', 'p': 'position held', 'o': '$y0'}}]

 Q: Is Nicolas Cage's family name Coppola?
 SPARQL: ASK WHERE { wd:Q42869 wdt:P734 wd:Q7704509 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Nicolas Cage', 'p': 'family name', 'o': '?x0', '?x0': 'Coppola'}]

 Q: Name the person behind the renowned work of Nineteen Eighty-Four
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P800 wd:Q208460 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'Nineteen Eighty-Four', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{David Icke} has {member of sports team} as {Hereford United F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q333118 p:P54 ?s . ?s ps:P54 wd:Q18516 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Icke', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hereford United FC'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'points scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Icke', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hereford United FC'}}}]

 Q: Give me {single-family detached home} that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1307276 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single-family detached home'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Is the tensile modulus of elasticity of the UNS S32205 / EN 1.4462 duplex stainless steel greater than 223200.0?
 SPARQL: ASK WHERE { wd:Q7388539 wdt:P5480 ?obj filter(?obj > 223200.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '1.4462', 'p': 'tensile modulus of elasticity', 'o': '?x0', '?x0': '223200.0'}

 Q: What is the {radio station} for {language used} of {Norwegian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q9043 . ?sbj wdt:P31 wd:Q14350 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Norwegian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'radio station'}}

 Q: What is the star with the highest proper motion whose companion of is Alpha Centauri B ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q523 . ?ent wdt:P2215 ?obj . ?ent wdt:P399 wd:Q1052548 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'proper motion', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'star', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'companion of', 'o': 'Alpha Centauri B'}}}

 Q: What was the sports team for Guus Hiddink in 1978-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q484534 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1978')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guus Hiddink', 'p': 'team', 'o': '?x0', 't': '1978'}

 Q: Which is the free and open-source software that is named after Linux?
 SPARQL:  select distinct ?obj where { wd:Q388 wdt:P138 ?obj . ?obj wdt:P31 wd:Q506883 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linux', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'free and open-source software'}}

 Q: What is the {railroad} with the {MAX(maximum gradient)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22667 . ?ent wdt:P2595 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum gradient', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railroad'}}

 Q: What is geomorphological unit of East European Plain ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4688 wd:Q191862}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'geomorphological unit', 'o': 'East European Plain'}

 Q: What is {resting place} of {Hayreddin Barbarossa}, that has {sister town} is {Lagos} ?
 SPARQL: SELECT ?answer WHERE { wd:Q200582 wdt:P119 ?answer . ?answer wdt:P190 wd:Q8673}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hayreddin Barbarossa', 'p': 'resting place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister town', 'o': 'Lagos'}}

 Q: What is the {television character} for {performer} of {Ben Affleck}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P175 wd:Q483118 . ?sbj wdt:P31 wd:Q15773317 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Ben Affleck', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV character'}}

 Q: What is the {encyclopedia} for {genre} of {encyclopedia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P136 wd:Q5292 . ?sbj wdt:P31 wd:Q5292 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'encyclopedia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'encyclopedia'}}

 Q: Who is Warren Beatty's wife or partner?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q95030 wdt:P451 ?ans_1 . wd:Q95030 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Warren Beatty', 'p': 'partner', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Warren Beatty', 'p': 'wife', 'o': '?x1'}]

 Q: What is motto  successor of Province of New York ?
 SPARQL: SELECT ?answer WHERE { wd:Q769668 wdt:P1366 ?X . ?X wdt:P1451 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'motto', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Province of New York', 'p': 'successor', 'o': '$y0'}}

 Q: What is <dam> of <Three Gorges Dam> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4792 wd:Q12514}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dam', 'o': 'Three Gorges Dam'}

 Q: What is {relative} of {Joseph Conrad} that is {type of kinship} is {maternal uncle} ?
 SPARQL: SELECT ?obj WHERE { wd:Q82925 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1039 wd:Q4120409 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'relative', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Conrad', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': "mother's brother"}}}

 Q: When were American Samoa named ethnic group as Samoans?
 SPARQL: SELECT ?value WHERE { wd:Q16641 p:P172 ?s . ?s ps:P172 wd:Q1135531 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'American Samoa', 'p': 'ethnic group', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ethnic group', 'o': 'Samoans'}, 't': '?x0'}

 Q: Isambard Kingdom Brunel was the structural engineer of what railway bridge?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P631 wd:Q207380 . ?sbj wdt:P31 wd:Q1210334 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'structural engineer', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway bridge'}}

 Q: When did the Kindgom of Prussia begin in 1701?
 SPARQL: SELECT ?obj WHERE { wd:Q27306 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1701')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Prussia', 'p': 'type', 'o': '?x0', 't': '1701'}

 Q: What is {together with} and {prize money} of {{Henry Dunant} has {award received} as {Nobel Peace Prize}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q12091 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P1706 ?value1 . ?s pq:P2121 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Peace Prize'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'prize money', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Peace Prize'}}}]

 Q: Tell me lunisolar calendar  whose name has the word calendars in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194235 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'calendars')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lunisolar calendar'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'calendars'}}

 Q: What is Anatoly Karpov's work location where official language if Russian?
 SPARQL: SELECT ?answer WHERE { wd:Q131674 wdt:P937 ?answer . ?answer wdt:P37 wd:Q7737}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anatoly Karpov', 'p': 'work location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Russian'}}

 Q: What is the {medical specialty} for {studied by} of {diabetes mellitus}
 SPARQL:  select distinct ?obj where { wd:Q12206 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q930752 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diabetes mellitus', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical specialty'}}

 Q: What is <National Baseball Hall of Fame and Museum ID> of <Willie Mays> ?
 SPARQL: select distinct ?answer where { wd:Q561852 wdt:P4164 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Willie Mays', 'p': 'National Baseball Hall of Fame and Museum ID', 'o': '?x0'}

 Q: What is the {international organization} for {subsidiary} of {United Nations General Assembly}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P355 wd:Q47423 . ?sbj wdt:P31 wd:Q484652 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'General Assembly', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international organization'}}

 Q: what is the {start time} for {James K. Polk} has {position held} as {Governor of Tennessee} ?
 SPARQL: SELECT ?value WHERE { wd:Q11891 p:P39 ?s . ?s ps:P39 wd:Q5589724 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James K. Polk', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Governor of Tennessee'}}}

 Q: Which asteroid has got the most orbital inclination?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3863 . ?ent wdt:P2045 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'orbital inclination', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid'}}

 Q: What is the Heidelberg Academy for Sciences and Humanities member ID for Martin Heidegger?
 SPARQL: select distinct ?answer where { wd:Q48301 wdt:P2273 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Martin Heidegger', 'p': 'Heidelberg Academy for Sciences and Humanities member ID', 'o': '?x0'}

 Q: DOES THE TOTAL DEBT OF CARREFOUR GROUP IS EQUAL TO 4531000000
 SPARQL: ASK WHERE { wd:Q3117359 wdt:P2133 ?obj filter(?obj = 4531000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Carrefour', 'p': 'total debt', 'o': '?x0', '?x0': '4531000000'}

 Q: What is the charger for the rebellion?
 SPARQL: select distinct ?answer where { ?answer wdt:P1595 wd:Q124734}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'charge', 'o': 'rebellion'}

 Q: What is the {academic major} for {studied by} of {history of the world}
 SPARQL:  select distinct ?obj where { wd:Q200325 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q4671286 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'history', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic major'}}

 Q: which mountain has a tallest elevation above sea level?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q8502 . ?ent wdt:P2044 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'elevation above sea level', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mountain'}}

 Q: Which is the MLB ID for Willie Mays?
 SPARQL: select distinct ?answer where { wd:Q561852 wdt:P3541 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Willie Mays', 'p': 'MLB ID', 'o': '?x0'}

 Q: What is the 3DMet ID  for ethanol?
 SPARQL: select distinct ?answer where { wd:Q153 wdt:P2796 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethanol', 'p': '3DMet ID', 'o': '?x0'}

 Q: Is the highest no-effect level of chlorobenzene 27.25?
 SPARQL: ASK WHERE { wd:Q407768 wdt:P2717 ?obj filter(?obj = 27.25) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'chlorobenzene', 'p': 'no-observed-adverse-effect level', 'o': '?x0', '?x0': '27.25'}

 Q: What is the {central bank} for {central bank} of {Korea under Japanese rule}
 SPARQL:  select distinct ?obj where { wd:Q503585 wdt:P1304 ?obj . ?obj wdt:P31 wd:Q66344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Korea under Japanese rule', 'p': 'central bank', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'central bank'}}

 Q: Who is chairwoman party membership of Jack Horner ?
 SPARQL: SELECT ?answer WHERE { wd:Q1677064 wdt:P102 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chairwoman', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Horner', 'p': 'party', 'o': '$y0'}}

 Q: Which is the triumphal arch that Jean Chalgrin was the architect and contains the word arc in it's name!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q143912 . ?sbj wdt:P84 wd:Q525487 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'arc')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'triumphal arch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Jean Chalgrin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'arc'}}

 Q: Who {has sons} of {daddy} {Noel Tata} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12779926 wdt:P22 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Noel Tata', 'p': 'dad', 'o': '$y0'}}

 Q: What is {place of birth} of {Anna Magnani} that is {country} is {Kingdom of Italy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q56011 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q172579 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birthplace', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Magnani', 'p': 'birthplace', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Kingdom of Italy'}}}

 Q: What is <standards body> of <International Organization for Standardization> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1462 wd:Q15028}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'standards body', 'o': 'International Organization for Standardization'}

 Q: What is {stockholders} of {represents} of {Vista aérea da cidade de São Paulo/SP} ?
 SPARQL: SELECT ?answer WHERE { wd:Q53302993 wdt:P180 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stockholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vista aérea da cidade de São Paulo/SP', 'p': 'represents', 'o': '$y0'}}

 Q: Was Carl_Sagan spouse Carl Woese and Linda Salzman Sagan ?
 SPARQL: ASK WHERE { wd:Q410 wdt:P26 wd:Q310067 . wd:Q410 wdt:P26 wd:Q4526447 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Sagan', 'p': 'spouse', 'o': '?x0', '?x0': 'Carl Woese'}, {'h': 'IS', 'v': '?x1', 's': 'Sagan', 'p': 'spouse', 'o': '?x1', '?x1': 'Linda Salzman Sagan'}]

 Q: What is the {human} for {author} of {Othello}
 SPARQL:  select distinct ?obj where { wd:Q26833 wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Othello', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Are the maximum sustained winds of the Tropical Storm Debby 54.0?
 SPARQL: ASK WHERE { wd:Q2400201 wdt:P2895 ?obj filter(?obj = 54.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tropical Storm Debby', 'p': 'maximum sustained winds', 'o': '?x0', '?x0': '54.0'}

 Q: What is available in The Forsyte Saga which has a script of the English alphabet?
 SPARQL: SELECT ?answer WHERE { wd:Q735319 wdt:P407 ?answer . ?answer wdt:P282 wd:Q754673}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Forsyte Saga', 'p': 'available in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alphabet', 'o': 'English alphabet'}}

 Q: What is {position held} of {Gianni Agnelli} and {end cause}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q356351 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1534 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gianni Agnelli', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gianni Agnelli', 'p': 'position held', 'o': '$y0'}}]

 Q: How many {language used} are for {Australia} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q408 wdt:P2936 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Australia', 'p': 'language used', 'o': '?x0'}

 Q: What is {implies} of {pyridine}, that has {route of administration} is {ingestion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q210385 wdt:P1542 ?answer . ?answer wdt:P636 wd:Q1663054}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pyridine', 'p': 'implies', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'route of administration', 'o': 'ingestion'}}

 Q: Which English film has the longest average shot length?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11424 . ?ent wdt:P2208 ?obj . ?ent wdt:P364 wd:Q1860 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'average shot length', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'original language', 'o': 'English'}}}

 Q: Give me {criterion of similarity} that starts with {'n'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7250271 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'criterion of similarity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is the field of action of the parent company of Claro?
 SPARQL: SELECT ?answer WHERE { wd:Q1770208 wdt:P355 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of action', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Claro', 'p': 'parent company of', 'o': '$y0'}}

 Q: What is the {stadium} for {located in the administrative territorial entity} of {Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q220 . ?sbj wdt:P31 wd:Q483110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Roma', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stadium'}}

 Q: What are the trigonometric function which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q93344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'trigonometric function'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {position held} of {Bertil Ohlin} that is {replaced by} is {Gísli Jónsson} ?
 SPARQL: SELECT ?obj WHERE { wd:Q179493 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q16405049 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bertil Ohlin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Gísli Jónsson'}}}

 Q: When did stadium for operator of University of Toronto?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P137 wd:Q180865 . ?sbj wdt:P31 wd:Q483110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'University of Toronto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stadium'}}

 Q: What is the {painting} for {inspired by} of {Catholic Church}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P941 wd:Q9592 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'inspired by', 'o': 'Catholic Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: Who is the language official from Khanate of Kokand, that has AWLD status and is 1 safe?
 SPARQL: SELECT ?answer WHERE { wd:Q696241 wdt:P37 ?answer . ?answer wdt:P1999 wd:Q20672086}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Khanate of Kokand', 'p': 'language official', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'AWLD status', 'o': '1 safe'}}

 Q: Where was the Russian Revolution co-founded by Peter the Great?
 SPARQL: SELECT ?answer WHERE { wd:Q8729 wdt:P276 ?answer . ?answer wdt:P112 wd:Q8479}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Russian Revolution', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Peter the Great'}}

 Q: what is the statement of subject of award received by Jose Ferrer in 1st Tony Awards?
 SPARQL: SELECT ?obj WHERE { wd:Q312098 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q4596654 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jose Ferrer', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subject of', 'o': '1st Tony Awards'}}}

 Q: What is { award received } from { Goodfellas } that is the subject of { 63rd Academy Awards }?
 SPARQL: SELECT ?obj WHERE { wd:Q42047 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q910856 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Goodfellas', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subject of', 'o': '63rd Academy Awards'}}}

 Q: What is <EU VAT number> of <Ferrovie dello Stato Italiane> ?
 SPARQL: select distinct ?answer where { wd:Q83823 wdt:P3608 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ferrovie dello Stato Italiane', 'p': 'EU VAT number', 'o': '?x0'}

 Q: What is {aspect of} of {history of Iran}, that has {ethnicity} is {Iranian Azerbaijanis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28926 wdt:P1269 ?answer . ?answer wdt:P172 wd:Q2426677}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Iran', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ethnicity', 'o': 'Iranian Azerbaijanis'}}

 Q: Did {Britney_Spears} {languages spoken, written or signed} {Old English}?
 SPARQL: ASK WHERE { wd:Q11975 wdt:P1412 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Britney Spears', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Old English'}]

 Q: What is {position held} of {Richard Nixon} that is {replaced by} is {Gerald Ford} ?
 SPARQL: SELECT ?obj WHERE { wd:Q9588 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q9582 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Nixon', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Gerald Ford'}}}

 Q: Give me {republic} that {capital} {Venice} and which contains the word {republic} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7270 . ?sbj wdt:P36 wd:Q641 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'republic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Venice'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'republic'}}

 Q: What is {participated in conflict} of {Central Powers}, that has {preceeds} is {World War II} ?
 SPARQL: SELECT ?answer WHERE { wd:Q152283 wdt:P607 ?answer . ?answer wdt:P156 wd:Q362}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Central Powers', 'p': 'conflict', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'preceeds', 'o': 'World War II'}}

 Q: What is the sex of the biological sibling of Frederick William III of Prussia?
 SPARQL: SELECT ?answer WHERE { wd:Q37134 wdt:P3373 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frederick William III of Prussia', 'p': 'sibling', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sex', 'o': 'm'}}

 Q: What is the {national association football team} for {member of sports team} of {Lionel Messi}
 SPARQL:  select distinct ?obj where { wd:Q615 wdt:P54 ?obj . ?obj wdt:P31 wd:Q6979593 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lionel Messi', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national association football team'}}

 Q: Who is a member of the crew of Enola Gay?
 SPARQL: select distinct ?answer where { ?answer wdt:P5096 wd:Q204424}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'member of the crew of', 'o': 'Enola Gay'}

 Q: Tell me military offensive whose name has the word operation in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2001676 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'operation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military offensive'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'operation'}}

 Q: For what railway stations is Isambard Kingdom Brunel the architect?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q207380 . ?sbj wdt:P31 wd:Q55488 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway station'}}

 Q: Tell me me a musical  whose name consist of the word "woods" and whose lyrics by Stephen Sondheim
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2743 . ?sbj wdt:P676 wd:Q153579 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'woods')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'lyrics by', 'o': 'Stephen Sondheim'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'woods'}}

 Q: Who were the participants of the Attack on Pearl Harbor and what effect as the end result of the attack?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q52418 wdt:P710 ?ans_1 . wd:Q52418 wdt:P1542 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Attack on Pearl Harbor', 'p': 'participant', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Attack on Pearl Harbor', 'p': 'effect', 'o': '?x1'}]

 Q: What is the determination method for a substance dependence that has the genetic association of PLEKHG1?
 SPARQL: SELECT ?value WHERE { wd:Q182413 p:P2293 ?s . ?s ps:P2293 wd:Q18043072 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'substance dependence', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'PLEKHG1'}}}

 Q: Which is the surface tension of ethyl acetate?
 SPARQL: select distinct ?answer where { wd:Q407153 wdt:P3013 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethyl acetate', 'p': 'surface tension', 'o': '?x0'}

 Q: Which landlocked country has the highest GDP PPP?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q123480 . ?ent wdt:P4010 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'GDP PPP', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'landlocked country'}}

 Q: What is the {fictional bird} for {present in work} of {Looney Tunes}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q622435 . ?sbj wdt:P31 wd:Q15832079 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Looney Tunes', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional bird'}}

 Q: What is {position held} of {Umar ibn Al-Khattāb} that is {start time} is {634-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8467 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(?x,'634-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Umar', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'starting', 'o': '634-0-0'}}}

 Q: What's the official language for Patna?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80484 wdt:P37 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Patna', 'p': 'official language', 'o': '?x0'}

 Q: What is the number of out of school children of the continent of Sub-Saharan Africa?
 SPARQL: SELECT ?answer WHERE { wd:Q132959 wdt:P30 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sub-Saharan Africa', 'p': 'continent', 'o': '$y0'}}

 Q: Who is the person in the significant event of the dissolution of the Soviet Union?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q5167679 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'dissolution of the Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is <mandates> of <human rights> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4424 wd:Q8458}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mandates', 'o': 'human rights'}

 Q: What award did Sylvia Chang receive in 1986?
 SPARQL: SELECT ?obj WHERE { wd:Q292693 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1986')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sylvia Chang', 'p': 'award', 'o': '?x0', 't': '1986'}

 Q: What is the {sport in a geographic region} with the {MAX(number of clubs)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29791211 . ?ent wdt:P4999 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of clubs', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport in a geographic region'}}

 Q: What city in Bilbao has a twinned administrative body?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q8692 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Bilbao', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is {physically interacts with} of {glycine}, that has {subcellular localization} is {integral component of membrane} ?
 SPARQL: SELECT ?answer WHERE { wd:Q620730 wdt:P129 ?answer . ?answer wdt:P681 wd:Q14327652}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'glycine', 'p': 'physically interacts with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subcellular localization', 'o': 'integral component of membrane'}}

 Q: what is the {operating system} for {macOS} has {platform} as {PowerPC} ?
 SPARQL: SELECT ?value WHERE { wd:Q14116 p:P400 ?s . ?s ps:P400 wd:Q209860 . ?s pq:P306 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operating system', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'macOS', 'p': 'platform', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'platform', 'o': 'PowerPC'}}}

 Q: What is the indirect cause of the predecessor of street sweepers, janitors, and professionals who take care of buildings such as hospitals and schools?
 SPARQL: SELECT ?answer WHERE { wd:Q17309512 wdt:P1479 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'predecessor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'street sweeper', 'p': 'indirect cause', 'o': '$y0'}}

 Q: What is {name after} of {Dijkstra's algorithm}, that has {career} is {mathematician} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8548 wdt:P138 ?answer . ?answer wdt:P106 wd:Q170790}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Dijkstra's algorithm", 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'mathematician'}}

 Q: Does the dolabriferol C have a specific rotation equal to -36.16?
 SPARQL: ASK WHERE { wd:Q57394391 wdt:P6272 ?obj filter(?obj = -36.16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'dolabriferol C', 'p': 'specific rotation', 'o': '?x0', '?x0': '-36.16'}

 Q: When did Coventry have a population of 316900?
 SPARQL: SELECT ?value WHERE { wd:Q6225 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'316900.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Coventry', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '316900.0'}, 't': '?x0'}

 Q: Tell me the name of solstice which starts with "s"
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q123524 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'solstice'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Tell me water deity whose name has the word yinglong in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1916821 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yinglong')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'water deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yinglong'}}

 Q: What is Clochers de France ID of Notre Dame de Paris ?
 SPARQL: select distinct ?answer where { wd:Q2981 wdt:P3963 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Notre Dame', 'p': 'Clochers de France ID', 'o': '?x0'}

 Q: Give me {comics publishing company} that {replaces} {All-American Publications} and which contains the word {comics} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1114515 . ?sbj wdt:P1365 wd:Q3611907 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'comics')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comics publishing company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaces', 'o': 'All-American Publications'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'comics'}}

 Q: What is {noble title} of {Charles the Bald} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q71231 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is the {empire} for {cause of destruction} of {October Revolution}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P770 wd:Q42976 . ?sbj wdt:P31 wd:Q48349 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of destruction', 'o': 'October Revolution', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire'}}

 Q: What is {location of death} of {Feng Youlan}, that has {twin city} is {Minsk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q557220 wdt:P20 ?answer . ?answer wdt:P190 wd:Q2280}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Feng Youlan', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Minsk'}}

 Q: Who was no longer the spouse of Lisa Marie Presley on 16th May 2004?
 SPARQL: SELECT ?obj WHERE { wd:Q237324 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lisa Marie Presley', 'p': 'spouse', 'o': '?x0', 't': '2004'}

 Q: What is the country of citizenship of the Kingdom of the Netherlands?
 SPARQL: select distinct ?answer where { ?answer wdt:P27 wd:Q29999}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'Kingdom of the Netherlands'}

 Q: What is {written by} of {Clarinet Concerto in A major, K. 622}, that has {birthname} is {Johannes Chrysostomus Wolfgangus Theophilus Mozart} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1056501 wdt:P86 ?answer . ?answer wdt:P1477 ?x FILTER(contains(?x,'Johannes Chrysostomus Wolfgangus Theophilus Mozart'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Clarinet Concerto in A major, K. 622', 'p': 'written by', 'o': '?x0'}

 Q: What is {county seat for} of {Bandar Seri Begawan}, that has {member of} is {Asia-Pacific Economic Cooperation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9279 wdt:P1376 ?answer . ?answer wdt:P463 wd:Q170481}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bandar', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'APEC'}}

 Q: What is {breed} of {characters} of {Ghost Trick: Phantom Detective} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2629796 wdt:P674 ?X . ?X wdt:P4743 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'breed', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ghost Trick: Phantom Detective', 'p': 'characters', 'o': '$y0'}}

 Q: What is {position held} of {Bernie Sanders} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q359442 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernie Sanders', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernie Sanders', 'p': 'position held', 'o': '$y0'}}]

 Q: What city is the county seat of Norfolk?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1376 wd:Q23109 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'county seat of', 'o': 'Norfolk', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is the written language of Jean Arp, which is originally labeled as langue française?
 SPARQL: SELECT ?answer WHERE { wd:Q153739 wdt:P1412 ?answer . ?answer wdt:P1705 ?x FILTER(contains(?x,'langue française'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jean Arp', 'p': 'language', 'o': '?x0'}

 Q: What is {software version} of {iOS} that is {platform} is {iPod touch (1st generation)} ?
 SPARQL: SELECT ?obj WHERE { wd:Q48493 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P400 wd:Q45865128 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'version', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'iOS', 'p': 'version', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'platform', 'o': 'iPod touch (1st generation)'}}}

 Q: Give me {chemical element} that {location of discovery} {United Kingdom} and which contains the word {strontium} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11344 . ?sbj wdt:P189 wd:Q145 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'strontium')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical element', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of discovery', 'o': 'UK'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'strontium'}}

 Q: What is the Kinopoisk film ID for Dragon Ball Z?
 SPARQL: select distinct ?answer where { wd:Q477916 wdt:P2603 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dragon Ball Z', 'p': 'Kinopoisk film ID', 'o': '?x0'}

 Q: Tell me which is the commune of France with specific status which contains the word èze in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22927616 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'èze')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France with specific status'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'èze'}}

 Q: What is the {World Heritage criteria} and the {history of topic} of {Great_Wall_of_China} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q12501 wdt:P2614 ?ans_1 . wd:Q12501 wdt:P2184 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Great Wall of China', 'p': 'World Heritage criteria', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Great Wall of China', 'p': 'history of topic', 'o': '?x1'}]

 Q: What is the rank of the taxon parent in the Allosaurus family?
 SPARQL: SELECT ?answer WHERE { wd:Q14400 wdt:P171 ?answer . ?answer wdt:P105 wd:Q35409}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Allosaurus', 'p': 'taxon parent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'rank', 'o': 'family'}}

 Q: What Class IIIB combustible liquid has the highest vapor pressure?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009059 . ?ent wdt:P2119 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'vapor pressure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IIIB combustible liquid'}}

 Q: How many movements are for The Internationale ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q49617 wdt:P135 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Internationale', 'p': 'movement', 'o': '?x0'}

 Q: what is the {start time} for {Keith Holyoake} has {position held} as {Prime Minister of New Zealand} ?
 SPARQL: SELECT ?value WHERE { wd:Q637012 p:P39 ?s . ?s ps:P39 wd:Q1071117 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Keith Holyoake', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of New Zealand'}}}

 Q: What is {yearly visitors} of {venue} of {Counter-Reformation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q128168 wdt:P276 ?X . ?X wdt:P1174 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'yearly visitors', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Counter-Reformation', 'p': 'location', 'o': '$y0'}}

 Q: What is <hair color> of <Emma Stone> ?
 SPARQL: select distinct ?answer where { wd:Q147077 wdt:P1884 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Emma Stone', 'p': 'hair color', 'o': '?x0'}

 Q: Who gave the  {food plant} of {landscape of} of {Laguiole knife} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23727 wdt:P180 ?X . ?X wdt:P1034 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'food plant', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Laguiole knife', 'p': 'landscape of', 'o': '$y0'}}

 Q: What is {nominated for} of {The Shawshank Redemption} and {nominee}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q172241 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Shawshank Redemption', 'p': 'nominated for', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'nominated for', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Shawshank Redemption', 'p': 'nominated for', 'o': '$y0'}}]

 Q: Which is the minimal incubation period in humans for malaria?
 SPARQL: select distinct ?answer where { wd:Q12156 wdt:P3488 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'malaria', 'p': 'minimal incubation period in humans', 'o': '?x0'}

 Q: Which is the standard enthalpy of formation of ethane?
 SPARQL: select distinct ?answer where { wd:Q52858 wdt:P3078 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethane', 'p': 'standard enthalpy of formation', 'o': '?x0'}

 Q: What is the {Olympic sporting event} for {victory} of {Kristi Yamaguchi}
 SPARQL:  select distinct ?obj where { wd:Q237651 wdt:P2522 ?obj . ?obj wdt:P31 wd:Q18536594 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kristi Yamaguchi', 'p': 'won', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Olympic sporting event'}}

 Q: what is the {end time} for {Adolphe Thiers} has {position held} as {head of government of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q5738 p:P39 ?s . ?s ps:P39 wd:Q15135541 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adolphe Thiers', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'head of government of France'}}}

 Q: What group had effect on Congress of Vienna?
 SPARQL:  select distinct ?obj where { wd:Q46362 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q16887380 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Congress of Vienna', 'p': 'effect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group'}}

 Q: How many were officially opened by Prince Philip, Duke of Edinburgh?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P542 wd:Q80976 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'officially opened by', 'o': 'Prince Philip, Duke of Edinburgh'}

 Q: What tributary is on lake Saint Martin?
 SPARQL: SELECT ?answer WHERE { wd:Q25596 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saint Martin', 'p': 'on lake', 'o': '$y0'}}

 Q: What is {deity of} of {slaughtered by} of {Mahishasura} ?
 SPARQL: SELECT ?answer WHERE { wd:Q663318 wdt:P157 ?X . ?X wdt:P1049 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'deity of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahishasura', 'p': 'slaughtered by', 'o': '$y0'}}

 Q: what is the spacecraft with the lowest orbits completed whose instance of is spacecraft?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q40218 . ?ent wdt:P1418 ?obj . ?ent wdt:P31 wd:Q40218} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'orbits completed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spacecraft'}}

 Q: What is {forename} of {José de San Martín}, that has {disputed equivalence} is {Joep} ?
 SPARQL: SELECT ?answer WHERE { wd:Q134160 wdt:P735 ?answer . ?answer wdt:P460 wd:Q2188110}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'José de San Martín', 'p': 'name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'disputed equivalence', 'o': 'Joep'}}

 Q: What is the ITF wheelchair player ID for Shingo Kunieda?
 SPARQL: select distinct ?answer where { wd:Q959958 wdt:P4299 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shingo Kunieda', 'p': 'ITF wheelchair player ID', 'o': '?x0'}

 Q: What is the {enterprise} for {product or material produced} of {CBS}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q43380 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'CBS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: What is {educated at} of {Vint Cerf} that is {academic major} is {mathematics} ?
 SPARQL: SELECT ?obj WHERE { wd:Q92743 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q395 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vint Cerf', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic major', 'o': 'mathematics'}}}

 Q: What is {has kid} of {Casey Affleck}, that has {religious affiliation} is {Episcopal Church} ?
 SPARQL: SELECT ?answer WHERE { wd:Q270730 wdt:P40 ?answer . ?answer wdt:P140 wd:Q682443}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Casey Affleck', 'p': 'child', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'religious affiliation', 'o': 'Episcopal Church'}}

 Q: Give me {hypothetical planet} that {parent astronomical body} {Sun} and which contains the word {vulcan} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5961279 . ?sbj wdt:P397 wd:Q525 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vulcan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hypothetical planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Sun'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vulcan'}}

 Q: What is {date of birth} of {Pericles} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80398 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pericles', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Which {number of points/goals/set scored} and {number of matches played} of {{Matt Busby} has {member of sports team} as {Liverpool F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206237 p:P54 ?s . ?s ps:P54 wd:Q1130849 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matt Busby', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Liverpool F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matt Busby', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Liverpool F.C.'}}}]

 Q: Which is the RSL editions of Esquire?
 SPARQL: select distinct ?answer where { wd:Q762195 wdt:P1973 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esquire', 'p': 'RSL editions', 'o': '?x0'}

 Q: What is {signed language} of {Peter Singer}, that has {has case} is {genitive case} ?
 SPARQL: SELECT ?answer WHERE { wd:Q211539 wdt:P1412 ?answer . ?answer wdt:P2989 wd:Q146233}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Singer', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has case', 'o': 'genitive case'}}

 Q: What is the {human} for {country of citizenship} of {Tokugawa shogunate}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P27 wd:Q205662 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'Tokugawa Shogunate', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Tell me the hypothetical planet that has Sun as a parent astronomical body and starts with the letter v?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5961279 . ?sbj wdt:P397 wd:Q525 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hypothetical planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Sun'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what is the {for work} for {Diane Keaton} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q102642 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diane Keaton', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Which is the voice type of death growl?
 SPARQL: select distinct ?answer where { ?answer wdt:P412 wd:Q335499}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice type', 'o': 'death growl'}

 Q: What is {renter} of {neighborhood} of {Venus de Milo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q151952 wdt:P276 ?X . ?X wdt:P466 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'renter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Venus de Milo', 'p': 'location', 'o': '$y0'}}

 Q: What are the book which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q571 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What are the Catholic cathedral which start with the letter saint
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56242215 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'saint')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Catholic cathedral'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'saint'}}

 Q: Which is the collage image for Boston?
 SPARQL: select distinct ?answer where { wd:Q100 wdt:P2716 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Boston', 'p': 'collage image', 'o': '?x0'}

 Q: Which is {founded by} the {subsidiary} of {Southwest_Airlines} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q503308 wdt:P112 ?ans_1 . wd:Q503308 wdt:P355 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Southwest', 'p': 'founded by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Southwest', 'p': 'subsidiary', 'o': '?x1'}]

 Q: "Which is {has local government areas} of {Louisiana}, that has {year created} is {1886-6-30} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1588 wdt:P150 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1886'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louisiana', 'p': 'has local government areas', 'o': '?x0', 't': '1886'}

 Q: How many presenters are for Top Gear?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q33162 wdt:P371 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Top Gear', 'p': 'presenter', 'o': '?x0'}

 Q: What is {language spoken} of {Nancy Astor, Viscountess Astor}, that has {Wikivoyage banner} is {Welcome banner.jpg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q195013 wdt:P1412 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Welcome banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nancy Astor, Viscountess Astor', 'p': 'language', 'o': '?x0'}

 Q: Are Tintin and Snowy characters from 'The Adventures of Tintin'?
 SPARQL: ASK WHERE { wd:Q744536 wdt:P674 wd:Q52986 . wd:Q744536 wdt:P674 wd:Q1640056 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Adventures of Tintin', 'p': 'characters', 'o': '?x0', '?x0': 'Tintin'}, {'h': 'IS', 'v': '?x1', 's': 'The Adventures of Tintin', 'p': 'characters', 'o': '?x1', '?x1': 'Snowy'}]

 Q: what is the {start time} for {Sebastian Coe} has {position held} as {President of the Olympic Organizing Committee} ?
 SPARQL: SELECT ?value WHERE { wd:Q188502 p:P39 ?s . ?s ps:P39 wd:Q7241353 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sebastian Coe', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the Olympic Organizing Committee'}}}

 Q: Tell me intensive quantity whose name has the word volume in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3387041 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'volume')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intensive quantity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'volume'}}

 Q: What is USHMM Holocaust Encyclopedia ID of genocide?
 SPARQL: select distinct ?answer where { wd:Q41397 wdt:P3724 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'genocide', 'p': 'USHMM Holocaust Encyclopedia ID', 'o': '?x0'}

 Q: What is the constitution of the Soviet Union?
 SPARQL:  select distinct ?obj where { wd:Q15180 wdt:P457 ?obj . ?obj wdt:P31 wd:Q7755 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Soviet Union', 'p': 'constitution', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitution'}}

 Q: Which is the diagnostic test that is a health specialty of anatomical pathology and contains the word pap in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1762591 . ?sbj wdt:P1995 wd:Q683455 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pap')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'diagnostic test', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'health specialty', 'o': 'anatomical pathology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pap'}}

 Q: Give me {daily newspaper} that {editor} {Alan Rusbridger} and which contains the word {guardian} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1110794 . ?sbj wdt:P98 wd:Q921140 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'guardian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'daily newspaper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'editor', 'o': 'Alan Rusbridger'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'guardian'}}

 Q: Name the anion for conjugate acid of ammonia?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q4087 . ?sbj wdt:P31 wd:Q107968 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'ammonia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anion'}}

 Q: What is {spouse} of {Julius Caesar} that is {end time} is {-68-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1048 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(?x,'-68-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'wife', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julius Caesar', 'p': 'wife', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end time', 'o': '-68-0-0'}}}

 Q: Which is the endianness for x86?
 SPARQL: select distinct ?answer where { wd:Q182933 wdt:P3374 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'x86', 'p': 'endianness', 'o': '?x0'}

 Q: What is {informed by} of {musician} of {Tout le monde} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29555703 wdt:P175 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'informed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tout le monde', 'p': 'artist', 'o': '$y0'}}

 Q: When did Donald Crisp win the Academy Award for Best Supporting Actor?
 SPARQL: SELECT ?value WHERE { wd:Q367073 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Donald Crisp', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Academy Award for Best Supporting Actor'}, 't': '?x0'}

 Q: Is it true that the Mohs' hardness of pyrite equals to 6?
 SPARQL: ASK WHERE { wd:Q50769 wdt:P1088 ?obj filter(?obj = 6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'pyrite', 'p': "Mohs' hardness", 'o': '?x0', '?x0': '6'}

 Q: What is {academic major} and {academic degree} of {{Katherine Dunham} has {educated at} as {University of Chicago}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}]

 Q: Give me {formula} that starts with {'z'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q976981 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'formula'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What are the  type of software which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28530532 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of software'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {disputed equivalence} of {restaurant}, that has {is different from} is {high-class restaurant} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11707 wdt:P460 ?answer . ?answer wdt:P1889 wd:Q19316447}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'restaurant', 'p': 'disputed equivalence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'different from', 'o': 'high-class restaurant'}}

 Q: What is {nominated for} of {Judi Dench} that is {for work} is {Notes on a Scandal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q28054 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q756849 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Judi Dench', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Notes on a Scandal'}}}

 Q: Does the bore of the DRG Class 03 equal 570?
 SPARQL: ASK WHERE { wd:Q201801 wdt:P2556 ?obj filter(?obj = 570) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'DRG Class 03', 'p': 'bore', 'o': '?x0', '?x0': '570'}

 Q: For Saint Kitts and Nevis when was the inflation rate as 6.5?
 SPARQL: SELECT ?value WHERE { wd:Q763 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'6.5')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Saint Kitts and Nevis', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '6.5'}, 't': '?x0'}

 Q: Which Kazakhstan landing Soyuz-TM has the greatest orbital period?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2705481 . ?ent wdt:P2146 ?obj . ?ent wdt:P1158 wd:Q232 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'orbital period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Soyuz-TM', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of landing', 'o': 'Kazakhstan'}}}

 Q: What is {first recorded in} of {death type} of {David Koresh} ?
 SPARQL: SELECT ?answer WHERE { wd:Q431015 wdt:P1196 ?X . ?X wdt:P1249 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first recorded in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Koresh', 'p': 'death type', 'o': '$y0'}}

 Q: What is {written by} of {sequel of} of {Lila: An Inquiry into Morals} ?
 SPARQL: SELECT ?answer WHERE { wd:Q694346 wdt:P155 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'author', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lila: An Inquiry into Morals', 'p': 'sequel of', 'o': '$y0'}}

 Q: What is <measured by> of <cubic metre> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1880 wd:Q25517}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'cubic meter'}

 Q: what is the {start time} for {Gamal Abdel Nasser} has {position held} as {Prime Minister of Egypt} ?
 SPARQL: SELECT ?value WHERE { wd:Q39524 p:P39 ?s . ?s ps:P39 wd:Q1571396 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gamal Abdel Nasser', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Egypt'}}}

 Q: What is {voice actor} of {Family Guy} that is {character role} is {Loretta Brown} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5930 p:P725 ?s . ?s ps:P725 ?obj . ?s pq:P453 wd:Q589480 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'voice actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Family Guy', 'p': 'voice actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'character role', 'o': 'Loretta Brown'}}}

 Q: What is {total fertility rate} of {subitem of} of {history of Peru} ?
 SPARQL: SELECT ?answer WHERE { wd:Q316648 wdt:P1269 ?X . ?X wdt:P4841 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Peru', 'p': 'subitem of', 'o': '$y0'}}

 Q: What was the population of Melilla in 2016-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q5831 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Melilla', 'p': 'population', 'o': '?x0', 't': '2016'}

 Q: How many developers are placed at Department of Defense?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P178 wd:Q11209 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Department of Defense'}

 Q: Is it true that the maximum temperature record of Antarctica is less than 21?
 SPARQL: ASK WHERE { wd:Q51 wdt:P6591 ?obj filter(?obj < 21.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Antarctica', 'p': 'maximum temperature record', 'o': '?x0', '?x0': '21.0'}

 Q: What is {royal house} of {manager} of {Order of Saint John (Bailiwick of Brandenburg)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4498889 wdt:P1037 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'house', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Order of Saint John (Bailiwick of Brandenburg)', 'p': 'manager', 'o': '$y0'}}

 Q: What is {relative} of {Henry the Lion} that is {type of kinship} is {male first cousin} ?
 SPARQL: SELECT ?obj WHERE { wd:Q105378 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1039 wd:Q41805519 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cousin', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry the Lion', 'p': 'cousin', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'male first cousin'}}}

 Q: What area in Sevastopol is disputed territory?
 SPARQL:  select distinct ?obj where { wd:Q7525 wdt:P706 ?obj . ?obj wdt:P31 wd:Q15239622 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sevastopol', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disputed territory'}}

 Q: What is {portrayed by} of {split from} of {Virgin Mary} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6163695 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrayed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Virgin Mary', 'p': 'split from', 'o': '$y0'}}

 Q: Sergei Eisenstein is the screenwriter of which silent film?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P58 wd:Q8003 . ?sbj wdt:P31 wd:Q226730 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'screenwriter', 'o': 'Sergei Eisenstein', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'silent film'}}

 Q: What is {human population} of {located in} of {Battle of Midway} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173034 wdt:P276 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle of Midway', 'p': 'location', 'o': '$y0'}}

 Q: Does Daft Punk perform in the genres of New Wave and Nu-Disco?
 SPARQL: ASK WHERE { wd:Q185828 wdt:P136 wd:Q187760 . wd:Q185828 wdt:P136 wd:Q4045538 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Daft Punk', 'p': 'genre', 'o': '?x0', '?x0': 'New Wave'}, {'h': 'IS', 'v': '?x1', 's': 'Daft Punk', 'p': 'genre', 'o': '?x1', '?x1': 'Nu-Disco'}]

 Q: what is the {start time} for {Cathay Pacific} has {item operated} as {Bristol Britannia} ?
 SPARQL: SELECT ?value WHERE { wd:Q32141 p:P121 ?s . ?s ps:P121 wd:Q917907 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cathay Pacific', 'p': 'item operated', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'item operated', 'o': 'Bristol Britannia'}}}

 Q: Tell me the intelligence agency which has as parent organization the Foreign and Commonwealth Office and contains the word intelligence in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47913 . ?sbj wdt:P749 wd:Q358834 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'intelligence')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intelligence agency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Foreign and Commonwealth Office'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'intelligence'}}

 Q: Who is born at Tilda Swinton, which has a partner town of Baku?
 SPARQL: SELECT ?answer WHERE { wd:Q200534 wdt:P19 ?answer . ?answer wdt:P190 wd:Q9248}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tilda Swinton', 'p': 'born at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Baku'}}

 Q: What commodity did the creators of the Logitech 3D mouse at Musée Bolo use?
 SPARQL: SELECT ?answer WHERE { wd:Q30177125 wdt:P170 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'commodity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Logitech 3D mouse at Musée Bolo', 'p': 'creator', 'o': '$y0'}}

 Q: What are the DNB editions of the King James Version?
 SPARQL: select distinct ?answer where { wd:Q623398 wdt:P1292 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'King James Version', 'p': 'DNB editions', 'o': '?x0'}

 Q: What is the {disease} for {drug used for treatment} of {biotin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2176 wd:Q181354 . ?sbj wdt:P31 wd:Q12136 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'used for treatment', 'o': 'Biotin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: What is the {country for sport} and the {position played on team / speciality} of {Isiah_Thomas} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q298512 wdt:P1532 ?ans_1 . wd:Q298512 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Isiah Thomas', 'p': 'country for sport', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Isiah Thomas', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: What award did Yuri Gagarin receive on April 29, 1961?
 SPARQL: SELECT ?obj WHERE { wd:Q7327 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yuri Gagarin', 'p': 'award', 'o': '?x0', 't': '1961'}

 Q: Was Andy Murray nominated for the Best Moment ESPY Award?
 SPARQL: ASK WHERE { wd:Q10125 wdt:P1411 wd:Q4896742 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Andy Murray', 'p': 'nominated for', 'o': '?x0', '?x0': 'Best Moment ESPY Award'}]

 Q: What is the religious affiliation of Jin, who has a Universal Decimal Classification of 221.3?
 SPARQL: SELECT ?answer WHERE { wd:Q912043 wdt:P140 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'221.3'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jin', 'p': 'religious affiliation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Universal Decimal Classification', 'o': '221.3'}}

 Q: Is the total fertility rate of the Belize greater than 2.0632?
 SPARQL: ASK WHERE { wd:Q242 wdt:P4841 ?obj filter(?obj > 2.0632) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Belize', 'p': 'total fertility rate', 'o': '?x0', '?x0': '2.0632'}

 Q: What is {quantity} of {torr}, that has {symbol} is {P} ?
 SPARQL: SELECT ?answer WHERE { wd:Q185648 wdt:P111 ?answer . ?answer wdt:P416 ?x FILTER(contains(?x,'P'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'torr', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'symbol', 'o': 'p'}}

 Q: What is {spouse} of {Aisha} that is {start time} is {619-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q4730963 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(?x,'619-1-1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'marry', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aisha', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '619-1-1'}}}

 Q: What is {owned by} of {Houston Chronicle} that is {start time} is {1937-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q595564 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1937')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Houston Chronicle', 'p': 'owned by', 'o': '?x0', 't': '1937'}

 Q: Give me {project} that {objective of project or mission} {nuclear weapon} and which contains the word {manhattan} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q170584 . ?sbj wdt:P3712 wd:Q12802 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manhattan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'project', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'objective', 'o': 'nuclear weapon'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'manhattan'}}

 Q: Which is the JMK film rating for Titanic?
 SPARQL: select distinct ?answer where { wd:Q44578 wdt:P3650 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Titanic', 'p': 'JMK film rating', 'o': '?x0'}

 Q: Which is Star Wars Databank ID for Princess Leia?
 SPARQL: select distinct ?answer where { wd:Q51797 wdt:P3798 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Princess Leia', 'p': 'Star Wars Databank ID', 'o': '?x0'}

 Q: What are the music genre which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q188451 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {cooperative} for {maintained by} of {Dewey Decimal Classification}
 SPARQL:  select distinct ?obj where { wd:Q48460 wdt:P126 ?obj . ?obj wdt:P31 wd:Q4539 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dewey Decimal Classification', 'p': 'maintained by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cooperative'}}

 Q: Who is {chief executive} of {manufacturer} of {IBM 7030 Stretch} ?
 SPARQL: SELECT ?answer WHERE { wd:Q984038 wdt:P176 ?X . ?X wdt:P169 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chief executive', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'IBM 7030 Stretch', 'p': 'manufacturer', 'o': '$y0'}}

 Q: Which award did Jacinto Benavente receive in the year 1922?
 SPARQL: SELECT ?obj WHERE { wd:Q83184 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1922')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacinto Benavente', 'p': 'award', 'o': '?x0', 't': '1922'}

 Q: Was Yul Brynner nominated for both the Academy Award for Best Actor and Drama Desk Award for Outstanding Featured Actor in a Musical?
 SPARQL: ASK WHERE { wd:Q102813 wdt:P1411 wd:Q103916 . wd:Q102813 wdt:P1411 wd:Q5305711 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Yul Brynner', 'p': 'nominated for', 'o': '?x0', '?x0': 'Academy Award for Best Actor'}, {'h': 'IS', 'v': '?x1', 's': 'Yul Brynner', 'p': 'nominated for', 'o': '?x1', '?x1': 'Drama Desk Award for Outstanding Featured Actor in a Musical'}]

 Q: Tell me about academic degree of Ludwig Wittgenstein and educated at?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9391 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P69 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ludwig Wittgenstein', 'p': 'academic degree', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ludwig Wittgenstein', 'p': 'academic degree', 'o': '$y0'}}]

 Q: What is the creation date of the Daimler AG subsidiary company?
 SPARQL: SELECT ?answer WHERE { wd:Q27530 wdt:P355 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'creation date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Daimler AG', 'p': 'subsidiary', 'o': '$y0'}}

 Q: What is the native label of Izhevsk since 1984-12-27?
 SPARQL: SELECT ?obj WHERE { wd:Q5426 p:P1705 ?s . ?s ps:P1705 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Izhevsk', 'p': 'native label', 'o': '?x0', 't': '1984'}

 Q: What is Wiki Loves Monuments ID for Knossos?
 SPARQL: select distinct ?answer where { wd:Q173527 wdt:P2186 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Knossos', 'p': 'Wiki Loves Monuments ID', 'o': '?x0'}

 Q: What is {position held} of {Itamar Franco} that is {elected in} is {Brazilian legislative election, 1982} ?
 SPARQL: SELECT ?obj WHERE { wd:Q485946 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 wd:Q4958850 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Itamar Franco', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'elected in', 'o': 'Brazilian legislative election, 1982'}}}

 Q: Did {Mariah_Carey} {ethnic group} {Cubans}?
 SPARQL: ASK WHERE { wd:Q41076 wdt:P172 wd:Q1195125 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Carey', 'p': 'ethnic group', 'o': '?x0', '?x0': 'Cubans'}]

 Q: Which is the elCinema film ID for The Godfather Part II?
 SPARQL: select distinct ?answer where { wd:Q184768 wdt:P3135 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Godfather Part II', 'p': 'elCinema film ID', 'o': '?x0'}

 Q: Which is the foods traditionally associated for Meleagris gallopavo?
 SPARQL: select distinct ?answer where { ?answer wdt:P868 wd:Q26844}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'foods traditionally associated', 'o': 'Meleagris gallopavo'}

 Q: What is Eason Chan youngster?
 SPARQL: select distinct ?answer where { ?answer wdt:P40 wd:Q704041}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'son', 'o': 'Eason Chan'}

 Q: What is {total fertility rate} of {citizen of} of {John Betjeman} ?
 SPARQL: SELECT ?answer WHERE { wd:Q962308 wdt:P27 ?X . ?X wdt:P4841 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Betjeman', 'p': 'citizen of', 'o': '$y0'}}

 Q: What is Dictionary of Sydney ID for Sydney Harbour Bridge ?
 SPARQL: select distinct ?answer where { wd:Q54495 wdt:P3794 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sydney Harbour Bridge', 'p': 'Dictionary of Sydney ID', 'o': '?x0'}

 Q: What is {academic degree} and {academic major} of {{Emma Watson} has {educated at} as {Brown University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q39476 p:P69 ?s . ?s ps:P69 wd:Q49114 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emma Watson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Brown University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emma Watson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Brown University'}}}]

 Q: What is {field of exercise} of {developed by} of {Minecraft – Pocket Edition} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6016926 wdt:P178 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of exercise', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pocket Edition', 'p': 'developed by', 'o': '$y0'}}

 Q: Which is the Fotografen.nl ID of Harold Eugene Edgerton?
 SPARQL: select distinct ?answer where { wd:Q475733 wdt:P3269 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Harold Eugene Edgerton', 'p': 'Fotografen.nl ID', 'o': '?x0'}

 Q: What award did Gwen Stefani win with Eve?
 SPARQL: SELECT ?obj WHERE { wd:Q483379 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q239464 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gwen Stefani', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'with', 'o': 'Eve'}}}

 Q: What is {located in the administrative unit} of {Aguascalientes}, that has {has boroughs} is {Nayarit} ?
 SPARQL: SELECT ?answer WHERE { wd:Q79952 wdt:P131 ?answer . ?answer wdt:P150 wd:Q79920}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aguascalientes', 'p': 'located in the administrative unit', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has boroughs', 'o': 'Nayarit'}}

 Q: what is the {point in time} for {Edward Coke} has {award received} as {National Book Award for Nonfiction} ?
 SPARQL: SELECT ?value WHERE { wd:Q332435 p:P166 ?s . ?s ps:P166 wd:Q3873147 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Edward Coke', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'National Book Award for Nonfiction'}, 't': '?x0'}

 Q: What is {causes} of {comes after} of {embryo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q33196 wdt:P155 ?X . ?X wdt:P1542 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'causes', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'embryo', 'p': 'comes after', 'o': '$y0'}}

 Q: what is the {defender} for {Nuremberg trials} has {defendant} as {Arthur Seyss-Inquart} ?
 SPARQL: SELECT ?value WHERE { wd:Q80130 p:P1591 ?s . ?s ps:P1591 wd:Q650219 . ?s pq:P1593 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'defender', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nuremberg trials', 'p': 'defendant', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'defendant', 'o': 'Arthur Seyss-Inquart'}}}

 Q: Who finished serving as the manager/director of the Organization for Security and Co-operation in Europe in the year 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q81299 p:P1037 ?s . ?s ps:P1037 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Organization for Security and Co-operation in Europe', 'p': 'manager', 'o': '?x0', 't': '2011'}

 Q: What is {employed by} of {grandmother} of {Rob Kardashian} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26318 wdt:P1038 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rob Kardashian', 'p': 'grandmother', 'o': '$y0'}}

 Q: What are the ssociation football stadium which start with the letter U
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1154710 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'football stadium'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: what is the {nominee} for {Fight Club} has {award received} as {AWARDS CIRCUIT COMMUNITY AWARDS} ?
 SPARQL: SELECT ?value WHERE { wd:Q190050 p:P166 ?s . ?s ps:P166 wd:Q28044785 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fight Club', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'AWARDS CIRCUIT COMMUNITY AWARDS'}}}

 Q: What is {type locality (geology)} of {sylvite}, that has {significant incident} is {Mount Vesuvius eruption of 1631} ?
 SPARQL: SELECT ?answer WHERE { wd:Q409091 wdt:P2695 ?answer . ?answer wdt:P793 wd:Q954201}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'sylvite', 'p': 'type locality (geology)', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant incident', 'o': 'Mount Vesuvius eruption of 1631'}}

 Q: What is {death location} of {has father} of {Mashhur bin Abdulaziz Al Saud} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4549135 wdt:P22 ?X . ?X wdt:P20 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mashhur bin Abdulaziz Al Saud', 'p': 'father', 'o': '$y0'}}

 Q: Does Delta Air Lines make $552,284,000,000?
 SPARQL: ASK WHERE { wd:Q188920 wdt:P2232 ?obj filter(?obj = 5528400000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Delta Air Lines', 'p': 'cash', 'o': '?x0', '?x0': '5528400000.0'}

 Q: What is position held by Charles VIII of France who replaces Louis XI of France?
 SPARQL: SELECT ?obj WHERE { wd:Q134452 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q8058 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles VIII of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Louis XI of France'}}}

 Q: what is the {determination method} for {Vermont} has {population} as {359231.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q16551 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'359231.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vermont', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '359231.0'}}}

 Q: What is the {television series} with the {MAX(publication interval)} whose {cast member} is {Christine Prayon}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5398426 . ?ent wdt:P2896 ?obj . ?ent wdt:P161 wd:Q1083743 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'publication interval', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'cast member', 'o': 'Christine Prayon'}}}

 Q: who sister town of born in of Huban Öztoprak ?
 SPARQL: SELECT ?answer WHERE { wd:Q16588877 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Huban Öztoprak', 'p': 'born in', 'o': '$y0'}}

 Q: What is the most natural abundance of the isotope of cadmium that decays to palladium -106?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1321542 . ?ent wdt:P2374 ?obj . ?ent wdt:P816 wd:Q2541204 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'natural abundance', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of cadmium', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'decays to', 'o': 'palladium-106'}}}

 Q: What is {spouse} of {Ingrid Bergman} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q43247 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ingrid Bergman', 'p': 'married', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ingrid Bergman', 'p': 'married', 'o': '$y0'}}]

 Q: What is the author and the chief executive officer of Reddit ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1136 wdt:P50 ?ans_1 . wd:Q1136 wdt:P169 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Reddit', 'p': 'author', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Reddit', 'p': 'chief executive officer', 'o': '?x1'}]

 Q: who is author of afterword of Nineteen Eighty-Four ?
 SPARQL: select distinct ?answer where { wd:Q208460 wdt:P2680 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nineteen Eighty-Four', 'p': 'author of afterword', 'o': '?x0'}

 Q: What is the {human} for {student} of {Ip Man}
 SPARQL:  select distinct ?obj where { wd:Q163830 wdt:P802 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ip Man', 'p': 'student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the arrondissement of Cathedral of Santiago de Compostela, and has a partner town of Mashhad?
 SPARQL: SELECT ?answer WHERE { wd:Q205136 wdt:P131 ?answer . ?answer wdt:P190 wd:Q121157}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cathedral of Santiago de Compostela', 'p': 'town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Mashhad'}}

 Q: Which is the video game of the series of Call of Duty?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q192156 . ?sbj wdt:P31 wd:Q7889 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Call of Duty', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game'}}

 Q: what are the military rank which starts with s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56019 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military rank'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {pronunciation audio} of {cattle} that is {language of work or name} is {Tamil} ?
 SPARQL: SELECT ?obj WHERE { wd:Q830 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q5885 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cattle', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'Tamil'}}}

 Q: what is the {point in time} for {Imus} has {population} as {301624.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q63145 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'301624.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Imus', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '301624.0'}, 't': '?x0'}

 Q: what is the {point in time} for {Octavio Paz} has {award received} as {John Simon Guggenheim Memorial Foundation Fellowship} ?
 SPARQL: SELECT ?value WHERE { wd:Q46739 p:P166 ?s . ?s ps:P166 wd:Q1316544 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Octavio Paz', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'John Simon Guggenheim Memorial Foundation Fellowship'}, 't': '?x0'}

 Q: Which extrasolar planet within the constellation Aquarius has the smallest radius?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q44559 . ?ent wdt:P2120 ?obj . ?ent wdt:P59 wd:Q10576} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'radius', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'extrasolar planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Aquarius'}}}

 Q: Give me {aspect of history} that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17524420 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of history'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: what is the {point in time} for {Sacha Baron Cohen} has {award received} as {Los Angeles Film Critics Association Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q29055 p:P166 ?s . ?s ps:P166 wd:Q503034 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Sacha Baron Cohen', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Los Angeles Film Critics Association Award for Best Actor'}, 't': '?x0'}

 Q: "Which is {uses language} of {Imre Kertész}, that has {AWLD status} is {1 safe} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q47755 wdt:P1412 ?answer . ?answer wdt:P1999 wd:Q20672086}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Imre Kertész', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'AWLD status', 'o': '1 safe'}}

 Q: what is the {determination method} for {Badalona} has {population} as {217210.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q15468 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'217210.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Badalona', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '217210.0'}}}

 Q: Is the member count of the Club of Rome 80.0?
 SPARQL: ASK WHERE { wd:Q107569 wdt:P2124 ?obj filter(?obj = 80.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Club of Rome', 'p': 'member count', 'o': '?x0', '?x0': '80.0'}

 Q: What is {human population} of {located in the administrative territorial entity} of {Madeira} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26253 wdt:P131 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Madeira', 'p': 'in', 'o': '$y0'}}

 Q: What is <Gran Enciclopèdia Catalana ID> of <Yue Fei> ?
 SPARQL: select distinct ?answer where { wd:Q334398 wdt:P1296 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yue Fei', 'p': 'Gran Enciclopèdia Catalana ID', 'o': '?x0'}

 Q: "Which is {parent body} of {Neptune}, who has {symbol} is {solar symbol} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q332 wdt:P397 ?answer . ?answer wdt:P913 wd:Q3241584}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Neptune', 'p': 'parent body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'symbol', 'o': 'solar symbol'}}

 Q: What is <class> of <dessert> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2308 wd:Q182940}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'class', 'o': 'dessert'}

 Q: When did Ray Bradbury get the doctor honoris causa degree?
 SPARQL: SELECT ?value WHERE { wd:Q40640 p:P512 ?s . ?s ps:P512 wd:Q11415564 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ray Bradbury', 'p': 'degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'doctor honoris causa'}, 't': '?x0'}

 Q: Is the fee of the Ueno Zoo greater than 240.0?
 SPARQL: ASK WHERE { wd:Q162722 wdt:P2555 ?obj filter(?obj > 240.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Ueno Zoo', 'p': 'fee', 'o': '?x0', '?x0': '240.0'}

 Q: Which is {birthplace} {state} of {Victor Emmanuel I of Sardinia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q175250 wdt:P19 ?X . ?X wdt:P17 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'state', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Emmanuel I of Sardinia', 'p': 'birthplace', 'o': '$y0'}}

 Q: Give me {comic genre} that starts with {'n'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20087698 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comic genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is the career of the creators of The Sims?
 SPARQL: SELECT ?answer WHERE { wd:Q4897444 wdt:P170 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'career', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Sims', 'p': 'creator', 'o': '$y0'}}

 Q: When was the population of Special Region of Yogyakarta 3,542,078?
 SPARQL: SELECT ?value WHERE { wd:Q3741 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'3542078')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Special Region of Yogyakarta', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '3542078'}, 't': '?x0'}

 Q: How many first aid measures are there for mercury poisoning?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q408089 wdt:P2239 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'mercury poisoning', 'p': 'first aid measures', 'o': '?x0'}

 Q: Tell me railroad line whose name has the word schluff in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q728937 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'schluff')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railroad line'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'schluff'}}

 Q: What is the {fictional human} for {present in work} of {Macbeth}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q130283 . ?sbj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Macbeth', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional person'}}

 Q: Who is the person of the family of House of Medici?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P53 wd:Q170022 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'family', 'o': 'House of Medici', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {treatment} of {hypertension}, that has {treats} is {hypersalivation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41861 wdt:P2176 ?answer . ?answer wdt:P2175 wd:Q761862}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'hypertension', 'p': 'treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'treats', 'o': 'hypersalivation'}}

 Q: How many anthems are by God Save the Queen?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P85 wd:Q40807 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'God Save the Queen'}

 Q: What is the {sovereign state} for {significant event} of {Indian independence movement}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q12444025 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Indian Independence Movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Which is the Trustpilot company ID for Wikipedia?
 SPARQL: select distinct ?answer where { wd:Q52 wdt:P5161 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wikipedia', 'p': 'Trustpilot company ID', 'o': '?x0'}

 Q: Which is National Gallery of Canada artist ID for Camille Pissarro?
 SPARQL: select distinct ?answer where { wd:Q134741 wdt:P5368 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Camille Pissarro', 'p': 'National Gallery of Canada artist ID', 'o': '?x0'}

 Q: What is the economic activity that starts with the letter 'v'?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8187769 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic activity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {is in the county of} of {Jigawa State}, that has {administrative centre} is {Abuja} ?
 SPARQL: SELECT ?answer WHERE { wd:Q682691 wdt:P131 ?answer . ?answer wdt:P36 wd:Q3787}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jigawa State', 'p': 'is in the county of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'administrative centre', 'o': 'Abuja'}}

 Q: Iggy Pop is a member of what band?
 SPARQL:  select distinct ?obj where { wd:Q182665 wdt:P463 ?obj . ?obj wdt:P31 wd:Q215380 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iggy Pop', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'band'}}

 Q: what is the {type of kinship} for {Adolf Hitler} has {relative} as {Johanna Hiedler} ?
 SPARQL: SELECT ?value WHERE { wd:Q352 p:P1038 ?s . ?s ps:P1038 wd:Q6216378 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adolf Hitler', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Johanna Hiedler'}}}

 Q: What is {award received} of {Nikolai Kryuchkov} that is {point in time} is {1980-12-23} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1196388 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nikolai Kryuchkov', 'p': 'award', 'o': '?x0', 't': '1980'}

 Q: Tell me about position held of Vladimir Putin and manager/director?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7747 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1037 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manager', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'position held', 'o': '$y0'}}]

 Q: How many {designated as terrorist by} are for {Hezbollah} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q41053 wdt:P3461 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Hezbollah', 'p': 'designated as terrorist by', 'o': '?x0'}

 Q: which is the {determination method} for {Montana} where {population} as {559456.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q1212 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'559456.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Montana', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '559456.0'}}}

 Q: What is {personal name} of {Isaac Fawkes}, that has {same as} is {Isaach} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6076303 wdt:P735 ?answer . ?answer wdt:P460 wd:Q30231991}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isaac Fawkes', 'p': 'personal name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Isaach'}}

 Q: Which is the character role of Luciano Pavarotti?
 SPARQL: select distinct ?answer where { wd:Q37615 wdt:P453 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Luciano Pavarotti', 'p': 'character role', 'o': '?x0'}

 Q: Which is the doctoral thesis of Dorothy Hodgkin?
 SPARQL: select distinct ?answer where { wd:Q7487 wdt:P1026 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dorothy Hodgkin', 'p': 'thesis', 'o': '?x0'}

 Q: Is the electrical resistivity of Grivory GM-4H equal to 1000000000000?
 SPARQL: ASK WHERE { wd:Q57051271 wdt:P5679 ?obj filter(?obj = 1000000000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Grivory GM-4H', 'p': 'electrical resistivity', 'o': '?x0', '?x0': '1000000000000'}

 Q: What is the {public office} for {officeholder} of {Jacinda Ardern}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q3606816 . ?sbj wdt:P31 wd:Q294414 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Jacinda Ardern', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public office'}}

 Q: What determination method Washington uses for its population 1.14199e+06?
 SPARQL: SELECT ?value WHERE { wd:Q1223 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.14199e+06')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Washington', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.14199e+06'}}}

 Q: What is the {craft} for {occupation} of {Joseph}
 SPARQL:  select distinct ?obj where { wd:Q128267 wdt:P106 ?obj . ?obj wdt:P31 wd:Q2207288 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joseph', 'p': 'occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'craft'}}

 Q: What is the {member of sports team} and the {position played on team / speciality} of {Tom_Brady} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q313381 wdt:P54 ?ans_1 . wd:Q313381 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Tom Brady', 'p': 'team', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Tom Brady', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: Which is the character from Star Wars that has the first appearance in the Star Wars Episode IV: A New Hope and starts with the letter l?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33125444 . ?sbj wdt:P4584 wd:Q17738 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character from Star Wars', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first appearance', 'o': 'A New Hope'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Is George O'Leary's number of losses of less than 121.2?
 SPARQL: ASK WHERE { wd:Q5542970 wdt:P1356 ?obj filter(?obj < 121.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': "George O'Leary", 'p': 'number of losses', 'o': '?x0', '?x0': '121.2'}

 Q: What is <companion of> of <Proxima Centauri> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P399 wd:Q14266}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'companion of', 'o': 'Proxima Centauri'}

 Q: When did landlocked country for currency of Russian ruble?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q41044 . ?sbj wdt:P31 wd:Q123480 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Russian ruble', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'landlocked country'}}

 Q: What is the {consolidated city-county} for {twinned administrative body} of {Thessaloniki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q17151 . ?sbj wdt:P31 wd:Q3301053 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Thessaloniki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'consolidated city-county'}}

 Q: What is the total assets owned by the Royal Dutch Shell?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q154950 wdt:P2403 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Royal Dutch Shell', 'p': 'total assets', 'o': '?x0'}

 Q: Who was Andrei Konchalovsky's spouse from 1965-1-1 onward?
 SPARQL: SELECT ?obj WHERE { wd:Q55208 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1965')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrei Konchalovsky', 'p': 'spouse', 'o': '?x0', 't': '1965'}

 Q: Which is the cipM poet ID of John Cage?
 SPARQL: select distinct ?answer where { wd:Q180727 wdt:P5393 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Cage', 'p': 'cipM poet ID', 'o': '?x0'}

 Q: Who was Kim Basinger's husband until 2002?
 SPARQL: SELECT ?obj WHERE { wd:Q131380 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kim Basinger', 'p': 'husband', 'o': '?x0', 't': '2002'}

 Q: Is it true that the production rate of Volvo is greater than 427465.6?
 SPARQL: ASK WHERE { wd:Q215293 wdt:P2197 ?obj filter(?obj > 427465.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Volvo', 'p': 'production rate', 'o': '?x0', '?x0': '427465.6'}

 Q: What books were illustrated by William Blake?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P110 wd:Q41513 . ?sbj wdt:P31 wd:Q571 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'illustrated by', 'o': 'William Blake', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}}

 Q: Tell me firearm whose name has the word shotgun in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12796 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'shotgun')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'firearm'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'shotgun'}}

 Q: What are the ancient city which start with the letter zemar
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15661340 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zemar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zemar'}}

 Q: which is the {type of kinship} for {Jesse Louis Lasky} whose {relative} as {Samuel Goldwyn} ?
 SPARQL: SELECT ?value WHERE { wd:Q1384661 p:P1038 ?s . ?s ps:P1038 wd:Q72579 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jesse Louis Lasky', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Samuel Goldwyn'}}}

 Q: What is the {youth organization} for {official language} of {Hebrew}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q9288 . ?sbj wdt:P31 wd:Q1572070 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Hebrew', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'youth organization'}}

 Q: what is the {end time} for {Charlie's Angels} has {cast member} as {Tanya Roberts} ?
 SPARQL: SELECT ?value WHERE { wd:Q617274 p:P161 ?s . ?s ps:P161 wd:Q232356 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Charlie's Angels", 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Tanya Roberts'}}}

 Q: Where is the location of the river source for the Hudson River?
 SPARQL: SELECT ?obj WHERE { wd:Q3140 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hudson River', 'p': 'location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for', 'o': 'river source'}}}

 Q: who is the Vidhan Sabha for legislative body of Assam?
 SPARQL:  select distinct ?obj where { wd:Q1164 wdt:P194 ?obj . ?obj wdt:P31 wd:Q3091020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Assam', 'p': 'legislative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Vidhan Sabha'}}

 Q: Wikipedia is the operator of what foundation?
 SPARQL:  select distinct ?obj where { wd:Q52 wdt:P137 ?obj . ?obj wdt:P31 wd:Q157031 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wikipedia', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'foundation'}}

 Q: Which Hanseatic city has a twinned administrative body of Thessaloniki?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q17151 . ?sbj wdt:P31 wd:Q707813 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Thessaloniki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Hanseatic city'}}

 Q: What is {position held} of {Gerry Adams} that is {end cause} is {dissolution of parliament} ?
 SPARQL: SELECT ?obj WHERE { wd:Q76139 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1534 wd:Q741182 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerry Adams', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end cause', 'o': 'dissolution of parliament'}}}

 Q: Was Billy Joel a member of the Billy Joel Band?
 SPARQL: ASK WHERE { wd:Q194333 wdt:P463 wd:Q4912802 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Billy Joel', 'p': 'member of', 'o': '?x0', '?x0': 'Billy Joel Band'}]

 Q: Which is {award received} of {Annie Leibovitz} where {point in time} is {2003-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q225283 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Annie Leibovitz', 'p': 'award received', 'o': '?x0', 't': '2003'}

 Q: Was cancer the cause of death of Paul Newman?
 SPARQL: ASK WHERE { wd:Q41871 wdt:P509 wd:Q12078 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Paul Newman', 'p': 'cause of death', 'o': '?x0', '?x0': 'cancer'}]

 Q: Give me {space program} that contains the word {space} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60054001 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'space')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space program'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'space'}}

 Q: Which are the coordinates of the point of view for Bliss?
 SPARQL: select distinct ?answer where { wd:Q2368 wdt:P1259 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bliss', 'p': 'coordinates of the point of view', 'o': '?x0'}

 Q: tell me railway tunnel that contains the word tunel in the name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1311958 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tünel')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway tunnel'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tünel'}}

 Q: Which  is party chief representative of Xi Jinping ?
 SPARQL: select distinct ?answer where { ?answer wdt:P210 wd:Q15031}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'party chief representative', 'o': 'Xi Jinping'}

 Q: What are the thunder god which start with the letter zeus
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q842697 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'thunder god'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeus'}}

 Q: Where is the {dominion of the British Empire} for {state} of {Himachal Pradesh}?
 SPARQL:  select distinct ?obj where { wd:Q1177 wdt:P17 ?obj . ?obj wdt:P31 wd:Q223832 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Himachal Pradesh', 'p': 'state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dominion of the British Empire'}}

 Q: Who is the organizer of FIFA World Cup?
 SPARQL: select distinct ?answer where { wd:Q19317 wdt:P664 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'FIFA World Cup', 'p': 'organizer', 'o': '?x0'}

 Q: Which is the genomic end of RHO?
 SPARQL: select distinct ?answer where { wd:Q14859555 wdt:P645 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'RHO', 'p': 'genomic end', 'o': '?x0'}

 Q: What country is located in the administrative territorial entity of Khyber Pakhtunkhwa?
 SPARQL:  select distinct ?obj where { wd:Q183314 wdt:P131 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Khyber Pakhtunkhwa', 'p': 'located in the administrative territorial entity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Is it true that the electric charge of the pion equals to -1?
 SPARQL: ASK WHERE { wd:Q4097 wdt:P2200 ?obj filter(?obj = -1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'pion', 'p': 'electric charge', 'o': '?x0', '?x0': '-1'}

 Q: Amtrak is the owner of which tower station ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q23239 . ?sbj wdt:P31 wd:Q55484 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owner', 'o': 'Amtrak', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tower station'}}

 Q: What is {duty} of {prescribed drug} of {bipolar disorder} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131755 wdt:P2176 ?X . ?X wdt:P2868 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'duty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'bipolar disorder', 'p': 'prescribed drug', 'o': '$y0'}}

 Q: What is <medical examinations> of <phenotype> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P923 wd:Q104053}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical examinations', 'o': 'phenotype'}

 Q: Name the spouse of Paavo Haavikko, who passed away on October 10, 2008.
 SPARQL: SELECT ?obj WHERE { wd:Q444876 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paavo Haavikko', 'p': 'spouse', 'o': '?x0', 't': '2008'}

 Q: When is {diplomatic relation} {comes from} {Hunger} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1062365 wdt:P495 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hunger', 'p': 'comes from', 'o': '$y0'}}

 Q: Which is the office held by head of the organisation of Autonomous University of Madrid?
 SPARQL: select distinct ?answer where { wd:Q788091 wdt:P2388 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Autonomous University of Madrid', 'p': 'office held by head of the organisation', 'o': '?x0'}

 Q: Who are the alumnus of Chris Burden whose Carnegie Classification of Institutions of Higher Education is exclusively undergraduate four-year?
 SPARQL: SELECT ?answer WHERE { wd:Q720832 wdt:P69 ?answer . ?answer wdt:P2643 wd:Q23623476}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chris Burden', 'p': 'alumnus of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Carnegie Classification of Institutions of Higher Education', 'o': 'exclusively undergraduate four-year'}}

 Q: How many {discoverer or inventor} are to/by {Andrey Kolmogorov} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P61 wd:Q153224 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'Andrey Kolmogorov'}

 Q: What is <Swimrankings.net swimmer ID> of <Ryan Lochte> ?
 SPARQL: select distinct ?answer where { wd:Q201517 wdt:P2640 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ryan Lochte', 'p': 'Swimrankings.net swimmer ID', 'o': '?x0'}

 Q: what is the {determination method} for {Iloilo City} has {population} as {334539.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q459787 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'334539.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iloilo City', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '334539.0'}}}

 Q: What is key event of h capital that has Grand Duchy of Moscow ?
 SPARQL: SELECT ?answer WHERE { wd:Q170770 wdt:P36 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grand Duchy of Moscow', 'p': 'capital', 'o': '$y0'}}

 Q: What is the Official name of Lahore?
 SPARQL: select distinct ?answer where { wd:Q11739 wdt:P1448 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lahore', 'p': 'name', 'o': '?x0'}

 Q: what is the {for work} for {Neil Gaiman} has {award received} as {Locus Award for Best Collection} ?
 SPARQL: SELECT ?value WHERE { wd:Q210059 p:P166 ?s . ?s ps:P166 wd:Q54824268 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neil Gaiman', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Locus Award for Best Collection'}}}

 Q: What is {form of government} of {national of} of {William Kidd} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26558 wdt:P27 ?X . ?X wdt:P122 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'form of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Kidd', 'p': 'national of', 'o': '$y0'}}

 Q: Which is the PhilPapers publication ID of Mind?
 SPARQL: select distinct ?answer where { wd:Q1936338 wdt:P3236 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mind', 'p': 'PhilPapers publication ID', 'o': '?x0'}

 Q: What is the {historical Chinese state} for {replaced by} of {Yuan dynasty}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1366 wd:Q7313 . ?sbj wdt:P31 wd:Q50068795 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Yuan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical Chinese state'}}

 Q: who is the birth house for place of birth of Ronald Reagan?
 SPARQL:  select distinct ?obj where { wd:Q9960 wdt:P19 ?obj . ?obj wdt:P31 wd:Q19979289 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ronald Reagan', 'p': 'place of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'birth house'}}

 Q: Tell me about the state in the Confederation of the Rhine located in the administrative territorial entity of Weimar Republic.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q41304 . ?sbj wdt:P31 wd:Q26879769 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Weimar Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state in the Confederation of the Rhine'}}

 Q: What is in the  MCN code of fuel oil ?
 SPARQL: select distinct ?answer where { wd:Q214199 wdt:P1987 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fuel oil', 'p': 'MCN code', 'o': '?x0'}

 Q: What is {outflows} of {Lake Albert}, that has {tributary} is {Kidepo River} ?
 SPARQL: SELECT ?answer WHERE { wd:Q125888 wdt:P201 ?answer . ?answer wdt:P974 wd:Q4788736}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lake Albert', 'p': 'outflows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Kidepo River'}}

 Q: What what is project objective of project or mission nuclear weapon and also which starts with letter m
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q170584 . ?sbj wdt:P3712 wd:Q12802 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'project', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'objective', 'o': 'nuclear weapon'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: Tell me about noble title of Pepin the Short and follows
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q81212 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pepin the Short', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pepin the Short', 'p': 'noble title', 'o': '$y0'}}]

 Q: what is the {end time} for {L. Ron Hubbard} has {spouse} as {Sara Northrup Hollister} ?
 SPARQL: SELECT ?value WHERE { wd:Q216896 p:P26 ?s . ?s ps:P26 wd:Q7421728 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'L. Ron Hubbard', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Sara Northrup Hollister'}}}

 Q: What is the population of Aleutian Islands in the year 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q119285 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aleutian Islands', 'p': 'population', 'o': '?x0', 't': '2000'}

 Q: what is the {conferred by} for {Andrey Kolmogorov} has {academic degree} as {Doctor of Sciences in Physics and Mathematics} ?
 SPARQL: SELECT ?value WHERE { wd:Q153224 p:P512 ?s . ?s ps:P512 wd:Q17281097 . ?s pq:P1027 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conferred by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andrey Kolmogorov', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Doctor of Sciences in Physics and Mathematics'}}}

 Q: Which is the island nation that is a twinned administrative body of Auckland?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q37100 . ?sbj wdt:P31 wd:Q112099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Auckland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation'}}

 Q: When did member of sports team of Franz Beckenbauer and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q4457 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is the {Vidhan Sabha} for {executive body} of {Manipur}
 SPARQL:  select distinct ?obj where { wd:Q1193 wdt:P208 ?obj . ?obj wdt:P31 wd:Q3091020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Manipur', 'p': 'executive body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Vidhan Sabha'}}

 Q: What is Watt based on the way to measure the physical quantity?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q25236 wdt:P111 ?ans_1 . wd:Q25236 wdt:P144 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'W', 'p': 'quantity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'W', 'p': 'based on', 'o': '?x1'}]

 Q: Which is {member of} {sovereign state} of {province of China} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1615742 wdt:P17 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'province of China', 'p': 'sovereign state', 'o': '$y0'}}

 Q: What is {follows} and {followed by} of {{Chlothar II} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q209118 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: what is the {end time} for {Nnamdi Azikiwe} has {position held} as {President of Nigeria} ?
 SPARQL: SELECT ?value WHERE { wd:Q181782 p:P39 ?s . ?s ps:P39 wd:Q500282 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nnamdi Azikiwe', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Nigeria'}}}

 Q: What portable computer had MS-DOS as the operating system?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P306 wd:Q47604 . ?sbj wdt:P31 wd:Q1820120 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operating system', 'o': 'MS-DOS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'portable computer'}}

 Q: What is {followed by} and {follows} of {{Chrysler Building} has {series} as {history of the world's tallest buildings}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q11274 p:P179 ?s . ?s ps:P179 wd:Q3698493 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chrysler Building', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "history of the world's tallest buildings"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chrysler Building', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "history of the world's tallest buildings"}}}]

 Q: When did Eduardo Frei Ruiz-Tagle receive an award as Lagun Onari?
 SPARQL: SELECT ?value WHERE { wd:Q326 p:P166 ?s . ?s ps:P166 wd:Q3381638 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Eduardo Frei Ruiz-Tagle', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Lagun Onari'}, 't': '?x0'}

 Q: Which is the novella that contains the word švabica in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q149537 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'švabica')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'novella'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'švabica'}}

 Q: what is the {point in time} for {PewDiePie} has {award received} as {Shorty Awards} ?
 SPARQL: SELECT ?value WHERE { wd:Q13423853 p:P166 ?s . ?s ps:P166 wd:Q7502282 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'PewDiePie', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Shorty Awards'}, 't': '?x0'}

 Q: What is {mission} of {national of} of {Mary Higgins Clark} ?
 SPARQL: SELECT ?answer WHERE { wd:Q231736 wdt:P27 ?X . ?X wdt:P1451 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mission', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mary Higgins Clark', 'p': 'national of', 'o': '$y0'}}

 Q: what is the {valid in period} for {France} has {anthem} as {La Marseillaise} ?
 SPARQL: SELECT ?value WHERE { wd:Q142 p:P85 ?s . ?s ps:P85 wd:Q41180 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'France', 'p': 'anthem', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'anthem', 'o': 'La Marseillaise'}}}

 Q: How many {designed by} are to/by {Isambard Kingdom Brunel} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P287 wd:Q207380 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Isambard Kingdom Brunel'}

 Q: What is the {cultural region} for {history of topic} of {history of China}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2184 wd:Q82972 . ?sbj wdt:P31 wd:Q3502482 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'history of topic', 'o': 'history of China', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cultural region'}}

 Q: What is {participant in conflict} of {depiction of} of {Statue of the Viscount Slim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21451665 wdt:P180 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Statue of the Viscount Slim', 'p': 'depiction of', 'o': '$y0'}}

 Q: Is Houston the twinned administrative body of Luanda and Guayaquil?
 SPARQL: ASK WHERE { wd:Q16555 wdt:P190 wd:Q3897 . wd:Q16555 wdt:P190 wd:Q43509 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Houston', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Luanda'}, {'h': 'IS', 'v': '?x1', 's': 'Houston', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Guayaquil'}]

 Q: At what private university did the employer of Linus Pauling work in?
 SPARQL:  select distinct ?obj where { wd:Q48983 wdt:P108 ?obj . ?obj wdt:P31 wd:Q902104 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linus Pauling', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private university'}}

 Q: What are the list of characters for the Doctor Who} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q34316 wdt:P1881 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Doctor Who', 'p': 'list of characters', 'o': '?x0'}

 Q: Which is the license plate code for Greece?
 SPARQL: select distinct ?answer where { wd:Q41 wdt:P395 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Greece', 'p': 'license plate code', 'o': '?x0'}

 Q: Who is {disciple} and {supervisor} of {David Ward-Steinman} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5240827 wdt:P1066 ?X . ?X wdt:P802 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disciple', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Ward-Steinman', 'p': 'supervisor', 'o': '$y0'}}

 Q: Is the focal length of the large binocular telescope 14.808?
 SPARQL: ASK WHERE { wd:Q845304 wdt:P2151 ?obj filter(?obj = 14.808) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Large Binocular Telescope', 'p': 'focal length', 'o': '?x0', '?x0': '14.808'}

 Q: Who is the alumna of wives of Rebecca West?
 SPARQL: SELECT ?answer WHERE { wd:Q236669 wdt:P26 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'alumna of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rebecca West', 'p': 'wives', 'o': '$y0'}}

 Q: What is {notable books} of {created by} of {Portrait of Louise Vernet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29855620 wdt:P170 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'notable books', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Portrait of Louise Vernet', 'p': 'created by', 'o': '$y0'}}

 Q: What is the {disease} for {studied by} of {psychotherapy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2579 wd:Q183257 . ?sbj wdt:P31 wd:Q12136 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'psychotherapy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: Which isotope of lead has the least mass excess which decays to thallium-185?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1372384 . ?ent wdt:P2160 ?obj . ?ent wdt:P816 wd:Q18883276} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'mass excess', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of lead', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'decays to', 'o': 'thallium-185'}}}

 Q: How many authors are written the {Carl Chun} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P50 wd:Q62747 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Carl Chun'}

 Q: What is the speed limit in the Netherlands?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q55 wdt:P3086 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Netherlands', 'p': 'speed limit', 'o': '?x0'}

 Q: What is {made by} of {from narrative} of {Equatorial Kundu} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23826237 wdt:P1441 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'made by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kundu', 'p': 'from narrative', 'o': '$y0'}}

 Q: What is {profession} of {Erich Salomon}, that has {field of this profession} is {photography} ?
 SPARQL: SELECT ?answer WHERE { wd:Q65454 wdt:P106 ?answer . ?answer wdt:P425 wd:Q11633}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Erich Salomon', 'p': 'profession', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'field of this profession', 'o': 'photography'}}

 Q: what is the {burial plot reference} for {Claude Bernard} has {place of burial} as {Père Lachaise Cemetery} ?
 SPARQL: SELECT ?value WHERE { wd:Q208230 p:P119 ?s . ?s ps:P119 wd:Q311 . ?s pq:P965 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'burial plot reference', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Claude Bernard', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of burial', 'o': 'Pere Lachaise'}}}

 Q: What is {followed by} and {follows} of {{The Lion King} has {series} as {list of Walt Disney Animation Studios films}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36479 p:P179 ?s . ?s ps:P179 wd:Q6603742 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'list of Walt Disney Animation Studios films'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'list of Walt Disney Animation Studios films'}}}]

 Q: How many wears for Michael Jordan?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q41421 wdt:P3828 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Michael Jordan', 'p': 'wears', 'o': '?x0'}

 Q: What are the scores measured by the intelligence quotient (I.Q.)?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q170277 wdt:P1880 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'intelligence quotient', 'p': 'measured by', 'o': '?x0'}

 Q: What {item is used} in {sports} of {breaststroke} ?
 SPARQL: SELECT ?answer WHERE { wd:Q326163 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'breaststroke', 'p': 'sport', 'o': '$y0'}}

 Q: Who is the child of Mahmoud Abbas?
 SPARQL: select distinct ?answer where { wd:Q127998 wdt:P40 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mahmoud Abbas', 'p': 'child', 'o': '?x0'}

 Q: Is the target interest rate of the Bank of Israel equal to 0.08?
 SPARQL: ASK WHERE { wd:Q244411 wdt:P2661 ?obj filter(?obj = 0.08) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Bank of Israel', 'p': 'target interest rate', 'o': '?x0', '?x0': '0.08'}

 Q: what is the {for work} for {Toni Morrison} has {award received} as {NAACP Image Award for Outstanding Literary Work, Fiction} ?
 SPARQL: SELECT ?value WHERE { wd:Q72334 p:P166 ?s . ?s ps:P166 wd:Q6952062 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Toni Morrison', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'NAACP Image Award for Outstanding Literary Work, Fiction'}}}

 Q: Which is the test method for intelligence quotient?
 SPARQL: select distinct ?answer where { wd:Q170277 wdt:P4988 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'intelligence quotient', 'p': 'test method', 'o': '?x0'}

 Q: Which is MyDramaList title ID of Seven Samurai?
 SPARQL: select distinct ?answer where { wd:Q189540 wdt:P3868 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Seven Samurai', 'p': 'MyDramaList title ID', 'o': '?x0'}

 Q: What is the name of offspring of Joseph Stalin and he born on which date?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'offspring', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'offspring', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'offspring', 'o': '$y0'}}]

 Q: Give me {moon of Saturn} that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1972 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'moon of Saturn'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which is the handedness of Bruce Willis?
 SPARQL: select distinct ?answer where { wd:Q2680 wdt:P552 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bruce Willis', 'p': 'handedness', 'o': '?x0'}

 Q: What is the quantity for canton of Switzerland?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q23058 wdt:P1114 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'canton of Switzerland', 'p': 'quantity', 'o': '?x0'}

 Q: Which is the fictional universe of the fictional universe described in Star Trek?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1445 wd:Q1092 . ?sbj wdt:P31 wd:Q559618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional universe described in', 'o': 'Star Trek', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional universe'}}

 Q: Does the student count of the Heilbronn School of Business equal 128?
 SPARQL: ASK WHERE { wd:Q1513916 wdt:P2196 ?obj filter(?obj = 128) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Heilbronn Business School', 'p': 'student count', 'o': '?x0', '?x0': '128'}

 Q: What is the Catalogus Professorum Academiae Groninganae ID of Johan Huizinga?
 SPARQL: select distinct ?answer where { wd:Q276280 wdt:P2016 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Johan Huizinga', 'p': 'Catalogus Professorum Academiae Groninganae ID', 'o': '?x0'}

 Q: Who is the chairperson of Coptic Orthodox Church of Alexandria?
 SPARQL:  select distinct ?obj where { wd:Q198998 wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coptic Orthodox Church of Alexandria', 'p': 'chairperson', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What {on the shore of} the {Mid-Atlantic Ridge}, is a {tributary} of the {Albemarle Sound}
 SPARQL: SELECT ?answer WHERE { wd:Q207313 wdt:P206 ?answer . ?answer wdt:P974 wd:Q1441345}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mid-Atlantic Ridge', 'p': 'on the shore of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Albemarle Sound'}}

 Q: What is the {specialty} for {field of work} of {Sigmund Freud}
 SPARQL:  select distinct ?obj where { wd:Q9215 wdt:P101 ?obj . ?obj wdt:P31 wd:Q1047113 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sigmund Freud', 'p': 'field of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialty'}}

 Q: Which is the Indonesian Small Islands Directory ID for Krakatau?
 SPARQL: select distinct ?answer where { wd:Q82613 wdt:P4227 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Krakatau', 'p': 'Indonesian Small Islands Directory ID', 'o': '?x0'}

 Q: where is the located in the administrative territorial entity and who is the category of associated people of Hollywood?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q34006 wdt:P131 ?ans_1 . wd:Q34006 wdt:P1792 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hollywood', 'p': 'located in the administrative territorial entity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hollywood', 'p': 'category of associated people', 'o': '?x1'}]

 Q: When did Pavel Nakhimov receive the Order of St. George, 2nd class award?
 SPARQL: SELECT ?value WHERE { wd:Q345365 p:P166 ?s . ?s ps:P166 wd:Q14905807 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pavel Nakhimov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of St. George, 2nd class'}, 't': '?x0'}

 Q: "Which is {based in} of {Cuban Missile Crisis}, whose {tributary} is {Grande de Matagalpa River} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q128160 wdt:P276 ?answer . ?answer wdt:P974 wd:Q5595372}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cuban Missile Crisis', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Grande de Matagalpa River'}}

 Q: What is the {imprint} for {record label} of {Suge Knight}
 SPARQL:  select distinct ?obj where { wd:Q455880 wdt:P264 ?obj . ?obj wdt:P31 wd:Q2608849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Suge Knight', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'imprint'}}

 Q: What is {won by} of {prize received} of {John le Carré} ?
 SPARQL: SELECT ?answer WHERE { wd:Q209641 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'won by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John le Carré', 'p': 'prize received', 'o': '$y0'}}

 Q: Give me {God} that {worshipped by} {Jehovah's Witnesses} and which contains the word {yahweh} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190 . ?sbj wdt:P1049 wd:Q35269 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yahweh')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'God', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': "Jehovah's Witnesses"}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yahweh'}}

 Q: What is {child} of {Frederick William I of Prussia} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0'}}]

 Q: Is the highest break of the Joe Swail equal to 142?
 SPARQL: ASK WHERE { wd:Q722094 wdt:P6590 ?obj filter(?obj = 142) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Joe Swail', 'p': 'highest break', 'o': '?x0', '?x0': '142'}

 Q: How many {charge} are for {Nuremberg trials} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80130 wdt:P1595 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'charge', 'o': '?x0'}

 Q: What is the {brand} for {headquarters location} of {Barcelona}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q1492 . ?sbj wdt:P31 wd:Q431289 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Barcelona', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'brand'}}

 Q: At what point in time did Dnipro have a population of 1189000?
 SPARQL: SELECT ?value WHERE { wd:Q48256 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.189e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dnipro', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.189e+06'}, 't': '?x0'}

 Q: Name a landmark located in the administrative territorial entity of Old Toronto that starts with letter C
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2319498 . ?sbj wdt:P131 wd:Q919169 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'landmark', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Old Toronto'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is the parent astronomical body and the type of orbit for the Hubble Space Telescope?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q2513 wdt:P397 ?ans_1 . wd:Q2513 wdt:P522 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hubble Space Telescope', 'p': 'parent astronomical body', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hubble Space Telescope', 'p': 'type of orbit', 'o': '?x1'}]

 Q: "Where is {replaced} of {abacus}, which has {discovered} is {1642-0-0} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q12806 wdt:P1365 ?answer . ?answer wdt:P575 ?x FILTER(contains(YEAR(?x),'1642'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'abacus', 'p': 'replaced', 'o': '?x0', 't': '1642'}

 Q: Did {German} {country} {Seychelles} and {Republic of the Congo} ?
 SPARQL: ASK WHERE { wd:Q188 wdt:P17 wd:Q1042 . wd:Q188 wdt:P17 wd:Q971 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'German', 'p': 'country', 'o': '?x0', '?x0': 'Seychelles'}, {'h': 'IS', 'v': '?x1', 's': 'German', 'p': 'country', 'o': '?x1', '?x1': 'Republic of Congo'}]

 Q: Who had a son named Timur, and whose interment was in Shahrisabz?
 SPARQL: SELECT ?answer WHERE { wd:Q8462 wdt:P40 ?answer . ?answer wdt:P119 wd:Q569766}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Timur', 'p': 'son', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'interment', 'o': 'Shahrisabz'}}

 Q: Who is the {Wikimedia category} for {category for films shot at this location} of {Shanghai}
 SPARQL:  select distinct ?obj where { wd:Q8686 wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shanghai', 'p': 'category for films shot at this location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: what is the {end time} for {John Hume} has {position held} as {Member of the Parliament of Northern Ireland} ?
 SPARQL: SELECT ?value WHERE { wd:Q193630 p:P39 ?s . ?s ps:P39 wd:Q19462434 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Parliament of Northern Ireland'}}}

 Q: What is the {human} for {composer} of {The Magic Flute}
 SPARQL:  select distinct ?obj where { wd:Q5064 wdt:P86 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Magic Flute', 'p': 'composer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is the Polish scientist ID for Lech Kaczyński?
 SPARQL: select distinct ?answer where { wd:Q2757 wdt:P3124 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lech Kaczyński', 'p': 'Polish scientist ID', 'o': '?x0'}

 Q: "What is {main topic} of {history of Afghanistan}, which has {governor} is {Mohammed Nadir Shah} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q188872 wdt:P1269 ?answer . ?answer wdt:P35 wd:Q355610}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Afghanistan', 'p': 'main topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'governor', 'o': 'Mohammed Nadir Shah'}}

 Q: What is {aspect of} of {history of Latin America}, that has {science, that studies} is {Latin American studies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2365406 wdt:P1269 ?answer . ?answer wdt:P2579 wd:Q28617}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Latin America', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'science, that studies', 'o': 'Latin American studies'}}

 Q: What is {spouse} of {Barbara Walters} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q231417 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara Walters', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara Walters', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is the {stainless steel} with the {MAX(toughness)} whose {use} is {chemical industry}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q172587 . ?ent wdt:P5520 ?obj . ?ent wdt:P366 wd:Q207652 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'toughness', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stainless steel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'use', 'o': 'chemical industry'}}}

 Q: which is the name in native language of Antonio Inoki that of  name in kana is {アントニオ いのき ?
 SPARQL: SELECT ?obj WHERE { wd:Q45207 p:P1559 ?s . ?s ps:P1559 ?obj . ?s pq:P1814 ?x filter(contains(?x,'アントニオ いのき')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antonio Inoki', 'p': 'name in native language', 'o': '?x0'}

 Q: Is Triton's orbital eccentricity 0.000016?
 SPARQL: ASK WHERE { wd:Q3359 wdt:P1096 ?obj filter(?obj = 0.000016) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Triton', 'p': 'orbital eccentricity', 'o': '?x0', '?x0': '0.000016'}

 Q: What female is not the same as Kevin Durant who is male?
 SPARQL: SELECT ?answer WHERE { wd:Q29545 wdt:P1889 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kevin Durant', 'p': 'is not', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'male'}}

 Q: Which strain has the highest viable temperature?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q855769 . ?ent wdt:P3253 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'optimum viable temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'strain'}}

 Q: Which place of detention for  Elie Wiesel ?
 SPARQL: select distinct ?answer where { wd:Q18391 wdt:P2632 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Elie Wiesel', 'p': 'place of detention', 'o': '?x0'}

 Q: Where was Alexander buried in Freising Cathedral?
 SPARQL: SELECT ?value WHERE { wd:Q80028 p:P119 ?s . ?s ps:P119 wd:Q262769 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Alexander', 'p': 'buried in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'buried in', 'o': 'Freising Cathedral'}, 't': '?x0'}

 Q: Joko Widodo is the head of government of which sovereign state ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q3318231 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Joko Widodo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: "What is {eponym} of {Gödel, Escher, Bach}, which has {working place} is {Institute for Advanced Study} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q831517 wdt:P138 ?answer . ?answer wdt:P108 wd:Q635642}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gödel, Escher, Bach', 'p': 'eponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'working place', 'o': 'Institute for Advanced Study'}}

 Q: what is the {sourcing circumstances} for {Zeno of Elea} has {date of birth} as {-490-0-0} ?
 SPARQL: SELECT ?value WHERE { wd:Q132157 p:P569 ?s . ?s ps:P569 ?x filter(contains(?x,'-490-0-0')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zeno of Elea', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'date of birth', 'o': '-490-0-0'}}}

 Q: Who is the role model of the author of The Iron Duke?
 SPARQL: SELECT ?answer WHERE { wd:Q7742590 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role model', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Iron Duke', 'p': 'author', 'o': '$y0'}}

 Q: What is {themed after} of {successor} of {Manual for Civilization} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18615410 wdt:P156 ?X . ?X wdt:P144 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'theme', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Manual for Civilization', 'p': 'successor', 'o': '$y0'}}

 Q: What is <copyright owner> of <Triumph of the Will> ?
 SPARQL: select distinct ?answer where { wd:Q156497 wdt:P3931 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Triumph of the Will', 'p': 'copyright owner', 'o': '?x0'}

 Q: What is the {talk show} for {creator} of {Ellen DeGeneres}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q483325 . ?sbj wdt:P31 wd:Q622812 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'creator', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talk show'}}

 Q: Who is starring in the film series The Heather Biblow Story?
 SPARQL: SELECT ?answer WHERE { wd:Q51228928 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Heather Biblow Story', 'p': 'series', 'o': '$y0'}}

 Q: what is the {end time} for {John Russell, 1st Earl Russell} has {position held} as {Lord President of the Council} ?
 SPARQL: SELECT ?value WHERE { wd:Q157259 p:P39 ?s . ?s ps:P39 wd:Q943379 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Russell, 1st Earl Russell', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Lord President of the Council'}}}

 Q: What is {head of government} of {Nizhny Novgorod} that is {start time} is {2015-10-7} ?
 SPARQL: SELECT ?obj WHERE { wd:Q891 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nizhny Novgorod', 'p': 'head of government', 'o': '?x0', 't': '2015'}

 Q: Who gave the{this taxon is the source of} of {higher taxon} of {Brassica rapa subvar. esculenta} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1494125 wdt:P171 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is the source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brassica rapa subvar. esculenta', 'p': 'higher taxon', 'o': '$y0'}}

 Q: What's Andrew Gaze's Australian Olympic Committee athlete ID.
 SPARQL: select distinct ?answer where { wd:Q504835 wdt:P3682 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andrew Gaze', 'p': 'Australian Olympic Committee athlete ID', 'o': '?x0'}

 Q: What is the date of birth and date of death of the child of Joseph Stalin, Vasily Dzhugashvili?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q459216 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Vasily Dzhugashvili'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Vasily Dzhugashvili'}}}]

 Q: Which is the title of honor for the honorific prefix of the Salman of Saudi Arabia?
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P511 ?obj . ?obj wdt:P31 wd:Q3320743 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'honorific prefix', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'title of honor'}}

 Q: what is the {start time} for {Ann Dunham} has {spouse} as {Lolo Soetoro} ?
 SPARQL: SELECT ?value WHERE { wd:Q766106 p:P26 ?s . ?s ps:P26 wd:Q4115068 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ann Dunham', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Lolo Soetoro'}}}

 Q: What is the {neighborhood} for {located in the administrative territorial entity} of {Milwaukee}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q37836 . ?sbj wdt:P31 wd:Q123705 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Milwaukee', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'neighborhood'}}

 Q: How many programmers does Yuji Naka have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P943 wd:Q726119 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'programmer', 'o': 'Yuji Naka'}

 Q: What is {field of this profession} of {profession} of {Davide Bassan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3703492 wdt:P106 ?X . ?X wdt:P425 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of this profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Davide Bassan', 'p': 'profession', 'o': '$y0'}}

 Q: What is {eponym} of {Turing test}, that has {dissertation} is {Systems of Logic Based on Ordinals} ?
 SPARQL: SELECT ?answer WHERE { wd:Q189223 wdt:P138 ?answer . ?answer wdt:P1026 wd:Q7663875}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Turing test', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'dissertation', 'o': 'Systems of Logic Based on Ordinals'}}

 Q: What is portrayed by track list of Morning Musume no Hyokkori Hyōtanjima ?
 SPARQL: SELECT ?answer WHERE { wd:Q1137292 wdt:P658 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrayed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Morning Musume no Hyokkori Hyōtanjima', 'p': 'track list', 'o': '$y0'}}

 Q: Did {Scott Stevens} {award received} {Hart Memorial Trophy} and {Art Ross Trophy} ?
 SPARQL: ASK WHERE { wd:Q281303 wdt:P166 wd:Q678383 . wd:Q281303 wdt:P166 wd:Q705707 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Scott Stevens', 'p': 'award received', 'o': '?x0', '?x0': 'Hart Memorial Trophy'}, {'h': 'IS', 'v': '?x1', 's': 'Scott Stevens', 'p': 'award received', 'o': '?x1', '?x1': 'Art Ross Trophy'}]

 Q: Which is the business for which Steve Jobs was a board member?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3320 wd:Q19837 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'board member', 'o': 'Steve Jobs', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is the capital of the secular state of Montevideo?
 SPARQL:  select distinct ?obj where { wd:Q1335 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q859563 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Montevideo', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'secular state'}}

 Q: What is the {metropolitan region in Germany} for {located on terrain feature} of {Frankfurt}
 SPARQL:  select distinct ?obj where { wd:Q1794 wdt:P706 ?obj . ?obj wdt:P31 wd:Q1132300 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Frankfurt', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolitan region in Germany'}}

 Q: Is the Trans-Gabon Railway maximum gradient equal to 8?
 SPARQL: ASK WHERE { wd:Q32215 wdt:P2595 ?obj filter(?obj = 8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Trans-Gabon Railway', 'p': 'maximum gradient', 'o': '?x0', '?x0': '8'}

 Q: What is the {filmography} for {filmography} of {Mary Pickford}
 SPARQL:  select distinct ?obj where { wd:Q104109 wdt:P1283 ?obj . ?obj wdt:P31 wd:Q1371849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mary Pickford', 'p': 'filmography', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'filmography'}}

 Q: what is the field of action of the works for of Michael Stipe?
 SPARQL: SELECT ?answer WHERE { wd:Q215182 wdt:P108 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of action', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Stipe', 'p': 'works for', 'o': '$y0'}}

 Q: Which platforms have software versions of Fallout release 10.14 beta 4?
 SPARQL: SELECT ?answer WHERE { wd:Q167835 wdt:P400 ?answer . ?answer wdt:P348 ?x FILTER(contains(?x,'10.14 beta 4'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fallout', 'p': 'platform', 'o': '?x0'}

 Q: What is {etymology} of {Planck time}, that has {doctoral student} is {Walther Bothe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q202642 wdt:P138 ?answer . ?answer wdt:P185 wd:Q76474}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Planck time', 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Walther Bothe'}}

 Q: Tell me the intergovernmental organization of the coat of arms of Emblem of the Association of Southeast Asian Nations that starts with the letter a!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q245065 . ?sbj wdt:P237 wd:Q128544 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'Emblem of the Association of Southeast Asian Nations'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is {afterword by} of {in work} of {Room 101} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1186638 wdt:P1441 ?X . ?X wdt:P2680 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afterword by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Room 101', 'p': 'in work', 'o': '$y0'}}

 Q: What is the {human} for {manager/director} of {Secret Intelligence Service}
 SPARQL:  select distinct ?obj where { wd:Q184560 wdt:P1037 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Secret Intelligence Service', 'p': 'director', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Tell me the newspaper that has English as language of work and contains the word tribune in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11032 . ?sbj wdt:P407 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tribune')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newspaper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language of work', 'o': 'English'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tribune'}}

 Q: Which is the organization for the subsidiary of Rutgers University?
 SPARQL:  select distinct ?obj where { wd:Q499451 wdt:P355 ?obj . ?obj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rutgers University', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: what is the {end time} for {Taipei 101} has {significant event} as {construction} ?
 SPARQL: SELECT ?value WHERE { wd:Q83101 p:P793 ?s . ?s ps:P793 wd:Q385378 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taipei 101', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'construction'}}}

 Q: How many {convicted of} are for {Andrei Chikatilo} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q44496 wdt:P1399 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Andrei Chikatilo', 'p': 'convicted of', 'o': '?x0'}

 Q: Who succeeds to John McIntosh, the inventor of Honeycrisp?
 SPARQL: SELECT ?answer WHERE { wd:Q3140024 wdt:P155 ?answer . ?answer wdt:P61 wd:Q3182058}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Honeycrisp', 'p': 'succeeds to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inventor', 'o': 'John McIntosh'}}

 Q: What is the works for of the movie director of  Primate ?
 SPARQL: SELECT ?answer WHERE { wd:Q3403168 wdt:P57 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'works for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Primate', 'p': 'director', 'o': '$y0'}}

 Q: Who did Rod Steiger marry in 1959?
 SPARQL: SELECT ?obj WHERE { wd:Q273215 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1959')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rod Steiger', 'p': 'marry', 'o': '?x0', 't': '1959'}

 Q: What is the sister city of Kharkiv which has a population of 850?
 SPARQL: SELECT ?answer WHERE { wd:Q42308 wdt:P190 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'850.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kharkiv', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '850.0'}}

 Q: What is MusicBrainz place ID for Cardiff University ?
 SPARQL: select distinct ?answer where { wd:Q1035745 wdt:P1004 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cardiff University', 'p': 'MusicBrainz place ID', 'o': '?x0'}

 Q: What is {field of study} of {writers} of {René Leduc. Pionnier de la propulsion à réaction. 2000} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50810219 wdt:P50 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of study', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'René Leduc. Pionnier de la propulsion à réaction. 2000', 'p': 'writer', 'o': '$y0'}}

 Q: Who gave the{deathdate} of {directed by} of {The World According to Garp} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2507282 wdt:P57 ?X . ?X wdt:P570 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'deathdate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The World According to Garp', 'p': 'directed by', 'o': '$y0'}}

 Q: what is the {start time} for {Doris Lessing} has {spouse} as {Gottfried Lessing} ?
 SPARQL: SELECT ?value WHERE { wd:Q40874 p:P26 ?s . ?s ps:P26 wd:Q215347 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Doris Lessing', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Gottfried Lessing'}}}

 Q: What is {member of} of {attendee} of {Battle of Vittorio Veneto} ?
 SPARQL: SELECT ?answer WHERE { wd:Q662961 wdt:P710 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle of Vittorio Veneto', 'p': 'attendee', 'o': '$y0'}}

 Q: Which {diplomatic relation} of {sovereign state} of {Adelaide} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5112 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adelaide', 'p': 'sovereign state', 'o': '$y0'}}

 Q: How many head coaches are there for FC Bayern Munich?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q15789 wdt:P286 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'FC Bayern Munich', 'p': 'head coach', 'o': '?x0'}

 Q: What is {this taxon is a source of} of {taxon parent} of {Musa juwiniana} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10590521 wdt:P171 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is a source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Musa juwiniana', 'p': 'taxon parent', 'o': '$y0'}}

 Q: Which is the patron saint for Sabadell?
 SPARQL: select distinct ?answer where { wd:Q12258 wdt:P417 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sabadell', 'p': 'patron saint', 'o': '?x0'}

 Q: What is a taxonomic rank that starts with the letter v.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q427626 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxonomic rank'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is <official religion> of <Parthian Empire> ?
 SPARQL: select distinct ?answer where { wd:Q1986139 wdt:P3075 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Parthian Empire', 'p': 'official religion', 'o': '?x0'}

 Q: What is {principal place} of {Khmer Empire}, that has {point on a map} is {13.433333333333 103.83333333333} ?
 SPARQL: SELECT ?answer WHERE { wd:Q201705 wdt:P36 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'13.433333333333 103.83333333333'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Khmer Empire', 'p': 'capital', 'o': '?x0'}

 Q: What are the unit of mass which start with the letter zuz
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3647172 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zuz')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of mass'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zuz'}}

 Q: what is the {end time} for {Louis XV of France} has {position held} as {King of France and Navarre} ?
 SPARQL: SELECT ?value WHERE { wd:Q7738 p:P39 ?s . ?s ps:P39 wd:Q3439798 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis XV of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of France and Navarre'}}}

 Q: Did {Transport_Layer_Security} {used by} {Extensible Authentication Protocol} and {SMTPS} ?
 SPARQL: ASK WHERE { wd:Q206494 wdt:P1535 wd:Q1146165 . wd:Q206494 wdt:P1535 wd:Q949493 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Transport Layer Security', 'p': 'used by', 'o': '?x0', '?x0': 'Extensible Authentication Protocol'}, {'h': 'IS', 'v': '?x1', 's': 'Transport Layer Security', 'p': 'used by', 'o': '?x1', '?x1': 'SMTPS'}]

 Q: tell me about sedative contains the word nutmeg in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q847705 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nutmeg')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sedative'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'nutmeg'}}

 Q: What is <Crunchyroll ID> of <Cowboy Bebop> ?
 SPARQL: select distinct ?answer where { wd:Q232246 wdt:P4110 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cowboy Bebop', 'p': 'Crunchyroll ID', 'o': '?x0'}

 Q: What is {characters} of {is shown in} of {Bobby Smiles} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10431845 wdt:P1441 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bobby Smiles', 'p': 'is shown in', 'o': '$y0'}}

 Q: IS THE PARALLAX OF THE VEGA EQUALS 128.93
 SPARQL: ASK WHERE { wd:Q3427 wdt:P2214 ?obj filter(?obj = 128.93) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Vega', 'p': 'parallax', 'o': '?x0', '?x0': '128.93'}

 Q: How many feast days are done by Pentecost?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P841 wd:Q39864 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'feast day', 'o': 'Pentecost'}

 Q: What is the {pharmaceutical product} for {active ingredient in} of {niacin}
 SPARQL:  select distinct ?obj where { wd:Q134658 wdt:P3780 ?obj . ?obj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'niacin', 'p': 'active ingredient in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: What are the  heavy metal band which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56816954 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'heavy metal band'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which is the island nation for the country of pound sterling?
 SPARQL:  select distinct ?obj where { wd:Q25224 wdt:P17 ?obj . ?obj wdt:P31 wd:Q112099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pound sterling', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation'}}

 Q: Was 201 the total number of valid votes cast n the 2015 Catalan regional election in Malla?
 SPARQL: ASK WHERE { wd:Q44877325 wdt:P1697 ?obj filter(?obj = 201) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Catalan regional election 2015 in Malla', 'p': 'valid votes', 'o': '?x0', '?x0': '201'}

 Q: Did {NASA} {subsidiary} {German Aerospace Center} and {NASA Astrobiology Institute} ?
 SPARQL: ASK WHERE { wd:Q23548 wdt:P355 wd:Q157332 . wd:Q23548 wdt:P355 wd:Q1147312 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'NASA', 'p': 'subsidiary', 'o': '?x0', '?x0': 'German Aerospace Center'}, {'h': 'IS', 'v': '?x1', 's': 'NASA', 'p': 'subsidiary', 'o': '?x1', '?x1': 'NASA Astrobiology Institute'}]

 Q: Is the fiscal/tax revenue of Manabo under 44305723.128?
 SPARQL: ASK WHERE { wd:Q29082 wdt:P3087 ?obj filter(?obj < 44305723.128) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Manabo', 'p': 'fiscal/tax revenue', 'o': '?x0', '?x0': '44305723.128'}

 Q: what is the {start time} for {Zhejiang} has {located in the administrative territorial entity} as {Ming dynasty} ?
 SPARQL: SELECT ?value WHERE { wd:Q16967 p:P131 ?s . ?s ps:P131 wd:Q9903 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zhejiang', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Ming dynasty'}}}

 Q: What are the  freeway network which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55504191 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'freeway network'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which river has the most throughput?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4022 . ?ent wdt:P2957 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'throughput', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'river'}}

 Q: What is {position held} of {David Lloyd George} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q134982 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {nominated for} of {Billy Wilder} that is {statement is subject of} is {39th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51547 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q167214 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Billy Wilder', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '39th Academy Awards'}}}

 Q: Which is the edition or translation of Internet Protocol version 6?
 SPARQL: select distinct ?answer where { wd:Q2551624 wdt:P629 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Internet Protocol version 6', 'p': 'edition or translation of', 'o': '?x0'}

 Q: What is the locomotive class with the most stroke whose operator is Lancashire, Derbyshire and East Coast Railway?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q19832486 . ?ent wdt:P2557 ?obj . ?ent wdt:P137 wd:Q6482976 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'stroke', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'locomotive class', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'Lancashire, Derbyshire and East Coast Railway'}}}

 Q: who is video game publisher of safety classification and labelling of β-lactose ?
 SPARQL: SELECT ?answer WHERE { wd:Q127900 wdt:P4952 ?X . ?X wdt:P123 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'β-lactose', 'p': 'safety classification and labelling', 'o': '$y0'}}

 Q: Which is the TheFinalBall player ID of Cristiano Ronaldo?
 SPARQL: select distinct ?answer where { wd:Q11571 wdt:P3047 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cristiano Ronaldo', 'p': 'TheFinalBall player ID', 'o': '?x0'}

 Q: Who is {subject} of {inventor or discoverer} of {Bogdanov-Takens bifurcation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4937510 wdt:P61 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bogdanov-Takens bifurcation', 'p': 'inventor', 'o': '$y0'}}

 Q: What vein is connected to the small intestine?
 SPARQL: SELECT ?answer WHERE { wd:Q11090 wdt:P2789 ?X . ?X wdt:P2289 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'vein', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'small intestine', 'p': 'connected to', 'o': '$y0'}}

 Q: What is {number of out of school children} of {continent} of {Scotland} ?
 SPARQL: SELECT ?answer WHERE { wd:Q22 wdt:P30 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Scotland', 'p': 'continent', 'o': '$y0'}}

 Q: What is the {county of Norway} for {shares border with} of {Oslo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q585 . ?sbj wdt:P31 wd:Q192299 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Oslo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'county of Norway'}}

 Q: Which is the College Football HoF ID for Red Grange?
 SPARQL: select distinct ?answer where { wd:Q1399654 wdt:P3044 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Red Grange', 'p': 'College Football HoF ID', 'o': '?x0'}

 Q: Was William McKinley educated at the Allegheny College and the New York Law School?
 SPARQL: ASK WHERE { wd:Q35041 wdt:P69 wd:Q4062566 . wd:Q35041 wdt:P69 wd:Q3339059 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'William McKinley', 'p': 'educated at', 'o': '?x0', '?x0': 'Allegheny College'}, {'h': 'IS', 'v': '?x1', 's': 'William McKinley', 'p': 'educated at', 'o': '?x1', '?x1': 'New York Law School'}]

 Q: What is the {human} for {sibling} of {Aisha}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3373 wd:Q4730963 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Aisha', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What was the award received by The Great Dictator that is point in time was 1940-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q109116 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1940')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Great Dictator', 'p': 'award received', 'o': '?x0', 't': '1940'}

 Q: How many {presenter} are to/by {Dick Clark} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P371 wd:Q366563 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'Dick Clark'}

 Q: which method starts with w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1799072 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'method'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is endemic to kangaroo ?
 SPARQL: select distinct ?answer where { wd:Q5070208 wdt:P183 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'kangaroo', 'p': 'endemic to', 'o': '?x0'}

 Q: What is the alphabet of Furutachi based upon?
 SPARQL: SELECT ?answer WHERE { wd:Q27306164 wdt:P282 ?X . ?X wdt:P144 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'based upon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Furutachi', 'p': 'alphabet', 'o': '$y0'}}

 Q: What is {grave at} of {son of} of {Sancha of Castile, Queen of Navarre} ?
 SPARQL: SELECT ?answer WHERE { wd:Q939696 wdt:P25 ?X . ?X wdt:P119 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'grave at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sancha of Castile, Queen of Navarre', 'p': 'son of', 'o': '$y0'}}

 Q: Which lake has the largest length?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q23397 . ?ent wdt:P2043 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'length', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lake'}}

 Q: Which is the NNDB people ID for Orson Welles?
 SPARQL: select distinct ?answer where { wd:Q24829 wdt:P1263 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Orson Welles', 'p': 'NNDB people ID', 'o': '?x0'}

 Q: What is {home venue} of {New York Yankees} that is {end time} is {1922-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q213417 p:P115 ?s . ?s ps:P115 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1922')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New York Yankees', 'p': 'home venue', 'o': '?x0', 't': '1922'}

 Q: What is  in the hymenium attachment of Boletus edulis ?
 SPARQL: select distinct ?answer where { wd:Q19740 wdt:P785 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Boletus edulis', 'p': 'hymenium attachment', 'o': '?x0'}

 Q: When did Lublin cease to be a Kingdom of Poland?
 SPARQL: SELECT ?value WHERE { wd:Q37333 p:P17 ?s . ?s ps:P17 wd:Q696908 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lublin', 'p': 'land', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'Kingdom of Poland'}}}

 Q: what is the {start time} for {Peyton Manning} has {member of sports team} as {Tennessee Volunteers football} ?
 SPARQL: SELECT ?value WHERE { wd:Q7539 p:P54 ?s . ?s ps:P54 wd:Q12070759 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peyton Manning', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Tennessee Volunteers football'}}}

 Q: Is the service life of the Gran Turismo 5 Prologue equal to 10?
 SPARQL: ASK WHERE { wd:Q2324928 wdt:P5069 ?obj filter(?obj = 10) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Gran Turismo 5 Prologue', 'p': 'service life', 'o': '?x0', '?x0': '10'}

 Q: Who is the {human} for {founded by} of {Safavid dynasty}
 SPARQL:  select distinct ?obj where { wd:Q161205 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Safavid dynasty', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What award did The Smashing Pumpkins receive in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q184217 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Smashing Pumpkins', 'p': 'award', 'o': '?x0', 't': '1996'}

 Q: What is the maximum peak exposure limit of carbon tetrachloride?
 SPARQL: select distinct ?answer where { wd:Q225045 wdt:P2406 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'carbon tetrachloride', 'p': 'maximum peak exposure limit', 'o': '?x0'}

 Q: Which is the PremiershipRugby.com ID of Jonny Wilkinson?
 SPARQL: select distinct ?answer where { wd:Q318920 wdt:P861 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jonny Wilkinson', 'p': 'PremiershipRugby.com ID', 'o': '?x0'}

 Q: What is {place of birth} of {Sofia Coppola} that is {located in the administrative territorial entity} is {New York} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193628 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1384 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sofia Coppola', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'New York'}}}

 Q: Which is the position that applies to jurisdiction of Weimar Republic?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q41304 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'Weimar Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: Where was Niels Bohr educated at, and who was his doctoral advisor?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7085 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P184 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Niels Bohr', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Niels Bohr', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the dual of the facet of a polytope of the grand 120-cell ?
 SPARQL: SELECT ?answer WHERE { wd:Q5594220 wdt:P1312 ?X . ?X wdt:P1322 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dual of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'grand 120-cell', 'p': 'facet of a polytope', 'o': '$y0'}}

 Q: What is {principal place} of {state} of {Loreng} ?
 SPARQL: SELECT ?answer WHERE { wd:Q35368261 wdt:P17 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'principal place', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Loreng', 'p': 'state', 'o': '$y0'}}

 Q: Who is the musical score by in It Happened One Night that states someone's middle name is Howard?
 SPARQL: SELECT ?answer WHERE { wd:Q208632 wdt:P86 ?answer . ?answer wdt:P735 wd:Q3595959}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'It Happened One Night', 'p': 'musical score by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'middle name', 'o': 'Howard'}}

 Q: Is the number of injured in the Newhall massacre less than 0.8?
 SPARQL: ASK WHERE { wd:Q16211090 wdt:P1339 ?obj filter(?obj < 0.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Newhall massacre', 'p': 'number of injured', 'o': '?x0', '?x0': '0.8'}

 Q: Lata Mangeshkar received what award in what field of work?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q156347 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P101 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lata Mangeshkar', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lata Mangeshkar', 'p': 'award', 'o': '$y0'}}]

 Q: What is follows of city that has criterion used for human population?
 SPARQL: SELECT ?obj WHERE { wd:Q515 p:P155 ?s . ?s ps:P155 ?obj . ?s pq:P1013 wd:Q33829 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'city', 'p': 'follows', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'criterion used', 'o': 'human population'}}}

 Q: who pharmaceutical product for has active ingredient of amoxicillin?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3781 wd:Q201928 . ?sbj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has active ingredient', 'o': 'amoxicillin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: Did {Bible} {has edition} of {Wycliffe's Bible} and {LDS edition of the Bible} ?
 SPARQL: ASK WHERE { wd:Q1845 wdt:P747 wd:Q1626958 . wd:Q1845 wdt:P747 wd:Q6457532 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bible', 'p': 'edition', 'o': '?x0', '?x0': "Wycliffe's Bible"}, {'h': 'IS', 'v': '?x1', 's': 'Bible', 'p': 'edition', 'o': '?x1', '?x1': 'LDS edition of the Bible'}]

 Q: What is {academic degree} and {academic major} of {{Bashar al-Assad} has {educated at} as {Damascus University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q44329 p:P69 ?s . ?s ps:P69 wd:Q1351317 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bashar al-Assad', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Damascus University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bashar al-Assad', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Damascus University'}}}]

 Q: Did {Chevy_Chase} {award received} {Emmy Award} and {61st Primetime Emmy Awards} ?
 SPARQL: ASK WHERE { wd:Q310926 wdt:P166 wd:Q123737 . wd:Q310926 wdt:P166 wd:Q1338932 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chevy Chase', 'p': 'award received', 'o': '?x0', '?x0': 'Emmy Award'}, {'h': 'IS', 'v': '?x1', 's': 'Chevy Chase', 'p': 'award received', 'o': '?x1', '?x1': '61st Primetime Emmy Awards'}]

 Q: Who are the {pupils} of the {songwriter} of {Für Elise}?
 SPARQL: SELECT ?answer WHERE { wd:Q11980 wdt:P86 ?X . ?X wdt:P802 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pupil', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Für Elise', 'p': 'songwriter', 'o': '$y0'}}

 Q: What is a religious order of knight ?
 SPARQL: select distinct ?answer where { ?answer wdt:P611 wd:Q102083}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religious order', 'o': 'knight'}

 Q: Give me {ceremony} that starts with {'u'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2627975 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ceremony'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Which part of Adélie Land has a the second-level administrative country subdivision?
 SPARQL: SELECT ?value WHERE { wd:Q184319 p:P31 ?s . ?s ps:P31 wd:Q13220204 . ?s pq:P361 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'part of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adélie Land', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'second-level administrative country subdivision'}}}

 Q: What are theeconomic ideology which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5333510 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic ideology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {owned by} of {Mona Lisa} that is {start time} is {1519-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12418 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1519')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mona Lisa', 'p': 'owned by', 'o': '?x0', 't': '1519'}

 Q: What is the sex of Barbie and who is her partner?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q167447 wdt:P21 ?ans_1 . wd:Q167447 wdt:P451 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Barbie', 'p': 'sex', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Barbie', 'p': 'partner', 'o': '?x1'}]

 Q: What is {has counties} of {partner town} of {Chișinău} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21197 wdt:P190 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has counties', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chisinau', 'p': 'sister town', 'o': '$y0'}}

 Q: Which is the HATVP person ID of Jean-Marie Le Pen?
 SPARQL: select distinct ?answer where { wd:Q7177 wdt:P4703 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean-Marie Le Pen', 'p': 'HATVP person ID', 'o': '?x0'}

 Q: Who are the daughters of Peter Gabriel that were born in Bath?
 SPARQL: SELECT ?answer WHERE { wd:Q175195 wdt:P40 ?answer . ?answer wdt:P19 wd:Q22889}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Gabriel', 'p': 'daughter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Bath'}}

 Q: What is the {Wikimedia list article} for {list of monuments} of {Bern}
 SPARQL:  select distinct ?obj where { wd:Q70 wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bern', 'p': 'list of monuments', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'list'}}

 Q: What is {ZIP+4} of {studied at} of {Diane Sawyer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q236402 wdt:P69 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ZIP+4', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diane Sawyer', 'p': 'studied at', 'o': '$y0'}}

 Q: Who are Sean Connery's wife and child?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q4573 wdt:P26 ?ans_1 . wd:Q4573 wdt:P40 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Sean Connery', 'p': 'wife', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Sean Connery', 'p': 'child', 'o': '?x1'}]

 Q: How many people use Polish as their native language?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P103 wd:Q809 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'native language', 'o': 'Polish'}

 Q: What is guest of honor for Arturo Toscanini ?
 SPARQL: select distinct ?answer where { ?answer wdt:P967 wd:Q13003}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'guest of honor', 'o': 'Arturo Toscanini'}

 Q: What is the symbol of quantity of a square kilometer?
 SPARQL: SELECT ?answer WHERE { wd:Q712226 wdt:P111 ?X . ?X wdt:P416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'square kilometer', 'p': 'quantity', 'o': '$y0'}}

 Q: Which is the OKP ID of the good or service of white chocolate?
 SPARQL: select distinct ?answer where { wd:Q742385 wdt:P3248 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'white chocolate', 'p': 'OKP ID of the good or service', 'o': '?x0'}

 Q: What is {leader} of {honors} of {The Colour of My Love} ?
 SPARQL: SELECT ?answer WHERE { wd:Q939286 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'leader', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Colour of My Love', 'p': 'honors', 'o': '$y0'}}

 Q: What is the {whistleblower platform} for {creator} of {Julian Assange}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q360 . ?sbj wdt:P31 wd:Q1344897 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'creator', 'o': 'Julian Assange', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'whistleblower platform'}}

 Q: Phil Collins hosted what benefit concert?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q144622 . ?sbj wdt:P31 wd:Q1850936 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'host', 'o': 'Phil Collins', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'benefit concert'}}

 Q: What is headstone picture of songwriter of Winterreise ?
 SPARQL: SELECT ?answer WHERE { wd:Q611529 wdt:P86 ?X . ?X wdt:P1442 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headstone picture', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Winterreise', 'p': 'songwriter', 'o': '$y0'}}

 Q: What is social media account on publishing house of Puyo Puyo Fever 2 ?
 SPARQL: SELECT ?answer WHERE { wd:Q5356463 wdt:P123 ?X . ?X wdt:P553 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'social media account on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Puyo Puyo Fever 2', 'p': 'publishing house', 'o': '$y0'}}

 Q: Air India operates which aircraft model ?
 SPARQL:  select distinct ?obj where { wd:Q69906 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056995 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Air India', 'p': 'operates', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft model'}}

 Q: Give me {sovereign state} that {replaced by} {Korean Empire} and which contains the word {joseon} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3624078 . ?sbj wdt:P1366 wd:Q28233 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'joseon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Korean Empire'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'joseon'}}

 Q: What is the {human} for {screenwriter} of {Forrest Gump}
 SPARQL:  select distinct ?obj where { wd:Q134773 wdt:P58 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Forrest Gump', 'p': 'screenwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {item used} of {rallying}, that has {same as} is {car} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7856 wdt:P2283 ?answer . ?answer wdt:P460 wd:Q1144312}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'rallying', 'p': 'item used', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'similar to', 'o': 'car'}}

 Q: Was Carlos Slim the owner of Torre Latinoamericana and Claro?
 SPARQL: ASK WHERE { wd:Q170419 wdt:P1830 wd:Q947870 . wd:Q170419 wdt:P1830 wd:Q1770208 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Carlos Slim', 'p': 'owner of', 'o': '?x0', '?x0': 'Torre Latinoamericana'}, {'h': 'IS', 'v': '?x1', 's': 'Carlos Slim', 'p': 'owner of', 'o': '?x1', '?x1': 'Claro'}]

 Q: Is the number of eligible voters in the Catalan regional election 2015 in Sobremunt equal to 69?
 SPARQL: ASK WHERE { wd:Q44991020 wdt:P1867 ?obj filter(?obj = 69) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Catalan regional election 2015 in Sobremunt', 'p': 'eligible voters', 'o': '?x0', '?x0': '69'}

 Q: Which is the chemical formula for cephalexin anhydrous?
 SPARQL: select distinct ?answer where { wd:Q411417 wdt:P274 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cephalexin', 'p': 'chemical formula', 'o': '?x0'}

 Q: Which is the cuisine of Surimi?
 SPARQL: select distinct ?answer where { wd:Q815740 wdt:P2012 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Surimi', 'p': 'cuisine', 'o': '?x0'}

 Q: Does the 22 mm gun M1931/37 have a field of view that is equal to 46.4?
 SPARQL: ASK WHERE { wd:Q280356 wdt:P4036 ?obj filter(?obj = 46.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'M1931/37', 'p': 'field of view', 'o': '?x0', '?x0': '46.4'}

 Q: What platform was Doom released on in 1996?
 SPARQL: SELECT ?value WHERE { wd:Q189784 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1996')) . ?s pq:P400 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'platform', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Doom', 'p': 'released', 'o': '$y0'}}

 Q: What is {noble title} of {Gediminas} that is {end time} is {1341-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q244852 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1341')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gediminas', 'p': 'noble title', 'o': '?x0', 't': '1341'}

 Q: What was the twinned administrative body of San Diego in 1983?
 SPARQL: SELECT ?obj WHERE { wd:Q16552 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1983')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'San Diego', 'p': 'twinned administrative body', 'o': '?x0', 't': '1983'}

 Q: What is the {anatomical structure} for {anatomical location} of {stomach}
 SPARQL:  select distinct ?obj where { wd:Q1029907 wdt:P927 ?obj . ?obj wdt:P31 wd:Q4936952 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'stomach', 'p': 'anatomical location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anatomical structure'}}

 Q: What is {end cause} and {elected in} of {{Jeffrey Archer} has {position held} as {Member of the 44th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q313489 p:P39 ?s . ?s ps:P39 wd:Q41582609 . ?s pq:P1534 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeffrey Archer', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 44th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeffrey Archer', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 44th Parliament of the United Kingdom'}}}]

 Q: Is the albedo of the 7384 1981 TJ .035?
 SPARQL: ASK WHERE { wd:Q844936 wdt:P4501 ?obj filter(?obj = 0.035) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '(7384) 1981 TJ', 'p': 'albedo', 'o': '?x0', '?x0': '0.035'}

 Q: What is {total fertility rate} of {Bahrain} that is {determination method} is {estimation process} ?
 SPARQL: SELECT ?obj WHERE { wd:Q398 p:P4841 ?s . ?s ps:P4841 ?obj . ?s pq:P459 wd:Q791801 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bahrain', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'estimation process'}}}

 Q: What is {played by} of {successor} of {Call of the Wild} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2934076 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Call of the Wild', 'p': 'successor', 'o': '$y0'}}

 Q: What is the {human} for {student of} of {Warren Buffett}
 SPARQL:  select distinct ?obj where { wd:Q47213 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Warren Buffett', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {dynasty} for {country of citizenship} of {Chandragupta Maurya}
 SPARQL:  select distinct ?obj where { wd:Q188541 wdt:P27 ?obj . ?obj wdt:P31 wd:Q164950 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chandragupta Maurya', 'p': 'country of citizenship', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dynasty'}}

 Q: What is {victor} of {awards} of {Tom Hollander} ?
 SPARQL: SELECT ?answer WHERE { wd:Q312124 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'victor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tom Hollander', 'p': 'awards', 'o': '$y0'}}

 Q: Is the explosive velocity of 1,3,5-trinitrobenzene equal to 7450?
 SPARQL: ASK WHERE { wd:Q420320 wdt:P2231 ?obj filter(?obj = 7450) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1,3,5-trinitrobenzene', 'p': 'explosive velocity', 'o': '?x0', '?x0': '7450'}

 Q: What is Squash Info ID for Jahangir Khan?
 SPARQL: select distinct ?answer where { wd:Q741690 wdt:P3286 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jahangir Khan', 'p': 'Squash Info ID', 'o': '?x0'}

 Q: what is the {start time} for {William Henry Harrison} has {position held} as {President of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q11869 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Henry Harrison', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the United States'}}}

 Q: What is the BMW M20 with the highest torque whose engine configuration is straight-six ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q796558 . ?ent wdt:P2230 ?obj . ?ent wdt:P1002 wd:Q1148385 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'torque', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'BMW M20', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'engine configuration', 'o': 'straight-six'}}}

 Q: Is the synodic period of Pluto equal to 366.73?
 SPARQL: ASK WHERE { wd:Q339 wdt:P4341 ?obj filter(?obj = 366.73) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Pluto', 'p': 'synodic period', 'o': '?x0', '?x0': '366.73'}

 Q: Does Montreal have a twinned administrative body of Los Angeles and Bucharest?
 SPARQL: ASK WHERE { wd:Q340 wdt:P190 wd:Q65 . wd:Q340 wdt:P190 wd:Q19660 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Montreal', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Los Angeles'}, {'h': 'IS', 'v': '?x1', 's': 'Montreal', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Bucharest'}]

 Q: what is instruction set architecture that starts with x
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q272683 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'instruction set architecture'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: What is {nominated for} of {John Mills} that is {for work} is {Ryan's Daughter} ?
 SPARQL: SELECT ?obj WHERE { wd:Q315728 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1423795 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Mills', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': "Ryan's Daughter"}}}

 Q: What is the {girder bridge} for {next crossing upstream} of {London Bridge}
 SPARQL:  select distinct ?obj where { wd:Q130206 wdt:P2673 ?obj . ?obj wdt:P31 wd:Q1055465 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'London Bridge', 'p': 'next crossing upstream', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'girder bridge'}}

 Q: Is the elongation at the break of the AKROLOY PARA ICF 40 equal to 1?
 SPARQL: ASK WHERE { wd:Q57273218 wdt:P5811 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AKROLOY PARA ICF 40', 'p': 'elongation at break', 'o': '?x0', '?x0': '1'}

 Q: Are John F. Kennedy and Eunice Kennedy Shriver sibling to Ted Kennedy?
 SPARQL: ASK WHERE { wd:Q134549 wdt:P3373 wd:Q9696 . wd:Q134549 wdt:P3373 wd:Q272908 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ted Kennedy', 'p': 'sibling', 'o': '?x0', '?x0': 'John F. Kennedy'}, {'h': 'IS', 'v': '?x1', 's': 'Ted Kennedy', 'p': 'sibling', 'o': '?x1', '?x1': 'Eunice Kennedy Shriver'}]

 Q: What is {follows} and {followed by} of {{Benedict XVI} has {position held} as {cardinal}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q2494 p:P39 ?s . ?s ps:P39 wd:Q45722 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benedict XVI', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'cardinal'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benedict XVI', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'cardinal'}}}]

 Q: How many {film crew member} are to/by {Ub Iwerks} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3092 wd:Q336424 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'film crew member', 'o': 'Ub Iwerks'}

 Q: What is the {Wikimedia list article} for {is a list of} of {natural number}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P360 wd:Q21199 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is a list of', 'o': 'natural number', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: Which is the start point of Taoyuan City?
 SPARQL: select distinct ?answer where { ?answer wdt:P1427 wd:Q115256}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'Taoyuan City'}

 Q: What is {has influence} of {Georges Bataille}, that has {studied at} is {Eberhard-Ludwigs-Gymnasium} ?
 SPARQL: SELECT ?answer WHERE { wd:Q207359 wdt:P737 ?answer . ?answer wdt:P69 wd:Q1278808}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Georges Bataille', 'p': 'has influence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied at', 'o': 'Eberhard-Ludwigs-Gymnasium'}}

 Q: Tell me race horse whose name has the word tikkanen in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10855242 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tikkanen')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'race horse'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tikkanen'}}

 Q: What is the deathplace of Natalia Molchanova with a government headed by Jaume Ferrer Ribas?
 SPARQL: SELECT ?answer WHERE { wd:Q59920 wdt:P20 ?answer . ?answer wdt:P6 wd:Q11684565}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Natalia Molchanova', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'government headed by', 'o': 'Jaume Ferrer Ribas'}}

 Q: What is <NeuroNames ID (plain mode)> of <brain stem> ?
 SPARQL: select distinct ?answer where { wd:Q182228 wdt:P4394 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'brain stem', 'p': 'NeuroNames ID (plain mode)', 'o': '?x0'}

 Q: What is {height} and {location} of {{pole vault} has {record held} as {Yelena Isinbayeva}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q6319 . ?s pq:P2048 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Yelena Isinbayeva'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Yelena Isinbayeva'}}}]

 Q: What is {birth city} of {Claude Adrien Helvétius}, that has {has villages} is {7th arrondissement of Paris} ?
 SPARQL: SELECT ?answer WHERE { wd:Q190302 wdt:P19 ?answer . ?answer wdt:P150 wd:Q259463}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Claude Adrien Helvétius', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has villages', 'o': '7th arrondissement of Paris'}}

 Q: What is {position held} of {Liu Xiaobo} where {start time} is {2003-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41617 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Liu Xiaobo', 'p': 'position held', 'o': '?x0', 't': '2003'}

 Q: What award did Juan Ramon Jimenez receive on 1956-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q131318 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1956')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Juan Ramon Jimenez', 'p': 'award', 'o': '?x0', 't': '1956'}

 Q: Who is the  {sovereign state} for {allegiance} of {Salman of Saudi Arabia}
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P945 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'allegiance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the unit conversion of the measured by Young's modulus?
 SPARQL: SELECT ?answer WHERE { wd:Q2091584 wdt:P1880 ?X . ?X wdt:P2442 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'unit conversion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Young's modulus", 'p': 'measured by', 'o': '$y0'}}

 Q: Who was the head of government in New Jersey beginning in 1935-1-15?W
 SPARQL: SELECT ?obj WHERE { wd:Q1408 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1935')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New Jersey', 'p': 'head of government', 'o': '?x0', 't': '1935'}

 Q: What is the {day in the Eastern Orthodox liturgical calendar} with the {MAX(Sandbox-Quantity)} whose {day in year for periodic occurrence} is {November 28}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q47164206 . ?ent wdt:P1106 ?obj . ?ent wdt:P837 wd:Q3017 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Sandbox-Quantity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'day in the Eastern Orthodox liturgical calendar', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'day in year for periodic occurrence', 'o': 'November 28'}}}

 Q: What is {position held} of {Zhou Enlai} where {end time} is {1976-1-8} ?
 SPARQL: SELECT ?obj WHERE { wd:Q17410 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zhou Enlai', 'p': 'position held', 'o': '?x0', 't': '1976'}

 Q: What is the art genre that starts with the letter o?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1792379 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ō')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ō'}}

 Q: What significant event happened in Arkansas on April 12, 1861?
 SPARQL: SELECT ?obj WHERE { wd:Q1612 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1861')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arkansas', 'p': 'significant event', 'o': '?x0', 't': '1861'}

 Q: How many captains are there for the Montreal Canadiens?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q188143 wdt:P634 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Montreal Canadiens', 'p': 'captain', 'o': '?x0'}

 Q: What is the space group of corundum that has point group of ditrigonal scalahedral?
 SPARQL: SELECT ?answer WHERE { wd:Q131777 wdt:P690 ?answer . ?answer wdt:P589 wd:Q13362471}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'corundum', 'p': 'space group', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'point group', 'o': 'ditrigonal scalahedral'}}

 Q: What is the {inferior planet} with the {MAX(flattening)} whose {parent astronomical body} is {Sun}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3901935 . ?ent wdt:P1102 ?obj . ?ent wdt:P397 wd:Q525 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'flattening', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inferior planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Sun'}}}

 Q: What ice age starts with the letter "a"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49367 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ice age'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: How many items are narrated by Tom Kenny?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2438 wd:Q299282 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'narrated by', 'o': 'Tom Kenny'}

 Q: What is the place of incorporation of the developers of the Nintendo Switch?
 SPARQL: SELECT ?answer WHERE { wd:Q19610114 wdt:P178 ?X . ?X wdt:P740 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of incorporation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nintendo Switch', 'p': 'developer', 'o': '$y0'}}

 Q: What woodcut print is depicted by the Tower of Babel?
 SPARQL:  select distinct ?obj where { wd:Q41213 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q18219090 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tower of Babel', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'woodcut print'}}

 Q: Give me {credit institution} that contains the word {wachovia} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q730038 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wachovia')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'credit institution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wachovia'}}

 Q: When did series of Nanda Empire and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q949268 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nanda Empire', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nanda Empire', 'p': 'series', 'o': '$y0'}}]

 Q: What are thebig city which start with the letter i
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1549591 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ł')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'big city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ł'}}

 Q: What is the {capital} for {work location} of {Vladimir Lenin}
 SPARQL:  select distinct ?obj where { wd:Q1394 wdt:P937 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Lenin', 'p': 'work location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: Who is {habitat} of {taxon parent} of {Lagopus persicus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41002157 wdt:P171 ?X . ?X wdt:P2974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'habitat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lagopus persicus', 'p': 'taxon parent', 'o': '$y0'}}

 Q: tell  me Original Public Ivy that chairperson Carol Folt starts with  letter c
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20971972 . ?sbj wdt:P488 wd:Q11246486 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Original Public Ivy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Carol Folt'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What was the previous favorite player of constructivism
 SPARQL: SELECT ?answer WHERE { wd:Q207103 wdt:P737 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prev', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'constructivism', 'p': 'favorite player', 'o': '$y0'}}

 Q: who taxonomic rank of higher taxon of treeswift ?
 SPARQL: SELECT ?answer WHERE { wd:Q31836 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'taxonomic rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'treeswift', 'p': 'higher taxon', 'o': '$y0'}}

 Q: what is the {start time} for {Rostock} has {country} as {German Democratic Republic} ?
 SPARQL: SELECT ?value WHERE { wd:Q2861 p:P17 ?s . ?s ps:P17 wd:Q16957 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rostock', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'German Democratic Republic'}}}

 Q: What is the CSFD person ID of Leonid Gaidai?
 SPARQL: select distinct ?answer where { wd:Q312480 wdt:P2605 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leonid Gaidai', 'p': 'CSFD person ID', 'o': '?x0'}

 Q: What was Joe Pesci nominated for at the point in time 1980-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q20178 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joe Pesci', 'p': 'nominated for', 'o': '?x0', 't': '1980'}

 Q: What is the {English Electric diesel engines} with the {MAX(bore)} whose {engine configuration} is {straight-six}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5378251 . ?ent wdt:P2556 ?obj . ?ent wdt:P1002 wd:Q1148385 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'bore', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'English Electric diesel engines', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'engine configuration', 'o': 'straight-six'}}}

 Q: What is {head quarters} of {Singapore Airlines}, that has {median household income} is {32360.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q32245 wdt:P159 ?answer . ?answer wdt:P3529 ?x FILTER(contains(?x,'32360.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Singapore Airlines', 'p': 'head quarters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'median household income', 'o': '32360.0'}}

 Q: What type of electrification is direct current?
 SPARQL: select distinct ?answer where { ?answer wdt:P930 wd:Q159241}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'type of electrification', 'o': 'direct current'}

 Q: What New Line Cinema film trilogy had the largest box office?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q13593818 . ?ent wdt:P2142 ?obj . ?ent wdt:P272 wd:Q79202 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'box office', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film trilogy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'production company', 'o': 'New Line Cinema'}}}

 Q: What are the revolution which start with the letter r
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10931 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'revolution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: what is the {start time} for {Boa Vista} has {head of government} as {Teresa Surita} ?
 SPARQL: SELECT ?value WHERE { wd:Q181056 p:P6 ?s . ?s ps:P6 wd:Q9086139 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boa Vista', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Teresa Surita'}}}

 Q: How many {practiced by} are for {tennis} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q847 wdt:P3095 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'tennis', 'p': 'practiced by', 'o': '?x0'}

 Q: What is {county seat} of {Austria}, that has {head of national government} is {Josef Neumayer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40 wdt:P36 ?answer . ?answer wdt:P6 wd:Q1705370}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Austria', 'p': 'county seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'head of national government', 'o': 'Josef Neumayer'}}

 Q: What is the unemployment rate at the Misiones Province Indian reservation?
 SPARQL: SELECT ?answer WHERE { wd:Q44798 wdt:P131 ?X . ?X wdt:P1198 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'unemployment rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Misiones Province', 'p': 'in', 'o': '$y0'}}

 Q: what is the {end time} for {Han dynasty} has {capital} as {Chang'an} ?
 SPARQL: SELECT ?value WHERE { wd:Q7209 p:P36 ?s . ?s ps:P36 wd:Q6501000 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Han', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': "Chang'an"}}}

 Q: What is the {essential medicine} for {medical condition treated} of {inflammation}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2175 wd:Q101991 . ?sbj wdt:P31 wd:Q35456 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical condition treated', 'o': 'inflammation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine'}}

 Q: What is the {list of World Chess Champions} for {participant} of {Magnus Carlsen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q106807 . ?sbj wdt:P31 wd:Q9805708 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Magnus Carlsen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'list of World Chess Champions'}}

 Q: What is {elected in} and {electoral district} of {{Malcolm Turnbull} has {position held} as {Member of the Australian House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q927550 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P2715 ?value1 . ?s pq:P768 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Turnbull', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'electoral district', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Turnbull', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}]

 Q: what is the {character role} for {Sex and the City} has {cast member} as {Kristin Davis} ?
 SPARQL: SELECT ?value WHERE { wd:Q35791 p:P161 ?s . ?s ps:P161 wd:Q229176 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'character role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sex and the City', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Kristin Davis'}}}

 Q: What is <TasteAtlas ID> of <sushi> ?
 SPARQL: select distinct ?answer where { wd:Q46383 wdt:P5456 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sushi', 'p': 'TasteAtlas ID', 'o': '?x0'}

 Q: What city is both the death location of Carlos Gardel and the twin city of Cali?
 SPARQL: SELECT ?answer WHERE { wd:Q229613 wdt:P20 ?answer . ?answer wdt:P190 wd:Q51103}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carlos Gardel', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Cali'}}

 Q: What is <family relationship degree> of <parent> ?
 SPARQL: select distinct ?answer where { wd:Q7566 wdt:P4500 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'parent', 'p': 'family relationship degree', 'o': '?x0'}

 Q: How many {award received} are to/by {Tony Award} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q191874 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'awards', 'o': 'Tony Award'}

 Q: What is both located in or next to a body of water and located in the administrative territorial entity of Sydney?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q3130 wdt:P206 ?ans_1 . wd:Q3130 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Sydney', 'p': 'body of water', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Sydney', 'p': 'located in the administrative territorial entity', 'o': '?x1'}]

 Q: what is the {start time} for {John of England} has {spouse} as {Isabel, Countess of Gloucester} ?
 SPARQL: SELECT ?value WHERE { wd:Q129308 p:P26 ?s . ?s ps:P26 wd:Q242636 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John of England', 'p': 'wife', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'wife', 'o': 'Isabel, Countess of Gloucester'}}}

 Q: What is {die from} of {B. B. King}, that has {anatomical location} is {human brain} ?
 SPARQL: SELECT ?answer WHERE { wd:Q188969 wdt:P509 ?answer . ?answer wdt:P927 wd:Q492038}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'B. B. King', 'p': 'die from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'human brain'}}

 Q: What is the LibraryThing work ID of Ajax?
 SPARQL: select distinct ?answer where { wd:Q412341 wdt:P1085 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ajax', 'p': 'LibraryThing work ID', 'o': '?x0'}

 Q: What is {has daughter} of {musical score by} of {The Beat That My Heart Skipped} ?
 SPARQL: SELECT ?answer WHERE { wd:Q931671 wdt:P86 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Beat That My Heart Skipped', 'p': 'musical score by', 'o': '$y0'}}

 Q: when is the {point in time} for {Melbourne} which has {population} as {4529500} ?
 SPARQL: SELECT ?value WHERE { wd:Q3141 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'4529500')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Melbourne', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '4529500'}, 't': '?x0'}

 Q: Can you tell distributor of BP?
 SPARQL: select distinct ?answer where { ?answer wdt:P750 wd:Q152057}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'distributor', 'o': 'BP'}

 Q: What is {sister city} of {Burlington}, that has {county seat for} is {Yaroslavl Oblast} ?
 SPARQL: SELECT ?answer WHERE { wd:Q31058 wdt:P190 ?answer . ?answer wdt:P1376 wd:Q2448}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Burlington', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat for', 'o': 'Yaroslavl Oblast'}}

 Q: When did Astrid Lindgren receive an award as Zilveren Griffel?
 SPARQL: SELECT ?value WHERE { wd:Q55767 p:P166 ?s . ?s ps:P166 wd:Q2285862 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Astrid Lindgren', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Zilveren Griffel'}, 't': '?x0'}

 Q: When did award received of Art Tatum and winner?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q109053 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Art Tatum', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Art Tatum', 'p': 'award received', 'o': '$y0'}}]

 Q: Give me {rock band} that starts with {'y'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5741069 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rock band'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is the taxon parent of archosaur, whose vernacular name is クルロタルシ類?
 SPARQL: SELECT ?answer WHERE { wd:Q130910 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'クルロタルシ類'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'archosaur', 'p': 'taxon parent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'クルロタルシ類'}}

 Q: what is the {end time} for {North Atlantic Treaty Organization} has {secretary general} as {Paul-Henri Spaak} ?
 SPARQL: SELECT ?value WHERE { wd:Q7184 p:P3975 ?s . ?s ps:P3975 wd:Q155691 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North Atlantic Treaty Organization', 'p': 'secretary general', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'secretary general', 'o': 'Paul-Henri Spaak'}}}

 Q: What is {end time} and {start time} of {{Boeing 747} has {operator} as {Air Algérie}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q179 p:P137 ?s . ?s ps:P137 wd:Q406764 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boeing 747', 'p': 'operated by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'operated by', 'o': 'Air Algerie'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boeing 747', 'p': 'operated by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'operated by', 'o': 'Air Algerie'}}}]

 Q: What military rank did Mikhail Kalashnikov achieve in 1999-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q167573 p:P410 ?s . ?s ps:P410 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mikhail Kalashnikov', 'p': 'military rank', 'o': '?x0', 't': '1999'}

 Q: What is {sons} of {daughter of} of {Athena} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37122 wdt:P22 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Athena', 'p': 'daughter of', 'o': '$y0'}}

 Q: Is Diplo a participant with Skrillex and Sanjoy?
 SPARQL: ASK WHERE { wd:Q533781 wdt:P710 wd:Q19004 . wd:Q533781 wdt:P710 wd:Q16910067 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Diplo', 'p': 'participant', 'o': '?x0', '?x0': 'Skrillex'}, {'h': 'IS', 'v': '?x1', 's': 'Diplo', 'p': 'participant', 'o': '?x1', '?x1': 'Sanjoy'}]

 Q: What is {start time} and {end time} of {{Joseph Liouville} has {member of} as {French National Assembly}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q214549 p:P463 ?s . ?s ps:P463 wd:Q193582 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Liouville', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'French National Assembly'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Liouville', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'French National Assembly'}}}]

 Q: Tell me the jurisdiction and location of Matthias Corvinus which was an event as coronation.
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q188634 p:P793 ?s . ?s ps:P793 wd:Q209715 . ?s pq:P1001 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'jurisdiction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matthias Corvinus', 'p': 'event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'event', 'o': 'coronation'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matthias Corvinus', 'p': 'event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'event', 'o': 'coronation'}}}]

 Q: What is the {human} for {employer} of {Lockheed Martin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P108 wd:Q7240 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'Lockheed Martin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: which chemical compound has the highest kinematic viscosity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2118 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'kinematic viscosity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is the etymology of the CNO cycle that has a date of discovery as 1772-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q222971 wdt:P138 ?answer . ?answer wdt:P575 ?x FILTER(contains(YEAR(?x),'1772'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'CNO cycle', 'p': 'etymology', 'o': '?x0', 't': '1772'}

 Q: What is {has villages} of {worked for} of {Dorian Leigh} ?
 SPARQL: SELECT ?answer WHERE { wd:Q270426 wdt:P108 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has villages', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dorian Leigh', 'p': 'worked for', 'o': '$y0'}}

 Q: What is the {type of quantum particle} for {opposite of} of {elementary particle}
 SPARQL:  select distinct ?obj where { wd:Q43116 wdt:P461 ?obj . ?obj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'elementary particle', 'p': 'opposite', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: What is the total fertility rate for operators of the Cessna 172 Skyhawk?
 SPARQL: SELECT ?answer WHERE { wd:Q244479 wdt:P137 ?X . ?X wdt:P4841 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cessna 172 Skyhawk', 'p': 'operator', 'o': '$y0'}}

 Q: Is the number of victims of killer Francis Heaulme equal 9?
 SPARQL: ASK WHERE { wd:Q3081486 wdt:P1345 ?obj filter(?obj = 9) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Francis Heaulme', 'p': 'number of victims of killer', 'o': '?x0', '?x0': '9'}

 Q: What is {typology} of {second language} of {Paul van Dyk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q77034 wdt:P1412 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul van Dyk', 'p': 'language', 'o': '$y0'}}

 Q: How many {studied by} are for {atomic nucleus} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q37147 wdt:P2579 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'atomic nucleus', 'p': 'studied by', 'o': '?x0'}

 Q: Give me {dead language} that {has grammatical case} {genitive case} and which contains the word {norn} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q45762 . ?sbj wdt:P2989 wd:Q146233 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'norn')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dead language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical case', 'o': 'genitive case'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'norn'}}

 Q: How much applies to jurisdiction to Para?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1001 wd:Q39517 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'Para'}

 Q: What is the catalog  of traditional Chinese characters for writing system
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q178528 . ?sbj wdt:P31 wd:Q2352616 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'traditional Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'catalog'}}

 Q: What actor from The Truman Show was educated at the Peabody Institute?
 SPARQL: SELECT ?answer WHERE { wd:Q214801 wdt:P161 ?answer . ?answer wdt:P69 wd:Q1156934}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Truman Show', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'educated at', 'o': 'Peabody Institute'}}

 Q: What is {advisor} of {musical score by} of {Piano Sonata No. 3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q145937 wdt:P86 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piano Sonata No. 3', 'p': 'musical score by', 'o': '$y0'}}

 Q: What is {preceded by} of {London Calling}, that has {literary genre} is {folk punk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q644416 wdt:P155 ?answer . ?answer wdt:P136 wd:Q1425661}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'London Calling', 'p': 'preceded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'folk punk'}}

 Q: What is {nominated for} of {Kevin Kline} that is {point in time} is {1991-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q105817 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kevin Kline', 'p': 'nominated for', 'o': '?x0', 't': '1991'}

 Q: What is the award received by Ellen DeGeneres in 2012-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q483325 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ellen DeGeneres', 'p': 'award received', 'o': '?x0', 't': '2012'}

 Q: What is the {sovereign state} for {culture} of {Rome}
 SPARQL:  select distinct ?obj where { wd:Q220 wdt:P2596 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rome', 'p': 'culture', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who gave the{citation} of {is shown in} of {Beardsley} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47471843 wdt:P1441 ?X . ?X wdt:P2860 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'citation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beardsley', 'p': 'is shown in', 'o': '$y0'}}

 Q: What is {fields} of {creates} of {Chef Boyardee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17079048 wdt:P1056 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fields', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chef Boyardee', 'p': 'creates', 'o': '$y0'}}

 Q: What is {elected in} and {end cause} of {{John Hume} has {position held} as {Member of the 1st Northern Ireland Assembly}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q193630 p:P39 ?s . ?s ps:P39 wd:Q37303731 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 1st Northern Ireland Assembly'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 1st Northern Ireland Assembly'}}}]

 Q: What disputed territory starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15239622 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disputed territory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {academic library} with the {MAX(collection or exhibition size)} whose {instance of} is {college library}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q856234 . ?ent wdt:P1436 ?obj . ?ent wdt:P31 wd:Q1622062 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'collection or exhibition size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college library'}}

 Q: Which is the species kept of Chanos chanos?
 SPARQL: select distinct ?answer where { ?answer wdt:P1990 wd:Q465261}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'species kept', 'o': 'Chanos chanos'}

 Q: Which is the Japanese military aircraft designation of DC-3?
 SPARQL: select distinct ?answer where { wd:Q190211 wdt:P849 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'DC-3', 'p': 'Japanese military aircraft designation', 'o': '?x0'}

 Q: Is the clearance of the Little Belt Bridge greater than 35.2?
 SPARQL: ASK WHERE { wd:Q1424674 wdt:P2793 ?obj filter(?obj > 35.2) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Little Belt Bridge', 'p': 'clearance', 'o': '?x0', '?x0': '35.2'}

 Q: What comes before and is developed by MultiMediaCard?
 SPARQL: SELECT ?answer WHERE { wd:Q646104 wdt:P156 ?X . ?X wdt:P178 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MultiMediaCard', 'p': 'comes before', 'o': '$y0'}}

 Q: Which is the epithet which is said to be the same as Apollo?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P460 wd:Q37340 . ?sbj wdt:P31 wd:Q207869 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'Apollo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'epithet'}}

 Q: What is {date incorporated} of {college attended} of {Jack Ma} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1137062 wdt:P69 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'incorporated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Ma', 'p': 'college attended', 'o': '$y0'}}

 Q: What is {position held} of {Umberto I of Italy} that is {replaces} is {Victor Emmanuel II of Savoy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q153688 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q168691 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Umberto I of Italy', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Victor Emmanuel II of Savoy'}}}

 Q: What is the {television series season} for {series} of {Saturday Night Live}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q13979 . ?sbj wdt:P31 wd:Q3464665 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Saturday Night Live', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'season'}}

 Q: Who are the participants in the Battle of Greece, which is a member of the Organisation for the Prohibition of Chemical Weapons?
 SPARQL: SELECT ?answer WHERE { wd:Q2888837 wdt:P710 ?answer . ?answer wdt:P463 wd:Q842490}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Greece', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Organisation for the Prohibition of Chemical Weapons'}}

 Q: what is the {point in time} for {Tim Duncan} has {award received} as {John R. Wooden Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q193020 p:P166 ?s . ?s ps:P166 wd:Q1641970 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tim Duncan', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'John R. Wooden Award'}, 't': '?x0'}

 Q: "Which is {border} of {Sichuan}, whose {partner town} is {Suceava} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q19770 wdt:P47 ?answer . ?answer wdt:P190 wd:Q46400}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sichuan', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Suceava'}}

 Q: What is {instance of} of {Papal States} that is {start time} is {756-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q170174 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x filter(contains(?x,'756-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Papal State', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '756-0-0'}}}

 Q: Who {follows} and {followed by} of {{The Lion King} {series} as {list of Walt Disney Animation Studios films}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36479 p:P179 ?s . ?s ps:P179 wd:Q6603742 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'list of Walt Disney Animation Studios films'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'list of Walt Disney Animation Studios films'}}}]

 Q: Is the total services of the United States of America equal to 3.47533162784e+11?
 SPARQL: ASK WHERE { wd:Q30 wdt:P2134 ?obj filter(?obj = 3.47533162784e+11) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'United States of America', 'p': 'total reserves', 'o': '?x0', '?x0': '3.47533162784e+11'}

 Q: What is {zenith} of {borders} of {East Java} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3586 wdt:P47 ?X . ?X wdt:P610 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zenith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'East Java', 'p': 'border', 'o': '$y0'}}

 Q: What is {part of constellation} of {has moon} of {HD 76700} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1563424 wdt:P398 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'HD 76700', 'p': 'has moon', 'o': '$y0'}}

 Q: What is {time zone} of {birth place} of {Frank Capra} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51492 wdt:P19 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Capra', 'p': 'birth place', 'o': '$y0'}}

 Q: Give me {automobile manufacturer} that {business division} {Aston Martin} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q786820 . ?sbj wdt:P199 wd:Q27074 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile manufacturer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'business division', 'o': 'Aston Martin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {nominated for} of {Katharine Hepburn} that is {for work} is {On Golden Pond} ?
 SPARQL: SELECT ?obj WHERE { wd:Q56016 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q451603 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katharine Hepburn', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'On Golden Pond'}}}

 Q: What is ASI Monument ID of Red Fort?
 SPARQL: select distinct ?answer where { wd:Q45957 wdt:P1371 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Red Fort', 'p': 'ASI Monument ID', 'o': '?x0'}

 Q: What is {seat} of {member of} of {Leiden University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q156598 wdt:P463 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leiden University', 'p': 'member of', 'o': '$y0'}}

 Q: Name the empire that was replaced by the Principality of Serbia that starts with letter E
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q48349 . ?sbj wdt:P1366 wd:Q684030 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Principality of Serbia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: Which are the units sold for PlayStation 2?
 SPARQL: select distinct ?answer where { wd:Q10680 wdt:P2664 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PlayStation 2', 'p': 'units sold', 'o': '?x0'}

 Q: What is the catalog  of traditional Chinese characters for writing system
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q178528 . ?sbj wdt:P31 wd:Q2352616 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'traditional Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'catalog'}}

 Q: What actor from The Truman Show was educated at the Peabody Institute?
 SPARQL: SELECT ?answer WHERE { wd:Q214801 wdt:P161 ?answer . ?answer wdt:P69 wd:Q1156934}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Truman Show', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'educated at', 'o': 'Peabody Institute'}}

 Q: What is {advisor} of {musical score by} of {Piano Sonata No. 3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q145937 wdt:P86 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piano Sonata No. 3', 'p': 'musical score by', 'o': '$y0'}}

 Q: What is {preceded by} of {London Calling}, that has {literary genre} is {folk punk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q644416 wdt:P155 ?answer . ?answer wdt:P136 wd:Q1425661}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'London Calling', 'p': 'preceded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'folk punk'}}

 Q: What is {nominated for} of {Kevin Kline} that is {point in time} is {1991-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q105817 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kevin Kline', 'p': 'nominated for', 'o': '?x0', 't': '1991'}

 Q: What is the award received by Ellen DeGeneres in 2012-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q483325 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ellen DeGeneres', 'p': 'award received', 'o': '?x0', 't': '2012'}

 Q: What is the {sovereign state} for {culture} of {Rome}
 SPARQL:  select distinct ?obj where { wd:Q220 wdt:P2596 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rome', 'p': 'culture', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who gave the{citation} of {is shown in} of {Beardsley} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47471843 wdt:P1441 ?X . ?X wdt:P2860 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'citation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beardsley', 'p': 'is shown in', 'o': '$y0'}}

 Q: What is {fields} of {creates} of {Chef Boyardee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17079048 wdt:P1056 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fields', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chef Boyardee', 'p': 'creates', 'o': '$y0'}}

 Q: What is {elected in} and {end cause} of {{John Hume} has {position held} as {Member of the 1st Northern Ireland Assembly}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q193630 p:P39 ?s . ?s ps:P39 wd:Q37303731 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 1st Northern Ireland Assembly'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Hume', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 1st Northern Ireland Assembly'}}}]

 Q: What disputed territory starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15239622 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disputed territory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {academic library} with the {MAX(collection or exhibition size)} whose {instance of} is {college library}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q856234 . ?ent wdt:P1436 ?obj . ?ent wdt:P31 wd:Q1622062 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'collection or exhibition size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college library'}}

 Q: Which is the species kept of Chanos chanos?
 SPARQL: select distinct ?answer where { ?answer wdt:P1990 wd:Q465261}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'species kept', 'o': 'Chanos chanos'}

 Q: Which is the Japanese military aircraft designation of DC-3?
 SPARQL: select distinct ?answer where { wd:Q190211 wdt:P849 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'DC-3', 'p': 'Japanese military aircraft designation', 'o': '?x0'}

 Q: Is the clearance of the Little Belt Bridge greater than 35.2?
 SPARQL: ASK WHERE { wd:Q1424674 wdt:P2793 ?obj filter(?obj > 35.2) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Little Belt Bridge', 'p': 'clearance', 'o': '?x0', '?x0': '35.2'}

 Q: What comes before and is developed by MultiMediaCard?
 SPARQL: SELECT ?answer WHERE { wd:Q646104 wdt:P156 ?X . ?X wdt:P178 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MultiMediaCard', 'p': 'comes before', 'o': '$y0'}}

 Q: Which is the epithet which is said to be the same as Apollo?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P460 wd:Q37340 . ?sbj wdt:P31 wd:Q207869 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'Apollo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'epithet'}}

 Q: What is {date incorporated} of {college attended} of {Jack Ma} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1137062 wdt:P69 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'incorporated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Ma', 'p': 'college attended', 'o': '$y0'}}

 Q: What is {position held} of {Umberto I of Italy} that is {replaces} is {Victor Emmanuel II of Savoy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q153688 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q168691 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Umberto I of Italy', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Victor Emmanuel II of Savoy'}}}

 Q: What is the {television series season} for {series} of {Saturday Night Live}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q13979 . ?sbj wdt:P31 wd:Q3464665 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Saturday Night Live', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'season'}}

 Q: Who are the participants in the Battle of Greece, which is a member of the Organisation for the Prohibition of Chemical Weapons?
 SPARQL: SELECT ?answer WHERE { wd:Q2888837 wdt:P710 ?answer . ?answer wdt:P463 wd:Q842490}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Greece', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Organisation for the Prohibition of Chemical Weapons'}}

 Q: what is the {point in time} for {Tim Duncan} has {award received} as {John R. Wooden Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q193020 p:P166 ?s . ?s ps:P166 wd:Q1641970 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tim Duncan', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'John R. Wooden Award'}, 't': '?x0'}

 Q: "Which is {border} of {Sichuan}, whose {partner town} is {Suceava} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q19770 wdt:P47 ?answer . ?answer wdt:P190 wd:Q46400}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sichuan', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Suceava'}}

 Q: What is {instance of} of {Papal States} that is {start time} is {756-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q170174 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x filter(contains(?x,'756-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Papal State', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '756-0-0'}}}

 Q: Who {follows} and {followed by} of {{The Lion King} {series} as {list of Walt Disney Animation Studios films}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36479 p:P179 ?s . ?s ps:P179 wd:Q6603742 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'list of Walt Disney Animation Studios films'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lion King', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'list of Walt Disney Animation Studios films'}}}]

 Q: Is the total services of the United States of America equal to 3.47533162784e+11?
 SPARQL: ASK WHERE { wd:Q30 wdt:P2134 ?obj filter(?obj = 3.47533162784e+11) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'United States of America', 'p': 'total reserves', 'o': '?x0', '?x0': '3.47533162784e+11'}

 Q: What is {zenith} of {borders} of {East Java} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3586 wdt:P47 ?X . ?X wdt:P610 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zenith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'East Java', 'p': 'border', 'o': '$y0'}}

 Q: What is {part of constellation} of {has moon} of {HD 76700} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1563424 wdt:P398 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'HD 76700', 'p': 'has moon', 'o': '$y0'}}

 Q: What is {time zone} of {birth place} of {Frank Capra} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51492 wdt:P19 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Capra', 'p': 'birth place', 'o': '$y0'}}

 Q: Give me {automobile manufacturer} that {business division} {Aston Martin} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q786820 . ?sbj wdt:P199 wd:Q27074 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile manufacturer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'business division', 'o': 'Aston Martin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {nominated for} of {Katharine Hepburn} that is {for work} is {On Golden Pond} ?
 SPARQL: SELECT ?obj WHERE { wd:Q56016 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q451603 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katharine Hepburn', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'On Golden Pond'}}}

 Q: What is ASI Monument ID of Red Fort?
 SPARQL: select distinct ?answer where { wd:Q45957 wdt:P1371 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Red Fort', 'p': 'ASI Monument ID', 'o': '?x0'}

 Q: What is {seat} of {member of} of {Leiden University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q156598 wdt:P463 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leiden University', 'p': 'member of', 'o': '$y0'}}

 Q: Name the empire that was replaced by the Principality of Serbia that starts with letter E
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q48349 . ?sbj wdt:P1366 wd:Q684030 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Principality of Serbia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: Which are the units sold for PlayStation 2?
 SPARQL: select distinct ?answer where { wd:Q10680 wdt:P2664 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PlayStation 2', 'p': 'units sold', 'o': '?x0'}

 Q: What is the {weapon model} with the {MAX(field of view)} whose {conflict} is {World War II}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P4036 ?obj . ?ent wdt:P607 wd:Q362 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'field of view', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'WWII'}}}

 Q: Which is the government of the executive body of Beijing?
 SPARQL:  select distinct ?obj where { wd:Q956 wdt:P208 ?obj . ?obj wdt:P31 wd:Q7188 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Beijing', 'p': 'executive body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'government'}}

 Q: what is the {street number} for {Les Demoiselles d'Avignon} has {exhibition history} as {rue d'Antin} ?
 SPARQL: SELECT ?value WHERE { wd:Q910199 p:P608 ?s . ?s ps:P608 wd:Q3450475 . ?s pq:P670 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'street number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Les Demoiselles d'Avignon", 'p': 'exhibition history', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'exhibition history', 'o': "rue d'Antin"}}}

 Q: How many {culture} are for {Enlil} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q214672 wdt:P2596 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Enlil', 'p': 'culture', 'o': '?x0'}

 Q: What is the {aircraft hijacking} for {has immediate cause} of {War on Terror}
 SPARQL:  select distinct ?obj where { wd:Q185729 wdt:P1478 ?obj . ?obj wdt:P31 wd:Q898712 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'War on Terror', 'p': 'has immediate cause', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft hijacking'}}

 Q: What is the tributary of Mindanao's body of water?
 SPARQL: SELECT ?answer WHERE { wd:Q124873 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mindanao', 'p': 'body of water', 'o': '$y0'}}

 Q: Tell me the sports team which contains the word world in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12973014 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports team'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: What is {academic major} and {academic degree} of {{Katherine Dunham} has {educated at} as {University of Chicago}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}]

 Q: What linked jurisdiction is adjacent to the Council of the North?
 SPARQL: SELECT ?answer WHERE { wd:Q5176544 wdt:P1001 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'adjacent to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Council of the North', 'p': 'jurisdiction', 'o': '$y0'}}

 Q: How many officeholders are there with {Jiang Zemin} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1308 wd:Q16597 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Jiang Zemin'}

 Q: what is the {academic degree} for {James Mattis} has {educated at} as {Richland High School} ?
 SPARQL: SELECT ?value WHERE { wd:Q267902 p:P69 ?s . ?s ps:P69 wd:Q7330633 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Mattis', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Richland High School'}}}

 Q: What was located in Krasnodar prior to 1934?
 SPARQL: SELECT ?obj WHERE { wd:Q3646 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1934')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Krasnodar', 'p': 'in', 'o': '?x0', 't': '1934'}

 Q: What is {category of associated people} of {born in} of {Francis Crick} ?
 SPARQL: SELECT ?answer WHERE { wd:Q123280 wdt:P19 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Francis Crick', 'p': 'born in', 'o': '$y0'}}

 Q: What is {county seat of} of {died in} of {Musa al-Kadhim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q315031 wdt:P20 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Musa al-Kadhim', 'p': 'died in', 'o': '$y0'}}

 Q: Who is the advisor of the architecture firm of Duey and Julia Wright House?
 SPARQL: SELECT ?answer WHERE { wd:Q5312288 wdt:P84 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Duey and Julia Wright House', 'p': 'architect', 'o': '$y0'}}

 Q: what is the {point in time} for {Jerome Bruner} has {award received} as {APA Award for Distinguished Scientific Contributions to Psychology} ?
 SPARQL: SELECT ?value WHERE { wd:Q114867 p:P166 ?s . ?s ps:P166 wd:Q17112655 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jerome Bruner', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'APA Award for Distinguished Scientific Contributions to Psychology'}, 't': '?x0'}

 Q: What is the {codon} for {encoded by} of {L-phenylalanine}
 SPARQL:  select distinct ?obj where { wd:Q170545 wdt:P702 ?obj . ?obj wdt:P31 wd:Q165052 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L-phenylalanine', 'p': 'encoded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'codon'}}

 Q: What is {location} of {hunting} that is {excluding} is {domesticated animal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36963 p:P276 ?s . ?s ps:P276 ?obj . ?s pq:P1011 wd:Q622852 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hunt', 'p': 'location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'excluding', 'o': 'domesticated animal'}}}

 Q: what is first-order metaclass contains the word type in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24017414 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'type')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'first-order metaclass'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'type'}}

 Q: Tell me the award Stephen Jay Gould received on the first of January 2001?
 SPARQL: SELECT ?obj WHERE { wd:Q180619 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Stephen Jay Gould', 'p': 'award', 'o': '?x0', 't': '2001'}

 Q: Did {Rajneesh} {occupation} {artist} and {guru} ?
 SPARQL: ASK WHERE { wd:Q148285 wdt:P106 wd:Q483501 . wd:Q148285 wdt:P106 wd:Q484260 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Rajneesh', 'p': 'occupation', 'o': '?x0', '?x0': 'artist'}, {'h': 'IS', 'v': '?x1', 's': 'Rajneesh', 'p': 'occupation', 'o': '?x1', '?x1': 'guru'}]

 Q: Which is the location of first performance of La traviata?
 SPARQL: select distinct ?answer where { wd:Q186162 wdt:P4647 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'La traviata', 'p': 'location of first performance', 'o': '?x0'}

 Q: which binary relation starts with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q130901 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'binary relation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the rotation period for Crab Pulsar?
 SPARQL: select distinct ?answer where { wd:Q1044623 wdt:P2147 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Crab Pulsar', 'p': 'rotation period', 'o': '?x0'}

 Q: Is transgender the opposite of cisgender?
 SPARQL: ASK WHERE { wd:Q189125 wdt:P461 wd:Q1093205 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'transgender', 'p': 'opposite of', 'o': '?x0', '?x0': 'cis'}]

 Q: Does the vilkhivchik area equal to 0?
 SPARQL: ASK WHERE { wd:Q4334348 wdt:P2046 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Vilkhivchik', 'p': 'area', 'o': '?x0', '?x0': '0'}

 Q: What is <Anime News Network person ID> of <Onyanko Club> ?
 SPARQL: select distinct ?answer where { wd:Q669430 wdt:P1982 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Onyanko Club', 'p': 'Anime News Network person ID', 'o': '?x0'}

 Q: what is the {end time} for {Otto von Bismarck} has {position held} as {Bundeskanzler (Norddeutscher Bund)} ?
 SPARQL: SELECT ?value WHERE { wd:Q8442 p:P39 ?s . ?s ps:P39 wd:Q885840 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Otto von Bismarck', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Bundeskanzler (Norddeutscher Bund)'}}}

 Q: what is the {valid in period} for {Turin} has {located in time zone} as {UTC+02:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q495 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Turin', 'p': 'time', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time', 'o': 'UTC+02:00'}}}

 Q: What is {science, that studies} of {disease}, that has {has outcome} is {genetic disease} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12136 wdt:P2579 ?answer . ?answer wdt:P1542 wd:Q200779}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'disease', 'p': 'science, that studies', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has outcome', 'o': 'genetic disease'}}

 Q: What is {seat} of {Mitsubishi UFJ Financial Group}, that has {has local government areas} is {Yonbanchō} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1542175 wdt:P159 ?answer . ?answer wdt:P150 wd:Q3347147}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mitsubishi UFJ Financial Group', 'p': 'seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has local government areas', 'o': 'Yonbanchō'}}

 Q: Who was Peter Paul Rubens' employer in September 1609?
 SPARQL: SELECT ?obj WHERE { wd:Q5599 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1609')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Paul Rubens', 'p': 'employer', 'o': '?x0', 't': '1609'}

 Q: What work location of Gerolamo Cardano has a surface area of 93.03?
 SPARQL: SELECT ?answer WHERE { wd:Q184530 wdt:P937 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'93.03'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gerolamo Cardano', 'p': 'work location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area', 'o': '93.03'}}

 Q: What is the {municipality of the Netherlands} with the {MAX(employment by economic sector)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2039348 . ?ent wdt:P2297 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'employment by economic sector', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of the Netherlands'}}

 Q: Was Lewis Hamilton a member of the sports team Minardi?
 SPARQL: ASK WHERE { wd:Q9673 wdt:P54 wd:Q142381 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lewis Hamilton', 'p': 'team', 'o': '?x0', '?x0': 'Minardi'}]

 Q: Who is the admin HQ of the movie studio for Dinner for Schmucks?
 SPARQL: SELECT ?answer WHERE { wd:Q1226599 wdt:P272 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'HQ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dinner for Schmucks', 'p': 'studio', 'o': '$y0'}}

 Q: What is Stuttgart Database of Scientific Illustrators ID for Marie Tharp?
 SPARQL: select distinct ?answer where { wd:Q538786 wdt:P2349 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marie Tharp', 'p': 'Stuttgart Database of Scientific Illustrators ID', 'o': '?x0'}

 Q: What is the artistic genre for continuity in World of Warcraft: Mists of Pandaria?
 SPARQL: SELECT ?answer WHERE { wd:Q841953 wdt:P1434 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'World of Warcraft: Mists of Pandaria', 'p': 'continuity', 'o': '$y0'}}

 Q: What is {label in official language} of {characters} of {Odyssey} ?
 SPARQL: SELECT ?answer WHERE { wd:Q35160 wdt:P674 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'label in official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Odyssey', 'p': 'characters', 'o': '$y0'}}

 Q: Give me {organization} that {anthem} {Anthem of Europe} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43229 . ?sbj wdt:P85 wd:Q11993 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'Anthem of Europe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {market capitalisation} of {holding company} of {PayPal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q483959 wdt:P749 ?X . ?X wdt:P2226 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'market cap', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paypal', 'p': 'holding', 'o': '$y0'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Roberto Baggio} has {member of sports team} as {Bologna F.C. 1909}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q67964 p:P54 ?s . ?s ps:P54 wd:Q1893 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberto Baggio', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Bologna'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberto Baggio', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Bologna'}}}]

 Q: What is {country} of {Belfast} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q10686 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'country', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'country', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'country', 'o': '$y0'}}]

 Q: How many times was Austria-Hungary dissolved, abolished or demolished ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q28513 wdt:P576 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Austria-Hungary', 'p': 'abolished', 'o': '?x0'}

 Q: DOES THE FLASH POINT OF THE METHANOL EQUALS 52
 SPARQL: ASK WHERE { wd:Q14982 wdt:P2128 ?obj filter(?obj = 52) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'methanol', 'p': 'flash point', 'o': '?x0', '?x0': '52'}

 Q: How many {payment types accepted} are to/by {money} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2851 wd:Q1368 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'payment types accepted', 'o': 'money'}

 Q: What is the pronunciation audio of the administrative centre of Joseon ?
 SPARQL: SELECT ?answer WHERE { wd:Q28179 wdt:P36 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseon', 'p': 'administrative centre', 'o': '$y0'}}

 Q: What are the currency  which start with the letter yen
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8142 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yen')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'currency'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yen'}}

 Q: Did {Frank_Zappa} {child} {Moon Zappa} and {Ahmet Zappa} ?
 SPARQL: ASK WHERE { wd:Q127330 wdt:P40 wd:Q291024 . wd:Q127330 wdt:P40 wd:Q401963 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Frank Zappa', 'p': 'child', 'o': '?x0', '?x0': 'Moon Zappa'}, {'h': 'IS', 'v': '?x1', 's': 'Frank Zappa', 'p': 'child', 'o': '?x1', '?x1': 'Ahmet Zappa'}]

 Q: does the topaz mohs' hardness equal to 8?
 SPARQL: ASK WHERE { wd:Q134985 wdt:P1088 ?obj filter(?obj = 8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'topaz', 'p': 'hardness', 'o': '?x0', '?x0': '8'}

 Q: What is {writer} of {A Brief History of Time}, that has {professor} is {Dennis W. Sciama} ?
 SPARQL: SELECT ?answer WHERE { wd:Q471726 wdt:P50 ?answer . ?answer wdt:P1066 wd:Q284336}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'A Brief History of Time', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'professor', 'o': 'Dennis W. Sciama'}}

 Q: what is the {for work} for {W. H. Auden} has {award received} as {Pulitzer Prize for Poetry} ?
 SPARQL: SELECT ?value WHERE { wd:Q178698 p:P166 ?s . ?s ps:P166 wd:Q2117891 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'W. H. Auden', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Pulitzer Prize for Poetry'}}}

 Q: What is {taxonomic rank} of {higher taxon} of {crocodile} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2535664 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'crocodile', 'p': 'higher taxon', 'o': '$y0'}}

 Q: What is <Les Voix de la poésie poet ID> of <Alphonse Daudet> ?
 SPARQL: select distinct ?answer where { wd:Q228546 wdt:P5477 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alphonse Daudet', 'p': 'Les Voix de la poésie poet ID', 'o': '?x0'}

 Q: Which is the asteroid spectral type for 10 Hygiea?
 SPARQL: select distinct ?answer where { wd:Q2640 wdt:P720 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '10 Hygiea', 'p': 'asteroid spectral type', 'o': '?x0'}

 Q: What is <ICCF player ID> of <Magnus Carlsen> ?
 SPARQL: select distinct ?answer where { wd:Q106807 wdt:P3316 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Magnus Carlsen', 'p': 'ICCF player ID', 'o': '?x0'}

 Q: what is the {point in time} for {Yul Brynner} has {award received} as {Special Tony Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q102813 p:P166 ?s . ?s ps:P166 wd:Q2308234 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Yul Brynner', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Special Tony Award'}, 't': '?x0'}

 Q: What was Anna Freud's country of citizenship in 1946?
 SPARQL: SELECT ?obj WHERE { wd:Q78485 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anna Freud', 'p': 'country of citizenship', 'o': '?x0', 't': '1946'}

 Q: What is the {logarithmic scale} for {measured physical quantity} of {energy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P111 wd:Q11379 . ?sbj wdt:P31 wd:Q937378 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'energy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'logarithmic scale'}}

 Q: When did series of In the Mood for Love and follows?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1056853 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In the Mood for Love', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In the Mood for Love', 'p': 'series', 'o': '$y0'}}]

 Q: What is {educated at} of {William Walker} that is {end time} is {1838-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q196401 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1838')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Walker', 'p': 'educated at', 'o': '?x0', 't': '1838'}

 Q: Which is the Linguist list code of Esperanto?
 SPARQL: select distinct ?answer where { wd:Q143 wdt:P1232 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'Linguist list code', 'o': '?x0'}

 Q: who is favorite player of doctoral supervisor of Darius Lakdawalla ?
 SPARQL: SELECT ?answer WHERE { wd:Q5222945 wdt:P184 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'favorite player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Darius Lakdawalla', 'p': 'doctoral supervisor', 'o': '$y0'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Michael Jordan} has {member of sports team} as {Chicago Bulls}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q41421 p:P54 ?s . ?s ps:P54 wd:Q128109 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Jordan', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Chicago Bulls'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Jordan', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Chicago Bulls'}}}]

 Q: What is {participant of event} of {is the antonym of} of {girl} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3031 wdt:P461 ?X . ?X wdt:P1344 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'girl', 'p': 'antonym', 'o': '$y0'}}

 Q: What is {area of responsibility} of {NPR}, that has {time} is {UTC−07:00} ?
 SPARQL: SELECT ?answer WHERE { wd:Q671510 wdt:P2541 ?answer . ?answer wdt:P421 wd:Q2212}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'NPR', 'p': 'area of responsibility', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'time', 'o': 'UTC−07:00'}}

 Q: What is the underlying cause of genetic drift?
 SPARQL: SELECT ?answer WHERE { wd:Q486420 wdt:P1542 ?X . ?X wdt:P828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'genetic drift', 'p': 'cause of', 'o': '$y0'}}

 Q: What religion do the children of Mahisente Habte Mariam follow?
 SPARQL: SELECT ?answer WHERE { wd:Q6734112 wdt:P40 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'religion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahisente Habte Mariam', 'p': 'child', 'o': '$y0'}}

 Q: What is {spouse} of {Meghan, Duchess of Sussex} that is {end cause} is {divorce} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3304418 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P1534 wd:Q93190 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'husband', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Meghan, Duchess of Sussex', 'p': 'husband', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end cause', 'o': 'divorce'}}}

 Q: Tell me the characters in the version of Božanska komedija (Debevec).
 SPARQL: SELECT ?answer WHERE { wd:Q21191070 wdt:P629 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Božanska komedija (Debevec)', 'p': 'version of', 'o': '$y0'}}

 Q: which  USDA NDB number of hot dog ?
 SPARQL: select distinct ?answer where { wd:Q181055 wdt:P1978 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hot dog', 'p': 'USDA NDB number', 'o': '?x0'}

 Q: Is it true that the standard molar entropy of germanium equals to 37.32?
 SPARQL: ASK WHERE { wd:Q867 wdt:P3071 ?obj filter(?obj = 37.32) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'germanium', 'p': 'standard molar entropy', 'o': '?x0', '?x0': '37.32'}

 Q: whats the route of administration for lead poisoning?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q110315 wdt:P636 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'lead poisoning', 'p': 'route of administration', 'o': '?x0'}

 Q: Tell me the sports team Giuseppe Meazza plays for and when he began with them.
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q192131 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'began', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giuseppe Meazza', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giuseppe Meazza', 'p': 'team', 'o': '$y0'}}]

 Q: When did Christopher Hitchens published his notable work The Missionary Position and who was his publisher?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 wd:Q2699045 . ?s pq:P123 ?value1 . ?s pq:P577 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'The Missionary Position'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'published', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'The Missionary Position'}}}]

 Q: Does the speed limit of the Brocken Railway equal 40?
 SPARQL: ASK WHERE { wd:Q514245 wdt:P3086 ?obj filter(?obj = 40) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Brocken Railway', 'p': 'speed limit', 'o': '?x0', '?x0': '40'}

 Q: What is {opposite} of {manifestation of} of {noise} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179448 wdt:P1557 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'noise', 'p': 'manifestation of', 'o': '$y0'}}

 Q: who is cousin for motif of Portrait of Adele Bloch-Bauer I ?
 SPARQL: SELECT ?answer WHERE { wd:Q354396 wdt:P180 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cousin', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Portrait of Adele Bloch-Bauer I', 'p': 'motif', 'o': '$y0'}}

 Q: What administrative territorial entity of Kenya starts with the letter "n"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3976641 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'administrative territorial entity of Kenya'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: How much has been proved by Alexander Grothendieck?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1318 wd:Q77141 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'proved by', 'o': 'Alexander Grothendieck'}

 Q: How many {political alignment} are to/by {populism} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1387 wd:Q180490 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'political alignment', 'o': 'populism'}

 Q: What are the group or class of chemical substances which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17339814 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group or class of chemical substances'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Which is the produced sound of thunder?
 SPARQL: select distinct ?answer where { ?answer wdt:P4733 wd:Q83301}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'produced sound', 'o': 'thunder'}

 Q: How many {does not have part} are to/by {antimatter} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3113 wd:Q83197 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'does not have part', 'o': 'antimatter'}

 Q: What is the {airline} for {operator} of {Airbus A340}
 SPARQL:  select distinct ?obj where { wd:Q6481 wdt:P137 ?obj . ?obj wdt:P31 wd:Q46970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Airbus A340', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}}

 Q: What is the subsidiary company working for Leonard Maltin?
 SPARQL: SELECT ?answer WHERE { wd:Q731195 wdt:P108 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leonard Maltin', 'p': 'working for', 'o': '$y0'}}

 Q: What are the historic county of England which start with the letter yorkshire
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1138494 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yorkshire')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historic county of England'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yorkshire'}}

 Q: Which is the Familypedia person ID for Clement Attlee?
 SPARQL: select distinct ?answer where { wd:Q129006 wdt:P4193 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Clement Attlee', 'p': 'Familypedia person ID', 'o': '?x0'}

 Q: What is the {business} for {business division} of {Ford Motor Company}
 SPARQL:  select distinct ?obj where { wd:Q44294 wdt:P199 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ford Motor Company', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: what is the {replaced by} for {Cnut the Great} has {position held} as {monarch of Norway} ?
 SPARQL: SELECT ?value WHERE { wd:Q134128 p:P39 ?s . ?s ps:P39 wd:Q1294765 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cnut the Great', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of Norway'}}}

 Q: Did {Milky_Way} {child astronomical body} {Messier 47} and {NGC 4833} ?
 SPARQL: ASK WHERE { wd:Q321 wdt:P398 wd:Q13942 . wd:Q321 wdt:P398 wd:Q840301 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Milky Way', 'p': 'child astronomical body', 'o': '?x0', '?x0': 'Messier 47'}, {'h': 'IS', 'v': '?x1', 's': 'Milky Way', 'p': 'child astronomical body', 'o': '?x1', '?x1': 'NGC 4833'}]

 Q: Is the personal best of Walter Steiner equal to 179?
 SPARQL: ASK WHERE { wd:Q372873 wdt:P2415 ?obj filter(?obj = 179) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Walter Steiner', 'p': 'personal best', 'o': '?x0', '?x0': '179'}

 Q: How many employers does Johnson & Johnson provide?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P108 wd:Q333718 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'Johnson & Johnson'}

 Q: What is the operator and manufacturer of Boeing B-52 Stratofortress?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q174534 wdt:P137 ?ans_1 . wd:Q174534 wdt:P176 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Boeing B-52 Stratofortress', 'p': 'operator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Boeing B-52 Stratofortress', 'p': 'manufacturer', 'o': '?x1'}]

 Q: Is the age of majority in Ireland equal to 21.6?
 SPARQL: ASK WHERE { wd:Q27 wdt:P2997 ?obj filter(?obj = 21.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ireland', 'p': 'age of majority', 'o': '?x0', '?x0': '21.6'}

 Q: What sport does the chairwoman of the Athletic Club play?
 SPARQL: SELECT ?answer WHERE { wd:Q8687 wdt:P488 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sport', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Athletic Club', 'p': 'chairwoman', 'o': '$y0'}}

 Q: What is {animals species kept} of {venue} of {Dinny, the Brontosaur (Calgary Zoo)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44664230 wdt:P276 ?X . ?X wdt:P1990 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'species kept', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dinny, the Brontosaur (Calgary Zoo)', 'p': 'location', 'o': '$y0'}}

 Q: What award did Gherman Titov receive on August 9, 1961?
 SPARQL: SELECT ?obj WHERE { wd:Q152298 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gherman Titov', 'p': 'award', 'o': '?x0', 't': '1961'}

 Q: What is the exact date of John Cabot's death in 1498?
 SPARQL: SELECT ?value WHERE { wd:Q85642 p:P570 ?s . ?s ps:P570 ?x filter(contains(YEAR(?x),'1498')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Cabot', 'p': 'death', 'o': '$y0'}}

 Q: Who are the illustrator and author of The Hobbit?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q74287 wdt:P110 ?ans_1 . wd:Q74287 wdt:P50 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Hobbit', 'p': 'illustrator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Hobbit', 'p': 'author', 'o': '?x1'}]

 Q: What is {owners} of {original air channel} of {CCTV Spring Festival Gala 1998} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24836991 wdt:P449 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'CCTV Spring Festival Gala 1998', 'p': 'channel', 'o': '$y0'}}

 Q: What is the mortality rate with the highest frequency?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q58702 . ?ent wdt:P2844 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'incidence', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mortality rate'}}

 Q: What was Burt Reynolds nominated for in 1-1-1997?
 SPARQL: SELECT ?obj WHERE { wd:Q202148 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1997')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Burt Reynolds', 'p': 'nominated for', 'o': '?x0', 't': '1997'}

 Q: what is the {series ordinal} for {Megawati Sukarnoputri} has {position held} as {President of Indonesia} ?
 SPARQL: SELECT ?value WHERE { wd:Q76179 p:P39 ?s . ?s ps:P39 wd:Q11755916 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Megawati Sukarnoputri', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Indonesia'}}}

 Q: Did {Keith_Richards} {genre} {rock music} and {jazz} ?
 SPARQL: ASK WHERE { wd:Q189599 wdt:P136 wd:Q11399 . wd:Q189599 wdt:P136 wd:Q8341 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Keith Richards', 'p': 'genre', 'o': '?x0', '?x0': 'Rock'}, {'h': 'IS', 'v': '?x1', 's': 'Keith Richards', 'p': 'genre', 'o': '?x1', '?x1': 'jazz'}]

 Q: Tell me scalar physical quantity whose name has the word voltage in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q181175 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voltage')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scalar'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'voltage'}}

 Q: What is NNL ID for Pride and Prejudice?
 SPARQL: select distinct ?answer where { wd:Q170583 wdt:P3959 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pride and Prejudice', 'p': 'NNL', 'o': '?x0'}

 Q: Who is the discoverer or inventor of Hypertext Transfer Protocol?
 SPARQL: select distinct ?answer where { wd:Q8777 wdt:P61 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hypertext Transfer Protocol', 'p': 'discoverer or inventor', 'o': '?x0'}

 Q: How many {military branch} are to/by {anti-aircraft warfare} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P241 wd:Q843941 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'military branch', 'o': 'anti-aircraft warfare'}

 Q: How many {developer} are for {Need for Speed} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q55679 wdt:P178 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Need for Speed', 'p': 'developer', 'o': '?x0'}

 Q: David Grossman together with Jessica Cohen won which award?
 SPARQL: SELECT ?obj WHERE { wd:Q160263 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q30301433 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Grossman', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Jessica Cohen'}}}

 Q: What award did Dwight D. Eisenhower receive in 1945?
 SPARQL: SELECT ?obj WHERE { wd:Q9916 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1945')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dwight D. Eisenhower', 'p': 'award', 'o': '?x0', 't': '1945'}

 Q: What is {building date} of {in action} of {Horatio Nelson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83235 wdt:P607 ?X . ?X wdt:P580 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'building date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Horatio Nelson', 'p': 'in action', 'o': '$y0'}}

 Q: Who are the {characters} in {Exodus}, the has a {brother or sister} named {Nadabe}?
 SPARQL: SELECT ?answer WHERE { wd:Q9190 wdt:P674 ?answer . ?answer wdt:P3373 wd:Q1941782}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Exodus', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister', 'o': 'Nadabe'}}

 Q: Is the fatality rate of Fournier gangrene less than 15.36?
 SPARQL: ASK WHERE { wd:Q616449 wdt:P3457 ?obj filter(?obj < 15.36) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Fournier gangrene', 'p': 'fatality rate', 'o': '?x0', '?x0': '15.36'}

 Q: How many {regulates (molecular biology)} are to/by {gene expression} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P128 wd:Q26972 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'regulates (molecular biology)', 'o': 'gene expression'}

 Q: Tell me {house cat} whose name  starts with m
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q146 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'м')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'house cat'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'м'}}

 Q: What area of mathematics does Claude Shannon specialize in?
 SPARQL:  select distinct ?obj where { wd:Q92760 wdt:P101 ?obj . ?obj wdt:P31 wd:Q1936384 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Claude Shannon', 'p': 'area', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of mathematics'}}

 Q: What is the {website} for {website account on} of {YouTube}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P553 wd:Q866 . ?sbj wdt:P31 wd:Q35127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'website account on', 'o': 'YouTube', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'website'}}

 Q: What is  in the postsynaptic connection of rod cell ?
 SPARQL: select distinct ?answer where { wd:Q505544 wdt:P926 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'rod cell', 'p': 'postsynaptic connection', 'o': '?x0'}

 Q: Is the ceiling exposure limit of hydrazine equal to 0.04?
 SPARQL: ASK WHERE { wd:Q58447 wdt:P2405 ?obj filter(?obj = 0.04) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'hydrazine', 'p': 'ceiling exposure limit', 'o': '?x0', '?x0': '0.04'}

 Q: What is the motif of chancellor Armand Marrast, that has Bal du moulin de la Galette?
 SPARQL: SELECT ?answer WHERE { wd:Q683274 wdt:P180 ?answer . ?answer wdt:P6 wd:Q677730}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bal du moulin de la Galette', 'p': 'motif', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chancellor', 'o': 'Armand Marrast'}}

 Q: What is {has local government areas} of {subitem of} of {history of Vietnam} ?
 SPARQL: SELECT ?answer WHERE { wd:Q212913 wdt:P1269 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has local government areas', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Vietnam', 'p': 'subitem of', 'o': '$y0'}}

 Q: "Who was born in Bernard Herrmann, with local calling code 917?"
 SPARQL: SELECT ?answer WHERE { wd:Q296804 wdt:P19 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'917'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bernard Herrmann', 'p': 'born in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'local calling code', 'o': '917'}}

 Q: Did {Japanese_language} {country} {Taiwan} and {South Korea} ?
 SPARQL: ASK WHERE { wd:Q5287 wdt:P17 wd:Q865 . wd:Q5287 wdt:P17 wd:Q884 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Japanese', 'p': 'country', 'o': '?x0', '?x0': 'Taiwan'}, {'h': 'IS', 'v': '?x1', 's': 'Japanese', 'p': 'country', 'o': '?x1', '?x1': 'South Korea'}]

 Q: Is the number of players in region of the rugby league in Serbia equal to 1800.0?
 SPARQL: ASK WHERE { wd:Q3452884 wdt:P4909 ?obj filter(?obj = 1800.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'rugby league in Serbia', 'p': 'number of players in region', 'o': '?x0', '?x0': '1800.0'}

 Q: Is the galactic longitude of the Orion Nebula equal to 209.010797
 SPARQL: ASK WHERE { wd:Q13903 wdt:P6260 ?obj filter(?obj = 209.010797) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Orion Nebula', 'p': 'galactic longitude', 'o': '?x0', '?x0': '209.010797'}

 Q: How many {significant drug interaction} are to/by {erythromycin} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P769 wd:Q213511 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'significant drug interaction', 'o': 'erythromycin'}

 Q: Which is the business that is the publisher of The Economist?
 SPARQL:  select distinct ?obj where { wd:Q180089 wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Economist', 'p': 'publisher', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is <tributary> of <Tennessee River> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P974 wd:Q193737}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Tennessee River'}

 Q: What is the {imperative programming language} for {designed by} of {Dennis M. Ritchie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q45575 . ?sbj wdt:P31 wd:Q21562092 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Dennis M. Ritchie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'imperative programming language'}}

 Q: Which child of Louis VIII of France died 8/25/1270?
 SPARQL: SELECT ?obj WHERE { wd:Q165284 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?x filter(contains(YEAR(?x),'1270')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louis VIII of France', 'p': 'child', 'o': '?x0', 't': '1270'}

 Q: What is the queen of the land} of Bahia Toco Largo Lake ?
 SPARQL: SELECT ?answer WHERE { wd:Q7356830 wdt:P17 ?X . ?X wdt:P35 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'queen', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bahia Toco Largo Lake', 'p': 'land', 'o': '$y0'}}

 Q: Which are the people that participate in the religion of Islam?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P140 wd:Q432 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'Islam', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: Who is the {historic county of England} for {shares border with} of {Hampshire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q23204 . ?sbj wdt:P31 wd:Q1138494 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'shares border with', 'o': 'Hampshire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historic county of England'}}

 Q: What job did Dorothy Stratten have during 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q241081 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dorothy Stratten', 'p': 'job', 'o': '?x0', 't': '1979'}

 Q: What is {prescribed drug} of {murder method} of {Bronisław Malinowski} ?
 SPARQL: SELECT ?answer WHERE { wd:Q184992 wdt:P509 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prescribed drug', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bronislaw Malinowski', 'p': 'method of murder', 'o': '$y0'}}

 Q: What is the {version, edition, or translation} for {edition or translation of} of {Twenty Thousand Leagues Under the Sea}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P629 wd:Q183565 . ?sbj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition or translation of', 'o': 'Twenty Thousand Leagues Under the Sea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version, edition, or translation'}}

 Q: What is {time zone} of {place of origin} of {San Francisco Chronicle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q139103 wdt:P495 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'San Francisco Chronicle', 'p': 'place of origin', 'o': '$y0'}}

 Q: What is <proved by> of <Alexander Grothendieck> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1318 wd:Q77141}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'proved by', 'o': 'Alexander Grothendieck'}

 Q: What education is composed by Papillons ?
 SPARQL: SELECT ?answer WHERE { wd:Q28480156 wdt:P86 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'education', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Papillons', 'p': 'composed by', 'o': '$y0'}}

 Q: What is {portrayed by} {track listing} of {Invasion of Privacy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51027746 wdt:P658 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrayed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Invasion of Privacy', 'p': 'track list', 'o': '$y0'}}

 Q: Which is the state or insular area capital in the United States with the highest point of Crown Hill Cemetery and contains the word indianapolis in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21518270 . ?sbj wdt:P610 wd:Q5189371 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'indianapolis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state or insular area capital in the United States', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest point', 'o': 'Crown Hill Cemetery'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'indianapolis'}}

 Q: Does the elevation above sea level of the Jericho equals -220.0?
 SPARQL: ASK WHERE { wd:Q5687 wdt:P2044 ?obj filter(?obj = -220.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jericho', 'p': 'elevation above sea level', 'o': '?x0', '?x0': '-220.0'}

 Q: What is the quantity of honorific suffix for a Doctor of Philosophy?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1035 wd:Q752297 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'honorific suffix', 'o': 'Doctor of Philosophy'}

 Q: What what is brain region arterial supply superior cerebellar artery and also which starts with letter c
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1620186 . ?sbj wdt:P2286 wd:Q707592 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'brain region', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'arterial supply', 'o': 'superior cerebellar artery'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Whose professional harpsichordist's namesake was the Goldberg Variations named after?
 SPARQL: SELECT ?answer WHERE { wd:Q213728 wdt:P138 ?answer . ?answer wdt:P106 wd:Q5371902}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Goldberg Variations', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'harpsichordist'}}

 Q: Tell me the border that contains the word line in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q133346 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'line')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'border'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'line'}}

 Q: What is the {rolling stock class} with the {MAX(total produced)} whose {operator} is {New York City Subway}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q811704 . ?ent wdt:P1092 ?obj . ?ent wdt:P137 wd:Q7733 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total produced', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rolling stock class', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operated by', 'o': 'New York City Subway'}}}

 Q: Is the Yukon Quest 2016's size of team at finish  greater than 4.8?
 SPARQL: ASK WHERE { wd:Q28570721 wdt:P2105 ?obj filter(?obj > 4.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Yukon Quest 2016', 'p': 'size of team at finish', 'o': '?x0', '?x0': '4.8'}

 Q: What language has the regulatory body in the Office québécois de la langue française and is spoken by Manuel Castells?
 SPARQL: SELECT ?answer WHERE { wd:Q310161 wdt:P1412 ?answer . ?answer wdt:P1018 wd:Q2578454}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Manuel Castells', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'regulatory body', 'o': 'Office québécois de la langue française'}}

 Q: What is {pronunciation audio} of {Georges Pompidou} that is {language of work or name} is {French} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2185 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q150 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georges Pompidou', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'French'}}}

 Q: Which is the railway tunnel with terminus Erstfeld and contains the word base in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1311958 . ?sbj wdt:P559 wd:Q69642 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'base')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway tunnel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'terminus', 'o': 'Erstfeld'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'base'}}

 Q: What was the population of Thailand in 2006?
 SPARQL: SELECT ?obj WHERE { wd:Q869 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thailand', 'p': 'population', 'o': '?x0', 't': '2006'}

 Q: Of which enterprise is Mark Zuckerberg CEO?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q36215 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Mark Zuckerberg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: What is the {regional organization} for {legislative body} of {European Parliament}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P194 wd:Q8889 . ?sbj wdt:P31 wd:Q4120211 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'legislative body', 'o': 'European Parliament', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'regional organization'}}

 Q: What { sports team member } of { Bernard Thévenet } that is { end time } is { 1979 - 0 - 0 }?
 SPARQL: SELECT ?obj WHERE { wd:Q367064 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bernard Thévenet', 'p': 'team', 'o': '?x0', 't': '1979'}

 Q: George Washington Bridge has what UglyBridges.com ID
 SPARQL: select distinct ?answer where { wd:Q125821 wdt:P1380 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Washington Bridge', 'p': 'UglyBridges.com ID', 'o': '?x0'}

 Q: How many movies have Georges Méliès as the production designer?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2554 wd:Q152272 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production designer', 'o': 'Georges Méliès'}

 Q: What is the Fedora package for Ruby?
 SPARQL: select distinct ?answer where { wd:Q161053 wdt:P3463 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ruby', 'p': 'Fedora package', 'o': '?x0'}

 Q: What is {population} of {Móstoles} that is {determination method} is {register office} ?
 SPARQL: SELECT ?obj WHERE { wd:Q187826 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Móstoles', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: What is designed to carry the automobile?
 SPARQL: select distinct ?answer where { wd:Q1420 wdt:P3349 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'auto', 'p': 'designed to carry', 'o': '?x0'}

 Q: What is medical condition of Human Pregnancy ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1050 wd:Q11995}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical condition', 'o': 'Pregnancy'}

 Q: What is {educated at} of {George Wallace} that is {academic degree} is {Bachelor of Laws} ?
 SPARQL: SELECT ?obj WHERE { wd:Q313776 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q798137 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Wallace', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Bachelor of Laws'}}}

 Q: What is Carlos Menem's Argentine Senate member ID?
 SPARQL: select distinct ?answer where { wd:Q185107 wdt:P4453 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carlos Menem', 'p': 'Argentine Senate member ID', 'o': '?x0'}

 Q: Give me {fungal part} that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56883667 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fungal part'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the {contains administrative territorial entity} and the {located in the administrative territorial entity} of {Maharashtra} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1191 wdt:P150 ?ans_1 . wd:Q1191 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Maharashtra', 'p': 'contains administrative territorial entity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Maharashtra', 'p': 'located in the administrative territorial entity', 'o': '?x1'}]

 Q: What is {follows} and {followed by} of {{Charles the Fat} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What Gdańsk twinned administrative body began in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q1792 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gdańsk', 'p': 'twinned administrative body', 'o': '?x0', 't': '1993'}

 Q: Who is {work partner} of {scriptwriter} {Member Berries} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26898074 wdt:P58 ?X . ?X wdt:P1327 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work partner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Member Berries', 'p': 'scriptwriter', 'o': '$y0'}}

 Q: which type of anime television series starts with y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11086742 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anime television'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is the {G-type main-sequence star} for {child astronomical body} of {Neptune}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q332 . ?sbj wdt:P31 wd:Q5864 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Neptune', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: What is the military casualty classification of prisoner of war?
 SPARQL: select distinct ?answer where { ?answer wdt:P1347 wd:Q179637}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'military casualty classification', 'o': 'prisoner of war'}

 Q: Is it true that the moisture absorption of Grivory GM-4H equals to 1.68?
 SPARQL: ASK WHERE { wd:Q57051271 wdt:P5594 ?obj filter(?obj = 1.68) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Grivory GM-4H', 'p': 'moisture absorption', 'o': '?x0', '?x0': '1.68'}

 Q: Give me {performing arts genre} that {used by} {dancing} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q45971958 . ?sbj wdt:P1535 wd:Q43393537 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'performing arts genre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used by', 'o': 'dancing'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: what is the {point in time} for {B. F. Skinner} has {award received} as {E. L. Thorndike Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q213195 p:P166 ?s . ?s ps:P166 wd:Q5322016 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'B. F. Skinner', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'E. L. Thorndike Award'}, 't': '?x0'}

 Q: What is the {musical duo} for {contributor(s) to the creative work} of {Sasha Grey}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P767 wd:Q2709 . ?sbj wdt:P31 wd:Q9212979 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contributor', 'o': 'Sasha Grey', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical duo'}}

 Q: What is the death place of Lavrentiy Beria and is the twin town of Tehran?
 SPARQL: SELECT ?answer WHERE { wd:Q141829 wdt:P20 ?answer . ?answer wdt:P190 wd:Q3616}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lavrentiy Beria', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin town', 'o': 'Tehran'}}

 Q: What is the version and date of publication of the Diary of Anne Frank?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6911 p:P747 ?s . ?s ps:P747 ?obj . ?s pq:P577 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diary of Anne Frank', 'p': 'version', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'version', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diary of Anne Frank', 'p': 'version', 'o': '$y0'}}]

 Q: Which is the age of onset for gout?
 SPARQL: select distinct ?answer where { wd:Q133087 wdt:P2841 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'gout', 'p': 'age of onset', 'o': '?x0'}

 Q: What is the source of inspiration for the film character in Blackbeard?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P941 wd:Q213518 . ?sbj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'source of inspiration', 'o': 'Blackbeard', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character'}}

 Q: What awards were the Rolling Stones nominated for in 1989?
 SPARQL: SELECT ?obj WHERE { wd:Q11036 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rolling Stones', 'p': 'nominated for', 'o': '?x0', 't': '1989'}

 Q: What member of the American Academy of Arts and Sciences is coined of calcium?
 SPARQL: SELECT ?answer WHERE { wd:Q706 wdt:P61 ?answer . ?answer wdt:P463 wd:Q463303}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'calcium', 'p': 'coined', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'American Academy of Arts and Sciences'}}

 Q: What is the {Pacific hurricane} with the {MIN(lowest atmospheric pressure)} whose {country} is {United States of America}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3306242 . ?ent wdt:P2532 ?obj . ?ent wdt:P17 wd:Q30} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'lowest atmospheric pressure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Pacific hurricane', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'state', 'o': 'America'}}}

 Q: What is the {human sacrifice} for {significant event} of {Isaac}
 SPARQL:  select distinct ?obj where { wd:Q671872 wdt:P793 ?obj . ?obj wdt:P31 wd:Q119094 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Isaac', 'p': 'significant event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human sacrifice'}}

 Q: What is <Printemps des poètes poet ID> of <Wisława Szymborska> ?
 SPARQL: select distinct ?answer where { wd:Q42552 wdt:P5344 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wisława Szymborska', 'p': 'Printemps des poètes poet ID', 'o': '?x0'}

 Q: What is the population of Nashville at  2016?
 SPARQL: SELECT ?obj WHERE { wd:Q23197 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nashville', 'p': 'population', 'o': '?x0', 't': '2016'}

 Q: Which is the poster that depicts Barack Obama?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P180 wd:Q76 . ?sbj wdt:P31 wd:Q429785 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'Barack Obama', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'poster'}}

 Q: What is the {religious text} for {series} of {Book of Genesis}
 SPARQL:  select distinct ?obj where { wd:Q9184 wdt:P179 ?obj . ?obj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Book of Genesis', 'p': 'series', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: What is bipedalism's means of locomotion?
 SPARQL: select distinct ?answer where { ?answer wdt:P3512 wd:Q372949}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'means of locomotion', 'o': 'bipedalism'}

 Q: What is the {road} for {connects with} of {Zagreb}
 SPARQL:  select distinct ?obj where { wd:Q1435 wdt:P2789 ?obj . ?obj wdt:P31 wd:Q34442 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zagreb', 'p': 'connects with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road'}}

 Q: what is the {start time} for {Akita} has {twinned administrative body} as {St. Cloud} ?
 SPARQL: SELECT ?value WHERE { wd:Q17139 p:P190 ?s . ?s ps:P190 wd:Q736834 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Akita', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'St. Cloud'}}}

 Q: What is the exact match for the handkerchief?
 SPARQL: select distinct ?answer where { wd:Q192411 wdt:P2888 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'handkerchief', 'p': 'exact match', 'o': '?x0'}

 Q: Which year did Edmonton had a population of 932546?
 SPARQL: SELECT ?value WHERE { wd:Q2096 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'932546')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Edmonton', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '932546'}, 't': '?x0'}

 Q: What are the {has states} of {sovereign state} of {Ministry of Foreign Affairs of the People's Republic of China}?
 SPARQL: SELECT ?answer WHERE { wd:Q1155502 wdt:P17 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has states', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Ministry of Foreign Affairs of the People's Republic of China", 'p': 'sovereign state', 'o': '$y0'}}

 Q: Which ester has the highest flash point?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q101487 . ?ent wdt:P2128 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'flash point', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ester'}}

 Q: Who is speaker of Nicolas Sarkozy?
 SPARQL: select distinct ?answer where { ?answer wdt:P823 wd:Q329}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'speaker', 'o': 'Nicolas Sarkozy'}

 Q: When did Madrid have a population of 3.21327e+06?
 SPARQL: SELECT ?value WHERE { wd:Q2807 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'3.21327e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Madrid', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '3.21327e+06'}, 't': '?x0'}

 Q: What was the method of murder of Oscar Wilde, who had a medical specialty in neurology?
 SPARQL: SELECT ?answer WHERE { wd:Q30875 wdt:P509 ?answer . ?answer wdt:P1995 wd:Q83042}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oscar Wilde', 'p': 'method of murder', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'medical specialty', 'o': 'neurology'}}

 Q: Where is Japan Railways Group, the place of incorporation that has the prime minister Yuriko Koike?
 SPARQL: SELECT ?answer WHERE { wd:Q864495 wdt:P740 ?answer . ?answer wdt:P6 wd:Q261703}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Japan Railways Group', 'p': 'place of incorporation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prime minister', 'o': 'Yuriko Koike'}}

 Q: Which is the CODEN for the Journal of the American Chemical Society?
 SPARQL: select distinct ?answer where { wd:Q898902 wdt:P1159 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Journal of the American Chemical Society', 'p': 'CODEN', 'o': '?x0'}

 Q: Which is the WSJ topic ID for Al Sharpton?
 SPARQL: select distinct ?answer where { wd:Q380433 wdt:P3183 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Al Sharpton', 'p': 'WSJ topic ID', 'o': '?x0'}

 Q: Are the points awarded int he 2018 AFL Women's season equal to 4?
 SPARQL: ASK WHERE { wd:Q48523108 wdt:P3260 ?obj filter(?obj = 4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "2018 AFL Women's season", 'p': 'points awarded', 'o': '?x0', '?x0': '4'}

 Q: What is {location born} of {Herbert Jasper}, that has {adjacent to} is {Idaho} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1348488 wdt:P19 ?answer . ?answer wdt:P47 wd:Q1221}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Herbert Jasper', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next to', 'o': 'Idaho'}}

 Q: Did Olivia de Havilland receive the award Volpi Cup for Best Actress and the 2008 Grammy Awards?
 SPARQL: ASK WHERE { wd:Q95068 wdt:P166 wd:Q2089918 . wd:Q95068 wdt:P166 wd:Q1518357 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Olivia de Havilland', 'p': 'award', 'o': '?x0', '?x0': 'Volpi Cup for Best Actress'}, {'h': 'IS', 'v': '?x1', 's': 'Olivia de Havilland', 'p': 'award', 'o': '?x1', '?x1': '2008 Grammy Awards'}]

 Q: What is the {mausoleum} for {commemorates} of {Sun Yat-sen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P547 wd:Q8573 . ?sbj wdt:P31 wd:Q162875 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commemorates', 'o': 'Sun Yat-sen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mausoleum'}}

 Q: Which is the official language for Republic of Adygea?
 SPARQL: select distinct ?answer where { wd:Q3734 wdt:P37 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Republic of Adygea', 'p': 'official language', 'o': '?x0'}

 Q: Who is the son of the parent of Myat Phaya?
 SPARQL: SELECT ?answer WHERE { wd:Q6946802 wdt:P25 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Myat Phaya', 'p': 'parent', 'o': '?x0'}

 Q: What is the {anthropomorphic character} for {present in work} of {Looney Tunes}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q622435 . ?sbj wdt:P31 wd:Q27921916 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Looney Tunes', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anthropomorphic character'}}

 Q: Who is {role model} of {subject in} {biography of Friedrich Nietzsche} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2401955 wdt:P1269 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role model', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'biography of Friedrich Nietzsche', 'p': 'subject in', 'o': '$y0'}}

 Q: Is the maximum viable temperature of the Pseudomonas putida KT2440 equal to 55?
 SPARQL: ASK WHERE { wd:Q21079489 wdt:P3252 ?obj filter(?obj = 55) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Pseudomonas putida KT2440', 'p': 'maximum viable temperature', 'o': '?x0', '?x0': '55'}

 Q: Which is the TMDb person ID for Nick Offerman?
 SPARQL: select distinct ?answer where { wd:Q1985488 wdt:P4985 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nick Offerman', 'p': 'TMDb person ID', 'o': '?x0'}

 Q: what is the {applies to part} for {Le Déjeuner sur l'herbe} has {depicts} as {woman} ?
 SPARQL: SELECT ?value WHERE { wd:Q152509 p:P180 ?s . ?s ps:P180 wd:Q467 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Le Déjeuner sur l'herbe", 'p': 'depicts', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'depicts', 'o': 'woman'}}}

 Q: What is {zipcode} of {alumnus of} of {Hobey Baker} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1348425 wdt:P69 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zipcode', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hobey Baker', 'p': 'alumnus of', 'o': '$y0'}}

 Q: What is {co-founder} of {series} of {1925 Monte Carlo Rally} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20689352 wdt:P179 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'co-founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1925 Monte Carlo Rally', 'p': 'series', 'o': '$y0'}}

 Q: what is the {start time} for {Mike Nichols} has {spouse} as {Diane Sawyer} ?
 SPARQL: SELECT ?value WHERE { wd:Q51537 p:P26 ?s . ?s ps:P26 wd:Q236402 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mike Nichols', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Diane Sawyer'}}}

 Q: According to Wikipedia, what is the reserve currency with the lowest price?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q756202 . ?ent wdt:P2284 ?obj . ?ent wdt:P5008 wd:Q5460604} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'price', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'reserve currency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on focus list of Wikimedia project', 'o': 'Wikipedia:Vital articles'}}}

 Q: which procedural programming language contains the word visual in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28922885 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'visual')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'procedural programming language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'visual'}}

 Q: Is Keira Knightley's given name Keira?
 SPARQL: ASK WHERE { wd:Q42581 wdt:P735 wd:Q6383805 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Keira Knightley', 'p': 'given name', 'o': '?x0', '?x0': 'Keira'}]

 Q: What is the aircraft in fleet of the user of T-54/55?
 SPARQL: SELECT ?answer WHERE { wd:Q328272 wdt:P1535 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fleet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'T-54/55', 'p': 'user', 'o': '$y0'}}

 Q: What is <manufacturer> of <Toyota> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P176 wd:Q201117}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Toyota'}

 Q: Tell me biblical episode whose name has the word woman in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22704077 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'woman')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'woman'}}

 Q: What is {champion} of {award} of {Joseph Lister, 1st Baron Lister} ?
 SPARQL: SELECT ?answer WHERE { wd:Q155768 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Lister, 1st Baron Lister', 'p': 'award', 'o': '$y0'}}

 Q: What is the  musical composition for composer of  Pyotr Ilyich Tchaikovsky
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q7315 . ?sbj wdt:P31 wd:Q207628 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composer', 'o': 'Pyotr Ilyich Tchaikovsky', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical composition'}}

 Q: What position is held by the head of state of Ottoman Empire?
 SPARQL:  select distinct ?obj where { wd:Q12560 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ottoman Empire', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is the position of political office held by a member of Augustus' family?
 SPARQL: SELECT ?answer WHERE { wd:Q1405 wdt:P1038 ?X . ?X wdt:P39 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'political office held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Augustus', 'p': 'family', 'o': '$y0'}}

 Q: What is the {physical quantity} for {measured by} of {joule}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1880 wd:Q25269 . ?sbj wdt:P31 wd:Q107715 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'joule', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical quantity'}}

 Q: Which is the distance from Earth for Messier 81?
 SPARQL: select distinct ?answer where { wd:Q14024 wdt:P2583 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Messier 81', 'p': 'distance from Earth', 'o': '?x0'}

 Q: what is the end time for Titian has a work location as Augsburg ?
 SPARQL: SELECT ?value WHERE { wd:Q47551 p:P937 ?s . ?s ps:P937 wd:Q2749 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Titian', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'Augsburg'}}}

 Q: What is {place of birth} of {Hans Holbein} that is {located in the administrative territorial entity} is {Duchy of Bavaria} ?
 SPARQL: SELECT ?obj WHERE { wd:Q48319 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q47261 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Holbe', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Duchy of Bavaria'}}}

 Q: Give me {biblical character} that {present in work} {Isaiah} and which contains the word {leviathan} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12405827 . ?sbj wdt:P1441 wd:Q131458 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'leviathan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical character', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Isaiah'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'leviathan'}}

 Q: When Jimmy Cliff was awarded Grammy Award for Best Reggae Album?
 SPARQL: SELECT ?value WHERE { wd:Q109063 p:P166 ?s . ?s ps:P166 wd:Q1542180 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jimmy Cliff', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grammy Award for Best Reggae Album'}, 't': '?x0'}

 Q: Tell me the religious concept that facet of Hinduism and which that starts with the letter  y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23847174 . ?sbj wdt:P1269 wd:Q9089 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious concept', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Hinduism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is {death count} of {outcome} of {thunderstorm} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2857578 wdt:P1542 ?X . ?X wdt:P1120 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'deaths', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'thunderstorm', 'p': 'outcome', 'o': '$y0'}}

 Q: Whose father of Prince Aly Khan ?
 SPARQL: select distinct ?answer where { wd:Q450229 wdt:P22 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Prince Aly Khan', 'p': 'father', 'o': '?x0'}

 Q: When did award received of Pat Summitt and together with
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q460394 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pat Summitt', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pat Summitt', 'p': 'award received', 'o': '$y0'}}]

 Q: What is {followed by} and {follows} of {{Jeremiah} has {series} as {Nevi'im}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q131590 p:P179 ?s . ?s ps:P179 wd:Q216383 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'successor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "Nevi'im"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'predecessor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "Nevi'im"}}}]

 Q: Are there 36.0 prisoners in Azkaban?
 SPARQL: ASK WHERE { wd:Q715509 wdt:P5630 ?obj filter(?obj = 36.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Azkaban', 'p': 'prisoner count', 'o': '?x0', '?x0': '36.0'}

 Q: What is route map of Milan Metro?
 SPARQL: select distinct ?answer where { wd:Q735559 wdt:P15 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Milan Metro', 'p': 'route map', 'o': '?x0'}

 Q: What is the {national association football league} with the {MAX(frequency of event)} whose {season starts} is {July}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15991303 . ?ent wdt:P2257 ?obj . ?ent wdt:P4794 wd:Q121 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'frequency of event', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'association football league', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'season starts', 'o': 'July'}}}

 Q: Was the work of Victor Hugo influenced by Plato and Miguel de Cervantes?
 SPARQL: ASK WHERE { wd:Q535 wdt:P737 wd:Q859 . wd:Q535 wdt:P737 wd:Q5682 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Victor Hugo', 'p': 'influenced by', 'o': '?x0', '?x0': 'Plato'}, {'h': 'IS', 'v': '?x1', 's': 'Victor Hugo', 'p': 'influenced by', 'o': '?x1', '?x1': 'Miguel de Cervantes'}]

 Q: What is {diplomatic relation} of {Vietnam} that is {statement is subject of} is {Japan–Vietnam relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q881 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q1051802 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vietnam', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Japan–Vietnam relations'}}}

 Q: Does Alexei Kudashov have more than 0.0 total assists in his career?
 SPARQL: ASK WHERE { wd:Q688108 wdt:P6545 ?obj filter(?obj > 0.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Alexei Kudashov', 'p': 'total assists in career', 'o': '?x0', '?x0': '0.0'}

 Q: Which is the final sport of Australian rules football?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P641 wd:Q50776 . ?sbj wdt:P31 wd:Q1366722 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'Australian rules football', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'final'}}

 Q: Is the employment by economic sector of Amsterdam less than 152?
 SPARQL: ASK WHERE { wd:Q9899 wdt:P2297 ?obj filter(?obj < 152.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Amsterdam', 'p': 'employment by economic sector', 'o': '?x0', '?x0': '152.0'}

 Q: what is the {academic major} for {Norman Foster} has {educated at} as {Yale School of Architecture} ?
 SPARQL: SELECT ?value WHERE { wd:Q104898 p:P69 ?s . ?s ps:P69 wd:Q1514480 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Norman Foster', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Yale School of Architecture'}}}

 Q: What is the {political scandal} for {defendant} of {Hillary Clinton}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1591 wd:Q6294 . ?sbj wdt:P31 wd:Q934744 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'defendant', 'o': 'Hillary Clinton', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political scandal'}}

 Q: what is the {series ordinal} for {Hiram Johnson} has {position held} as {Governor of California} ?
 SPARQL: SELECT ?value WHERE { wd:Q143644 p:P39 ?s . ?s ps:P39 wd:Q887010 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hiram Johnson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Governor of California'}}}

 Q: Which is the short-track speed skater ISU ID for Bonnie Blair?
 SPARQL: select distinct ?answer where { wd:Q231513 wdt:P3693 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bonnie Blair', 'p': 'short-track speed skater ISU ID', 'o': '?x0'}

 Q: What is the {biopharmaceutical} with the {MAX(defined daily dose)} whose {has part} is {carbon}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q679692 . ?ent wdt:P4250 ?obj . ?ent wdt:P527 wd:Q623 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'defined daily dose', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biopharmaceutical', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'carbon'}}}

 Q: Who is the {dominion of the British Empire} for {history of topic} of {history of Australia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2184 wd:Q174825 . ?sbj wdt:P31 wd:Q223832 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'history of topic', 'o': 'history of Australia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dominion of the British Empire'}}

 Q: Tell me syllable whose name has the word sen in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8188 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sen')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'syllable'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'sen'}}

 Q: Did Jesse James have Frank James and Archie Samuel as siblings?
 SPARQL: ASK WHERE { wd:Q213626 wdt:P3373 wd:Q711243 . wd:Q213626 wdt:P3373 wd:Q4786782 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jesse James', 'p': 'sibling', 'o': '?x0', '?x0': 'Frank James'}, {'h': 'IS', 'v': '?x1', 's': 'Jesse James', 'p': 'sibling', 'o': '?x1', '?x1': 'Archie Samuel'}]

 Q: Is it true that the width of the Jochenstein is equal to 0.015?
 SPARQL: ASK WHERE { wd:Q23192 wdt:P2049 ?obj filter(?obj = 0.015) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jochenstein', 'p': 'width', 'o': '?x0', '?x0': '0.015'}

 Q: What is <incidence> of <hepatitis C> ?
 SPARQL: select distinct ?answer where { wd:Q154869 wdt:P2844 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hepatitis C', 'p': 'incidence', 'o': '?x0'}

 Q: When did Reese Witherspoon receive the British Academy of Film and Television Arts award?
 SPARQL: SELECT ?value WHERE { wd:Q44063 p:P166 ?s . ?s ps:P166 wd:Q159661 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Reese Witherspoon', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'British Academy of Film and Television Arts'}, 't': '?x0'}

 Q: Who is the writer of Cloud Atlas that has a last name of Mitchell?
 SPARQL: SELECT ?answer WHERE { wd:Q40205 wdt:P50 ?answer . ?answer wdt:P734 wd:Q179205}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cloud Atlas', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'last name', 'o': 'Mitchell'}}

 Q: How many {category combines topics} are to/by {Georgia} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P971 wd:Q230 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'category combines topics', 'o': 'Georgia'}

 Q: Which is the Google Maps CID for Empire State Building?
 SPARQL: select distinct ?answer where { wd:Q9188 wdt:P3749 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire State Building', 'p': 'Google Maps CID', 'o': '?x0'}

 Q: What is {deathplace} of {Nelson Algren}, that has {point on a map} is {-75.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q547914 wdt:P20 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-75.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nelson Algren', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'point on a map', 'o': '-75.0'}}

 Q: What is GNIS Antarctica ID for Antarctica ?
 SPARQL: select distinct ?answer where { wd:Q51 wdt:P804 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antarctica', 'p': 'GNIS Antarctica ID', 'o': '?x0'}

 Q: What is the sister city of the birthplace of Nikita Telenkov?
 SPARQL: SELECT ?answer WHERE { wd:Q7035115 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nikita Telenkov', 'p': 'birthplace', 'o': '$y0'}}

 Q: What is the {human} for {student of} of {Bindusara}
 SPARQL:  select distinct ?obj where { wd:Q315526 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bindusara', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the son of Charles Lucien Bonaparte's wife?
 SPARQL: SELECT ?answer WHERE { wd:Q157521 wdt:P26 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Lucien Bonaparte', 'p': 'wife', 'o': '$y0'}}

 Q: Tell me peace treaty whose name has the word treaty in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q625298 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'treaty')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'peace treaty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'treaty'}}

 Q: What is <Gedbas genealogy person ID> of <Albert Einstein> ?
 SPARQL: select distinct ?answer where { wd:Q937 wdt:P4108 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albert Einstein', 'p': 'Gedbas genealogy person ID', 'o': '?x0'}

 Q: What is <office held by head of government> of <Quintana Roo> ?
 SPARQL: select distinct ?answer where { wd:Q80245 wdt:P1313 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Quintana Roo', 'p': 'office held by head of government', 'o': '?x0'}

 Q: What is <French Olympic Committee athlete ID> of <Nikola Karabatić> ?
 SPARQL: select distinct ?answer where { wd:Q157809 wdt:P4050 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nikola Karabatić', 'p': 'French Olympic Committee athlete ID', 'o': '?x0'}

 Q: What is the {television program} for {inspired by} of {Eurovision Song Contest}
 SPARQL:  select distinct ?obj where { wd:Q276 wdt:P941 ?obj . ?obj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eurovision', 'p': 'inspired by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television program'}}

 Q: /who is nominated for of Benedict XV that of point in time is 1915-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q4448 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1915')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Benedict XV', 'p': 'nominated for', 'o': '?x0', 't': '1915'}

 Q: What is the {human} with the {MAX(points for)} whose {instance of} is {human}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1358 ?obj . ?ent wdt:P31 wd:Q5 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'points for', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Who is the husband of the choreographer of Slaughter on Tenth Avenue?
 SPARQL: SELECT ?answer WHERE { wd:Q7539051 wdt:P1809 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'husband', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Slaughter on Tenth Avenue', 'p': 'choreographer', 'o': '$y0'}}

 Q: what is the {replaced by} for {Baibars} has {position held} as {Sultan of Egypt} ?
 SPARQL: SELECT ?value WHERE { wd:Q192960 p:P39 ?s . ?s ps:P39 wd:Q4115925 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Baibars', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Sultan of Egypt'}}}

 Q: What is {diplomatic relation} of {land} of {1948 Czechoslovak coup d'état} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1137957 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "1948 Czechoslovak coup d'état", 'p': 'land', 'o': '$y0'}}

 Q: Give me {office building} that {located on street} {34th Street} and which contains the word {building} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1021645 . ?sbj wdt:P669 wd:Q110049 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'building')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'office building', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located on street', 'o': '34th Street'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'building'}}

 Q: Which is the Lega Pallavolo Serie A player ID of Giba?
 SPARQL: select distinct ?answer where { wd:Q455738 wdt:P4303 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Giba', 'p': 'Lega Pallavolo Serie A player ID', 'o': '?x0'}

 Q: What was the determining method for Magellan and the Chilean Antarctic Region's population?
 SPARQL: SELECT ?value WHERE { wd:Q2189 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'166533')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Magellan and the Chilean Antarctic Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '166533'}}}

 Q: What is the material used in most of the Young's modulus?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q214609 . ?ent wdt:P5480 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': "Young's modulus", 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'material'}}

 Q: Alexander Pushkin is a member of which literary society?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P463 wd:Q7200 . ?sbj wdt:P31 wd:Q497893 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Alexander Pushkin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary society'}}

 Q: What is the Kemler code of ethanol?
 SPARQL: select distinct ?answer where { wd:Q153 wdt:P700 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethanol', 'p': 'Kemler code', 'o': '?x0'}

 Q: What is the {party chair} for {position held} of {Xi Jinping}
 SPARQL:  select distinct ?obj where { wd:Q15031 wdt:P39 ?obj . ?obj wdt:P31 wd:Q2746259 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Xi Jinping', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'party chair'}}

 Q: When did child of Louis IX of France and date of birth?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: How many {author} are for {New Testament} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q18813 wdt:P50 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'New Testament', 'p': 'author', 'o': '?x0'}

 Q: What is <Revised Hepburn romanization> of <Waseda University> ?
 SPARQL: select distinct ?answer where { wd:Q274486 wdt:P2125 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Waseda University', 'p': 'Revised Hepburn romanization', 'o': '?x0'}

 Q: Who was the chairperson of Free Software Foundation in 1985-10-4?
 SPARQL: SELECT ?obj WHERE { wd:Q48413 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1985')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Free Software Foundation', 'p': 'chairperson', 'o': '?x0', 't': '1985'}

 Q: What ethnic group is Karl Weierstraß?
 SPARQL: select distinct ?answer where { wd:Q57103 wdt:P172 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Karl Weierstraß', 'p': 'ethnic group', 'o': '?x0'}

 Q: what is the {start time} for {Tuscany} has {contains administrative territorial entity} as {Metropolitan City of Florence} ?
 SPARQL: SELECT ?value WHERE { wd:Q1273 p:P150 ?s . ?s ps:P150 wd:Q18288148 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tuscany', 'p': 'contains administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'contains administrative territorial entity', 'o': 'Metropolitan City of Florence'}}}

 Q: Who is the actor in the series The Two Mrs. Sheffields?
 SPARQL: SELECT ?answer WHERE { wd:Q51228874 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Two Mrs. Sheffields', 'p': 'series', 'o': '$y0'}}

 Q: Which territory was claimed by Taiwan?
 SPARQL: select distinct ?answer where { wd:Q865 wdt:P1336 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Taiwan', 'p': 'claimed by', 'o': '?x0'}

 Q: Which is the medical specialty of the murder method of Paul Kruger?
 SPARQL: SELECT ?answer WHERE { wd:Q244407 wdt:P509 ?X . ?X wdt:P1995 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'medical specialty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Kruger', 'p': 'murder method', 'o': '$y0'}}

 Q: Which is Drouot artist ID for René Magritte?
 SPARQL: select distinct ?answer where { wd:Q7836 wdt:P5309 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'René Magritte', 'p': 'Drouot artist ID', 'o': '?x0'}

 Q: When did Cincinnati start the twinned administrative body in the year 1989?
 SPARQL: SELECT ?obj WHERE { wd:Q43196 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cincinnati', 'p': 'twinned administrative body', 'o': '?x0', 't': '1989'}

 Q: Is the width of Bullenkuhle less than 0.018?
 SPARQL: ASK WHERE { wd:Q1004288 wdt:P2049 ?obj filter(?obj < 0.018) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Bullenkuhle', 'p': 'width', 'o': '?x0', '?x0': '0.018'}

 Q: what is the {start time} for {Iraq} has {member of} as {International Development Association} ?
 SPARQL: SELECT ?value WHERE { wd:Q796 p:P463 ?s . ?s ps:P463 wd:Q827525 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iraq', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'International Development Association'}}}

 Q: What is the {taxon} for {parent taxon} of {Piper nigrum}
 SPARQL:  select distinct ?obj where { wd:Q43084 wdt:P171 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Piper nigrum', 'p': 'parent taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is {temperature} of {phase of matter} and {{water} has {phase point} as {triple point}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q106410 . ?s pq:P2076 ?value1 . ?s pq:P515 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase of matter', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}]

 Q: What is the {nickname} for {officeholder} of {Salman of Saudi Arabia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q367825 . ?sbj wdt:P31 wd:Q49614 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Salman of Saudi Arabia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nickname'}}

 Q: What is <BFI Films, TV and people ID> of <Jaws> ?
 SPARQL: select distinct ?answer where { wd:Q189505 wdt:P4438 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jaws', 'p': 'BFI Films, TV and people ID', 'o': '?x0'}

 Q: Which {film starring} {succeeds to} {In the Mood for Love} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1056853 wdt:P155 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In the Mood for Love', 'p': 'succeeds to', 'o': '$y0'}}

 Q: What is {position held} of {George VI} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q280856 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George VI', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George VI', 'p': 'position held', 'o': '$y0'}}]

 Q: Is the global warming potential of the norflurane equal to 1430?
 SPARQL: ASK WHERE { wd:Q423029 wdt:P2565 ?obj filter(?obj = 1430) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'norflurane', 'p': 'global warming potential', 'o': '?x0', '?x0': '1430'}

 Q: What are the positional notation which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1747853 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'positional notation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the {specialty} for {health specialty} of {pedophilia}
 SPARQL:  select distinct ?obj where { wd:Q8388 wdt:P1995 ?obj . ?obj wdt:P31 wd:Q1047113 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pedophilia', 'p': 'health specialty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialty'}}

 Q: Tell me binary operation whose name has the word union in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q164307 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'union')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'binary operation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'union'}}

 Q: what is the {start time} for {John Stuart, 3rd Earl of Bute} has {position held} as {Secretary of State for the Northern Department} ?
 SPARQL: SELECT ?value WHERE { wd:Q294651 p:P39 ?s . ?s ps:P39 wd:Q3954358 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Stuart, 3rd Earl of Bute', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary of State for the Northern Department'}}}

 Q: Which is the MYmovies name ID of Dino De Laurentiis?
 SPARQL: select distinct ?answer where { wd:Q296796 wdt:P4785 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dino De Laurentiis', 'p': 'MYmovies name ID', 'o': '?x0'}

 Q: How many brands are there for Procter & Gamble?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q212405 wdt:P1716 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Procter & Gamble', 'p': 'brand', 'o': '?x0'}

 Q: What is the type of taxon parent of Felidae?
 SPARQL: SELECT ?answer WHERE { wd:Q25265 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of taxon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Felidae', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What is {kind of music} of {previous is} of {The Hobbit: The Desolation of Smaug} ?
 SPARQL: SELECT ?answer WHERE { wd:Q719915 wdt:P155 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kind of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Hobbit: The Desolation of Smaug', 'p': 'previous is', 'o': '$y0'}}

 Q: What is United States Reports ID for Brown v. Board of Education ?
 SPARQL: select distinct ?answer where { wd:Q875738 wdt:P3147 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brown v. Board of Education', 'p': 'United States Reports ID', 'o': '?x0'}

 Q: Which is the tungsten alloy that has an effect on tungsten carbide exposure and starts with the letter c?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37789249 . ?sbj wdt:P1542 wd:Q21175402 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tungsten alloy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'effect', 'o': 'tungsten carbide exposure'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is the {citrate anion} for {conjugate acid} of {citric acid}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q159683 . ?sbj wdt:P31 wd:Q55502846 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'citric acid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'citrate anion'}}

 Q: What is the {airline} for {business division} of {Aeroflot}
 SPARQL:  select distinct ?obj where { wd:Q58707 wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aeroflot', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}}

 Q: Name the Velká pardubická sponsored by Česká pojišťovna with the longest race time ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1701273 . ?ent wdt:P2781 ?obj . ?ent wdt:P859 wd:Q11283119 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'race time', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Velká pardubická', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sponsor', 'o': 'Česká pojišťovna'}}}

 Q: What is named after Alexander Hamilton?
 SPARQL: select distinct ?answer where { ?answer wdt:P138 wd:Q178903}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Alexander Hamilton'}

 Q: What is {electoral district} and {elected in} of {{James Scullin} has {position held} as {Member of the Australian House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q23362 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P768 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Scullin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Scullin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}]

 Q: How many producers are by Hal B. Wallis?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P162 wd:Q472520 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'producer', 'o': 'Hal B. Wallis'}

 Q: How many {medical condition treated} are for {acetic acid} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q47512 wdt:P2175 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'acetic acid', 'p': 'medical condition treated', 'o': '?x0'}

 Q: What is {located in time zone} of {Antarctica} that is {applies to part} is {Antarctica/Macquarie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P518 wd:Q4771017 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antarctica', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'Antarctica/Macquarie'}}}

 Q: What is the KMRB film rating of The Dark Knight?
 SPARQL: select distinct ?answer where { wd:Q163872 wdt:P3818 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Dark Knight', 'p': 'KMRB film rating', 'o': '?x0'}

 Q: What is the tributary of the lake next to Honshu?
 SPARQL: SELECT ?answer WHERE { wd:Q13989 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Honshu', 'p': 'lake', 'o': '$y0'}}

 Q: give me the name of determination method for Belo Horizonte has population as 2.50256e+06?
 SPARQL: SELECT ?value WHERE { wd:Q42800 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'2.50256e+06')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belo Horizonte', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '2.50256e+06'}}}

 Q: what is the {for work} for {Robert Altman} has {nominated for} as {Academy Award for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q55163 p:P1411 ?s . ?s ps:P1411 wd:Q103360 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Altman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Director'}}}

 Q: Who is the mother and child of Amitabh Bachchan?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q9570 wdt:P25 ?ans_1 . wd:Q9570 wdt:P40 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Amitabh Bachchan', 'p': 'mother', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Amitabh Bachchan', 'p': 'child', 'o': '?x1'}]

 Q: What is branch of developer of Julia set ?
 SPARQL: SELECT ?answer WHERE { wd:Q848427 wdt:P61 ?X . ?X wdt:P241 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'branch', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julia set', 'p': 'developer', 'o': '$y0'}}

 Q: What is {date of birth} of {Lysippos} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192222 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lysippos', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'c'}}}

 Q: tell  me province of China that capital Chengdu  starts with letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1615742 . ?sbj wdt:P36 wd:Q30002 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'province of China', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Chengdu'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Tell me the road bridge that contains the word 'bridge' in its name and that is designed by Joseph Strauss
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q537127 . ?sbj wdt:P287 wd:Q261174 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bridge')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road bridge', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Joseph Strauss'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'bridge'}}

 Q: What is {place built} of {Olympia}, that has {geographical coordinates} is {2.35183} ?
 SPARQL: SELECT ?answer WHERE { wd:Q737062 wdt:P1071 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'2.35183'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Olympia', 'p': 'place built', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinates', 'o': '2.35183'}}

 Q: Give me {international association football national teams competition} that {season starts} {November} and which contains the word {cup} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542827 . ?sbj wdt:P4794 wd:Q125 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cup')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international association football national teams competition', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'season starts', 'o': 'November'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cup'}}

 Q: What is the game artist for Naoto Ohshima?
 SPARQL: select distinct ?answer where { ?answer wdt:P3080 wd:Q658384}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'game artist', 'o': 'Naoto Ohshima'}

 Q: what is the {series ordinal} for {Appetite for Destruction} has {tracklist} as {Paradise City} ?
 SPARQL: SELECT ?value WHERE { wd:Q270690 p:P658 ?s . ?s ps:P658 wd:Q843032 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Appetite for Destruction', 'p': 'tracklist', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'tracklist', 'o': 'Paradise City'}}}

 Q: DOES THE PRESSURE OF THE MARK 91 LESS THAN 2206.4
 SPARQL: ASK WHERE { wd:Q39997381 wdt:P2077 ?obj filter(?obj < 2206.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Mark 91', 'p': 'pressure', 'o': '?x0', '?x0': '2206.4'}

 Q: What was Burt Lancaster nominated for in 1953?
 SPARQL: SELECT ?obj WHERE { wd:Q160528 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Burt Lancaster', 'p': 'nominated for', 'o': '?x0', 't': '1953'}

 Q: What is  in the GLAM Identifier of Kunsthaus Zürich ?
 SPARQL: select distinct ?answer where { wd:Q685038 wdt:P3066 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kunsthaus Zürich', 'p': 'GLAM Identifier', 'o': '?x0'}

 Q: What award did Dilip Kumar receive in 1994?
 SPARQL: SELECT ?obj WHERE { wd:Q377789 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dilip Kumar', 'p': 'award', 'o': '?x0', 't': '1994'}

 Q: What number of households did a census, as a determination method, find in Tifariti?
 SPARQL: SELECT ?obj WHERE { wd:Q2360337 p:P1538 ?s . ?s ps:P1538 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of households', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tifariti', 'p': 'number of households', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: The Annals of Mathematics is in what Dialnet journal?
 SPARQL: select distinct ?answer where { wd:Q564426 wdt:P1609 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Annals of Mathematics', 'p': 'Dialnet journal', 'o': '?x0'}

 Q: How many {highway system} are to/by {Interstate Highway System} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P16 wd:Q94247 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'highway system', 'o': 'Interstate Highway System'}

 Q: Which is the aircraft fleet used by a helicopter?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2283 wd:Q34486 . ?sbj wdt:P31 wd:Q17372500 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'used', 'o': 'helicopter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft fleet'}}

 Q: How many commemorates were given to Giuseppe Garibaldi?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P547 wd:Q539 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'commemorates', 'o': 'Giuseppe Garibaldi'}

 Q: How many {licensed to broadcast to} are to/by {Dayton} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1408 wd:Q34739 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'licensed to broadcast to', 'o': 'Dayton'}

 Q: Wich means{theme music }in {Boléro} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P942 wd:Q327331}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'theme music', 'o': 'Boléro'}

 Q: What are the major works of Marin Alsop's supervisor?
 SPARQL: SELECT ?answer WHERE { wd:Q242931 wdt:P1066 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marin Alsop', 'p': 'supervisor', 'o': '$y0'}}

 Q: what is the {determination method} for {Juneau} has {population} as {31275.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q29445 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'31275.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Juneau', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '31275.0'}}}

 Q: What are the people which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2472587 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which is regulated by FIDE?
 SPARQL: select distinct ?answer where { ?answer wdt:P3719 wd:Q102178}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'regulated by', 'o': 'FIDE'}

 Q: How many {parent astronomical body} are to/by {Large Magellanic Cloud} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P397 wd:Q49957 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Large Magellanic Cloud'}

 Q: What is the {Wikimedia category} for {category for films shot at this location} of {Yokohama}
 SPARQL:  select distinct ?obj where { wd:Q38283 wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yokohama', 'p': 'category for films shot at this location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: what is the total fertility rate of the county seat of Moroni?
 SPARQL: SELECT ?answer WHERE { wd:Q3901 wdt:P1376 ?X . ?X wdt:P4841 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moroni', 'p': 'county seat of', 'o': '$y0'}}

 Q: What is the {human} for {mother} of {Antonio Vivaldi}
 SPARQL:  select distinct ?obj where { wd:Q1340 wdt:P25 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antonio Vivaldi', 'p': 'mother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the total liability of the Humana equal to 14711000000 ?
 SPARQL: ASK WHERE { wd:Q910866 wdt:P2138 ?obj filter(?obj = 14711000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Humana', 'p': 'total liabilities', 'o': '?x0', '?x0': '14711000000'}

 Q: When did member of sports team of Christine Sinclair and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q262802 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christine Sinclair', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christine Sinclair', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: How many interactions does an antiproton have ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q107575 wdt:P517 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'antiproton', 'p': 'interaction', 'o': '?x0'}

 Q: Which is the beam bridge that was created by Frank Gehry?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q180374 . ?sbj wdt:P31 wd:Q158626 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'Frank Gehry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'beam bridge'}}

 Q: What is {unemployment rate} of {economy of Germany} that is {point in time} is {2014-3-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8046 p:P1198 ?s . ?s ps:P1198 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'economy of Germany', 'p': 'unemployment rate', 'o': '?x0', 't': '2014'}

 Q: What is Julius Wellhausen's Marburger Professorenkatalog ID?
 SPARQL: select distinct ?answer where { wd:Q76897 wdt:P3187 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Julius Wellhausen', 'p': 'Marburger Professorenkatalog ID', 'o': '?x0'}

 Q: What is next to Almeria and has 4288.0 inhabitants?
 SPARQL: SELECT ?answer WHERE { wd:Q10400 wdt:P47 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'4288.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Almeria', 'p': 'next to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '4288.0'}}

 Q: Which is Monte Carlo Particle Number for antiproton?
 SPARQL: select distinct ?answer where { wd:Q107575 wdt:P1360 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'antiproton', 'p': 'Monte Carlo Particle Number', 'o': '?x0'}

 Q: How many {statement describes} are to/by {conic section} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2384 wd:Q124255 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'statement describes', 'o': 'conic section'}

 Q: Which is the SwimSwam ID of Michael Phelps?
 SPARQL: select distinct ?answer where { wd:Q39562 wdt:P4315 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Michael Phelps', 'p': 'SwimSwam ID', 'o': '?x0'}

 Q: What is the capital of England?
 SPARQL:  select distinct ?obj where { wd:Q179876 wdt:P36 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'England', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: How many Majuros are in the port of registry?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P532 wd:Q12919 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'port of registry', 'o': 'Majuro'}

 Q: Which is the Database of Classical Scholars ID for George Bancroft?
 SPARQL: select distinct ?answer where { wd:Q741482 wdt:P1935 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Bancroft', 'p': 'Database of Classical Scholars ID', 'o': '?x0'}

 Q: Which is the magazine that has Jann Wenner as an editor and starts with the letter r?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41298 . ?sbj wdt:P98 wd:Q519143 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'editor', 'o': 'Jann Wenner'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: Is the median income of the United Kingdom less than 25293.6?
 SPARQL: ASK WHERE { wd:Q145 wdt:P3529 ?obj filter(?obj < 25293.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'United Kingdom', 'p': 'median income', 'o': '?x0', '?x0': '25293.6'}

 Q: Who is the person that is a political party member of Indian National Congress?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P102 wd:Q10225 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'party', 'o': 'Indian National Congress', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {subnetwork} of {alumni of} of {Aleksandr Solzhenitsyn} ?
 SPARQL: SELECT ?answer WHERE { wd:Q34474 wdt:P69 ?X . ?X wdt:P3761 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subnetwork', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'alumni of', 'o': '$y0'}}

 Q: Is the case fatality rate of Fournier gangrene fewer than 9.0?
 SPARQL: ASK WHERE { wd:Q616449 wdt:P3457 ?obj filter(?obj < 9.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Fournier gangrene', 'p': 'case fatality rate', 'o': '?x0', '?x0': '9.0'}

 Q: Is the prevalance of tuberculosis equal to 0.00078?
 SPARQL: ASK WHERE { wd:Q12204 wdt:P1193 ?obj filter(?obj = 0.00078) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'tuberculosis', 'p': 'prevalence', 'o': '?x0', '?x0': '0.00078'}

 Q: What is the {international sport governing body} for {authority} of {association football}
 SPARQL:  select distinct ?obj where { wd:Q2736 wdt:P797 ?obj . ?obj wdt:P31 wd:Q11422536 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'association football', 'p': 'governing body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international sport governing body'}}

 Q: what is the {start time} for {Joseph Lyons} has {position held} as {Member of the Australian House of Representatives} ?
 SPARQL: SELECT ?value WHERE { wd:Q370966 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Lyons', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}

 Q: What is the {parent organization} and the {owner of} of {Society_of_Jesus} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q36380 wdt:P749 ?ans_1 . wd:Q36380 wdt:P1830 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Society of Jesus', 'p': 'parent organization', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Society of Jesus', 'p': 'owner of', 'o': '?x1'}]

 Q: What is the {enterprise} for {product or material produced} of {Commodore 64}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q99775 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'Commodore 64', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'company'}}

 Q: Tell me newspaper whose name has the word şalom in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11032 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'şalom')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newspaper'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'şalom'}}

 Q: Who are the sons of Alphonse Mucha, who is the daughter of Marie Chytilová?
 SPARQL: SELECT ?answer WHERE { wd:Q146691 wdt:P40 ?answer . ?answer wdt:P25 wd:Q15111563}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alphonse Mucha', 'p': 'son', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'daughter of', 'o': 'Marie Chytilová'}}

 Q: what is the {point in time} for {J. K. Rowling} has {award received} as {Andre Norton Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q34660 p:P166 ?s . ?s ps:P166 wd:Q285568 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'J. K. Rowling', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Andre Norton Award'}, 't': '?x0'}

 Q: What astronaut mission did Gordon Cooper use the Gemini spacecraft for?
 SPARQL:  select distinct ?obj where { wd:Q312833 wdt:P450 ?obj . ?obj wdt:P31 wd:Q831109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gordon Cooper', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Gemini spacecraft'}}

 Q: What is {start time} and {end time} of {{Ruhollah Khomeini} has {spouse} as {Khadijeh Saqafi}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q38823 p:P26 ?s . ?s ps:P26 wd:Q686560 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ruhollah Khomeini', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Khadijeh Saqafi'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ruhollah Khomeini', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Khadijeh Saqafi'}}}]

 Q: What is DPLA subject ID for horse ?
 SPARQL: select distinct ?answer where { wd:Q726 wdt:P4272 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'horse', 'p': 'DPLA subject ID', 'o': '?x0'}

 Q: What skyscraper did architect Zaha Hadid design?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q47780 . ?sbj wdt:P31 wd:Q11303 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Zaha Hadid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'skyscraper'}}

 Q: Is the clock speed of GP32 equal to 106.4?
 SPARQL: ASK WHERE { wd:Q426119 wdt:P2149 ?obj filter(?obj = 106.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'GP32', 'p': 'clock speed', 'o': '?x0', '?x0': '106.4'}

 Q: What is {nomination received} of {D. T. Suzuki}, that has {prizewinner} is {Lester B. Pearson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44847 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q128604}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'D. T. Suzuki', 'p': 'nomination received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Lester B. Pearson'}}

 Q: Who is the spouse of Katharine Cornell in 1921-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q272086 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1921')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Katharine Cornell', 'p': 'spouse', 'o': '?x0', 't': '1921'}

 Q: Which is the part of the orchestra?
 SPARQL: select distinct ?answer where { ?answer wdt:P361 wd:Q42998}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'part of', 'o': 'orchestra'}

 Q: What is <board member> of <Stewart Brand> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3320 wd:Q971994}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'board member', 'o': 'Stewart Brand'}

 Q: What is the {business} for {product or material produced} of {CBS}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q43380 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'CBS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What award did Michael Gough achieve in 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q299302 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michael Gough', 'p': 'award', 'o': '?x0', 't': '1979'}

 Q: What is {birth place} of {Elizabeth Wurtzel}, that has {inhabitants} is {152056.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q442854 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'152056.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Elizabeth Wurtzel', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '152056.0'}}

 Q: Which is the QUDT unit ID of henry?
 SPARQL: select distinct ?answer where { wd:Q163354 wdt:P2968 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'henry', 'p': 'QUDT unit ID', 'o': '?x0'}

 Q: who aircraft hijacking for immediate cause of War on Terror?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1536 wd:Q185729 . ?sbj wdt:P31 wd:Q898712 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'immediate cause of', 'o': 'War on Terror', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft hijacking'}}

 Q: Is the total produced by Tupolev ANT-1 equal to 1.2?
 SPARQL: ASK WHERE { wd:Q433083 wdt:P1092 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tupolev ANT-1', 'p': 'total produced', 'o': '?x0', '?x0': '1.2'}

 Q: How many {statistical leader} are to/by {Wilt Chamberlain} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3279 wd:Q182455 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'statistical leader', 'o': 'Wilt Chamberlain'}

 Q: How many {connecting line} are to/by {Acela Express} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P81 wd:Q481759 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'connecting line', 'o': 'Acela'}

 Q: What is the {type of quantum particle} with the {MAX(g-factor)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P1097 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'g-factor', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: what is the {end time} for {John F. Kennedy} has {position held} as {United States representative} ?
 SPARQL: SELECT ?value WHERE { wd:Q9696 p:P39 ?s . ?s ps:P39 wd:Q13218630 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John F. Kennedy', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States representative'}}}

 Q: What is the position held by Mariano Rajoy who was elected in Spanish general election, 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q10819 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 wd:Q22812047 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mariano Rajoy', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'elected in', 'o': 'Spanish general election, 2016'}}}

 Q: Is the partition coefficient water/octanol of acetic acid equal to -0.17?
 SPARQL: ASK WHERE { wd:Q47512 wdt:P2993 ?obj filter(?obj = -0.17) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'acetic acid', 'p': 'partition coefficient water/octanol', 'o': '?x0', '?x0': '-0.17'}

 Q: What's buried at Jean Pierre Boyer's on the street?
 SPARQL: SELECT ?answer WHERE { wd:Q449421 wdt:P119 ?X . ?X wdt:P669 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'street', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean Pierre Boyer', 'p': 'buried at', 'o': '$y0'}}

 Q: What is the script of the language that Hans Kelsen speaks?
 SPARQL: SELECT ?answer WHERE { wd:Q84165 wdt:P1412 ?X . ?X wdt:P282 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'script', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Kelsen', 'p': 'language', 'o': '$y0'}}

 Q: what is the {type of kinship} for {Sophia of Hanover} has {relative} as {Elizabeth Charlotte, Princess Palatine} ?
 SPARQL: SELECT ?value WHERE { wd:Q57224 p:P1038 ?s . ?s ps:P1038 wd:Q57221 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sophia of Hanover', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Elizabeth Charlotte, Princess Palatine'}}}

 Q: Whar are the months that compose winter ?
 SPARQL:  select distinct ?obj where { wd:Q1311 wdt:P2922 ?obj . ?obj wdt:P31 wd:Q47018901 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'winter', 'p': 'month', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'month'}}

 Q: What is {minimal incubation period in humans} of {target disease} of {MMR vaccine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q908104 wdt:P1924 ?X . ?X wdt:P3488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'minimal incubation period in humans', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MMR vaccine', 'p': 'target disease', 'o': '$y0'}}

 Q: What natural language has been influenced by English?
 SPARQL:  select distinct ?obj where { wd:Q1860 wdt:P737 ?obj . ?obj wdt:P31 wd:Q33742 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'English', 'p': 'influenced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural language'}}

 Q: Which is the Chamber of Deputies of Italy storia ID of Giuseppe Garibaldi?
 SPARQL: select distinct ?answer where { wd:Q539 wdt:P3935 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Giuseppe Garibaldi', 'p': 'Chamber of Deputies of Italy storia ID', 'o': '?x0'}

 Q: Which is the BoxRec ID for Mickey Rourke?
 SPARQL: select distinct ?answer where { wd:Q178552 wdt:P1967 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mickey Rourke', 'p': 'BoxRec ID', 'o': '?x0'}

 Q: What is the {human} for {employer} of {Georgetown University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P108 wd:Q333886 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'Georgetown University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {summit} of {located on astronomical body} of {Reykholt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24065207 wdt:P376 ?X . ?X wdt:P610 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'summit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reykholt', 'p': 'located on astronomical body', 'o': '$y0'}}

 Q: Which is the standards organization that is affiliated with United Nations Economic and Social Council that contains the word international in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1328899 . ?sbj wdt:P1416 wd:Q170075 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'international')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'standards organization', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'affiliated with', 'o': 'United Nations Economic and Social Council'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'international'}}

 Q: What is the taxon common name of hoatzin?
 SPARQL: select distinct ?answer where { wd:Q188660 wdt:P1843 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hoatzin', 'p': 'taxon common name', 'o': '?x0'}

 Q: What is {played by} of {makes use of} of {AirAsia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q406643 wdt:P2283 ?X . ?X wdt:P1535 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'AirAsia', 'p': 'used', 'o': '$y0'}}

 Q: Which is the enclosure of the dome?
 SPARQL: select distinct ?answer where { ?answer wdt:P3158 wd:Q12493}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'enclosure', 'o': 'dome'}

 Q: Which is the church building for religion of the United Methodist Church?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P140 wd:Q329646 . ?sbj wdt:P31 wd:Q16970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'United Methodist Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'church building'}}

 Q: what is the {end time} for {Septimius Severus} has {position held} as {Roman emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q1442 p:P39 ?s . ?s ps:P39 wd:Q842606 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Septimius Severus', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Roman emperor'}}}

 Q: When was the population of Nevada recorded as 488738.0?
 SPARQL: SELECT ?value WHERE { wd:Q1227 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'488738.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nevada', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '488738.0'}, 't': '?x0'}

 Q: What are the image compression which start with the letter g
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q412438 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'image compression'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: what is the {point in time} for {Pat Summitt} has {award received} as {USBWA Most Courageous Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q460394 p:P166 ?s . ?s ps:P166 wd:Q23055174 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pat Summitt', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'USBWA Most Courageous Award'}, 't': '?x0'}

 Q: What is {nominated for} of {Phil Jackson} that is {point in time} is {2001-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q316246 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Phil Jackson', 'p': 'nominated for', 'o': '?x0', 't': '2001'}

 Q: What is the {animated film} for {voice actor} of {Ellen DeGeneres}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q483325 . ?sbj wdt:P31 wd:Q202866 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated film'}}

 Q: what is the {point in time} for {William Henry Bragg} has {award received} as {Rumford Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q133747 p:P166 ?s . ?s ps:P166 wd:Q285167 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'William Henry Bragg', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Rumford Medal'}, 't': '?x0'}

 Q: Which is the measured physical quantity of siemens?
 SPARQL: select distinct ?answer where { wd:Q169893 wdt:P111 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'siemens', 'p': 'measured physical quantity', 'o': '?x0'}

 Q: What is {educated at} of {W. H. Auden} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q178698 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'W. H. Auden', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'W. H. Auden', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {proprietary software} for {language of work or name} of {Hebrew}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q9288 . ?sbj wdt:P31 wd:Q218616 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language', 'o': 'Hebrew', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'proprietary software'}}

 Q: Tell me hole whose name has the word depletion in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20204151 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'depletion')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hole'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'depletion'}}

 Q: What is located in the administrative territorial entity and capital of Lagos?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8673 wdt:P131 ?ans_1 . wd:Q8673 wdt:P1376 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Lagos', 'p': 'located in the administrative territorial entity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Lagos', 'p': 'capital of', 'o': '?x1'}]

 Q: What is the {battle} for {participant} of {Soviet Union}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q15180 . ?sbj wdt:P31 wd:Q178561 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'battle'}}

 Q: What are the philosophical concept which start with the letter übermensch
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33104279 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'übermensch')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'philosophical concept'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'übermensch'}}

 Q: Richard Dawkins is influenced by which generalization?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P737 wd:Q44461 . ?sbj wdt:P31 wd:Q170084 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'influenced by', 'o': 'Richard Dawkins', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'generalization'}}

 Q: What is {child} of {Charlemagne} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}]

 Q: Tell me flammable gas whose name has the word vinyl in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10913792 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vinyl')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable gas'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vinyl'}}

 Q: How many manufacturers make the Xbox 360?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q48263 wdt:P176 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Xbox 360', 'p': 'manufacturer', 'o': '?x0'}

 Q: Why did the lyricist split from the Fatal Illusion?
 SPARQL: SELECT ?answer WHERE { wd:Q21186583 wdt:P155 ?X . ?X wdt:P676 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'lyricist', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fatal Illusion', 'p': 'split from', 'o': '$y0'}}

 Q: What is the {video game developer} for {business division} of {Nintendo}
 SPARQL:  select distinct ?obj where { wd:Q8093 wdt:P199 ?obj . ?obj wdt:P31 wd:Q210167 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nintendo', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game developer'}}

 Q: Which are the Bantu languages which start with letter z?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33146 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Bantu'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is the {human} for {discoverer or inventor} of {quicksort}
 SPARQL:  select distinct ?obj where { wd:Q486598 wdt:P61 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'quicksort', 'p': 'discoverer or inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {established by} of {political office held} of {Thomas de Lisle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7795481 wdt:P39 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas de Lisle', 'p': 'political office held', 'o': '$y0'}}

 Q: What is the {human} for {student of} of {Francisco Goya}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1066 wd:Q5432 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Francisco Goya', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Did the twinned administrative body consist of Vancouver, Edinburgh, and Coevorden?
 SPARQL: ASK WHERE { wd:Q24639 wdt:P190 wd:Q23436 . wd:Q24639 wdt:P190 wd:Q60453 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Vancouver', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Edinburgh'}, {'h': 'IS', 'v': '?x1', 's': 'Vancouver', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Coevorden'}]

 Q: Is the{compression ratio} on {Fiat A.22} {equals} {4.4}
 SPARQL: ASK WHERE { wd:Q3744416 wdt:P1247 ?obj filter(?obj = 4.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Fiat A.22', 'p': 'compression ratio', 'o': '?x0', '?x0': '4.4'}

 Q: who Wikimedia duplicated page for said to be the same as of Nintendo Entertainment System?
 SPARQL:  select distinct ?obj where { wd:Q172742 wdt:P460 ?obj . ?obj wdt:P31 wd:Q17362920 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nintendo Entertainment System', 'p': 'said to be the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia duplicated page'}}

 Q: Is 1 the lower limit of the set of positive integers?
 SPARQL: ASK WHERE { wd:Q47339953 wdt:P5447 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'set of positive integers', 'p': 'lower limit', 'o': '?x0', '?x0': '1'}

 Q: What is {final year} of {product of} of {DC-8} ?
 SPARQL: SELECT ?answer WHERE { wd:Q223315 wdt:P176 ?X . ?X wdt:P576 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'final year', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'DC-8', 'p': 'product of', 'o': '$y0'}}

 Q: Who is {born on} {daddy} of {Shah Jahan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83672 wdt:P22 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shah Jahan', 'p': 'dad', 'o': '$y0'}}

 Q: What is {academic degree} of {Emmy Noether} and {location}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7099 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmy Noether', 'p': 'academic degree', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmy Noether', 'p': 'academic degree', 'o': '$y0'}}]

 Q: What is the {profession} for {patron saint} of {Thomas Aquinas}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q9438 . ?sbj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Thomas Aquinas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: What is the {globular cluster} with the {MAX(metallicity)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11276 . ?ent wdt:P2227 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'metallicity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'globular cluster'}}

 Q: Which is the Golden Globe Award for the award received by Mary Tyler Moore?
 SPARQL:  select distinct ?obj where { wd:Q41342 wdt:P166 ?obj . ?obj wdt:P31 wd:Q1011547 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mary Tyler Moore', 'p': 'award received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Golden Globe Award'}}

 Q: which is the {statement is subject of} for {Stanley Kubrick} that has {nominated for} as {Academy Award for Best Writing, Original Screenplay} ?
 SPARQL: SELECT ?value WHERE { wd:Q2001 p:P1411 ?s . ?s ps:P1411 wd:Q41417 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanley Kubrick', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Writing, Original Screenplay'}}}

 Q: What is {nominated for} of {The Dark Knight} that is {nominee} is {Wally Pfister} ?
 SPARQL: SELECT ?obj WHERE { wd:Q163872 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q460144 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Dark Knight', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Wally Pfister'}}}

 Q: What is the {animated film} for {voice actor} of {Sarah Silverman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q229013 . ?sbj wdt:P31 wd:Q202866 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Sarah Silverman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated film'}}

 Q: What is the newspaper format of Oriental Daily News, that has the size of 279?
 SPARQL: SELECT ?answer WHERE { wd:Q1507352 wdt:P3912 ?answer . ?answer wdt:P2049 ?x FILTER(contains(?x,'279'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oriental Daily News', 'p': 'newspaper format', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'size', 'o': '279'}}

 Q: What was Senegal’s inflation rate in 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q1041 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Senegal', 'p': 'inflation rate', 'o': '?x0', 't': '2016'}

 Q: What are the part of speech which start with the letter verb
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q82042 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'verb')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'part of speech'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'verb'}}

 Q: Tell me ceremonial county of England whose name has the word yorkshire in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q180673 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yorkshire')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ceremonial county of England'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yorkshire'}}

 Q: Which is the voltage for Jersey?
 SPARQL: select distinct ?answer where { wd:Q785 wdt:P2436 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jersey', 'p': 'voltage', 'o': '?x0'}

 Q: Give me {feature film} that {director of photography} {László Kovács} and which that starts with {'g'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24869 . ?sbj wdt:P344 wd:Q498696 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'feature film', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'director of photography', 'o': 'Laszlo Kovacs'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: Who gave the {is son of} of {sister or brother} of {Stephen Báthory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q54030 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stephen Báthory', 'p': 'sister', 'o': '$y0'}}

 Q: Is the wingspan of the Airbus A300 measure 44.84?
 SPARQL: ASK WHERE { wd:Q6437 wdt:P2050 ?obj filter(?obj = 44.84) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Airbus A300', 'p': 'wingspan', 'o': '?x0', '?x0': '44.84'}

 Q: Where is the location of work by Yayoi Kusama that also has counties in Shinjuku-ku?
 SPARQL: SELECT ?answer WHERE { wd:Q231121 wdt:P937 ?answer . ?answer wdt:P150 wd:Q179645}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yayoi Kusama', 'p': 'location of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': 'Shinjuku-ku'}}

 Q: What is <Inventario Sculture - Polo Museale Fiorentino> of <David> ?
 SPARQL: select distinct ?answer where { wd:Q179900 wdt:P3467 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David', 'p': 'Inventario Sculture - Polo Museale Fiorentino', 'o': '?x0'}

 Q: What is {portrait of} of {artistic genre} of {The Deer Park} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7729563 wdt:P136 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrait of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Deer Park', 'p': 'genre', 'o': '$y0'}}

 Q: Give me {historical period} that {official religion} {Christianity} and which that starts with {'e'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11514315 . ?sbj wdt:P3075 wd:Q5043 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical period', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official religion', 'o': 'Christianity'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: What is the {distributed revision control system} for {programming language} of {Structured Query Language}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P277 wd:Q47607 . ?sbj wdt:P31 wd:Q1186723 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'programming language', 'o': 'SQL', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'distributed revision control system'}}

 Q: What is the {country} for {head of government} of {Mauricio Macri}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q561837 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Mauricio Macri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {position held} of {Winnie Madikizela-Mandela} that is {parliamentary term} is {26th South African Parliament} ?
 SPARQL: SELECT ?obj WHERE { wd:Q239062 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2937 wd:Q18109299 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Winnie Madikizela-Mandela', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'parliamentary term', 'o': '26th South African Parliament'}}}

 Q: What is <Bashkir encyclopedia (Bashkir version) ID> of <Chinghiz Aitmatov> ?
 SPARQL: select distinct ?answer where { wd:Q484292 wdt:P4210 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chinghiz Aitmatov', 'p': 'Bashkir encyclopedia (Bashkir version) ID', 'o': '?x0'}

 Q: Give me {cable-stayed bridge} that starts with {'y'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q158555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cable-stayed bridge'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Iroquois is depicted by what statue?
 SPARQL:  select distinct ?obj where { wd:Q68518 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q179700 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iroquois', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'statue'}}

 Q: Who is the video game publisher of Hex whose shareholder is Hasbro, Inc.?
 SPARQL: SELECT ?answer WHERE { wd:Q844874 wdt:P123 ?answer . ?answer wdt:P127 wd:Q501476}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hex', 'p': 'publisher', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shareholder', 'o': 'Hasbro'}}

 Q: Which is the provisional designation of 90377 Sedna?
 SPARQL: select distinct ?answer where { wd:Q15610 wdt:P490 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '90377 Sedna', 'p': 'provisional designation', 'o': '?x0'}

 Q: what is the {series ordinal} for {Alvar Aalto} has {given name} as {Alvar} ?
 SPARQL: SELECT ?value WHERE { wd:Q82840 p:P735 ?s . ?s ps:P735 wd:Q15831157 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alvar Aalto', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'name', 'o': 'Alvar'}}}

 Q: What is {takes place in} of {reason of failure} of {Yan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1055713 wdt:P770 ?X . ?X wdt:P706 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yan', 'p': 'reason of failure', 'o': '$y0'}}

 Q: Who is married to Lyudmila Gurchenko, whose party is Communist Party of the Soviet Union?
 SPARQL: SELECT ?answer WHERE { wd:Q68537 wdt:P26 ?answer . ?answer wdt:P102 wd:Q79854}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lyudmila Gurchenko', 'p': 'married to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'party', 'o': 'Communist Party of the Soviet Union'}}

 Q: what is the {point in time} for {Rita Moreno} has {award received} as {California Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q230151 p:P166 ?s . ?s ps:P166 wd:Q5020532 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Rita Moreno', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'California Hall of Fame'}, 't': '?x0'}

 Q: What is {forename} of {Aphex Twin}, that has {is the same as} is {Rikardo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q223161 wdt:P735 ?answer . ?answer wdt:P460 wd:Q39164767}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aphex Twin', 'p': 'forename', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Rikardo'}}

 Q: What is the {literary character} for {characters} of {The Da Vinci Code}
 SPARQL:  select distinct ?obj where { wd:Q81689 wdt:P674 ?obj . ?obj wdt:P31 wd:Q3658341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Da Vinci Code', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary character'}}

 Q: What is {occupation} of {Michael Schumacher} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9671 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Schumacher', 'p': 'job', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'job', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Schumacher', 'p': 'job', 'o': '$y0'}}]

 Q: what is the {academic degree} for {Mario Vargas Llosa} has {educated at} as {Leoncio Prado Military Academy} ?
 SPARQL: SELECT ?value WHERE { wd:Q39803 p:P69 ?s . ?s ps:P69 wd:Q839058 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mario Vargas Llosa', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Leoncio Prado Military Academy'}}}

 Q: what is the {criterion used} for {Proboscidea} has {different from} as {Proboscidea} ?
 SPARQL: SELECT ?value WHERE { wd:Q26308 p:P1889 ?s . ?s ps:P1889 wd:Q137309 . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Proboscidea', 'p': 'different from', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'different from', 'o': 'Proboscidea'}}}

 Q: What is {diplomatic relation} of {People's Republic of China} that is {statement is subject of} is {China–Eritrea relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q148 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q5100211 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'China', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'China–Eritrea relations'}}}

 Q: What is the {street} for {located in the administrative territorial entity} of {Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q220 . ?sbj wdt:P31 wd:Q79007 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'street'}}

 Q: What was composed by Giselle that had his father as Louis Adam?
 SPARQL: SELECT ?answer WHERE { wd:Q827436 wdt:P86 ?answer . ?answer wdt:P22 wd:Q1349517}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Giselle', 'p': 'composed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'father', 'o': 'Louis Adam'}}

 Q: What is the Corago opera ID for Tosca?
 SPARQL: select distinct ?answer where { wd:Q192941 wdt:P5251 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tosca', 'p': 'Corago opera ID', 'o': '?x0'}

 Q: Give me {decay mode} that {has effect} {gamma ray} and which contains the word {beta} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3317792 . ?sbj wdt:P1542 wd:Q11523 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'beta')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'decay mode', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has effect', 'o': 'gamma ray'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'beta'}}

 Q: What are the belligerents of competes in Liu Xiang?
 SPARQL: SELECT ?answer WHERE { wd:Q211088 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'belligerents', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Liu Xiang', 'p': 'competes in', 'o': '$y0'}}

 Q: Which is adapted by Andrei Tarkovsky?
 SPARQL: select distinct ?answer where { ?answer wdt:P5202 wd:Q853}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'adapted by', 'o': 'Andrei Tarkovsky'}

 Q: What is the {human} for {affiliation} of {Harvard University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q13371 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliated with', 'o': 'Harvard University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is original film format for Ultra-high-definition television ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3803 wd:Q841163}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'original film format', 'o': 'Ultra-high-definition television'}

 Q: What is the {Summer Olympic Games} for {participant of} of {Lance Armstrong}
 SPARQL:  select distinct ?obj where { wd:Q2172 wdt:P1344 ?obj . ?obj wdt:P31 wd:Q159821 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lance Armstrong', 'p': 'participated in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Summer Olympic Games'}}

 Q: Which is the flood that the rain has effect in?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1542 wd:Q7925 . ?sbj wdt:P31 wd:Q8068 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has effect', 'o': 'rain', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flood'}}

 Q: When did David Beckham receive the PFA Team of the Year award?
 SPARQL: SELECT ?value WHERE { wd:Q10520 p:P166 ?s . ?s ps:P166 wd:Q2044044 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'David Beckham', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'PFA Team of the Year'}, 't': '?x0'}

 Q: In 1969-0-0 what is Greenland's population?
 SPARQL: SELECT ?obj WHERE { wd:Q223 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Greenland', 'p': 'population', 'o': '?x0', 't': '1969'}

 Q: Which is {in action} {passed by} {Residence Act} ?
 SPARQL: SELECT ?answer WHERE { wd:Q918175 wdt:P467 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in action', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Residence Act', 'p': 'passed by', 'o': '$y0'}}

 Q: What is {educated at} of {Nancy Pelosi} that is {academic major} is {political science} ?
 SPARQL: SELECT ?obj WHERE { wd:Q170581 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q36442 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nancy Pelosi', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'major', 'o': 'political science'}}}

 Q: Who was the twinned administrative body of Makhachkala until February 2nd 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q5168 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Makhachkala', 'p': 'twinned administrative body', 'o': '?x0', 't': '2016'}

 Q: Name a MediaWiki website located in Amsterdam that contains the word "wikipedia" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15633582 . ?sbj wdt:P276 wd:Q727 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wikipedia')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'MediaWiki website', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Amsterdam'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wikipedia'}}

 Q: What is {run time} of {cause of} of {human fertilization} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2666904 wdt:P1542 ?X . ?X wdt:P2047 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'length', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'human fertilization', 'p': 'cause of', 'o': '$y0'}}

 Q: What is the catalog for "A Love Supreme?"
 SPARQL: select distinct ?answer where { wd:Q5106 wdt:P972 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'A Love Supreme', 'p': 'catalog', 'o': '?x0'}

 Q: What are the newspaper which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11032 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ş')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newspaper'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ş'}}

 Q: What software version of Scala was published on June 23, 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q460584 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Scala', 'p': 'version', 'o': '?x0', 't': '2015'}

 Q: What is the {replaced by} and the {culture} of {Old_English} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q42365 wdt:P1366 ?ans_1 . wd:Q42365 wdt:P2596 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Old English', 'p': 'replaced by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Old English', 'p': 'culture', 'o': '?x1'}]

 Q: what is the {start time} for {Michael Schumacher} has {country for sport} as {Luxembourg} ?
 SPARQL: SELECT ?value WHERE { wd:Q9671 p:P1532 ?s . ?s ps:P1532 wd:Q32 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Schumacher', 'p': 'country for sport', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country for sport', 'o': 'Luxembourg'}}}

 Q: What is {birth location} of {Jerry O'Connell}, that has {mayor} is {John Lindsay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q378672 wdt:P19 ?answer . ?answer wdt:P6 wd:Q666931}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Jerry O'Connell", 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mayor', 'o': 'John Lindsay'}}

 Q: Which is the SELIBR ID for Max Linder?
 SPARQL: select distinct ?answer where { wd:Q152764 wdt:P906 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Max Linder', 'p': 'SELIBR ID', 'o': '?x0'}

 Q: What is {academic major} and {academic degree} of {{Robert McNamara} has {educated at} as {University of California, Berkeley}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q191999 p:P69 ?s . ?s ps:P69 wd:Q168756 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert McNamara', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of California, Berkeley'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert McNamara', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of California, Berkeley'}}}]

 Q: What is {number of out of school children} of {neighborhood} of {Arab Spring} ?
 SPARQL: SELECT ?answer WHERE { wd:Q33761 wdt:P276 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arab Spring', 'p': 'location', 'o': '$y0'}}

 Q: what is the {start time} for {Benito Juárez} has {position held} as {President of Mexico} ?
 SPARQL: SELECT ?value WHERE { wd:Q182276 p:P39 ?s . ?s ps:P39 wd:Q628004 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benito Juárez', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Mexico'}}}

 Q: What is the {Christian denomination} for {religion} of {Eastern Orthodox Church}
 SPARQL:  select distinct ?obj where { wd:Q35032 wdt:P140 ?obj . ?obj wdt:P31 wd:Q879146 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eastern Orthodox Church', 'p': 'religion', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian denomination'}}

 Q: What is <solved by> of <Grigori Perelman> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1136 wd:Q117346}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'solved by', 'o': 'Grigori Perelman'}

 Q: Which applies to part of mitochondrial DNA?
 SPARQL: select distinct ?answer where { wd:Q27075 wdt:P518 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mitochondrial DNA', 'p': 'applies to part', 'o': '?x0'}

 Q: What is the {personal bibliography} for {list of works} of {Donald Trump}
 SPARQL:  select distinct ?obj where { wd:Q22686 wdt:P1455 ?obj . ?obj wdt:P31 wd:Q26876682 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Donald Trump', 'p': 'list of works', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'personal bibliography'}}

 Q: what is the {point in time} for {Marcel Proust} has {significant event} as {funeral} ?
 SPARQL: SELECT ?value WHERE { wd:Q7199 p:P793 ?s . ?s ps:P793 wd:Q201676 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Proust', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'funeral'}, 't': '?x0'}

 Q: What is {participant of} of {Usain Bolt} that is {race time} is {37.36} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1189 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P2781 ?x filter(contains(?x,'37.36')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Usain Bolt', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'race time', 'o': '37.36'}}}

 Q: What is the {rare book library} for {archives at} of {James Joyce}
 SPARQL:  select distinct ?obj where { wd:Q6882 wdt:P485 ?obj . ?obj wdt:P31 wd:Q44234152 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Joyce', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rare book library'}}

 Q: is it true that the flux of the leo cluster is greater than 6.512e-11
 SPARQL: ASK WHERE { wd:Q2636046 wdt:P2221 ?obj filter(?obj > 6.512e-11) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Leo Cluster', 'p': 'flux', 'o': '?x0', '?x0': '6.512e-11'}

 Q: What is the {fictional empire} for {present in work} of {Star Wars Episode V: The Empire Strikes Back}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q181795 . ?sbj wdt:P31 wd:Q19595246 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Star Wars Episode V: The Empire Strikes Back', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional empire'}}

 Q: What is {written by} of {Taipei People}, that has {parent} is {Bai Chongxi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7676307 wdt:P50 ?answer . ?answer wdt:P22 wd:Q706491}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Taipei People', 'p': 'written by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent', 'o': 'Bai Chongxi'}}

 Q: When did member of sports team of Just Fontaine and number of points/goals/set scored?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q192749 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Just Fontaine', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Just Fontaine', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Which is the Wikimedia username for John Cena?
 SPARQL: select distinct ?answer where { wd:Q44437 wdt:P4174 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Cena', 'p': 'Wikimedia username', 'o': '?x0'}

 Q: what is the {start time} for {Lombardy} has {country} as {Kingdom of Italy} ?
 SPARQL: SELECT ?value WHERE { wd:Q1210 p:P17 ?s . ?s ps:P17 wd:Q172579 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lombardy', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Kingdom of Italy'}}}

 Q: What is {general manager} of {employed by} of {Karen Czarnecki} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6369578 wdt:P108 ?X . ?X wdt:P1037 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manager', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karen Czarnecki', 'p': 'works for', 'o': '$y0'}}

 Q: Tell me noble family whose name has the word usenberger in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13417114 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'üsenberger')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble family'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'üsenberger'}}

 Q: What was Serena Williams nominated for in the time period of 2000-2009?
 SPARQL: SELECT ?obj WHERE { wd:Q11459 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Serena Williams', 'p': 'nominated for', 'o': '?x0', 't': '2009'}

 Q: When did Toots Thielemans receive the award octave d'honneur?
 SPARQL: SELECT ?value WHERE { wd:Q365567 p:P166 ?s . ?s ps:P166 wd:Q26481897 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Toots Thielemans', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': "octave d'honneur"}, 't': '?x0'}

 Q: What is {developer} of {has outcome} of {protoplanetary disk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q505781 wdt:P1542 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'protoplanetary disk', 'p': 'has outcome', 'o': '$y0'}}

 Q: What is an archaeological site located in Bodrum with the word "mausoleum" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q839954 . ?sbj wdt:P131 wd:Q172267 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mausoleum')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Bodrum'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'mausoleum'}}

 Q: What is the field of study and architectural style of Ramos de Azevedo?
 SPARQL: SELECT ?answer WHERE { wd:Q9300159 wdt:P149 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of study', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramos de Azevedo', 'p': 'architectural style', 'o': '$y0'}}

 Q: How many {illustrator} are to/by {Hirohiko Araki} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P110 wd:Q719354 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'illustrator', 'o': 'Hirohiko Araki'}

 Q: What's the programming paradigm of the MXE language?
 SPARQL: SELECT ?answer WHERE { wd:Q28671337 wdt:P277 ?X . ?X wdt:P3966 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'programming paradigm', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MXE', 'p': 'language', 'o': '$y0'}}

 Q: What is the {clan} for {family} of {Genghis Khan}
 SPARQL:  select distinct ?obj where { wd:Q720 wdt:P53 ?obj . ?obj wdt:P31 wd:Q211503 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genghis Khan', 'p': 'family', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'clan'}}

 Q: By what method was it determined that Cordoba has a population of 322867?
 SPARQL: SELECT ?value WHERE { wd:Q5818 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'322867.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cordoba', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '322867.0'}}}

 Q: When did Plzeň receive the European Capital of Culture award?
 SPARQL: SELECT ?value WHERE { wd:Q43453 p:P166 ?s . ?s ps:P166 wd:Q129372 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Plzeň', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'European Capital of Culture'}, 't': '?x0'}

 Q: Is Janet Jackson, the performer, single?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P175 wd:Q131324 . ?sbj wdt:P31 wd:Q134556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Janet Jackson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single'}}

 Q: What city in New York was Martin Balsam born in?
 SPARQL: SELECT ?obj WHERE { wd:Q312107 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1384 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Balsam', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'New York'}}}

 Q: What is {shareholder} of {CRRC}, that has {exchange} is {New York Stock Exchange} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19840026 wdt:P127 ?answer . ?answer wdt:P414 wd:Q13677}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'CRRC', 'p': 'shareholder', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'exchange', 'o': 'New York Stock Exchange'}}

 Q: Is Kurt Cobain a member of Nirvana?
 SPARQL: ASK WHERE { wd:Q8446 wdt:P463 wd:Q11649 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kurt Cobain', 'p': 'member of', 'o': '?x0', '?x0': 'Nirvana'}]

 Q: What is next to Missouri and divides into Calloway County?
 SPARQL: SELECT ?answer WHERE { wd:Q1581 wdt:P47 ?answer . ?answer wdt:P150 wd:Q491927}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Missouri', 'p': 'next to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Calloway County'}}

 Q: What follows the European Union and when was its inception?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?obj . ?s pq:P571 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0'}}]

 Q: Tell me fungal part whose name has the word stroma in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56883667 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stroma')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fungal part'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'stroma'}}

 Q: What is {work} of {writers} of {The Blue Lotus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q76210 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Blue Lotus', 'p': 'writer', 'o': '$y0'}}

 Q: What is the scalar physical quantity measured in joules?
 SPARQL:  select distinct ?obj where { wd:Q25269 wdt:P111 ?obj . ?obj wdt:P31 wd:Q181175 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'joule', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scalar'}}

 Q: Give me {music genre} that {permanent duplicated item} {black doom} and which contains the word {black} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q188451 . ?sbj wdt:P2959 wd:Q1868278 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'black')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music genre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'permanent duplicated item', 'o': 'black doom'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'black'}}

 Q: Which is the image of grave of Jean-Pierre Melville?
 SPARQL: select distinct ?answer where { wd:Q168693 wdt:P1442 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean-Pierre Melville', 'p': 'image of grave', 'o': '?x0'}

 Q: The Indianapolis 500 is held at which race track?
 SPARQL:  select distinct ?obj where { wd:Q8032 wdt:P276 ?obj . ?obj wdt:P31 wd:Q1777138 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indianapolis 500', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'race track'}}

 Q: What is {date of death} of {Muawiyah I} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181154 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Muawiyah I', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Is the cash back of Amazon.de VISA Card equal to 0.4?
 SPARQL: ASK WHERE { wd:Q56510643 wdt:P4448 ?obj filter(?obj = 0.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Amazon.de VISA Card', 'p': 'cash back', 'o': '?x0', '?x0': '0.4'}

 Q: What is {career} of {architecture firm} of {Victoria Bridge} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2890014 wdt:P84 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'career', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victoria Bridge', 'p': 'architect', 'o': '$y0'}}

 Q: what is the {start time} for {Nauru} has {member of} as {Asian Development Bank} ?
 SPARQL: SELECT ?value WHERE { wd:Q697 p:P463 ?s . ?s ps:P463 wd:Q188822 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nauru', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Asian Development Bank'}}}

 Q: What is {member of sports team} of {Rinus Michels} that is {number of matches played} is {5.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2154479 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'5.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '5.0'}}}

 Q: Which sports team did Inzamam-ul-Haq start on in 1992?
 SPARQL: SELECT ?obj WHERE { wd:Q1393201 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Inzamam-ul-Haq', 'p': 'team', 'o': '?x0', 't': '1992'}

 Q: What is the name of this isolated human group that contain the word "wenrohronon" in their name ?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3117863 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wenrohronon')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isolated human group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wenrohronon'}}

 Q: What is the {colony} for {official language} of {Dutch}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7411 . ?sbj wdt:P31 wd:Q133156 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Dutch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'colony'}}

 Q: What is {nominated for} of {Alexandre Desplat} that is {for work} is {Argo} ?
 SPARQL: SELECT ?obj WHERE { wd:Q313362 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q59653 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexandre Desplat', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Argo'}}}

 Q: Name an instruction set architecture designed by Intel and that contains the word "x86" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q272683 . ?sbj wdt:P287 wd:Q248 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'x86')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'instruction set architecture', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Intel'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'x86'}}

 Q: What is {resident in} of {Mirza Ghalib}, that has {continent} is {Asia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q107000 wdt:P551 ?answer . ?answer wdt:P30 wd:Q48}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mirza Ghalib', 'p': 'resident in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'Asia'}}

 Q: Who is the winner for High Noon who was awarded as Academy Award for Best Film Editing?
 SPARQL: SELECT ?value WHERE { wd:Q245208 p:P166 ?s . ?s ps:P166 wd:Q281939 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'High Noon', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Academy Award for Best Film Editing'}}}

 Q: Which is the school of Mahendra Singh Dhoni?
 SPARQL: select distinct ?answer where { wd:Q470774 wdt:P1780 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mahendra Singh Dhoni', 'p': 'school of', 'o': '?x0'}

 Q: What award did Simone de Beauvoir receive in 1975?
 SPARQL: SELECT ?obj WHERE { wd:Q7197 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Simone de Beauvoir', 'p': 'award', 'o': '?x0', 't': '1975'}

 Q: What is the capital of the Achaemenid Empire?
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P36 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: What democratic republic country had the Watergate scandal?
 SPARQL:  select distinct ?obj where { wd:Q42761 wdt:P17 ?obj . ?obj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Watergate scandal', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: What is {public domain date} of {Metropolis} that is {applies to jurisdiction} is {United States of America} ?
 SPARQL: SELECT ?obj WHERE { wd:Q151599 p:P3893 ?s . ?s ps:P3893 ?obj . ?s pq:P1001 wd:Q30 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'public domain date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Metropolis', 'p': 'public domain date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to jurisdiction', 'o': 'the United States'}}}

 Q: What is {academic major} and {academic degree} of {{Franz Kafka} has {educated at} as {Karl-Ferdinands-Universität}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q905 p:P69 ?s . ?s ps:P69 wd:Q1729754 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Kafka', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Karl-Ferdinands-Universität'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Kafka', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Karl-Ferdinands-Universität'}}}]

 Q: Which is the Sratim ID for Breakfast at Tiffany's?
 SPARQL: select distinct ?answer where { wd:Q193066 wdt:P3145 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Breakfast at Tiffany's", 'p': 'Sratim ID', 'o': '?x0'}

 Q: what is the {point in time} for {Eduardo Chillida} has {award received} as {Princess of Asturias Award for the Arts} ?
 SPARQL: SELECT ?value WHERE { wd:Q156736 p:P166 ?s . ?s ps:P166 wd:Q3319305 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Eduardo Chillida', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Princess of Asturias Award for the Arts'}, 't': '?x0'}

 Q: what is the {start time} for {Antioch on the Orontes} has {located in the administrative territorial entity} as {Antakya} ?
 SPARQL: SELECT ?value WHERE { wd:Q200441 p:P131 ?s . ?s ps:P131 wd:Q80561 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antioch on the Orontes', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Antakya'}}}

 Q: What is {pronunciation audio} of {culinary mustard} that is {language of work or name} is {Dutch} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131748 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q7411 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mustard', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'Dutch'}}}

 Q: Which is the colonial power of the country of pound sterling?
 SPARQL:  select distinct ?obj where { wd:Q25224 wdt:P17 ?obj . ?obj wdt:P31 wd:Q20181813 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pound sterling', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'colonial power'}}

 Q: When did Dijon have a population of 155114?
 SPARQL: SELECT ?value WHERE { wd:Q7003 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'155114')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dijon', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '155114'}, 't': '?x0'}

 Q: Was David Attenborough given name Frederick?
 SPARQL: ASK WHERE { wd:Q183337 wdt:P735 wd:Q3273004 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'David Attenborough', 'p': 'given name', 'o': '?x0', '?x0': 'Frederick'}]

 Q: What significant event happened when Anna Wintour was experiencing childbirth?
 SPARQL: SELECT ?value WHERE { wd:Q230744 p:P793 ?s . ?s ps:P793 wd:Q34581 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Anna Wintour', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'childbirth'}, 't': '?x0'}

 Q: What was named for Herschel Space Observatory that has a birthday of 3-16-1750?
 SPARQL: SELECT ?answer WHERE { wd:Q209630 wdt:P138 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1750'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Herschel Space Observatory', 'p': 'named for', 'o': '?x0', 't': '1750'}

 Q: What is the {human} for {replaced by} of {Ayman al-Zawahiri}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1366 wd:Q186316 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Ayman al-Zawahiri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the heavy equipment that starts with t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q874311 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'heavy equipment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {country of citizenship} of {Thomas Paine} that is {end time} is {1792-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q126462 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1792')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Paine', 'p': 'country of citizenship', 'o': '?x0', 't': '1792'}

 Q: What is {position held} of {Jacqueline Kennedy Onassis} that is {replaces} is {Mamie Eisenhower} ?
 SPARQL: SELECT ?obj WHERE { wd:Q165421 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q233686 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacqueline Kennedy Onassis', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Mamie Eisenhower'}}}

 Q: what is the {start time} for {Toshiba} has {chief executive officer} as {Nobuaki Kurumatani} ?
 SPARQL: SELECT ?value WHERE { wd:Q49125 p:P169 ?s . ?s ps:P169 wd:Q11637325 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Toshiba', 'p': 'chief executive officer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chief executive officer', 'o': 'Nobuaki Kurumatani'}}}

 Q: What is studies of coined for periodic table ?
 SPARQL: SELECT ?answer WHERE { wd:Q10693 wdt:P61 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'studies', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'periodic table', 'p': 'coined', 'o': '$y0'}}

 Q: 1984 is the manifestation of what audio drama?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q208460 . ?sbj wdt:P31 wd:Q2635894 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': '1984', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'audio drama'}}

 Q: What is the {human} for {commissioned by} of {Taj Mahal}
 SPARQL:  select distinct ?obj where { wd:Q9141 wdt:P88 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Taj Mahal', 'p': 'commissioned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {noble title} of {Guy of Lusignan} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q294192 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0'}}]

 Q: What award did Aleksandr Solzhenitsyn receive and how much was the prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q34474 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandr Solzhenitsyn', 'p': 'award', 'o': '$y0'}}]

 Q: What is <space launch vehicle> of <Pioneer 11> ?
 SPARQL: select distinct ?answer where { wd:Q59113 wdt:P375 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pioneer 11', 'p': 'space launch vehicle', 'o': '?x0'}

 Q: what is the {academic degree} for {Walter Benjamin} has {educated at} as {University of Bern} ?
 SPARQL: SELECT ?value WHERE { wd:Q61078 p:P69 ?s . ?s ps:P69 wd:Q659080 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Walter Benjamin', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Bern'}}}

 Q: What is the IWRP athlete ID for Hossein Rezazadeh?
 SPARQL: select distinct ?answer where { wd:Q374353 wdt:P4504 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hossein Rezazadeh', 'p': 'IWRP athlete ID', 'o': '?x0'}

 Q: Give me {book} that {published in} {Journal des débats} and which contains the word {count} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q571 . ?sbj wdt:P1433 wd:Q2565164 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'count')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Journal des débats'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'count'}}

 Q: What is {area} of {supervisor} of {Valerian Agafonoff} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4056733 wdt:P184 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valerian Agafonoff', 'p': 'supervisor', 'o': '$y0'}}

 Q: IS THE CALIBER OF THE M1939 GREATER THAN 44.4
 SPARQL: ASK WHERE { wd:Q701703 wdt:P4403 ?obj filter(?obj > 44.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'M1939', 'p': 'caliber', 'o': '?x0', '?x0': '44.4'}

 Q: What was the population of Bacolod on May 5, 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q5217 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bacolod', 'p': 'population', 'o': '?x0', 't': '2010'}

 Q: Which was the award received by Shoji Hamada on 1-1-1968?
 SPARQL: SELECT ?obj WHERE { wd:Q3090171 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1968')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shoji Hamada', 'p': 'award received', 'o': '?x0', 't': '1968'}

 Q: What is the name of the office held by Chiang Kai-shek that was Introduced around 1928?
 SPARQL: SELECT ?answer WHERE { wd:Q16574 wdt:P39 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1928'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chiang Kai-shek', 'p': 'office held', 'o': '?x0', 't': '1928'}

 Q: When was Ernesto Zedillo awarded the Wilbur Cross Medal?
 SPARQL: SELECT ?value WHERE { wd:Q298149 p:P166 ?s . ?s ps:P166 wd:Q8000166 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ernesto Zedillo', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Wilbur Cross Medal'}, 't': '?x0'}

 Q: "How is {formation} of {James Longstreet}, which has {parent company of} is {United States Department of the Army} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q311514 wdt:P241 ?answer . ?answer wdt:P355 wd:Q1328562}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Longstreet', 'p': 'formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent company of', 'o': 'United States Department of the Army'}}

 Q: What is {short name} of {Communist Party of the Soviet Union} that is {end time} is {1925-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q79854 p:P1813 ?s . ?s ps:P1813 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1925')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Communist Party of the Soviet Union', 'p': 'short name', 'o': '?x0', 't': '1925'}

 Q: What are the {province of China which starts with letters z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1615742 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'province of China'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is  the higher taxon of resident animal species of Hellabrunn Zoo ?
 SPARQL: SELECT ?answer WHERE { wd:Q264691 wdt:P1990 ?X . ?X wdt:P171 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'higher taxon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hellabrunn Zoo', 'p': 'resident animal species', 'o': '$y0'}}

 Q: Which is the archive for the architectural style of Bauhaus?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P149 wd:Q124354 . ?sbj wdt:P31 wd:Q166118 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architectural style', 'o': 'Bauhaus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archive'}}

 Q: When did Antoine Laurent Lavoisier cease to be a citizen of the French Republic?
 SPARQL: SELECT ?value WHERE { wd:Q39607 p:P27 ?s . ?s ps:P27 wd:Q58296 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lavoisier', 'p': 'citizen of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizen of', 'o': 'French Republic'}}}

 Q: What is {residence} of {Vladimir Nabokov} that is {start time} is {1899-4-22} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36591 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1899')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vladimir Nabokov', 'p': 'residence', 'o': '?x0', 't': '1899'}

 Q: When was the peseta replaced by the euro?
 SPARQL: SELECT ?value WHERE { wd:Q4916 p:P1365 ?s . ?s ps:P1365 wd:Q189097 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'euro', 'p': 'replaced', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'peseta'}, 't': '?x0'}

 Q: What is the {sovereign state} for {head of state} of {Mobutu Sese Seko}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q164535 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Mobutu Sese Seko', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what is the {for work} for {Julie Christie} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q181413 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julie Christie', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Which is the film genre of the series of Unmasked?
 SPARQL: SELECT ?answer WHERE { wd:Q16746470 wdt:P179 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Unmasked', 'p': 'series', 'o': '$y0'}}

 Q: When did Mulhouse stop being located in the administrative territorial entity of Upper Alsace?
 SPARQL: SELECT ?value WHERE { wd:Q79815 p:P131 ?s . ?s ps:P131 wd:Q1999970 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mulhouse', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Upper Alsace'}}}

 Q: What is the Salzburg airport named after?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q34713 . ?sbj wdt:P31 wd:Q1248784 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Salzburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airport'}}

 Q: Were The Beatles influenced by Timothy Leary?
 SPARQL: ASK WHERE { wd:Q1299 wdt:P737 wd:Q211731 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Beatles', 'p': 'influenced by', 'o': '?x0', '?x0': 'Timothy Leary'}]

 Q: What is {external data available at} of {Wakayama Prefecture} that is {of} is {open data} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131314 p:P1325 ?s . ?s ps:P1325 ?obj . ?s pq:P642 wd:Q309901 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'data', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wakayama Prefecture', 'p': 'data', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'open data'}}}

 Q: what is the {point in time} for {Leonard Cohen} has {award received} as {Grammy Lifetime Achievement Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q1276 p:P166 ?s . ?s ps:P166 wd:Q935843 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Leonard Cohen', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Lifetime Achievement Award'}, 't': '?x0'}

 Q: Which is the name of Ruth Benedict?
 SPARQL: select distinct ?answer where { wd:Q228822 wdt:P2561 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ruth Benedict', 'p': 'name', 'o': '?x0'}

 Q: What is the place of death of Endre Ady, which is the twin city of Daejeon?
 SPARQL: SELECT ?answer WHERE { wd:Q211392 wdt:P20 ?answer . ?answer wdt:P190 wd:Q20921}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Endre Ady', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Daejeon'}}

 Q: Is the nominal GDP of Belize less than 1470400000?
 SPARQL: ASK WHERE { wd:Q242 wdt:P2131 ?obj filter(?obj < 1470400000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Belize', 'p': 'nominal GDP', 'o': '?x0', '?x0': '1470400000.0'}

 Q: What is the {language} for {dialect of} of {Ancient Greek}
 SPARQL:  select distinct ?obj where { wd:Q35497 wdt:P4913 ?obj . ?obj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ancient Greek', 'p': 'dialect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Which museum tugboat has the most net tonnage ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q191826 . ?ent wdt:P2790 ?obj . ?ent wdt:P366 wd:Q575727 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'net tonnage', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tug', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'use', 'o': 'museum ship'}}}

 Q: Where is {border} of {birth location} of {Asia Argento} ?
 SPARQL: SELECT ?answer WHERE { wd:Q232052 wdt:P19 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asia Argento', 'p': 'birth location', 'o': '$y0'}}

 Q: what is the {valid in period} for {Trentino-South Tyrol} has {located in time zone} as {UTC+01:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q1237 p:P421 ?s . ?s ps:P421 wd:Q6655 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Trentino-South Tyrol', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+01:00'}}}

 Q: Which is the charge of Joan of Arc?
 SPARQL: select distinct ?answer where { wd:Q7226 wdt:P1595 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joan of Arc', 'p': 'charge', 'o': '?x0'}

 Q: Tell me the media player with a license of proprietary license and starts with the letter w?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q210337 . ?sbj wdt:P275 wd:Q3238057 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'media player', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'license', 'o': 'proprietary license'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is <L'Équipe football player ID> of <George Weah> ?
 SPARQL: select distinct ?answer where { wd:Q173139 wdt:P3665 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Weah', 'p': "L'Équipe football player ID", 'o': '?x0'}

 Q: What is {birthplace} of {Reba McEntire}, that has {has towns} is {Woodward County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q229430 wdt:P19 ?answer . ?answer wdt:P150 wd:Q489447}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Reba McEntire', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has towns', 'o': 'Woodward County'}}

 Q: What is <Online Books Page publication ID> of <Action Comics> ?
 SPARQL: select distinct ?answer where { wd:Q343615 wdt:P5396 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Action Comics', 'p': 'Online Books Page publication ID', 'o': '?x0'}

 Q: Which is the deepest point for Mekong River?
 SPARQL: select distinct ?answer where { ?answer wdt:P1589 wd:Q41179}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'deepest point', 'o': 'Mekong River'}

 Q: What is not the same as the globe, whose time zone is Mountain Time Zone?
 SPARQL: SELECT ?answer WHERE { wd:Q133792 wdt:P1889 ?answer . ?answer wdt:P421 wd:Q3134980}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'globe', 'p': 'is not', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'time zone', 'o': 'Mountain Time Zone'}}

 Q: What is {twin town} of {subtopic of} of {history of Istanbul} ?
 SPARQL: SELECT ?answer WHERE { wd:Q32357 wdt:P1269 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Istanbul', 'p': 'topic of', 'o': '$y0'}}

 Q: Which sovereign states participated in the American Revolutionary War?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q40949 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participated in', 'o': 'American Revolutionary War', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what is the antonym of father that has series is Ahnentafel?
 SPARQL: SELECT ?answer WHERE { wd:Q7565 wdt:P461 ?answer . ?answer wdt:P179 wd:Q267388}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'father', 'p': 'antonym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Ahnentafel'}}

 Q: Which animated character has got more number of children?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15711870 . ?ent wdt:P1971 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of children', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated character'}}

 Q: What is {music genre} of {artist} of {Best Ballads} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1758314 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Best Ballads', 'p': 'artist', 'o': '$y0'}}

 Q: what is the {point in time} for {Shaquille O'Neal} has {award received} as {All-NBA Team} ?
 SPARQL: SELECT ?value WHERE { wd:Q169452 p:P166 ?s . ?s ps:P166 wd:Q674359 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Shaq', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'All-NBA Team'}, 't': '?x0'}

 Q: What is the {human} for {professional or sports partner} of {Kate Bush}
 SPARQL:  select distinct ?obj where { wd:Q636 wdt:P1327 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kate Bush', 'p': 'sports partner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which country does Roberto Rossellini, who died in Rome, belong to?
 SPARQL: SELECT ?value WHERE { wd:Q53003 p:P20 ?s . ?s ps:P20 wd:Q220 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberto Rossellini', 'p': 'died in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'died in', 'o': 'Rome'}}}

 Q: What is {area} of {published in journal} of {Research on middle age: an assessment.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40468747 wdt:P1433 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'specialty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Research on middle age: an assessment.', 'p': 'published in', 'o': '$y0'}}

 Q: Who did Malcolm Fraser get married to in 1956?
 SPARQL: SELECT ?obj WHERE { wd:Q315979 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1956')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Malcolm Fraser', 'p': 'married to', 'o': '?x0', 't': '1956'}

 Q: Who is the sponsor of Anne, Princess Royal?
 SPARQL: select distinct ?answer where { ?answer wdt:P859 wd:Q151754}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sponsor', 'o': 'Anne, Princess Royal'}

 Q: What are the recurring events which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15275719 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring event'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which is the maximum capacity for Wright Flyer?
 SPARQL: select distinct ?answer where { wd:Q688605 wdt:P1083 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wright Flyer', 'p': 'maximum capacity', 'o': '?x0'}

 Q: does the age events of the totoro equivelant to 3000?
 SPARQL: ASK WHERE { wd:Q1939137 wdt:P3629 ?obj filter(?obj = 3000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Totoro', 'p': 'age at event', 'o': '?x0', '?x0': '3000'}

 Q: How many operators are by Texas A&M University?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P137 wd:Q49212 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'Texas A&M University'}

 Q: What is {head quarters} of {member of} of {Charles Nirmalanathan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20855546 wdt:P102 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'head quarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Nirmalanathan', 'p': 'member of', 'o': '$y0'}}

 Q: Which is the river that is different from the mass?
 SPARQL:  select distinct ?obj where { wd:Q11423 wdt:P1889 ?obj . ?obj wdt:P31 wd:Q4022 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mass', 'p': 'different from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'river'}}

 Q: Which is the HTML entity for diamond?
 SPARQL: select distinct ?answer where { wd:Q5283 wdt:P4575 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diamond', 'p': 'HTML entity', 'o': '?x0'}

 Q: What is {locomotion} of {secreted by} of {child} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7569 wdt:P2849 ?X . ?X wdt:P3512 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'locomotion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'child', 'p': 'secreted by', 'o': '$y0'}}

 Q: What is {date of birth} of {Antipater} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q204760 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antipater', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Which is the continental area and surrounding islands for the continent of the Middle East?
 SPARQL:  select distinct ?obj where { wd:Q7204 wdt:P30 ?obj . ?obj wdt:P31 wd:Q2418896 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Middle East', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'continental area and surrounding islands'}}

 Q: How many languages are based on the {Latin script} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P144 wd:Q8229 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Latin script'}

 Q: How many {work location} are for {Jan Brueghel the Elder} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q209050 wdt:P937 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Jan Brueghel the Elder', 'p': 'work location', 'o': '?x0'}

 Q: What is an electrical connector system that is published by USB Implementers Forum with the word "usb" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58184783 . ?sbj wdt:P123 wd:Q3847420 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'usb')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'electrical connector system', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'published by', 'o': 'USB Implementers Forum'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'usb'}}

 Q: What is {end time} and {start time} of {{Jessica Lange} has {partner} as {Sam Shepard}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q173585 p:P451 ?s . ?s ps:P451 wd:Q294583 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jessica Lange', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Sam Shepard'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jessica Lange', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Sam Shepard'}}}]

 Q: What is {parent company of} of {alumna of} of {Thomas Hobbes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37621 wdt:P69 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent company of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Hobbes', 'p': 'alumna of', 'o': '$y0'}}

 Q: Which is the research program that the objective of project or mission of human genome whose name contains the word genome?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7315176 . ?sbj wdt:P3712 wd:Q720988 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'genome')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research program', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'objective', 'o': 'human genome'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'genome'}}

 Q: Tell me craft  whose name has the word woodworker in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2207288 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'woodworker')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'craft'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'woodworker'}}

 Q: Which {makes use of} {sports} of {football boots} ?
 SPARQL: SELECT ?answer WHERE { wd:Q512804 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'makes use of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'football boots', 'p': 'sport', 'o': '$y0'}}

 Q: Name a traditional fairy tale that starts with letter S
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q42402646 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'traditional fairy tale'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the capital of the is in the city  of Jauca?
 SPARQL: SELECT ?answer WHERE { wd:Q13736489 wdt:P131 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jauca', 'p': 'in', 'o': '$y0'}}

 Q: what is the {point in time} for {Illinois} has {population} as {1.14265e+07} ?
 SPARQL: SELECT ?value WHERE { wd:Q1204 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.14265e+07')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Illinois', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.14265e+07'}, 't': '?x0'}

 Q: Does the surface tension of the undecane equal 17.45?
 SPARQL: ASK WHERE { wd:Q150731 wdt:P3013 ?obj filter(?obj = 17.45) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'undecane', 'p': 'surface tension', 'o': '?x0', '?x0': '17.45'}

 Q: Lawrence Summers was educated at which university and gained which degree?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q317953 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lawrence Summers', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lawrence Summers', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is <has facility> of <Hartsfield–Jackson Atlanta International Airport> ?
 SPARQL: select distinct ?answer where { wd:Q214861 wdt:P912 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hartsfield-Jackson', 'p': 'has facility', 'o': '?x0'}

 Q: What is <contributor(s) to the creative work> of <Brian Wilson> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P767 wd:Q313013}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contributor', 'o': 'Brian Wilson'}

 Q: which poem contains the word prymskvioa in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5185279 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'þrymskviða')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'poem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'þrymskviða'}}

 Q: Competitive snowboarding has how many sports discipline's?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2416 wd:Q178131 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sports discipline', 'o': 'snowboarding'}

 Q: Which is the newspaper owned by the Australian Football League?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q50783 . ?sbj wdt:P31 wd:Q11032 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'Australian Football League', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newspaper'}}

 Q: At what time did Ulaanbaatar have a population of 1.372e+06?
 SPARQL: SELECT ?value WHERE { wd:Q23430 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.372e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ulaanbaatar', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.372e+06'}, 't': '?x0'}

 Q: Give me {W3C Recommendation} that {standards body} {World Wide Web Consortium} and which that starts with {'x'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2661442 . ?sbj wdt:P1462 wd:Q37033 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'W3C Recommendation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'standards body', 'o': 'W3C'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: what is the {start time} for {Zakopane} has {located in the administrative territorial entity} as {Kingdom of Galicia and Lodomeria} ?
 SPARQL: SELECT ?value WHERE { wd:Q144786 p:P131 ?s . ?s ps:P131 wd:Q2396442 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zakopane', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Kingdom of Galicia and Lodomeria'}}}

 Q: In which country is Syracuse that is the birth place of Megyn Kelly?
 SPARQL: SELECT ?value WHERE { wd:Q293260 p:P19 ?s . ?s ps:P19 wd:Q128069 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Megyn Kelly', 'p': 'birth place', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'birth place', 'o': 'Syracuse'}}}

 Q: what is the {start time} for {Russian Empire} has {basic form of government} as {absolute monarchy} ?
 SPARQL: SELECT ?value WHERE { wd:Q34266 p:P122 ?s . ?s ps:P122 wd:Q184558 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'beginning', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Russian Empire', 'p': 'basic form of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'basic form of government', 'o': 'absolute monarchy'}}}

 Q: What is {award received} of {Eddie Redmayne} that is {for work} is {The Theory of Everything} ?
 SPARQL: SELECT ?obj WHERE { wd:Q28288 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q15079318 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eddie Redmayne', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Theory of Everything'}}}

 Q: What Denmark hotel has the least angle from vertical?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q27686 . ?ent wdt:P4183 ?obj . ?ent wdt:P17 wd:Q35} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'angle from vertical', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hotel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Denmark'}}}

 Q: Who is the performer and the present in work of Satan?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q35230 wdt:P175 ?ans_1 . wd:Q35230 wdt:P1441 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Satan', 'p': 'performer', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Satan', 'p': 'present in work', 'o': '?x1'}]

 Q: What is {head quarters} of {working place} of {Jörg-Dietrich Hoppe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1715188 wdt:P108 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'HQ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jörg-Dietrich Hoppe', 'p': 'working place', 'o': '$y0'}}

 Q: what is the {start time} for {Sun Wen} has {member of sports team} as {Atlanta Beat} ?
 SPARQL: SELECT ?value WHERE { wd:Q253223 p:P54 ?s . ?s ps:P54 wd:Q4816008 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sun Wen', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Atlanta Beat'}}}

 Q: What is <has evaluation> of <pulse> ?
 SPARQL: select distinct ?answer where { wd:Q191733 wdt:P5133 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pulse', 'p': 'has evaluation', 'o': '?x0'}

 Q: What is {architecture firm} of {Jewish Museum}, that has {honors} is {Buber-Rosenzweig-Medal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q157003 wdt:P84 ?answer . ?answer wdt:P166 wd:Q278778}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jewish Museum in Berlin', 'p': 'architect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'honors', 'o': 'Buber-Rosenzweig-Medal'}}

 Q: Which spouse did Henry III of France have in 1589-8-2.
 SPARQL: SELECT ?obj WHERE { wd:Q53448 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1589')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry III of France', 'p': 'spouse', 'o': '?x0', 't': '1589'}

 Q: Is the mean anomaly of the 4366 Venikagan equal to 0.58858?
 SPARQL: ASK WHERE { wd:Q153792 wdt:P2325 ?obj filter(?obj = 0.58858) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '4366 Venikagan', 'p': 'mean anomaly', 'o': '?x0', '?x0': '0.58858'}

 Q: What is the {island nation} for {currency} of {pound sterling}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q25224 . ?sbj wdt:P31 wd:Q112099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'pound sterling', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation'}}

 Q: what is the {statement is subject of} for {Kosovo} has {shares border with} as {Albania} ?
 SPARQL: SELECT ?value WHERE { wd:Q1246 p:P47 ?s . ?s ps:P47 wd:Q222 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kosovo', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'border', 'o': 'Albania'}}}

 Q: What's the phase point of the critical point?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P873 wd:Q111059 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'phase point', 'o': 'critical point'}

 Q: what is the {place of marriage} for {William Blake} has {spouse} as {Catherine Blake} ?
 SPARQL: SELECT ?value WHERE { wd:Q41513 p:P26 ?s . ?s ps:P26 wd:Q5052545 . ?s pq:P2842 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Blake', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Catherine Blake'}}}

 Q: Name the capital city Aung San Suu Kyi lives in.
 SPARQL:  select distinct ?obj where { wd:Q36740 wdt:P551 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aung San Suu Kyi', 'p': 'lives in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: Has Jeremy Corbyn lived in Finsbury Park?
 SPARQL: ASK WHERE { wd:Q291169 wdt:P551 wd:Q122566 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jeremy Corbyn', 'p': 'lived in', 'o': '?x0', '?x0': 'Finsbury Park'}]

 Q: What is the zipcode William Stukeley died in?
 SPARQL: SELECT ?answer WHERE { wd:Q1381018 wdt:P20 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zipcode', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Stukeley', 'p': 'died in', 'o': '$y0'}}

 Q: What is Carly Simon's Songwriters Hall of Fame ID number?
 SPARQL: select distinct ?answer where { wd:Q181683 wdt:P4757 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carly Simon', 'p': 'Songwriters Hall of Fame ID', 'o': '?x0'}

 Q: What stopped being located in the administrative territorial entity of Luoyang in the year 907?
 SPARQL: SELECT ?obj WHERE { wd:Q187136 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(?x,'907-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Luoyang', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'to', 'o': '907-0-0'}}}

 Q: what is the {determination method} for {hepatitis C} has {genetic association} as {DDRGK1} ?
 SPARQL: SELECT ?value WHERE { wd:Q154869 p:P2293 ?s . ?s ps:P2293 wd:Q18045902 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hepatitis C', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'DDRGK1'}}}

 Q: What is FIS cross-country skier ID for Marit Bjørgen?
 SPARQL: select distinct ?answer where { wd:Q216256 wdt:P2773 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marit Bjørgen', 'p': 'FIS cross-country skier ID', 'o': '?x0'}

 Q: What sport rewards the FIFA World Cup?
 SPARQL: select distinct ?answer where { wd:Q19317 wdt:P641 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'FIFA World Cup', 'p': 'sport', 'o': '?x0'}

 Q: What is the Neurolex ID for the parietal lobe?
 SPARQL: select distinct ?answer where { wd:Q815334 wdt:P696 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'parietal lobe', 'p': 'Neurolex ID', 'o': '?x0'}

 Q: What is {words by} of {Macarena}, that has {born as} is {Antonio Romero Márquez} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1149738 wdt:P676 ?answer . ?answer wdt:P1477 ?x FILTER(contains(?x,'Antonio Romero Márquez'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Macarena', 'p': 'words by', 'o': '?x0'}

 Q: When was Peter Zumthor awarded the Arts and Culture Prize of German Catholics?
 SPARQL: SELECT ?value WHERE { wd:Q123179 p:P166 ?s . ?s ps:P166 wd:Q1514013 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Peter Zumthor', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Arts and Culture Prize of German Catholics'}, 't': '?x0'}

 Q: what is the {point in time} for {Grateful Dead} has {award received} as {Grammy Lifetime Achievement Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q212533 p:P166 ?s . ?s ps:P166 wd:Q935843 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Grateful Dead', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Lifetime Achievement Award'}, 't': '?x0'}

 Q: Give me {Pavo} that contains the word {peacock} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3917160 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'peacock')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Pavo'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'peacock'}}

 Q: What is Operissimo artist ID for Martina Arroyo?
 SPARQL: select distinct ?answer where { wd:Q1702112 wdt:P5366 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Martina Arroyo', 'p': 'Operissimo artist ID', 'o': '?x0'}

 Q: What is the {business} for {manufacturer} of {Commodore 64}
 SPARQL:  select distinct ?obj where { wd:Q99775 wdt:P176 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Commodore 64', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is <Mackolik.com player ID> of <Ronaldo> ?
 SPARQL: select distinct ?answer where { wd:Q529207 wdt:P2458 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ronaldo', 'p': 'Mackolik.com player ID', 'o': '?x0'}

 Q: What is the pharmaceutical product for which cocaine is active ingredient?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3781 wd:Q41576 . ?sbj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'active ingredient', 'o': 'cocaine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: What is <National Library of Brazil ID> of <György Lukács> ?
 SPARQL: select distinct ?answer where { wd:Q151523 wdt:P4619 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'György Lukács', 'p': 'National Library of Brazil ID', 'o': '?x0'}

 Q: Is the production rate of Somontano the same as 144093.6
 SPARQL: ASK WHERE { wd:Q1938017 wdt:P2197 ?obj filter(?obj = 144093.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Somontano', 'p': 'production rate', 'o': '?x0', '?x0': '144093.6'}

 Q: what is the {point in time} for {John Frederick William Herschel} has {award received} as {Copley Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q14278 p:P166 ?s . ?s ps:P166 wd:Q28003 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'John Frederick William Herschel', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Copley Medal'}, 't': '?x0'}

 Q: Which inventor or discoverer with the profession of astronomer discovered 90377 Sedna?
 SPARQL: SELECT ?answer WHERE { wd:Q15610 wdt:P61 ?answer . ?answer wdt:P106 wd:Q11063}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '90377 Sedna', 'p': 'inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'astronomer'}}

 Q: What is {voice actresses} of {part of series} of {Naked to the Limit, One More Time} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51164989 wdt:P179 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'voice actress', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Naked to the Limit, One More Time', 'p': 'part of series', 'o': '$y0'}}

 Q: Which mosque is named after Suleiman the Magnificent?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q8474 . ?sbj wdt:P31 wd:Q32815 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Suleiman the Magnificent', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mosque'}}

 Q: What is first described in tide with praenomen Gaius?
 SPARQL: SELECT ?answer WHERE { wd:Q23384 wdt:P61 ?answer . ?answer wdt:P2358 wd:Q5517401}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'tide', 'p': 'first described', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'praenomen', 'o': 'Gaius'}}

 Q: What association football league that starts with the letter "s" is organized by the Italian Football Federation?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15991303 . ?sbj wdt:P664 wd:Q201897 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'association football league', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'organized by', 'o': 'Italian Football Federation'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {studio album} for {producer} of {David Bowie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P162 wd:Q5383 . ?sbj wdt:P31 wd:Q208569 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'producer', 'o': 'Bowie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'album'}}

 Q: "Where is the birthplace of Hugh Owen Thomas, which has the global point 53.293975° N, -4.376728° W?"
 SPARQL: SELECT ?answer WHERE { wd:Q1634494 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'53.293975 -4.376728'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hugh Owen Thomas', 'p': 'birthplace', 'o': '?x0'}

 Q: What is material used of water ?
 SPARQL: select distinct ?answer where { ?answer wdt:P186 wd:Q283}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'material used', 'o': 'water'}

 Q: What is {has towns} of {land} of {Taekyeung college} ?
 SPARQL: SELECT ?answer WHERE { wd:Q491524 wdt:P17 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has towns', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taekyeung college', 'p': 'land', 'o': '$y0'}}

 Q: What is {number of points/goals/set scored} and {number of matches played} of {{Zico} has {member of sports team} as {Kashima Antlers}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q47526 p:P54 ?s . ?s ps:P54 wd:Q16932 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of goals', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zico', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Kashima Antlers'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zico', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Kashima Antlers'}}}]

 Q: Does the argument of periapsis of 8680 Rone equal 1.080852?
 SPARQL: ASK WHERE { wd:Q644778 wdt:P2248 ?obj filter(?obj = 1.080852) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '8680 Rone', 'p': 'argument of periapsis', 'o': '?x0', '?x0': '1.080852'}

 Q: Tell me the component that has the shape of hyperboloid and starts with the letter c?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1310239 . ?sbj wdt:P1419 wd:Q505628 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'component', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shape', 'o': 'hyperboloid'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is the Turkish Football Federation player ID of Gheorghe Hagi?
 SPARQL: select distinct ?answer where { wd:Q189892 wdt:P2448 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gheorghe Hagi', 'p': 'Turkish Football Federation player ID', 'o': '?x0'}

 Q: Which is the significant event for A-League?
 SPARQL: select distinct ?answer where { ?answer wdt:P793 wd:Q219586}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'A-League'}

 Q: What {source material} is the {buff coat} {made from}?
 SPARQL: SELECT ?answer WHERE { wd:Q3373195 wdt:P186 ?X . ?X wdt:P1582 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'buff coat', 'p': 'made from', 'o': '?x0'}

 Q: Who are the children of Jens Breivik's husband?
 SPARQL: SELECT ?answer WHERE { wd:Q19376205 wdt:P26 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jens Breivik', 'p': 'husband', 'o': '$y0'}}

 Q: What is {number of out of school children} of {Central Asia} that is {point in time} is {2007-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q27275 p:P2573 ?s . ?s ps:P2573 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Central Asia', 'p': 'number of out of school children', 'o': '?x0', 't': '2007'}

 Q: What is {battle} of {branch} of {general} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5531647 wdt:P241 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'battle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'general', 'p': 'branch', 'o': '$y0'}}

 Q: Are there more than 0.8 seasons of Supertrain?
 SPARQL: ASK WHERE { wd:Q367772 wdt:P2437 ?obj filter(?obj > 0.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Supertrain', 'p': 'seasons', 'o': '?x0', '?x0': '0.8'}

 Q: Which republic with the a minimal nominal GDP is a member of the International Finance Corporation?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7270 . ?ent wdt:P2131 ?obj . ?ent wdt:P463 wd:Q656801} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'nominal GDP', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Finance Corporation'}}}

 Q: Did Amitabh Bachchan speak the Hindi-Urdu language?
 SPARQL: ASK WHERE { wd:Q9570 wdt:P1412 wd:Q11051 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Amitabh Bachchan', 'p': 'language', 'o': '?x0', '?x0': 'Hindi-Urdu'}]

 Q: what is the {statement is subject of} for {Bette Davis} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q71206 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bette Davis', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: What is {government headed by} of {land} of {Arkhangelsk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1851 wdt:P17 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'government headed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arkhangelsk', 'p': 'land', 'o': '$y0'}}

 Q: Is William Wilde the father of Oscar Wilde?
 SPARQL: ASK WHERE { wd:Q30875 wdt:P22 wd:Q2540254 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Oscar Wilde', 'p': 'father', 'o': '?x0', '?x0': 'William Wilde'}]

 Q: What political party did Svetlana Savitskaya's become a member of in 1975?
 SPARQL: SELECT ?obj WHERE { wd:Q152318 p:P102 ?s . ?s ps:P102 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Svetlana Savitskaya', 'p': 'party', 'o': '?x0', 't': '1975'}

 Q: What pharmaceutical product has zinc as it's active ingredient?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3781 wd:Q758 . ?sbj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'active ingredient', 'o': 'zinc', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: What is the blood type of Jay Chou?
 SPARQL: select distinct ?answer where { wd:Q238819 wdt:P1853 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jay Chou', 'p': 'blood type', 'o': '?x0'}

 Q: What was the population of the Aland Islands in 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q5689 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aland', 'p': 'population', 'o': '?x0', 't': '1979'}

 Q: Which is the capital of Tulunids?
 SPARQL: select distinct ?answer where { wd:Q726798 wdt:P36 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tulunids', 'p': 'capital', 'o': '?x0'}

 Q: What is {film genre} of {musician} of {Hold me in your arms (song)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26689546 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hold me in your arms (song)', 'p': 'musician', 'o': '$y0'}}

 Q: What team did Sourav Ganguly play for starting in 2005?
 SPARQL: SELECT ?obj WHERE { wd:Q561487 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sourav Ganguly', 'p': 'team', 'o': '?x0', 't': '2005'}

 Q: Mention the award handed over to the daughter of Alexander II of Russia
 SPARQL: SELECT ?answer WHERE { wd:Q83171 wdt:P22 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander II of Russia', 'p': 'daughter of', 'o': '$y0'}}

 Q: What is the {place of death} and the {cause of death} of {Lewis_Carroll} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q38082 wdt:P20 ?ans_1 . wd:Q38082 wdt:P509 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Lewis Carroll', 'p': 'place of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Lewis Carroll', 'p': 'cause of death', 'o': '?x1'}]

 Q: What is {is the antonym of} of {event} of {Marcelo Ariel Gelman Schuberoff} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55222552 wdt:P793 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marcelo Ariel Gelman Schuberoff', 'p': 'event', 'o': '$y0'}}

 Q: What is {type of music} of {from work} of {Guitar Player} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42384429 wdt:P1441 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guitar Player', 'p': 'from work', 'o': '$y0'}}

 Q: What is <Kansas Sports Hall of Fame ID> of <Al Oerter> ?
 SPARQL: select distinct ?answer where { wd:Q52642 wdt:P4366 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Al Oerter', 'p': 'Kansas Sports Hall of Fame ID', 'o': '?x0'}

 Q: When did member of sports team of Ali Daei and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q159622 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is {position held} of {Gregory II} that is {series ordinal} is {89} ?
 SPARQL: SELECT ?obj WHERE { wd:Q103321 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1545 ?x filter(contains(?x,'89')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregory II', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '89'}}}

 Q: How many official religions are with {Goguryeo} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q28370 wdt:P3075 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Goguryeo', 'p': 'official religion', 'o': '?x0'}

 Q: How many occupations does Nancy Cartwright have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q229211 wdt:P106 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nancy Cartwright', 'p': 'occupation', 'o': '?x0'}

 Q: What are the moon of Saturn which start with the letter titan
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1972 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'titan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'moon of Saturn'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'titan'}}

 Q: Which Android One has the largest maximum size or capacity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q18063397 . ?ent wdt:P3559 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum size or capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Android One'}}

 Q: What is the {human} for {cast member} of {60 Minutes}
 SPARQL:  select distinct ?obj where { wd:Q247869 wdt:P161 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '60 Minutes', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When did spouse of Andriy Shevchenko and start time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41244 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is the {nuclear explosion} for {designed by} of {Manhattan Project}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q127050 . ?sbj wdt:P31 wd:Q2656967 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Manhattan Project', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nuclear explosion'}}

 Q: What is {family name} of {Gerty Cori} that is {has cause} is {marriage} ?
 SPARQL: SELECT ?obj WHERE { wd:Q204733 p:P734 ?s . ?s ps:P734 ?obj . ?s pq:P828 wd:Q8445 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'family name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerty Cori', 'p': 'family name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has cause', 'o': 'marriage'}}}

 Q: What is {nominated for} of {La Dolce Vita} that is {statement is subject of} is {34th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q18407 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917163 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'La Dolce Vita', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '34th Academy Awards'}}}

 Q: What is {borders} of {Kaifeng}, that has {has rural cities} is {Fengquan District} ?
 SPARQL: SELECT ?answer WHERE { wd:Q208471 wdt:P47 ?answer . ?answer wdt:P150 wd:Q1198617}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kaifeng', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has rural cities', 'o': 'Fengquan District'}}

 Q: What is {part of constellation} of {orbited by} of {Milky Way} ?
 SPARQL: SELECT ?answer WHERE { wd:Q321 wdt:P398 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milky Way', 'p': 'orbited by', 'o': '$y0'}}

 Q: what is the {start time} for {Aleksey Konstantinovich Tolstoy} has {spouse} as {Sofia Andreevna Bachmeteva} ?
 SPARQL: SELECT ?value WHERE { wd:Q212575 p:P26 ?s . ?s ps:P26 wd:Q4079844 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksey Konstantinovich Tolstoy', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Sofia Andreevna Bachmeteva'}}}

 Q: Who gave the{user} of {theme} of {Gingerbread Man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15233326 wdt:P144 ?X . ?X wdt:P1535 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'user', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gingerbread Man', 'p': 'theme', 'o': '$y0'}}

 Q: What country has The Star-Spangled Banner as its anthem?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P85 wd:Q44696 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'The Star-Spangled Banner', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: tell me fossil taxon name has the word velociraptor in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'velociraptor')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fossil taxon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'velociraptor'}}

 Q: What is divided into the Chiba Prefecture, which has a gps coordinate of 140.367?
 SPARQL: SELECT ?answer WHERE { wd:Q80011 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'140.367'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chiba Prefecture', 'p': 'divided into', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gps coordinate', 'o': '140.367'}}

 Q: What is <focal length> of <Very Large Telescope> ?
 SPARQL: select distinct ?answer where { wd:Q265628 wdt:P2151 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Very Large Telescope', 'p': 'focal length', 'o': '?x0'}

 Q: Give me {deity} that {wears} {himation} and which contains the word {christ} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178885 . ?sbj wdt:P3828 wd:Q781731 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'christ')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wears', 'o': 'himation'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'christ'}}

 Q: What award did Dave Brubeck receive in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q108597 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dave Brubeck', 'p': 'award', 'o': '?x0', 't': '1996'}

 Q: Which is the ICTV virus genome composition for HIV?
 SPARQL: select distinct ?answer where { wd:Q15787 wdt:P4628 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'HIV', 'p': 'ICTV virus genome composition', 'o': '?x0'}

 Q: Which is the Australian Antarctic Gazetteer ID for Australian Antarctic Territory?
 SPARQL: select distinct ?answer where { wd:Q178994 wdt:P3626 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Australian Antarctic Territory', 'p': 'Australian Antarctic Gazetteer ID', 'o': '?x0'}

 Q: what is the {start time} for {Pervez Musharraf} has {position held} as {Chairman Joint Chiefs of Staff Committee} ?
 SPARQL: SELECT ?value WHERE { wd:Q40495 p:P39 ?s . ?s ps:P39 wd:Q5068077 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pervez Musharraf', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chairman Joint Chiefs of Staff Committee'}}}

 Q: What is <participant of> of <Magnus Carlsen> ?
 SPARQL: select distinct ?answer where { wd:Q106807 wdt:P1344 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Magnus Carlsen', 'p': 'participant of', 'o': '?x0'}

 Q: What is the {scale of temperature} for {measured by} of {temperature}
 SPARQL:  select distinct ?obj where { wd:Q11466 wdt:P1880 ?obj . ?obj wdt:P31 wd:Q2394680 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'temperature', 'p': 'measured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scale of temperature'}}

 Q: Did {Louis_Armstrong} {record label} {Columbia Records} and {GRP Records} ?
 SPARQL: ASK WHERE { wd:Q1779 wdt:P264 wd:Q183387 . wd:Q1779 wdt:P264 wd:Q671097 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Louis Armstrong', 'p': 'record label', 'o': '?x0', '?x0': 'Columbia Records'}, {'h': 'IS', 'v': '?x1', 's': 'Louis Armstrong', 'p': 'record label', 'o': '?x1', '?x1': 'GRP Records'}]

 Q: What is the ortholog of RHO?
 SPARQL: select distinct ?answer where { wd:Q14859555 wdt:P684 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'RHO', 'p': 'ortholog', 'o': '?x0'}

 Q: How many defendants were there in the Nuremberg trials?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80130 wdt:P1591 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'defendant', 'o': '?x0'}

 Q: what is the {number of matches played} for {Hidetoshi Nakata} has {member of sports team} as {Japan national under-17 football team} ?
 SPARQL: SELECT ?value WHERE { wd:Q128725 p:P54 ?s . ?s ps:P54 wd:Q3044339 . ?s pq:P1350 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hidetoshi Nakata', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Japan national under-17 football team'}}}

 Q: Is the metallicity of the Messier 30, -2.27?
 SPARQL: ASK WHERE { wd:Q13653 wdt:P2227 ?obj filter(?obj = -2.27) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Messier 30', 'p': 'metallicity', 'o': '?x0', '?x0': '-2.27'}

 Q: Who gave the  {ideology} of {member of} of {Lola Iturbe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9023549 wdt:P463 ?X . ?X wdt:P1142 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ideology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lola Iturbe', 'p': 'member of', 'o': '$y0'}}

 Q: Who is the {national association football team} for {home venue} of {Wembley Stadium}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P115 wd:Q128468 . ?sbj wdt:P31 wd:Q6979593 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'home venue', 'o': 'Wembley', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national association football team'}}

 Q: what is the {series ordinal} for {Adam Weishaupt} has {given name} as {Adam} ?
 SPARQL: SELECT ?value WHERE { wd:Q159481 p:P735 ?s . ?s ps:P735 wd:Q347181 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adam Weishaupt', 'p': 'first name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'first name', 'o': 'Adam'}}}

 Q: What is country for  human breast milk ?
 SPARQL: select distinct ?answer where { ?answer wdt:P17 wd:Q22728}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'human breast milk'}

 Q: What is {treated by} of {treats} of {tobramycin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1758380 wdt:P2175 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'tobramycin', 'p': 'treats', 'o': '$y0'}}

 Q: Who is inspired by Statue of Liberty?
 SPARQL: select distinct ?answer where { ?answer wdt:P941 wd:Q9202}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'inspired by', 'o': 'Statue of Liberty'}

 Q: What part of Missouri was Mark Twain born in?
 SPARQL: SELECT ?obj WHERE { wd:Q7245 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1581 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mark Twain', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Missouri'}}}

 Q: What is the LoC Classification of the government of the Kingdom of Funan?
 SPARQL: SELECT ?answer WHERE { wd:Q867782 wdt:P122 ?X . ?X wdt:P1149 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'LoC Classification', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingdom of Funan', 'p': 'government', 'o': '$y0'}}

 Q: What is the {enzyme} for {found in taxon} of {Homo sapiens}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P703 wd:Q15978631 . ?sbj wdt:P31 wd:Q8047 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'found in taxon', 'o': 'Homo sapiens', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enzyme'}}

 Q: Which is the MAPS poet ID of John Berryman?
 SPARQL: select distinct ?answer where { wd:Q522192 wdt:P5509 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Berryman', 'p': 'MAPS poet ID', 'o': '?x0'}

 Q: What is the ISO 3166-1 numeric code for Kazakhstan?
 SPARQL: select distinct ?answer where { wd:Q232 wdt:P299 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kazakhstan', 'p': 'ISO 3166-1 numeric code', 'o': '?x0'}

 Q: What is the location of birth, with a capital city of Petra, of Junipero Serra?
 SPARQL: SELECT ?answer WHERE { wd:Q522107 wdt:P19 ?answer . ?answer wdt:P36 wd:Q24019630}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Junipero Serra', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Petra'}}

 Q: Which is the academic degree for undergraduate degree?
 SPARQL: select distinct ?answer where { ?answer wdt:P512 wd:Q6008527}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'academic degree', 'o': 'undergraduate degree'}

 Q: What is the {anime} for {producer} of {Hayao Miyazaki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P162 wd:Q55400 . ?sbj wdt:P31 wd:Q1107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'producer', 'o': 'Hayao Miyazaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anime'}}

 Q: Does the foreign direct net outflow of Belarus equate to 898800000?
 SPARQL: ASK WHERE { wd:Q184 wdt:P2140 ?obj filter(?obj = 898800000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Belarus', 'p': 'foreign direct investment net outflow', 'o': '?x0', '?x0': '898800000'}

 Q: What is the {notable work} and the {present in work} of {Noah} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q81422 wdt:P800 ?ans_1 . wd:Q81422 wdt:P1441 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Noah', 'p': 'notable work', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Noah', 'p': 'present in work', 'o': '?x1'}]

 Q: what is the {replaces} for {John Howard} has {position held} as {Member of the Australian House of Representatives} ?
 SPARQL: SELECT ?value WHERE { wd:Q51330 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Howard', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}

 Q: What is the {inner planet} for {facet of} of {history of the world}
 SPARQL:  select distinct ?obj where { wd:Q200325 wdt:P1269 ?obj . ?obj wdt:P31 wd:Q3504248 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'history', 'p': 'facet of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inner planet'}}

 Q: What is the fusion enthalpy for tungsten?
 SPARQL: select distinct ?answer where { wd:Q743 wdt:P2066 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'tungsten', 'p': 'fusion enthalpy', 'o': '?x0'}

 Q: who chronology of topic of continent of Canine Hills ?
 SPARQL: SELECT ?answer WHERE { wd:Q5032401 wdt:P30 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chronology of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Canine Hills', 'p': 'continent', 'o': '$y0'}}

 Q: How many partners does Poseidon have?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P451 wd:Q41127 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'partner', 'o': 'Poseidon'}

 Q: Is it true that the total debt of the Accor equals to -58000000?
 SPARQL: ASK WHERE { wd:Q212599 wdt:P2133 ?obj filter(?obj = -58000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Accor', 'p': 'total debt', 'o': '?x0', '?x0': '-58000000'}

 Q: Give me {Christian Church} that {office held by head of the organisation} {pope} and which contains the word {catholic} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34651 . ?sbj wdt:P2388 wd:Q19546 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'catholic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'pope'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'catholic'}}

 Q: What is {year of death} of {has father} of {Ismail Samani} ?
 SPARQL: SELECT ?answer WHERE { wd:Q862648 wdt:P22 ?X . ?X wdt:P570 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'year of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ismail Samani', 'p': 'father', 'o': '$y0'}}

 Q: What is the {business} for {chief executive officer} of {Mukesh Ambani}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q298547 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chief executive officer', 'o': 'Mukesh Ambani', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is the {word} for {language of work or name} of {English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q1860 . ?sbj wdt:P31 wd:Q8171 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'word'}}

 Q: What is {has edition} of {Abhigyanashakuntalam} that is {language of work or name} is {English} ?
 SPARQL: SELECT ?obj WHERE { wd:Q320594 p:P747 ?s . ?s ps:P747 ?obj . ?s pq:P407 wd:Q1860 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'edition', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abhigyanashakuntalam', 'p': 'edition', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'English'}}}

 Q: What is {spouse} of {Aaliyah} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q11617 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aaliyah', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aaliyah', 'p': 'spouse', 'o': '$y0'}}]

 Q: What Wikipedia article lists the awards Angela Lansbury received?
 SPARQL:  select distinct ?obj where { wd:Q206856 wdt:P166 ?obj . ?obj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Angela Lansbury', 'p': 'awards', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'list'}}

 Q: What natural feature on the Leeward Islands is also on a tributary of the Riviere Roxelane?
 SPARQL: SELECT ?answer WHERE { wd:Q29971 wdt:P706 ?answer . ?answer wdt:P974 wd:Q5649034}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leeward Islands', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Riviere Roxelane'}}

 Q: What was the noble title of Charles the Fat and who was he followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is {people} of {characters} of {The Emperor's New Groove} ?
 SPARQL: SELECT ?answer WHERE { wd:Q223163 wdt:P674 ?X . ?X wdt:P172 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Emperor's New Groove", 'p': 'characters', 'o': '$y0'}}

 Q: Where is Robert McNamara educated at and with what major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q191999 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert McNamara', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert McNamara', 'p': 'educated at', 'o': '$y0'}}]

 Q: William Wordsworth was the citizen of which country in the year 1801?
 SPARQL: SELECT ?obj WHERE { wd:Q45546 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1801')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Wordsworth', 'p': 'citizen of', 'o': '?x0', 't': '1801'}

 Q: What is {given name} of {Kollegah} that is {series ordinal} is {3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q58785 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'3')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'given name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kollegah', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '3'}}}

 Q: what is the {statement is subject of} for {Jesus Christ} has {name} as {Son of man} ?
 SPARQL: SELECT ?value WHERE { wd:Q302 p:P2561 ?s . ?s ps:P2561 ?x filter(contains(?x,'Son of man')) . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jesus', 'p': 'name', 'o': '$y0'}}

 Q: How many members of the sports team are from the Saitama Seibu Lions?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P54 wd:Q325819 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'team', 'o': 'Saitama Seibu Lions'}

 Q: Is Fogle a family name of Jared Fogle?
 SPARQL: ASK WHERE { wd:Q6159960 wdt:P734 wd:Q56244996 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jared Fogle', 'p': 'family name', 'o': '?x0', '?x0': 'Fogle'}]

 Q: What is the {human} for {copyright owner} of {The Little Prince}
 SPARQL:  select distinct ?obj where { wd:Q25338 wdt:P3931 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Little Prince', 'p': 'copyright owner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Does the explosive velocity of the octanitrocubane equals 8080.0?
 SPARQL: ASK WHERE { wd:Q413940 wdt:P2231 ?obj filter(?obj = 8080.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'octanitrocubane', 'p': 'explosive velocity', 'o': '?x0', '?x0': '8080.0'}

 Q: What is {date of death} and {date of birth} of {{Louis IX of France} has {child} as {Margaret of France, Duchess of Brabant}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 wd:Q457111 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Margaret of France, Duchess of Braban'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Margaret of France, Duchess of Braban'}}}]

 Q: How many film editors worked for Star Wars Episode IV: A New Hope?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q17738 wdt:P1040 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'A New Hope', 'p': 'film editor', 'o': '?x0'}

 Q: what is the {character role} for {The Office} has {cast member} as {James Spader} ?
 SPARQL: SELECT ?value WHERE { wd:Q23831 p:P161 ?s . ?s ps:P161 wd:Q296928 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Office', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'James Spader'}}}

 Q: What is the name of the organization represented by Pablo Picasso?
 SPARQL:  select distinct ?obj where { wd:Q5593 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pablo Picasso', 'p': 'represented by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: Does the yield strength of the Alloy 718 equal 996?
 SPARQL: ASK WHERE { wd:Q55843475 wdt:P5529 ?obj filter(?obj = 996.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Alloy 718', 'p': 'yield strength', 'o': '?x0', '?x0': '996.0'}

 Q: Which is the building for the headquarters location of Cathay Pacific?
 SPARQL:  select distinct ?obj where { wd:Q32141 wdt:P159 ?obj . ?obj wdt:P31 wd:Q41176 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cathay Pacific', 'p': 'headquarters location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'building'}}

 Q: What is the subsidiary company of University of Paris whose geocoordinates is 48.956214 2.341933?
 SPARQL: SELECT ?answer WHERE { wd:Q209842 wdt:P355 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'48.956214 2.341933'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of Paris', 'p': 'subsidiary', 'o': '?x0'}

 Q: what is the {start time} for {Santa Fe} has {twinned administrative body} as {Junta de Villalba de Losa} ?
 SPARQL: SELECT ?value WHERE { wd:Q44244 p:P190 ?s . ?s ps:P190 wd:Q1643574 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Santa Fe', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Junta de Villalba de Losa'}}}

 Q: Which is the home world of Neptune?
 SPARQL: select distinct ?answer where { ?answer wdt:P1165 wd:Q332}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'home world', 'o': 'Neptune'}

 Q: Is it true that the points awarded of the 2018 AFL Women's season equals to 2?
 SPARQL: ASK WHERE { wd:Q48523108 wdt:P3260 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "2018 AFL Women's season", 'p': 'points awarded', 'o': '?x0', '?x0': '2'}

 Q: What was the population of Gelsenkirchen on 12-31-2016?
 SPARQL: SELECT ?obj WHERE { wd:Q2765 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gelsenkirchen', 'p': 'population', 'o': '?x0', 't': '2016'}

 Q: What is {spouse} of {Gary Gygax} that is {end time} is {1980-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q25550430 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gary Gygax', 'p': 'spouse', 'o': '?x0', 't': '1980'}

 Q: Which academic field for the history of the United States divides into the state of Michigan?
 SPARQL: SELECT ?answer WHERE { wd:Q131110 wdt:P2578 ?answer . ?answer wdt:P150 wd:Q1166}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of the United States', 'p': 'academic field for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Michigan'}}

 Q: What is the {profession} for {used by} of {brick}
 SPARQL:  select distinct ?obj where { wd:Q40089 wdt:P1535 ?obj . ?obj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'brick', 'p': 'used by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: What is {together with} and {prize money} of {{Guglielmo Marconi} has {award received} as {Nobel Prize in Physics}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36488 p:P166 ?s . ?s ps:P166 wd:Q38104 . ?s pq:P1706 ?value1 . ?s pq:P2121 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guglielmo Marconi', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Prize in Physics'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'money', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guglielmo Marconi', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Prize in Physics'}}}]

 Q: Which is {surface area} of {agent} of {French invasion of Russia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179250 wdt:P710 ?X . ?X wdt:P2046 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'French invasion of Russia', 'p': 'agent', 'o': '$y0'}}

 Q: What is the {podcast} for {presenter} of {John Oliver}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q1701254 . ?sbj wdt:P31 wd:Q24634210 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'John Oliver', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'podcast'}}

 Q: Which war cemetery has the least memorial based burials?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1707610 . ?ent wdt:P2324 ?obj . ?ent wdt:P31 wd:Q5003624} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'burials', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war cemetery', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'memorial'}}}

 Q: What is the population of Richmond at 2011-7-1?
 SPARQL: SELECT ?obj WHERE { wd:Q43421 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Richmond', 'p': 'population', 'o': '?x0', 't': '2011'}

 Q: What is {name after} of {Bohr model}, that has {award} is {Nobel Prize in Physics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q172948 wdt:P138 ?answer . ?answer wdt:P166 wd:Q38104}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bohr model', 'p': 'name after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': 'Nobel Prize in Physics'}}

 Q: What encryption software is used by author Julian Assange?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P50 wd:Q360 . ?sbj wdt:P31 wd:Q5375622 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Julian Assange', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'encryption software'}}

 Q: Josip Broz Tito is the head of government for what historical country?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q9161 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Josip Broz Tito', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: what is the {point in time} for {The Bold and the Beautiful} has {award received} as {International TV Audience Award for Best Telenovela/Soap Opera} ?
 SPARQL: SELECT ?value WHERE { wd:Q82729 p:P166 ?s . ?s ps:P166 wd:Q23011213 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'The Bold and the Beautiful', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'International TV Audience Award for Best Telenovela/Soap Opera'}, 't': '?x0'}

 Q: What is the great power with maximum exports?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q185145 . ?ent wdt:P2135 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'exports', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'great power'}}

 Q: What is the {history of a city} for {history of topic} of {Montevideo}
 SPARQL:  select distinct ?obj where { wd:Q1335 wdt:P2184 ?obj . ?obj wdt:P31 wd:Q28747937 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Montevideo', 'p': 'history of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'history of a city'}}

 Q: what is the {country} for {Niccolò Machiavelli} has {place of death} as {Sant'Andrea in Percussina} ?
 SPARQL: SELECT ?value WHERE { wd:Q1399 p:P20 ?s . ?s ps:P20 wd:Q2509922 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Niccolò Machiavelli', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': "Sant'Andrea in Percussina"}}}

 Q: Which are the overlies for basement?
 SPARQL: select distinct ?answer where { ?answer wdt:P568 wd:Q2143968}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'overlies', 'o': 'basement'}

 Q: Give me {eonothem} that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2669627 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'eonothem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: what is the {temperature} for {2,4,6-trinitrotoluene} which has {density} as {1.65} ?
 SPARQL: SELECT ?value WHERE { wd:Q170167 p:P2054 ?s . ?s ps:P2054 ?x filter(contains(?x,'1.65')) . ?s pq:P2076 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '2,4,6-trinitrotoluene', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'density', 'o': '1.65'}}}

 Q: What is the {human} for {stepparent} of {John Stuart Mill}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3448 wd:Q50020 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stepparent', 'o': 'John Stuart Mill', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {natural product of taxon} are to/by {Cucumis sativus} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1582 wd:Q23425 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'natural product of taxon', 'o': 'Cucumis sativus'}

 Q: What is the galaxy with the lowest redshift whose constellation is Boötes?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q318 . ?ent wdt:P1090 ?obj . ?ent wdt:P59 wd:Q8667} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'redshift', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'galaxy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Boötes'}}}

 Q: Which is Gmelin number for sulfate ion?
 SPARQL: select distinct ?answer where { wd:Q172290 wdt:P1578 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sulfate ion', 'p': 'Gmelin number', 'o': '?x0'}

 Q: Is the beam of the Etchells equal to 2.1?
 SPARQL: ASK WHERE { wd:Q930962 wdt:P2261 ?obj filter(?obj = 2.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Etchells', 'p': 'beam', 'o': '?x0', '?x0': '2.1'}

 Q: What is {equivalent of} of {Thoth}, that has {daughter} is {Norax} ?
 SPARQL: SELECT ?answer WHERE { wd:Q146921 wdt:P460 ?answer . ?answer wdt:P40 wd:Q2661436}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thoth', 'p': 'equivalent of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'daughter', 'o': 'Norax'}}

 Q: Give me {space probe} that contains the word {voyager} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q26529 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voyager')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space probe'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'voyager'}}

 Q: which is interaction of academic field for nuclear physics?
 SPARQL: SELECT ?answer WHERE { wd:Q81197 wdt:P2578 ?X . ?X wdt:P517 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'interaction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nuclear physics', 'p': 'academic field for', 'o': '$y0'}}

 Q: What us Clovis I's noble title and who follows?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q82339 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is the {position} for {office held by head of state} of {Empire of Japan}
 SPARQL:  select distinct ?obj where { wd:Q188712 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire of Japan', 'p': 'office held by head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is the {historical country} for {capital} of {Belgrade}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q3711 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Belgrade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: Does the Mariana Trench have an elevation above sea level that is less than -13192.8?
 SPARQL: ASK WHERE { wd:Q510 wdt:P2044 ?obj filter(?obj < -13192.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Mariana Trench', 'p': 'elevation above sea level', 'o': '?x0', '?x0': '-13192.8'}

 Q: Where is Pat Sajak's birthplace in the province of Cook County?
 SPARQL: SELECT ?answer WHERE { wd:Q705419 wdt:P19 ?answer . ?answer wdt:P131 wd:Q108418}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pat Sajak', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Cook County'}}

 Q: Does the AKROLOY PARA ICF 40 flexual modulus equal to 35000?
 SPARQL: ASK WHERE { wd:Q57273218 wdt:P5681 ?obj filter(?obj = 35000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AKROLOY PARA ICF 40', 'p': 'flexural modulus', 'o': '?x0', '?x0': '35000'}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: What are  the archipelago  which start with the letter I
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33837 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'î')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archipelago'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'î'}}

 Q: Which are the coordinates of easternmost point of Estonia?
 SPARQL: select distinct ?answer where { wd:Q191 wdt:P1334 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Estonia', 'p': 'coordinates of easternmost point', 'o': '?x0'}

 Q: What award did Sidney Lumet win in 2009?
 SPARQL: SELECT ?obj WHERE { wd:Q51559 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sidney Lumet', 'p': 'award', 'o': '?x0', 't': '2009'}

 Q: What is {place of burial} of {Alfred Nobel} that is {burial plot reference} is {Kvarter 04A, gravnummer 170} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23810 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P965 ?x filter(contains(?x,'Kvarter 04A, gravnummer 170')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alfred Nobel', 'p': 'place of burial', 'o': '?x0'}

 Q: What is <Medium username> of <Roxane Gay> ?
 SPARQL: select distinct ?answer where { wd:Q16202911 wdt:P3899 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roxane Gay', 'p': 'Medium username', 'o': '?x0'}

 Q: What is the {academia} for {language regulatory body} of {Esperanto}
 SPARQL:  select distinct ?obj where { wd:Q143 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q1211427 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Esperanto', 'p': 'language regulatory body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academia'}}

 Q: What is {characters} of {series} of {Black Sails, season 2} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21185947 wdt:P179 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Black Sails, season 2', 'p': 'series', 'o': '$y0'}}

 Q: What spacecraft has the longest orbital period?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q40218 . ?ent wdt:P2146 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'orbital period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spacecraft'}}

 Q: What engine family has the highest compression ratio?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15057020 . ?ent wdt:P1247 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'compression ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'engine family'}}

 Q: What is {bottom line} of {manufactured by} of {Xbox} ?
 SPARQL: SELECT ?answer WHERE { wd:Q132020 wdt:P176 ?X . ?X wdt:P2295 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bottom line', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Xbox', 'p': 'manufactured by', 'o': '$y0'}}

 Q: What is the {twin city} of {New York City}, that is also the {birth place} of {Judit Polgar}?
 SPARQL: SELECT ?answer WHERE { wd:Q183250 wdt:P19 ?answer . ?answer wdt:P190 wd:Q60}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Judit Polgar', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'New York City'}}

 Q: What is the noble title of Charles the Fat and follows.
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: what is the {statement supported by} for {Autonomous Republic of Crimea} has {head of government} as {Sergey Aksyonov} ?
 SPARQL: SELECT ?value WHERE { wd:Q756294 p:P6 ?s . ?s ps:P6 wd:Q15838823 . ?s pq:P3680 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement supported by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Autonomous Republic of Crimea', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Sergey Aksyonov'}}}

 Q: Which stockholder has a label of Wanda Jackson?
 SPARQL: SELECT ?answer WHERE { wd:Q235223 wdt:P264 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stockholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wanda Jackson', 'p': 'label', 'o': '$y0'}}

 Q: Was epilepsy health specialty psychology and psychiatry?
 SPARQL: ASK WHERE { wd:Q41571 wdt:P1995 wd:Q9418 . wd:Q41571 wdt:P1995 wd:Q7867 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'epilepsy', 'p': 'health specialty', 'o': '?x0', '?x0': 'psychology'}, {'h': 'IS', 'v': '?x1', 's': 'epilepsy', 'p': 'health specialty', 'o': '?x1', '?x1': 'psychiatry'}]

 Q: What is composed by Thaïs? Who is the child of Alexis Massenet?
 SPARQL: SELECT ?answer WHERE { wd:Q1144467 wdt:P86 ?answer . ?answer wdt:P22 wd:Q20895527}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thaïs', 'p': 'composed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child of', 'o': 'Alexis Massenet'}}

 Q: Which is the theatrical genre that starts with the letter z?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15850590 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theatrical genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is the translation of Dongguan in pinyin?
 SPARQL: select distinct ?answer where { wd:Q59218 wdt:P1721 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dongguan', 'p': 'pinyin', 'o': '?x0'}

 Q: Tell me decimal classification whose name has the word classification in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1207369 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'classification')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'decimal classification'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'classification'}}

 Q: What is the {municipality of Germany} for {shares border with} of {Hamburg}
 SPARQL:  select distinct ?obj where { wd:Q1055 wdt:P47 ?obj . ?obj wdt:P31 wd:Q262166 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamburg', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Germany'}}

 Q: What is the {human} for {sibling} of {Bashar al-Assad}
 SPARQL:  select distinct ?obj where { wd:Q44329 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bashar al-Assad', 'p': 'sibling', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {slaughtered by} of {cinematographer} of {Jim: The James Foley Story} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24593936 wdt:P344 ?X . ?X wdt:P157 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'slaughtered by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jim: The James Foley Story', 'p': 'cinematographer', 'o': '$y0'}}

 Q: What is {stock exchange} of {ING Group} that is {ticker symbol} is {ING} ?
 SPARQL: SELECT ?obj WHERE { wd:Q645708 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x filter(contains(?x,'ING')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stock exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ING', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ticker symbol', 'o': 'ing'}}}

 Q: What are the invasion which start with the letter  migration
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q467011 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'migration')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'invasion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'migration'}}

 Q: What is the telephone numbering plan of the seat of Union Cycliste Internationale ?
 SPARQL: SELECT ?answer WHERE { wd:Q48663 wdt:P159 ?X . ?X wdt:P473 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'telephone numbering plan', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Union Cycliste Internationale', 'p': 'seat', 'o': '$y0'}}

 Q: Which is the Ustream username for National Aeronautics and Space Administration?
 SPARQL: select distinct ?answer where { wd:Q23548 wdt:P4017 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'National Aeronautics and Space Administration', 'p': 'Ustream username', 'o': '?x0'}

 Q: Who is the writer of the preceeds of Choke?
 SPARQL: SELECT ?answer WHERE { wd:Q2466091 wdt:P156 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Choke', 'p': 'preceeds', 'o': '$y0'}}

 Q: What is {elected in} and {end cause} of {{John Major} has {position held} as {Member of the 51st Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q9559 p:P39 ?s . ?s ps:P39 wd:Q41582627 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Major', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 51st Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Major', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 51st Parliament of the United Kingdom'}}}]

 Q: What is the {holding company} with the {MAX(net profit)} whose {country} is {United States of America}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q219577 . ?ent wdt:P2295 ?obj . ?ent wdt:P17 wd:Q30 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'net profit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'holding company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'US'}}}

 Q: What is the {human} for {chief executive officer} of {IBM}
 SPARQL:  select distinct ?obj where { wd:Q37156 wdt:P169 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'IBM', 'p': 'chief executive officer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {manner of death} are to/by {lynching} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1196 wd:Q486775 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'manner of death', 'o': 'lynching'}

 Q: what is the {language of work or name} for {Meditations} has {has edition} as {Marcus Aurelius Antoninus, His Meditations concerning himselfe} ?
 SPARQL: SELECT ?value WHERE { wd:Q1152283 p:P747 ?s . ?s ps:P747 wd:Q50279195 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Meditations', 'p': 'edition', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'edition', 'o': 'Meditations'}}}

 Q: Is the shear modulas of the glass equal to 26.2?
 SPARQL: ASK WHERE { wd:Q11469 wdt:P5673 ?obj filter(?obj = 26.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'glass', 'p': 'shear modulus', 'o': '?x0', '?x0': '26.2'}

 Q: Who is the {human} for {replaces} of {Ayman al-Zawahiri}
 SPARQL:  select distinct ?obj where { wd:Q186316 wdt:P1365 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ayman al-Zawahiri', 'p': 'replaces', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the type of kinship for William the Conqueror has relative as Edward the Confessor?
 SPARQL: SELECT ?value WHERE { wd:Q37594 p:P1038 ?s . ?s ps:P1038 wd:Q130005 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William the Conqueror', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Edward the Confessor'}}}

 Q: Which is the archINFORM person or group ID for Thomas Jefferson?
 SPARQL: select distinct ?answer where { wd:Q11812 wdt:P5508 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thomas Jefferson', 'p': 'archINFORM person or group ID', 'o': '?x0'}

 Q: Tell me about Screen Actors Guild Award for award received of Mary Tyler Moore?
 SPARQL:  select distinct ?obj where { wd:Q41342 wdt:P166 ?obj . ?obj wdt:P31 wd:Q268200 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mary Tyler Moore', 'p': 'award received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Screen Actors Guild Award'}}

 Q: Is true that Mecca was the capital of Makkah Region and Hejaz Vilayet?
 SPARQL: ASK WHERE { wd:Q5806 wdt:P1376 wd:Q234167 . wd:Q5806 wdt:P1376 wd:Q3558385 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mecca', 'p': 'capital of', 'o': '?x0', '?x0': 'Makkah Region'}, {'h': 'IS', 'v': '?x1', 's': 'Mecca', 'p': 'capital of', 'o': '?x1', '?x1': 'Hejaz Vilayet'}]

 Q: Does the defined daily dose of zonisamide equal to 0.2?
 SPARQL: ASK WHERE { wd:Q219957 wdt:P4250 ?obj filter(?obj = 0.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'zonisamide', 'p': 'defined daily dose', 'o': '?x0', '?x0': '0.2'}

 Q: Wich means{conjugate base} in {ammonium cation} ?
 SPARQL: select distinct ?answer where { wd:Q190901 wdt:P4149 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ammonium cation', 'p': 'conjugate base', 'o': '?x0'}

 Q: What is {painting of} of {heart}, that has {found in species} is {human} ?
 SPARQL: SELECT ?answer WHERE { wd:Q826930 wdt:P180 ?answer . ?answer wdt:P703 wd:Q5}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'heart', 'p': 'painting of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'found in species', 'o': 'human'}}

 Q: Henry Goudy is the position holder of what professorship?
 SPARQL: SELECT ?answer WHERE { wd:Q16976151 wdt:P803 ?X . ?X wdt:P1308 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position holder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Goudy', 'p': 'professorship', 'o': '$y0'}}

 Q: What is Davis Cup player ID for Ken Rosewall?
 SPARQL: select distinct ?answer where { wd:Q312728 wdt:P2641 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ken Rosewall', 'p': 'Davis Cup player ID', 'o': '?x0'}

 Q: What is {died in} of {Pōmare II}, that has {Wikivoyage banner} is {Moorea banner.jpg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q887744 wdt:P20 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Moorea banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pōmare II', 'p': 'died in', 'o': '?x0'}

 Q: What what is Olympic sport authority by International Biathlon Union  and which that starts with b
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q212434 . ?sbj wdt:P797 wd:Q866910 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Olympic sport', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'authority', 'o': 'International Biathlon Union'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: How many {allegiance} are to/by {West Germany} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P945 wd:Q713750 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'allegiance', 'o': 'West Germany'}

 Q: what is the {for work} for {Alan Arkin} has {nominated for} as {Screen Actors Guild Award for Outstanding Performance by a Male Actor in a Supporting Role} ?
 SPARQL: SELECT ?value WHERE { wd:Q108283 p:P1411 ?s . ?s ps:P1411 wd:Q1260789 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Arkin', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Screen Actors Guild Award for Outstanding Performance by a Male Actor in a Supporting Role'}}}

 Q: what is the {academic degree} for {Bjarne Stroustrup} has {educated at} as {University of Cambridge} ?
 SPARQL: SELECT ?value WHERE { wd:Q92620 p:P69 ?s . ?s ps:P69 wd:Q35794 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bjarne Stroustrup', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Cambridge'}}}

 Q: What is {located in time zone} of {Donetsk Oblast} that is {valid in period} is {standard time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2012050 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donetsk Oblast', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'standard time'}}}

 Q: Which is the ARMB member ID of Étienne-Jules Marey?
 SPARQL: select distinct ?answer where { wd:Q289217 wdt:P5329 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Étienne-Jules Marey', 'p': 'ARMB member ID', 'o': '?x0'}

 Q: Who is the publisher and the developer of Minecraft?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q49740 wdt:P123 ?ans_1 . wd:Q49740 wdt:P178 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Minecraft', 'p': 'publisher', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Minecraft', 'p': 'developer', 'o': '?x1'}]

 Q: Tell me the ancient Greek temple that had as architect Chersiphron and contains the word artemis in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q267596 . ?sbj wdt:P84 wd:Q1070392 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'artemis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient Greek temple', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Chersiphron'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'artemis'}}

 Q: Is google's total equity 96,822,000,000.00?
 SPARQL: ASK WHERE { wd:Q95 wdt:P2137 ?obj filter(?obj = 96822000000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Google', 'p': 'total equity', 'o': '?x0', '?x0': '96822000000.0'}

 Q: what is the {point in time} for {Jean Cocteau} has {position held} as {President of the Jury at the Cannes Festival} ?
 SPARQL: SELECT ?value WHERE { wd:Q83158 p:P39 ?s . ?s ps:P39 wd:Q23958341 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jean Cocteau', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the Jury at the Cannes Festival'}, 't': '?x0'}

 Q: What is {country of citizenship} and {place of birth} of {{Roald Dahl} has {occupation} as {writer}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q25161 p:P106 ?s . ?s ps:P106 wd:Q36180 . ?s pq:P27 ?value1 . ?s pq:P19 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country of citizenship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roald Dahl', 'p': 'work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work', 'o': 'writer'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'place of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roald Dahl', 'p': 'work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work', 'o': 'writer'}}}]

 Q: how much external subpropertyies are needed for a seat?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q2731419 wdt:P2236 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'seat', 'p': 'external subproperty', 'o': '?x0'}

 Q: What is <Académie française member ID> of <Alfred de Musset> ?
 SPARQL: select distinct ?answer where { wd:Q179680 wdt:P4717 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alfred de Musset', 'p': 'Académie française member ID', 'o': '?x0'}

 Q: What is {safety classification and labelling} of {zinc chloride} that is {NFPA Health} is {3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q204714 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P993 ?x filter(contains(?x,'3')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'zinc chloride', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Health', 'o': '3'}}}

 Q: what is the {point in time} for {Daniel Kahneman} has {award received} as {Leontief Prize for Advancing  the Frontiers of Economic Thought} ?
 SPARQL: SELECT ?value WHERE { wd:Q233950 p:P166 ?s . ?s ps:P166 wd:Q1819520 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Daniel Kahneman', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Leontief Prize for Advancing  the Frontiers of Economic Thought'}, 't': '?x0'}

 Q: which public research university name was  starts with u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q62078547 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public research university'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is the {human} for {doctoral advisor} of {Isaac Newton}
 SPARQL:  select distinct ?obj where { wd:Q935 wdt:P184 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Isaac Newton', 'p': 'doctoral advisor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {twinned administrative body} are to/by {Argenteuil} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P190 wd:Q181946 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Argenteuil'}

 Q: Which chef-lieu was the hometown of George Orwell?
 SPARQL: SELECT ?answer WHERE { wd:Q3335 wdt:P551 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chef-lieu', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Orwell', 'p': 'hometown', 'o': '$y0'}}

 Q: What is <DOI prefix> of <Institute of Electrical and Electronics Engineers> ?
 SPARQL: select distinct ?answer where { wd:Q131566 wdt:P1662 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Institute of Electrical and Electronics Engineers', 'p': 'DOI prefix', 'o': '?x0'}

 Q: How many operating systems does Skype have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q40984 wdt:P306 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Skype', 'p': 'operating system', 'o': '?x0'}

 Q: What is the {Wikimedia category} for {category of associated people} of {Surat}
 SPARQL:  select distinct ?obj where { wd:Q4629 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Surat', 'p': 'category of associated people', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: What sports team did Jonah Lomu play for on 1-1-1999?
 SPARQL: SELECT ?obj WHERE { wd:Q363717 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jonah Lomu', 'p': 'team', 'o': '?x0', 't': '1999'}

 Q: what is the {end time} for {Albert Bierstadt} has {educated at} as {Düsseldorf school of painting} ?
 SPARQL: SELECT ?value WHERE { wd:Q77132 p:P69 ?s . ?s ps:P69 wd:Q680559 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Albert Bierstadt', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Düsseldorf school of painting'}}}

 Q: Moon Jae-in is the head of state of which constitutional republic?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q21001 . ?sbj wdt:P31 wd:Q1520223 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Moon Jae-in', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitutional republic'}}

 Q: What is {death place} of {Paul Verlaine}, that has {prime minister} is {Jean Sylvain Bailly} ?
 SPARQL: SELECT ?answer WHERE { wd:Q755 wdt:P20 ?answer . ?answer wdt:P6 wd:Q1685301}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paul Verlaine', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prime minister', 'o': 'Jean Sylvain Bailly'}}

 Q: What is {award received} of {Alvin Eliot Roth} that is {together with} is {Lloyd Shapley} ?
 SPARQL: SELECT ?obj WHERE { wd:Q28542 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q244739 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alvin Eliot Roth', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Lloyd Shapley'}}}

 Q: Give me {vegetation zone} that {continent} {Europe} and which contains the word {taiga} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2083910 . ?sbj wdt:P30 wd:Q46 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taiga')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vegetation zone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'Europe'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'taiga'}}

 Q: tell me sexual orientation that name has the word sex in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17888 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sex')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sexual orientation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'sex'}}

 Q: what is the {point in time} for {Pius X} has {canonization status} as {Catholic saint} ?
 SPARQL: SELECT ?value WHERE { wd:Q43739 p:P411 ?s . ?s ps:P411 wd:Q3464126 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pius X', 'p': 'canonization status', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'canonization status', 'o': 'Catholic saint'}, 't': '?x0'}

 Q: Which is the Nobel prize ID of André Gide?
 SPARQL: select distinct ?answer where { wd:Q47484 wdt:P3188 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'André Gide', 'p': 'Nobel prize ID', 'o': '?x0'}

 Q: Which is the name in kana of Akira?
 SPARQL: select distinct ?answer where { wd:Q1905968 wdt:P1814 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Akira', 'p': 'name in kana', 'o': '?x0'}

 Q: what is the {start time} for {Berenice Abbott} has {educated at} as {Ohio State University} ?
 SPARQL: SELECT ?value WHERE { wd:Q231861 p:P69 ?s . ?s ps:P69 wd:Q309331 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berenice Abbott', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Ohio State University'}}}

 Q: how many sexual orientations are bisexual?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P91 wd:Q43200 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sexual orientation', 'o': 'bisexual'}

 Q: Did {John_Williams} {educated at} {University of California, Los Angeles} and {Fiorello H. LaGuardia High School} ?
 SPARQL: ASK WHERE { wd:Q131285 wdt:P69 wd:Q174710 . wd:Q131285 wdt:P69 wd:Q3072747 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Williams', 'p': 'educated at', 'o': '?x0', '?x0': 'University of California, Los Angeles'}, {'h': 'IS', 'v': '?x1', 's': 'John Williams', 'p': 'educated at', 'o': '?x1', '?x1': 'Fiorello H. LaGuardia High School'}]

 Q: What is {environment} of {Street Fighter}, that has {comes before} is {PlayStation 4} ?
 SPARQL: SELECT ?answer WHERE { wd:Q288035 wdt:P400 ?answer . ?answer wdt:P156 wd:Q5014725}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Street Fighter', 'p': 'environment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'comes before', 'o': 'PlayStation 4'}}

 Q: Who was the film starring in the movie Happy Days, the birth place for the movie was in Los Angeles
 SPARQL: SELECT ?answer WHERE { wd:Q518589 wdt:P161 ?answer . ?answer wdt:P19 wd:Q65}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Happy Days', 'p': 'starring', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'birth place', 'o': 'Los Angeles'}}

 Q: What is safety classification and labelling of ferrous sulfate anhydrous, that has publishing house National Fire Protection Association has published?
 SPARQL: SELECT ?answer WHERE { wd:Q214863 wdt:P4952 ?answer . ?answer wdt:P123 wd:Q1806416}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'ferrous sulfate', 'p': 'safety classification and labelling', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'publishing house', 'o': 'National Fire Protection Association'}}

 Q: What is the {Class IIIB combustible liquid} with the {MAX(ceiling exposure limit)} whose {safety classification and labelling} is {NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009059 . ?ent wdt:P2405 ?obj . ?ent wdt:P4952 wd:Q51139288 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ceiling exposure limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IIIB combustible liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}}

 Q: Is it true that Zoroastrianism was the main regulatory text for the Prayer of Bahman Yasht?
 SPARQL: ASK WHERE { wd:Q9601 wdt:P92 wd:Q4842666 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Zoroastrianism', 'p': 'main regulatory text', 'o': '?x0', '?x0': 'Bahman Yasht'}]

 Q: What is the religion and sex of Hugh Laurie?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q49017 wdt:P140 ?ans_1 . wd:Q49017 wdt:P21 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hugh Laurie', 'p': 'religion', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hugh Laurie', 'p': 'sex', 'o': '?x1'}]

 Q: what is the {statement is subject of} for {Mel Gibson} has {award received} as {Academy Award for Best Picture} ?
 SPARQL: SELECT ?value WHERE { wd:Q42229 p:P166 ?s . ?s ps:P166 wd:Q102427 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mel Gibson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Picture'}}}

 Q: Did {Eva_Braun} {sibling} {Gretl Braun} and {Ilse Braun} ?
 SPARQL: ASK WHERE { wd:Q76433 wdt:P3373 wd:Q1165052 . wd:Q76433 wdt:P3373 wd:Q6001165 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Eva Braun', 'p': 'sibling', 'o': '?x0', '?x0': 'Gretl Braun'}, {'h': 'IS', 'v': '?x1', 's': 'Eva Braun', 'p': 'sibling', 'o': '?x1', '?x1': 'Ilse Braun'}]

 Q: What is {noble title} of {Godfrey of Bouillon} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q76721 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Godfrey of Bouillon', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Godfrey of Bouillon', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is {granted by} of {nomination received} of {Thomas Hardy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q132805 wdt:P1411 ?X . ?X wdt:P1027 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'granted by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Hardy', 'p': 'nomination received', 'o': '$y0'}}

 Q: What is {diplomatic relation} of {comes from} of {White Christmas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1131761 wdt:P495 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'White Christmas', 'p': 'comes from', 'o': '$y0'}}

 Q: What was the population of Maryland in 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q1391 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maryland', 'p': 'population', 'o': '?x0', 't': '1980'}

 Q: Give me {performing arts genre} that {used by} {dancing} and which contains the word {dance} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q45971958 . ?sbj wdt:P1535 wd:Q43393537 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dance')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'performing arts genre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used by', 'o': 'dancing'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dance'}}

 Q: what is the {start time} for {Gloria Swanson} has {spouse} as {Wallace Beery} ?
 SPARQL: SELECT ?value WHERE { wd:Q229232 p:P26 ?s . ?s ps:P26 wd:Q322179 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gloria Swanson', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Wallace Beery'}}}

 Q: What is {owned by} of {Oracle Corporation} that is {proportion} is {0.0306} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19900 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P1107 ?x filter(contains(?x,'0.0306')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owned by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oracle Corporation', 'p': 'owned by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'proportion', 'o': '0.0306'}}}

 Q: Which solar calendar contains the word calendar in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q210953 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'calendar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'solar calendar'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'calendar'}}

 Q: How many {natural product of taxon} are to/by {Pinus} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1582 wd:Q12024 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'natural product of taxon', 'o': 'Pinus'}

 Q: Give me {taxon} that {has fruit type} {capsule} and which that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16521 . ?sbj wdt:P4000 wd:Q147768 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has fruit type', 'o': 'capsule'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: what is the {end time} for {Alexander Pope} has {country of citizenship} as {Kingdom of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q164047 p:P27 ?s . ?s ps:P27 wd:Q179876 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Pope', 'p': 'country of citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country of citizenship', 'o': 'Kingdom of England'}}}

 Q: What is {open days} of {British Museum} and {open period to}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?obj . ?s pq:P3028 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'open days', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}]

 Q: What is {presented by} of {series} of {American Idol, season 1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q655900 wdt:P179 ?X . ?X wdt:P371 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'presented by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'American Idol, season 1', 'p': 'series', 'o': '$y0'}}

 Q: What is the {secular state} with the {MAX(total fertility rate)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q859563 . ?ent wdt:P4841 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total fertility rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'secular state'}}

 Q: What is succeeds to part of work of Very Ape ?
 SPARQL: SELECT ?answer WHERE { wd:Q9093082 wdt:P1433 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'succeeds to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Very Ape', 'p': 'part of work', 'o': '$y0'}}

 Q: A solid is what phase of matter?
 SPARQL: select distinct ?answer where { ?answer wdt:P515 wd:Q11438}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'phase of matter', 'o': 'solid'}

 Q: What is {slogan} of {working for} {Vilfredo Pareto} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11031 wdt:P108 ?X . ?X wdt:P1451 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'slogan', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vilfredo Pareto', 'p': 'working for', 'o': '$y0'}}

 Q: Which is the Code of Household Registration and Conscription Information System (Taiwan) of Hualien County?
 SPARQL: select distinct ?answer where { wd:Q249868 wdt:P5020 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hualien County', 'p': 'Code of Household Registration and Conscription Information System (Taiwan)', 'o': '?x0'}

 Q: Which is the OSM tag or key for castle?
 SPARQL: select distinct ?answer where { wd:Q23413 wdt:P1282 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'castle', 'p': 'OSM tag', 'o': '?x0'}

 Q: What is the {human} for {child} of {Nargis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P40 wd:Q159169 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Nargis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the governing body of Aktobe located at street address улица Т. Ахтанова, 50?
 SPARQL: SELECT ?answer WHERE { wd:Q477232 wdt:P797 ?answer . ?answer wdt:P969 ?x FILTER(contains(?x,'улица Т. Ахтанова, 50'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aktobe', 'p': 'governing body', 'o': '?x0'}

 Q: which work place split from Pierre Puvis de Chavannes?
 SPARQL: SELECT ?answer WHERE { wd:Q216873 wdt:P937 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'split from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pierre Puvis de Chavannes', 'p': 'work place', 'o': '$y0'}}

 Q: Which character from Mario wasn´t in Super Mario?
 SPARQL: SELECT ?obj WHERE { wd:Q12379 p:P2868 ?s . ?s ps:P2868 ?obj . ?s pq:P642 wd:Q4802838 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mario', 'p': 'as', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Super Mario'}}}

 Q: What is the {dialect} for {dialect of} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4913 wd:Q5287 . ?sbj wdt:P31 wd:Q33384 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect'}}

 Q: What is <MetroLyrics ID> of <The Internationale> ?
 SPARQL: select distinct ?answer where { wd:Q49617 wdt:P2624 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Internationale', 'p': 'MetroLyrics ID', 'o': '?x0'}

 Q: What item, that is made by DC-10, would have a wound up on date of 1997-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q208075 wdt:P176 ?answer . ?answer wdt:P576 ?x FILTER(contains(YEAR(?x),'1997'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'DC-10', 'p': 'made by', 'o': '?x0', 't': '1997'}

 Q: What is <has attribute> of <Mark the Evangelist> ?
 SPARQL: select distinct ?answer where { wd:Q31966 wdt:P4185 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mark the Evangelist', 'p': 'has attribute', 'o': '?x0'}

 Q: What is the {service on internet by PWN} with the {MAX(number of records)} whose {instance of} is {service on internet by PWN}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q55387247 . ?ent wdt:P4876 ?obj . ?ent wdt:P31 wd:Q55387247 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of records', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'service on internet by PWN'}}

 Q: What is Theatricalia person ID of Paul Scofield ?
 SPARQL: select distinct ?answer where { wd:Q223988 wdt:P2469 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paul Scofield', 'p': 'Theatricalia person ID', 'o': '?x0'}

 Q: Which  is public holiday for Eid al-Adha ?
 SPARQL: select distinct ?answer where { ?answer wdt:P832 wd:Q514400}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'public holiday', 'o': 'Eid al-Adha'}

 Q: What is the chemical compound with the lowest IDLH whose has part is nitrogen?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2129 ?obj . ?ent wdt:P527 wd:Q627} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'IDLH', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'nitrogen'}}}

 Q: What is the {atmosphere} for {studied by} of {meteorology}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2579 wd:Q25261 . ?sbj wdt:P31 wd:Q8104 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'meteorology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'atmosphere'}}

 Q: Which drug is used for treatment of multiple sclerosis?
 SPARQL: select distinct ?answer where { wd:Q8277 wdt:P2176 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'multiple sclerosis', 'p': 'used for treatment', 'o': '?x0'}

 Q: what is the {point in time} for {Hugh Jackman} has {award received} as {Golden Globe Award for Best Actor – Motion Picture Musical or Comedy} ?
 SPARQL: SELECT ?value WHERE { wd:Q129591 p:P166 ?s . ?s ps:P166 wd:Q181883 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Hugh Jackman', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Golden Globe Award for Best Actor – Motion Picture Musical or Comedy'}, 't': '?x0'}

 Q: What are the road bridge which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q537127 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road bridge'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {tributary} of {Ussuri River} that is {direction} is {right} ?
 SPARQL: SELECT ?obj WHERE { wd:Q207777 p:P974 ?s . ?s ps:P974 ?obj . ?s pq:P560 wd:Q14565199 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ussuri River', 'p': 'tributary', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'direction', 'o': 'right'}}}

 Q: What is <has anatomical branch> of <bronchus> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3262 wd:Q181602}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has anatomical branch', 'o': 'bronchus'}

 Q: What is {disease} of {son of} of {Daniel Wayne Smith} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2566243 wdt:P25 ?X . ?X wdt:P1050 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disease', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Daniel Wayne Smith', 'p': 'son of', 'o': '$y0'}}

 Q: What is the attendee that participated in Belarus in the Eurovision Song Contest 2004?
 SPARQL: SELECT ?answer WHERE { wd:Q1899987 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'attendee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belarus in the Eurovision Song Contest 2004', 'p': 'participated in', 'o': '$y0'}}

 Q: What is the binding energy or carbon-14?
 SPARQL: select distinct ?answer where { wd:Q840660 wdt:P2154 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'carbon-14', 'p': 'binding energy', 'o': '?x0'}

 Q: What is {human population} of {location of narrative} of {White Teeth} ?
 SPARQL: SELECT ?answer WHERE { wd:Q866980 wdt:P840 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'White Teeth', 'p': 'location of narrative', 'o': '$y0'}}

 Q: What areas are located in the administrative territorial entity and are located in the time zone of The Bronx?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q18426 wdt:P131 ?ans_1 . wd:Q18426 wdt:P421 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Bronx', 'p': 'located in the administrative territorial entity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Bronx', 'p': 'time zone', 'o': '?x1'}]

 Q: Give me {declaration of independence} that {signatory} {James Wilson} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1464916 . ?sbj wdt:P1891 wd:Q365181 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'declaration of independence', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'signatory', 'o': 'James Wilson'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Oscar Niemeyer died in Rio de Janeiro, which is located in what country?
 SPARQL: SELECT ?value WHERE { wd:Q134165 p:P20 ?s . ?s ps:P20 wd:Q8678 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oscar Niemeyer', 'p': 'died in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'died in', 'o': 'Rio de Janeiro'}}}

 Q: Is Jimmy Page's instrument the Fender Telecaster electric guitar?
 SPARQL: ASK WHERE { wd:Q165467 wdt:P1303 wd:Q78987 . wd:Q165467 wdt:P1303 wd:Q623103 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jimmy Page', 'p': 'instrument', 'o': '?x0', '?x0': 'electric guitar'}, {'h': 'IS', 'v': '?x1', 's': 'Jimmy Page', 'p': 'instrument', 'o': '?x1', '?x1': 'Fender Telecaster'}]

 Q: What is {member of} of {John William Strutt, 3rd Baron Rayleigh}, that has {preceeds} is {Berlin-Brandenburg Academy of Sciences and Humanities} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83297 wdt:P463 ?answer . ?answer wdt:P156 wd:Q219989}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John William Strutt, 3rd Baron Rayleigh', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'preceeds', 'o': 'Berlin-Brandenburg Academy of Sciences and Humanities'}}

 Q: What was the position held by Louis Philippe I, later replaced by Casimir-Louis-Victurnien de Rochechouart de Mortemart?
 SPARQL: SELECT ?obj WHERE { wd:Q7771 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q2756699 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis Philippe I', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Casimir-Louis-Victurnien de Rochechouart de Mortemart'}}}

 Q: Is the spin quantum number of samarium-144 equal to 0?
 SPARQL: ASK WHERE { wd:Q1862339 wdt:P1122 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'samarium-144', 'p': 'spin quantum number', 'o': '?x0', '?x0': '0'}

 Q: Where was the royal house of life partner of Stephen Tennant?
 SPARQL: SELECT ?answer WHERE { wd:Q7610665 wdt:P451 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'house', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stephen Tennant', 'p': 'partner', 'o': '$y0'}}

 Q: What are the resource which start with the letter N
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1554231 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'resource'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is the {next job holder} in {West Germany} that is a {member of} an {Asian Development Bank}?
 SPARQL: SELECT ?answer WHERE { wd:Q713750 wdt:P1366 ?answer . ?answer wdt:P463 wd:Q188822}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'West Germany', 'p': 'next job holder', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Asian Development Bank'}}

 Q: Which is the British Council writer ID of Salman Rushdie?
 SPARQL: select distinct ?answer where { wd:Q44306 wdt:P5364 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman Rushdie', 'p': 'British Council writer ID', 'o': '?x0'}

 Q: When Michael Ellis DeBakey was awarded as Lomonosov Gold Medal?
 SPARQL: SELECT ?value WHERE { wd:Q335003 p:P166 ?s . ?s ps:P166 wd:Q1340199 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Michael Ellis DeBakey', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Lomonosov Gold Medal'}, 't': '?x0'}

 Q: What is <Nationalmuseum Sweden artist ID> of <Jean Arp> ?
 SPARQL: select distinct ?answer where { wd:Q153739 wdt:P2538 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean Arp', 'p': 'Nationalmuseum Sweden artist ID', 'o': '?x0'}

 Q: what is the {end time} for {Zeno} has {position held} as {Byzantine emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q183452 p:P39 ?s . ?s ps:P39 wd:Q18577504 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zeno', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Byzantine emperor'}}}

 Q: The Dreamers' was originally written in the language of what state?
 SPARQL: SELECT ?answer WHERE { wd:Q822946 wdt:P364 ?X . ?X wdt:P17 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'state', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Dreamers', 'p': 'language', 'o': '$y0'}}

 Q: What painting depicts Barack Obama
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P180 wd:Q76 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'Barack Obama', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: Which aircraft family has the highest glide ratio?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056993 . ?ent wdt:P1470 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum glide ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: What is {school attended} of {Mohammad Mosaddegh}, that has {category for employees of the organization} is {Category:University of Paris faculty} ?
 SPARQL: SELECT ?answer WHERE { wd:Q123037 wdt:P69 ?answer . ?answer wdt:P4195 wd:Q7997009}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mohammad Mosaddegh', 'p': 'school attended', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category for employees of the organization', 'o': 'Category:University of Paris faculty'}}

 Q: What is the ortholog of AVP?
 SPARQL: select distinct ?answer where { ?answer wdt:P684 wd:Q12009087}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'ortholog', 'o': 'AVP'}

 Q: Is it true that the unemployment rate of south africa is less than 32.64?
 SPARQL: ASK WHERE { wd:Q258 wdt:P1198 ?obj filter(?obj < 32.64) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'South Africa', 'p': 'unemployment rate', 'o': '?x0', '?x0': '32.64'}

 Q: Which is the Songfacts artist ID of Lou Reed?
 SPARQL: select distinct ?answer where { wd:Q189080 wdt:P5287 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lou Reed', 'p': 'Songfacts artist ID', 'o': '?x0'}

 Q: How many connecting lines are there for the Channel Tunnel?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q10257 wdt:P81 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Channel Tunnel', 'p': 'connecting line', 'o': '?x0'}

 Q: Give me {language} that {linguistic typology} {Zero-marking language} and which that starts with {'i'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34770 . ?sbj wdt:P4132 wd:Q17141330 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'linguistic typology', 'o': 'Zero-marking language'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: Give me the countable set with the lower limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q185478 . ?ent wdt:P5447 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'lower limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'countable set'}}

 Q: Is Etruschi the city of culture?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2596 wd:Q17161 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'culture', 'o': 'Etruschi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: Is the heart rate of Cavia porcellus greater than 300?
 SPARQL: ASK WHERE { wd:Q79803 wdt:P3395 ?obj filter(?obj > 300.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Cavia porcellus', 'p': 'heart rate', 'o': '?x0', '?x0': '300.0'}

 Q: Which is the icon for Cascading Style Sheets?
 SPARQL: select distinct ?answer where { wd:Q46441 wdt:P2910 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cascading Style Sheets', 'p': 'icon', 'o': '?x0'}

 Q: Was Thomas Edison a citizen of the United States of America?
 SPARQL: ASK WHERE { wd:Q8743 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Thomas Edison', 'p': 'citizen of', 'o': '?x0', '?x0': 'United States of America'}]

 Q: What is {preceded by} of {Big East Conference (2013-)}, that has {chairwoman} is {Michael Aresco} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7820700 wdt:P1365 ?answer . ?answer wdt:P488 wd:Q16150145}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Big East Conference', 'p': 'preceded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chairwoman', 'o': 'Michael Aresco'}}

 Q: What is the {human} for {child} of {Walter Raleigh}
 SPARQL:  select distinct ?obj where { wd:Q189144 wdt:P40 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Walter Raleigh', 'p': 'child', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many allegiance to the Empire of Japan?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P945 wd:Q188712 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'allegiance', 'o': 'Empire of Japan'}

 Q: Tell me me a Norse deity whose name consist of the word "tyr" and whose worshipped by Norse mythology
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16513881 . ?sbj wdt:P1049 wd:Q128285 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tyr')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Norse deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': 'Norse mythology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tyr'}}

 Q: What is the {political party} for {affiliation} of {Mauricio Macri}
 SPARQL:  select distinct ?obj where { wd:Q561837 wdt:P1416 ?obj . ?obj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mauricio Macri', 'p': 'affiliation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'party'}}

 Q: What was the logo for Airbus in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q67 p:P154 ?s . ?s ps:P154 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Airbus', 'p': 'logo', 'o': '?x0', 't': '2014'}

 Q: What is the {theatre} for {language used} of {Russian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q7737 . ?sbj wdt:P31 wd:Q24354 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theater'}}

 Q: How many time period are Carboniferous?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2348 wd:Q133738 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Carboniferous'}

 Q: Did {U2} {award received} {Artist of the Year} and {Bill Shipsey} ?
 SPARQL: ASK WHERE { wd:Q396 wdt:P166 wd:Q19858055 . wd:Q396 wdt:P166 wd:Q4910860 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'U2', 'p': 'award received', 'o': '?x0', '?x0': 'Artist of the Year'}, {'h': 'IS', 'v': '?x1', 's': 'U2', 'p': 'award received', 'o': '?x1', '?x1': 'Bill Shipsey'}]

 Q: what is the {stated as} for {Proceedings of the National Academy of Sciences of the United States of America} has {author} as {National Academy of Sciences} ?
 SPARQL: SELECT ?value WHERE { wd:Q1146531 p:P50 ?s . ?s ps:P50 wd:Q270794 . ?s pq:P1932 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stated as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Proceedings of the National Academy of Sciences of the United States of America', 'p': 'author', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'author', 'o': 'National Academy of Sciences'}}}

 Q: What is {population} of {Tours} that is {point in time} is {2013-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q288 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tours', 'p': 'population', 'o': '?x0', 't': '2013'}

 Q: What is {tributary} of {portrait of} of {Barge Haulers on the Volga} ?
 SPARQL: SELECT ?answer WHERE { wd:Q175628 wdt:P180 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barge Haulers on the Volga', 'p': 'portrait of', 'o': '$y0'}}

 Q: At what point in time did the Red Sea Governorate have a population of 288,661?
 SPARQL: SELECT ?value WHERE { wd:Q30831 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'288661.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Red Sea Governorate', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '288661.0'}, 't': '?x0'}

 Q: What what is high speed train track gauge BY 1435 mm track gauge that starts with LETTERS V
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13402959 . ?sbj wdt:P1064 wd:Q1999572 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'high speed train', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'track gauge', 'o': '1435 mm track gauge'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {academic major} and {academic degree} of {{Indra Nooyi} has {educated at} as {Yale School of Management}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q264913 p:P69 ?s . ?s ps:P69 wd:Q8047426 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Indra Nooyi', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Yale School of Management'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Indra Nooyi', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Yale School of Management'}}}]

 Q: Does the 9820 Hempel have an orbital inclination greater than 0.21512?
 SPARQL: ASK WHERE { wd:Q538466 wdt:P2045 ?obj filter(?obj > 0.21512) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '9820 Hempel', 'p': 'orbital inclination', 'o': '?x0', '?x0': '0.21512'}

 Q: Which is the democratic republic that applies to jurisdiction of U.S. Declaration of Independence?
 SPARQL:  select distinct ?obj where { wd:Q127912 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Declaration of Independence', 'p': 'applies to jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: what is the {point in time} for {Friedrich Bessel} has {award received} as {Gold Medal of the Royal Astronomical Society} ?
 SPARQL: SELECT ?value WHERE { wd:Q75845 p:P166 ?s . ?s ps:P166 wd:Q753072 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Friedrich Bessel', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Gold Medal of the Royal Astronomical Society'}, 't': '?x0'}

 Q: Are there more than 14.4 employees at Overflow?
 SPARQL: ASK WHERE { wd:Q1191932 wdt:P1128 ?obj filter(?obj > 14.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '0verflow', 'p': 'employees', 'o': '?x0', '?x0': '14.4'}

 Q: Mention the person responsible for heading the chairperson-ship of Social Democratic Party of Germany
 SPARQL:  select distinct ?obj where { wd:Q49768 wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Social Democratic Party of Germany', 'p': 'chairperson', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {founders} of {parent agency} of {Jio} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18643672 wdt:P749 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founders', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jio', 'p': 'parent agency', 'o': '$y0'}}

 Q: What is {position held} of {Jean-Antoine-Nicolas de Caritat de Condorcet} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q201477 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean-Antoine-Nicolas de Caritat de Condorcet', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean-Antoine-Nicolas de Caritat de Condorcet', 'p': 'position held', 'o': '$y0'}}]

 Q: What is <SCAR Composite Gazetteer place ID> of <West Antarctica> ?
 SPARQL: select distinct ?answer where { wd:Q530917 wdt:P3230 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'West Antarctica', 'p': 'SCAR Composite Gazetteer place ID', 'o': '?x0'}

 Q: How many {original language of work} are to/by {Malagasy} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P364 wd:Q7930 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'original language', 'o': 'Malagasy'}

 Q: What was amended by the Treaty of Lisbon?
 SPARQL: select distinct ?answer where { ?answer wdt:P2567 wd:Q52843}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'amended by', 'o': 'Treaty of Lisbon'}

 Q: When did studio album for language of work or name of English?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q1860 . ?sbj wdt:P31 wd:Q208569 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'studio album'}}

 Q: What is {girlfriend} of {music by} of {The Globalist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26964671 wdt:P86 ?X . ?X wdt:P451 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'girlfriend', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Globalist', 'p': 'music by', 'o': '$y0'}}

 Q: What is Robert Mugabe's religion and citizenship?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q10707 wdt:P140 ?ans_1 . wd:Q10707 wdt:P27 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Robert Mugabe', 'p': 'religion', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Robert Mugabe', 'p': 'citizenship', 'o': '?x1'}]

 Q: What is {holds position} of {position holder} of {Emir of Afghanistan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17323614 wdt:P1308 ?X . ?X wdt:P39 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'holds position', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emir of Afghanistan', 'p': 'position holder', 'o': '$y0'}}

 Q: "Who is {developer} of {quicksort}, which has {doctoral student} is {Augusto Sampaio} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q486598 wdt:P61 ?answer . ?answer wdt:P185 wd:Q16466596}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'quicksort', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Augusto Sampaio'}}

 Q: What is the ranking of Russia at the FIFA World Cup?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7381959 . ?ent wdt:P1352 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ranking', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Russia at the FIFA World Cup'}}

 Q: Did {Pi} {named by} {William Jones}?
 SPARQL: ASK WHERE { wd:Q167 wdt:P3938 wd:Q371877 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Pi', 'p': 'named by', 'o': '?x0', '?x0': 'William Jones'}]

 Q: Which means{victory} at the {Wimbledon Championships} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2522 wd:Q41520}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'victory', 'o': 'Wimbledon Championships'}

 Q: Who is the {pharmaceutical product} for {has active ingredient} of {hydrogen peroxide}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3781 wd:Q171877 . ?sbj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has active ingredient', 'o': 'hydrogen peroxide', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: What is the {human spaceflight} for {astronaut mission} of {Yuri Gagarin}
 SPARQL:  select distinct ?obj where { wd:Q7327 wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yuri Gagarin', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human spaceflight'}}

 Q: What is the {country} for {participant} of {Cuban Missile Crisis}
 SPARQL:  select distinct ?obj where { wd:Q128160 wdt:P710 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cuban Missile Crisis', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'countries'}}

 Q: What is the consumer price index inflation rate that comes from of Zeno's Conscience?
 SPARQL: SELECT ?answer WHERE { wd:Q2630581 wdt:P495 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Zeno's Conscience", 'p': 'comes from', 'o': '$y0'}}

 Q: What is {series} of {Nanda Empire} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q949268 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nanda Empire', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nanda Empire', 'p': 'series', 'o': '$y0'}}]

 Q: The story Hamilton, based on Alexander Hamilton, was written by what author?
 SPARQL: SELECT ?value WHERE { wd:Q19320959 p:P144 ?s . ?s ps:P144 wd:Q54016147 . ?s pq:P50 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'author', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hamilton', 'p': 'based on', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'based on', 'o': 'Alexander Hamilton'}}}

 Q: How many judges are by Ruth Bader Ginsburg?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1594 wd:Q11116 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'judge', 'o': 'Ruth Bader Ginsburg'}

 Q: What is the {human} for {sex or gender} of {eunuch}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P21 wd:Q179294 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'gender', 'o': 'eunuch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {mixture} for {active ingredient in} of {amphetamine}
 SPARQL:  select distinct ?obj where { wd:Q179452 wdt:P3780 ?obj . ?obj wdt:P31 wd:Q169336 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'amphetamine', 'p': 'active ingredient in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mixture'}}

 Q: What is {cast member} of {Halloween} that is {character role} is {Michael Myers} ?
 SPARQL: SELECT ?obj WHERE { wd:Q221103 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q1426891 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cast member', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Halloween', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'plays', 'o': 'Michael Myers'}}}

 Q: What is the physical phenomenon measured by inertial mass that tsarts with letter I
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1293220 . ?sbj wdt:P1880 wd:Q843816 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical phenomenon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'inertial mass'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: What is the diplomatic relation of Denmark, that has a total fertility rate of 4.481?
 SPARQL: SELECT ?answer WHERE { wd:Q35 wdt:P530 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'4.481'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Denmark', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '4.481'}}

 Q: What is {subject in} of {inverse} of {functional programming} ?
 SPARQL: SELECT ?answer WHERE { wd:Q193076 wdt:P461 ?X . ?X wdt:P1269 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'functional programming', 'p': 'inverse', 'o': '$y0'}}

 Q: What is the {logographic writing system} for {facet of} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1269 wd:Q5287 . ?sbj wdt:P31 wd:Q3953107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'logographic writing system'}}

 Q: Who gave the{co-founder} of {software publisher} of {The Fall of Kelvin Walker: A Fable of the Sixties} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7733205 wdt:P123 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'co-founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Fall of Kelvin Walker: A Fable of the Sixties', 'p': 'publisher', 'o': '$y0'}}

 Q: How many {endemic to} are to/by {South Australia} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P183 wd:Q35715 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'endemic to', 'o': 'South Australia'}

 Q: Which was the cost of Titanic?
 SPARQL: select distinct ?answer where { wd:Q44578 wdt:P2130 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Titanic', 'p': 'cost', 'o': '?x0'}

 Q: Give me {municipal corporation in India} that starts with {'n'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6936225 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal corporation in India'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: what is the {start time} for {Tenzin Gyatso} has {country of citizenship} as {People's Republic of China} ?
 SPARQL: SELECT ?value WHERE { wd:Q17293 p:P27 ?s . ?s ps:P27 wd:Q148 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tenzin Gyatso', 'p': 'citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizenship', 'o': "People's Republic of China"}}}

 Q: What is {toponym} of {Lorentz transformation}, that has {male} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q217255 wdt:P138 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lorentz transformation', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'male'}}

 Q: What is <power consumed> of <Cassini−Huygens> ?
 SPARQL: select distinct ?answer where { wd:Q165585 wdt:P2791 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cassini-Huygens', 'p': 'power consumed', 'o': '?x0'}

 Q: What is ZooBank author ID of Albert Günther?
 SPARQL: select distinct ?answer where { wd:Q57514 wdt:P2006 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albert Günther', 'p': 'ZooBank author ID', 'o': '?x0'}

 Q: When did member of sports team of Rabah Madjer and number of points/goals/set scored?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q431343 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rabah Madjer', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rabah Madjer', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Who is the {written work} for {based on} of {Forrest Gump}
 SPARQL:  select distinct ?obj where { wd:Q134773 wdt:P144 ?obj . ?obj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Forrest Gump', 'p': 'based on', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: Give me {electrical connector system} that {publisher} {USB Implementers Forum} and which that starts with {'u'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58184783 . ?sbj wdt:P123 wd:Q3847420 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'electrical connector system', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'publisher', 'o': 'USB Implementers Forum'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is the {pharmaceutical product} for {active ingredient in} of {caffeine}
 SPARQL:  select distinct ?obj where { wd:Q60235 wdt:P3780 ?obj . ?obj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'caffeine', 'p': 'active ingredient in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: Which is the Find A Grave cemetery ID for Valley of the Kings?
 SPARQL: select distinct ?answer where { wd:Q133423 wdt:P2025 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Valley of the Kings', 'p': 'Find A Grave cemetery ID', 'o': '?x0'}

 Q: What was the religion of Stefan Nemanja during 1143?
 SPARQL: SELECT ?obj WHERE { wd:Q298612 p:P140 ?s . ?s ps:P140 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1143')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Stefan Nemanja', 'p': 'religion', 'o': '?x0', 't': '1143'}

 Q: Tell me schism whose name has the word schism in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41521 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'schism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'schism'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'schism'}}

 Q: Who is the secretary general for Christian Democratic Union?
 SPARQL: select distinct ?answer where { wd:Q49762 wdt:P3975 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Christian Democratic Union', 'p': 'secretary general', 'o': '?x0'}

 Q: What periodization contains the word "wilhelmine" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q816829 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wilhelmine')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wilhelmine'}}

 Q: Tell me flux whose name has the word flux in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6485344 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'flux')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flux'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'flux'}}

 Q: what is the {language of work or name} for {flour} has {pronunciation audio} as {Sv-mjöl.ogg} ?
 SPARQL: SELECT ?value WHERE { wd:Q36465 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'Sv-mjöl.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'flour', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'pronunciation audio', 'o': 'sv-mjöl.ogg'}}}

 Q: What is {participant of} of {Mark Spitz} that is {award received} is {Olympic bronze medal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q180748 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P166 wd:Q15889643 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mark Spitz', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Olympic bronze medal'}}}

 Q: Which is a Debian stable package of Perl?
 SPARQL: select distinct ?answer where { wd:Q42478 wdt:P3442 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Perl', 'p': 'Debian stable package', 'o': '?x0'}

 Q: What is {population} of {Los Lagos Region} where {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2178 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Los Lagos Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: When did urban municipality of Germany for twinned administrative body of Leeds?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q39121 . ?sbj wdt:P31 wd:Q42744322 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Leeds', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'urban municipality of Germany'}}

 Q: what is the {replaces} for {Louis XII of France} has {position held} as {King of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q58514 p:P39 ?s . ?s ps:P39 wd:Q18384454 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis XII of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of France'}}}

 Q: How many points/goals were scored by Zinedine Zidane?
 SPARQL: select distinct ?answer where { ?answer wdt:P1363 wd:Q1835}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'scored by', 'o': 'Zinedine Zidane'}

 Q: What is the AS.com athlete ID for Maria Sharapoval?
 SPARQL: select distinct ?answer where { wd:Q11666 wdt:P3427 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maria Sharapova', 'p': 'AS.com athlete ID', 'o': '?x0'}

 Q: what is the {determination method} for {Qalyubia Governorate} has {population} as {2.51424e+06} ?
 SPARQL: SELECT ?value WHERE { wd:Q31075 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'2.51424e+06')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Qalyubia Governorate', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '2.51424e+06'}}}

 Q: Who gave the{pronunciation audio} of {this taxon is a source of} of {Cucumis sativus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23425 wdt:P1672 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cucumis sativus', 'p': 'this taxon is a source of', 'o': '$y0'}}

 Q: What is the {cannon} with the {MAX(caliber)} whose {designed by} is {Schneider et Cie}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q81103 . ?ent wdt:P4403 ?obj . ?ent wdt:P287 wd:Q7431877 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'caliber', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cannon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Schneider et Cie'}}}

 Q: which  professorship of Isaac Newton ?
 SPARQL: select distinct ?answer where { wd:Q935 wdt:P803 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Isaac Newton', 'p': 'professorship', 'o': '?x0'}

 Q: Who gave the {diplomatic relation} of {citizenship} of {Henri de la Tour d'Auvergne, Vicomte de Turenne} ?
 SPARQL: SELECT ?answer WHERE { wd:Q303216 wdt:P27 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Henri de la Tour d'Auvergne, Vicomte de Turenne", 'p': 'citizenship', 'o': '$y0'}}

 Q: What is the life stance of Margaret Thatcher, whose headquarters is Church House, Westminster?
 SPARQL: SELECT ?answer WHERE { wd:Q7416 wdt:P140 ?answer . ?answer wdt:P159 wd:Q2967665}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Margaret Thatcher', 'p': 'life stance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'headquarters', 'o': 'Church House, Westminster'}}

 Q: How many {owner of} are for {Royal Dutch Shell} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q154950 wdt:P1830 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Royal Dutch Shell', 'p': 'owner of', 'o': '?x0'}

 Q: Which is the Transfermarkt player ID of Andriy Shevchenko?
 SPARQL: select distinct ?answer where { wd:Q41244 wdt:P2446 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andriy Shevchenko', 'p': 'Transfermarkt player ID', 'o': '?x0'}

 Q: What is the {federal state} for {country of origin} of {American English}
 SPARQL:  select distinct ?obj where { wd:Q7976 wdt:P495 ?obj . ?obj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American English', 'p': 'country of origin', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What is {record held} of {pole vault} and {location}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: "Who is {nominee for} of {Jonny Wilkinson}, which {prizewinner} is {Michael Owen} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q318920 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q128829}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jonny Wilkinson', 'p': 'nominee for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Michael Owen'}}

 Q: What is {workplace} of {Kollegah}, that has {first minister} is {Wilhelm von Becker} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58785 wdt:P937 ?answer . ?answer wdt:P6 wd:Q1338290}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kollegah', 'p': 'workplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first minister', 'o': 'Wilhelm von Becker'}}

 Q: Was Shiva the child of Kartikeya?
 SPARQL: ASK WHERE { wd:Q11378 wdt:P40 wd:Q380817 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Shiva', 'p': 'child', 'o': '?x0', '?x0': 'Kartikeya'}]

 Q: Which  is original network for ARD?
 SPARQL: select distinct ?answer where { ?answer wdt:P449 wd:Q49653}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'network', 'o': 'ARD'}

 Q: What is the {song} for {lyrics by} of {Billie Holiday}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P676 wd:Q104358 . ?sbj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lyrics by', 'o': 'Billie Holiday', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: What is {phase point} of {water} and {pressure}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 ?obj . ?s pq:P2077 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase point', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}]

 Q: What is the title of the TV movie based on The Count of Monte Cristo?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q191838 . ?sbj wdt:P31 wd:Q506240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'The Count of Monte Cristo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV movie'}}

 Q: What is the (birthplace) of (Alexander Suvorov), with a  (human population) of (335800.0)?
 SPARQL: SELECT ?answer WHERE { wd:Q154232 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'335800.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alexander Suvorov', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '335800.0'}}

 Q: Is the number of houses of the Heroutice equal to 0?
 SPARQL: ASK WHERE { wd:Q24817397 wdt:P4080 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Heroutice', 'p': 'number of houses', 'o': '?x0', '?x0': '0'}

 Q: what is the {applies to part} for {Godavari River} has {coordinate location} as {19.93} ?
 SPARQL: SELECT ?value WHERE { wd:Q191314 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'19.93')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Godavari River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'coordinate location', 'o': '19.93'}}}

 Q: what is the {start time} for {Spanish East Indies} has {capital} as {Iloilo City} ?
 SPARQL: SELECT ?value WHERE { wd:Q910648 p:P36 ?s . ?s ps:P36 wd:Q459787 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Spanish East Indies', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': 'Iloilo City'}}}

 Q: What is the {category of associated people} and the {geography of topic} of {Houston} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q16555 wdt:P1792 ?ans_1 . wd:Q16555 wdt:P2633 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Houston', 'p': 'category of associated people', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Houston', 'p': 'geography of topic', 'o': '?x1'}]

 Q: What is the {dead language} for {languages spoken, written or signed} of {Hildegard of Bingen}
 SPARQL:  select distinct ?obj where { wd:Q70991 wdt:P1412 ?obj . ?obj wdt:P31 wd:Q45762 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hildegard of Bingen', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dead language'}}

 Q: What was the population of Tuvalu in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q672 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tuvalu', 'p': 'population', 'o': '?x0', 't': '1996'}

 Q: Tell me the national sports team whose name contains the word team?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1194951 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'team')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national sports team'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'team'}}

 Q: What is {given name} of {Peggy Lee} that is {series ordinal} is {2} ?
 SPARQL: SELECT ?obj WHERE { wd:Q229139 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'2')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'middle name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peggy Lee', 'p': 'middle name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '2'}}}

 Q: what is the {start time} for {Calgary} has {located in the administrative territorial entity} as {Alberta} ?
 SPARQL: SELECT ?value WHERE { wd:Q36312 p:P131 ?s . ?s ps:P131 wd:Q1951 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Calgary', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Alberta'}}}

 Q: How many {start point} are to/by {Seville} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1427 wd:Q8717 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'Seville'}

 Q: IS THE G FACTOR OF PROTON EQUALS 5.585694713
 SPARQL: ASK WHERE { wd:Q2294 wdt:P1097 ?obj filter(?obj = 5.585694713) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'proton', 'p': 'g-factor', 'o': '?x0', '?x0': '5.585694713'}

 Q: What is the {human} for {architect} of {Taipei 101}
 SPARQL:  select distinct ?obj where { wd:Q83101 wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Taipei 101', 'p': 'architect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {start time} for {Roscoe Arbuckle} has {spouse} as {Addie McPhail} ?
 SPARQL: SELECT ?value WHERE { wd:Q315202 p:P26 ?s . ?s ps:P26 wd:Q3605092 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roscoe Arbuckle', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Addie McPhail'}}}

 Q: What is <Thailand central administrative unit code> of <Bangkok> ?
 SPARQL: select distinct ?answer where { wd:Q1861 wdt:P1067 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bangkok', 'p': 'Thailand central administrative unit code', 'o': '?x0'}

 Q: what is the {image} for {Tulipa} has {has fruit type} as {capsule} ?
 SPARQL: SELECT ?value WHERE { wd:Q93201 p:P4000 ?s . ?s ps:P4000 wd:Q147768 . ?s pq:P18 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'image', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tulipa', 'p': 'has fruit type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has fruit type', 'o': 'capsule'}}}

 Q: what is the {end time} for {Mecklenburg-Vorpommern} has {contains administrative territorial entity} as {Gadebusch Rural District} ?
 SPARQL: SELECT ?value WHERE { wd:Q1196 p:P150 ?s . ?s ps:P150 wd:Q872862 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mecklenburg-Vorpommern', 'p': 'contains administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'contains administrative territorial entity', 'o': 'Gadebusch Rural District'}}}

 Q: What is the denomination of the accused of Yemeni Civil War ?
 SPARQL: SELECT ?answer WHERE { wd:Q19686631 wdt:P710 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'denomination', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yemeni Civil War', 'p': 'accused', 'o': '$y0'}}

 Q: What is Kumasi seal description?
 SPARQL: select distinct ?answer where { wd:Q182059 wdt:P418 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kumasi', 'p': 'seal description', 'o': '?x0'}

 Q: What award did Charles Antony Richard Hoare receive in 1990?
 SPARQL: SELECT ?obj WHERE { wd:Q92602 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles Antony Richard Hoare', 'p': 'award', 'o': '?x0', 't': '1990'}

 Q: What Academy Awards has Quentin Tarantino been nominated for?
 SPARQL:  select distinct ?obj where { wd:Q3772 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q19020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Quentin Tarantino', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Academy Awards'}}

 Q: what is the {language of work or name} for {Thursday} has {named after} as {Thor} ?
 SPARQL: SELECT ?value WHERE { wd:Q129 p:P138 ?s . ?s ps:P138 wd:Q42952 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thursday', 'p': 'named after', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'named after', 'o': 'Thor'}}}

 Q: What is the Spotify broadcasting language which has a regulatory body in the Institute of the Czech Language?
 SPARQL: SELECT ?answer WHERE { wd:Q689141 wdt:P407 ?answer . ?answer wdt:P1018 wd:Q1661875}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Spotify', 'p': 'broadcasting language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'regulatory body', 'o': 'Institute of the Czech Language'}}

 Q: What is the {elizate} for {shares border with} of {Bilbao}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q8692 . ?sbj wdt:P31 wd:Q2731185 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'shares border with', 'o': 'Bilbao', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'elizate'}}

 Q: Who was the head of government in Brunswick until 2001-10-31?
 SPARQL: SELECT ?obj WHERE { wd:Q2773 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Brunswick', 'p': 'head of government', 'o': '?x0', 't': '2001'}

 Q: What is Miocene's FOIH periods ID?
 SPARQL: select distinct ?answer where { wd:Q76267 wdt:P4306 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Miocene', 'p': 'FOIH periods ID', 'o': '?x0'}

 Q: What is <MusicBrainz series ID> of <The Adventures of Tintin> ?
 SPARQL: select distinct ?answer where { wd:Q744536 wdt:P1407 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Adventures of Tintin', 'p': 'MusicBrainz series ID', 'o': '?x0'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Hope Solo} has {member of sports team} as {Atlanta Beat}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q229619 p:P54 ?s . ?s ps:P54 wd:Q756144 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hope Solo', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Atlanta Beat'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hope Solo', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Atlanta Beat'}}}]

 Q: What is the {human} for {sports discipline competed in} of {marathon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2416 wd:Q40244 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports discipline competed in', 'o': 'marathon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: What academic major is a facet of the history of mathematics?
 SPARQL:  select distinct ?obj where { wd:Q185264 wdt:P1269 ?obj . ?obj wdt:P31 wd:Q4671286 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'history of mathematics', 'p': 'facet of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic major'}}

 Q: What is {deathplace} of {Hans Asperger}, that has {has municipalities} is {Simmering} ?
 SPARQL: SELECT ?answer WHERE { wd:Q78512 wdt:P20 ?answer . ?answer wdt:P150 wd:Q279028}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hans Asperger', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has municipalities', 'o': 'Simmering'}}

 Q: What is <United States Olympic Committee athlete ID> of <Martina Navratilova> ?
 SPARQL: select distinct ?answer where { wd:Q54545 wdt:P4063 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Martina Navratilova', 'p': 'United States Olympic Committee athlete ID', 'o': '?x0'}

 Q: What is <end cause> of <Philippine–American War> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1534 wd:Q214456}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'end cause', 'o': 'Philippine-American War'}

 Q: What is the {film} for {film editor} of {Hayao Miyazaki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1040 wd:Q55400 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'film editor', 'o': 'Hayao Miyazaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: what is the {replaces} for {Charles I of England} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q81506 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles I', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: What is the inflation rate of the consumer price index for a citizen of Dynamo?
 SPARQL: SELECT ?answer WHERE { wd:Q394077 wdt:P27 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dynamo', 'p': 'citizen of', 'o': '$y0'}}

 Q: what is the {place of publication} for {King Kong} has {publication date} as {1933-9-8} ?
 SPARQL: SELECT ?value WHERE { wd:Q309048 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1933')) . ?s pq:P291 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'King Kong', 'p': 'published', 'o': '$y0'}}

 Q: What is the {human} for {student of} of {Maurice Ravel}
 SPARQL:  select distinct ?obj where { wd:Q1178 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maurice Ravel', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {member of} of {musical score by} of {No Quarter} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2727272 wdt:P86 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'No Quarter', 'p': 'musical score by', 'o': '$y0'}}

 Q: What is {date of death} of {Lech Kaczyński} that is {statement is subject of} is {2010 Polish Air Force Tu-154 crash} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2757 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P805 wd:Q131311 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lech Kaczyński', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '2010 Polish Air Force Tu-154 crash'}}}

 Q: What is the {major religious group} for {facet of} of {history of Islam}
 SPARQL:  select distinct ?obj where { wd:Q642379 wdt:P1269 ?obj . ?obj wdt:P31 wd:Q6957341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'history of Islam', 'p': 'facet of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'major religious group'}}

 Q: What was Adventure Time nominated for in 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q53093 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Adventure Time', 'p': 'nominated for', 'o': '?x0', 't': '2010'}

 Q: Give me {artistic type} that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16767597 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'artistic type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what is the silent short film with the highest duration?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q20667187 . ?ent wdt:P2047 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'duration', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'silent short film'}}

 Q: What is {written by} of {The Interpretation of Dreams}, that has {male} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q726382 wdt:P50 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Interpretation of Dreams', 'p': 'written by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'male'}}

 Q: What is <ADK member ID> of <Engelbert Humperdinck> ?
 SPARQL: select distinct ?answer where { wd:Q55010 wdt:P4114 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Engelbert Humperdinck', 'p': 'ADK member ID', 'o': '?x0'}

 Q: Which is the {constitutional republic} with the {MAX(Gini coefficient)} whom {diplomatic relation} is {Russia} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1520223 . ?ent wdt:P1125 ?obj . ?ent wdt:P530 wd:Q159 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Gini coefficient', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitutional republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Russia'}}}

 Q: What is {plays} of {operated} of {bicycle motocross} ?
 SPARQL: SELECT ?answer WHERE { wd:Q215184 wdt:P121 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'play', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'BMX', 'p': 'operates', 'o': '$y0'}}

 Q: What is {mother} and {date of birth} of {{Joseph Stalin} has {child} as {Yakov Dzhugashvili}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q163816 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Yakov Dzhugashvili'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Yakov Dzhugashvili'}}}]

 Q: Who is the municipal council for legislative body of Paris?
 SPARQL:  select distinct ?obj where { wd:Q90 wdt:P194 ?obj . ?obj wdt:P31 wd:Q2647159 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paris', 'p': 'legislative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal council'}}

 Q: Tell me an human who may be fictional whose name starts with the letter č
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21070568 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'č')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human who may be fictional'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'č'}}

 Q: What is {number of out of school children} of {is in} of {Melanesia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37394 wdt:P706 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Melanesia', 'p': 'location', 'o': '$y0'}}

 Q: What is <open period to> of <Friday> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3028 wd:Q130}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'open period to', 'o': 'Friday'}

 Q: What is {decays to} of {uranium-238}, that has {proton number} is {90} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1148503 wdt:P816 ?answer . ?answer wdt:P1086 ?x FILTER(contains(?x,'90'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'uranium-238', 'p': 'decays to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'proton number', 'o': '90'}}

 Q: which academy that contains the word university in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q162633 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'university'}}

 Q: Is it true that the borrowing rate of Barclaycard Visa equals to 16.99?
 SPARQL: ASK WHERE { wd:Q56489433 wdt:P5898 ?obj filter(?obj = 16.99) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Barclaycard Visa', 'p': 'borrowing rate', 'o': '?x0', '?x0': '16.99'}

 Q: What is the {location of discovery} and the {discoverer or inventor} of {Iodine} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1103 wdt:P189 ?ans_1 . wd:Q1103 wdt:P61 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'I', 'p': 'location of discovery', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'I', 'p': 'discoverer or inventor', 'o': '?x1'}]

 Q: What is {member of sports team} of {Leontien van Moorsel} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q234158 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leontien van Moorsel', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leontien van Moorsel', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Tell me the occupational carcinogen that has a safety classification and labelling as Regulation (EC) No. 1272/2008 whose name contains the word benzene?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21074597 . ?sbj wdt:P4952 wd:Q2005334 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'benzene')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'occupational carcinogen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'Regulation (EC) No. 1272/2008'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'benzene'}}

 Q: Which is {treatment} {murder method} of {Ted Hughes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q272194 wdt:P509 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ted Hughes', 'p': 'murder method', 'o': '$y0'}}

 Q: Did {R._Kelly} {award received} {Grammy Award for Best Song Written for Visual Media} and {Grammy Award for Best Male R&B Vocal Performance} ?
 SPARQL: ASK WHERE { wd:Q273055 wdt:P166 wd:Q428808 . wd:Q273055 wdt:P166 wd:Q1333798 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'R. Kelly', 'p': 'award received', 'o': '?x0', '?x0': 'Grammy Award for Best Song Written for Visual Media'}, {'h': 'IS', 'v': '?x1', 's': 'R. Kelly', 'p': 'award received', 'o': '?x1', '?x1': 'Grammy Award for Best Male R&B Vocal Performance'}]

 Q: What is {half-life} of {neutron} that is {uncertainty corresponds to} is {standard deviation} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2348 p:P2114 ?s . ?s ps:P2114 ?obj . ?s pq:P2571 wd:Q159375 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'half-life', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'neutron', 'p': 'half-life', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'uncertainty corresponds to', 'o': 'standard deviation'}}}

 Q: What is <Harmonized System Code> of <gin> ?
 SPARQL: select distinct ?answer where { wd:Q959362 wdt:P5471 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'gin', 'p': 'Harmonized System Code', 'o': '?x0'}

 Q: What is the {amusement ride} for {presenter} of {Ellen DeGeneres}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q483325 . ?sbj wdt:P31 wd:Q1144661 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'amusement ride'}}

 Q: What is gender of non-binary?
 SPARQL: select distinct ?answer where { ?answer wdt:P21 wd:Q48270}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'gender', 'o': 'non-binary'}

 Q: What award did the short story "Flowers for Algernon" receive?
 SPARQL: SELECT ?value WHERE { wd:Q837934 p:P31 ?s . ?s ps:P31 wd:Q49084 . ?s pq:P166 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Flowers for Algernon', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'short story'}}}

 Q: IDoes the house mouse have a minimum frequency of audible sound of 1000
 SPARQL: ASK WHERE { wd:Q83310 wdt:P3387 ?obj filter(?obj = 1000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'house mouse', 'p': 'minimum frequency of audible sound', 'o': '?x0', '?x0': '1000'}

 Q: What is {first name} of {John J. Pershing}, that has {the same as} is {Ioann} ?
 SPARQL: SELECT ?answer WHERE { wd:Q272383 wdt:P735 ?answer . ?answer wdt:P460 wd:Q17125945}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John J. Pershing', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Ioann'}}

 Q: Is it true that the incidence of hepatitis C equals to 0.4?
 SPARQL: ASK WHERE { wd:Q154869 wdt:P2844 ?obj filter(?obj = 0.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'hepatitis C', 'p': 'incidence', 'o': '?x0', '?x0': '0.4'}

 Q: Name a song produced by Quincy Jones that starts with letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7366 . ?sbj wdt:P162 wd:Q193645 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'produced by', 'o': 'Quincy Jones'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {maritime museum} with the {MAX(luminous intensity)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1863818 . ?ent wdt:P3041 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'luminous intensity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'maritime museum'}}

 Q: When did the spouse of Vytautas die?
 SPARQL: SELECT ?obj WHERE { wd:Q218186 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1430')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vytautas', 'p': 'spouse', 'o': '?x0', 't': '1430'}

 Q: Name an open content from the LAMP platform that contains the word " wikipedia" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1293664 . ?sbj wdt:P400 wd:Q191342 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wikipedia')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'open content', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'platform', 'o': 'LAMP'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wikipedia'}}

 Q: "What is the {language used} by {A. E. van Vogt}, that is {endemic to} {England} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q315059 wdt:P1412 ?answer . ?answer wdt:P2341 wd:Q21}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'A. E. van Vogt', 'p': 'language used', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'endemic to', 'o': 'England'}}

 Q: What is the anatomical branch of the adrenal gland artery?
 SPARQL: SELECT ?answer WHERE { wd:Q712294 wdt:P2286 ?X . ?X wdt:P3261 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'anatomical branch of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'adrenal gland', 'p': 'artery', 'o': '$y0'}}

 Q: What is MP3's PRONOM file format identifier?
 SPARQL: select distinct ?answer where { wd:Q42591 wdt:P2748 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'MP3', 'p': 'PRONOM file format identifier', 'o': '?x0'}

 Q: How many {victory} are to/by {24 Hours of Le Mans} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2522 wd:Q187579 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'victory', 'o': '24 Hours of Le Mans'}

 Q: Is Christopher Nolan a citizen of the UK?
 SPARQL: ASK WHERE { wd:Q25191 wdt:P27 wd:Q145 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Christopher Nolan', 'p': 'citizen of', 'o': '?x0', '?x0': 'UK'}]

 Q: What is {is in the district of} of {Tokushima}, that has {human population} is {740783} ?
 SPARQL: SELECT ?answer WHERE { wd:Q207309 wdt:P131 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'740783'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tokushima', 'p': 'is in the district of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '740783'}}

 Q: What is quantity symbol of mass flow rate ?
 SPARQL: select distinct ?answer where { wd:Q1366187 wdt:P416 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mass flow rate', 'p': 'symbol', 'o': '?x0'}

 Q: How many were killed by Giovanni Falcone?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q207073 wdt:P157 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Giovanni Falcone', 'p': 'killed by', 'o': '?x0'}

 Q: When is the establishment date and where is the location of death of Ptolemy I Soter?
 SPARQL: SELECT ?answer WHERE { wd:Q168261 wdt:P20 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'establishment date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ptolemy I Soter', 'p': 'location of death', 'o': '$y0'}}

 Q: Is the price of the Danish krone equal to 0.14216?
 SPARQL: ASK WHERE { wd:Q25417 wdt:P2284 ?obj filter(?obj = 0.14216) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Danish krone', 'p': 'price', 'o': '?x0', '?x0': '0.14216'}

 Q: What is the {plantation} for {residence} of {Thomas Jefferson}
 SPARQL:  select distinct ?obj where { wd:Q11812 wdt:P551 ?obj . ?obj wdt:P31 wd:Q188913 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thomas Jefferson', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'plantation'}}

 Q: Is the prevalence of leprosy less than 280.8?
 SPARQL: ASK WHERE { wd:Q36956 wdt:P1193 ?obj filter(?obj < 280.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'leprosy', 'p': 'prevalence', 'o': '?x0', '?x0': '280.8'}

 Q: Which  is total liabilities of Goldman Sachs?
 SPARQL: select distinct ?answer where { wd:Q193326 wdt:P2138 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Goldman Sachs', 'p': 'total liabilities', 'o': '?x0'}

 Q: Give me {space station} that {start point} {Baikonur Cosmodrome Site 200} and which that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25956 . ?sbj wdt:P1427 wd:Q4365460 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space station', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'Baikonur Cosmodrome Site 200'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What Tel Aviv partner town is the place of formation of Sinopec?
 SPARQL: SELECT ?answer WHERE { wd:Q831445 wdt:P740 ?answer . ?answer wdt:P190 wd:Q33935}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sinopec', 'p': 'place of formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Tel Aviv'}}

 Q: What is {place of marriage} and {start time} of {{Rajinikanth} has {spouse} as {Latha Rajinikanth}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q60068 p:P26 ?s . ?s ps:P26 wd:Q6495834 . ?s pq:P2842 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rajinikanth', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Latha Rajinikanth'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rajinikanth', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Latha Rajinikanth'}}}]

 Q: What football team does Ryan Giggs play for?
 SPARQL:  select distinct ?obj where { wd:Q10524 wdt:P54 ?obj . ?obj wdt:P31 wd:Q15944511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ryan Giggs', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'football team'}}

 Q: What is {source location of group/organisation} of {Megadeth}, that has {border} is {Pasadena} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83431 wdt:P740 ?answer . ?answer wdt:P47 wd:Q485176}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Megadeth', 'p': 'source location of group/organisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Pasadena'}}

 Q: What is the type of music of the music by of Beethoven's piano sonatas?
 SPARQL: SELECT ?answer WHERE { wd:Q11887907 wdt:P86 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Beethoven's piano sonatas", 'p': 'music by', 'o': '$y0'}}

 Q: What is the town with min male population located in the administrative territorial entity Tasmania?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3957 . ?ent wdt:P1540 ?obj . ?ent wdt:P131 wd:Q34366} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'male population', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'town', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Tasmania'}}}

 Q: What is {is located in} of {location born} of {Satoshi Urushihara} ?
 SPARQL: SELECT ?answer WHERE { wd:Q549755 wdt:P19 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is located in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Satoshi Urushihara', 'p': 'location born', 'o': '$y0'}}

 Q: Who was the spouse of Ridley Scott prior to their divorce in 1975?
 SPARQL: SELECT ?obj WHERE { wd:Q56005 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ridley Scott', 'p': 'spouse', 'o': '?x0', 't': '1975'}

 Q: which point in time for Alicia de Larrocha has award received as Princess of Asturias Award for the Arts ?
 SPARQL: SELECT ?value WHERE { wd:Q232255 p:P166 ?s . ?s ps:P166 wd:Q3319305 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Alicia de Larrocha', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Princess of Asturias Award for the Arts'}, 't': '?x0'}

 Q: What is {given name} of {Stephen Paddock} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41529365 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'given name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stephen Paddock', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: What is {HQ location} of {member of party} of {Izzy Asper} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3155643 wdt:P102 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'HQ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Izzy Asper', 'p': 'party', 'o': '$y0'}}

 Q: who language family for writing system of traditional Chinese characters?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q178528 . ?sbj wdt:P31 wd:Q25295 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'traditional Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language family'}}

 Q: what is the {start time} for {Netanya} has {country} as {Mandatory Palestine} ?
 SPARQL: SELECT ?value WHERE { wd:Q192225 p:P17 ?s . ?s ps:P17 wd:Q193714 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Netanya', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Mandatory Palestine'}}}

 Q: How many {vehicle range} are for {Airbus A340} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q6481 wdt:P2073 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Airbus A340', 'p': 'vehicle range', 'o': '?x0'}

 Q: What is the {category for films shot at this location} and the {category of associated people} of {Honolulu} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q18094 wdt:P1740 ?ans_1 . wd:Q18094 wdt:P1792 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Honolulu', 'p': 'category for films shot at this location', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Honolulu', 'p': 'category of associated people', 'o': '?x1'}]

 Q: Who was the employer of Alan M. Kriegsman that ended in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q2636772 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alan M. Kriegsman', 'p': 'employer', 'o': '?x0', 't': '1996'}

 Q: What is the award of Ken Thompson, the prizewinner of which is Arnold Orville Beckman?
 SPARQL: SELECT ?answer WHERE { wd:Q1107006 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q695886}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ken Thompson', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Arnold Orville Beckman'}}

 Q: Is the consumption rate per capita of petroleum equal to 0.013?
 SPARQL: ASK WHERE { wd:Q22656 wdt:P2662 ?obj filter(?obj = 0.013) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'petroleum', 'p': 'consumption rate per capita', 'o': '?x0', '?x0': '0.013'}

 Q: What human biblical figure starts with the letter "z"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20643955 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human biblical figure'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Which board game that practiced by backgammon player and which that starts with the letter b
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q131436 . ?sbj wdt:P3095 wd:Q23929009 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'board game', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'backgammon player'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: What is the {national association football team} for {member of sports team} of {Ryan Giggs}
 SPARQL:  select distinct ?obj where { wd:Q10524 wdt:P54 ?obj . ?obj wdt:P31 wd:Q6979593 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ryan Giggs', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national association football team'}}

 Q: What is the native language of the Khazars?
 SPARQL:  select distinct ?obj where { wd:Q173282 wdt:P103 ?obj . ?obj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Khazars', 'p': 'native language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Who is the Piano Concerto No. 3 music by, that died on 3-28-1943?
 SPARQL: SELECT ?answer WHERE { wd:Q223337 wdt:P86 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1943'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Piano Concerto No. 3', 'p': 'music by', 'o': '?x0', 't': '1943'}

 Q: What is the the capital city of the state where you can find Sam Dale Lake State Fish and Wildlife Area?
 SPARQL: SELECT ?answer WHERE { wd:Q7407386 wdt:P131 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sam Dale Lake State Fish and Wildlife Area', 'p': 'in', 'o': '$y0'}}

 Q: What is {position held} of {Nelson Rockefeller} that is {end time} is {1973-12-18} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11237 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1973')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nelson Rockefeller', 'p': 'position held', 'o': '?x0', 't': '1973'}

 Q: IS THE EULER CHARACTERISTIC OF  BARLOW SURFACE EQUALS 13.2
 SPARQL: ASK WHERE { wd:Q4861234 wdt:P6438 ?obj filter(?obj = 13.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Barlow surface', 'p': 'Euler characteristic', 'o': '?x0', '?x0': '13.2'}

 Q: Of which terrorist group is Abu Musab al-Zarqawir chairperson?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q181049 . ?sbj wdt:P31 wd:Q4456236 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Abu Musab al-Zarqawi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'terrorist group'}}

 Q: What is the {24 Hours of Le Mans entry} with the {MIN(laps completed)} whose {item operated} is {Englebert racing tire}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q55096520 . ?ent wdt:P5349 ?obj . ?ent wdt:P121 wd:Q54988955} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'laps completed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '24 Hours of Le Mans entry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'item operated', 'o': 'Englebert racing tire'}}}

 Q: What is the {historical country} for {head of state} of {Paul von Hindenburg}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q2667 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Paul von Hindenburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What are the painting movement which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3326867 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: What is <State Water Register Code (Russia)> of <Lake Ladoga> ?
 SPARQL: select distinct ?answer where { wd:Q15288 wdt:P884 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake Ladoga', 'p': 'State Water Register Code (Russia)', 'o': '?x0'}

 Q: What is {constructed out of} of {portrait of} of {Brothel Scene} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17189254 wdt:P180 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constructed out of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brothel Scene', 'p': 'portrait of', 'o': '$y0'}}

 Q: What is {place of death} of {George Balanchine} that is {located in the administrative territorial entity} is {New York} ?
 SPARQL: SELECT ?obj WHERE { wd:Q310184 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q1384 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Balanchine', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'New York'}}}

 Q: How many goals scored and matches played does Juan Alberto Schiaffino have as a member of the Uruguay national football team?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q332064 p:P54 ?s . ?s ps:P54 wd:Q134916 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'goals scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Juan Alberto Schiaffino', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Uruguay national football team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Juan Alberto Schiaffino', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Uruguay national football team'}}}]

 Q: How many {studied by} are to/by {logic} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2579 wd:Q8078 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'logic'}

 Q: Which team did Serge Blanco start on in 1/1/1984?
 SPARQL: SELECT ?obj WHERE { wd:Q1322456 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Serge Blanco', 'p': 'team', 'o': '?x0', 't': '1984'}

 Q: DOES TH NUMBER OF SURVIVORS OF UNITED AIRLINES FLIGHT 823 IS LESS THAN 0.0
 SPARQL: ASK WHERE { wd:Q7887363 wdt:P1561 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'United Airlines Flight 823', 'p': 'number of survivors', 'o': '?x0', '?x0': '0.0'}

 Q: Give me {first professional degree} that starts with {'m'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3273292 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'professional degree'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is Leopoldina member ID for Otto Hahn ?
 SPARQL: select distinct ?answer where { wd:Q57065 wdt:P3413 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Otto Hahn', 'p': 'Leopoldina member ID', 'o': '?x0'}

 Q: What are Julie Andrews spouse's and child's names?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q161819 wdt:P40 ?ans_1 . wd:Q161819 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Julie Andrews', 'p': 'child', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Julie Andrews', 'p': 'spouse', 'o': '?x1'}]

 Q: Is it true that the number of perpetrators of the 1999 Armenian parliament shooting equal 8?
 SPARQL: ASK WHERE { wd:Q1975720 wdt:P3886 ?obj filter(?obj = 8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1999 Armenian parliament shooting', 'p': 'number of perpetrators', 'o': '?x0', '?x0': '8'}

 Q: What is {major works} of {coined} of {Rubik’s Tangle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2171608 wdt:P61 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rubik’s Tangle', 'p': 'coined', 'o': '$y0'}}

 Q: what is the {reference URL} for {Zaporizhzhia} has {stated in} as {New Encyclopedic Dictionary} ?
 SPARQL: SELECT ?value WHERE { wd:Q157835 p:P248 ?s . ?s ps:P248 wd:Q19190511 . ?s pq:P854 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'URL', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zaporizhzhia', 'p': 'stated in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'stated in', 'o': 'New Encyclopedic Dictionary'}}}

 Q: Does the Independent have a publication interval that is equal to 1.2?
 SPARQL: ASK WHERE { wd:Q11149 wdt:P2896 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'The Independent', 'p': 'publication interval', 'o': '?x0', '?x0': '1.2'}

 Q: When did Neil deGrasse Tyson recieve the Hubbard Medal award?
 SPARQL: SELECT ?value WHERE { wd:Q310903 p:P166 ?s . ?s ps:P166 wd:Q4287207 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Neil deGrasse Tyson', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Hubbard Medal'}, 't': '?x0'}

 Q: what is less than gas
 SPARQL: select distinct ?answer where { wd:Q11432 wdt:P5136 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'gas', 'p': 'less than', 'o': '?x0'}

 Q: What is aircraft operated of managed by mortar?
 SPARQL: SELECT ?answer WHERE { wd:Q7905205 wdt:P137 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'aircraft operated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mortar', 'p': 'managed by', 'o': '$y0'}}

 Q: what is the {point in time} for {Gregory Hines} has {nominated for} as {Tony Award for Best Actor in a Musical} ?
 SPARQL: SELECT ?value WHERE { wd:Q367653 p:P1411 ?s . ?s ps:P1411 wd:Q1723064 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gregory Hines', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Tony Award for Best Actor in a Musical'}, 't': '?x0'}

 Q: What is the density of water?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q283 wdt:P2054 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'water', 'p': 'density', 'o': '?x0'}

 Q: what is the flag of Dominica?
 SPARQL: select distinct ?answer where { wd:Q784 wdt:P163 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dominica', 'p': 'flag', 'o': '?x0'}

 Q: How many {bug tracking system} are for {Tencent QQ} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q857640 wdt:P1401 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Tencent QQ', 'p': 'bug tracking system', 'o': '?x0'}

 Q: Which is the life expectancy for Cardigan Welsh Corgi?
 SPARQL: select distinct ?answer where { wd:Q29072 wdt:P2250 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cardigan Welsh Corgi', 'p': 'life expectancy', 'o': '?x0'}

 Q: Where is the birth place of Chloë Grace Moretz, who has the Women in Red banner pf Atlanta skyline from Piedmont Park banner.jpg?
 SPARQL: SELECT ?answer WHERE { wd:Q4509 wdt:P19 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Atlanta skyline from Piedmont Park banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chloë Grace Moretz', 'p': 'birth place', 'o': '?x0'}

 Q: Yilan County replaces how many ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q237258 wdt:P1365 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Yilan County', 'p': 'replaces', 'o': '?x0'}

 Q: What medical specialty of gangrene is a result of genetic disease?
 SPARQL: SELECT ?answer WHERE { wd:Q168805 wdt:P1995 ?answer . ?answer wdt:P1542 wd:Q200779}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'gangrene', 'p': 'medical specialty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'result', 'o': 'genetic disease'}}

 Q: What is {shares border with} of {Northern Territory} that is {statement is subject of} is {26th parallel south} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3235 p:P47 ?s . ?s ps:P47 ?obj . ?s pq:P805 wd:Q1390493 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Northern Territory', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '26th parallel south'}}}

 Q: What is the key event of the terminating connection of Britz Canal?
 SPARQL: SELECT ?answer WHERE { wd:Q315302 wdt:P559 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Britz Canal', 'p': 'terminating connection', 'o': '$y0'}}

 Q: Tell me about member of sports team of Lionel Messi and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q615 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel Messi', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel Messi', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Which is the number of episodes for the Bewitched?
 SPARQL: select distinct ?answer where { wd:Q1044635 wdt:P1113 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bewitched', 'p': 'number of episodes', 'o': '?x0'}

 Q: Did {John_Quincy_Adams} {position held} {United States Ambassador to Germany} and {United States Ambassador to the Netherlands} ?
 SPARQL: ASK WHERE { wd:Q11816 wdt:P39 wd:Q326552 . wd:Q11816 wdt:P39 wd:Q7889414 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Quincy Adams', 'p': 'position held', 'o': '?x0', '?x0': 'United States Ambassador to Germany'}, {'h': 'IS', 'v': '?x1', 's': 'John Quincy Adams', 'p': 'position held', 'o': '?x1', '?x1': 'United States Ambassador to the Netherlands'}]

 Q: Is the frequency of the Sky Polarization Observatory equal to 25.6?
 SPARQL: ASK WHERE { wd:Q511405 wdt:P2144 ?obj filter(?obj = 25.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sky Polarization Observatory', 'p': 'frequency', 'o': '?x0', '?x0': '25.6'}

 Q: What is {member of sports team} of {Roberto Carlos} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q429039 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberto Carlos', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberto Carlos', 'p': 'team', 'o': '$y0'}}]

 Q: "What is the {different than} of {waltz}, with the {movie director} of {Norbert ter Hall}?"
 SPARQL: SELECT ?answer WHERE { wd:Q193434 wdt:P1889 ?answer . ?answer wdt:P57 wd:Q2110132}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'waltz', 'p': 'different than', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Norbert ter Hall'}}

 Q: Which is the language that is influenced by English?
 SPARQL:  select distinct ?obj where { wd:Q1860 wdt:P737 ?obj . ?obj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'English', 'p': 'influenced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Has Federico Fellini participated in Documenta?
 SPARQL:  select distinct ?obj where { wd:Q7371 wdt:P1344 ?obj . ?obj wdt:P31 wd:Q72823 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Federico Fellini', 'p': 'participated in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Documenta'}}

 Q: what is the {end time} for {Jean-Bertrand Aristide} has {position held} as {President of Haiti} ?
 SPARQL: SELECT ?value WHERE { wd:Q209617 p:P39 ?s . ?s ps:P39 wd:Q3290543 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean-Bertrand Aristide', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Haiti'}}}

 Q: Is Toni Braxton's record label Elektra Records or Arista Records?
 SPARQL: ASK WHERE { wd:Q155412 wdt:P264 wd:Q726251 . wd:Q155412 wdt:P264 wd:Q664167 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Toni Braxton', 'p': 'record label', 'o': '?x0', '?x0': 'Elektra'}, {'h': 'IS', 'v': '?x1', 's': 'Toni Braxton', 'p': 'record label', 'o': '?x1', '?x1': 'Arista'}]

 Q: When did head of government of Seattle and work period (end)?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P2032 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'head of government', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}]

 Q: What is {date of birth} of {Eusebius of Caesarea} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q142999 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eusebius of Caesarea', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'circa'}}}

 Q: what is the {start time} for {Sochi} has {head of government} as {Anatoly Pakhomov} ?
 SPARQL: SELECT ?value WHERE { wd:Q39420 p:P6 ?s . ?s ps:P6 wd:Q4265869 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sochi', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Anatoly Pakhomov'}}}

 Q: What is the {human} for {spouse} of {Andre Agassi}
 SPARQL:  select distinct ?obj where { wd:Q7407 wdt:P26 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andre Agassi', 'p': 'spouse', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Tell me the point in time that Cayman Islands has the population of 56601.0?
 SPARQL: SELECT ?value WHERE { wd:Q5785 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'56601.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Cayman Islands', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '56601.0'}, 't': '?x0'}

 Q: How many permanent duplicated items does June possess?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2959 wd:Q120 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'permanent duplicated item', 'o': 'June'}

 Q: Did {The_Beach_Boys} {record label} {Sire Records}?
 SPARQL: ASK WHERE { wd:Q183048 wdt:P264 wd:Q165711 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Beach Boys', 'p': 'record label', 'o': '?x0', '?x0': 'Sire'}]

 Q: What is {material produced} of {made by} of {Glenfiddich Distillery} ?
 SPARQL: SELECT ?answer WHERE { wd:Q911587 wdt:P176 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'material produced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glenfiddich Distillery', 'p': 'made by', 'o': '$y0'}}

 Q: Give me {modern language} that {has grammatical person} {second-person plural} and which contains the word {russian} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1288568 . ?sbj wdt:P5110 wd:Q51929403 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'russian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'modern language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical person', 'o': 'second-person plural'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'russian'}}

 Q: What is the {language regulator} for {language regulatory body} of {Indonesian}
 SPARQL:  select distinct ?obj where { wd:Q9240 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q2093358 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indonesian', 'p': 'language regulatory body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language regulator'}}

 Q: What is {in conflict} of {in narrative} of {The Hall of Presidents} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3126038 wdt:P1441 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Hall of Presidents', 'p': 'in narrative', 'o': '$y0'}}

 Q: Is the number of penalty minutes in Nick Petrecki's career less than 0?
 SPARQL: ASK WHERE { wd:Q1985501 wdt:P6546 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Nick Petrecki', 'p': 'penalty minutes in career', 'o': '?x0', '?x0': '0.0'}

 Q: What is United States Armed Forces service number for John J. Pershing?
 SPARQL: select distinct ?answer where { wd:Q272383 wdt:P2028 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John J. Pershing', 'p': 'United States Armed Forces service number', 'o': '?x0'}

 Q: What are the temple which start with the letter ġgantija
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44539 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ġgantija')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'temple'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ġgantija'}}

 Q: What is {sainthood status} of {made for} of {Hagia Sophia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12506 wdt:P88 ?X . ?X wdt:P411 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sainthood status', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hagia Sophia', 'p': 'made for', 'o': '$y0'}}

 Q: What is <Environment Ontology ID> of <oceanic trench> ?
 SPARQL: select distinct ?answer where { wd:Q119253 wdt:P3859 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'oceanic trench', 'p': 'Environment Ontology ID', 'o': '?x0'}

 Q: What is {developed by} of {ARM architecture}, that has {end date} is {2000-11-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16980 wdt:P178 ?answer . ?answer wdt:P576 ?x FILTER(contains(YEAR(?x),'2000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'ARM architecture', 'p': 'developed by', 'o': '?x0', 't': '2000'}

 Q: Is Eric Eric Assanges given name?
 SPARQL: ASK WHERE { wd:Q360 wdt:P735 wd:Q12788459 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Assange', 'p': 'given name', 'o': '?x0', '?x0': 'Eric'}]

 Q: What comes before the anti-particle of antideuterium?
 SPARQL: SELECT ?answer WHERE { wd:Q11905736 wdt:P2152 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'comes before', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'antideuterium', 'p': 'anti-particle', 'o': '$y0'}}

 Q: What is {inflation rate} of {Guyana} where {point in time} is {1983-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q734 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1983')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guyana', 'p': 'inflation rate', 'o': '?x0', 't': '1983'}

 Q: What is {diplomatic relation} of {set in location} of {Histories} ?
 SPARQL: SELECT ?answer WHERE { wd:Q746583 wdt:P840 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Histories', 'p': 'set in location', 'o': '$y0'}}

 Q: What is {this taxon is a source of} of {found in species} of {DA03117} ?
 SPARQL: SELECT ?answer WHERE { wd:Q54822528 wdt:P703 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is a source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'DA03117', 'p': 'found in species', 'o': '$y0'}}

 Q: What is the streak color of quartz that has hexcode FFFFFF?
 SPARQL: SELECT ?answer WHERE { wd:Q43010 wdt:P534 ?answer . ?answer wdt:P465 ?x FILTER(contains(?x,'FFFFFF'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'quartz', 'p': 'streak color', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'hexcode', 'o': 'ffffff'}}

 Q: Give me {unit of time} that contains the word {zettasecond} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790144 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zettasecond')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of time'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zettasecond'}}

 Q: What award did Jane Addams receive in 1973?
 SPARQL: SELECT ?obj WHERE { wd:Q180989 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1973')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jane Addams', 'p': 'award', 'o': '?x0', 't': '1973'}

 Q: what is the {start time} for {Kuomintang} has {chairperson} as {Wu Den-yih} ?
 SPARQL: SELECT ?value WHERE { wd:Q31113 p:P488 ?s . ?s ps:P488 wd:Q57838 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kuomintang', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Wu Den-yih'}}}

 Q: What is the {recurring sporting event} for {participant of} of {Lance Armstrong}
 SPARQL:  select distinct ?obj where { wd:Q2172 wdt:P1344 ?obj . ?obj wdt:P31 wd:Q18608583 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lance Armstrong', 'p': 'participant of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring sporting event'}}

 Q: What is the {human} for {voice actor} of {Star Wars Episode V: The Empire Strikes Back}
 SPARQL:  select distinct ?obj where { wd:Q181795 wdt:P725 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'voice actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {postcode} of {death place} of {Piero della Francesca} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5822 wdt:P20 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'postcode', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piero della Francesca', 'p': 'death place', 'o': '$y0'}}

 Q: What is {discipline} of {advisor} of {Joseph Malègue} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3042797 wdt:P184 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discipline', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Malègue', 'p': 'advisor', 'o': '$y0'}}

 Q: What is the {campaign for the 2016 United States presidential election} for {employer} of {Steve Bannon}
 SPARQL:  select distinct ?obj where { wd:Q16146870 wdt:P108 ?obj . ?obj wdt:P31 wd:Q20639925 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Steve Bannon', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'campaign for the 2016 United States presidential election'}}

 Q: Tell me the name of a noble family that starts with the letter ü.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13417114 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ü')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble family'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ü'}}

 Q: What was Hillary Clinton a student of and what is her academic degree?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q6294 wdt:P512 ?ans_1 . wd:Q6294 wdt:P1066 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'academic degree', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hillary Clinton', 'p': 'student of', 'o': '?x1'}]

 Q: When was Aldous Huxley received James Tait Black Memorial Prize award?
 SPARQL: SELECT ?value WHERE { wd:Q81447 p:P166 ?s . ?s ps:P166 wd:Q392586 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Aldous Huxley', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'James Tait Black Memorial Prize'}, 't': '?x0'}

 Q: What is {safety classification and labelling} of {hydrogen chloride} that is {NFPA Special} is {ACID} ?
 SPARQL: SELECT ?obj WHERE { wd:Q211086 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P877 ?x filter(contains(?x,'ACID')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hydrogen chloride', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Special', 'o': 'acid'}}}

 Q: What is located in the state of Idaho that has diplomatic relations with Dominica?
 SPARQL: SELECT ?answer WHERE { wd:Q1221 wdt:P131 ?answer . ?answer wdt:P530 wd:Q784}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Idaho', 'p': 'is located in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Dominica'}}

 Q: Who is the {human} for {influenced by} of {J. Robert Oppenheimer}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P737 wd:Q132537 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'influenced by', 'o': 'Robert Oppenheimer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {manner of death} and the {position played on team / speciality} of {Bobby_Moore} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q191492 wdt:P1196 ?ans_1 . wd:Q191492 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Bobby Moore', 'p': 'manner of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Bobby Moore', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: Whats the filming location of Thane?
 SPARQL: select distinct ?answer where { ?answer wdt:P915 wd:Q207749}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'filming location', 'o': 'Thane'}

 Q: Lagos is located in what time zone and had what category of films shot at this location?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8673 wdt:P1740 ?ans_1 . wd:Q8673 wdt:P421 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Lagos', 'p': 'category of films shot at this location', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Lagos', 'p': 'time zone', 'o': '?x1'}]

 Q: What is {languages spoken} of {Georges Cziffra}, that has {has grammatical gender} is {masculine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q254333 wdt:P1412 ?answer . ?answer wdt:P5109 wd:Q499327}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Georges Cziffra', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical gender', 'o': 'm'}}

 Q: What are the deductive language which start with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5249852 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'deductive language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: what is the {for work} for {Rosalind Russell} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q233854 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rosalind Russell', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Which is people or cargo transported of people?
 SPARQL: select distinct ?answer where { ?answer wdt:P3437 wd:Q2472587}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'people or cargo transported', 'o': 'people'}

 Q: Is the earthquake magnitude on the moment magnitude scale of the 2011 Van earthquake equal to 5.68?
 SPARQL: ASK WHERE { wd:Q189079 wdt:P2527 ?obj filter(?obj = 5.68) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2011 Van earthquake', 'p': 'earthquake magnitude on the moment magnitude scale', 'o': '?x0', '?x0': '5.68'}

 Q: what is Romania LMI code for Trajan's Bridge?
 SPARQL: select distinct ?answer where { wd:Q849786 wdt:P1770 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Trajan's Bridge", 'p': 'Romania LMI code', 'o': '?x0'}

 Q: What is {chef-lieu} of {subitem of} of {history of West Virginia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11288505 wdt:P1269 ?X . ?X wdt:P36 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chef-lieu', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of West Virginia', 'p': 'subitem of', 'o': '$y0'}}

 Q: what was the inflation rate in Bosnia and Herzegovina as at 2005-01-01?
 SPARQL: SELECT ?obj WHERE { wd:Q225 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bosnia and Herzegovina', 'p': 'inflation rate', 'o': '?x0', 't': '2005'}

 Q: Glenn Greenwald works for what magazine?
 SPARQL:  select distinct ?obj where { wd:Q5568842 wdt:P108 ?obj . ?obj wdt:P31 wd:Q41298 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Glenn Greenwald', 'p': 'works for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine'}}

 Q: Which member of Colin Meads started in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q642380 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Colin Meads', 'p': 'member of', 'o': '?x0', 't': '2014'}

 Q: Is Aluminium-26's binding energy 211893.89?
 SPARQL: ASK WHERE { wd:Q1985521 wdt:P2154 ?obj filter(?obj = 211893.89) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'aluminium-26', 'p': 'binding energy', 'o': '?x0', '?x0': '211893.89'}

 Q: What award did Rudyard Kipling receive that netted him 138796.0 of prize money?
 SPARQL: SELECT ?obj WHERE { wd:Q34743 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'138796.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rudyard Kipling', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '138796.0'}}}

 Q: What is <position held> of <Francisco de Mirandad> ?
 SPARQL: select distinct ?answer where { wd:Q311447 wdt:P39 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Francisco de Miranda', 'p': 'position held', 'o': '?x0'}

 Q: What was the population of Harbin in 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q42956 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Harbin', 'p': 'population', 'o': '?x0', 't': '2016'}

 Q: what is the {date of birth} for {Frederick William I of Prussia} has {child} as {Wilhelmine of Prussia, Margravine of Brandenburg-Bayreuth} ?
 SPARQL: SELECT ?value WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 wd:Q237740 . ?s pq:P569 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Wilhelmine'}}}

 Q: What is {number of out of school children} of {sovereign state} of {Borobudur} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42798 wdt:P17 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Borobudur', 'p': 'country', 'o': '$y0'}}

 Q: What is the {human} for {father} of {Clark Gable}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P22 wd:Q71243 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'father', 'o': 'Clark Gable', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who married Brooke Astor in 1953?
 SPARQL: SELECT ?obj WHERE { wd:Q437088 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Brooke Astor', 'p': 'married', 'o': '?x0', 't': '1953'}

 Q: Which is the Poetry Foundation ID of Samuel Beckett?
 SPARQL: select distinct ?answer where { wd:Q37327 wdt:P5341 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Samuel Beckett', 'p': 'Poetry Foundation ID', 'o': '?x0'}

 Q: What is the {human} for {country of citizenship} of {Czechoslovakia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P27 wd:Q33946 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'citizenship', 'o': 'Czechoslovakia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {end time} for {David Trimble} has {position held} as {First Minister of Northern Ireland} ?
 SPARQL: SELECT ?value WHERE { wd:Q192556 p:P39 ?s . ?s ps:P39 wd:Q22979263 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Trimble', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'First Minister of Northern Ireland'}}}

 Q: "Which is {language read} of {Inigo Jones}, that has {role model} is {French} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q295929 wdt:P1412 ?answer . ?answer wdt:P737 wd:Q150}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Inigo Jones', 'p': 'language read', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'role model', 'o': 'French'}}

 Q: Is the units sold of the Roti Island snake-necked turtle more than 16.0?
 SPARQL: ASK WHERE { wd:Q304547 wdt:P2664 ?obj filter(?obj > 16.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Roti Island snake-necked turtle', 'p': 'units sold', 'o': '?x0', '?x0': '16.0'}

 Q: Is it true that the discharge of the Calnegia equals to 1.39?
 SPARQL: ASK WHERE { wd:Q1027378 wdt:P2225 ?obj filter(?obj = 1.39) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Calnegia', 'p': 'discharge', 'o': '?x0', '?x0': '1.39'}

 Q: what is the {coordinate location} for {Ötzi} has {place of death} as {Ötztal Alps} ?
 SPARQL: SELECT ?value WHERE { wd:Q171291 p:P20 ?s . ?s ps:P20 wd:Q307518 . ?s pq:P625 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ötzi', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Ötztal Alps'}}}

 Q: What is the {impact crater} with the {MAX(diameter)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q55818 . ?ent wdt:P2386 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'diameter', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'impact crater'}}

 Q: What is {educated at} of {Vladimir Putin} and {academic degree}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7747 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'educated at', 'o': '$y0'}}]

 Q: Did {Jim_Carrey} {occupation} {film producer}?
 SPARQL: ASK WHERE { wd:Q40504 wdt:P106 wd:Q3282637 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jim Carrey', 'p': 'occupation', 'o': '?x0', '?x0': 'film producer'}]

 Q: What noble title did Berengar I of Italy hold and who was his successor?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'successor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0'}}]

 Q: Give me {solstice} that {month of the year} {December} and which that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q123524 . ?sbj wdt:P2922 wd:Q126 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'solstice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'month of the year', 'o': 'December'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the reason of failure of the big event in Handley Page Transport?
 SPARQL: SELECT ?answer WHERE { wd:Q5647512 wdt:P793 ?X . ?X wdt:P770 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'reason of failure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Handley Page Transport', 'p': 'big event', 'o': '$y0'}}

 Q: What is <members have occupation> of <Coen brothers> ?
 SPARQL: select distinct ?answer where { wd:Q56095 wdt:P3989 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coen brothers', 'p': 'members have occupation', 'o': '?x0'}

 Q: Which is the Australian Classification for Team Fortress 2?
 SPARQL: select distinct ?answer where { wd:Q382108 wdt:P3156 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Team Fortress 2', 'p': 'Australian Classification', 'o': '?x0'}

 Q: What is the position held by Hammurabi who replaces Sin-Muballit?
 SPARQL: SELECT ?obj WHERE { wd:Q36359 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q374546 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hammurabi', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Sin-Muballit'}}}

 Q: Tell me civilization whose name has the word vandals in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8432 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vandals')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'civilization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vandals'}}

 Q: What is the {steel bridge} for {next crossing upstream} of {London Bridge}
 SPARQL:  select distinct ?obj where { wd:Q130206 wdt:P2673 ?obj . ?obj wdt:P31 wd:Q12042110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'London Bridge', 'p': 'next crossing upstream', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steel bridge'}}

 Q: Which is the military operation in the location of Soviet Union?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q15180 . ?sbj wdt:P31 wd:Q645883 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military operation'}}

 Q: What is the {municipality of Sweden} with the {MAX(total liabilities)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q127448 . ?ent wdt:P2138 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'liabilities', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Sweden'}}

 Q: What is {child} of {Isabella I of Castile} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q45859 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella I of Castile', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella I of Castile', 'p': 'child', 'o': '$y0'}}]

 Q: What is {role model} of {pupil} of {Octavian Angheluță} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18543692 wdt:P802 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role model', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Octavian Angheluță', 'p': 'student', 'o': '$y0'}}

 Q: what is the {end time} for {Tiraspol} has {country} as {Soviet Union} ?
 SPARQL: SELECT ?value WHERE { wd:Q132572 p:P17 ?s . ?s ps:P17 wd:Q15180 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tiraspol', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Soviet Union'}}}

 Q: what are studio album starts with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208569 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'studio album'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What are the lifestyles of students of Lanfranc?
 SPARQL: SELECT ?answer WHERE { wd:Q317098 wdt:P802 ?X . ?X wdt:P1576 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'lifestyle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lanfranc', 'p': 'student', 'o': '$y0'}}

 Q: What is {cat films shot} of {birth city} of {Stanisława Przybyszewska} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3067991 wdt:P19 ?X . ?X wdt:P1740 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cat films shot', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanisława Przybyszewska', 'p': 'birth city', 'o': '$y0'}}

 Q: What is {member of} of {first described} of {NGC 5548} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1120968 wdt:P61 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NGC 5548', 'p': 'first described', 'o': '$y0'}}

 Q: What is the {location of final assembly} and the {operator} of {Boeing_787_Dreamliner} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q6428 wdt:P1071 ?ans_1 . wd:Q6428 wdt:P137 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Boeing 787 Dreamliner', 'p': 'location of final assembly', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Boeing 787 Dreamliner', 'p': 'operator', 'o': '?x1'}]

 Q: what is the {start time} for {Bibi Andersson} has {spouse} as {Per Ahlmark} ?
 SPARQL: SELECT ?value WHERE { wd:Q234921 p:P26 ?s . ?s ps:P26 wd:Q1347731 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bibi Andersson', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Per Ahlmark'}}}

 Q: What is {nominated for} of {Bernard Herrmann} that is {statement is subject of} is {14th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q296804 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q508406 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernard Herrmann', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subject of', 'o': '14th Academy Awards'}}}

 Q: Which is the ammunition for Minigun?
 SPARQL: select distinct ?answer where { wd:Q864060 wdt:P739 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Minigun', 'p': 'ammunition', 'o': '?x0'}

 Q: What are the pseudovector which start with the letter angular
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q621476 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'angular')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pseudovector'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'angular'}}

 Q: During what time did Stanley Bruce receive an award for Companion of Honour?
 SPARQL: SELECT ?value WHERE { wd:Q23358 p:P166 ?s . ?s ps:P166 wd:Q16947520 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Stanley Bruce', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Companion of Honour'}, 't': '?x0'}

 Q: What king of Antigua and Barbuda was awarded the the Order of Saints Olga and Sophia?
 SPARQL: SELECT ?answer WHERE { wd:Q781 wdt:P35 ?answer . ?answer wdt:P166 wd:Q682749}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antigua and Barbuda', 'p': 'king', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': 'Order of Saints Olga and Sophia'}}

 Q: Which is the origin of the watercourse of Aconcagua?
 SPARQL: select distinct ?answer where { ?answer wdt:P885 wd:Q39739}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'origin of the watercourse', 'o': 'Aconcagua'}

 Q: Which is ADAGP artist ID for Andy Warhol?
 SPARQL: select distinct ?answer where { wd:Q5603 wdt:P3901 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andy Warhol', 'p': 'ADAGP artist ID', 'o': '?x0'}

 Q: Which is the BoF person ID for Alicia Vikander?
 SPARQL: select distinct ?answer where { wd:Q439314 wdt:P3814 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alicia Vikander', 'p': 'BoF person ID', 'o': '?x0'}

 Q: What is the {city} for {shares border with} of {Ottawa}
 SPARQL:  select distinct ?obj where { wd:Q1930 wdt:P47 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ottawa', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is {population} of {Granada} that is {determination method} is {register office} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8810 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Granada', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: What is the {position} for {appointed by} of {United Nations General Assembly}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P748 wd:Q47423 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'appointed by', 'o': 'United Nations General Assembly', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is <stereoisomer of> of <L-Phenylalanine> ?
 SPARQL: select distinct ?answer where { wd:Q170545 wdt:P3364 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L-Phe', 'p': 'stereoisomer of', 'o': '?x0'}

 Q: What is the {association football club} for {member of sports team} of {Lionel Messi}
 SPARQL:  select distinct ?obj where { wd:Q615 wdt:P54 ?obj . ?obj wdt:P31 wd:Q476028 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lionel Messi', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'association football club'}}

 Q: What is {twinned administrative body} of {Cairo Governorate} that is {start time} is {1990-10-23} ?
 SPARQL: SELECT ?obj WHERE { wd:Q30805 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cairo Governorate', 'p': 'twinned administrative body', 'o': '?x0', 't': '1990'}

 Q: What is the label of Exile on Main St., that was co-founded by Nik Powell?
 SPARQL: SELECT ?answer WHERE { wd:Q217248 wdt:P264 ?answer . ?answer wdt:P112 wd:Q7034649}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Exile on Main St.', 'p': 'label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Nik Powell'}}

 Q: What is the {type of quantum particle} with the {MAX(decay width)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2223 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'decay width', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: what is the {end time} for {Fort-de-France} has {head of government} as {Raymond Saint-Louis-Augustin} ?
 SPARQL: SELECT ?value WHERE { wd:Q81621 p:P6 ?s . ?s ps:P6 wd:Q16266685 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fort-de-France', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Raymond Saint-Louis-Augustin'}}}

 Q: What is {nominated for} of {George Bernard Shaw} that is {point in time} is {1925-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19185 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1925')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Bernard Shaw', 'p': 'nominated for', 'o': '?x0', 't': '1925'}

 Q: Dortmund is located on terrain feature of what type?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1295 wdt:P706 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Dortmund', 'p': 'location', 'o': '?x0'}

 Q: What is <Rockipedia area ID> of <Bergen> ?
 SPARQL: select distinct ?answer where { wd:Q26793 wdt:P5173 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bergen', 'p': 'Rockipedia area ID', 'o': '?x0'}

 Q: Which is the international airport for the place served by transport hub of Los Angeles?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P931 wd:Q65 . ?sbj wdt:P31 wd:Q644371 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place served by transport hub', 'o': 'Los Angeles', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international airport'}}

 Q: What is {electoral district} and {elected in} of {{Kevin Rudd} has {position held} as {Member of the Australian House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q43135 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P768 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Rudd', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Rudd', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}]

 Q: What characters are from the fork of the Beatrice Addressing Dante from the Car?
 SPARQL: SELECT ?answer WHERE { wd:Q3637289 wdt:P144 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beatrice Addressing Dante from the Car', 'p': 'fork of', 'o': '$y0'}}

 Q: Is the thermal conductivity of titanium carbide equal to 17.76?
 SPARQL: ASK WHERE { wd:Q426498 wdt:P2068 ?obj filter(?obj = 17.76) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'tantalum carbide', 'p': 'thermal conductivity', 'o': '?x0', '?x0': '17.76'}

 Q: What are the republic which start with the letter zimbabwe
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7270 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zimbabwe')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zimbabwe'}}

 Q: What are the {transliteration for the {Zhongshan} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q59223 wdt:P2440 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Zhongshan', 'p': 'transliteration', 'o': '?x0'}

 Q: What are the film studio which start with the letter studios
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q375336 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'studios')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film studio'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'studios'}}

 Q: What is <motto> of <Pakistan> ?
 SPARQL: select distinct ?answer where { wd:Q843 wdt:P1546 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pakistan', 'p': 'motto', 'o': '?x0'}

 Q: Is the Ivy League in the country teh United States of America?
 SPARQL: ASK WHERE { wd:Q49113 wdt:P17 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ivy League', 'p': 'country', 'o': '?x0', '?x0': 'United States of America'}]

 Q: What is The Black Book ID of Otto Strasser ?
 SPARQL: select distinct ?answer where { wd:Q76640 wdt:P4248 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Otto Strasser', 'p': 'The Black Book ID', 'o': '?x0'}

 Q: Which ice hockey team season has the highest number of points/goals conceded?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q27020779 . ?ent wdt:P1359 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of points/goals conceded', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ice hockey team season'}}

 Q: Give me {city of Iran} that contains the word {zaviyeh} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56557504 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zaviyeh')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of Iran'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zaviyeh'}}

 Q: How much is the mass of potassium ferricyanide?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q408810 wdt:P2067 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'potassium ferricyanide', 'p': 'mass', 'o': '?x0'}

 Q: Give me {recurring tournament} that {competition class} {men's golf} and which contains the word {championship} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15259995 . ?sbj wdt:P2094 wd:Q55864193 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'championship')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring tournament', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'competition class', 'o': "men's golf"}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'championship'}}

 Q: Name a colonial empire that starts with the letter I
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1790360 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'colonial empire'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: When did spouse of Faye Dunaway and start time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q168721 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faye Dunaway', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faye Dunaway', 'p': 'spouse', 'o': '$y0'}}]

 Q: what is the isotope of tin has the highest spin quantum number?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q687521 . ?ent wdt:P1122 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'spin quantum number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of tin'}}

 Q: How many spouses did Rezā Shāh have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q182921 wdt:P26 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Rezā Shāh', 'p': 'spouse', 'o': '?x0'}

 Q: Tell me childbirth whose name has the word jesus in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34581 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'jesus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'childbirth'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'jesus'}}

 Q: What was the academic major of Larry Page who was educated at Stanford University?
 SPARQL: SELECT ?value WHERE { wd:Q4934 p:P69 ?s . ?s ps:P69 wd:Q41506 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Larry Page', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Stanford University'}}}

 Q: What is the {atomic bomb} for {product or material produced} of {Manhattan Project}
 SPARQL:  select distinct ?obj where { wd:Q127050 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q650051 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Manhattan Project', 'p': 'product or material produced', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'atomic bomb'}}

 Q: what is the {determination method} for {lung cancer} has {genetic association} as {MTMR3} ?
 SPARQL: SELECT ?value WHERE { wd:Q47912 p:P2293 ?s . ?s ps:P2293 wd:Q18033514 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lung cancer', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'MTMR3'}}}

 Q: who is the markup language for based on of HTML5?
 SPARQL:  select distinct ?obj where { wd:Q2053 wdt:P144 ?obj . ?obj wdt:P31 wd:Q37045 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'HTML5', 'p': 'based on', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'markup language'}}

 Q: Who is the sculptor of the ring theory, whose death date was 9-10-1948?
 SPARQL: SELECT ?answer WHERE { wd:Q1208658 wdt:P170 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1948'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'ring theory', 'p': 'sculptor', 'o': '?x0', 't': '1948'}

 Q: How many {student of} are for {Wilhelm Furtwängler} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q57285 wdt:P1066 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Wilhelm Furtwängler', 'p': 'student of', 'o': '?x0'}

 Q: What was located in Tangier starting in 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q126148 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tangier', 'p': 'in', 'o': '?x0', 't': '2015'}

 Q: "Where is {deathplace} of {Robert Knox}, which has {partner city} is {New Delhi} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q352109 wdt:P20 ?answer . ?answer wdt:P190 wd:Q987}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Robert Knox', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'New Delhi'}}

 Q: What is {founder} of {builder} of {Lancashire Witch} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6483054 wdt:P176 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lancashire Witch', 'p': 'builder', 'o': '$y0'}}

 Q: which aircraft model with the lowest takeoff roll whose instance is airrcraft model?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056995 . ?ent wdt:P2430 ?obj . ?ent wdt:P31 wd:Q15056995} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'takeoff roll', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft model'}}

 Q: Where is the position of office held by head of the organisation of World Trade Organization
 SPARQL:  select distinct ?obj where { wd:Q7825 wdt:P2388 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'World Trade Organization', 'p': 'office held by head of the organisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is the {political organisation} for {members have occupation} of {Xi Jinping}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3989 wd:Q15031 . ?sbj wdt:P31 wd:Q7210356 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'members have occupation', 'o': 'Xi Jinping', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political organization'}}

 Q: What is {award received} of {Andy Lau} that is {for work} is {A Simple Life} ?
 SPARQL: SELECT ?obj WHERE { wd:Q16766 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q167432 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andy Lau', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'A Simple Life'}}}

 Q: What was the population of Staten Island on July 1st, 2013?
 SPARQL: SELECT ?obj WHERE { wd:Q18432 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Staten Island', 'p': 'population', 'o': '?x0', 't': '2013'}

 Q: Was Stephen Hawking influenced by Karl Popper?
 SPARQL: ASK WHERE { wd:Q17714 wdt:P737 wd:Q81244 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Stephen Hawking', 'p': 'influenced by', 'o': '?x0', '?x0': 'Karl Popper'}]

 Q: Which city is the capital of Maurya Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1376 wd:Q62943 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital of', 'o': 'Maurya Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is the operating system for PlayStation 3?
 SPARQL: select distinct ?answer where { wd:Q10683 wdt:P306 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PlayStation 3', 'p': 'operating system', 'o': '?x0'}

 Q: What is <time period> of <Early Middle Ages> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2348 wd:Q202763}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Early Middle Ages'}

 Q: Which is {CPI inflation rate} of {citizen of} {Asa Griggs Candler} ?
 SPARQL: SELECT ?answer WHERE { wd:Q744866 wdt:P27 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asa Griggs Candler', 'p': 'citizen of', 'o': '$y0'}}

 Q: What are thebookkeeping system which start with the letter stathmography
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60158614 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stathmography')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bookkeeping system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'stathmography'}}

 Q: Which {twinned administrative body} is {located in the administrative territorial entity} of {Belfast} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q10686 wdt:P190 ?ans_1 . wd:Q10686 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Belfast', 'p': 'twinned administrative body', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Belfast', 'p': 'located in the administrative territorial entity', 'o': '?x1'}]

 Q: What is the {located in the administrative territorial entity} and the {twinned administrative body} of {Edmonton} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q2096 wdt:P131 ?ans_1 . wd:Q2096 wdt:P190 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Edmonton', 'p': 'located in the administrative territorial entity', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Edmonton', 'p': 'twinned administrative body', 'o': '?x1'}]

 Q: What is the {media player} for {operating system} of {MS-DOS}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P306 wd:Q47604 . ?sbj wdt:P31 wd:Q210337 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operating system', 'o': 'MS-DOS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'media player'}}

 Q: What is the {Chinese character} with the {MIN(stroke count)} whose {grade of kanji} is {grade 4 kyōiku kanji}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q53764738 . ?ent wdt:P5205 ?obj . ?ent wdt:P5277 wd:Q53785305} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'stroke count', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Chinese character', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'grade of kanji', 'o': 'grade 4 kanji'}}}

 Q: What is {uses} of {killer whale} that is {determination method} is {mirror test} ?
 SPARQL: SELECT ?obj WHERE { wd:Q26843 p:P2283 ?s . ?s ps:P2283 ?obj . ?s pq:P459 wd:Q1430725 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'uses', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'killer whale', 'p': 'uses', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'mirror test'}}}

 Q: When was the inflation rate in Vanuatu at 5.1?
 SPARQL: SELECT ?value WHERE { wd:Q686 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'5.1')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vanuatu', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '5.1'}, 't': '?x0'}

 Q: What award did Milton Friedman receive in 1976?
 SPARQL: SELECT ?obj WHERE { wd:Q47426 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Milton Friedman', 'p': 'award', 'o': '?x0', 't': '1976'}

 Q: At what time did L'Hospitalet de Llobregat have a population of 250,536?
 SPARQL: SELECT ?value WHERE { wd:Q15470 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'250536.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': "L'Hospitalet de Llobregat", 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '250536.0'}, 't': '?x0'}

 Q: Which is the EDb film ID of Rear Window?
 SPARQL: select distinct ?answer where { wd:Q34414 wdt:P3141 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rear Window', 'p': 'EDb film ID', 'o': '?x0'}

 Q: How many {edition or translation of} are to/by {Meditations} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P629 wd:Q1152283 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'edition or translation of', 'o': 'Meditations'}

 Q: Give me {mythical creature} that starts with {'ş'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2239243 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ş')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythical creature'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ş'}}

 Q: What is the {spouse} and the {position played on team / speciality} of {Derek_Jeter} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q353511 wdt:P26 ?ans_1 . wd:Q353511 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Derek Jeter', 'p': 'spouse', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Derek Jeter', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: What is the standard heat of formation for conjugate acid of chloride ion?
 SPARQL: SELECT ?answer WHERE { wd:Q108200 wdt:P4147 ?X . ?X wdt:P3078 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'standard heat of formation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'chloride ion', 'p': 'conjugate acid', 'o': '$y0'}}

 Q: what is the {of} for {photon} has {mass} as {0.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q3198 p:P2067 ?s . ?s ps:P2067 ?x filter(contains(?x,'0.0')) . ?s pq:P642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'photon', 'p': 'weight', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'weight', 'o': '0.0'}}}

 Q: What is {award received} of {Komsomolskaya Pravda} that is {point in time} is {1957-12-6} ?
 SPARQL: SELECT ?obj WHERE { wd:Q849047 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1957')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Komsomolskaya Pravda', 'p': 'award', 'o': '?x0', 't': '1957'}

 Q: What is {main food source} of {tiger} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19939 p:P1034 ?s . ?s ps:P1034 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'main food source', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'tiger', 'p': 'main food source', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'c'}}}

 Q: What is the {GUI toolkit or framework} and the {programming language} of {Skype} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q40984 wdt:P1414 ?ans_1 . wd:Q40984 wdt:P277 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Skype', 'p': 'GUI toolkit or framework', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Skype', 'p': 'programming language', 'o': '?x1'}]

 Q: When did award received of Pat Summitt and together with
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q460394 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pat Summitt', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pat Summitt', 'p': 'award received', 'o': '$y0'}}]

 Q: What is the {human} for {father} of {Akbar}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P22 wd:Q8597 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'father', 'o': 'Akbar', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which chemical compound has the highest acceptable daily intake?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2542 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'acceptable daily intake', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Which is the dynasty of the country of the Roman Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q2277 . ?sbj wdt:P31 wd:Q164950 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dynasty'}}

 Q: What is {location of work} of {Patrick Swayze}, that has {also known as} is {Welthauptstadt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q49004 wdt:P937 ?answer . ?answer wdt:P1449 ?x FILTER(contains(?x,'Welthauptstadt'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Patrick Swayze', 'p': 'location of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'also known as', 'o': 'welthauptstadt'}}

 Q: What is {is son of} of {written by} of {Devi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q640276 wdt:P86 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Devi', 'p': 'written by', 'o': '$y0'}}

 Q: What is the {human} for {author} of {Things Fall Apart}
 SPARQL:  select distinct ?obj where { wd:Q622400 wdt:P50 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Things Fall Apart', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: In which year Fredrik Bajer was nominated for Nobel Peace Prize award?
 SPARQL: SELECT ?value WHERE { wd:Q191016 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Fredrik Bajer', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: Tacloban belongs to which electorate?
 SPARQL: select distinct ?answer where { wd:Q40626 wdt:P1831 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tacloban', 'p': 'electorate', 'o': '?x0'}

 Q: What is {award received} of {Marvin Hamlisch} that is {statement is subject of} is {46th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q337206 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q570921 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marvin Hamlisch', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '46th Academy Awards'}}}

 Q: What is {sister city} of {Sagamihara}, that has {inhabitants} is {2731571} ?
 SPARQL: SELECT ?answer WHERE { wd:Q209779 wdt:P190 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'2731571'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sagamihara', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '2731571'}}

 Q: What is the {notable work} and the {field of work} of {Jordan_Peterson} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q6276882 wdt:P800 ?ans_1 . wd:Q6276882 wdt:P101 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Jordan Peterson', 'p': 'notable work', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Jordan Peterson', 'p': 'field of work', 'o': '?x1'}]

 Q: what is the {point in time} for {Christopher Lloyd} has {award received} as {Independent Spirit Award for Best Supporting Male} ?
 SPARQL: SELECT ?value WHERE { wd:Q109324 p:P166 ?s . ?s ps:P166 wd:Q2294693 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Christopher Lloyd', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Independent Spirit Award for Best Supporting Male'}, 't': '?x0'}

 Q: What is {governor} of {Jersey}, that has {has mother} is {Queen Elizabeth The Queen Mother} ?
 SPARQL: SELECT ?answer WHERE { wd:Q785 wdt:P35 ?answer . ?answer wdt:P25 wd:Q10633}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jersey', 'p': 'governor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mother', 'o': 'Queen Elizabeth The Queen Mother'}}

 Q: Which is the EAGLE id of Hadrian?
 SPARQL: select distinct ?answer where { wd:Q1427 wdt:P1900 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hadrian', 'p': 'EAGLE id', 'o': '?x0'}

 Q: What are the health profession which start with the letter r
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3922583 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'health profession'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: Tell me the Hindu deity that has armament in Trishula and contains the word shiva in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q979507 . ?sbj wdt:P520 wd:Q3539698 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'shiva')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Hindu deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'armament', 'o': 'Trishula'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'shiva'}}

 Q: what is the {start time} for {Kiev} has {twinned administrative body} as {Kyoto} ?
 SPARQL: SELECT ?value WHERE { wd:Q1899 p:P190 ?s . ?s ps:P190 wd:Q34600 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kiev', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Kyoto'}}}

 Q: Give me {big city} that {twinned administrative body} {Los Angeles} and which contains the word {vancouver} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1549591 . ?sbj wdt:P190 wd:Q65 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vancouver')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'big city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Los Angeles'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vancouver'}}

 Q: what is the wife of the tribute to of Eanna?
 SPARQL: SELECT ?answer WHERE { wd:Q706970 wdt:P825 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'wife', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eanna', 'p': 'tribute to', 'o': '$y0'}}

 Q: What is the middle name of Jim Ward that is similar to that of Yakub?
 SPARQL: SELECT ?answer WHERE { wd:Q1508964 wdt:P735 ?answer . ?answer wdt:P460 wd:Q4537101}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jim Ward', 'p': 'middle name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'similar to', 'o': 'Yakub'}}

 Q: Which means {eBird hotspot ID} from{Joshua Tree National Park} ?
 SPARQL: select distinct ?answer where { wd:Q735202 wdt:P5200 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joshua Tree National Park', 'p': 'eBird hotspot ID', 'o': '?x0'}

 Q: "Which is {medical specialty} of {anxiety disorder}, whiose {has proponent} is {psychotherapist} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q544006 wdt:P1995 ?answer . ?answer wdt:P3095 wd:Q1900167}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'anxiety disorder', 'p': 'medical specialty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has proponent', 'o': 'psychotherapist'}}

 Q: what is the {point in time} for {Simon Wiesenthal} has {award received} as {Otto Hahn Peace Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q49086 p:P166 ?s . ?s ps:P166 wd:Q314209 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Simon Wiesenthal', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Otto Hahn Peace Medal'}, 't': '?x0'}

 Q: what is the {point in time} for {Daniel J. Boorstin} has {award received} as {Bancroft Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q551252 p:P166 ?s . ?s ps:P166 wd:Q724144 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Daniel J. Boorstin', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Bancroft Prize'}, 't': '?x0'}

 Q: Who is the  {geographic envelope} for {studies} of {meteorology}
 SPARQL:  select distinct ?obj where { wd:Q25261 wdt:P2578 ?obj . ?obj wdt:P31 wd:Q2627400 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'meteorology', 'p': 'studies', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geographic envelope'}}

 Q: What is  in the  Nupill Literatura Digital - Author of Pedro II of Brazil ?
 SPARQL: select distinct ?answer where { wd:Q156774 wdt:P1473 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pedro II of Brazil', 'p': 'Nupill Literatura Digital - Author', 'o': '?x0'}

 Q: How many {lyrics by} are to/by {Viktor Tsoi} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P676 wd:Q487125 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'lyrics by', 'o': 'Viktor Tsoi'}

 Q: What is {death place} of {William Thomas Stead}, that has {point on a map} is {47.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q288301 wdt:P20 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'47.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Thomas Stead', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'point on a map', 'o': '47.0'}}

 Q: What is {champion} of {awards received} of {Lee Roy Selmon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3228929 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lee Roy Selmon', 'p': 'awards', 'o': '$y0'}}

 Q: What is award received of E. E. Cummings that of point in time is 1944-0-0 ?
 SPARQL: SELECT ?obj WHERE { wd:Q298703 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1944')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'E. E. Cummings', 'p': 'award received', 'o': '?x0', 't': '1944'}

 Q: Which is coat of arms for coat of arms?
 SPARQL: select distinct ?answer where { ?answer wdt:P237 wd:Q14659}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'coat of arms'}

 Q: What is the {dependency of Norway} with the {MIN(coastline)} whose {located in the administrative territorial entity} is {Norway}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5260616 . ?ent wdt:P5141 ?obj . ?ent wdt:P131 wd:Q20} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'coastline', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dependency of Norway', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Norway'}}}

 Q: Tell me the written work whose place of publication is France and which contains the word leagues in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47461344 . ?sbj wdt:P291 wd:Q142 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'leagues')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'place of publication', 'o': 'France'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'leagues'}}

 Q: Tell me virtue whose name has the word wisdom in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q157811 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wisdom')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'virtue'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wisdom'}}

 Q: tell me stock market crash that contains the word market  market in the name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1020018 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'market')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stock market crash'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'market'}}

 Q: which numeral system that starts with s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q122653 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'numeral system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Did you know the enterprise Walmart was owned by (blank)?
 SPARQL:  select distinct ?obj where { wd:Q483551 wdt:P127 ?obj . ?obj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Walmart', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: To which sovereign state and diplomatic relation does the Arab League belong?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q7172 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Arab League', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the {academic discipline} for {health specialty} of {pedophilia}
 SPARQL:  select distinct ?obj where { wd:Q8388 wdt:P1995 ?obj . ?obj wdt:P31 wd:Q11862829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pedophilia', 'p': 'health specialty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic discipline'}}

 Q: How many collection are done by Museo Soumaya
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P195 wd:Q2097646 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'Museo Soumaya'}

 Q: Name the  psychoactive drug made from Papaver somniferum that starts with letter O
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3706669 . ?sbj wdt:P1582 wd:Q131584 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'psychoactive drug', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'made from', 'o': 'Papaver somniferum'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: What is <Bashkir encyclopedia (Russian version) ID> of <encyclopedia> ?
 SPARQL: select distinct ?answer where { wd:Q5292 wdt:P4211 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'encyclopedia', 'p': 'Bashkir encyclopedia (Russian version) ID', 'o': '?x0'}

 Q: Tell me stellar evolution whose name has the word kilonova in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6472 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'kilonova')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stellar evolution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'kilonova'}}

 Q: What is {apparent magnitude} of {(486958) 2014 MU69} that is {applies to part} is {maximum} ?
 SPARQL: SELECT ?obj WHERE { wd:Q18325885 p:P1215 ?s . ?s ps:P1215 ?obj . ?s pq:P518 wd:Q10578722 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'apparent magnitude', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '2014 MU69', 'p': 'apparent magnitude', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'maximum'}}}

 Q: What venue of the Battle of Verdun is adjacent to Sivry-la-Perche?
 SPARQL: SELECT ?answer WHERE { wd:Q130847 wdt:P276 ?answer . ?answer wdt:P47 wd:Q981875}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Verdun', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'adjacent to', 'o': 'Sivry-la-Perche'}}

 Q: What is {date of birth} of {Anaxagoras} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83041 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anaxagoras', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'circa'}}}

 Q: What is the {film} for {takes place in fictional universe} of {Marvel Cinematic Universe}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1434 wd:Q642878 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'takes place in fictional universe', 'o': 'Marvel Cinematic Universe', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the {municipal corporation in India} for {capital} of {Karnataka}
 SPARQL:  select distinct ?obj where { wd:Q1185 wdt:P36 ?obj . ?obj wdt:P31 wd:Q6936225 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Karnataka', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal corporation in India'}}

 Q: Which is the paramilitary that Heinrich Himmler was a manager or a director?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1037 wd:Q43067 . ?sbj wdt:P31 wd:Q207320 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manager', 'o': 'Heinrich Himmler', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'paramilitary'}}

 Q: Which is PfaF ID for Raphanus raphanistrum subsp. sativus?
 SPARQL: select distinct ?answer where { wd:Q7224565 wdt:P4301 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Raphanus raphanistrum subsp. sativus', 'p': 'PfaF ID', 'o': '?x0'}

 Q: What is the {Gryffindor student} for {characters} of {Harry Potter}
 SPARQL:  select distinct ?obj where { wd:Q8337 wdt:P674 ?obj . ?obj wdt:P31 wd:Q33179355 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Harry Potter', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Gryffindor student'}}

 Q: What is {language used} on {telenovela}, that has a {distribution map} of {idioma espanol en el mundo. PNG} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23745 wdt:P407 ?answer . ?answer wdt:P1846 ?x FILTER(contains(?x,'Idioma español en el mundo.PNG'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'telenovela', 'p': 'language', 'o': '?x0'}

 Q: What female is Rob Reiner's sister?
 SPARQL: SELECT ?answer WHERE { wd:Q287607 wdt:P3373 ?answer . ?answer wdt:P21 wd:Q6581072}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rob Reiner', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'female'}}

 Q: what is the {start time} for {Cluj-Napoca} has {country} as {Principality of Transylvania} ?
 SPARQL: SELECT ?value WHERE { wd:Q100188 p:P17 ?s . ?s ps:P17 wd:Q655621 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cluj-Napoca', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Principality of Transylvania'}}}

 Q: what is the {point in time} for {The Big Bang Theory} has {nominated for} as {Primetime Emmy Award for Outstanding Art Direction for a Multi-Camera Series} ?
 SPARQL: SELECT ?value WHERE { wd:Q8539 p:P1411 ?s . ?s ps:P1411 wd:Q17010286 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'The Big Bang Theory', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Primetime Emmy Award for Outstanding Art Direction for a Multi-Camera Series'}, 't': '?x0'}

 Q: What is the {competition class} for {competition class} of {curling}
 SPARQL:  select distinct ?obj where { wd:Q136851 wdt:P2094 ?obj . ?obj wdt:P31 wd:Q22936940 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'curling', 'p': 'competition class', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'competition class'}}

 Q: What is {nominated for} of {John Mayer} that is {point in time} is {2002-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q215215 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Mayer', 'p': 'nominated for', 'o': '?x0', 't': '2002'}

 Q: What is the {church building} for {commissioned by} of {Suleiman the Magnificent}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P88 wd:Q8474 . ?sbj wdt:P31 wd:Q16970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'Suleiman the Magnificent', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'church'}}

 Q: What is {time} of {hometown} of {Thomas Pynchon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q35155 wdt:P551 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Pynchon', 'p': 'hometown', 'o': '$y0'}}

 Q: Which is the political seat of the chairman of the International Association of Athletics Federations?
 SPARQL: SELECT ?answer WHERE { wd:Q1158 wdt:P488 ?X . ?X wdt:P39 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'political seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'International Association of Athletics Federations', 'p': 'chair', 'o': '$y0'}}

 Q: Did {Dr._Seuss} {occupation} {writer} and {illustrator} ?
 SPARQL: ASK WHERE { wd:Q298685 wdt:P106 wd:Q36180 . wd:Q298685 wdt:P106 wd:Q644687 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Seuss', 'p': 'occupation', 'o': '?x0', '?x0': 'writer'}, {'h': 'IS', 'v': '?x1', 's': 'Seuss', 'p': 'occupation', 'o': '?x1', '?x1': 'illustrator'}]

 Q: What is the {human} for {spouse} of {Rollo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P26 wd:Q273773 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'wife', 'o': 'Rollo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {end time} for {Ravenna} has {country} as {Republic of Venice} ?
 SPARQL: SELECT ?value WHERE { wd:Q13364 p:P17 ?s . ?s ps:P17 wd:Q4948 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ravenna', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Republic of Venice'}}}

 Q: What is {mother} and {date of birth} of {{Charlemagne} has {child} as {Pepin the Hunchback}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q302212 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Pepin the Hunchback'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Pepin the Hunchback'}}}]

 Q: Did {Banana} {color} {yellow} and {shade of brown} ?
 SPARQL: ASK WHERE { wd:Q503 wdt:P462 wd:Q943 . wd:Q503 wdt:P462 wd:Q17079449 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'banana', 'p': 'color', 'o': '?x0', '?x0': 'yellow'}, {'h': 'IS', 'v': '?x1', 's': 'banana', 'p': 'color', 'o': '?x1', '?x1': 'shade of brown'}]

 Q: Tell me military order whose name has the word  saint in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q474717 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'saint')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military order'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'saint'}}

 Q: What is {toponym} of {Beer Hall Putsch}, that has {branch} is {German Army} ?
 SPARQL: SELECT ?answer WHERE { wd:Q36749 wdt:P138 ?answer . ?answer wdt:P241 wd:Q313422}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Beer Hall Putsch', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'branch', 'o': 'German Army'}}

 Q: Does the 20 kV AC railway electrification have a voltage that is less than 16000.0?
 SPARQL: ASK WHERE { wd:Q12202629 wdt:P2436 ?obj filter(?obj < 16000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '20 kV AC railway electrification', 'p': 'voltage', 'o': '?x0', '?x0': '16000.0'}

 Q: What is the {human} for {student of} of {Franz Schubert}
 SPARQL:  select distinct ?obj where { wd:Q7312 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Franz Schubert', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {date of commencement} of {book publisher} of {Astronomy and Astrophysics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q752075 wdt:P123 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of commencement', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Astronomy and Astrophysics', 'p': 'publisher', 'o': '$y0'}}

 Q: Is the salinity of North Atlantic Deep Water equal to 28?
 SPARQL: ASK WHERE { wd:Q921070 wdt:P4350 ?obj filter(?obj = 28.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'North Atlantic Deep Water', 'p': 'salinity', 'o': '?x0', '?x0': '28.0'}

 Q: What is the {type of quantum particle} for {antiparticle} of {elementary particle}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2152 wd:Q43116 . ?sbj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'antiparticle', 'o': 'elementary particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: Which stone bridge has the longest span?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3397526 . ?ent wdt:P2787 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'longest span', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stone bridge'}}

 Q: What is <domain of saint or deity> of <memory> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2925 wd:Q492}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'domain of saint or deity', 'o': 'memory'}

 Q: Is the number of viewers/listeners of The Plow That Broke the Plains less than 8000000.0?
 SPARQL: ASK WHERE { wd:Q2480639 wdt:P5436 ?obj filter(?obj < 8000000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'The Plow That Broke the Plains', 'p': 'number of viewers/listeners', 'o': '?x0', '?x0': '8000000.0'}

 Q: In what territory was P. G. T. Beauregard born in St. Bernard Parish?
 SPARQL: SELECT ?value WHERE { wd:Q313976 p:P19 ?s . ?s ps:P19 wd:Q503883 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'P. G. T. Beauregard', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'St. Bernard Parish'}}}

 Q: Who is the person as the professional or sports partner of Carole King?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1327 wd:Q217787 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports partner', 'o': 'Carole King', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Which is the city that is capital of Seville?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1376 wd:Q8717 . ?sbj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital of', 'o': 'Seville', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is the {recurring event} for {language used} of {Esperanto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q143 . ?sbj wdt:P31 wd:Q15275719 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Esperanto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring event'}}

 Q: Which is the military rank for the military rank of Salman of Saudi Arabia?
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P410 ?obj . ?obj wdt:P31 wd:Q56019 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'military rank', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military rank'}}

 Q: Tell me the dog breed that has Germany as country of origin and starts with the letter w?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj wdt:P495 wd:Q183 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog breed', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Germany'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is Epguides ID for The Fresh Prince of Bel-Air
 SPARQL: select distinct ?answer where { wd:Q309063 wdt:P3121 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Fresh Prince of Bel-Air', 'p': 'Epguides ID', 'o': '?x0'}

 Q: Who is the head of state of South Australia who started in the year 1952?
 SPARQL: SELECT ?obj WHERE { wd:Q35715 p:P35 ?s . ?s ps:P35 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1952')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Australia', 'p': 'head of state', 'o': '?x0', 't': '1952'}

 Q: Is the orbital eccentricity of Ariel equal to 0.0012?
 SPARQL: ASK WHERE { wd:Q3343 wdt:P1096 ?obj filter(?obj = 0.0012) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ariel', 'p': 'orbital eccentricity', 'o': '?x0', '?x0': '0.0012'}

 Q: Which people contains the word wuhuan in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2472587 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wuhuan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wuhuan'}}

 Q: Which is the literary work of the writer Dante Alighieri?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P50 wd:Q1067 . ?sbj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writer', 'o': 'Dante Alighieri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: What is the {sport in a geographic region} with the {MAX(number of players in region)} whose {location} is {Papua New Guinea}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29791211 . ?ent wdt:P4909 ?obj . ?ent wdt:P276 wd:Q691 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of players in region', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport in a geographic region', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Papua New Guinea'}}}

 Q: Who is the governor for the head of state of Tasmania?
 SPARQL:  select distinct ?obj where { wd:Q34366 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q132050 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tasmania', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'governor'}}

 Q: Tell me about castle for commissioned by of William the Conqueror?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P88 wd:Q37594 . ?sbj wdt:P31 wd:Q23413 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'William the Conqueror', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'castle'}}

 Q: "Which adjacent to Kyiv Oblast, was initiated on February 2 1932?"
 SPARQL: SELECT ?answer WHERE { wd:Q170036 wdt:P47 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1932'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kyiv Oblast', 'p': 'adjacent to', 'o': '?x0', 't': '1932'}

 Q: Who was the disciple and mentor of Wilhelm Grosz?
 SPARQL: SELECT ?answer WHERE { wd:Q5772932 wdt:P1066 ?X . ?X wdt:P802 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disciple', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wilhelm Grosz', 'p': 'mentor', 'o': '$y0'}}

 Q: Is it true that the target interest rate of the monetary authority of singapore is equal to 5.35?
 SPARQL: ASK WHERE { wd:Q2661296 wdt:P2661 ?obj filter(?obj = 5.35) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Monetary Authority of Singapore', 'p': 'target interest rate', 'o': '?x0', '?x0': '5.35'}

 Q: What is {legislative period} of {located in mountain range} of {Seaview Range} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2262451 wdt:P4552 ?X . ?X wdt:P2348 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'legislative period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seaview Range', 'p': 'mountain range', 'o': '$y0'}}

 Q: When was C. V. Raman nominated for the Nobel Prize in Physics?
 SPARQL: SELECT ?value WHERE { wd:Q60429 p:P1411 ?s . ?s ps:P1411 wd:Q38104 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'C. V. Raman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physics'}, 't': '?x0'}

 Q: What is {member of crew of} of {cosmonaut mission} of {Anatoly Berezovoy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q465724 wdt:P450 ?X . ?X wdt:P1029 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of crew of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anatoly Berezovoy', 'p': 'cosmonaut mission', 'o': '$y0'}}

 Q: What are the depicts of The Starry Night?
 SPARQL: select distinct ?answer where { wd:Q45585 wdt:P180 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Starry Night', 'p': 'depicts', 'o': '?x0'}

 Q: What is the {single} for {lyrics by} of {Lady Gaga}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P676 wd:Q19848 . ?sbj wdt:P31 wd:Q134556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lyrics by', 'o': 'Lady Gaga', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single'}}

 Q: What were the uses of Pan when it was invented in 1970?
 SPARQL: SELECT ?obj WHERE { wd:Q80174 p:P2283 ?s . ?s ps:P2283 ?obj . ?s pq:P575 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pan', 'p': 'uses', 'o': '?x0', 't': '1970'}

 Q: Which music by Egmont describes the disease of Crohn's disease?
 SPARQL: SELECT ?answer WHERE { wd:Q1156413 wdt:P86 ?answer . ?answer wdt:P1050 wd:Q1472}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Egmont', 'p': 'music by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'disease', 'o': "Crohn's disease"}}

 Q: Tell me the redshift of the planetary system called R136.
 SPARQL: SELECT ?answer WHERE { wd:Q5116 wdt:P397 ?X . ?X wdt:P1090 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'redshift', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'R136', 'p': 'planetary system', 'o': '$y0'}}

 Q: does ostrivets have an area that is 0.0 or greater?
 SPARQL: ASK WHERE { wd:Q4338939 wdt:P2046 ?obj filter(?obj > 0.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Ostrivets', 'p': 'area', 'o': '?x0', '?x0': '0.0'}

 Q: How many professorships are in the College de France?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P803 wd:Q202660 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'professorship', 'o': 'College de France'}

 Q: What award did Paul Dirac win together with someone else?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q47480 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Dirac', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Dirac', 'p': 'award', 'o': '$y0'}}]

 Q: What is {position held} of {Shigeru Yoshida} that is {start time} is {1946-5-22} ?
 SPARQL: SELECT ?obj WHERE { wd:Q301804 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shigeru Yoshida', 'p': 'position held', 'o': '?x0', 't': '1946'}

 Q: When did Faina Ranevskaya stop working at the Mossovet Theatre?
 SPARQL: SELECT ?value WHERE { wd:Q470466 p:P108 ?s . ?s ps:P108 wd:Q571291 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faina Ranevskaya', 'p': 'working at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'working at', 'o': 'Mossovet Theatre'}}}

 Q: What notable work and genre did Christopher Hitchens write?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P136 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'notable work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}]

 Q: what is the {of} for {Wolverine} has {subject has role} as {title character} ?
 SPARQL: SELECT ?value WHERE { wd:Q186422 p:P2868 ?s . ?s ps:P2868 wd:Q3246821 . ?s pq:P642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wolverine', 'p': 'subject has role', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subject has role', 'o': 'title character'}}}

 Q: What is {inhabitants} of {subtopic of} of {earthquake} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7944 wdt:P1269 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'earthquake', 'p': 'topic of', 'o': '$y0'}}

 Q: Which has parts of the class of baryon?
 SPARQL: select distinct ?answer where { wd:Q159731 wdt:P2670 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'baryon', 'p': 'has parts of the class', 'o': '?x0'}

 Q: Is the Lagangilang electorate equal to 8717?
 SPARQL: ASK WHERE { wd:Q29020 wdt:P1831 ?obj filter(?obj = 8717) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lagangilang', 'p': 'electorate', 'o': '?x0', '?x0': '8717'}

 Q: Name the earthquake that showed a Mercalli scale of IX but had the least magnitude on the Richter scale?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2528 ?obj . ?ent wdt:P2784 wd:Q23925706} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'magnitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'earthquake', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Mercalli intensity scale', 'o': 'Mercalli scale IX'}}}

 Q: Which is the Pleiades place type identifier for estuary?
 SPARQL: select distinct ?answer where { wd:Q47053 wdt:P2938 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'estuary', 'p': 'Pleiades place type identifier', 'o': '?x0'}

 Q: What was the last position held by Ariel Sharon on 5th August 1981?
 SPARQL: SELECT ?obj WHERE { wd:Q60206 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ariel Sharon', 'p': 'position held', 'o': '?x0', 't': '1981'}

 Q: What is the Commonwealth realm with the highest number of children out of school?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q202686 . ?ent wdt:P2573 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of out of school children', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Commonwealth realm'}}

 Q: what is the {replaces} for {Tiberius} has {position held} as {Roman emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q1407 p:P39 ?s . ?s ps:P39 wd:Q842606 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tiberius', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Roman emperor'}}}

 Q: What is {safety classification and labelling} of {cellulose} that is {NFPA Instability} is {0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80294 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P995 ?x filter(contains(?x,'0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cellulose', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Instability', 'o': '0'}}}

 Q: What is <natural reservoir of> of <Pteropodidae> ?
 SPARQL: select distinct ?answer where { wd:Q185230 wdt:P1606 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pteropodidae', 'p': 'natural reservoir of', 'o': '?x0'}

 Q: Which is the Treccani ID for psychiatry?
 SPARQL: select distinct ?answer where { wd:Q7867 wdt:P3365 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'psychiatry', 'p': 'Treccani ID', 'o': '?x0'}

 Q: Which is the German regional key of Hesse?
 SPARQL: select distinct ?answer where { wd:Q1199 wdt:P1388 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hesse', 'p': 'German regional key', 'o': '?x0'}

 Q: What is {date of death} of {Aratus of Sicyon} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q317331 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aratus of Sicyon', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Which country replaced Czechoslovakia?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q33946 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced', 'o': 'Czechoslovakia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Who is the {gene} for {genetic association} of {hepatitis C}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2293 wd:Q154869 . ?sbj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'hepatitis C', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: Who gave the {has grammatical person} of {used language} of {Donald Pleasence} ?
 SPARQL: SELECT ?answer WHERE { wd:Q314914 wdt:P1412 ?X . ?X wdt:P5110 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical person', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Pleasence', 'p': 'language', 'o': '$y0'}}

 Q: What is {honors} of {George IV of the United Kingdom}, that has {co-founder} is {Philip the Good} ?
 SPARQL: SELECT ?answer WHERE { wd:Q130586 wdt:P166 ?answer . ?answer wdt:P112 wd:Q239337}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George IV of the United Kingdom', 'p': 'honors', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-founder', 'o': 'Philip the Good'}}

 Q: What empire starts with the letter m?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q48349 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is the {republic} for {significant event} of {Indian independence movement}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q12444025 . ?sbj wdt:P31 wd:Q7270 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Indian independence movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic'}}

 Q: Which is the longest span of Humber Bridge?
 SPARQL: select distinct ?answer where { wd:Q1141014 wdt:P2787 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Humber Bridge', 'p': 'longest span', 'o': '?x0'}

 Q: What is {party} of {took part in} of {Sandra Stevens} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7416767 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'party', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sandra Stevens', 'p': 'took part', 'o': '$y0'}}

 Q: Is the cost of damage of the 1986 Piton de la Fournaise eruption equal to t1270953452?
 SPARQL: ASK WHERE { wd:Q3591475 wdt:P2630 ?obj filter(?obj = t1270953452) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1986 Piton de la Fournaise eruption', 'p': 'cost of damage', 'o': '?x0', '?x0': 't1270953452'}

 Q: Tell me the tungsten alloy that has an effect on tungsten carbide exposure and contains the word carbide in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37789249 . ?sbj wdt:P1542 wd:Q21175402 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'carbide')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tungsten alloy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'effect', 'o': 'tungsten carbide exposure'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'carbide'}}

 Q: How many {head of state} are for {Georgia} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q230 wdt:P35 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Georgia', 'p': 'head of state', 'o': '?x0'}

 Q: Which is located in protected area for Loch Lomond?
 SPARQL: select distinct ?answer where { wd:Q208926 wdt:P3018 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Loch Lomond', 'p': 'located in protected area', 'o': '?x0'}

 Q: Is the race time of the 1914 Giro d'Italia less than 584491.2?
 SPARQL: ASK WHERE { wd:Q1086924 wdt:P2781 ?obj filter(?obj < 584491.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': "1914 Giro d'Italia", 'p': 'race time', 'o': '?x0', '?x0': '584491.2'}

 Q: What is the {sovereign state} with the {MAX(total exports)} whose {head of government} is {Viktor Zubkov}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3624078 . ?ent wdt:P2135 ?obj . ?ent wdt:P6 wd:Q147425 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total exports', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Viktor Zubkov'}}}

 Q: What is {award received} of {Meryl Streep} that is {for work} is {The Devil Wears Prada} ?
 SPARQL: SELECT ?obj WHERE { wd:Q873 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q223316 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Meryl Streep', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Devil Wears Prada'}}}

 Q: What country was Mercedes McCambridge of Joliet born in?
 SPARQL: SELECT ?value WHERE { wd:Q140017 p:P19 ?s . ?s ps:P19 wd:Q40345 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mercedes McCambridge', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Joliet'}}}

 Q: what is the {for work} for {Joni Mitchell} has {award received} as {Grammy Award for Best Traditional Pop Vocal Album} ?
 SPARQL: SELECT ?value WHERE { wd:Q205721 p:P166 ?s . ?s ps:P166 wd:Q280481 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joni Mitchell', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Best Traditional Pop Vocal Album'}}}

 Q: What is {major event} of {participant of event} of {Jim Clark} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3137 wdt:P1344 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jim Clark', 'p': 'participant of event', 'o': '$y0'}}

 Q: Give me {country} that {official language} {English} and which that starts with {'z'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6256 . ?sbj wdt:P37 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'en'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What award did Holly Hunter receive in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q105660 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Holly Hunter', 'p': 'award', 'o': '?x0', 't': '1993'}

 Q: What is <Relationship Science organization ID> of <Union of European Football Associations> ?
 SPARQL: select distinct ?answer where { wd:Q35572 wdt:P5181 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Union of European Football Associations', 'p': 'Relationship Science organization ID', 'o': '?x0'}

 Q: What league is the team Ospreys in?
 SPARQL: select distinct ?answer where { wd:Q1518257 wdt:P118 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ospreys', 'p': 'league', 'o': '?x0'}

 Q: Which {kind of music} do {sculptor} {Tikitotmoniki Totems} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18749240 wdt:P170 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kind of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tikitotmoniki Totems', 'p': 'sculptor', 'o': '$y0'}}

 Q: What was the capital of the Muisca Confederation starting in 1450 ?
 SPARQL: SELECT ?obj WHERE { wd:Q5782830 p:P36 ?s . ?s ps:P36 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1450')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Muisca Confederation', 'p': 'capital', 'o': '?x0', 't': '1450'}

 Q: Which is the place of grave of Isaac Abrabanel,that have inhabitants of 209829.0?
 SPARQL: SELECT ?answer WHERE { wd:Q319902 wdt:P119 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'209829.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isaac Abrabanel', 'p': 'place of grave', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '209829.0'}}

 Q: What is {fleet} of {user} of {USAir Flight 5050} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7865889 wdt:P137 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fleet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'USAir Flight 5050', 'p': 'user', 'o': '$y0'}}

 Q: What plays were composed by The Crush Collision March?
 SPARQL: SELECT ?answer WHERE { wd:Q28158040 wdt:P86 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'plays', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Crush Collision March', 'p': 'composed by', 'o': '$y0'}}

 Q: Which skerry has the smallest focal height that is white?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q216851 . ?ent wdt:P2923 ?obj . ?ent wdt:P462 wd:Q23444} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'focal height', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'skerry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'color', 'o': 'white'}}}

 Q: What are the airliner which start with the letter eiríksson
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q210932 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'eiríksson')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airliner'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'eiríksson'}}

 Q: What is The Numbers movie ID of Easy Rider ?
 SPARQL: select distinct ?answer where { wd:Q503638 wdt:P3808 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Easy Rider', 'p': 'The Numbers movie ID', 'o': '?x0'}

 Q: what is the {statement is subject of} for {Harold Prince} has {award received} as {Tony Award for Best Direction of a Musical} ?
 SPARQL: SELECT ?value WHERE { wd:Q605924 p:P166 ?s . ?s ps:P166 wd:Q377293 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Prince', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Tony Award for Best Direction of a Musical'}}}

 Q: Give the highest attendance of the sports season?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q27020041 . ?ent wdt:P1110 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'attendance', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports season'}}

 Q: What is {subdivided into} of {deathplace} of {Nikos Kazantzakis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q214622 wdt:P20 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divided into', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nikos Kazantzakis', 'p': 'deathplace', 'o': '$y0'}}

 Q: What is {nominated for} of {Max Steiner} that is {statement is subject of} is {19th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q350704 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917174 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Max Steiner', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '19th Academy Awards'}}}

 Q: Berlin is the official residence to who?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P263 wd:Q64 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'official residence', 'o': 'Berlin'}

 Q: Give me {type of sport} that contains the word {waterskiing} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q31629 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'waterskiing')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of sport'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'waterskiing'}}

 Q: What academic degree does Emmy Noether have and who was the doctoral advisor?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7099 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P184 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmy Noether', 'p': 'academic degree', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmy Noether', 'p': 'academic degree', 'o': '$y0'}}]

 Q: What academic degree did Leopold von Sacher-Masoch achieve in 1854?
 SPARQL: SELECT ?obj WHERE { wd:Q78474 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1854')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leopold von Sacher-Masoch', 'p': 'academic degree', 'o': '?x0', 't': '1854'}

 Q: Which is a medical treatment for cholera?
 SPARQL: select distinct ?answer where { wd:Q12090 wdt:P924 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cholera', 'p': 'treatment', 'o': '?x0'}

 Q: What is the {human} for {different from} of {James Brown}
 SPARQL:  select distinct ?obj where { wd:Q5950 wdt:P1889 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Brown', 'p': 'different from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {position held} of {Henry V, Holy Roman Emperor} that is {replaced by} is {Lothair III, Holy Roman Emperor} ?
 SPARQL: SELECT ?obj WHERE { wd:Q151707 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q77189 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry V', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Lothair III'}}}

 Q: What is <court> of <Bowers v. Hardwick> ?
 SPARQL: select distinct ?answer where { wd:Q2907274 wdt:P4884 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bowers v. Hardwick', 'p': 'court', 'o': '?x0'}

 Q: Which sister city of Vladivostok has a Wikivoyage banner "Manila Banner.jpg"?
 SPARQL: SELECT ?answer WHERE { wd:Q959 wdt:P190 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Manila Banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vladivostok', 'p': 'sister city', 'o': '?x0'}

 Q: tel me war deity worshipped by religion of ancient Egypt  starts with w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41863069 . ?sbj wdt:P1049 wd:Q447131 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war deity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': 'religion of ancient Egypt'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {television series} for {cast member} of {Burt Reynolds}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P161 wd:Q202148 . ?sbj wdt:P31 wd:Q5398426 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cast member', 'o': 'Burt Reynolds', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series'}}

 Q: When did the Central Bohemian Region reach a population of 1.3 million?
 SPARQL: SELECT ?value WHERE { wd:Q188399 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.3153e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Central Bohemian Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.3153e+06'}, 't': '?x0'}

 Q: What is <Member of the Hellenic Parliament ID> of <Mikis Theodorakis> ?
 SPARQL: select distinct ?answer where { wd:Q151976 wdt:P2278 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mikis Theodorakis', 'p': 'Member of the Hellenic Parliament ID', 'o': '?x0'}

 Q: What is {published by} of {on the tracklist of} of {Thickness-dependent leakage current of (polyvinylidene fluoride/lead titanate) pyroelectric detectors.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51829315 wdt:P1433 ?X . ?X wdt:P123 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thickness-dependent leakage current of (polyvinylidene fluoride/lead titanate) pyroelectric detectors.', 'p': 'on the tracklist of', 'o': '$y0'}}

 Q: What is the location in or next to body of water and time zone of Nice?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q33959 wdt:P206 ?ans_1 . wd:Q33959 wdt:P421 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Nice', 'p': 'body of water', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Nice', 'p': 'time zone', 'o': '?x1'}]

 Q: Is the prisoner count for the Auschwitz concentration camp 152000?
 SPARQL: ASK WHERE { wd:Q7341 wdt:P5630 ?obj filter(?obj = 152000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Auschwitz', 'p': 'prisoner count', 'o': '?x0', '?x0': '152000'}

 Q: When was Frederick William I of Prussia's child Louisa Ulrika of Prussia's date of birth and death?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 wd:Q234251 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Louisa Ulrika of Prussia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Louisa Ulrika of Prussia'}}}]

 Q: Was Isis married to Osiris and Min?
 SPARQL: ASK WHERE { wd:Q79876 wdt:P26 wd:Q46491 . wd:Q79876 wdt:P26 wd:Q192322 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Isis', 'p': 'married to', 'o': '?x0', '?x0': 'Osiris'}, {'h': 'IS', 'v': '?x1', 's': 'Isis', 'p': 'married to', 'o': '?x1', '?x1': 'Min'}]

 Q: What is the country of Abkhazia whose statement is disputed by Russia?
 SPARQL: SELECT ?obj WHERE { wd:Q23334 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P1310 wd:Q159 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abkhazia', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'disputed by', 'o': 'Russia'}}}

 Q: What is {academic degree} of {Bernhard Riemann} that is {conferred by} is {University of Göttingen} ?
 SPARQL: SELECT ?obj WHERE { wd:Q42299 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P1027 wd:Q152838 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernhard Riemann', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'conferred by', 'o': 'University of Göttingen'}}}

 Q: What is <L'île author ID> of <Yann Martel> ?
 SPARQL: select distinct ?answer where { wd:Q13914 wdt:P5532 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yann Martel', 'p': "L'île author ID", 'o': '?x0'}

 Q: What role did Aberdeen play when it was a part of the regional government Grampian?
 SPARQL: SELECT ?value WHERE { wd:Q36405 p:P131 ?s . ?s ps:P131 wd:Q1542364 . ?s pq:P3831 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aberdeen', 'p': 'region', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'region', 'o': 'Grampian'}}}

 Q: What is the Class IB flammable liquid with the highest electric dipole moment whose safety classification and labelling is NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2201 ?obj . ?ent wdt:P4952 wd:Q51139288 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'electric dipole moment', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}}

 Q: What is the {ethnoreligious group} for {country} of {Golden Horde}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q79965 . ?sbj wdt:P31 wd:Q11197007 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Golden Horde', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnoreligious group'}}

 Q: What is <minimal lethal dose> of <acetone> ?
 SPARQL: select distinct ?answer where { wd:Q49546 wdt:P2300 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'acetone', 'p': 'minimal lethal dose', 'o': '?x0'}

 Q: What award did Umberto Eco receive in 2001?
 SPARQL: SELECT ?obj WHERE { wd:Q12807 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Umberto Eco', 'p': 'award', 'o': '?x0', 't': '2001'}

 Q: Which wiki with script conversion has the largest data size?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q36509592 . ?ent wdt:P3575 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'data size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'wiki with script conversion'}}

 Q: How many {country} are to/by {Chile} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P17 wd:Q298 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Chile'}

 Q: Show me provincial or territorial capital city in Canada that starts with y.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21507383 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'provincial or territorial capital city in Canada'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is the federal state that applies to the Australian dollar jurisdiction?
 SPARQL:  select distinct ?obj where { wd:Q259502 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Australian dollar', 'p': 'jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What is {border} of {Georgia}, that has {timezone} is {UTC−06:00} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1428 wdt:P47 ?answer . ?answer wdt:P421 wd:Q5385}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Georgia', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timezone', 'o': 'UTC−06:00'}}

 Q: Which religious affiliation of Qara Khitai is under the domain of Buddhist studies?
 SPARQL: SELECT ?answer WHERE { wd:Q862304 wdt:P140 ?answer . ?answer wdt:P2579 wd:Q1000976}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Qara Khitai', 'p': 'religious affiliation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'domain', 'o': 'Buddhist studies'}}

 Q: What is the {scalar physical quantity} for {measured physical quantity} of {electronvolt}
 SPARQL:  select distinct ?obj where { wd:Q83327 wdt:P111 ?obj . ?obj wdt:P31 wd:Q181175 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'electronvolt', 'p': 'measured physical quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scalar'}}

 Q: What is an historical period that starts with the letter v.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11514315 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical period'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {antonym of} of {DRTL} of {back} ?
 SPARQL: SELECT ?answer WHERE { wd:Q133279 wdt:P654 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'antonym', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'back', 'p': 'DRTL', 'o': '$y0'}}

 Q: What is the category for employees of the organization and the member of of Yale_University ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q49112 wdt:P4195 ?ans_1 . wd:Q49112 wdt:P463 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Yale', 'p': 'category for employees of the organization', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Yale', 'p': 'member of', 'o': '?x1'}]

 Q: Which civilisation of Norse mythology had theatre seasons on Viking Age?
 SPARQL: SELECT ?answer WHERE { wd:Q128285 wdt:P2596 ?answer . ?answer wdt:P2348 wd:Q213649}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Norse mythology', 'p': 'civilisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'theatre season', 'o': 'Viking Age'}}

 Q: Name a alternative version of Gospel of Matthew
 SPARQL:  select distinct ?obj where { wd:Q392302 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gospel of Matthew', 'p': 'version', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version'}}

 Q: What is the {world view} for {opposite of} of {atheism}
 SPARQL:  select distinct ?obj where { wd:Q7066 wdt:P461 ?obj . ?obj wdt:P31 wd:Q49447 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'atheism', 'p': 'opposite of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'world view'}}

 Q: What is the Wikidata time precision for a decade?
 SPARQL: select distinct ?answer where { wd:Q39911 wdt:P2803 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'decade', 'p': 'Wikidata time precision', 'o': '?x0'}

 Q: What is {found in species} of {physically interacts with} of {acetylcholine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q180623 wdt:P129 ?X . ?X wdt:P703 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'found in species', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'acetylcholine', 'p': 'physically interacts with', 'o': '$y0'}}

 Q: How many {family} are to/by {Julio-Claudian dynasty} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P53 wd:Q192841 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'family', 'o': 'Julio-Claudian dynasty'}

 Q: What is {award received} of {Tim Berners-Lee} that is {point in time} is {2010-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tim Berners-Lee', 'p': 'award', 'o': '?x0', 't': '2010'}

 Q: Which naval artillery has the most effective firing range?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q511450 . ?ent wdt:P4176 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'effective firing range', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'naval artillery'}}

 Q: what is the {point in time} for {Gianni Rodari} has {award received} as {Hans Christian Andersen Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q193018 p:P166 ?s . ?s ps:P166 wd:Q327154 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gianni Rodari', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Hans Christian Andersen Award'}, 't': '?x0'}

 Q: Where were the birthplaces of Nawab Bai's children?
 SPARQL: SELECT ?answer WHERE { wd:Q6982746 wdt:P40 ?X . ?X wdt:P19 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birthplace', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nawab Bai', 'p': 'child', 'o': '$y0'}}

 Q: What is field of exercise of publishing house has  Rock 'N' Roll Comics ?
 SPARQL: SELECT ?answer WHERE { wd:Q20874879 wdt:P123 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of exercise', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Rock 'N' Roll Comics", 'p': 'publishing house', 'o': '$y0'}}

 Q: What is {position held} of {Benedetto Croce} that is {start time} is {1946-6-25} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192348 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Benedetto Croce', 'p': 'position held', 'o': '?x0', 't': '1946'}

 Q: Which is the agglutinative language for the official language of Achaemenid Empire?
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P37 ?obj . ?obj wdt:P31 wd:Q171263 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'official language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'agglutinative language'}}

 Q: What precedes and what follows Star Wars Episode V: The Empire Strikes Back in the Star Wars series?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q181795 p:P179 ?s . ?s ps:P179 wd:Q22092344 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'precedes', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars'}}}]

 Q: What is {academic major} and {academic degree} of {{Josef Mengele} has {educated at} as {Ludwig Maximilian University of Munich}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q57109 p:P69 ?s . ?s ps:P69 wd:Q55044 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josef Mengele', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Munich'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josef Mengele', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Munich'}}}]

 Q: what is the {start time} for {Burgas} has {head of government} as {Dimitar Nikolov} ?
 SPARQL: SELECT ?value WHERE { wd:Q6509 p:P6 ?s . ?s ps:P6 wd:Q224746 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Burgas', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Dimitar Nikolov'}}}

 Q: What is the {sovereign state} for {owned by} of {Mona Lisa}
 SPARQL:  select distinct ?obj where { wd:Q12418 wdt:P127 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mona Lisa', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who is the son of the sibling of Freydís Eiríksdóttir
 SPARQL: SELECT ?answer WHERE { wd:Q451114 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Freydís Eiríksdóttir', 'p': 'sibling', 'o': '$y0'}}

 Q: What is the {think tank} with the {MAX(total expenditure)} whose {field of work} is {social policy}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q155271 . ?ent wdt:P2402 ?obj . ?ent wdt:P101 wd:Q828395 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total expenditure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'think tank', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'field of work', 'o': 'social policy'}}}

 Q: What is {apparent magnitude} of {planet} of {far side of the Moon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q816838 wdt:P376 ?X . ?X wdt:P1215 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'apparent magnitude', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'far side of the Moon', 'p': 'planet', 'o': '$y0'}}

 Q: What is the TV host of the copy of Berpacu Dalam Melodi?
 SPARQL: SELECT ?answer WHERE { wd:Q12475983 wdt:P144 ?X . ?X wdt:P371 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'host', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berpacu Dalam Melodi', 'p': 'copy of', 'o': '$y0'}}

 Q: In which barley wine contains the maximum of alcohol by volume?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q808329 . ?ent wdt:P2665 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'alcohol by volume', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'barley wine'}}

 Q: What is {sport played} of {event producer} of {World Series} ?
 SPARQL: SELECT ?answer WHERE { wd:Q265538 wdt:P664 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sport', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'World Series', 'p': 'event producer', 'o': '$y0'}}

 Q: Which is the Internet Broadway Database person ID of Anna Paquin?
 SPARQL: select distinct ?answer where { wd:Q199884 wdt:P1220 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anna Paquin', 'p': 'Internet Broadway Database person ID', 'o': '?x0'}

 Q: What is the elevation of the highest point along the Hunter River in Prince Edward Island?
 SPARQL: SELECT ?value WHERE { wd:Q1979 p:P610 ?s . ?s ps:P610 wd:Q3143359 . ?s pq:P2044 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elevation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prince Edward Island', 'p': 'highest point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'highest point', 'o': 'Hunter River'}}}

 Q: what is the {end time} for {Kate Sheppard} has {member of} as {National Council of Women of New Zealand} ?
 SPARQL: SELECT ?value WHERE { wd:Q455072 p:P463 ?s . ?s ps:P463 wd:Q6971948 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kate Sheppard', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'National Council of Women of New Zealand'}}}

 Q: What is {label} of {sequel is} of {Are You Experienced} ?
 SPARQL: SELECT ?answer WHERE { wd:Q640397 wdt:P156 ?X . ?X wdt:P264 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'label', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Are You Experienced', 'p': 'sequel is', 'o': '$y0'}}

 Q: Was the screenwriter of SpongeBob Squarepants named Kazimieras G. Prapuolenis?
 SPARQL: ASK WHERE { wd:Q83279 wdt:P58 wd:Q1291296 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'SpongeBob', 'p': 'screenwriter', 'o': '?x0', '?x0': 'Kazimieras G. Prapuolenis'}]

 Q: What award did Ettore Scola receive in 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q53037 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ettore Scola', 'p': 'award', 'o': '?x0', 't': '1980'}

 Q: What is the {stock exchange} for {headquarters location} of {Cleveland}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q37320 . ?sbj wdt:P31 wd:Q11691 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Cleveland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stock exchange'}}

 Q: What are the survival skill which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q891382 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'survival skill'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {member of sports team} of {Clarence Seedorf} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q484909 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clarence Seedorf', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clarence Seedorf', 'p': 'team', 'o': '$y0'}}]

 Q: Did {Alexander_Hamilton} {occupation} {lawyer}?
 SPARQL: ASK WHERE { wd:Q178903 wdt:P106 wd:Q40348 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Alexander Hamilton', 'p': 'occupation', 'o': '?x0', '?x0': 'lawyer'}]

 Q: How many {educated at} are to/by {law school} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P69 wd:Q1321960 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'educated at', 'o': 'law school'}

 Q: Is it true that Delta Air Lines cash is equivelant to 1252000000.0?
 SPARQL: ASK WHERE { wd:Q188920 wdt:P2232 ?obj filter(?obj = 1252000000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Delta Air Lines', 'p': 'cash', 'o': '?x0', '?x0': '1252000000.0'}

 Q: How is the criterion used for Symphony No. 5 different from Roll Over Beethoven?
 SPARQL: SELECT ?value WHERE { wd:Q188709 p:P1889 ?s . ?s ps:P1889 wd:Q1437885 . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Symphony No. 5', 'p': 'different from', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'different from', 'o': 'Roll Over Beethoven'}}}

 Q: Who is {service operator} of {aircraft carried} of {LATAM Brasil} ?
 SPARQL: SELECT ?answer WHERE { wd:Q690789 wdt:P121 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'LATAM Brasil', 'p': 'aircraft carried', 'o': '$y0'}}

 Q: Where is the death place of Fedor Tokarev, which was divided into the Perovo District?
 SPARQL: SELECT ?answer WHERE { wd:Q535597 wdt:P20 ?answer . ?answer wdt:P150 wd:Q2364993}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fedor Tokarev', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Perovo District'}}

 Q: What is the {municipality of Spain} for {shares border with} of {Bilbao}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q8692 . ?sbj wdt:P31 wd:Q2074737 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Bilbao', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Spain'}}

 Q: Who was Rosa Luxemburg's spouse until 1903?
 SPARQL: SELECT ?obj WHERE { wd:Q7231 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1903')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rosa Luxemburg', 'p': 'spouse', 'o': '?x0', 't': '1903'}

 Q: What is <significant drug interaction> of <methadone> ?
 SPARQL: select distinct ?answer where { wd:Q179996 wdt:P769 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'methadone', 'p': 'significant drug interaction', 'o': '?x0'}

 Q: Which edition of Othello is this?
 SPARQL:  select distinct ?obj where { wd:Q26833 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Othello', 'p': 'edition', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'edition'}}

 Q: What is {monarch} of {sport country} of {Mana Mamuwene} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3844110 wdt:P1532 ?X . ?X wdt:P35 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'monarch', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mana Mamuwene', 'p': 'sport country', 'o': '$y0'}}

 Q: what is the {replaced by} for {Malcolm Turnbull} has {position held} as {Leader of the Opposition of Australia} ?
 SPARQL: SELECT ?value WHERE { wd:Q927550 p:P39 ?s . ?s ps:P39 wd:Q2460433 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Turnbull', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Leader of the Opposition of Australia'}}}

 Q: Tell me literary character whose name has the word wu in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3658341 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary character'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wu'}}

 Q: what is the {for work} for {Eddie Izzard} has {award received} as {Primetime Emmy Award for Individual Performance in a Variety or Music Program} ?
 SPARQL: SELECT ?value WHERE { wd:Q254022 p:P166 ?s . ?s ps:P166 wd:Q4377021 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eddie Izzard', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Primetime Emmy Award for Individual Performance in a Variety or Music Program'}}}

 Q: What is {elected in} and {end cause} of {{Ramsay MacDonald} has {position held} as {Member of the 32nd Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q166646 p:P39 ?s . ?s ps:P39 wd:Q41582584 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramsay MacDonald', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 32nd Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramsay MacDonald', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 32nd Parliament of the United Kingdom'}}}]

 Q: Which cricket team containing the word Indian was headed by coach Mahela Jayawardene?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17376093 . ?sbj wdt:P286 wd:Q2739165 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'indians')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cricket team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coach', 'o': 'Mahela Jayawardene'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'indians'}}

 Q: What is a Christian holiday that starts with the letter s.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60075825 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian holiday'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the historical country of the diplomatic relation of Czechoslovakia?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q33946 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Czechoslovakia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: Who are the alumni of the developer of Gregorian telescope?
 SPARQL: SELECT ?answer WHERE { wd:Q742318 wdt:P61 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'alumni of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregorian telescope', 'p': 'developer', 'o': '$y0'}}

 Q: tell me beer style starts with t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1998962 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'beer style'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which galaxy with the Eridanus constellation has the fastest radial velocity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q318 . ?ent wdt:P2216 ?obj . ?ent wdt:P59 wd:Q10433 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'radial velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'galaxy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Eridanus'}}}

 Q: Is the height of the EMT Luna X-2000 greater than 0.696?
 SPARQL: ASK WHERE { wd:Q646050 wdt:P2048 ?obj filter(?obj > 0.696) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'EMT Luna X-2000', 'p': 'height', 'o': '?x0', '?x0': '0.696'}

 Q: Vladimir Lenin is a citizen of which republic of the Soviet Union ?
 SPARQL:  select distinct ?obj where { wd:Q1394 wdt:P27 ?obj . ?obj wdt:P31 wd:Q236036 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Lenin', 'p': 'citizen of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic of the Soviet Union'}}

 Q: What is {sculptors} of {portrayed by} of {mandolin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q302497 wdt:P1299 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sculptor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mandolin', 'p': 'portrayed by', 'o': '$y0'}}

 Q: "Whichis {protonym} of {King Quail}, that has {taxon parent} is {Tetrao} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q244429 wdt:P1403 ?answer . ?answer wdt:P171 wd:Q756174}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'King Quail', 'p': 'protonym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'taxon parent', 'o': 'Tetrao'}}

 Q: What is <health specialty> of <microbiology> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1995 wd:Q7193}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'health specialty', 'o': 'microbiology'}

 Q: What is award received  from  Claudia Cardinale   point in time  is  2002 - 6 - 1 ?
 SPARQL: SELECT ?obj WHERE { wd:Q107006 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Claudia Cardinale', 'p': 'award received', 'o': '?x0', 't': '2002'}

 Q: How many {art-name} are for {Kang Youwei} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q360135 wdt:P1787 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Kang Youwei', 'p': 'art-name', 'o': '?x0'}

 Q: Which is the shopping day that starts with "b"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q43516519 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'shopping day'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: How many US National Archives Identifier are mentioned in newspaper?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q11032 wdt:P1225 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'newspaper', 'p': 'National Archives Identifier', 'o': '?x0'}

 Q: Did {Julius_Caesar} {country of citizenship} {ancient Rome}?
 SPARQL: ASK WHERE { wd:Q1048 wdt:P27 wd:Q1747689 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Caesar', 'p': 'citizenship', 'o': '?x0', '?x0': 'Rome'}]

 Q: Which is the day in year for periodic occurrence of the Chinese New Year?
 SPARQL: select distinct ?answer where { wd:Q131772 wdt:P837 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chinese New Year', 'p': 'day in year for periodic occurrence', 'o': '?x0'}

 Q: Who is the director and director of photography of Spirited Away?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q155653 wdt:P57 ?ans_1 . wd:Q155653 wdt:P344 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Spirited Away', 'p': 'director', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Spirited Away', 'p': 'director of photography', 'o': '?x1'}]

 Q: Is it true that the prussian s 3 has 2.4 cylinders?
 SPARQL: ASK WHERE { wd:Q319087 wdt:P1100 ?obj filter(?obj = 2.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Prussian S 3', 'p': 'number of cylinders', 'o': '?x0', '?x0': '2.4'}

 Q: What is <residence> of <Isaac> ?
 SPARQL: select distinct ?answer where { wd:Q671872 wdt:P551 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Isaac', 'p': 'residence', 'o': '?x0'}

 Q: How many {measured by} are for {mental depression} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q4340209 wdt:P1880 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'mental depression', 'p': 'measured by', 'o': '?x0'}

 Q: Give me {art museum} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q207694 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art museum'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: How many significant drug interactions are there for aspirin?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q18216 wdt:P769 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'aspirin', 'p': 'significant drug interaction', 'o': '?x0'}

 Q: Which is the Compagnon de la Libération ID for Winston Churchill?
 SPARQL: select distinct ?answer where { wd:Q8016 wdt:P4804 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Winston Churchill', 'p': 'Compagnon de la Libération ID', 'o': '?x0'}

 Q: Which is NIST/CODATA ID for Planck length?
 SPARQL: select distinct ?answer where { wd:Q207387 wdt:P1645 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Planck length', 'p': 'NIST/CODATA ID', 'o': '?x0'}

 Q: What territory overlaps the Rideau Canal?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q651323 wdt:P3179 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Rideau Canal', 'p': 'territory overlaps', 'o': '?x0'}

 Q: Which is the taxon parent of the ingredient of squab?
 SPARQL: SELECT ?answer WHERE { wd:Q7581884 wdt:P186 ?X . ?X wdt:P171 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'taxon parent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'squab', 'p': 'ingredient', 'o': '$y0'}}

 Q: What is the Italian Senate of the Republic ID of Claudio Abbado?
 SPARQL: select distinct ?answer where { wd:Q151608 wdt:P2549 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Claudio Abbado', 'p': 'Italian Senate of the Republic ID', 'o': '?x0'}

 Q: What is {open days} of {British Museum} and {open period from}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?obj . ?s pq:P3027 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'open days', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}]

 Q: What is the Mir@bel journal ID for Journal des sçavans ?
 SPARQL: select distinct ?answer where { wd:Q927072 wdt:P4730 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Journal des sçavans', 'p': 'Mir@bel journal ID', 'o': '?x0'}

 Q: What award did Fred Astaire receive in the year 1959?
 SPARQL: SELECT ?obj WHERE { wd:Q100937 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1959')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fred Astaire', 'p': 'award', 'o': '?x0', 't': '1959'}

 Q: What is {award received} of {Robert A. Heinlein} that is {for work} is {Requiem} ?
 SPARQL: SELECT ?obj WHERE { wd:Q123078 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q7314838 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert A. Heinlein', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Requiem'}}}

 Q: How many {vessel} are to/by {Soyuz} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1876 wd:Q579421 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'vessel', 'o': 'Soyuz'}

 Q: What is {instrument played} of {sport played} of {Oleg Davydov} ?
 SPARQL: SELECT ?answer WHERE { wd:Q920635 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oleg Davydov', 'p': 'sport', 'o': '$y0'}}

 Q: What is the diplomatic relation of the sovereign state of North China?
 SPARQL: SELECT ?answer WHERE { wd:Q1046848 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North China', 'p': 'sovereign state', 'o': '$y0'}}

 Q: WhIch is medical specialty of genetic association of FUT2 ?
 SPARQL: SELECT ?answer WHERE { wd:Q18024807 wdt:P2293 ?X . ?X wdt:P1995 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'medical specialty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'FUT2', 'p': 'genetic association', 'o': '$y0'}}

 Q: What is the {location of formation} and the {political ideology} of {Ku_Klux_Klan} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q47131 wdt:P740 ?ans_1 . wd:Q47131 wdt:P1142 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'KKK', 'p': 'location of formation', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'KKK', 'p': 'political ideology', 'o': '?x1'}]

 Q: Give me {aircraft model} that contains the word {tu} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15056995 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tu'}}

 Q: What is the {human} for {distributor} of {The Birth of a Nation}
 SPARQL:  select distinct ?obj where { wd:Q220394 wdt:P750 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Birth of a Nation', 'p': 'distributor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: where is the head of government and head of state of Kerala?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1186 wdt:P6 ?ans_1 . wd:Q1186 wdt:P35 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Kerala', 'p': 'head of government', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Kerala', 'p': 'head of state', 'o': '?x1'}]

 Q: What is the {country code top-level domain} for {top-level Internet domain} of {Soviet Union}
 SPARQL:  select distinct ?obj where { wd:Q15180 wdt:P78 ?obj . ?obj wdt:P31 wd:Q42032 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Soviet Union', 'p': 'domain', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country code top-level domain'}}

 Q: What is {educated at} of {Ralph Bunche} that is {end time} is {1928-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q213500 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1928')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ralph Bunche', 'p': 'educated at', 'o': '?x0', 't': '1928'}

 Q: What is the Australian Classification category with the highest minimum age whose instance of is 15 rating?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q26708074 . ?ent wdt:P2899 ?obj . ?ent wdt:P31 wd:Q47542366 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'minimum age', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Australian Classification category', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '15 rating'}}}

 Q: How many {worshipped by} are for {Yahweh} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q766677 wdt:P1049 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Yahweh', 'p': 'worshipped by', 'o': '?x0'}

 Q: Who are the publishers for Civilization?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1868663 wdt:P123 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Civilization', 'p': 'publisher', 'o': '?x0'}

 Q: What {subject in} the {history of Missouri} has its origins, or {has shires}, in {Cape Girardeau County}?
 SPARQL: SELECT ?answer WHERE { wd:Q5865528 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q484740}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Missouri', 'p': 'subject in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has shires', 'o': 'Cape Girardeau County'}}

 Q: What is the {national economy} for {currency} of {Japanese yen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q8146 . ?sbj wdt:P31 wd:Q6456916 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Yen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national economy'}}

 Q: what is the {end time} for {Chelsea Manning} has {place of detention} as {United States Disciplinary Barracks} ?
 SPARQL: SELECT ?value WHERE { wd:Q298423 p:P2632 ?s . ?s ps:P2632 wd:Q642270 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chelsea Manning', 'p': 'place of detention', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of detention', 'o': 'United States Disciplinary Barracks'}}}

 Q: Give me {branch of science} that {practiced by} {engineer} and which contains the word {engineering} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj wdt:P3095 wd:Q81096 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'engineering')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of science', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'engineer'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'engineering'}}

 Q: Give me {computer network protocol} that {main regulatory text} {WebDAV SEARCH} and which contains the word {hypertext} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15836568 . ?sbj wdt:P92 wd:Q30500704 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hypertext')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer network protocol', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'main regulatory text', 'o': 'WebDAV SEARCH'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'hypertext'}}

 Q: Which is the crystal system of an amorphous solid?
 SPARQL: select distinct ?answer where { ?answer wdt:P556 wd:Q103382}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'crystal system', 'o': 'amorphous solid'}

 Q: What is the {business enterprise} with the {MAX(number of subscribers)} whose {legal form} is {joint-stock company}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P3744 ?obj . ?ent wdt:P1454 wd:Q134161 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of subscribers', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'legal form', 'o': 'joint-stock company'}}}

 Q: Which is the kingdom that had Christianity as official religion and starts with the letter k?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q417175 . ?sbj wdt:P3075 wd:Q5043 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kingdom', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official religion', 'o': 'Christianity'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'k'}}

 Q: When did Tadao Ando receive his Asahi Prize award?
 SPARQL: SELECT ?value WHERE { wd:Q208220 p:P166 ?s . ?s ps:P166 wd:Q720434 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tadao Ando', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Asahi Prize'}, 't': '?x0'}

 Q: In 1993, what award did Anthony Hopkins receive?
 SPARQL: SELECT ?obj WHERE { wd:Q65932 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anthony Hopkins', 'p': 'award', 'o': '?x0', 't': '1993'}

 Q: what is the {start time} for {Frankfurt} has {instance of} as {city} ?
 SPARQL: SELECT ?value WHERE { wd:Q1794 p:P31 ?s . ?s ps:P31 ?x filter(contains(?x,'http://dbpedia.org/ontology/City')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frankfurt', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'http'}}}

 Q: What is the played by of the before was of The Wiggles Movie Soundtrack ?
 SPARQL: SELECT ?answer WHERE { wd:Q7774812 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Wiggles Movie Soundtrack', 'p': 'before was', 'o': '$y0'}}

 Q: What are the hot spring which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q177380 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hot spring'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is the gene for genetic association of major depressive disorder?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2293 wd:Q42844 . ?sbj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'major depressive disorder', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: How many {noble title} are to/by {Sir} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P97 wd:Q209690 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'noble title', 'o': 'Sir'}

 Q: When was Vince Vaughn nominated for MTV Movie Award for Best On-Screen Duo?
 SPARQL: SELECT ?value WHERE { wd:Q107730 p:P1411 ?s . ?s ps:P1411 wd:Q4220900 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vince Vaughn', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'MTV Movie Award for Best On-Screen Duo'}, 't': '?x0'}

 Q: What is <owned by> of <Bank of China> ?
 SPARQL: select distinct ?answer where { wd:Q790068 wdt:P127 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bank of China', 'p': 'owned by', 'o': '?x0'}

 Q: What is the {comics character} for {sibling} of {Wonder Woman}
 SPARQL:  select distinct ?obj where { wd:Q338430 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q1114461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wonder Woman', 'p': 'sibling', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comics character'}}

 Q: What is the {ward or electoral division of the United Kingdom} with the {MIN(mean age)} whose {country} is {United Kingdom}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q589282 . ?ent wdt:P4442 ?obj . ?ent wdt:P17 wd:Q145} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'mean age', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ward or electoral division of the United Kingdom', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'UK'}}}

 Q: What is Leslie Lamport's country of citizenship?
 SPARQL: select distinct ?answer where { wd:Q92613 wdt:P27 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leslie Lamport', 'p': 'country of citizenship', 'o': '?x0'}

 Q: What state of Peranakan Museum has a total fertility rate of 1.29?
 SPARQL: SELECT ?answer WHERE { wd:Q3078303 wdt:P131 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'1.29'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peranakan Museum', 'p': 'state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '1.29'}}

 Q: Is the atomic number of sulfur 16?
 SPARQL: ASK WHERE { wd:Q2359934 wdt:P1086 ?obj filter(?obj = 16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'sulfur-31', 'p': 'atomic number', 'o': '?x0', '?x0': '16'}

 Q: What is {subtopic of} of {economy of Japan}, that has {diplomatic relation} is {Afghanistan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q319831 wdt:P1269 ?answer . ?answer wdt:P530 wd:Q889}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'economy of Japan', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Afghanistan'}}

 Q: what is the {place of publication} for {Saturday Night Fever} has {publication date} as {1977-12-16} ?
 SPARQL: SELECT ?value WHERE { wd:Q47654 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1977')) . ?s pq:P291 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saturday Night Fever', 'p': 'published', 'o': '$y0'}}

 Q: What is the {language} for {dialect of} of {Hebrew}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4913 wd:Q9288 . ?sbj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'he', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Which is the discovery method of Proxima Centauri b?
 SPARQL: select distinct ?answer where { wd:Q26692445 wdt:P1046 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Proxima Centauri b', 'p': 'discovery method', 'o': '?x0'}

 Q: What is {member of} of {writers} of {Asymmetric coevolutionary networks facilitate biodiversity maintenance.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q33240531 wdt:P50 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asymmetric coevolutionary networks facilitate biodiversity maintenance.', 'p': 'author', 'o': '$y0'}}

 Q: What is sport number for Tom Brady?
 SPARQL: select distinct ?answer where { wd:Q313381 wdt:P1618 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tom Brady', 'p': 'sport number', 'o': '?x0'}

 Q: What is {written by} of {theme} of {The Berenstain Bears (1985 TV series)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16200174 wdt:P144 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'written by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Berenstain Bears', 'p': 'theme', 'o': '$y0'}}

 Q: When did child of Louis IX of France and date of birth?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: What is the determination method for war?
 SPARQL: select distinct ?answer where { ?answer wdt:P459 wd:Q198}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'determination method', 'o': 'war'}

 Q: How many days in a year for the {Passover} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q121393 wdt:P837 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Passover', 'p': 'day', 'o': '?x0'}

 Q: Which {has wards} of {stockholders} of {Kagawa Prefectural Road Route 18} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11667481 wdt:P127 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has wards', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kagawa Prefectural Road Route 18', 'p': 'stockholder', 'o': '$y0'}}

 Q: what is the {point in time} for {Nikolay Makarov} has {award received} as {State Stalin Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q1075399 p:P166 ?s . ?s ps:P166 wd:Q2329480 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nikolay Makarov', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Stalin Prize'}, 't': '?x0'}

 Q: What is the total fertility rate of Albania in the year 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q222 p:P4841 ?s . ?s ps:P4841 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Albania', 'p': 'total fertility rate', 'o': '?x0', 't': '2012'}

 Q: Which is the natural language which starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33742 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Is the town with the local dialling code 45 the home town of Horiyoshi III?
 SPARQL: SELECT ?answer WHERE { wd:Q1558289 wdt:P551 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'45'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Horiyoshi III', 'p': 'home town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'dialling code', 'o': '45'}}

 Q: What is the SourceForge project of Portable Network Graphics?
 SPARQL: select distinct ?answer where { wd:Q178051 wdt:P2209 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Portable Network Graphics', 'p': 'SourceForge project', 'o': '?x0'}

 Q: Which is the FIS ski jumper ID of Matti Nykänen?
 SPARQL: select distinct ?answer where { wd:Q16849 wdt:P2775 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Matti Nykänen', 'p': 'FIS ski jumper ID', 'o': '?x0'}

 Q: what is the {determination method} for {Haiti} has {total fertility rate} as {3.853} ?
 SPARQL: SELECT ?value WHERE { wd:Q790 p:P4841 ?s . ?s ps:P4841 ?x filter(contains(?x,'3.853')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Haiti', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'total fertility rate', 'o': '3.853'}}}

 Q: What twinned administrative body of Krakow started in 1995?
 SPARQL: SELECT ?obj WHERE { wd:Q31487 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1995')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Krakow', 'p': 'twinned administrative body', 'o': '?x0', 't': '1995'}

 Q: what is the {start time} for {Karl Pearson} has {member of} as {American Academy of Arts and Sciences} ?
 SPARQL: SELECT ?value WHERE { wd:Q310794 p:P463 ?s . ?s ps:P463 wd:Q463303 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karl Pearson', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'American Academy of Arts and Sciences'}}}

 Q: Who gave the {member of crew of} of {cosmonaut mission} of {Scott E. Parazynski} ?
 SPARQL: SELECT ?answer WHERE { wd:Q706739 wdt:P450 ?X . ?X wdt:P1029 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of crew of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Scott E. Parazynski', 'p': 'cosmonaut mission', 'o': '$y0'}}

 Q: How many {molecular function} are to/by {DNA polymerase} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P680 wd:Q206286 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'molecular function', 'o': 'DNA polymerase'}

 Q: What is the {academic discipline} for {history of topic} of {history of mathematics}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2184 wd:Q185264 . ?sbj wdt:P31 wd:Q11862829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'history of topic', 'o': 'history of mathematics', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic discipline'}}

 Q: what is the {for work} for {Jamie Foxx} has {nominated for} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q171905 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jamie Foxx', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: When did Lech Walesa receive the Order of Pius IX award?
 SPARQL: SELECT ?value WHERE { wd:Q444 p:P166 ?s . ?s ps:P166 wd:Q1423841 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lech Walesa', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of Pius IX'}, 't': '?x0'}

 Q: Who is the mayor of Sihanoukville's sister town?
 SPARQL: SELECT ?answer WHERE { wd:Q18207676 wdt:P190 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mayor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sihanoukville', 'p': 'sister town', 'o': '$y0'}}

 Q: Where is the death location coined by BL Lacertae?
 SPARQL: SELECT ?answer WHERE { wd:Q373148 wdt:P61 ?X . ?X wdt:P20 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'BL Lacertae', 'p': 'coined', 'o': '$y0'}}

 Q: What is {twin city} of {location of birth} of {János Kornai} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179735 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'János Kornai', 'p': 'location of birth', 'o': '$y0'}}

 Q: Is the literate population of Matukpur equals 0?
 SPARQL: ASK WHERE { wd:Q60379965 wdt:P6499 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Matukpur', 'p': 'literate population', 'o': '?x0', '?x0': '0'}

 Q: What is {sister town} of {birth location} of {Yi Sun-sin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50184 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yi Sun-sin', 'p': 'birth location', 'o': '$y0'}}

 Q: re the number of elevators in the Garching-Forschungszentrum equal to 1?
 SPARQL: ASK WHERE { wd:Q439592 wdt:P1301 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Garching-Forschungszentrum', 'p': 'number of elevators', 'o': '?x0', '?x0': '1'}

 Q: What is the {written work} for {followed by} of {Great Expectations}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P156 wd:Q219552 . ?sbj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'Great Expectations', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What is the {ship type} for {product or material produced} of {SpaceX}
 SPARQL:  select distinct ?obj where { wd:Q193701 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q2235308 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'SpaceX', 'p': 'product or material produced', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ship type'}}

 Q: how many drug interactions does fentanyl have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q407541 wdt:P769 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'fentanyl', 'p': 'drug interaction', 'o': '?x0'}

 Q: Is the radial velocity of the Andromeda galaxy greater than -240.8?
 SPARQL: ASK WHERE { wd:Q2469 wdt:P2216 ?obj filter(?obj > -240.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Andromeda', 'p': 'radial velocity', 'o': '?x0', '?x0': '-240.8'}

 Q: what is the {start time} for {Walgreens} has {chairperson} as {Charles Rudolph Walgreen, Sr.} ?
 SPARQL: SELECT ?value WHERE { wd:Q1591889 p:P488 ?s . ?s ps:P488 wd:Q5082215 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Walgreens', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Charles Rudolph Walgreen, Sr.'}}}

 Q: Give me {communist party} that {mouthpiece} {Pravda} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q233591 . ?sbj wdt:P2813 wd:Q183644 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'communist party', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mouthpiece', 'o': 'Pravda'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is the {religion} for {facet of} of {history of Islam}
 SPARQL:  select distinct ?obj where { wd:Q642379 wdt:P1269 ?obj . ?obj wdt:P31 wd:Q9174 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'history of Islam', 'p': 'facet of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religion'}}

 Q: Who are the kids of Henry I of England, whose brother is Robert FitzEdith, Lord Okehampton}?
 SPARQL: SELECT ?answer WHERE { wd:Q101384 wdt:P40 ?answer . ?answer wdt:P3373 wd:Q7344358}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry I of England', 'p': 'kid', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bro', 'o': 'Robert FitzEdith, Lord Okehampton'}}

 Q: Which is the conurbation for the capital of Empire of Japan?
 SPARQL:  select distinct ?obj where { wd:Q188712 wdt:P36 ?obj . ?obj wdt:P31 wd:Q245260 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire of Japan', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conurbation'}}

 Q: what is the locomotive class has the highest  boiler pressure?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q19832486 . ?ent wdt:P5071 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'boiler pressure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'locomotive class'}}

 Q: What is the {operator} and the {powerplant} of {McDonnell_Douglas_F-15_Eagle} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q29251 wdt:P137 ?ans_1 . wd:Q29251 wdt:P516 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'McDonnell Douglas F-15 Eagle', 'p': 'operator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'McDonnell Douglas F-15 Eagle', 'p': 'powerplant', 'o': '?x1'}]

 Q: Who is the  {taxon} for {parent taxon} of {fly agaric}
 SPARQL:  select distinct ?obj where { wd:Q131227 wdt:P171 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fly agaric', 'p': 'parent taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What method did the census use to determine the population of the Coquimbo Region?
 SPARQL: SELECT ?obj WHERE { wd:Q2121 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Coquimbo Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'method', 'o': 'census'}}}

 Q: What was the population of Amiens in 1926?
 SPARQL: SELECT ?obj WHERE { wd:Q41604 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1926')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Amiens', 'p': 'population', 'o': '?x0', 't': '1926'}

 Q: What is {won by} of {nominee for} of {Donald Allen Wollheim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q908589 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Allen Wollheim', 'p': 'nominee for', 'o': '$y0'}}

 Q: What award did Colin Powell receive on 1991-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q150851 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Colin Powell', 'p': 'award', 'o': '?x0', 't': '1991'}

 Q: What is Ontario Sports Hall of Fame athlete ID for James Naismith ?
 SPARQL: select distinct ?answer where { wd:Q188962 wdt:P4412 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Naismith', 'p': 'Ontario Sports Hall of Fame athlete ID', 'o': '?x0'}

 Q: When was the Human Development Index recorded as 0.827 for Argentina?
 SPARQL: SELECT ?value WHERE { wd:Q414 p:P1081 ?s . ?s ps:P1081 ?x filter(contains(?x,'0.827')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Argentina', 'p': 'Human Development Index', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'Human Development Index', 'o': '0.827'}, 't': '?x0'}

 Q: what is the {point in time} for {Santiago Ramón y Cajal} has {award received} as {Grand Cross of the Order of Isabella the Catholic} ?
 SPARQL: SELECT ?value WHERE { wd:Q150526 p:P166 ?s . ?s ps:P166 wd:Q17365974 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Santiago Ramón y Cajal', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grand Cross of the Order of Isabella the Catholic'}, 't': '?x0'}

 Q: Tell me era whose name has the word zirconian in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q630830 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zirconian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'era'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zirconian'}}

 Q: What is the {human} for {affiliation} of {Yale University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q49112 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliated with', 'o': 'Yale University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Did {American football} {uses} {football boots}?
 SPARQL: ASK WHERE { wd:Q41323 wdt:P2283 wd:Q512804 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'American football', 'p': 'uses', 'o': '?x0', '?x0': 'football boots'}]

 Q: Give me {type of business entity} that contains the word {stiftung} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1269299 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stiftung')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of business entity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'stiftung'}}

 Q: What is the population of Madagascar in the year 1999?
 SPARQL: SELECT ?obj WHERE { wd:Q1019 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Madagascar', 'p': 'population', 'o': '?x0', 't': '1999'}

 Q: What is {date of birth} and {date of death} of {{Frederick William I of Prussia} has {child} as {Prince Henry of Prussia}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 wd:Q50993 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Prince Henry of Prussia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Prince Henry of Prussia'}}}]

 Q: Which is the first appearance of Donkey Kong?
 SPARQL: select distinct ?answer where { ?answer wdt:P4584 wd:Q12384}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'first appearance', 'o': 'Donkey Kong'}

 Q: What is the {operating system} for {named after} of {Unix}
 SPARQL:  select distinct ?obj where { wd:Q11368 wdt:P138 ?obj . ?obj wdt:P31 wd:Q9135 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unix', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operating system'}}

 Q: Which is the OEIS ID of a prime number?
 SPARQL: select distinct ?answer where { wd:Q49008 wdt:P829 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'prime number', 'p': 'OEIS ID', 'o': '?x0'}

 Q: Who is informed by the advisor of Ramesh Sitaraman?
 SPARQL: SELECT ?answer WHERE { wd:Q7289442 wdt:P184 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'informed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramesh Sitaraman', 'p': 'advisor', 'o': '$y0'}}

 Q: What is themed after radian with a unit symbol of __?
 SPARQL: SELECT ?answer WHERE { wd:Q33680 wdt:P144 ?answer . ?answer wdt:P5061 ?x FILTER(contains(?x,'م'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'radian', 'p': 'theme', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'unit symbol', 'o': 'م'}}

 Q: What is the diplomatic relation that comes from screamo?
 SPARQL: SELECT ?answer WHERE { wd:Q11363 wdt:P495 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'screamo', 'p': 'comes from', 'o': '$y0'}}

 Q: what is the {determination method} for {New Brunswick} has {population} as {751171.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q1965 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'751171.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'New Brunswick', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '751171.0'}}}

 Q: Which is the Wikitribune category for corruption?
 SPARQL: select distinct ?answer where { wd:Q366 wdt:P4973 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'corruption', 'p': 'Wikitribune category', 'o': '?x0'}

 Q: what is the {end time} for {Charles VI of France} has {position held} as {King of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q160349 p:P39 ?s . ?s ps:P39 wd:Q18384454 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles VI of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of France'}}}

 Q: Which is the BARTOC ID for Hornbostel-Sachs?
 SPARQL: select distinct ?answer where { wd:Q496327 wdt:P2689 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hornbostel-Sachs', 'p': 'BARTOC ID', 'o': '?x0'}

 Q: Who is the fictional character in the notable work of Shigeru Miyamoto?
 SPARQL:  select distinct ?obj where { wd:Q12382 wdt:P800 ?obj . ?obj wdt:P31 wd:Q95074 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shigeru Miyamoto', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional character'}}

 Q: What is {location of birth} of {Elihu Yale}, that has {human population} is {655884} ?
 SPARQL: SELECT ?answer WHERE { wd:Q514846 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'655884'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Elihu Yale', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '655884'}}

 Q: What is the population of Curacao in the year 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q25279 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Curacao', 'p': 'population', 'o': '?x0', 't': '2010'}

 Q: what is the {end time} for {Rhineland-Palatinate} has {head of government} as {Helmut Kohl} ?
 SPARQL: SELECT ?value WHERE { wd:Q1200 p:P6 ?s . ?s ps:P6 wd:Q2518 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rhineland-Palatinate', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Helmut Kohl'}}}

 Q: What is {date of birth} and {date of death} of {{Louis IX of France} has {child} as {Blanche de France}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 wd:Q14751950 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Blanche de France'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'son', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'son', 'o': 'Blanche de France'}}}]

 Q: Which is the work location of Arab League?
 SPARQL: select distinct ?answer where { ?answer wdt:P937 wd:Q7172}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Arab League'}

 Q: What is {mains electricity voltage} of {land} of {Bibliothèque nationale de France} ?
 SPARQL: SELECT ?answer WHERE { wd:Q193563 wdt:P17 ?X . ?X wdt:P2884 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mains electricity voltage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bibliothèque nationale de France', 'p': 'land', 'o': '$y0'}}

 Q: what is the {electoral district} for {Thomas Wakley} has {position held} as {Member of the 12th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q334239 p:P39 ?s . ?s ps:P39 wd:Q41582548 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Wakley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 12th Parliament of the United Kingdom'}}}

 Q: How many officeholders are there with {Jiang Zemin} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1308 wd:Q16597 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Jiang Zemin'}

 Q: Is Boris Johnson the father of Stanley Johnson?
 SPARQL: ASK WHERE { wd:Q180589 wdt:P22 wd:Q7599711 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Boris Johnson', 'p': 'father', 'o': '?x0', '?x0': 'Stanley Johnson'}]

 Q: Which is Behind The Voice Actors franchise ID for Silent Hill?
 SPARQL: select distinct ?answer where { wd:Q236821 wdt:P5382 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Silent Hill', 'p': 'Behind The Voice Actors franchise ID', 'o': '?x0'}

 Q: Which directory service has the highest number of port?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q756230 . ?ent wdt:P1641 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'port', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'directory service'}}

 Q: What is Ivo Andric's IPA Transcription?
 SPARQL: select distinct ?answer where { wd:Q47561 wdt:P898 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ivo Andric', 'p': 'IPA', 'o': '?x0'}

 Q: Is the French economy the main topic of the Court of Cassation, the highest judicial authority?
 SPARQL: SELECT ?answer WHERE { wd:Q8057 wdt:P1269 ?answer . ?answer wdt:P209 wd:Q1138599}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'French economy', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest judicial authority', 'o': 'Court of Cassation'}}

 Q: Did {Marvel_Comics} {owner of} {Marvel Tales}?
 SPARQL: ASK WHERE { wd:Q173496 wdt:P1830 wd:Q6778201 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Marvel Comics', 'p': 'owner of', 'o': '?x0', '?x0': 'Marvel Tales'}]

 Q: What was Charles Babbage academic degree in 1814?
 SPARQL: SELECT ?obj WHERE { wd:Q46633 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1814')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles Babbage', 'p': 'academic degree', 'o': '?x0', 't': '1814'}

 Q: What is the habitat of Typha?
 SPARQL: select distinct ?answer where { wd:Q145707 wdt:P2974 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Typha', 'p': 'habitat', 'o': '?x0'}

 Q: Is it true that the longitude of ascending node of 1174 Marmara equals to 0.91583?
 SPARQL: ASK WHERE { wd:Q136762 wdt:P2213 ?obj filter(?obj = 0.91583) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1174 Marmara', 'p': 'longitude of ascending node', 'o': '?x0', '?x0': '0.91583'}

 Q: What is {date of first performance} of {La traviata} that is {musical conductor} is {Gaetano Mares} ?
 SPARQL: SELECT ?obj WHERE { wd:Q186162 p:P1191 ?s . ?s ps:P1191 ?obj . ?s pq:P3300 wd:Q5516697 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of first performance', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'La traviata', 'p': 'date of first performance', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'musical conductor', 'o': 'Gaetano Mares'}}}

 Q: What is {producer of} of {maker} of {300B} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4634305 wdt:P176 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'produces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '300B', 'p': 'maker', 'o': '$y0'}}

 Q: What is the fastest race in the Velká pardubická?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1701273 . ?ent wdt:P2781 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'race time', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Velká pardubická'}}

 Q: How many {muscle insertion} are for {humerus} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q162595 wdt:P3491 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'humerus', 'p': 'muscle insertion', 'o': '?x0'}

 Q: What is Jochi's date of birth?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q186581 wdt:P569 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Jochi', 'p': 'date of birth', 'o': '?x0'}

 Q: Tell me warfare whose name has the word war in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12786121 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'warfare'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: Tell me the astronomical observatory with the most observing time?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1254933 . ?ent wdt:P3891 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'observing time available', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'astronomical observatory'}}

 Q: What is the population of Turks and Caicos Islands that started at 1985-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q18221 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1985')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Turks and Caicos Islands', 'p': 'population', 'o': '?x0', 't': '1985'}

 Q: What is <Athletics Australia athlete ID> of <Shirley Strickland> ?
 SPARQL: select distinct ?answer where { wd:Q230954 wdt:P3915 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shirley Strickland', 'p': 'Athletics Australia athlete ID', 'o': '?x0'}

 Q: Tell me animation technique whose name has the word supermarionation in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3516833 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'supermarionation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animation technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'supermarionation'}}

 Q: When did Erasmus earn his Doctor of Divinity degree?
 SPARQL: SELECT ?value WHERE { wd:Q43499 p:P512 ?s . ?s ps:P512 wd:Q1984623 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Erasmus', 'p': 'degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Doctor of Divinity'}, 't': '?x0'}

 Q: Tell me force whose name has the word fundamental in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11402 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'fundamental')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'force'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'fundamental'}}

 Q: What flammable gas with a safety classification and labelling of NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response has the highest pKa?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21073026 . ?ent wdt:P1117 ?obj . ?ent wdt:P4952 wd:Q51139288 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'pKa', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable gas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}}

 Q: Which phonological system is used by a facet of Hungarian?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1269 wd:Q9067 . ?sbj wdt:P31 wd:Q49124804 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Hungarian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phonological system'}}

 Q: Is the duration of 2064-2065 one-year-period equal to 1.2?
 SPARQL: ASK WHERE { wd:Q61702903 wdt:P2047 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2064-2065 one-year-period', 'p': 'duration', 'o': '?x0', '?x0': '1.2'}

 Q: What is {father} and {date of death} of {{Abigail Adams} has {child} as {John Quincy Adams}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q11816 . ?s pq:P22 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'father', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'John Quincy Adams'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'John Quincy Adams'}}}]

 Q: Give me {dialect} that contains the word {öömrang} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33384 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'öömrang')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'öömrang'}}

 Q: What is the {position} for {position held} of {John Jay}
 SPARQL:  select distinct ?obj where { wd:Q310847 wdt:P39 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Jay', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: what is the {has quality} for {Heidelberg University} has {IPv4 routing prefix} as {129.206.0.0/16} ?
 SPARQL: SELECT ?value WHERE { wd:Q151510 p:P3761 ?s . ?s ps:P3761 ?x filter(contains(?x,'129.206.0.0/16')) . ?s pq:P1552 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has quality', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Heidelberg University', 'p': 'IPv4 routing prefix', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'IPv4 routing prefix', 'o': '129.206.0.0/16'}}}

 Q: Which sport discipline does Abebe Bikila compete in?
 SPARQL: select distinct ?answer where { wd:Q52596 wdt:P2416 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Abebe Bikila', 'p': 'sport discipline', 'o': '?x0'}

 Q: Which is designated as terrorist by of Boko Haram?
 SPARQL: select distinct ?answer where { wd:Q212372 wdt:P3461 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Boko Haram', 'p': 'designated as terrorist by', 'o': '?x0'}

 Q: Is it true that cloud computing win the 2014 Laurence Olivier Awards?
 SPARQL: ASK WHERE { wd:Q483639 wdt:P166 wd:Q16995982 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'cloud computing', 'p': 'win', 'o': '?x0', '?x0': '2014 Laurence Olivier Awards'}]

 Q: What is the {human} for {place of death} of {Venice}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P20 wd:Q641 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Venice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What equipment is operated by the administrator of the B-52 Stratofortress?
 SPARQL: SELECT ?answer WHERE { wd:Q174534 wdt:P137 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stratofortress', 'p': 'operated by', 'o': '$y0'}}

 Q: What is the {high school} for {educated at} of {Phil Hartman}
 SPARQL:  select distinct ?obj where { wd:Q366834 wdt:P69 ?obj . ?obj wdt:P31 wd:Q9826 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phil Hartman', 'p': 'educated at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'high school'}}

 Q: In 1978, what was Graham Greene nominated for?
 SPARQL: SELECT ?obj WHERE { wd:Q128560 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1978')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Graham Greene', 'p': 'nominated for', 'o': '?x0', 't': '1978'}

 Q: What is {position held} of {Daniel Webster} that is {replaces} is {John Middleton Clayton} ?
 SPARQL: SELECT ?obj WHERE { wd:Q106231 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q17889 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Daniel Webster', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'John Middleton Clayton'}}}

 Q: Which is the capitol building that Thomas Jefferson was the architect for?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q11812 . ?sbj wdt:P31 wd:Q3284499 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Thomas Jefferson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capitol building'}}

 Q: What was the population of Connecticut as of 2010-4-1?
 SPARQL: SELECT ?obj WHERE { wd:Q779 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Connecticut', 'p': 'population', 'o': '?x0', 't': '2010'}

 Q: What was the royal of the noble rank of the head of state in the Roman Empire?
 SPARQL:  select distinct ?obj where { wd:Q2277 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q355567 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roman Empire', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble rank'}}

 Q: Which is the historical country that replaced the Ottoman Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q12560 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced', 'o': 'Ottoman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is the {location of formation} and the {place of birth} of {Barbra_Streisand} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q4636 wdt:P740 ?ans_1 . wd:Q4636 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Barbra Streisand', 'p': 'location of formation', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Barbra Streisand', 'p': 'place of birth', 'o': '?x1'}]

 Q: What is the {university and college sports club} for {represents} of {Georgetown University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1268 wd:Q333886 . ?sbj wdt:P31 wd:Q2367225 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'represents', 'o': 'Georgetown University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university and college sports club'}}

 Q: How many {authority} are to/by {European Union} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P797 wd:Q458 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'authority', 'o': 'eu'}

 Q: What is {date of birth} and {mother} of {{Charlemagne} has {child} as {Charles the Younger}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q283107 . ?s pq:P569 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles the Younger'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'mother', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles the Younger'}}}]

 Q: What is {nominated for} of {Saul Bellow} that is {for work} is {Humboldt's Gift} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83059 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q3793856 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saul Bellow', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': "Humboldt's Gift"}}}

 Q: What is the taxon parent of Dugong dugon which is known by the vernacular name 儒艮?
 SPARQL: SELECT ?answer WHERE { wd:Q129544 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'儒艮'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dugong dugon', 'p': 'taxon parent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': '儒艮'}}

 Q: What is the {historical country} for {capital} of {Thiruvananthapuram}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q167715 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Thiruvananthapuram', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is {signs language} of {Francisco Morazán}, that has {label in original language} is {castellano} ?
 SPARQL: SELECT ?answer WHERE { wd:Q332111 wdt:P1412 ?answer . ?answer wdt:P1705 ?x FILTER(contains(?x,'castellano'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Francisco Morazan', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'label in original language', 'o': 'castellano'}}

 Q: What is {educated at} of {Muhammad Iqbal} that is {academic degree} is {Bachelor of Arts} ?
 SPARQL: SELECT ?obj WHERE { wd:Q484141 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q1765120 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Muhammad Iqbal', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Bachelor of Arts'}}}

 Q: What is the {dialect} for {dialect of} of {Old English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4913 wd:Q42365 . ?sbj wdt:P31 wd:Q33384 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'Old English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect'}}

 Q: What is the GeoNames ID for Bengbu?
 SPARQL: select distinct ?answer where { wd:Q360069 wdt:P1566 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bengbu', 'p': 'GeoNames ID', 'o': '?x0'}

 Q: When did educated at of Umberto Eco and academic degree
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q12807 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Umberto Eco', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Umberto Eco', 'p': 'educated at', 'o': '$y0'}}]

 Q: How many deaths took place as a result of conflict of Axis?
 SPARQL: SELECT ?answer WHERE { wd:Q43056 wdt:P607 ?X . ?X wdt:P1120 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'deaths', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Axis', 'p': 'conflict', 'o': '$y0'}}

 Q: What disease has the shortest incubation period in humans?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12136 . ?ent wdt:P3488 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'minimal incubation period in humans', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: What is Webb-site organization ID for The University of Hong Kong ?
 SPARQL: select distinct ?answer where { wd:Q15568 wdt:P5300 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Hong Kong', 'p': 'Webb-site organization ID', 'o': '?x0'}

 Q: What is {employer} of {Jean-Baptiste Say} that is {start time} is {1831-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q13513 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1831')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jean-Baptiste Say', 'p': 'employer', 'o': '?x0', 't': '1831'}

 Q: What is the {type of quantum particle} with the {MAX(g-factor)} whose {different from} is {neutronium}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P1097 ?obj . ?ent wdt:P1889 wd:Q1195471 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'g-factor', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'different from', 'o': 'neutronium'}}}

 Q: What language does Ranveer Singh speak, and what award have they received?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q902879 wdt:P1412 ?ans_1 . wd:Q902879 wdt:P166 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ranveer Singh', 'p': 'language', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ranveer Singh', 'p': 'award', 'o': '?x1'}]

 Q: How many landing locations are there in the Atlantic Ocean?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1158 wd:Q97 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'landing location', 'o': 'Atlantic Ocean'}

 Q: What is the {mother} and the {child} of {Philip_II_of_Spain} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q34417 wdt:P25 ?ans_1 . wd:Q34417 wdt:P40 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Felipe II', 'p': 'mother', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Felipe II', 'p': 'child', 'o': '?x1'}]

 Q: Which is Yad Vashem Encyclopedia of the Ghettos ID for Warsaw Ghetto?
 SPARQL: select distinct ?answer where { wd:Q154607 wdt:P3735 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Warsaw Ghetto', 'p': 'Yad Vashem Encyclopedia of the Ghettos ID', 'o': '?x0'}

 Q: What is {position held} of {George Stephanopoulos} that is {replaced by} is {Sidney Blumenthal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1655924 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q3483318 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Stephanopoulos', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Sidney Blumenthal'}}}

 Q: What was located in the administrative territorial entity of Arkhangelsk on September 23, 1937?
 SPARQL: SELECT ?obj WHERE { wd:Q1851 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1937')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arkhangelsk', 'p': 'located in the administrative territorial entity', 'o': '?x0', 't': '1937'}

 Q: What is the {disease} for {medical condition treated} of {hydrogen peroxide}
 SPARQL:  select distinct ?obj where { wd:Q171877 wdt:P2175 ?obj . ?obj wdt:P31 wd:Q12136 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hydrogen peroxide', 'p': 'medical condition treated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: Did {Andy_Warhol} {place of death} {New York City}?
 SPARQL: ASK WHERE { wd:Q5603 wdt:P20 wd:Q60 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Andy Warhol', 'p': 'place of death', 'o': '?x0', '?x0': 'NYC'}]

 Q: What is {is in the village of} of {works at} of {David Sumner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21062278 wdt:P108 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Sumner', 'p': 'worked at', 'o': '$y0'}}

 Q: Who is the author of "Good King Wenceslas" and has an education at Trinity College?
 SPARQL: SELECT ?answer WHERE { wd:Q1529116 wdt:P676 ?answer . ?answer wdt:P69 wd:Q332342}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Good King Wenceslas', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'education', 'o': 'Trinity College'}}

 Q: what is model of Naomi Parker Fraley ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2634 wd:Q47486504}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'model', 'o': 'Naomi Parker Fraley'}

 Q: When did member of sports team of John Charles and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q312404 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Charles', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Charles', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is the member of the political party and sports team of Andre Agassi?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q7407 wdt:P102 ?ans_1 . wd:Q7407 wdt:P54 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Andre Agassi', 'p': 'party', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Andre Agassi', 'p': 'team', 'o': '?x1'}]

 Q: What is {diplomatic relation} of {national of} of {Alan Dargin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2623428 wdt:P27 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Dargin', 'p': 'national of', 'o': '$y0'}}

 Q: what is the {point in time} for {Coronation Street} has {nominated for} as {British Academy Television Awards} ?
 SPARQL: SELECT ?value WHERE { wd:Q945030 p:P1411 ?s . ?s ps:P1411 wd:Q1369077 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Coronation Street', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'British Academy Television Awards'}, 't': '?x0'}

 Q: what is the {start time} for {Tomsk} has {located in the administrative territorial entity} as {Tomsk Governorate} ?
 SPARQL: SELECT ?value WHERE { wd:Q976 p:P131 ?s . ?s ps:P131 wd:Q1378406 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tomsk', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Tomsk Governorate'}}}

 Q: Which tablet computer has the largest memory capacity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q155972 . ?ent wdt:P2928 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'memory capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tablet computer'}}

 Q: Is the partition coefficient water/octanol of the trichloromonofluoromethane equal to 2.53?
 SPARQL: ASK WHERE { wd:Q423000 wdt:P2993 ?obj filter(?obj = 2.53) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'trichloromonofluoromethane', 'p': 'partition coefficient water/octanol', 'o': '?x0', '?x0': '2.53'}

 Q: what is the {end time} for {Ivo Andrić} has {member of} as {Serbian Academy of Sciences and Arts} ?
 SPARQL: SELECT ?value WHERE { wd:Q47561 p:P463 ?s . ?s ps:P463 wd:Q1132636 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ivo Andrić', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Serbian Academy of Sciences and Arts'}}}

 Q: Tell me the folk religion that has as foundational text Nihon Shoki and starts with the letter s?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1068640 . ?sbj wdt:P457 wd:Q813935 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'folk religion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'foundational text', 'o': 'Nihon Shoki'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the name in native language for Paul Strand?
 SPARQL: select distinct ?answer where { wd:Q453839 wdt:P1559 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paul Strand', 'p': 'name in native language', 'o': '?x0'}

 Q: What is <Library of Congress Demographic Group Terms ID> of <housekeeper> ?
 SPARQL: select distinct ?answer where { wd:Q2596569 wdt:P4946 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'housekeeper', 'p': 'Library of Congress Demographic Group Terms ID', 'o': '?x0'}

 Q: Which is the Electronic Enlightenment ID for Napoleon?
 SPARQL: select distinct ?answer where { wd:Q517 wdt:P3429 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Napoleon', 'p': 'Electronic Enlightenment ID', 'o': '?x0'}

 Q: What is the intensive quantity measured by amperes per volt meter that contains the word "conductivity " in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3387041 . ?sbj wdt:P1880 wd:Q20966435 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'conductivity')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intensive quantity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'amperes per volt meter'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'conductivity'}}

 Q: Is the maximum gradient of Chiemsee-Bahn equal to 2.5?
 SPARQL: ASK WHERE { wd:Q659425 wdt:P2595 ?obj filter(?obj = 2.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Chiemsee-Bahn', 'p': 'maximum gradient', 'o': '?x0', '?x0': '2.5'}

 Q: which type of medical test starts with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55215251 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of medical test'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is {educated at} of {Lloyd Shapley} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q244739 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lloyd Shapley', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lloyd Shapley', 'p': 'educated at', 'o': '$y0'}}]

 Q: Did {London} {twinned administrative body} {Phnom Penh}?
 SPARQL: ASK WHERE { wd:Q84 wdt:P190 wd:Q1850 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'London', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Phnom Penh'}]

 Q: What is {died in} of {Nadezhda Mandelstam}, that has {sister city} is {Vienna} ?
 SPARQL: SELECT ?answer WHERE { wd:Q234765 wdt:P20 ?answer . ?answer wdt:P190 wd:Q1741}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nadezhda Mandelstam', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Vienna'}}

 Q: Who are rhe sons of Emperor Wu of Jin whose surname is Sima?
 SPARQL: SELECT ?answer WHERE { wd:Q7356 wdt:P40 ?answer . ?answer wdt:P734 wd:Q592176}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Emperor Wu of Jin', 'p': 'son', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'surname', 'o': 'Sima'}}

 Q: Is Kenya's nominal GDP per capita equal to 1376.71?
 SPARQL: ASK WHERE { wd:Q114 wdt:P2132 ?obj filter(?obj = 1376.71) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Kenya', 'p': 'nominal GDP per capita', 'o': '?x0', '?x0': '1376.71'}

 Q: what is the {point in time} for {Groucho Marx} has {award received} as {Academy Honorary Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q103846 p:P166 ?s . ?s ps:P166 wd:Q727328 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Groucho Marx', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Honorary Award'}, 't': '?x0'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Marco van Basten} has {member of sports team} as {Netherlands national under-21 football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q483629 p:P54 ?s . ?s ps:P54 wd:Q1811026 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marco van Basten', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Netherlands national under-21 football team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marco van Basten', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Netherlands national under-21 football team'}}}]

 Q: What is {political party} of {governor} of {Altmarkkreis Salzwedel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6061 wdt:P6 ?X . ?X wdt:P102 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'party', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Altmarkkreis Salzwedel', 'p': 'governor', 'o': '$y0'}}

 Q: "Which male relating to Antonio Stradivari, has an abbreviation of мужской ?"
 SPARQL: SELECT ?answer WHERE { wd:Q182011 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'мужской'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antonio Stradivari', 'p': 'male', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'abbreviation', 'o': 'мужской'}}

 Q: What was the Papua New Guinea inflation rate in 2008-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q691 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Papua New Guinea', 'p': 'inflation rate', 'o': '?x0', 't': '2008'}

 Q: Which characters of Tosca Are U  carceriere?
 SPARQL: SELECT ?obj WHERE { wd:Q192941 p:P674 ?s . ?s ps:P674 ?obj . ?s pq:P1705 ?x filter(contains(?x,'Un carceriere')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tosca', 'p': 'characters', 'o': '?x0'}

 Q: What is {place of burial} of {Coco Chanel} that is {coordinate location} is {46.519952777778 6.6010833333333} ?
 SPARQL: SELECT ?obj WHERE { wd:Q45661 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P625 ?x filter(contains(?x,'46.519952777778 6.6010833333333')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Coco Chanel', 'p': 'place of burial', 'o': '?x0'}

 Q: What is {position held} of {Malcolm Fraser} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q315979 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Fraser', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Fraser', 'p': 'position held', 'o': '$y0'}}]

 Q: Which is the Brooklyn Museum artwork ID for butter knife?
 SPARQL: select distinct ?answer where { wd:Q2561443 wdt:P4740 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'butter knife', 'p': 'Brooklyn Museum artwork ID', 'o': '?x0'}

 Q: Is Tina Turner's family name Turner?
 SPARQL: ASK WHERE { wd:Q131814 wdt:P734 wd:Q12804512 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Tina Turner', 'p': 'family name', 'o': '?x0', '?x0': 'Turner'}]

 Q: Is the angular resolution of AMiBA equal to 2?
 SPARQL: ASK WHERE { wd:Q1094807 wdt:P3439 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AMiBA', 'p': 'angular resolution', 'o': '?x0', '?x0': '2'}

 Q: tell  me ice hockey team league National Hockey League starts with o
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4498974 . ?sbj wdt:P118 wd:Q1215892 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ice hockey team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'league', 'o': 'National Hockey League'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: Who gave the {academic subject} of {part of work} of {The Cdc14B-Cdh1-Plk1 axis controls the G2 DNA-damage-response checkpoint} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24317772 wdt:P1433 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Cdc14B-Cdh1-Plk1 axis controls the G2 DNA-damage-response checkpoint', 'p': 'part of work', 'o': '$y0'}}

 Q: What award did Eugene Fama receive on 1-1-2013?
 SPARQL: SELECT ?obj WHERE { wd:Q359317 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eugene Fama', 'p': 'award', 'o': '?x0', 't': '2013'}

 Q: What is the {ring system} for {child astronomical body} of {Jupiter}
 SPARQL:  select distinct ?obj where { wd:Q319 wdt:P398 ?obj . ?obj wdt:P31 wd:Q28951811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jupiter', 'p': 'child astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ring system'}}

 Q: Does the Scoville grade of the Carolina Reaper equal 1255440.0
 SPARQL: ASK WHERE { wd:Q15427475 wdt:P2658 ?obj filter(?obj = 1255440.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Carolina Reaper', 'p': 'Scoville grade', 'o': '?x0', '?x0': '1255440.0'}

 Q: What is the parent organisation of the label Wayfaring Sons?
 SPARQL: SELECT ?answer WHERE { wd:Q7975896 wdt:P264 ?X . ?X wdt:P749 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent organisation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wayfaring Sons', 'p': 'label', 'o': '$y0'}}

 Q: What is {key incident} of {record producer} of {Marma Veeran} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6772032 wdt:P162 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key incident', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marma Veeran', 'p': 'producer', 'o': '$y0'}}

 Q: What is <PlantList-ID> of <Spinacia oleracea> ?
 SPARQL: select distinct ?answer where { wd:Q81464 wdt:P1070 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Spinacia oleracea', 'p': 'PlantList-ID', 'o': '?x0'}

 Q: What is {record producer} of {part of series} of {It Hurts Me Too} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50397044 wdt:P179 ?X . ?X wdt:P162 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'It Hurts Me Too', 'p': 'part of series', 'o': '$y0'}}

 Q: What is {libretto by} of {Das Rheingold}, that has {famous books} is {Lohengrin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q327717 wdt:P87 ?answer . ?answer wdt:P800 wd:Q23085}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Das Rheingold', 'p': 'libretto by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'famous books', 'o': 'Lohengrin'}}

 Q: What is the {federated state} for {headquarters location} of {Nazi Germany}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q7318 . ?sbj wdt:P31 wd:Q107390 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Nazi Germany', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federated state'}}

 Q: What is {location born} of {Fischer Black}, that has {inhabitants} is {572059.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q963275 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'572059.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fischer Black', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '572059.0'}}

 Q: Is the muzzle velocity of the AK47 less than 572
 SPARQL: ASK WHERE { wd:Q37116 wdt:P4137 ?obj filter(?obj < 572.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'AK47', 'p': 'muzzle velocity', 'o': '?x0', '?x0': '572.0'}

 Q: Did {Antonin_Scalia} {educated at} {Stanford Law School} and {Georgetown College} ?
 SPARQL: ASK WHERE { wd:Q11156 wdt:P69 wd:Q8012895 . wd:Q11156 wdt:P69 wd:Q5546980 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Antonin Scalia', 'p': 'educated at', 'o': '?x0', '?x0': 'Stanford Law School'}, {'h': 'IS', 'v': '?x1', 's': 'Antonin Scalia', 'p': 'educated at', 'o': '?x1', '?x1': 'Georgetown College'}]

 Q: What is the {video game publisher} for {developer} of {Space Invaders}
 SPARQL:  select distinct ?obj where { wd:Q220665 wdt:P178 ?obj . ?obj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: Give me {film character} that {publisher} {Marvel Comics} and which contains the word {wolverine} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15773347 . ?sbj wdt:P123 wd:Q173496 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wolverine')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'publisher', 'o': 'Marvel Comics'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wolverine'}}

 Q: Which is the posthumous work that was the notable work of Ludwig Wittgenstein?
 SPARQL:  select distinct ?obj where { wd:Q9391 wdt:P800 ?obj . ?obj wdt:P31 wd:Q17518461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ludwig Wittgenstein', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'posthumous work'}}

 Q: How many {medical condition treated} are to/by {cough} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2175 wd:Q35805 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'medical condition treated', 'o': 'cough'}

 Q: What is the EGROKN ID of the Russian Museum?
 SPARQL: select distinct ?answer where { wd:Q211043 wdt:P5381 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian Museum', 'p': 'EGROKN ID', 'o': '?x0'}

 Q: who is executive producer of Bicycle Thieves ?
 SPARQL: select distinct ?answer where { wd:Q172837 wdt:P1431 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bicycle Thieves', 'p': 'executive producer', 'o': '?x0'}

 Q: What is the geotope with the lowest topographic isolation whose country is Germany ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q372363 . ?ent wdt:P2659 ?obj . ?ent wdt:P17 wd:Q183} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'topographic isolation', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geotope', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Germany'}}}

 Q: Which is the ICAA film catalogue ID of Brokeback Mountain?
 SPARQL: select distinct ?answer where { wd:Q160618 wdt:P5128 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brokeback Mountain', 'p': 'ICAA film catalogue ID', 'o': '?x0'}

 Q: Which archipelagic state has the highest inflation rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q13107770 . ?ent wdt:P1279 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'inflation rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archipelagic state'}}

 Q: What was the amount of population in New South Wales in 2014-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q3224 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New South Wales', 'p': 'population', 'o': '?x0', 't': '2014'}

 Q: What is the name of the of the balloon-borne telescope with the largest wavelength?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4851844 . ?ent wdt:P2808 ?obj . ?ent wdt:P31 wd:Q4851844 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'wavelength', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'balloon-borne telescope'}}

 Q: What is {position held} of {Benito Mussolini} that is {replaced by} is {Luigi Federzoni} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23559 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q1379609 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benito Mussolini', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Luigi Federzoni'}}}

 Q: What is the son of the sister of Asim ibn Umar ?
 SPARQL: SELECT ?answer WHERE { wd:Q4806987 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asim ibn Umar', 'p': 'sister', 'o': '$y0'}}

 Q: What is the {human} for {head of government} of {Rotterdam}
 SPARQL:  select distinct ?obj where { wd:Q34370 wdt:P6 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rotterdam', 'p': 'head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: How many filming locations are located in Oxfordshire?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P915 wd:Q23169 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'filming location', 'o': 'Oxfordshire'}

 Q: It is true that Harley Quinn's partner was Hal Jordan?
 SPARQL: ASK WHERE { wd:Q849477 wdt:P451 wd:Q2345627 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Harley Quinn', 'p': 'partner', 'o': '?x0', '?x0': 'Hal Jordan'}]

 Q: What is the genetic association for multiple sclerosis?
 SPARQL: select distinct ?answer where { ?answer wdt:P2293 wd:Q8277}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'multiple sclerosis'}

 Q: who subject of international law for office held by head of the organisation of United Nations Secretary-General?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2388 wd:Q81066 . ?sbj wdt:P31 wd:Q1896989 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'United Nations Secretary-General', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'subject of international law'}}

 Q: Who is the{dynasty} for {family} of {Rollo}
 SPARQL:  select distinct ?obj where { wd:Q273773 wdt:P53 ?obj . ?obj wdt:P31 wd:Q164950 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rollo', 'p': 'family', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dynasty'}}

 Q: What is the {position} for {office held by head of state} of {Achaemenid Empire}
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'office held by head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is <affiliation> of <Dutch East India Company> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1416 wd:Q159766}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'Dutch East India Company'}

 Q: What is the {literary work} for {series} of {Harry Potter}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P179 wd:Q8337 . ?sbj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Harry Potter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: What is the sister city of the Badminton World Federation in garrison?
 SPARQL: SELECT ?answer WHERE { wd:Q126638 wdt:P159 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Badminton World Federation', 'p': 'garrison', 'o': '$y0'}}

 Q: What is the G-type main-sequence star for the parent astronomical body or Uranus?
 SPARQL:  select distinct ?obj where { wd:Q324 wdt:P397 ?obj . ?obj wdt:P31 wd:Q5864 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Uranus', 'p': 'parent astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: Give me {commune of France} that contains the word {éguilly} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q484170 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'éguilly')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'éguilly'}}

 Q: Which is the Prabook ID for Czesław Miłosz?
 SPARQL: select distinct ?answer where { wd:Q45970 wdt:P3368 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Czesław Miłosz', 'p': 'Prabook ID', 'o': '?x0'}

 Q: Is it true that Warner Bros. Records was George Harrison's record label?
 SPARQL: ASK WHERE { wd:Q2643 wdt:P264 wd:Q843402 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'George Harrison', 'p': 'record label', 'o': '?x0', '?x0': 'Warner Bros. Records'}]

 Q: What is the location of the headquarters of "Deutsches Institut für Normung" which has coordinates at  52.505515 13.344447
 SPARQL: SELECT ?obj WHERE { wd:Q152746 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P625 ?x filter(contains(?x,'52.505515 13.344447')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Deutsches Institut für Normung', 'p': 'headquarters', 'o': '?x0'}

 Q: What is the {metropolitan area} for {capital of} of {Calgary}
 SPARQL:  select distinct ?obj where { wd:Q36312 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q1907114 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Calgary', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolitan area'}}

 Q: What is <regulated by> of <television in France> ?
 SPARQL: select distinct ?answer where { wd:Q3546742 wdt:P3719 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'television in France', 'p': 'regulated by', 'o': '?x0'}

 Q: Who is the publisher for Julius Streicher?
 SPARQL: select distinct ?answer where { ?answer wdt:P123 wd:Q76984}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'publisher', 'o': 'Julius Streicher'}

 Q: What is the {dominion of the British Empire} for {history of topic} of {history of India}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2184 wd:Q133136 . ?sbj wdt:P31 wd:Q223832 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'history of topic', 'o': 'history of India', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dominion of the British Empire'}}

 Q: What is {employer} of {Gavin McInnes} that is {position held} is {contributor} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5528217 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P39 wd:Q20204892 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gavin McInnes', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'contributor'}}}

 Q: Where are the headquarters of World Trade Organization located?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q7825 wdt:P159 ?ans_1 . wd:Q7825 wdt:P276 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'World Trade Organization', 'p': 'headquarters', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'World Trade Organization', 'p': 'location', 'o': '?x1'}]

 Q: Which is the sexual preference of the studies of psychotherapy?
 SPARQL:  select distinct ?obj where { wd:Q183257 wdt:P2578 ?obj . ?obj wdt:P31 wd:Q2275640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'psychotherapy', 'p': 'studies', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sexual preference'}}

 Q: What series ordinal was given to Antonio Aguilar, given name José Pascual?
 SPARQL: SELECT ?value WHERE { wd:Q1958523 p:P735 ?s . ?s ps:P735 wd:Q53871939 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio Aguilar', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'José Pascual'}}}

 Q: Tell me logarithmic unit whose name has the word trit in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17342348 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trit')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'logarithmic unit'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'trit'}}

 Q: what is the {statement disputed by} for {Judea and Samaria Area} has {country} as {Israel} ?
 SPARQL: SELECT ?value WHERE { wd:Q513200 p:P17 ?s . ?s ps:P17 wd:Q801 . ?s pq:P1310 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement disputed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Judea and Samaria Area', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Israel'}}}

 Q: which conglomerate has the highest net profit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q778575 . ?ent wdt:P2295 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'net profit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conglomerate'}}

 Q: What is <position held> of <Argonauts> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P39 wd:Q165510}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'position held', 'o': 'Argonauts'}

 Q: what is the {criterion used} for {Moravian-Silesian Region} has {population} as {1209879} ?
 SPARQL: SELECT ?value WHERE { wd:Q190550 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1209879')) . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moravian-Silesian Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1209879'}}}

 Q: What has a capital next to Francia?
 SPARQL: SELECT ?answer WHERE { wd:Q146246 wdt:P36 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Francia', 'p': 'capital', 'o': '$y0'}}

 Q: What is {headquarters location} of {Costco} that is {coordinate location} is {47.5501 -122.051} ?
 SPARQL: SELECT ?obj WHERE { wd:Q715583 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P625 ?x filter(contains(?x,'47.5501 -122.051')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Costco', 'p': 'headquarters location', 'o': '?x0'}

 Q: Which is the Fibonacci number in the translated edition of Lexicon Forestale that contains the number 1 in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47577 . ?sbj wdt:P629 wd:Q62469935 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '1')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Fibonacci number', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'edition of', 'o': 'Lexicon Forestale'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': '1'}}

 Q: What is the wing configuration of a fixed-wing aircraft?
 SPARQL: select distinct ?answer where { ?answer wdt:P1654 wd:Q2875704}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'wing configuration', 'o': 'fixed-wing aircraft'}

 Q: Which is Who's Who in France biography ID for Michel Piccoli?
 SPARQL: select distinct ?answer where { wd:Q295257 wdt:P4124 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Michel Piccoli', 'p': "Who's Who in France biography ID", 'o': '?x0'}

 Q: Did {David_Cassidy} {occupation} {actor} and {singer-songwriter} ?
 SPARQL: ASK WHERE { wd:Q457306 wdt:P106 wd:Q33999 . wd:Q457306 wdt:P106 wd:Q488205 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'David Cassidy', 'p': 'occupation', 'o': '?x0', '?x0': 'actor'}, {'h': 'IS', 'v': '?x1', 's': 'David Cassidy', 'p': 'occupation', 'o': '?x1', '?x1': 'singer-songwriter'}]

 Q: What is {academic major} and {academic degree} of {{Peggy Whitson} has {educated at} as {Iowa Wesleyan College}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q235523 p:P69 ?s . ?s ps:P69 wd:Q14689086 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peggy Whitson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Iowa Wesleyan College'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peggy Whitson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Iowa Wesleyan College'}}}]

 Q: What sport is played for present at Harri Koskela ?
 SPARQL: SELECT ?answer WHERE { wd:Q1385703 wdt:P1344 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sport', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harri Koskela', 'p': 'present at', 'o': '$y0'}}

 Q: What is the geography of topic for human geography?
 SPARQL: select distinct ?answer where { ?answer wdt:P2633 wd:Q12831143}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'geography of topic', 'o': 'human geography'}

 Q: What is the award that Daniel McFadden got with James Heckman?
 SPARQL: SELECT ?obj WHERE { wd:Q312560 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q312561 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Daniel McFadden', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'with', 'o': 'James Heckman'}}}

 Q: What is the {human} for {chairperson} of {Indian National Congress}
 SPARQL:  select distinct ?obj where { wd:Q10225 wdt:P488 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indian National Congress', 'p': 'leader', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What years did Bernard Leach have a student named Peter Stichbury?
 SPARQL: SELECT ?value WHERE { wd:Q2898210 p:P802 ?s . ?s ps:P802 wd:Q16089985 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bernard Leach', 'p': 'student', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'student', 'o': 'Peter Stichbury'}, 't': '?x0'}

 Q: Which is the LAWA waterbody ID for Danube?
 SPARQL: select distinct ?answer where { wd:Q1653 wdt:P3866 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Danube', 'p': 'LAWA waterbody ID', 'o': '?x0'}

 Q: What is {anatomical location} of {treats medical condition} of {dicloxacillin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2313471 wdt:P2175 ?X . ?X wdt:P927 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'anatomical location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'dicloxacillin', 'p': 'treats', 'o': '$y0'}}

 Q: What is {instance of} of {sodium chloride} that is {of} is {chloride ion} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2314 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P642 wd:Q108200 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'sodium chloride', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'chloride'}}}

 Q: What is the BWFbadminton.com player ID for Lin Dan?
 SPARQL: select distinct ?answer where { wd:Q1390341 wdt:P3620 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lin Dan', 'p': 'BWFbadminton.com player ID', 'o': '?x0'}

 Q: What is {sports league} of {part of team} of {Romain Inez} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3440678 wdt:P54 ?X . ?X wdt:P118 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'league', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Romain Inez', 'p': 'team', 'o': '$y0'}}

 Q: What is {sister town} of {Minsk}, that has {county seat for} is {Urban okrug Bryansk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2280 wdt:P190 ?answer . ?answer wdt:P1376 wd:Q27532884}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Minsk', 'p': 'sister town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat for', 'o': 'Bryansk'}}

 Q: what is the {for work} for {Jack Palance} has {nominated for} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q193653 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Palance', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: Which country was Eldar Ryazanov born in as he was born in Samara?
 SPARQL: SELECT ?value WHERE { wd:Q381944 p:P19 ?s . ?s ps:P19 wd:Q894 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eldar Ryazanov', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Samara'}}}

 Q: what is geometric concept contains the word space in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21550639 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'space')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geometric concept'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'space'}}

 Q: What is the continent for the Eurovision Song Contest with a timezone of Europe/Athens?
 SPARQL: SELECT ?answer WHERE { wd:Q276 wdt:P30 ?answer . ?answer wdt:P421 wd:Q5412093}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eurovision Song Contest', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timezone', 'o': 'Europe/Athens'}}

 Q: What is the {country of origin} and the {language of work or name} of {The_Adventures_of_Tintin} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q744536 wdt:P495 ?ans_1 . wd:Q744536 wdt:P407 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Adventures of Tintin', 'p': 'country of origin', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Adventures of Tintin', 'p': 'language', 'o': '?x1'}]

 Q: Which award did Aaron T. Beck receive in the year 1999?
 SPARQL: SELECT ?obj WHERE { wd:Q302849 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aaron T. Beck', 'p': 'award', 'o': '?x0', 't': '1999'}

 Q: How many sports are related to inline speed skating?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P641 wd:Q618786 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'inline speed skating'}

 Q: What is the {animation studio} for {owner of} of {Walt Disney Parks and Resorts}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1830 wd:Q1431781 . ?sbj wdt:P31 wd:Q1107679 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owner of', 'o': 'Disney Parks', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animation studio'}}

 Q: Which is the biological database for the location of Yale University?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q49112 . ?sbj wdt:P31 wd:Q4117139 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Yale University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biological database'}}

 Q: What is the {written work} for {edition or translation of} of {King James Version}
 SPARQL:  select distinct ?obj where { wd:Q623398 wdt:P629 ?obj . ?obj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'King James Version', 'p': 'edition or translation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What is PASE Domesday person ID for Edward the Confessor ?
 SPARQL: select distinct ?answer where { wd:Q130005 wdt:P3971 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Edward the Confessor', 'p': 'PASE Domesday person ID', 'o': '?x0'}

 Q: How many writing systems are by hiragana?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P282 wd:Q48332 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'hiragana'}

 Q: what is the {end time} for {Charlize Theron} has {partner} as {Stuart Townsend} ?
 SPARQL: SELECT ?value WHERE { wd:Q80046 p:P451 ?s . ?s ps:P451 wd:Q363525 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlize Theron', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Stuart Townsend'}}}

 Q: What what is city/town permanent duplicated item Königsberg and also which starts with letter k
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7930989 . ?sbj wdt:P2959 wd:Q4120832 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city/town', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'permanent duplicated item', 'o': 'Königsberg'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'k'}}

 Q: What is {position held} of {Frank Bainimarama} where {start time} is {2006-12-5} ?
 SPARQL: SELECT ?obj WHERE { wd:Q57830 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frank Bainimarama', 'p': 'position held', 'o': '?x0', 't': '2006'}

 Q: What is {nominated for} of {Robert Pattinson} that is {for work} is {The Twilight Saga: New Moon} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36767 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q116928 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Pattinson', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Twilight Saga: New Moon'}}}

 Q: Who is the {head of government} which {office held by head of government} of {Brussels} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q240 wdt:P6 ?ans_1 . wd:Q240 wdt:P1313 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Brussels', 'p': 'head of government', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Brussels', 'p': 'office held by head of government', 'o': '?x1'}]

 Q: What is {MASL} of {location of death} of {Ibn Taymiyyah} ?
 SPARQL: SELECT ?answer WHERE { wd:Q491558 wdt:P20 ?X . ?X wdt:P2044 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'MASL', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ibn Taymiyyah', 'p': 'location of death', 'o': '$y0'}}

 Q: what is the {language of work or name} for {Diary of Anne Frank} has {has edition} as {Diario} ?
 SPARQL: SELECT ?value WHERE { wd:Q6911 p:P747 ?s . ?s ps:P747 wd:Q14624888 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diary of Anne Frank', 'p': 'edition', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'edition', 'o': 'Diario'}}}

 Q: What is {county seat for} of {location of work} of {Heinrich Schütz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q153643 wdt:P937 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Heinrich Schütz', 'p': 'location of work', 'o': '$y0'}}

 Q: What is <uses> of <seismic wave> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2283 wd:Q186167}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'seismic wave'}

 Q: What is {capital of} of {Nanjing} that is {end time} is {936-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q16666 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P582 ?x filter(contains(?x,'936-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nanjing', 'p': 'capital of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end time', 'o': '936-0-0'}}}

 Q: which sports season has the highest points awarded whose participating teams is adelaide football club?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q27020041 . ?ent wdt:P3260 ?obj . ?ent wdt:P1923 wd:Q948900 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'points awarded', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports season', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'participating team', 'o': 'Adelaide Football Club'}}}

 Q: Which is the Roller Coaster Database ID for Universal Parks & Resorts?
 SPARQL: select distinct ?answer where { wd:Q1186857 wdt:P2751 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Universal Parks & Resorts', 'p': 'Roller Coaster Database ID', 'o': '?x0'}

 Q: what is the {number of matches played} for {Cafu} has {member of sports team} as {Real Zaragoza} ?
 SPARQL: SELECT ?value WHERE { wd:Q178683 p:P54 ?s . ?s ps:P54 wd:Q10308 . ?s pq:P1350 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cafu', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Real Zaragoza'}}}

 Q: Name a relativistic wave equation that contains the word " equation" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7310838 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'equation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'relativistic wave equation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'equation'}}

 Q: Is the suicide rate Akita Prefecture less than 25.488?
 SPARQL: ASK WHERE { wd:Q81863 wdt:P3864 ?obj filter(?obj < 25.488) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Akita Prefecture', 'p': 'suicide rate', 'o': '?x0', '?x0': '25.488'}

 Q: Which talent agency represented Ronald Reagan?
 SPARQL:  select distinct ?obj where { wd:Q9960 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ronald Reagan', 'p': 'rep', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talent agency'}}

 Q: What is the capital of Helsinki that is located in the administrative territorial entity of the Russian Empire?
 SPARQL: SELECT ?obj WHERE { wd:Q1757 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P131 wd:Q34266 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capital of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Helsinki', 'p': 'capital of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Russian Empire'}}}

 Q: Give the name of galaxy with less apparent magnitude and was discovered by William Herschel?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q318 . ?ent wdt:P1215 ?obj . ?ent wdt:P61 wd:Q14277} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'apparent magnitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'galaxy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discovered by', 'o': 'William Herschel'}}}

 Q: Is the torque of the NEMA 17 Stepper motor Model LDO-42STH47-1684A equal to 40.0?
 SPARQL: ASK WHERE { wd:Q25859948 wdt:P2230 ?obj filter(?obj = 40.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'NEMA 17 Stepper motor Model LDO-42STH47-1684A', 'p': 'torque', 'o': '?x0', '?x0': '40.0'}

 Q: When is {end time} and {start time} of {{Guglielmo Marconi} whose {spouse} as {Beatrice O'Brien}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36488 p:P26 ?s . ?s ps:P26 wd:Q22230905 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guglielmo Marconi', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': "Beatrice O'Brien"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guglielmo Marconi', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': "Beatrice O'Brien"}}}]

 Q: What person who's a citizen of Romania has the highest EGF rating?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P4105 ?obj . ?ent wdt:P27 wd:Q218 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'EGF rating', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'citizen of', 'o': 'Romania'}}}

 Q: How many {total produced} are for {Fuji} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q504893 wdt:P1092 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Fuji', 'p': 'total produced', 'o': '?x0'}

 Q: What is the {mainland territory of Australia} for {replaced by} of {Northern Territory}
 SPARQL:  select distinct ?obj where { wd:Q3235 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q14192234 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Northern Territory', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mainland territory of Australia'}}

 Q: Vladimir Lenin is a member of which political party?
 SPARQL:  select distinct ?obj where { wd:Q1394 wdt:P102 ?obj . ?obj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Lenin', 'p': 'party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: Which sports season organized by the Cyprus Football Association has the most participants?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q27020041 . ?ent wdt:P1132 ?obj . ?ent wdt:P664 wd:Q473248 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'participants', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports season', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'organized by', 'o': 'Cyprus Football Association'}}}

 Q: What is {head of government} of {Tocantins} that is {end time} is {2018-3-22} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43695 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tocantins', 'p': 'head of government', 'o': '?x0', 't': '2018'}

 Q: what is the {start time} for {New Caledonia} has {member of} as {United Nations Educational, Scientific and Cultural Organization} ?
 SPARQL: SELECT ?value WHERE { wd:Q33788 p:P463 ?s . ?s ps:P463 wd:Q7809 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'New Caledonia', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'United Nations Educational, Scientific and Cultural Organization'}}}

 Q: Which online dictionary has the highest number of records?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3327521 . ?ent wdt:P4876 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of records', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'online dictionary'}}

 Q: How many {consecrator} are to/by {John XXIII} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1598 wd:Q23873 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'consecrator', 'o': 'John XXIII'}

 Q: What is <Environmental Register code (Estonia)> of <Lake Peipus> ?
 SPARQL: select distinct ?answer where { wd:Q19253 wdt:P4689 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake Peipus', 'p': 'Environmental Register code (Estonia)', 'o': '?x0'}

 Q: Who is the {theatre award} for {nominated for} of {Vanessa Redgrave}
 SPARQL:  select distinct ?obj where { wd:Q347879 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q15229229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vanessa Redgrave', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theatre award'}}

 Q: What is tarragon's PalDat plant ID?
 SPARQL: select distinct ?answer where { wd:Q155814 wdt:P4122 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'tarragon', 'p': 'PalDat plant ID', 'o': '?x0'}

 Q: A marsh is what type of habitat?
 SPARQL: select distinct ?answer where { ?answer wdt:P2974 wd:Q30198}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'habitat', 'o': 'marsh'}

 Q: What is the {chemical compound} for {medical condition treated} of {major depressive disorder}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2175 wd:Q42844 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'medical condition treated', 'o': 'major depressive disorder', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Who is the {state university system} for {affiliation} of {Purdue University}
 SPARQL:  select distinct ?obj where { wd:Q217741 wdt:P1416 ?obj . ?obj wdt:P31 wd:Q1075106 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Purdue University', 'p': 'affiliation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state university system'}}

 Q: Who is the nominee for Nirvana whose victor is Moby?
 SPARQL: SELECT ?answer WHERE { wd:Q11649 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q14045}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nirvana', 'p': 'nominee for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'victor', 'o': 'Moby'}}

 Q: What is the {Class IIIA combustible liquid} with the {MAX(vapor pressure)} whose {has part} is {chlorine}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009058 . ?ent wdt:P2119 ?obj . ?ent wdt:P527 wd:Q688 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'vapor pressure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IIIA combustible liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'chlorine'}}}

 Q: "Which characters on Friends have an end time for work at 2004-0-0?"
 SPARQL: SELECT ?answer WHERE { wd:Q79784 wdt:P674 ?answer . ?answer wdt:P2032 ?x FILTER(contains(YEAR(?x),'2004'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Friends', 'p': 'characters', 'o': '?x0', 't': '2004'}

 Q: Is it true that the disease burden of air pollution equals to 1001000?
 SPARQL: ASK WHERE { wd:Q131123 wdt:P2854 ?obj filter(?obj = 1001000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'air pollution', 'p': 'disease burden', 'o': '?x0', '?x0': '1001000'}

 Q: What is the {chemical compound} for {drug used for treatment} of {asthma}
 SPARQL:  select distinct ?obj where { wd:Q35869 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Asthma', 'p': 'used for treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is {chairperson} of {Communist Party of China} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'chairperson', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}]

 Q: "Which is {manufactured from} of {lumber}, that has {user} is {wood carver} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1370714 wdt:P186 ?answer . ?answer wdt:P1535 wd:Q6138343}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'lumber', 'p': 'manufactured from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'user', 'o': 'wood carver'}}

 Q: Which is the infectious disease that has effect on bacteria?
 SPARQL:  select distinct ?obj where { wd:Q10876 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q18123741 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'bacteria', 'p': 'has effect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'infectious disease'}}

 Q: What is {nominated for} of {The Weeknd} that is {for work} is {Kiss Land} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2121062 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q17018194 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Weeknd', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Kiss Land'}}}

 Q: Which is the capital of place of death of Mahatma Gandhi?
 SPARQL:  select distinct ?obj where { wd:Q1001 wdt:P20 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mahatma Gandhi', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: What award did William Faulkner receive in 1955?
 SPARQL: SELECT ?obj WHERE { wd:Q38392 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1955')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Faulkner', 'p': 'award', 'o': '?x0', 't': '1955'}

 Q: What is the partner city of Nice that has 315196 inhabitants?
 SPARQL: SELECT ?answer WHERE { wd:Q33959 wdt:P190 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'315196'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nice', 'p': 'partner city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '315196'}}

 Q: What award did The Beatles receive in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q1299 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Beatles', 'p': 'award', 'o': '?x0', 't': '1996'}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: Which is the academic degree and the academic major of Maximilien Robespierre who was educated at the Lycée Louis-le-Grand?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q44197 p:P69 ?s . ?s ps:P69 wd:Q1059546 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maximilien Robespierre', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Lycée Louis-le-Grand'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maximilien Robespierre', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Lycée Louis-le-Grand'}}}]

 Q: What is {given name} of {Mary Pickford} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q104109 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mary Pickford', 'p': 'first name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: What is the artery of the has anatomical branch of trachea?
 SPARQL: SELECT ?answer WHERE { wd:Q175449 wdt:P3262 ?X . ?X wdt:P2286 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'artery', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'trachea', 'p': 'has anatomical branch', 'o': '$y0'}}

 Q: what is the {appointed by} for {Robert F. Kennedy} has {position held} as {United States Attorney General} ?
 SPARQL: SELECT ?value WHERE { wd:Q25310 p:P39 ?s . ?s ps:P39 wd:Q636207 . ?s pq:P748 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'appointed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert F. Kennedy', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States Attorney General'}}}

 Q: What is {spoken text audio} of {historic period} of {Marcus Vipsanius Agrippa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q48174 wdt:P2348 ?X . ?X wdt:P989 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'spoken text audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marcus Vipsanius Agrippa', 'p': 'historic period', 'o': '$y0'}}

 Q: Is the arguement of periapsis of 1674 Groeneveld greater than 0.741504?
 SPARQL: ASK WHERE { wd:Q142191 wdt:P2248 ?obj filter(?obj > 0.741504) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '1674 Groeneveld', 'p': 'argument of periapsis', 'o': '?x0', '?x0': '0.741504'}

 Q: What are the institution of the European Union  which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q748720 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'institution of the European Union'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: What is {tributary} of {Neman River} that is {direction} is {right} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5622 p:P974 ?s . ?s ps:P974 ?obj . ?s pq:P560 wd:Q14565199 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neman River', 'p': 'tributary', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'direction', 'o': 'right'}}}

 Q: What is <work location> of <Jane Goodall> ?
 SPARQL: select distinct ?answer where { wd:Q184746 wdt:P937 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jane Goodall', 'p': 'work location', 'o': '?x0'}

 Q: Give the largest block size of block cipher?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q543151 . ?ent wdt:P2599 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'block size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'block cipher'}}

 Q: What was Roger Martin du Gard nominated for on January 1, 1935?
 SPARQL: SELECT ?obj WHERE { wd:Q129155 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1935')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Roger Martin du Gard', 'p': 'nominated for', 'o': '?x0', 't': '1935'}

 Q: What is {MASL} of {twin town} of {Iași} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46852 wdt:P190 ?X . ?X wdt:P2044 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'MASL', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iași', 'p': 'twin town', 'o': '$y0'}}

 Q: Which award did Corin Tellado receive in the year 1998?
 SPARQL: SELECT ?obj WHERE { wd:Q1813126 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1998')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Corin Tellado', 'p': 'award', 'o': '?x0', 't': '1998'}

 Q: What is {subitem of} of {history of Switzerland}, that has {number of out of school children} is {69459.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q208761 wdt:P1269 ?answer . ?answer wdt:P2573 ?x FILTER(contains(?x,'69459.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Switzerland', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'number of out of school children', 'o': '69459.0'}}

 Q: What is the name of the Head Quarter's location for the International Tennis Federation, that is the county seat for Great Britain?
 SPARQL: SELECT ?answer WHERE { wd:Q223041 wdt:P159 ?answer . ?answer wdt:P1376 wd:Q161885}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'International Tennis Federation', 'p': 'seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat for', 'o': 'Great Britain'}}

 Q: What is the {island} for {language used} of {Norwegian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q9043 . ?sbj wdt:P31 wd:Q23442 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Norwegian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island'}}

 Q: IS THE ALEXA RANK OF THE PLURK GREATER THAN 1307.2
 SPARQL: ASK WHERE { wd:Q32111 wdt:P1661 ?obj filter(?obj > 1307.2) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'PLURK', 'p': 'Alexa rank', 'o': '?x0', '?x0': '1307.2'}

 Q: What is {makes use of} of {sports} of {European Poker Tour season 2 results} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3060792 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'makes use of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Poker Tour season 2 results', 'p': 'sport', 'o': '$y0'}}

 Q: What is on the shore of the Atlantic coastal plain with the Barranco de Tahodio tributary?
 SPARQL: SELECT ?answer WHERE { wd:Q756832 wdt:P206 ?answer . ?answer wdt:P974 wd:Q5719981}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Atlantic coastal plain', 'p': 'on the shore of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Barranco de Tahodio'}}

 Q: When did church building for patron saint of Anthony of Padua?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q167477 . ?sbj wdt:P31 wd:Q16970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Anthony of Padua', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'church building'}}

 Q: What is the {natural script} for {writing system} of {Malayalam}
 SPARQL:  select distinct ?obj where { wd:Q36236 wdt:P282 ?obj . ?obj wdt:P31 wd:Q29517555 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Malayalam', 'p': 'writing system', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural script'}}

 Q: What are the social skills which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1413287 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social skills'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Give me {painting} that {exhibition history} {Mona Lisa Exhibition} and which that starts with {'l'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3305213 . ?sbj wdt:P608 wd:Q15087813 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'exhibition history', 'o': 'Mona Lisa Exhibition'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Who is the role model of Henry Wadsworth Longfellow that is a member of Arte dei Medici e Speziali?
 SPARQL: SELECT ?answer WHERE { wd:Q152513 wdt:P737 ?answer . ?answer wdt:P463 wd:Q526004}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry Wadsworth Longfellow', 'p': 'role model', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Arte dei Medici e Speziali'}}

 Q: Tell me about the discipline of Russian studies.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q7737 . ?sbj wdt:P31 wd:Q11862829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discipline'}}

 Q: What is {is son of} of {Charles Dickens}, that has {kids} is {Alfred Lamert Dickens} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5686 wdt:P25 ?answer . ?answer wdt:P40 wd:Q4723042}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles Dickens', 'p': 'is son of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Alfred Lamert Dickens'}}

 Q: What are theelectromagnetic radiationwhich start with the letter r
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12969754 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'electromagnetic radiation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What is the biological phase for DNA replication?
 SPARQL: select distinct ?answer where { wd:Q130996 wdt:P4774 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'DNA replication', 'p': 'biological phase', 'o': '?x0'}

 Q: What is the {political ideology} and the {religion} of {Nigel_Farage} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q318471 wdt:P1142 ?ans_1 . wd:Q318471 wdt:P140 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Nigel Farage', 'p': 'political ideology', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Nigel Farage', 'p': 'religion', 'o': '?x1'}]

 Q: Is the pressure of the T-34/85 equal to 8.96?
 SPARQL: ASK WHERE { wd:Q2720752 wdt:P2077 ?obj filter(?obj = 8.96) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'T-34/85', 'p': 'pressure', 'o': '?x0', '?x0': '8.96'}

 Q: What is {nominated for} of {Geraldine Page} that is {for work} is {You're a Big Boy Now} ?
 SPARQL: SELECT ?obj WHERE { wd:Q228650 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q858584 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geraldine Page', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': "You're a Big Boy Now"}}}

 Q: Are Mumbai and Los Angeles twin cities?
 SPARQL: ASK WHERE { wd:Q1156 wdt:P190 wd:Q65 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mumbai', 'p': 'twin cities', 'o': '?x0', '?x0': 'Los Angeles'}]

 Q: What is FC Barcelona's parent club?
 SPARQL: select distinct ?answer where { wd:Q7156 wdt:P831 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'FC Barcelona', 'p': 'parent club', 'o': '?x0'}

 Q: What is {headquarters location} of {Council of the European Union} that is {country} is {Belgium} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8896 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P17 wd:Q31 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Council of the European Union', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Belgium'}}}

 Q: who is the {elected in} for {David Lloyd George} that has {position held} as {Member of the 35th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q134982 p:P39 ?s . ?s ps:P39 wd:Q41582588 . ?s pq:P2715 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Lloyd George', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 35th Parliament of the United Kingdom'}}}

 Q: How many members were on Darren Bennett's teams?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q5224788 wdt:P54 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Darren Bennett', 'p': 'team', 'o': '?x0'}

 Q: What is {academic major} and {academic degree} of {{Zora Neale Hurston} has {educated at} as {Barnard College}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q220480 p:P69 ?s . ?s ps:P69 wd:Q167733 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Barnard College'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Barnard College'}}}]

 Q: what is the {statement is subject of} for {Anne Baxter} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q228906 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne Baxter', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: What is {spouse} of {Jane Goodall} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q184746 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jane Goodall', 'p': 'married', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jane Goodall', 'p': 'married', 'o': '$y0'}}]

 Q: What academic degree if Mary Leakey earn in 1968?
 SPARQL: SELECT ?obj WHERE { wd:Q231111 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1968')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mary Leakey', 'p': 'academic degree', 'o': '?x0', 't': '1968'}

 Q: How many nicknames are for {Larry Bird} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q190152 wdt:P1449 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Larry Bird', 'p': 'nickname', 'o': '?x0'}

 Q: How many characters are in Os Lusíadas?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q781898 wdt:P674 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Os Lusíadas', 'p': 'characters', 'o': '?x0'}

 Q: Who was the spouse of Fyodor Tyutchev until August 27, 1838?
 SPARQL: SELECT ?obj WHERE { wd:Q37217 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1838')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fyodor Tyutchev', 'p': 'spouse', 'o': '?x0', 't': '1838'}

 Q: What did the software publisher Complete Psionic specialize in the field of action?
 SPARQL: SELECT ?answer WHERE { wd:Q5156479 wdt:P123 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of action', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Complete Psionic', 'p': 'publisher', 'o': '$y0'}}

 Q: who type of quantum particle for discoverer or inventor of CERN?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P61 wd:Q42944 . ?sbj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'CERN', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: When was Henri Moissan nominated for a Nobel Prize in Chemistry?
 SPARQL: SELECT ?value WHERE { wd:Q102804 p:P1411 ?s . ?s ps:P1411 wd:Q44585 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Henri Moissan', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Chemistry'}, 't': '?x0'}

 Q: what is the {start time} for {Frederick William, Elector of Brandenburg} has {spouse} as {Countess Louise Henriette of Nassau} ?
 SPARQL: SELECT ?value WHERE { wd:Q152727 p:P26 ?s . ?s ps:P26 wd:Q196301 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Countess Louise Henriette of Nassau'}}}

 Q: Who is the central bank/issuer of Russian ruble?
 SPARQL: select distinct ?answer where { wd:Q41044 wdt:P562 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian ruble', 'p': 'central bank/issuer', 'o': '?x0'}

 Q: What is the {prime number} with the {MAX(numeric value)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q49008 . ?ent wdt:P1181 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'numeric value', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prime number'}}

 Q: What is on shore of Olympic Peninsula whose tributary is Maria Linda River?
 SPARQL: SELECT ?answer WHERE { wd:Q780293 wdt:P206 ?answer . ?answer wdt:P974 wd:Q5937883}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Olympic Peninsula', 'p': 'on shore of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Maria Linda River'}}

 Q: What is the {human} for {architect} of {Flatiron Building}
 SPARQL:  select distinct ?obj where { wd:Q220728 wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Flatiron Building', 'p': 'architect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: "Which author of The Tragical History of Doctor Faustus, has a profession as an writer?"
 SPARQL: SELECT ?answer WHERE { wd:Q50919 wdt:P50 ?answer . ?answer wdt:P106 wd:Q36180}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Tragical History of Doctor Faustus', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'writer'}}

 Q: which force starts with the letter f
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11402 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'force'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: What is NSK ID for Dario Fo?
 SPARQL: select distinct ?answer where { wd:Q765 wdt:P1375 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dario Fo', 'p': 'NSK ID', 'o': '?x0'}

 Q: what is the {academic major} for {Kenneth Arrow} has {educated at} as {Columbia University} ?
 SPARQL: SELECT ?value WHERE { wd:Q192592 p:P69 ?s . ?s ps:P69 wd:Q49088 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenneth Arrow', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Columbia University'}}}

 Q: What award did Mikhail Prokhorov receive on 01/01/2006?
 SPARQL: SELECT ?obj WHERE { wd:Q233581 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mikhail Prokhorov', 'p': 'award', 'o': '?x0', 't': '2006'}

 Q: What was the area code of Cần Thơ in July 16th 2017?
 SPARQL: SELECT ?obj WHERE { wd:Q216075 p:P473 ?s . ?s ps:P473 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cần Thơ', 'p': 'area code', 'o': '?x0', 't': '2017'}

 Q: What characters are part of the series called A Fish Called Selma?
 SPARQL: SELECT ?answer WHERE { wd:Q2740476 wdt:P179 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A Fish Called Selma', 'p': 'part of the series', 'o': '$y0'}}

 Q: What is diplomatic relation for sovereign state of Jabalpur ?
 SPARQL: SELECT ?answer WHERE { wd:Q200878 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jabalpur', 'p': 'sovereign state', 'o': '$y0'}}

 Q: What is {educated at} of {Gene Amdahl} that is {academic major} is {theoretical physics} ?
 SPARQL: SELECT ?obj WHERE { wd:Q62890 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q18362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gene Amdahl', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic major', 'o': 'theoretical physics'}}}

 Q: What is {location of death} of {Pius VI}, that has {borders} is {Saint-Marcel-lès-Valence} ?
 SPARQL: SELECT ?answer WHERE { wd:Q128019 wdt:P20 ?answer . ?answer wdt:P47 wd:Q632251}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pius VI', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Saint-Marcel-lès-Valence'}}

 Q: What is {has case} of {language of expression} of {Francis Bacon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q37388 wdt:P1412 ?X . ?X wdt:P2989 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has case', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Francis Bacon', 'p': 'language', 'o': '$y0'}}

 Q: What is the deathplace of Philip II of Spain, that has the coordinates of 40.418888888889 -3.6919444444444?
 SPARQL: SELECT ?answer WHERE { wd:Q34417 wdt:P20 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'40.418888888889 -3.6919444444444'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Philip II of Spain', 'p': 'deathplace', 'o': '?x0'}

 Q: What is the gross tonnage of the Bluenose II, 191?
 SPARQL: ASK WHERE { wd:Q2714647 wdt:P1093 ?obj filter(?obj = 191) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Bluenose II', 'p': 'gross tonnage', 'o': '?x0', '?x0': '191'}

 Q: What award did Christina Aguilera receive on January 1, 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q41594 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Christina Aguilera', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: what is the {start time} for {Ted Kaczynski} has {educated at} as {Harvard University} ?
 SPARQL: SELECT ?value WHERE { wd:Q222134 p:P69 ?s . ?s ps:P69 wd:Q13371 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ted Kaczynski', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard University'}}}

 Q: Who was Paul Keating's spouse when their marriage ended in 2008?
 SPARQL: SELECT ?obj WHERE { wd:Q242654 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paul Keating', 'p': 'spouse', 'o': '?x0', 't': '2008'}

 Q: What is {position held} of {Juan Ponce de León} that is {end time} is {1511-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q185974 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1511')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Juan Ponce de León', 'p': 'position held', 'o': '?x0', 't': '1511'}

 Q: What is <ARCHON code> of <Amherst College> ?
 SPARQL: select distinct ?answer where { wd:Q49165 wdt:P3642 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amherst College', 'p': 'ARCHON code', 'o': '?x0'}

 Q: Which sovereign state is located in the administrative territorial entity of Khyber Pakhtunkhwa?
 SPARQL:  select distinct ?obj where { wd:Q183314 wdt:P131 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Khyber Pakhtunkhwa', 'p': 'located in the administrative territorial entity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the {human} for {plaintiff} of {Obergefell v. Hodges}
 SPARQL:  select distinct ?obj where { wd:Q19866992 wdt:P1620 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Obergefell v. Hodges', 'p': 'plaintiff', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {competition class} are to/by {women's sports} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2094 wd:Q920057 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'competition class', 'o': "women's sports"}

 Q: Did {Steve_Jobs} {lifestyle} {Pescetarianism}?
 SPARQL: ASK WHERE { wd:Q19837 wdt:P1576 wd:Q1500138 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Steve Jobs', 'p': 'lifestyle', 'o': '?x0', '?x0': 'pescetarian'}]

 Q: Whats is the trans-Neptunian object discovered by Jan Oort that contains the word "cloud" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6592 . ?sbj wdt:P61 wd:Q309861 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cloud')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'trans-Neptunian object', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discovered by', 'o': 'Jan Oort'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cloud'}}

 Q: Is the Euler characteristic of the genus-two surface less than -2.4?
 SPARQL: ASK WHERE { wd:Q5533830 wdt:P6438 ?obj filter(?obj < -2.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'genus-two surface', 'p': 'Euler characteristic', 'o': '?x0', '?x0': '-2.4'}

 Q: what is the {for work} for {Alain Resnais} has {nominated for} as {César Award for Best Adaptation} ?
 SPARQL: SELECT ?value WHERE { wd:Q218022 p:P1411 ?s . ?s ps:P1411 wd:Q832120 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alain Resnais', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Adaptation'}}}

 Q: Who is the {student of} the {student} of {Michael_Faraday} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8750 wdt:P1066 ?ans_1 . wd:Q8750 wdt:P802 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Faraday', 'p': 'student of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Faraday', 'p': 'student', 'o': '?x1'}]

 Q: Which {MAMSL} {contains} {Sinaloa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q80252 wdt:P150 ?X . ?X wdt:P2044 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'MAMSL', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sinaloa', 'p': 'contains', 'o': '$y0'}}

 Q: What is the {W3C Recommendation} for {depends on software} of {Hypertext Transfer Protocol}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1547 wd:Q8777 . ?sbj wdt:P31 wd:Q2661442 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depends on software', 'o': 'Hypertext Transfer Protocol', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'W3C Recommendation'}}

 Q: "Which is {godmother} of {Camillo Benso di Cavour}, whose {craft} is {politician} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q166092 wdt:P1290 ?answer . ?answer wdt:P106 wd:Q82955}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Camillo Benso di Cavour', 'p': 'godmother', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'politician'}}

 Q: Which river {is in} the Zanzibar Archipelago, that has a {tributary} on the [Athi-Galana-Sabaki River}?
 SPARQL: SELECT ?answer WHERE { wd:Q706541 wdt:P706 ?answer . ?answer wdt:P974 wd:Q1508817}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zanzibar Archipelago', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Athi-Galana-Sabaki River'}}

 Q: What is the {superhero} for {sidekick of} of {Superman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2546 wd:Q79015 . ?sbj wdt:P31 wd:Q188784 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sidekick of', 'o': 'Superman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superhero'}}

 Q: What is the {human} for {student of} of {microbiology}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1066 wd:Q7193 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'microbiology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is <field of this occupation> of <ninja> ?
 SPARQL: select distinct ?answer where { wd:Q9402 wdt:P425 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ninja', 'p': 'field of this occupation', 'o': '?x0'}

 Q: What is the Autonomous University of Madrid's COAM structure ID?
 SPARQL: select distinct ?answer where { wd:Q788091 wdt:P2917 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Autonomous University of Madrid', 'p': 'COAM structure ID', 'o': '?x0'}

 Q: What is {diplomatic relation} of {Switzerland} that is {statement is subject of} is {Indonesia–Switzerland relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q39 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q15948966 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Switzerland', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Indonesia–Switzerland relations'}}}

 Q: what is the {object has role} for {Siméon Denis Poisson} has {doctoral advisor} as {Pierre-Simon Laplace} ?
 SPARQL: SELECT ?value WHERE { wd:Q190772 p:P184 ?s . ?s ps:P184 wd:Q44481 . ?s pq:P3831 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Siméon Denis Poisson', 'p': 'doctoral advisor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'doctoral advisor', 'o': 'Pierre-Simon Laplace'}}}

 Q: Which point in time for Charles Boyer has award received as Academy Honorary Award ?
 SPARQL: SELECT ?value WHERE { wd:Q105987 p:P166 ?s . ?s ps:P166 wd:Q727328 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Charles Boyer', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Honorary Award'}, 't': '?x0'}

 Q: Name a weekly newspaper based in Chicago that starts with letter O
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2305295 . ?sbj wdt:P159 wd:Q1297 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weekly newspaper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'based in', 'o': 'Chicago'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: When was the 8.00102e+06 population of Virginia?
 SPARQL: SELECT ?value WHERE { wd:Q1370 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'8.00102e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Virginia', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '8.00102e+06'}, 't': '?x0'}

 Q: What is ISC event ID for 2011 Tōhoku earthquake and tsunami ?
 SPARQL: select distinct ?answer where { wd:Q36204 wdt:P5092 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '2011 Tōhoku earthquake and tsunami', 'p': 'ISC event ID', 'o': '?x0'}

 Q: What is {date of incorporation} of {genre of music} of {Exile} ?
 SPARQL: SELECT ?answer WHERE { wd:Q655239 wdt:P136 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of incorporation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Exile', 'p': 'genre', 'o': '$y0'}}

 Q: What was Max Weber Ahre a member of during the year 1918?
 SPARQL: SELECT ?obj WHERE { wd:Q9387 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1918')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Max Weber', 'p': 'member of', 'o': '?x0', 't': '1918'}

 Q: What is {line connected to} of {next station} of {Gare du Nord} ?
 SPARQL: SELECT ?answer WHERE { wd:Q745942 wdt:P197 ?X . ?X wdt:P81 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'line connected to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gare du Nord', 'p': 'next station', 'o': '$y0'}}

 Q: What is the {book} for {notable work} of {Hillary Clinton}
 SPARQL:  select distinct ?obj where { wd:Q6294 wdt:P800 ?obj . ?obj wdt:P31 wd:Q571 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}}

 Q: What is <SRCBB player ID> of <George Mikan> ?
 SPARQL: select distinct ?answer where { wd:Q314185 wdt:P3696 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Mikan', 'p': 'SRCBB player ID', 'o': '?x0'}

 Q: Who gave the {source of inspiration} of {characters} of {Les Misérables} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1193096 wdt:P674 ?X . ?X wdt:P941 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'source of inspiration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Les Misérables', 'p': 'characters', 'o': '$y0'}}

 Q: What is the sister town of the chef-lieu of the Qajar dynasty?
 SPARQL: SELECT ?answer WHERE { wd:Q189326 wdt:P36 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Qajar dynasty', 'p': 'chef-lieu', 'o': '$y0'}}

 Q: Who is the daughter of the co-founder of King's College London?
 SPARQL: SELECT ?answer WHERE { wd:Q245247 wdt:P112 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "King's College London", 'p': 'co-founder', 'o': '$y0'}}

 Q: Where was John Kenneth Galbraith educated at and what was his academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q186042 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Kenneth Galbraith', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Kenneth Galbraith', 'p': 'educated at', 'o': '$y0'}}]

 Q: When was Taha Hussein nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q328765 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Taha Hussein', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: Who is the wife of the musical score by Freddie Freeloader?
 SPARQL: SELECT ?answer WHERE { wd:Q1452600 wdt:P86 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'wife', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Freddie Freeloader', 'p': 'musical score by', 'o': '$y0'}}

 Q: What is the {earthquake} with the {MAX(earthquake magnitude on the Richter magnitude scale)} whose {country} is {Taiwan}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2528 ?obj . ?ent wdt:P17 wd:Q865 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'earthquake magnitude on the Richter magnitude scale', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'earthquake', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Taiwan'}}}

 Q: What is the {new religious movement} for {movement} of {Rajneesh}
 SPARQL:  select distinct ?obj where { wd:Q148285 wdt:P135 ?obj . ?obj wdt:P31 wd:Q477544 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rajneesh', 'p': 'movement', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'new religious movement'}}

 Q: With a total fertility rate of 1.8615, what is the event participant of the Guadalcanal Campaign?
 SPARQL: SELECT ?answer WHERE { wd:Q217145 wdt:P710 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'1.8615'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guadalcanal Campaign', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '1.8615'}}

 Q: What is {diplomatic relation} of {is in the parish of} of {Southwest China} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1190484 wdt:P131 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Southwest China', 'p': 'in', 'o': '$y0'}}

 Q: What is the {written work} for {collection} of {Bill Gates}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P195 wd:Q5284 . ?sbj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'Bill Gates', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: What is {place of birth} of {Charlie Sheen} that is {located in the administrative territorial entity} is {New York} ?
 SPARQL: SELECT ?obj WHERE { wd:Q103939 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1384 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlie Sheen', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'NY'}}}

 Q: When was Terry Pratchett nominated for the Locus Award for Best Fantasy Novel?
 SPARQL: SELECT ?value WHERE { wd:Q46248 p:P1411 ?s . ?s ps:P1411 wd:Q607354 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Terry Pratchett', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Locus Award for Best Fantasy Novel'}, 't': '?x0'}

 Q: what is phase of the moon contains the word quarter in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q26388 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'quarter')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phase of the moon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'quarter'}}

 Q: What's the name of a type of dog with the word "toy" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q38672 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'toy')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of dog'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'toy'}}

 Q: Who is including my son?
 SPARQL: select distinct ?answer where { ?answer wdt:P1012 wd:Q177232}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'including', 'o': 'son'}

 Q: Did {Ronaldinho} {member of sports team} {Paris Saint-Germain F.C.}?
 SPARQL: ASK WHERE { wd:Q39444 wdt:P54 wd:Q483020 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ronaldinho', 'p': 'team', 'o': '?x0', '?x0': 'Paris'}]

 Q: What is {location born} of {Arcadius}, that has {member of} is {Council of Europe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q159369 wdt:P19 ?answer . ?answer wdt:P463 wd:Q8908}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arcadius', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Council of Europe'}}

 Q: which sacrament of the catholic church starts with the letter m
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3233636 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sacrament'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: Is the density of the water less than 1.169832?
 SPARQL: ASK WHERE { wd:Q283 wdt:P2054 ?obj filter(?obj < 1.169832) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'water', 'p': 'density', 'o': '?x0', '?x0': '1.169832'}

 Q: What is the {human} for {movement} of {Impressionism}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P135 wd:Q40415 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'movement', 'o': 'Impressionism', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {spore print color} are to/by {tan} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P787 wd:Q1670336 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'spore print color', 'o': 'tan'}

 Q: which valley starts with v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39816 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'valley'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {prevalence} of {tuberculosis} that is {country} is {Norway} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12204 p:P1193 ?s . ?s ps:P1193 ?obj . ?s pq:P17 wd:Q20 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prevalence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'tuberculosis', 'p': 'prevalence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Norway'}}}

 Q: Which is the position which is the next lower rank to the cardinal and that starts with p?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4164871 . ?sbj wdt:P3729 wd:Q45722 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next lower rank', 'o': 'cardinal'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is {spouse} of {Anna Karina} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q232113 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Karina', 'p': 'marry', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'marry', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Karina', 'p': 'marry', 'o': '$y0'}}]

 Q: Which is {tributary} of {next to lake} of {Spitsbergen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21162 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Spitsbergen', 'p': 'next to lake', 'o': '$y0'}}

 Q: What was the population of Freiburg im Breisgau in 1968?
 SPARQL: SELECT ?obj WHERE { wd:Q2833 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1968')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Freiburg im Breisgau', 'p': 'population', 'o': '?x0', 't': '1968'}

 Q: Is it true that Jeremy Yablonski has not scored any goals in his career?
 SPARQL: ASK WHERE { wd:Q536720 wdt:P6509 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jeremy Yablonski', 'p': 'total goals in career', 'o': '?x0', '?x0': '0'}

 Q: Who is {member of} of {land} of {Serie A} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15804 wdt:P17 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Serie A', 'p': 'land', 'o': '$y0'}}

 Q: What is the {Commonwealth realm} for {official language} of {English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q1860 . ?sbj wdt:P31 wd:Q202686 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'en', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Commonwealth realm'}}

 Q: What is the {business} for {developer} of {ARM architecture}
 SPARQL:  select distinct ?obj where { wd:Q16980 wdt:P178 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ARM architecture', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is the {kingdom} for {shares border with} of {Austrian Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q131964 . ?sbj wdt:P31 wd:Q417175 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Austria', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kingdom'}}

 Q: What is {scientific discipline} of {discoverer} of {(229760) 2007 RM225} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8223332 wdt:P61 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discipline', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '(229760) 2007 RM225', 'p': 'discoverer', 'o': '$y0'}}

 Q: What is the bilingual inscription of Egyptian hieroglyphs for writing system
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q132659 . ?sbj wdt:P31 wd:Q861809 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'Egyptian hieroglyphs', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bilingual inscription'}}

 Q: what is the {point in time} for {Jeanne Moreau} has {nominated for} as {César Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q106099 p:P1411 ?s . ?s ps:P1411 wd:Q24241 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jeanne Moreau', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Actress'}, 't': '?x0'}

 Q: How does it emulates in the {PlayStation} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4043 wd:Q10677 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'emulates', 'o': 'PlayStation'}

 Q: What award did Mohamed ElBaradei receive in the year 2008?
 SPARQL: SELECT ?obj WHERE { wd:Q133308 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mohamed ElBaradei', 'p': 'award', 'o': '?x0', 't': '2008'}

 Q: What is {pronunciation audio} of {route of administration} of {cannabis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2845 wdt:P636 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cannabis', 'p': 'route of administration', 'o': '$y0'}}

 Q: what is the {start time} for {Oulu} has {head of government} as {Ilmo Paananen} ?
 SPARQL: SELECT ?value WHERE { wd:Q47048 p:P6 ?s . ?s ps:P6 wd:Q6031942 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oulu', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Ilmo Paananen'}}}

 Q: Is the partition coefficient water/octanol of dichlorodifluirimethane less than 1.728?
 SPARQL: ASK WHERE { wd:Q423021 wdt:P2993 ?obj filter(?obj < 1.728) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'dichlorodifluoromethane', 'p': 'partition coefficient water/octanol', 'o': '?x0', '?x0': '1.728'}

 Q: What is <UGentMemorialis ID> of <Henri Pirenne> ?
 SPARQL: select distinct ?answer where { wd:Q312501 wdt:P3159 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Henri Pirenne', 'p': 'UGentMemorialis ID', 'o': '?x0'}

 Q: What is {electorate} of {Iligan} that is {point in time} is {2013-1-11} ?
 SPARQL: SELECT ?obj WHERE { wd:Q285488 p:P1831 ?s . ?s ps:P1831 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Iligan', 'p': 'electorate', 'o': '?x0', 't': '2013'}

 Q: Is the prevalence of tuberculosis less than 5.16e-06?
 SPARQL: ASK WHERE { wd:Q12204 wdt:P1193 ?obj filter(?obj < 5.16e-06) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'tuberculosis', 'p': 'prevalence', 'o': '?x0', '?x0': '5.16e-06'}

 Q: Who is {head of government} of {Düsseldorf} whose {start time} is {1820-7-19} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1718 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1820')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Düsseldorf', 'p': 'head of government', 'o': '?x0', 't': '1820'}

 Q: What is the {flag carrier} for {operator} of {Airbus A330}
 SPARQL:  select distinct ?obj where { wd:Q6478 wdt:P137 ?obj . ?obj wdt:P31 wd:Q721639 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Airbus A330', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flag carrier'}}

 Q: Who is the {asteroid} for {followed by} of {Pluto}
 SPARQL:  select distinct ?obj where { wd:Q339 wdt:P156 ?obj . ?obj wdt:P31 wd:Q3863 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pluto', 'p': 'followed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid'}}

 Q: Who is the {copolymer} for {monomer of} of {ethylene}
 SPARQL:  select distinct ?obj where { wd:Q151313 wdt:P4599 ?obj . ?obj wdt:P31 wd:Q421281 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ethylene', 'p': 'monomer of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'copolymer'}}

 Q: What is the {human} for {head of state} of {Inca Empire}
 SPARQL:  select distinct ?obj where { wd:Q28573 wdt:P35 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Inca Empire', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is the intended public of children's literature?
 SPARQL: select distinct ?answer where { wd:Q131539 wdt:P2360 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "children's literature", 'p': 'intended public', 'o': '?x0'}

 Q: What is {child} of {Princess Leia} that is {from fictional universe} is {Star Wars expanded to other media} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51797 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P1080 wd:Q3551295 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Princess Leia', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'universe', 'o': 'Star Wars expanded to other media'}}}

 Q: What is {spouse} of {Andriy Shevchenko} and {place of marriage}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41244 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'spouse', 'o': '$y0'}}]

 Q: Which is the Minitel code of the Associated Press?
 SPARQL: select distinct ?answer where { wd:Q40469 wdt:P2878 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Associated Press', 'p': 'Minitel code', 'o': '?x0'}

 Q: which country in Beersheba  has am end time of 1917-10-31?
 SPARQL: SELECT ?obj WHERE { wd:Q41843 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1917')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Beersheba', 'p': 'country', 'o': '?x0', 't': '1917'}

 Q: What is {position held} of {Bob Hawke} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q269372 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bob Hawke', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bob Hawke', 'p': 'position held', 'o': '$y0'}}]

 Q: what is the {start time} for {Montreal Canadiens} has {home venue} as {Centre Bell} ?
 SPARQL: SELECT ?value WHERE { wd:Q188143 p:P115 ?s . ?s ps:P115 wd:Q522282 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Montreal Canadiens', 'p': 'home venue', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'home venue', 'o': 'Centre Bell'}}}

 Q: tell me alloy that name has the world zamak in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37756 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zamak')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alloy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zamak'}}

 Q: Which is Yahoo! Japan Talent Database ID for Jimmy Connors?
 SPARQL: select distinct ?answer where { wd:Q53393 wdt:P3284 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jimmy Connors', 'p': 'Yahoo! Japan Talent Database ID', 'o': '?x0'}

 Q: What is the binary relation that contains the word subset in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q130901 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'subset')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'binary relation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'subset'}}

 Q: Which is the Track and Field Statistics female athlete ID of Florence Griffith-Joyner?
 SPARQL: select distinct ?answer where { wd:Q31082 wdt:P3924 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Florence Griffith', 'p': 'Track and Field Statistics female athlete ID', 'o': '?x0'}

 Q: What is the current translated edition of Tao Te Ching
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P629 wd:Q134425 . ?sbj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition of', 'o': 'Tao Te Ching', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'edition'}}

 Q: What is the {design of a banknote or a coin} for {currency} of {Russian ruble}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q41044 . ?sbj wdt:P31 wd:Q28794013 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Russian ruble', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'design of a banknote or a coin'}}

 Q: What are the degree and field of work of Hans Bethe?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q155794 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P101 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'degree', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'degree', 'o': '$y0'}}]

 Q: What is the location of the Warsaw Pact HQ which has wards in the Yuzhnoye Butovo District?
 SPARQL: SELECT ?answer WHERE { wd:Q41644 wdt:P159 ?answer . ?answer wdt:P150 wd:Q1963119}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Warsaw Pact', 'p': 'HQ', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has wards', 'o': 'Yuzhnoye Butovo District'}}

 Q: What is the name of the writer of "How to Win Friends and Influence People", who died in 1955?
 SPARQL: SELECT ?answer WHERE { wd:Q960077 wdt:P50 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1955'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'How to Win Friends and Influence People', 'p': 'writer', 'o': '?x0', 't': '1955'}

 Q: wich means{ does not have part} in {province of China} ?
 SPARQL: select distinct ?answer where { wd:Q1615742 wdt:P3113 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'province of China', 'p': 'does not have part', 'o': '?x0'}

 Q: What is the gender of Diana Ross, that is not a woman?
 SPARQL: SELECT ?answer WHERE { wd:Q36290 wdt:P21 ?answer . ?answer wdt:P1889 wd:Q467}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Diana Ross', 'p': 'gender', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is not', 'o': 'woman'}}

 Q: Which {function} is {treatment} of {postoperative complications} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18478450 wdt:P2176 ?X . ?X wdt:P2868 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'function', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'postoperative complications', 'p': 'treatment', 'o': '$y0'}}

 Q: What is the emergency phone number for Liberia?
 SPARQL: select distinct ?answer where { wd:Q1014 wdt:P2852 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Liberia', 'p': 'emergency phone number', 'o': '?x0'}

 Q: What is {known for} of {written by} of {The Dean's Answer to The Rebus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21283498 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'known for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Dean's Answer to The Rebus", 'p': 'written by', 'o': '$y0'}}

 Q: What is <LUMIERE director ID> of <Álex de la Iglesia> ?
 SPARQL: select distinct ?answer where { wd:Q250627 wdt:P4283 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Álex de la Iglesia', 'p': 'LUMIERE director ID', 'o': '?x0'}

 Q: what is the {point in time} for {Osamu Tezuka} has {award received} as {Iwaya Sazanami Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q193300 p:P166 ?s . ?s ps:P166 wd:Q28069010 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Osamu Tezuka', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Iwaya Sazanami Award'}, 't': '?x0'}

 Q: What is {academic degree} and {academic major} of {{Sheryl Sandberg} has {educated at} as {Harvard College}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q234653 p:P69 ?s . ?s ps:P69 wd:Q49123 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sheryl Sandberg', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard College'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sheryl Sandberg', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard College'}}}]

 Q: What partner town of Trondheim has the geotag of 61.4981?
 SPARQL: SELECT ?answer WHERE { wd:Q25804 wdt:P190 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'61.4981'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Trondheim', 'p': 'partner town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'geotag', 'o': '61.4981'}}

 Q: What is {has shires} of {Phuket}, that has {human population} is {60712.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q182565 wdt:P150 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'60712.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Phuket', 'p': 'has shires', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '60712.0'}}

 Q: What is {member of} of {county seat for} of {Yaounde} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3808 wdt:P1376 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yaounde', 'p': 'county seat for', 'o': '$y0'}}

 Q: what is honorific prefix for John Chrysostom?
 SPARQL: select distinct ?answer where { wd:Q43706 wdt:P511 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Chrysostom', 'p': 'honorific prefix', 'o': '?x0'}

 Q: What is the {member of} and the {student of} of {Quincy_Jones} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q193645 wdt:P463 ?ans_1 . wd:Q193645 wdt:P1066 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Q', 'p': 'member of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Q', 'p': 'student of', 'o': '?x1'}]

 Q: Who is the manager of Josh Taves's team?
 SPARQL: SELECT ?answer WHERE { wd:Q6289430 wdt:P54 ?X . ?X wdt:P286 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manager', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josh Taves', 'p': 'team', 'o': '$y0'}}

 Q: What is <La Vie des idées ID> of <Thomas Piketty> ?
 SPARQL: select distinct ?answer where { wd:Q984448 wdt:P5550 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thomas Piketty', 'p': 'La Vie des idées ID', 'o': '?x0'}

 Q: What is the {painting} for {commissioned by} of {Catholic Church}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P88 wd:Q9592 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'Catholic Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: what is the {for work} for {Kendrick Lamar} has {nominated for} as {BET Award for Best Collaboration} ?
 SPARQL: SELECT ?value WHERE { wd:Q130798 p:P1411 ?s . ?s ps:P1411 wd:Q4835467 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kendrick Lamar', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'BET Award for Best Collaboration'}}}

 Q: Which is the record or record progression for decathlon?
 SPARQL: select distinct ?answer where { wd:Q184654 wdt:P2869 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'decathlon', 'p': 'record or record progression', 'o': '?x0'}

 Q: What is <RPO poet ID> of <Bessie Smith> ?
 SPARQL: select distinct ?answer where { wd:Q93349 wdt:P5478 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bessie Smith', 'p': 'RPO poet ID', 'o': '?x0'}

 Q: What is the etymology of the Cooper pair that has a Nobel Prize in Physics nomination received?
 SPARQL: SELECT ?answer WHERE { wd:Q620057 wdt:P138 ?answer . ?answer wdt:P1411 wd:Q38104}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cooper pair', 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'nomination received', 'o': 'Nobel Prize in Physics'}}

 Q: Who has superpartner of muon?
 SPARQL: select distinct ?answer where { wd:Q3151 wdt:P2375 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'muon', 'p': 'has superpartner', 'o': '?x0'}

 Q: What is {user} of {shape} of {conical Asian hat} ?
 SPARQL: SELECT ?answer WHERE { wd:Q526863 wdt:P1419 ?X . ?X wdt:P1535 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'user', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'conical Asian hat', 'p': 'shape', 'o': '$y0'}}

 Q: what is the {character role} for {Beverly Hills, 90210} has {cast member} as {James Pickens} ?
 SPARQL: SELECT ?value WHERE { wd:Q117590 p:P161 ?s . ?s ps:P161 wd:Q39965 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'character role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beverly Hills, 90210', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'James Pickens'}}}

 Q: What is the {human} for {field of work} of {psychoanalysis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P101 wd:Q41630 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'field of work', 'o': 'psychoanalysis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is Google+ ID for Federal Communications Commission?
 SPARQL: select distinct ?answer where { wd:Q128831 wdt:P2847 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Federal Communications Commission', 'p': 'Google+ ID', 'o': '?x0'}

 Q: Is the max capacity of the FAT32 2576980376.4?
 SPARQL: ASK WHERE { wd:Q2622047 wdt:P3559 ?obj filter(?obj = 2576980376.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'FAT32', 'p': 'maximum size or capacity', 'o': '?x0', '?x0': '2576980376.4'}

 Q: What is the {enterprise} for {manager/director} of {Alan Sugar}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1037 wd:Q336520 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manager', 'o': 'Alan Sugar', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: What is the name of a market structure that starts with the letter o.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q877707 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'market structure'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: Which is commissioned by Sears?
 SPARQL: select distinct ?answer where { ?answer wdt:P88 wd:Q6499202}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'Sears'}

 Q: Who gave the {head office location} of {graduated from} of {Lisa Harriton} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2994135 wdt:P69 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'head office location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lisa Harriton', 'p': 'graduated from', 'o': '$y0'}}

 Q: What is the {human} for {doctoral student} of {J. Robert Oppenheimer}
 SPARQL:  select distinct ?obj where { wd:Q132537 wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Oppenheimer', 'p': 'doctoral student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Does Santa Monica's tax revenue equal 44142068.6
 SPARQL: ASK WHERE { wd:Q28958 wdt:P3087 ?obj filter(?obj = 44142068.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Santa Monica', 'p': 'fiscal/tax revenue', 'o': '?x0', '?x0': '44142068.6'}

 Q: Which business is owned by the Empire State Building?
 SPARQL:  select distinct ?obj where { wd:Q9188 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire State Building', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is <via> of <Río de la Plata> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2825 wd:Q35827}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'via', 'o': 'Río de la Plata'}

 Q: What is {ITU-T country identifier} of {country of jurisdiction} of {Bush v. Gore} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2065434 wdt:P1001 ?X . ?X wdt:P2258 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ITU-T country identifier', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bush v. Gore', 'p': 'jurisdiction', 'o': '$y0'}}

 Q: What is {position held} of {Peter Fraser} that is {replaced by} is {Walter Nash} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1400226 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q721770 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Fraser', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Walter Nash'}}}

 Q: Where was Jon Jones born in 1803-0-0.
 SPARQL: SELECT ?answer WHERE { wd:Q285450 wdt:P19 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1803'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jon Jones', 'p': 'born in', 'o': '?x0', 't': '1803'}

 Q: What is <Ramsar Sites Information Service ID> of <Lake Chapala> ?
 SPARQL: select distinct ?answer where { wd:Q318350 wdt:P2525 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lake Chapala', 'p': 'Ramsar Sites Information Service ID', 'o': '?x0'}

 Q: What record label released the albums of Eminem ?
 SPARQL:  select distinct ?obj where { wd:Q5608 wdt:P264 ?obj . ?obj wdt:P31 wd:Q18127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eminem', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'record label'}}

 Q: What is <sublimation temperature> of <graphite> ?
 SPARQL: select distinct ?answer where { wd:Q5309 wdt:P2113 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'graphite', 'p': 'sublimation temperature', 'o': '?x0'}

 Q: What is zenith of range for East Lake ?
 SPARQL: SELECT ?answer WHERE { wd:Q28656991 wdt:P4552 ?X . ?X wdt:P610 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zenith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'East Lake', 'p': 'range', 'o': '$y0'}}

 Q: Is 8.8 the slope of the El Dorado Speedway?
 SPARQL: ASK WHERE { wd:Q16559802 wdt:P4184 ?obj filter(?obj = 8.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'El Dorado Speedway', 'p': 'slope', 'o': '?x0', '?x0': '8.8'}

 Q: What is {champ} of {nomination received} of {Arthur Hunnicutt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q709942 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Hunnicutt', 'p': 'nomination received', 'o': '$y0'}}

 Q: What is coordinate location of Mekong River that is applies to part of river mouth ?
 SPARQL: SELECT ?obj WHERE { wd:Q41179 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q1233637 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mekong River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river mouth'}}}

 Q: How many {legislated by} are to/by {Tokugawa shogunate} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P467 wd:Q205662 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'legislated by', 'o': 'Tokugawa shogunate'}

 Q: Give me {national association football team} that {head coach} {Tite} and which contains the word {brazil} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6979593 . ?sbj wdt:P286 wd:Q40652 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'brazil')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national association football team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coach', 'o': 'Tite'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'brazil'}}

 Q: What is {papers at} of {songwriter} of {Symphony No. 3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q157489 wdt:P86 ?X . ?X wdt:P485 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'papers at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Symphony No. 3', 'p': 'songwriter', 'o': '$y0'}}

 Q: What is The Baseball Cube player ID of Honus Wagner?
 SPARQL: select distinct ?answer where { wd:Q1316903 wdt:P4731 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Honus Wagner', 'p': 'The Baseball Cube player ID', 'o': '?x0'}

 Q: What is the {business} for {manager/director} of {Alan Sugar}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1037 wd:Q336520 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'boss', 'o': 'Alan Sugar', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: who won by of honorary title of P. H. Newby ?
 SPARQL: SELECT ?answer WHERE { wd:Q531194 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'won by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'P. H. Newby', 'p': 'honorary title', 'o': '$y0'}}

 Q: What is {position held} of {Alexander VI} that is {start time} is {1483-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q108316 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1483')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alexander VI', 'p': 'position held', 'o': '?x0', 't': '1483'}

 Q: What is the {business} for {developer} of {Skype}
 SPARQL:  select distinct ?obj where { wd:Q40984 wdt:P178 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Skype', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is {first name} of {James Hargreaves}, that has {same} is {Yakub} ?
 SPARQL: SELECT ?answer WHERE { wd:Q140696 wdt:P735 ?answer . ?answer wdt:P460 wd:Q4537101}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Hargreaves', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same', 'o': 'Yakub'}}

 Q: What is the mean lifetime of a neutron?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q2348 wdt:P2645 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'neutron', 'p': 'mean lifetime', 'o': '?x0'}

 Q: IS THE ROTATION PERIOD OF 15 EUNOMIA IS GREATER THAN 7.2996
 SPARQL: ASK WHERE { wd:Q107528 wdt:P2147 ?obj filter(?obj > 7.2996) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '15 Eunomia', 'p': 'rotation period', 'o': '?x0', '?x0': '7.2996'}

 Q: What is the name of the project affiliated with Harvard University?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q13371 . ?sbj wdt:P31 wd:Q170584 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliated with', 'o': 'Harvard University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'project'}}

 Q: What is the birthplace of the son of Louis IX of France?
 SPARQL: SELECT ?answer WHERE { wd:Q346 wdt:P40 ?X . ?X wdt:P19 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birthplace', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'son', 'o': '$y0'}}

 Q: what is the {end time} for {Philip II of France} has {spouse} as {Isabella of Hainault} ?
 SPARQL: SELECT ?value WHERE { wd:Q34428 p:P26 ?s . ?s ps:P26 wd:Q230050 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divorced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip II of France', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Isabella of Hainault'}}}

 Q: what is the {point in time} for {Marc Chagall} has {award received} as {Erasmus Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q93284 p:P166 ?s . ?s ps:P166 wd:Q974780 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Marc Chagall', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Erasmus Prize'}, 't': '?x0'}

 Q: What is the {Abrahamic religion} for {practiced by} of {Jewish people}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3095 wd:Q7325 . ?sbj wdt:P31 wd:Q47280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'Jewish people', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Abrahamic religion'}}

 Q: which sect starts with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19097 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sect'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: which is the {for work} for {Michelangelo Antonioni} that has {nominated for} as {National Society of Film Critics Award for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q55433 p:P1411 ?s . ?s ps:P1411 wd:Q1315008 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michelangelo Antonioni', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'National Society of Film Critics Award for Best Director'}}}

 Q: Did {William_Henry_Harrison} {position held} {Governor of Indiana} and {United States senator} ?
 SPARQL: ASK WHERE { wd:Q11869 wdt:P39 wd:Q16147601 . wd:Q11869 wdt:P39 wd:Q13217683 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'William Henry Harrison', 'p': 'position held', 'o': '?x0', '?x0': 'Governor of Indiana'}, {'h': 'IS', 'v': '?x1', 's': 'William Henry Harrison', 'p': 'position held', 'o': '?x1', '?x1': 'United States senator'}]

 Q: What is capable of inhibiting or preventing pathological process of treated by  bleeding ?
 SPARQL: SELECT ?answer WHERE { wd:Q166019 wdt:P2176 ?X . ?X wdt:P2175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capable of inhibiting or preventing pathological process', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'bleeding', 'p': 'treated by', 'o': '$y0'}}

 Q: What town is the Walmart headquarters located at 702 Southwest 8th St?
 SPARQL: SELECT ?obj WHERE { wd:Q483551 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x filter(contains(?x,'702 Southwest 8th ST')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Walmart', 'p': 'headquarters', 'o': '?x0'}

 Q: What is {location of work} of {Arturo Toscanini}, that has {has counties} is {Staten Island} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13003 wdt:P937 ?answer . ?answer wdt:P150 wd:Q18432}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arturo Toscanini', 'p': 'work location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': 'Staten Island'}}

 Q: Who is the {book} for {author} of {Cheryl Strayed}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P50 wd:Q5092780 . ?sbj wdt:P31 wd:Q571 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Cheryl Strayed', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}}

 Q: What are the programming language implementation that contains the word yarv in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4117406 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yarv')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'programming language implementation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yarv'}}

 Q: Name a magazine article published in Rolling Stone.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1433 wd:Q33511 . ?sbj wdt:P31 wd:Q30070590 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Rolling Stone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine article'}}

 Q: What is the {film character} for {sibling} of {Wonder Woman}
 SPARQL:  select distinct ?obj where { wd:Q338430 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wonder Woman', 'p': 'sibling', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character'}}

 Q: What's the territorial entity and twinned administrative body of San Francisco?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q62 wdt:P131 ?ans_1 . wd:Q62 wdt:P190 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'San Francisco', 'p': 'in', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'San Francisco', 'p': 'twinned administrative body', 'o': '?x1'}]

 Q: What are the baseball teams that start with the letter A
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13027888 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'á')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'baseball team'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'á'}}

 Q: What is the child astronomical body of Tau Ceti?
 SPARQL: select distinct ?answer where { wd:Q15820 wdt:P398 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tau Ceti', 'p': 'child astronomical body', 'o': '?x0'}

 Q: Is the shear strength of the thread-locking fluid less than .6?
 SPARQL: ASK WHERE { wd:Q2249485 wdt:P5706 ?obj filter(?obj < 0.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'thread-locking fluid', 'p': 'shear strength', 'o': '?x0', '?x0': '0.6'}

 Q: Is the conversion to standard unit of the minute equal to .01666667?
 SPARQL: ASK WHERE { wd:Q7727 wdt:P2442 ?obj filter(?obj = 0.01666667) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'minute', 'p': 'conversion to standard unit', 'o': '?x0', '?x0': '0.01666667'}

 Q: What is {profession} of {Abū Ḥanīfa Dīnawarī}, that has {field of this profession} is {botany} ?
 SPARQL: SELECT ?answer WHERE { wd:Q293520 wdt:P106 ?answer . ?answer wdt:P425 wd:Q441}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Abū Ḥanīfa Dīnawarī', 'p': 'profession', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'field of this profession', 'o': 'botany'}}

 Q: Which is the bicameral legislature for the legislative body of the Kingdom of Great Britain?
 SPARQL:  select distinct ?obj where { wd:Q161885 wdt:P194 ?obj . ?obj wdt:P31 wd:Q189445 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Great Britain', 'p': 'legislative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bicameral legislature'}}

 Q: What is {using} of {sports} of {Team England} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7691477 wdt:P641 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'using', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Team England', 'p': 'sport', 'o': '$y0'}}

 Q: Did {Will_Smith} {award received} {Grammy Award for Best Rap Performance by a Duo or Group}?
 SPARQL: ASK WHERE { wd:Q40096 wdt:P166 wd:Q4809486 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Will Smith', 'p': 'award received', 'o': '?x0', '?x0': 'Grammy Award for Best Rap Performance by a Duo or Group'}]

 Q: Which essential medicine has the most surface tension?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q35456 . ?ent wdt:P3013 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'surface tension', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine'}}

 Q: What is {partner} of {Rose McGowan} that is {end time} is {2009-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q211040 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rose McGowan', 'p': 'partner', 'o': '?x0', 't': '2009'}

 Q: Which is the birth place of Robert Rayford with abbreviation as
 SPARQL: SELECT ?answer WHERE { wd:Q288055 wdt:P19 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'ארה"ב'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Robert Rayford', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'abbreviation', 'o': 'ארה"ב'}}

 Q: What infectious disease has had the most cases?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q18123741 . ?ent wdt:P1603 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of cases', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'infectious disease'}}

 Q: When did significant event of Nicholas II of Russia and place of marriage?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q40787 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P2842 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nicholas II of Russia', 'p': 'significant event', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'significant event', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nicholas II of Russia', 'p': 'significant event', 'o': '$y0'}}]

 Q: Is Dirk Nowitzki a relative of Martin Olsson and Marcus Olsson?
 SPARQL: ASK WHERE { wd:Q44068 wdt:P1038 wd:Q312935 . wd:Q44068 wdt:P1038 wd:Q1374528 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Dirk Nowitzki', 'p': 'relative', 'o': '?x0', '?x0': 'Martin Olsson'}, {'h': 'IS', 'v': '?x1', 's': 'Dirk Nowitzki', 'p': 'relative', 'o': '?x1', '?x1': 'Marcus Olsson'}]

 Q: Which {tributary} is {outlet} of {Amazon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3783 wdt:P403 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amazon', 'p': 'outlet', 'o': '$y0'}}

 Q: what is the {for work} for {Marlon Brando} has {nominated for} as {Academy Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q34012 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marlon Brando', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}}}

 Q: What is the shape of penis whose domain is geometry?
 SPARQL: SELECT ?answer WHERE { wd:Q58 wdt:P1419 ?answer . ?answer wdt:P2579 wd:Q8087}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'penis', 'p': 'shape', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'domain', 'o': 'geometry'}}

 Q: What is the {single entity of population} for {capital of} of {Seville}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1376 wd:Q8717 . ?sbj wdt:P31 wd:Q3055118 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital of', 'o': 'Seville', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single entity of population'}}

 Q: What is <Paris Faculty of Letters professor ID (1809-1908)> of <Émile Durkheim> ?
 SPARQL: select distinct ?answer where { wd:Q15948 wdt:P5545 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Émile Durkheim', 'p': 'Paris Faculty of Letters professor ID (1809-1908)', 'o': '?x0'}

 Q: What political catch phrase used in the United States of America which applies to jurisdiction starts with the letter d?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3377406 . ?sbj wdt:P1001 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political catch phrase', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'United States of America'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is an ethnic conflict that begins with the letter w?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q766875 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnic conflict'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which is the production statistics of Champagne?
 SPARQL: select distinct ?answer where { ?answer wdt:P2746 wd:Q134862}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'production statistics', 'o': 'Champagne'}

 Q: Is the minimum age at which education is compulsory in Brazil equal to 8.4?
 SPARQL: ASK WHERE { wd:Q155 wdt:P3270 ?obj filter(?obj = 8.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Brazil', 'p': 'compulsory education (minimum age)', 'o': '?x0', '?x0': '8.4'}

 Q: Which is the IPNI publication ID for American Journal of Botany?
 SPARQL: select distinct ?answer where { wd:Q2664693 wdt:P2008 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Journal of Botany', 'p': 'IPNI publication ID', 'o': '?x0'}

 Q: What is the Digital Rights Management system of Madden NFL?
 SPARQL: select distinct ?answer where { wd:Q1883234 wdt:P1032 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Madden NFL', 'p': 'Digital Rights Management system', 'o': '?x0'}

 Q: What is {followed by} and {follows} of {{Berengar I of Italy} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Tim Cahill} has {member of sports team} as {Millwall F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q187238 p:P54 ?s . ?s ps:P54 wd:Q19487 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tim Cahill', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Millwall F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tim Cahill', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Millwall F.C.'}}}]

 Q: How many {member of} are for {United Arab Emirates} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q878 wdt:P463 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'United Arab Emirates', 'p': 'member of', 'o': '?x0'}

 Q: who is the Christian chapel for patron saint of Anthony of Padua?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q167477 . ?sbj wdt:P31 wd:Q108325 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Anthony of Padua', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chapel'}}

 Q: Which charitable organization is McGill University affiliated with?
 SPARQL:  select distinct ?obj where { wd:Q201492 wdt:P1416 ?obj . ?obj wdt:P31 wd:Q708676 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'McGill University', 'p': 'affiliated with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'charitable organization'}}

 Q: Give me {alphabet} that {based on} {Proto-Sinaitic script} and which contains the word {alphabet} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9779 . ?sbj wdt:P144 wd:Q1065250 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'alphabet')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alphabet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Proto-Sinaitic script'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'alphabet'}}

 Q: Where is University of Colorado Boulder's administrative territorial entity?
 SPARQL: select distinct ?answer where { wd:Q736674 wdt:P131 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Colorado Boulder', 'p': 'in', 'o': '?x0'}

 Q: What's the retirement age in Australia?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q408 wdt:P3001 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Australia', 'p': 'retirement age', 'o': '?x0'}

 Q: How many {solves} are to/by {shortest path problem} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2159 wd:Q1058754 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'solves', 'o': 'shortest path problem'}

 Q: What is Guardian topic id of Ryan Giggs?
 SPARQL: select distinct ?answer where { wd:Q10524 wdt:P3106 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ryan Giggs', 'p': 'Guardian', 'o': '?x0'}

 Q: Which is the incarnation of Shiva?
 SPARQL: select distinct ?answer where { ?answer wdt:P3701 wd:Q11378}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'incarnation of', 'o': 'Shiva'}

 Q: What is <work period (end)> of <Joan Crawford> ?
 SPARQL: select distinct ?answer where { wd:Q40475 wdt:P2032 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joan Crawford', 'p': 'work period (end)', 'o': '?x0'}

 Q: What is the {umbrella organization} for {allegiance} of {Abu Musab al-Zarqawir}
 SPARQL:  select distinct ?obj where { wd:Q181049 wdt:P945 ?obj . ?obj wdt:P31 wd:Q1156831 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Abu Musab al-Zarqawi', 'p': 'allegiance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'umbrella organization'}}

 Q: How many {operator} are to/by {Greenpeace} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P137 wd:Q81307 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'Greenpeace'}

 Q: what is the {nominee} for {Saving Private Ryan} has {nominated for} as {Academy Award for Best Sound Mixing} ?
 SPARQL: SELECT ?value WHERE { wd:Q165817 p:P1411 ?s . ?s ps:P1411 wd:Q830079 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saving Private Ryan', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Sound'}}}

 Q: Does the LOHAS park station have less than 2.4 number of platform faces
 SPARQL: ASK WHERE { wd:Q718069 wdt:P5595 ?obj filter(?obj < 2.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'LOHAS Park station', 'p': 'number of platform faces', 'o': '?x0', '?x0': '2.4'}

 Q: what is the {together with} for {Shimon Peres} has {award received} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q57410 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P1706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shimon Peres', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Nobel Peace Prize'}}}

 Q: What is the date of death and birth date of Charlemagne? Is her child as Charles the Younger?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q283107 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles the Younger'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'birth date', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles the Younger'}}}]

 Q: What is the {natural satellite} for {parent astronomical body} of {Neptune}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P397 wd:Q332 . ?sbj wdt:P31 wd:Q2537 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Neptune', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'moon'}}

 Q: What is {has influence} of {created by} of {Eldarion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1632303 wdt:P170 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has influence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eldarion', 'p': 'created by', 'o': '$y0'}}

 Q: What is {learning what?} of {sociology}, that has {is said to be the same as} is {sex} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21201 wdt:P2578 ?answer . ?answer wdt:P460 wd:Q290}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'sociology', 'p': 'learning what?', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'sex'}}

 Q: Is the prisoner count of the Ebensee concentration camp equal to 27000?
 SPARQL: ASK WHERE { wd:Q699561 wdt:P5630 ?obj filter(?obj = 27000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ebensee concentration camp', 'p': 'prisoner count', 'o': '?x0', '?x0': '27000'}

 Q: What is <IPNI author ID> of <Jean-Jacques Rousseau> ?
 SPARQL: select distinct ?answer where { wd:Q6527 wdt:P586 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean-Jacques Rousseau', 'p': 'IPNI author ID', 'o': '?x0'}

 Q: Tell me government agency whose name has the word yuan in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q327333 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'government agency'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yuan'}}

 Q: A series of 1 would be followed by what?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q199 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': '1', 'p': 'series', 'o': '$y0'}}]

 Q: What are the private university which start with the letter university
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q902104 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private university'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'university'}}

 Q: What is {editor} of {Francisco Jiménez de Cisneros} that is {place of publication} is {Alcalá de Henares} ?
 SPARQL: SELECT ?obj WHERE { wd:Q342392 p:P98 ?s . ?s ps:P98 ?obj . ?s pq:P291 wd:Q46940 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'editor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Francisco Jimenez de Cisneros', 'p': 'editor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of publication', 'o': 'Alcala de Henares'}}}

 Q: Irving Berling was the founder of which nonprofit organization?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q128746 . ?sbj wdt:P31 wd:Q163740 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founder', 'o': 'Irving Berlin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonprofit organization'}}

 Q: Which extinct language is the indigenous to the Khazars?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2341 wd:Q173282 . ?sbj wdt:P31 wd:Q38058796 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'indigenous to', 'o': 'Khazars', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'extinct language'}}

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: What is in the  OKPD code of the good or service of grapefruit juice ?
 SPARQL: select distinct ?answer where { wd:Q1138468 wdt:P3245 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'grapefruit juice', 'p': 'OKPD code of the good or service', 'o': '?x0'}

 Q: When did the Salta Province reach a population of 1333365?
 SPARQL: SELECT ?value WHERE { wd:Q44803 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1333365')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Salta Province', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1333365'}, 't': '?x0'}

 Q: What is <BNE ID> of <Bo Diddley> ?
 SPARQL: select distinct ?answer where { wd:Q208881 wdt:P950 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bo Diddley', 'p': 'BNE ID', 'o': '?x0'}

 Q: What is given name of Lajos Tihanyi ?
 SPARQL: select distinct ?answer where { wd:Q856707 wdt:P735 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lajos Tihanyi', 'p': 'given name', 'o': '?x0'}

 Q: Which attendee of the meeting on Brexit has the acronym Соединённое Королевство?
 SPARQL: SELECT ?answer WHERE { wd:Q7888194 wdt:P710 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'Соединённое Королевство'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Brexit', 'p': 'attendee', 'o': '?x0'}

 Q: What award did Titanic receive in 1997?
 SPARQL: SELECT ?obj WHERE { wd:Q44578 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1997')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Titanic', 'p': 'award', 'o': '?x0', 't': '1997'}

 Q: what is the {start time} for {David Ben-Gurion} has {position held} as {Knesset member} ?
 SPARQL: SELECT ?value WHERE { wd:Q37610 p:P39 ?s . ?s ps:P39 wd:Q4047513 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Ben-Gurion', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Knesset member'}}}

 Q: What is the {video game console model} for {said to be the same as} of {Nintendo Entertainment System}
 SPARQL:  select distinct ?obj where { wd:Q172742 wdt:P460 ?obj . ?obj wdt:P31 wd:Q56682555 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nintendo Entertainment System', 'p': 'said to be the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game console model'}}

 Q: How many philosopher's are patron saint's?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q4964182 wdt:P417 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'philosopher', 'p': 'patron saint', 'o': '?x0'}

 Q: Did {John_Mayer} {occupation} {singer} and {blogger} ?
 SPARQL: ASK WHERE { wd:Q215215 wdt:P106 wd:Q177220 . wd:Q215215 wdt:P106 wd:Q8246794 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Mayer', 'p': 'occupation', 'o': '?x0', '?x0': 'singer'}, {'h': 'IS', 'v': '?x1', 's': 'John Mayer', 'p': 'occupation', 'o': '?x1', '?x1': 'blogger'}]

 Q: What is {drug interaction} of {treatment} of {malaria} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12156 wdt:P2176 ?X . ?X wdt:P769 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'drug interaction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'malaria', 'p': 'treatment', 'o': '$y0'}}

 Q: What is the {place of burial} and the {place of birth} of {Rock_Hudson} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q184378 wdt:P119 ?ans_1 . wd:Q184378 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Rock Hudson', 'p': 'place of burial', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Rock Hudson', 'p': 'place of birth', 'o': '?x1'}]

 Q: What tributary is the watercourse outflow of Po?
 SPARQL: SELECT ?answer WHERE { wd:Q643 wdt:P403 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Po', 'p': 'watercourse outflow', 'o': '$y0'}}

 Q: What are the ballet which start with the letter terpsichore
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15079786 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'terpsichore')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ballet'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'terpsichore'}}

 Q: What is affiliation for Rostock ?
 SPARQL: select distinct ?answer where { wd:Q2861 wdt:P1416 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rostock', 'p': 'affiliation', 'o': '?x0'}

 Q: What is {has designer} of {Fortran}, that has {prize awarded} is {Turing Award} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83303 wdt:P287 ?answer . ?answer wdt:P166 wd:Q185667}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fortran', 'p': 'has designer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': 'Turing Award'}}

 Q: What is {first aid response} of {outcome} of {phosphoric acid} ?
 SPARQL: SELECT ?answer WHERE { wd:Q184782 wdt:P1542 ?X . ?X wdt:P2239 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first aid response', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'phosphoric acid', 'p': 'outcome', 'o': '$y0'}}

 Q: what is the {replaces} for {Tokhtamysh} has {position held} as {Khan} ?
 SPARQL: SELECT ?value WHERE { wd:Q309585 p:P39 ?s . ?s ps:P39 wd:Q181888 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tokhtamysh', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Khan'}}}

 Q: How many {sidekick of} are to/by {Batman} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2546 wd:Q2695156 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sidekick of', 'o': 'Batman'}

 Q: Is the mass of the Theta Centauri less than 3.2?
 SPARQL: ASK WHERE { wd:Q14225 wdt:P2067 ?obj filter(?obj < 3.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Theta Centauri', 'p': 'mass', 'o': '?x0', '?x0': '3.2'}

 Q: Is Katy Perry's family name Hudson?
 SPARQL: ASK WHERE { wd:Q42493 wdt:P734 wd:Q2720681 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Katy Perry', 'p': 'family name', 'o': '?x0', '?x0': 'Hudson'}]

 Q: What is {capital city} of {Alabama}, that has {category of associated people} is {Category:People from Tuscaloosa, Alabama} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173 wdt:P36 ?answer . ?answer wdt:P1792 wd:Q8751891}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alabama', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:People from Tuscaloosa, Alabama'}}

 Q: What is Turkmenistan short name in the emoji flag sequence?
 SPARQL: SELECT ?obj WHERE { wd:Q874 p:P1813 ?s . ?s ps:P1813 ?obj . ?s pq:P31 wd:Q28840786 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'short name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Turkmenistan', 'p': 'short name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'emoji flag sequence'}}}

 Q: Which is the SunshineTour ID for Gary Player?
 SPARQL: select distinct ?answer where { wd:Q469721 wdt:P3582 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gary Player', 'p': 'SunshineTour ID', 'o': '?x0'}

 Q: What is the {medical examinations} and the {drug used for treatment} of {Colorectal_cancer} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q188874 wdt:P923 ?ans_1 . wd:Q188874 wdt:P2176 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'colorectal cancer', 'p': 'medical examinations', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'colorectal cancer', 'p': 'used for treatment', 'o': '?x1'}]

 Q: Who is the {awarded} of {Le Duc Tho} whose {champion} is {Tunisian National Dialogue Quartet}?
 SPARQL: SELECT ?answer WHERE { wd:Q233969 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q21078159}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Le Duc Tho', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'champion', 'o': 'Tunisian National Dialogue Quartet'}}

 Q: What is {marriage age} of {location of death} of {Sundance Kid} ?
 SPARQL: SELECT ?answer WHERE { wd:Q460918 wdt:P20 ?X . ?X wdt:P3000 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'marriage age', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sundance Kid', 'p': 'location of death', 'o': '$y0'}}

 Q: What is the {constituency of the Rajya Sabha} for {coextensive with} of {Mizoram}
 SPARQL:  select distinct ?obj where { wd:Q1502 wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mizoram', 'p': 'coextensive with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: Which is the Historia de la Medicina person ID of John Hunter?
 SPARQL: select distinct ?answer where { wd:Q505981 wdt:P5468 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Hunter', 'p': 'Historia de la Medicina person ID', 'o': '?x0'}

 Q: What is {significant event} of {Ellen Johnson Sirleaf} that is {sex or gender} is {male} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43179 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P21 wd:Q6581097 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significant event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ellen Johnson Sirleaf', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'gender', 'o': 'm'}}}

 Q: What is the {historical country} for {diplomatic relation} of {German Democratic Republic}
 SPARQL:  select distinct ?obj where { wd:Q16957 wdt:P530 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'German Democratic Republic', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: Which is the economic branch of the administrator of Waterfront?
 SPARQL: SELECT ?answer WHERE { wd:Q1625437 wdt:P137 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'branch', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Waterfront', 'p': 'administrator', 'o': '$y0'}}

 Q: When did Durham had a population of 6679 people?
 SPARQL: SELECT ?value WHERE { wd:Q49229 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'6679.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Durham', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '6679.0'}, 't': '?x0'}

 Q: Is the maximum duration of antimicrobial therapy for pediatric pneumonia 12
 SPARQL: ASK WHERE { wd:Q61707499 wdt:P4135 ?obj filter(?obj = 12.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Duration of Antimicrobial Therapy for Paediatric Pneumonia', 'p': 'maximum age', 'o': '?x0', '?x0': '12.0'}

 Q: What is {member of} of {is in the region of} of {Veracruz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q60130 wdt:P131 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Veracruz', 'p': 'region', 'o': '$y0'}}

 Q: Who is the {version, edition, or translation} for {author} of {Salman Rushdie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P50 wd:Q44306 . ?sbj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'author', 'o': 'Salman Rushdie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version, edition, or translation'}}

 Q: What is {often confused with} of {cousin}, that has {date of first written record} is {1416-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23009870 wdt:P1889 ?answer . ?answer wdt:P1249 ?x FILTER(contains(YEAR(?x),'1416'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cousin', 'p': 'confused with', 'o': '?x0', 't': '1416'}

 Q: What is the {human} for {commissioned by} of {Mausoleum of Maussollos}
 SPARQL:  select distinct ?obj where { wd:Q45368 wdt:P88 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mausoleum of Maussollos', 'p': 'commissioned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {performer} of {Jill Valentine} that is {object has role} is {voice actor} ?
 SPARQL: SELECT ?obj WHERE { wd:Q840368 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P3831 wd:Q2405480 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jill Valentine', 'p': 'actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'object has role', 'o': 'voice actor'}}}

 Q: What is the taxon parent of Scorpaeniformes, whose vernacular name is Lớp Cá vây tia?
 SPARQL: SELECT ?answer WHERE { wd:Q208777 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Lớp Cá vây tia'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Scorpaeniformes', 'p': 'taxon parent', 'o': '?x0'}

 Q: What university starts with the letter "u"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3918 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is Mount Baker's Bivouac.com mountain ID?
 SPARQL: select distinct ?answer where { wd:Q594387 wdt:P3507 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mount Baker', 'p': 'Bivouac.com mountain ID', 'o': '?x0'}

 Q: When did Novosibirsk stop being located in the administrative territorial entity of West Siberian Krai?
 SPARQL: SELECT ?value WHERE { wd:Q883 p:P131 ?s . ?s ps:P131 wd:Q4186485 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Novosibirsk', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'West Siberian Krai'}}}

 Q: Give me {crude drug} that {crystal system} {monoclinic crystal system} and which that starts with {'g'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q735160 . ?sbj wdt:P556 wd:Q624543 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'g')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'crude drug', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'crystal system', 'o': 'monoclinic'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'g'}}

 Q: What is the {gene} for {genetic association} of {colorectal cancer}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2293 wd:Q188874 . ?sbj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'colorectal cancer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: What is the {Academy Awards ceremony} for {presenter} of {Ellen DeGeneres}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q483325 . ?sbj wdt:P31 wd:Q16913666 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Academy Awards ceremony'}}

 Q: Which is the mountains classification of Chris Froome?
 SPARQL: select distinct ?answer where { ?answer wdt:P4320 wd:Q319591}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mountains classification', 'o': 'Chris Froome'}

 Q: What is Sony a member of and who owns it?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q41187 wdt:P463 ?ans_1 . wd:Q41187 wdt:P1830 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Sony', 'p': 'member of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Sony', 'p': 'owns', 'o': '?x1'}]

 Q: Who is the human biblical figure for the significant person of Saul?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3342 wd:Q28730 . ?sbj wdt:P31 wd:Q20643955 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Saul', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human biblical figure'}}

 Q: How many mountains classifications are there in the {Chris Froome} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4320 wd:Q319591 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'mountains classification', 'o': 'Chris Froome'}

 Q: Which publication place of Kojiki has a CPI inflation rate of 0.8?
 SPARQL: SELECT ?answer WHERE { wd:Q813031 wdt:P291 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'0.8'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kojiki', 'p': 'publication place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '0.8'}}

 Q: Which is the unary operation of the notation of integral symbol and contains the word integral in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657596 . ?sbj wdt:P913 wd:Q1665420 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'integral')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unary operation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'notation', 'o': 'integral symbol'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'integral'}}

 Q: How many {costume designer} are to/by {Christian Dior} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2515 wd:Q159694 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'costume designer', 'o': 'Christian Dior'}

 Q: What is the {dominion of the British Empire} for {contains administrative territorial entity} of {Tripura}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q1363 . ?sbj wdt:P31 wd:Q223832 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Tripura', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dominion of the British Empire'}}

 Q: What member of Marshall Islands started on 1992-9-23?
 SPARQL: SELECT ?obj WHERE { wd:Q709 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marshall Islands', 'p': 'member of', 'o': '?x0', 't': '1992'}

 Q: When did Belfast stop being part of the Kingdom of Ireland?
 SPARQL: SELECT ?value WHERE { wd:Q10686 p:P17 ?s . ?s ps:P17 wd:Q215530 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'land', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'Kingdom of Ireland'}}}

 Q: What business in the United States has the most registered users or contributors ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P1833 ?obj . ?ent wdt:P17 wd:Q30 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'users', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'the United States'}}}

 Q: what is the {replaces} for {U Thant} has {position held} as {United Nations Secretary-General} ?
 SPARQL: SELECT ?value WHERE { wd:Q1264 p:P39 ?s . ?s ps:P39 wd:Q81066 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'U Thant', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United Nations Secretary-General'}}}

 Q: Which is the city of the United States for the twinned administrative body of Lahore?
 SPARQL:  select distinct ?obj where { wd:Q11739 wdt:P190 ?obj . ?obj wdt:P31 wd:Q1093829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lahore', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States'}}

 Q: How many mountains classifications are there in the {Chris Froome} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4320 wd:Q319591 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'mountains classification', 'o': 'Chris Froome'}

 Q: "Which is {subtopic of} of {history of geography}, where {Universal Decimal Classification} is {91} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q911070 wdt:P1269 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'91'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of geography', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Universal Decimal Classification', 'o': '91'}}

 Q: what is the {applies to jurisdiction} for {The Little Prince} has {public domain date} as {2005-1-1} ?
 SPARQL: SELECT ?value WHERE { wd:Q25338 p:P3893 ?s . ?s ps:P3893 ?x filter(contains(YEAR(?x),'2005')) . ?s pq:P1001 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to jurisdiction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Little Prince', 'p': 'public domain date', 'o': '$y0'}}

 Q: What is the criteria used to name polar night which is the opposite of midnight sun?
 SPARQL: SELECT ?value WHERE { wd:Q190991 p:P461 ?s . ?s ps:P461 wd:Q774621 . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criteria used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'polar night', 'p': 'opposite of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'opposite of', 'o': 'midnight sun'}}}

 Q: Which is the melting point of lindane?
 SPARQL: select distinct ?answer where { wd:Q282003 wdt:P2101 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'lindane', 'p': 'melting point', 'o': '?x0'}

 Q: Which federation has the largest Gini coefficient?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q43702 . ?ent wdt:P1125 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Gini coefficient', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federation'}}

 Q: what is the {end time} for {Lu Xun} has {spouse} as {Zhu An} ?
 SPARQL: SELECT ?value WHERE { wd:Q23114 p:P26 ?s . ?s ps:P26 wd:Q11093843 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lu Xun', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Zhu An'}}}

 Q: What is {position held} of {Konstantinos Karamanlis} that is {start time} is {1974-7-24} ?
 SPARQL: SELECT ?obj WHERE { wd:Q156806 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Konstantinos Karamanlis', 'p': 'position held', 'o': '?x0', 't': '1974'}

 Q: what is the {start time} for {Nelson Mandela Bay Metropolitan Municipality} has {twinned administrative body} as {Gothenburg} ?
 SPARQL: SELECT ?value WHERE { wd:Q1856565 p:P190 ?s . ?s ps:P190 wd:Q25287 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nelson Mandela Bay Metropolitan Municipality', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Gothenburg'}}}

 Q: When did Alicante have a population of 322,673?
 SPARQL: SELECT ?value WHERE { wd:Q11959 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'322673.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Alicante', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '322673.0'}, 't': '?x0'}

 Q: Tell me which is the aqueous solution that has fermentation as fabrication method and contains the word vinegar in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q906356 . ?sbj wdt:P2079 wd:Q41760 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vinegar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aqueous solution', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'fabrication method', 'o': 'fermentation'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vinegar'}}

 Q: Tell me about socialist state for public holiday of Chinese New Year?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P832 wd:Q131772 . ?sbj wdt:P31 wd:Q842112 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'public holiday', 'o': 'Chinese New Year', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'socialist state'}}

 Q: What is the board game with the highest number of minimum players?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q131436 . ?ent wdt:P1872 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'minimum players', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'board game'}}

 Q: what are the linear combination which start with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q27628 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'linear combination'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is the {human} for {residence} of {Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P551 wd:Q220 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'residence', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what are the alloy which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37756 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alloy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: How many drainage basins are determined for Tarim Basin?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4614 wd:Q216622 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'drainage basin', 'o': 'Tarim Basin'}

 Q: what is the {start time} for {Venice} has {country} as {Republic of Venice} ?
 SPARQL: SELECT ?value WHERE { wd:Q641 p:P17 ?s . ?s ps:P17 wd:Q4948 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Venice', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Republic of Venice'}}}

 Q: what is the {start time} for {Tianjin} has {twinned administrative body} as {Hakodate} ?
 SPARQL: SELECT ?value WHERE { wd:Q11736 p:P190 ?s . ?s ps:P190 wd:Q26418 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tianjin', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Hakodate'}}}

 Q: What is {diplomatic relation} of {Taiwan} that is {statement is subject of} is {Netherlands–Taiwan relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q865 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q15926013 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taiwan', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Netherlands–Taiwan relations'}}}

 Q: Did {John_Gotti} {convicted of} {obstruction of justice} and {tax noncompliance} ?
 SPARQL: ASK WHERE { wd:Q301646 wdt:P1399 wd:Q525302 . wd:Q301646 wdt:P1399 wd:Q15279749 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Gotti', 'p': 'convicted of', 'o': '?x0', '?x0': 'obstruction of justice'}, {'h': 'IS', 'v': '?x1', 's': 'John Gotti', 'p': 'convicted of', 'o': '?x1', '?x1': 'tax noncompliance'}]

 Q: What is {work} of {designer} of {Metropolitan Railway A Class} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6825216 wdt:P287 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Metropolitan Railway A Class', 'p': 'designer', 'o': '$y0'}}

 Q: Is Grand Theft Auto V part of the Grand Theft Auto series?
 SPARQL: ASK WHERE { wd:Q17452 wdt:P179 wd:Q132730 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Grand Theft Auto V', 'p': 'series', 'o': '?x0', '?x0': 'Grand Theft Auto'}]

 Q: what is the {point in time} for {We'll Meet Again} has {performer} as {Jim Capaldi} ?
 SPARQL: SELECT ?value WHERE { wd:Q2624195 p:P175 ?s . ?s ps:P175 wd:Q1392515 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': "We'll Meet Again", 'p': 'performer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'performer', 'o': 'Jim Capaldi'}, 't': '?x0'}

 Q: Who is the nominee for Celeste Holm whose winner is Beatrice Straight?
 SPARQL: SELECT ?answer WHERE { wd:Q212957 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q232532}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Celeste Holm', 'p': 'nominee for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Beatrice Straight'}}

 Q: What is {sculptor} of {pressure volume diagram}, that has {method of murder} is {tuberculosis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q311318 wdt:P170 ?answer . ?answer wdt:P509 wd:Q12204}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pressure volume diagram', 'p': 'sculptor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'method of murder', 'o': 'tuberculosis'}}

 Q: What is the {taxon} with the {MAX(heart rate)} whose {described by source} is {Paulys Realenzyklopädie der klassischen Altertumswissenschaft}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P3395 ?obj . ?ent wdt:P1343 wd:Q1138524 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'heart rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'Paulys Realenzyklopädie der klassischen Altertumswissenschaft'}}}

 Q: What is {region} of {interment} of {Pancho Vladigerov} ?
 SPARQL: SELECT ?answer WHERE { wd:Q528781 wdt:P119 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pancho Vladigerov', 'p': 'interment', 'o': '$y0'}}

 Q: Which is the door that was commissioned by Frederick William II of Prussia and starts with the letter b?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q36794 . ?sbj wdt:P88 wd:Q152229 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'door', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'Frederick William II of Prussia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: Was Lionel Richie or Peter Michael Escovedo Nicole Richie father?
 SPARQL: ASK WHERE { wd:Q232495 wdt:P22 wd:Q26695 . wd:Q232495 wdt:P22 wd:Q7175870 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Nicole Richie', 'p': 'father', 'o': '?x0', '?x0': 'Lionel Richie'}, {'h': 'IS', 'v': '?x1', 's': 'Nicole Richie', 'p': 'father', 'o': '?x1', '?x1': 'Peter Michael Escovedo'}]

 Q: How many subsidiary are European Union?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q458 wdt:P355 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'European Union', 'p': 'subsidiary', 'o': '?x0'}

 Q: Which architecture firm of the California Academy of Sciences includes a member of the European Academy of Sciences and Arts?
 SPARQL: SELECT ?answer WHERE { wd:Q965731 wdt:P84 ?answer . ?answer wdt:P463 wd:Q46703}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'California Academy of Sciences', 'p': 'architect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'European Academy of Sciences and Arts'}}

 Q: Which is the disease that L-Tyrosine is used as a treatment drug?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2176 wd:Q188017 . ?sbj wdt:P31 wd:Q12136 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'treatment', 'o': 'L-Tyrosine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: What is executive branch of basin countries of Tigris ?
 SPARQL: SELECT ?answer WHERE { wd:Q35591 wdt:P205 ?X . ?X wdt:P208 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'executive branch', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tigris', 'p': 'basin countries', 'o': '$y0'}}

 Q: What is <Deutsche Ultramarathon-Vereinigung ID> of <Dean Karnazes> ?
 SPARQL: select distinct ?answer where { wd:Q331288 wdt:P2162 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dean Karnazes', 'p': 'Deutsche Ultramarathon-Vereinigung ID', 'o': '?x0'}

 Q: Who has kids by Gustav Holst, whose year of birth is 1907-4-12?
 SPARQL: SELECT ?answer WHERE { wd:Q200867 wdt:P40 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1907'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gustav Holst', 'p': 'kid', 'o': '?x0', 't': '1907'}

 Q: Which is the hydrological order number for Morava?
 SPARQL: select distinct ?answer where { wd:Q179251 wdt:P4279 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Morava', 'p': 'hydrological order number', 'o': '?x0'}

 Q: What is {Carnegie Classification of Institutions of Higher Education} of {school attended} of {Tsung-Dao Lee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q183679 wdt:P69 ?X . ?X wdt:P2643 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Carnegie Classification of Institutions of Higher Education', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tsung-Dao Lee', 'p': 'school attended', 'o': '$y0'}}

 Q: What is the {song} for {lyrics by} of {Janet Jackson}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P676 wd:Q131324 . ?sbj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lyrics by', 'o': 'Janet Jackson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: Which is the Filmfare Awards given to winner Anil Kapoor?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1346 wd:Q313956 . ?sbj wdt:P31 wd:Q37049 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Anil Kapoor', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Filmfare Awards'}}

 Q: What is the legislature of a Mexican state with the lowest number of constituencies whose instance of is unicameral legislature ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q17680584 . ?ent wdt:P4253 ?obj . ?ent wdt:P31 wd:Q37002670} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of constituencies', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legislature of a Mexican state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unicameral legislature'}}}

 Q: What is the {linguistic typology} and the {UNESCO language status} of {Spanish_language} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1321 wdt:P4132 ?ans_1 . wd:Q1321 wdt:P1999 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Spanish', 'p': 'linguistic typology', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Spanish', 'p': 'UNESCO language status', 'o': '?x1'}]

 Q: What is <regulates (molecular biology)> of <regulation of gene expression> ?
 SPARQL: select distinct ?answer where { wd:Q411391 wdt:P128 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'regulation of gene expression', 'p': 'regulates (molecular biology)', 'o': '?x0'}

 Q: What is the {branch of biology} for {studied by} of {bat}
 SPARQL:  select distinct ?obj where { wd:Q28425 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q28598684 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'bat', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of biology'}}

 Q: Give me {analytic function} that starts with {'f'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q215084 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'analytic function'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: Who is the production designer of Alejandro Jodorowsky?
 SPARQL: select distinct ?answer where { ?answer wdt:P2554 wd:Q263730}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'production designer', 'o': 'Alejandro Jodorowsky'}

 Q: When did Debrecen stay in the county town?
 SPARQL: SELECT ?value WHERE { wd:Q79880 p:P31 ?s . ?s ps:P31 wd:Q1175512 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Debrecen', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'county town'}}}

 Q: Did {Stevie_Nicks} {field of work} {musical composition}?
 SPARQL: ASK WHERE { wd:Q234691 wdt:P101 wd:Q207628 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Stevie Nicks', 'p': 'field of work', 'o': '?x0', '?x0': 'musical composition'}]

 Q: What's treated by or treats the disease of ether?
 SPARQL: SELECT ?answer WHERE { wd:Q202218 wdt:P2175 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ether', 'p': 'treats', 'o': '$y0'}}

 Q: How many {commanded by} are for {Warsaw Pact} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q41644 wdt:P4791 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Warsaw Pact', 'p': 'commanded by', 'o': '?x0'}

 Q: What is {located in time zone} of {Uppsala} that is {valid in period} is {daylight saving time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q25286 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uppsala', 'p': 'time', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'daylight saving time'}}}

 Q: What follows the Mihira Bhoja series?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1279558 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mihira Bhoja', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mihira Bhoja', 'p': 'series', 'o': '$y0'}}]

 Q: what is the {for work} for {Jackie Chan} has {award received} as {Golden Horse Award for Best Leading Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q36970 p:P166 ?s . ?s ps:P166 wd:Q17500591 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jackie Chan', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Golden Horse Award for Best Leading Actor'}}}

 Q: Give me {mineral acid} that {conjugate base} {hydrogen sulfate ion} and which contains the word {acid} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408683 . ?sbj wdt:P4149 wd:Q3143743 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'acid')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral acid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'conjugate base', 'o': 'hydrogen sulfate ion'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'acid'}}

 Q: What is Liam Neeson's Box Office Mojo person ID?
 SPARQL: select distinct ?answer where { wd:Q58444 wdt:P2688 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Liam Neeson', 'p': 'Box Office Mojo person ID', 'o': '?x0'}

 Q: what is the {end time} for {Harold Macmillan} has {position held} as {Member of the 38th Parliament of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q128985 p:P39 ?s . ?s ps:P39 wd:Q41582597 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 38th Parliament of the United Kingdom'}}}

 Q: What is the {mascot} for {represents} of {Iron Maiden}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1268 wd:Q42482 . ?sbj wdt:P31 wd:Q18670161 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'represents', 'o': 'Iron Maiden', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mascot'}}

 Q: What is {genetic association} of {health issue} of {Alfred Deakin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q313805 wdt:P1050 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Deakin', 'p': 'health issue', 'o': '$y0'}}

 Q: Where is the location that has a population of 7000 people of the Anti-Comintern Pact?
 SPARQL: SELECT ?answer WHERE { wd:Q152195 wdt:P276 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'7000.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anti-Comintern Pact', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '7000.0'}}

 Q: Is Hrithik Roshan ethnic group of Gujarati people
 SPARQL: ASK WHERE { wd:Q233619 wdt:P172 wd:Q1282294 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hrithik Roshan', 'p': 'ethnic group', 'o': '?x0', '?x0': 'Gujarati people'}]

 Q: Explain me that mutant which contains the word of wraith in their own name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1094617 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wraith')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mutant'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wraith'}}

 Q: What is <State Catalogue of Geographical Names (Russia) ID> of <Khanka Lake> ?
 SPARQL: select distinct ?answer where { wd:Q201843 wdt:P1397 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Khanka Lake', 'p': 'State Catalogue of Geographical Names (Russia) ID', 'o': '?x0'}

 Q: What is the dwarf planet with the lowest argument of periapsis whose instance of is asteroid ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2199 . ?ent wdt:P2248 ?obj . ?ent wdt:P31 wd:Q3863} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'argument of periapsis', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dwarf planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid'}}}

 Q: What is the {fictional human} for {student} of {Luke Skywalker}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P802 wd:Q51746 . ?sbj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student', 'o': 'Luke Skywalker', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional human'}}

 Q: what is the {end time} for {Peter Singer} has {educated at} as {University of Melbourne} ?
 SPARQL: SELECT ?value WHERE { wd:Q211539 p:P69 ?s . ?s ps:P69 wd:Q319078 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Singer', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Melbourne'}}}

 Q: Is the explosive velocity of picric acid equal to 8820?
 SPARQL: ASK WHERE { wd:Q189298 wdt:P2231 ?obj filter(?obj = 8820.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'picric acid', 'p': 'explosive velocity', 'o': '?x0', '?x0': '8820.0'}

 Q: What is the {sovereign state} for {country of citizenship} of {Salman of Saudi Arabia}
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P27 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'citizen of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is {location of burial} of {Perry Como}, that has {westerly point} is {30.865308333333 -87.634630555556} ?
 SPARQL: SELECT ?answer WHERE { wd:Q333405 wdt:P119 ?answer . ?answer wdt:P1335 ?x FILTER(contains(?x,'30.865308333333 -87.634630555556'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Perry Como', 'p': 'location of burial', 'o': '?x0'}

 Q: Which is the musical by the librettist Alan Jay Lerner that starts with the letter p?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2743 . ?sbj wdt:P87 wd:Q961893 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'librettist', 'o': 'Alan Jay Lerner'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is {higher taxon} of {magnoliids}, that has {disputed equivalence} is {Magnoliidae} ?
 SPARQL: SELECT ?answer WHERE { wd:Q846071 wdt:P171 ?answer . ?answer wdt:P460 wd:Q13582382}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'magnoliids', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'disputed equivalence', 'o': 'Magnoliidae'}}

 Q: Is the autoignition temperature of the butan-1-ol less than 276?
 SPARQL: ASK WHERE { wd:Q16391 wdt:P2199 ?obj filter(?obj < 276.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'butan-1-ol', 'p': 'autoignition temperature', 'o': '?x0', '?x0': '276.0'}

 Q: What is the {film series} for {series} of {Star Wars Episode V: The Empire Strikes Back}
 SPARQL:  select distinct ?obj where { wd:Q181795 wdt:P179 ?obj . ?obj wdt:P31 wd:Q24856 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film series'}}

 Q: What is the {constitutional republic} for {country of citizenship} of {Jefferson Davis}
 SPARQL:  select distinct ?obj where { wd:Q162269 wdt:P27 ?obj . ?obj wdt:P31 wd:Q1520223 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jefferson Davis', 'p': 'country of citizenship', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitutional republic'}}

 Q: What is {head of government} of {Seattle} and {work period (start)}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P2031 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (start)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'head of government', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}]

 Q: What is <Baseball-Reference.com major league player ID> of <Lou Gehrig> ?
 SPARQL: select distinct ?answer where { wd:Q357444 wdt:P1825 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lou Gehrig', 'p': 'Baseball-Reference.com major league player ID', 'o': '?x0'}

 Q: Tell me mathematical notation whose name has the word schläfli in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1140046 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'schläfli')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mathematical notation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'schläfli'}}

 Q: Which year the Mozambique has 2.12586e+06 number of out of school children?
 SPARQL: SELECT ?value WHERE { wd:Q1029 p:P2573 ?s . ?s ps:P2573 ?x filter(contains(?x,'2.12586e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Mozambique', 'p': 'number of out of school children', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of out of school children', 'o': '2.12586e+06'}, 't': '?x0'}

 Q: what is the {number of points/goals/set scored} for {Valeriy Lobanovskyi} has {member of sports team} as {FC Chornomorets Odesa} ?
 SPARQL: SELECT ?value WHERE { wd:Q324484 p:P54 ?s . ?s ps:P54 wd:Q44296 . ?s pq:P1351 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valeriy Lobanovskyi', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'FC Chornomorets Odesa'}}}

 Q: What is {wikibase:geoLatitude ?min} of {location of discovered object} of {neodymium} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1388 wdt:P189 ?X . ?X wdt:P1333 ?answer}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'neodymium', 'p': 'location of discovered object', 'o': '$y0'}

 Q: What was St. George's religion and gender?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q48438 wdt:P140 ?ans_1 . wd:Q48438 wdt:P21 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'St. George', 'p': 'religion', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'St. George', 'p': 'gender', 'o': '?x1'}]

 Q: How many filming location were there for Saving Private Ryan?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q165817 wdt:P915 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Saving Private Ryan', 'p': 'filming location', 'o': '?x0'}

 Q: Is the electrical conductivity of the Galinstan equal to 3460000?
 SPARQL: ASK WHERE { wd:Q675176 wdt:P2055 ?obj filter(?obj = 3460000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Galinstan', 'p': 'electrical conductivity', 'o': '?x0', '?x0': '3460000'}

 Q: What are the Harmonized System Codes for pocket watch?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q849813 wdt:P5471 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'pocket watch', 'p': 'Harmonized System Code', 'o': '?x0'}

 Q: What is the name of the language that uses the Vatteluttu alphabet script and is used by the newspaper Dina Thanthi?
 SPARQL: SELECT ?answer WHERE { wd:Q3522186 wdt:P407 ?answer . ?answer wdt:P282 wd:Q1992000}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dina Thanthi', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alphabet', 'o': 'Vatteluttu alphabet'}}

 Q: IS THE SPEED LIMIT OF THE CIRCUM BAIKAL RAILWAY IS GREATER THAN 16.0
 SPARQL: ASK WHERE { wd:Q163706 wdt:P3086 ?obj filter(?obj > 16.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Circum-Baikal Railway', 'p': 'speed limit', 'o': '?x0', '?x0': '16.0'}

 Q: Which award was received by Bob Pettit on 0-0-1956?
 SPARQL: SELECT ?obj WHERE { wd:Q368561 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1956')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bob Pettit', 'p': 'award', 'o': '?x0', 't': '1956'}

 Q: How many {place served by transport hub} are to/by {Rome} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P931 wd:Q220 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'place served by transport hub', 'o': 'Rome'}

 Q: what is the {main subject} for {Christopher Hitchens} has {notable work} as {No One Left to Lie To: The Triangulations of William Jefferson Clinton} ?
 SPARQL: SELECT ?value WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 wd:Q7044696 . ?s pq:P921 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'No One Left to Lie To'}}}

 Q: Tell me archaeological period whose name has the word stage in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15401633 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stage')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological period'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'stage'}}

 Q: What is {death location} of {Joseph Pinetti}, that has {member of} is {Central Asian Cooperation Organization} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3108128 wdt:P20 ?answer . ?answer wdt:P463 wd:Q2297670}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph Pinetti', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Central Asian Cooperation Organization'}}

 Q: What are the branch of psychology which start with the letter psychophysiology
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q60680430 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'psychophysiology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of psychology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'psychophysiology'}}

 Q: How many Mimas located on astronomical body?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P376 wd:Q15034 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'located on astronomical body', 'o': 'Mimas'}

 Q: What is <Wolfram Language entity code> of <Bachelor of Arts> ?
 SPARQL: select distinct ?answer where { wd:Q1765120 wdt:P4839 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bachelor of Arts', 'p': 'Wolfram Language entity code', 'o': '?x0'}

 Q: What is the {dominion of the British Empire} with the {MAX(retirement age)} whose {described by source} is {Jewish Encyclopedia of Brockhaus and Efron}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q223832 . ?ent wdt:P3001 ?obj . ?ent wdt:P1343 wd:Q4173137 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'retirement age', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dominion of the British Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'Jewish Encyclopedia of Brockhaus and Efron'}}}

 Q: Which is the Les Archives du Spectacle Person ID of Harold Lloyd?
 SPARQL: select distinct ?answer where { wd:Q104340 wdt:P1977 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Harold Lloyd', 'p': 'Les Archives du Spectacle Person ID', 'o': '?x0'}

 Q: What is the {position} for {office held by head of state} of {Kingdom of Mercia}
 SPARQL:  select distinct ?obj where { wd:Q105092 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kingdom of Mercia', 'p': 'office held by head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is a cinematic technique that starts with the letter t.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1001378 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cinematic technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: How many {manifestation of} are to/by {UTF-8} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1557 wd:Q193537 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'UTF-8'}

 Q: What was the population of Egypt in 1975?
 SPARQL: SELECT ?obj WHERE { wd:Q79 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Egypt', 'p': 'population', 'o': '?x0', 't': '1975'}

 Q: What is <Canadian Encyclopedia article ID> of <iceberg> ?
 SPARQL: select distinct ?answer where { wd:Q47568 wdt:P5395 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'iceberg', 'p': 'Canadian Encyclopedia article ID', 'o': '?x0'}

 Q: Where is the place of burial and the birthplace of James Arness?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q470190 wdt:P119 ?ans_1 . wd:Q470190 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'James Arness', 'p': 'place of burial', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'James Arness', 'p': 'birthplace', 'o': '?x1'}]

 Q: Which is the coordinate location for Saskatchewan?
 SPARQL: select distinct ?answer where { wd:Q1989 wdt:P625 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Saskatchewan', 'p': 'coordinate location', 'o': '?x0'}

 Q: What academic degree did Gottfried Wilhelm Leibniz obtain on September 28, 1665?
 SPARQL: SELECT ?obj WHERE { wd:Q9047 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1665')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gottfried Wilhelm Leibniz', 'p': 'academic degree', 'o': '?x0', 't': '1665'}

 Q: Which is {end time} and {start time} of {{Belfast} has {country} as {United Kingdom of Great Britain and Ireland}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q10686 p:P17 ?s . ?s ps:P17 wd:Q174193 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'United Kingdom of Great Britain and Ireland'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'United Kingdom of Great Britain and Ireland'}}}]

 Q: What precedes and what follows Star Wars Episode V: The Empire Strikes Back in the Star Wars series?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q181795 p:P179 ?s . ?s ps:P179 wd:Q22092344 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'precedes', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars'}}}]

 Q: Did {Kajol} {award received} {Filmfare Award for Best Film} and {Filmfare Award for Best Performance in a Negative Role} ?
 SPARQL: ASK WHERE { wd:Q147395 wdt:P166 wd:Q1414525 . wd:Q147395 wdt:P166 wd:Q389636 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kajol', 'p': 'award received', 'o': '?x0', '?x0': 'Filmfare Award for Best Film'}, {'h': 'IS', 'v': '?x1', 's': 'Kajol', 'p': 'award received', 'o': '?x1', '?x1': 'Filmfare Award for Best Performance in a Negative Role'}]

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: What is {total fertility rate} of {main topic} of {history of Chile} ?
 SPARQL: SELECT ?answer WHERE { wd:Q472967 wdt:P1269 ?X . ?X wdt:P4841 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'total fertility rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Chile', 'p': 'main topic', 'o': '$y0'}}

 Q: What is {nominated for} of {Ruth Gordon} that is {statement is subject of} is {20th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q232562 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q303473 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ruth Gordon', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '20th Academy Awards'}}}

 Q: Who was the spouse of Roger Vadim on 1990-12-21?
 SPARQL: SELECT ?obj WHERE { wd:Q383420 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Roger Vadim', 'p': 'spouse', 'o': '?x0', 't': '1990'}

 Q: What does Jules Rimet play whose executive authority is FIFA?
 SPARQL: SELECT ?answer WHERE { wd:Q199642 wdt:P641 ?answer . ?answer wdt:P797 wd:Q253414}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jules Rimet', 'p': 'play', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'authority', 'o': 'FIFA'}}

 Q: What is {from time} of {prequel of} of {baroque music} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8361 wdt:P156 ?X . ?X wdt:P580 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'baroque music', 'p': 'prequel of', 'o': '$y0'}}

 Q: What is the seat of team member Shohei Yamamoto?
 SPARQL: SELECT ?answer WHERE { wd:Q3299867 wdt:P54 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shohei Yamamoto', 'p': 'team', 'o': '$y0'}}

 Q: Is the event distance of the 20 kilometres race walk greater than 16.0?
 SPARQL: ASK WHERE { wd:Q210673 wdt:P3157 ?obj filter(?obj > 16.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '20 kilometres race walk', 'p': 'event distance', 'o': '?x0', '?x0': '16.0'}

 Q: What currency was used and where was the capital of the Roman Republic?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q17167 wdt:P38 ?ans_1 . wd:Q17167 wdt:P36 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Roman Republic', 'p': 'currency', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Roman Republic', 'p': 'capital', 'o': '?x1'}]

 Q: When was Johan Huizinga nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q276280 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Johan Huizinga', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: what is the {end time} for {Boeing} has {chief executive officer} as {William McPherson Allen} ?
 SPARQL: SELECT ?value WHERE { wd:Q66 p:P169 ?s . ?s ps:P169 wd:Q1493920 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boeing', 'p': 'CEO', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'CEO', 'o': 'William McPherson Allen'}}}

 Q: Which  colours of team played for  Cédric Moukouri ?
 SPARQL: SELECT ?answer WHERE { wd:Q3009942 wdt:P54 ?X . ?X wdt:P462 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'colour', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cédric Moukouri', 'p': 'team', 'o': '$y0'}}

 Q: Which ketone has the highest minimal lethal dose?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q170744 . ?ent wdt:P2300 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'minimal lethal dose', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ketone'}}

 Q: How many {measures} are to/by {intelligence} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2575 wd:Q83500 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'measures', 'o': 'intelligence'}

 Q: what is the {end time} for {Erwin Rommel} has {military branch} as {Württembergische Sicherheitstruppen} ?
 SPARQL: SELECT ?value WHERE { wd:Q14060 p:P241 ?s . ?s ps:P241 wd:Q2596869 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erwin Rommel', 'p': 'military branch', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'military branch', 'o': 'Württembergische Sicherheitstruppen'}}}

 Q: what is the {image} for {Virat Kohli} has {country for sport} as {India} ?
 SPARQL: SELECT ?value WHERE { wd:Q213854 p:P1532 ?s . ?s ps:P1532 wd:Q668 . ?s pq:P18 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'image', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Virat Kohli', 'p': 'country for sport', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country for sport', 'o': 'India'}}}

 Q: What is the {literary award} for {nominated for} of {Terry Pratchett}
 SPARQL:  select distinct ?obj where { wd:Q46248 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q378427 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Terry Pratchett', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary award'}}

 Q: What is {worked at} of {authors} of {William Morris and Morris & Co.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q54104312 wdt:P50 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'worked at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Morris and Morris & Co.', 'p': 'author', 'o': '$y0'}}

 Q: What is {nominated for} of {Warren Beatty} that is {for work} is {Heaven Can Wait} ?
 SPARQL: SELECT ?obj WHERE { wd:Q95030 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q637180 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Warren Beatty', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Heaven Can Wait'}}}

 Q: Is Mary Ball Washington mother of George Washington?
 SPARQL: ASK WHERE { wd:Q23 wdt:P25 wd:Q458119 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'George Washington', 'p': 'mother', 'o': '?x0', '?x0': 'Mary Ball Washington'}]

 Q: When did Hannes Alfvén cease to be a member of the Royal Swedish Academy of Engineering Sciences?
 SPARQL: SELECT ?value WHERE { wd:Q54945 p:P463 ?s . ?s ps:P463 wd:Q3394637 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hannes Alfvén', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Royal Swedish Academy of Engineering Sciences'}}}

 Q: Are the total points in the career of Mikko Jokela less than 0?
 SPARQL: ASK WHERE { wd:Q119866 wdt:P6544 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Mikko Jokela', 'p': 'total points in career', 'o': '?x0', '?x0': '0.0'}

 Q: What is {region} of {recording studio} of {The Dark Side of the Moon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q150901 wdt:P483 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Dark Side of the Moon', 'p': 'studio', 'o': '$y0'}}

 Q: What head of national government is in the town of Narmada?
 SPARQL: SELECT ?answer WHERE { wd:Q234004 wdt:P131 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'head of national government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Narmada', 'p': 'is in the town of', 'o': '$y0'}}

 Q: Which is the sport discipline with mouse input method that starts with the letter d?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2312410 . ?sbj wdt:P479 wd:Q7987 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport discipline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'input method', 'o': 'mouse'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is {this taxon is the source of} of {cattle}, that has {pronunciation audio} is {Uk-яловичина.ogg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q830 wdt:P1672 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'Uk-яловичина.ogg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cattle', 'p': 'this taxon is the source of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pronunciation audio', 'o': 'uk-яловичина.ogg'}}

 Q: what is the {statement is subject of} for {Tennessee Williams} has {nominated for} as {Academy Award for Best Writing, Adapted Screenplay} ?
 SPARQL: SELECT ?value WHERE { wd:Q134262 p:P1411 ?s . ?s ps:P1411 wd:Q107258 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tennessee Williams', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Writing, Adapted Screenplay'}}}

 Q: what is the {point in time} for {J. R. R. Tolkien} has {nominated for} as {Locus Award for Best Fantasy Novel} ?
 SPARQL: SELECT ?value WHERE { wd:Q892 p:P1411 ?s . ?s ps:P1411 wd:Q607354 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tolkien', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Locus Award for Best Fantasy Novel'}, 't': '?x0'}

 Q: What is the {utility software} for {operating system} of {MS-DOS}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P306 wd:Q47604 . ?sbj wdt:P31 wd:Q312466 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'OS', 'o': 'MS-DOS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'utility software'}}

 Q: What is {ZIP+4} of {active in} of {David Ricardo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q160270 wdt:P937 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ZIP+4', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Ricardo', 'p': 'active in', 'o': '$y0'}}

 Q: How many {numeric values} are there for {pi}?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q167 wdt:P1181 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'pi', 'p': 'numeric value', 'o': '?x0'}

 Q: what is the {start time} for {R.E.M.} has {record label} as {Hib-Tone} ?
 SPARQL: SELECT ?value WHERE { wd:Q134969 p:P264 ?s . ?s ps:P264 wd:Q3512782 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'R.E.M.', 'p': 'record label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record label', 'o': 'Hib-Tone'}}}

 Q: Is Nokia's operating income -1.1 billion?
 SPARQL: ASK WHERE { wd:Q1418 wdt:P3362 ?obj filter(?obj = -1100000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Nokia', 'p': 'operating income', 'o': '?x0', '?x0': '-1100000000'}

 Q: David Ben-Gurion was the signatory of which historical document?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1891 wd:Q37610 . ?sbj wdt:P31 wd:Q3771738 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'signatory', 'o': 'David Ben-Gurion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical document'}}

 Q: what is the {end time} for {William Shatner} has {spouse} as {Nerine Kidd} ?
 SPARQL: SELECT ?value WHERE { wd:Q16297 p:P26 ?s . ?s ps:P26 wd:Q1529685 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Shatner', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Nerine Kidd'}}}

 Q: Which is the Enciclopedia de la Literatura en México ID for Giorgos Seferis?
 SPARQL: select distinct ?answer where { wd:Q165823 wdt:P1565 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Giorgos Seferis', 'p': 'Enciclopedia de la Literatura en México ID', 'o': '?x0'}

 Q: How much language is in Dutch?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1412 wd:Q7411 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'language', 'o': 'Dutch'}

 Q: What is {educated at} of {Maximilien Robespierre} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q44197 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maximilien Robespierre', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maximilien Robespierre', 'p': 'educated at', 'o': '$y0'}}]

 Q: Which is the economic branch that has motor vehicle as a product and contains the word automotive in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q268592 . ?sbj wdt:P1056 wd:Q752870 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'automotive')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'product', 'o': 'motor vehicle'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'automotive'}}

 Q: what is the {for work} for {Leonard Bernstein} has {nominated for} as {Academy Award for Best Original Dramatic or Comedy Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q152505 p:P1411 ?s . ?s ps:P1411 wd:Q22752868 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leonard Bernstein', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Dramatic or Comedy Score'}}}

 Q: What is {role model} of {musical artist} of {Needles} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6039366 wdt:P175 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role model', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Needles', 'p': 'artist', 'o': '$y0'}}

 Q: What is SureChEMBL ID for DL-fructose?
 SPARQL: select distinct ?answer where { wd:Q122043 wdt:P2877 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fructose', 'p': 'SureChEMBL ID', 'o': '?x0'}

 Q: What is  in the panorama view of Jerusalem ?
 SPARQL: select distinct ?answer where { wd:Q1218 wdt:P4291 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jerusalem', 'p': 'panorama view', 'o': '?x0'}

 Q: When did Bochum have a population of 341,935?
 SPARQL: SELECT ?value WHERE { wd:Q2103 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'341935.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bochum', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '341935.0'}, 't': '?x0'}

 Q: What is the noble title of Louis II of Italy and who is he followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q215204 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0'}}]

 Q: Which is the crown colony of the British Empire that follows Hong Kong?
 SPARQL:  select distinct ?obj where { wd:Q8646 wdt:P155 ?obj . ?obj wdt:P31 wd:Q1351282 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hong Kong', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'crown colony'}}

 Q: When did scholarly article for published in of Rolling Stone?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1433 wd:Q33511 . ?sbj wdt:P31 wd:Q13442814 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Rolling Stone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scholarly article'}}

 Q: Who created the fictional universe of Doctor Doom?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q430178 wdt:P170 ?ans_1 . wd:Q430178 wdt:P1080 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Doctor Doom', 'p': 'created', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Doctor Doom', 'p': 'universe', 'o': '?x1'}]

 Q: What is the {classification in sports} for {competition class} of {high jump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2094 wd:Q165704 . ?sbj wdt:P31 wd:Q1744559 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'competition class', 'o': 'high jump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'classification in sports'}}

 Q: What was the population of Piraeus in 2001?
 SPARQL: SELECT ?obj WHERE { wd:Q58976 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Piraeus', 'p': 'population', 'o': '?x0', 't': '2001'}

 Q: Which is the television character owner of which is Toby and that starts with the letter h?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15773317 . ?sbj wdt:P1830 wd:Q20822927 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television character', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'owner of', 'o': 'Toby'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: Which is the IMA Number, broad sense of diopside?
 SPARQL: select distinct ?answer where { wd:Q316671 wdt:P484 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diopside', 'p': 'IMA Number, broad sense', 'o': '?x0'}

 Q: What is <solves> of <Schrödinger equation> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2159 wd:Q165498}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'solves', 'o': 'Schrödinger equation'}

 Q: Who is the developer of C?
 SPARQL: select distinct ?answer where { wd:Q15777 wdt:P178 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'C', 'p': 'developer', 'o': '?x0'}

 Q: What is {resting place} of {Melvin Purvis}, that has {executive branch} is {Government of South Carolina} ?
 SPARQL: SELECT ?answer WHERE { wd:Q765838 wdt:P119 ?answer . ?answer wdt:P208 wd:Q53709977}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Melvin Purvis', 'p': 'resting place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive branch', 'o': 'Government of South Carolina'}}

 Q: What are theOlympic sport which start with the letter weightlifting
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q212434 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weightlifting')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Olympic sport'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'weightlifting'}}

 Q: What domain is doctoral supervisor of Yurii Vladimirovich Egorov?
 SPARQL: SELECT ?answer WHERE { wd:Q23655951 wdt:P184 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'domain', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yurii Vladimirovich Egorov', 'p': 'doctoral supervisor', 'o': '$y0'}}

 Q: What is the Carnegie Classification of Institutions of Higher Education of the the school attended by Renee Zellweger?
 SPARQL: SELECT ?answer WHERE { wd:Q122614 wdt:P69 ?X . ?X wdt:P2643 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Carnegie Classification of Institutions of Higher Education', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Renee Zellweger', 'p': 'school attended', 'o': '$y0'}}

 Q: what is the {statement is subject of} for {Breakfast at Tiffany's} has {nominated for} as {Academy Award for Best Original Dramatic or Comedy Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q193066 p:P1411 ?s . ?s ps:P1411 wd:Q22752868 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Breakfast at Tiffany's", 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Dramatic or Comedy Score'}}}

 Q: What is {birth city} of {Jacques Anquetil}, that has {twin city} is {Osica de Sus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q221001 wdt:P19 ?answer . ?answer wdt:P190 wd:Q2719507}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacques Anquetil', 'p': 'birth city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Osica de Sus'}}

 Q: How many mobile country codes are in the USA?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q30 wdt:P2258 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'USA', 'p': 'mobile country code', 'o': '?x0'}

 Q: Is the compressive modulus of elasticity of copper greater than 120.0?
 SPARQL: ASK WHERE { wd:Q753 wdt:P5993 ?obj filter(?obj > 120.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'copper', 'p': 'compressive modulus of elasticity', 'o': '?x0', '?x0': '120.0'}

 Q: What is the population of Tacloban in 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q40626 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tacloban', 'p': 'population', 'o': '?x0', 't': '1980'}

 Q: What is {educated at} of {Rajneesh} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q148285 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rajneesh', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rajneesh', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {public office} for {office held by head of government} of {Khyber Pakhtunkhwa}
 SPARQL:  select distinct ?obj where { wd:Q183314 wdt:P1313 ?obj . ?obj wdt:P31 wd:Q294414 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Khyber Pakhtunkhwa', 'p': 'office held by head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public office'}}

 Q: Tell me holiday whose name has the word дан  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1445650 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'дан')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'holiday'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'дан'}}

 Q: What is {member of sports team} of {Hristo Stoichkov} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q187125 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hristo Stoichkov', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hristo Stoichkov', 'p': 'team', 'o': '$y0'}}]

 Q: is the maximum frequency of audible sound of house cat equal to 64000?
 SPARQL: ASK WHERE { wd:Q146 wdt:P3465 ?obj filter(?obj = 64000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'house cat', 'p': 'maximum frequency of audible sound', 'o': '?x0', '?x0': '64000'}

 Q: What is {operating income} of {ExxonMobil} that is {point in time} is {2014-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q156238 p:P3362 ?s . ?s ps:P3362 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'ExxonMobil', 'p': 'operating income', 'o': '?x0', 't': '2014'}

 Q: What event in the Paralympic Games whose event producer chairman is Robert Steadward?
 SPARQL: SELECT ?answer WHERE { wd:Q73633 wdt:P664 ?answer . ?answer wdt:P488 wd:Q7350015}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paralympic Games', 'p': 'event producer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chair', 'o': 'Robert Steadward'}}

 Q: Did {Lauryn_Hill} {genre} {disco} and {neo soul} ?
 SPARQL: ASK WHERE { wd:Q214226 wdt:P136 wd:Q58339 . wd:Q214226 wdt:P136 wd:Q268253 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lauryn Hill', 'p': 'genre', 'o': '?x0', '?x0': 'disco'}, {'h': 'IS', 'v': '?x1', 's': 'Lauryn Hill', 'p': 'genre', 'o': '?x1', '?x1': 'neo soul'}]

 Q: What is the lib.reviews ID for the Nintendo Switch?
 SPARQL: select distinct ?answer where { wd:Q19610114 wdt:P3308 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nintendo Switch', 'p': 'lib.reviews ID', 'o': '?x0'}

 Q: What is coat of arms image of Liechtenstein ?
 SPARQL: select distinct ?answer where { wd:Q347 wdt:P94 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Liechtenstein', 'p': 'coat of arms image', 'o': '?x0'}

 Q: Whose {wife} {has sons} of {Cecil Coward} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18529681 wdt:P40 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'wife', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cecil Coward', 'p': 'son', 'o': '$y0'}}

 Q: When did Carrie Fisher get married to Paul Simon?
 SPARQL: ASK WHERE { wd:Q108941 wdt:P26 wd:Q4028 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Carrie Fisher', 'p': 'married to', 'o': '?x0', '?x0': 'Paul Simon'}]

 Q: Did Mikko Lehtonen complete more than 2 total shots in their career?
 SPARQL: ASK WHERE { wd:Q59951 wdt:P6543 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Mikko Lehtonen', 'p': 'total shots in career', 'o': '?x0', '?x0': '2'}

 Q: What is {winner} and {followed by} of {{Animal Farm} has {award received} as {Prometheus Award - Hall of Fame}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q1396889 p:P166 ?s . ?s ps:P166 wd:Q19360203 . ?s pq:P1346 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Animal Farm', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Prometheus Award - Hall of Fame'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Animal Farm', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Prometheus Award - Hall of Fame'}}}]

 Q: On what continent is Constantinople with the banner name "Ladakh banner.jpg"?
 SPARQL: SELECT ?answer WHERE { wd:Q16869 wdt:P30 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Ladakh banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Constantinople', 'p': 'continent', 'o': '?x0'}

 Q: what is the {start time} for {Mexico City} has {twinned administrative body} as {Dolores Hidalgo Municipality} ?
 SPARQL: SELECT ?value WHERE { wd:Q1489 p:P190 ?s . ?s ps:P190 wd:Q958153 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mexico City', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Dolores Hidalgo Municipality'}}}

 Q: How many genetic associations are with the {colorectal cancer} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2293 wd:Q188874 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'colorectal cancer'}

 Q: Which is a lifestyle of mysticism?
 SPARQL: select distinct ?answer where { ?answer wdt:P1576 wd:Q45996}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lifestyle', 'o': 'mysticism'}

 Q: Which does not have part in air force?
 SPARQL: select distinct ?answer where { ?answer wdt:P3113 wd:Q61883}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'does not have part', 'o': 'air force'}

 Q: What is Wang Yangming's Stanford Encyclopedia of Philosophy ID?
 SPARQL: select distinct ?answer where { wd:Q378462 wdt:P3123 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wang Yangming', 'p': 'Stanford Encyclopedia of Philosophy ID', 'o': '?x0'}

 Q: "Which is {birth location} of {Zsa Zsa Gabor}, that has {city limit sign} is {Budapest limit - panoramio.jpg} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q207405 wdt:P19 ?answer . ?answer wdt:P1766 ?x FILTER(contains(?x,'Budapest limit - panoramio.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zsa Zsa Gabor', 'p': 'birth location', 'o': '?x0'}

 Q: what is the {point in time} for {Linus Torvalds} has {award received} as {doctor honoris causa} ?
 SPARQL: SELECT ?value WHERE { wd:Q34253 p:P166 ?s . ?s ps:P166 wd:Q11415564 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Linus Torvalds', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'honorary doctor'}, 't': '?x0'}

 Q: Tell me sex whose name has the word organism in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q290 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'organism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sex'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'organism'}}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: Which termini is connected with Tokyo Metropolitan Road Route 418?
 SPARQL: SELECT ?answer WHERE { wd:Q11103016 wdt:P2789 ?X . ?X wdt:P559 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'termini', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tokyo Metropolitan Road Route 418', 'p': 'connected with', 'o': '$y0'}}

 Q: What is <National Academy of Sciences member ID> of <Noam Chomsky> ?
 SPARQL: select distinct ?answer where { wd:Q9049 wdt:P5380 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Noam Chomsky', 'p': 'National Academy of Sciences member ID', 'o': '?x0'}

 Q: Give me {survival skill} that contains the word {swimming} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q891382 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'swimming')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'survival skill'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'swimming'}}

 Q: Which is the J.League manager ID for Zico?
 SPARQL: select distinct ?answer where { wd:Q47526 wdt:P4048 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zico', 'p': 'J.League manager ID', 'o': '?x0'}

 Q: Which is the Guardiana ID for Dune II?
 SPARQL: select distinct ?answer where { wd:Q596631 wdt:P4710 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dune II', 'p': 'Guardiana ID', 'o': '?x0'}

 Q: Is 509.6 the wingspan of the DH-4?
 SPARQL: ASK WHERE { wd:Q56881060 wdt:P2050 ?obj filter(?obj = 509.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'DH-4', 'p': 'wingspan', 'o': '?x0', '?x0': '509.5'}

 Q: Tell me commandment whose name has the word tithe in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1497090 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tithe')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commandment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tithe'}}

 Q: What is {cases} of {language native} of {John Adams} ?
 SPARQL: SELECT ?answer WHERE { wd:Q84114 wdt:P103 ?X . ?X wdt:P2989 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cases', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Adams', 'p': 'native language', 'o': '$y0'}}

 Q: what is located in the administrative territorial entity for Huawei has headquarters location as Shenzhen ?
 SPARQL: SELECT ?value WHERE { wd:Q160120 p:P159 ?s . ?s ps:P159 wd:Q15174 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Huawei', 'p': 'headquarters location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'headquarters location', 'o': 'Shenzhen'}}}

 Q: What is a mathematical model that starts with the letter t.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q486902 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mathematical model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Who is Imran Khan's significant other, whose gender is female?
 SPARQL: SELECT ?answer WHERE { wd:Q155164 wdt:P451 ?answer . ?answer wdt:P21 wd:Q6581072}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Imran Khan', 'p': 'significant other', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gender', 'o': 'female'}}

 Q: What is the {alkanol} for {material used} of {vinegar}
 SPARQL:  select distinct ?obj where { wd:Q41354 wdt:P186 ?obj . ?obj wdt:P31 wd:Q11685431 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'vinegar', 'p': 'material used', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alkanol'}}

 Q: What is the {road bridge} for {location} of {Manhattan}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q11299 . ?sbj wdt:P31 wd:Q537127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Manhattan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road bridge'}}

 Q: What is <position played on team / speciality> of <long-distance running> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P413 wd:Q917206}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'position played on team / speciality', 'o': 'long-distance running'}

 Q: Which is the aircraft family that it is operated by Qantas?
 SPARQL:  select distinct ?obj where { wd:Q32491 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Qantas', 'p': 'operated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: What is the etymology of Lenz's law, that has crafted the university teacher?
 SPARQL: SELECT ?answer WHERE { wd:Q192288 wdt:P138 ?answer . ?answer wdt:P106 wd:Q1622272}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Lenz's law", 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'university teacher'}}

 Q: Which are the characters of the edition of La Divine Comédie?
 SPARQL: SELECT ?answer WHERE { wd:Q21191003 wdt:P629 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'La Divine Comédie', 'p': 'edition of', 'o': '$y0'}}

 Q: Which is the transcontinental country for the location of the French invasion of Russia?
 SPARQL:  select distinct ?obj where { wd:Q179250 wdt:P276 ?obj . ?obj wdt:P31 wd:Q1323642 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'French invasion of Russia', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'transcontinental country'}}

 Q: When did award received of Adolf von Baeyer and prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q57078 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adolf von Baeyer', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adolf von Baeyer', 'p': 'award received', 'o': '$y0'}}]

 Q: Who is the ancestor of the record producer from The Thrill Chaser?
 SPARQL: SELECT ?answer WHERE { wd:Q7769131 wdt:P162 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ancestor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Thrill Chaser', 'p': 'producer', 'o': '$y0'}}

 Q: What are the nonprofit organization which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q163740 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonprofit organization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what award received by Andrew Wiles on 20-16-0-0 ?
 SPARQL: SELECT ?obj WHERE { wd:Q184433 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrew Wiles', 'p': 'award received', 'o': '?x0', 't': '2016'}

 Q: Which are the plays of the record producer of Your Man?
 SPARQL: SELECT ?answer WHERE { wd:Q8058873 wdt:P162 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'plays', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Your Man', 'p': 'producer', 'o': '$y0'}}

 Q: Which is the Nobel Prize People Nomination ID of Robert Lowell?
 SPARQL: select distinct ?answer where { wd:Q981448 wdt:P3360 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Lowell', 'p': 'Nobel Prize People Nomination ID', 'o': '?x0'}

 Q: Who is the subsidiary company make the maker My Little Pony?
 SPARQL: SELECT ?answer WHERE { wd:Q1071312 wdt:P176 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'My Little Pony', 'p': 'maker', 'o': '$y0'}}

 Q: What is {has states} of {Maranhão}, that has {co-ordinate location} is {-44.9333} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42362 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-44.9333'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maranhao', 'p': 'has states', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-ordinate location', 'o': '-44.9333'}}

 Q: What is the {country} for {country of origin} of {The Star-Spangled Banner}
 SPARQL:  select distinct ?obj where { wd:Q44696 wdt:P495 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Star-Spangled Banner', 'p': 'country of origin', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {connector} of {Nintendo Switch} that is {title} is {Dock} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19610114 p:P2935 ?s . ?s ps:P2935 ?obj . ?s pq:P1476 ?x filter(contains(?x,'Dock')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'connector', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nintendo Switch', 'p': 'connector', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'title', 'o': 'dock'}}}

 Q: Was Kublai Khan married to Chabi and Zhenge Khatan?
 SPARQL: ASK WHERE { wd:Q7523 wdt:P26 wd:Q846131 . wd:Q7523 wdt:P26 wd:Q7079042 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kublai Khan', 'p': 'married to', 'o': '?x0', '?x0': 'Chabi'}, {'h': 'IS', 'v': '?x1', 's': 'Kublai Khan', 'p': 'married to', 'o': '?x1', '?x1': 'Zhenge Khatan'}]

 Q: What is the Kaiserhof ID for Aloysius Gonzaga?
 SPARQL: select distinct ?answer where { wd:Q310307 wdt:P1818 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aloysius Gonzaga', 'p': 'Kaiserhof ID', 'o': '?x0'}

 Q: what is the {valid in period} for {Leipzig} has {located in time zone} as {UTC+02:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q2079 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leipzig', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+02:00'}}}

 Q: Who is the service operator of the item Avianca?
 SPARQL: SELECT ?answer WHERE { wd:Q308911 wdt:P121 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Avianca', 'p': 'operator of', 'o': '$y0'}}

 Q: Give me a mobile operating system, that starts with an alphabet 'w'.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q920890 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mobile operating system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is <Pinakothek artist ID> of <Lucas Cranach the Elder> ?
 SPARQL: select distinct ?answer where { wd:Q191748 wdt:P4025 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lucas Cranach the Elder', 'p': 'Pinakothek artist ID', 'o': '?x0'}

 Q: Which city is the twinned administrative body of Cardiff?
 SPARQL:  select distinct ?obj where { wd:Q10690 wdt:P190 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cardiff', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: Which is the price for Coca-Cola?
 SPARQL: select distinct ?answer where { wd:Q2813 wdt:P2284 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coca-Cola', 'p': 'price', 'o': '?x0'}

 Q: Who is the spouse of Zhou Xun starting in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q198030 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zhou Xun', 'p': 'spouse', 'o': '?x0', 't': '2014'}

 Q: What is {has boroughs} of {sovereign state} of {Panic of 1907} ?
 SPARQL: SELECT ?answer WHERE { wd:Q844449 wdt:P17 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has boroughs', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Panic of 1907', 'p': 'sovereign state', 'o': '$y0'}}

 Q: What is the {human} for {family} of {Koch family}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P53 wd:Q2896603 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'family', 'o': 'Koch family', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many electrical plug types are for Laos?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q819 wdt:P2853 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Laos', 'p': 'electrical plug type', 'o': '?x0'}

 Q: What is {end time} and {start time} of {{Belgrade} has {country} as {Principality of Serbia}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3711 p:P17 ?s . ?s ps:P17 wd:Q684030 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belgrade', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Principality of Serbia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belgrade', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Principality of Serbia'}}}]

 Q: What method was used to determine that Perm has a population of 850324?
 SPARQL: SELECT ?value WHERE { wd:Q915 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'850324.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Perm', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '850324.0'}}}

 Q: Tell me natural language whose name has the word thai in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33742 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thai')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural language'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'thai'}}

 Q: Which is the business that Roger Waters is owner of?
 SPARQL:  select distinct ?obj where { wd:Q180861 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roger Waters', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is {buried at} of {Cinematography} of {Bright Eyes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2389107 wdt:P344 ?X . ?X wdt:P119 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'buried at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bright Eyes', 'p': 'Cinematography', 'o': '$y0'}}

 Q: What is the {airline} for {business division} of {Air India}
 SPARQL:  select distinct ?obj where { wd:Q69906 wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Air India', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}}

 Q: When did Reinhold Messner stop being Sabine Stehle`s partner?
 SPARQL: SELECT ?value WHERE { wd:Q189307 p:P451 ?s . ?s ps:P451 wd:Q28053617 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reinhold Messner', 'p': 'partner', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'partner', 'o': 'Sabine Stehle'}}}

 Q: What is the birth location of Barbara Liskov, the partner town is Tehran?
 SPARQL: SELECT ?answer WHERE { wd:Q16080922 wdt:P19 ?answer . ?answer wdt:P190 wd:Q3616}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barbara Liskov', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Tehran'}}

 Q: What is Marcel Duchamp's French Sculpture Census artist ID?
 SPARQL: select distinct ?answer where { wd:Q5912 wdt:P2380 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marcel Duchamp', 'p': 'French Sculpture Census artist ID', 'o': '?x0'}

 Q: wich means {founding date}in the {editions} at{Microsoft Windows} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1406 wdt:P747 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founding date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Microsoft Windows', 'p': 'editions', 'o': '$y0'}}

 Q: What was Louis the Pious' noble title and who follows?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q43974 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0'}}]

 Q: What is {date of birth} of {Ali ibn al-Husayn Zayn al-'Abidin} that is {earliest date} is {658-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q314978 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1319 ?x filter(contains(?x,'658-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali ibn al-Husayn', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'earliest date', 'o': '658-0-0'}}}

 Q: Is 40.5 Australia's central government debt as a percent of GDP?
 SPARQL: ASK WHERE { wd:Q408 wdt:P1689 ?obj filter(?obj = 40.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Australia', 'p': 'central government debt as a percent of GDP', 'o': '?x0', '?x0': '40.5'}

 Q: What is the start time for Liverpool, who also has Cologne as its twinned administrative body?
 SPARQL: SELECT ?value WHERE { wd:Q24826 p:P190 ?s . ?s ps:P190 wd:Q365 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Liverpool', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Cologne'}}}

 Q: What is {toponym} of {pan flute}, that has {is child of} is {Dryope} ?
 SPARQL: SELECT ?answer WHERE { wd:Q218802 wdt:P138 ?answer . ?answer wdt:P25 wd:Q29788463}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pan flute', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is child of', 'o': 'Dryope'}}

 Q: Which is the position in the time period of Reconquista?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2348 wd:Q79791 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Reconquista', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is {capital of} of {Ashgabat} that is {end time} is {1924-10-27} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23438 p:P1376 ?s . ?s ps:P1376 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1924')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ashgabat', 'p': 'capital of', 'o': '?x0', 't': '1924'}

 Q: Does the time in space of Charles Bolder equal 40837?
 SPARQL: ASK WHERE { wd:Q25011 wdt:P2873 ?obj filter(?obj = 40837) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Charles Bolden', 'p': 'time in space', 'o': '?x0', '?x0': '40837'}

 Q: Which is the AlloCiné film ID for Bicycle Thieves?
 SPARQL: select distinct ?answer where { wd:Q172837 wdt:P1265 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bicycle Thieves', 'p': 'AlloCiné film ID', 'o': '?x0'}

 Q: What is {is son of} of {has child} of {María Lorenza Barreneche} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6004142 wdt:P40 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'María Lorenza Barreneche', 'p': 'son', 'o': '$y0'}}

 Q: What is the Badminton World Federation ID that belongs to Gao Ling?
 SPARQL: select distinct ?answer where { wd:Q236336 wdt:P2729 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gao Ling', 'p': 'Badminton World Federation ID', 'o': '?x0'}

 Q: Is the floors above ground of the Italian Hall equal to 2
 SPARQL: ASK WHERE { wd:Q424748 wdt:P1101 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Italian Hall', 'p': 'floors above ground', 'o': '?x0', '?x0': '2'}

 Q: Which is the mtDNA haplogroup for Alexandra Fyodorovna?
 SPARQL: select distinct ?answer where { wd:Q152094 wdt:P4425 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexandra Fyodorovna', 'p': 'mtDNA haplogroup', 'o': '?x0'}

 Q: What is {date of birth} of {Alcibiades} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q187982 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alcibiades', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What is {nominated for} of {Victor Goldschmidt} that is {point in time} is {1932-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q213668 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1932')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Victor Goldschmidt', 'p': 'nominated for', 'o': '?x0', 't': '1932'}

 Q: What is the {academy of sciences} for {manager/director} of {Gottfried Wilhelm Leibniz}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1037 wd:Q9047 . ?sbj wdt:P31 wd:Q414147 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Gottfried Wilhelm Leibniz', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academy of sciences'}}

 Q: Which is the death place in Hattie Jacques having a sister city of Buenos Aires?
 SPARQL: SELECT ?answer WHERE { wd:Q449020 wdt:P20 ?answer . ?answer wdt:P190 wd:Q1486}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hattie Jacques', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Buenos Aires'}}

 Q: Which is the professorship of theology?
 SPARQL: select distinct ?answer where { ?answer wdt:P803 wd:Q34178}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'professorship', 'o': 'theology'}

 Q: What is Loop ID for Simon Baron-Cohen?
 SPARQL: select distinct ?answer where { wd:Q918343 wdt:P2798 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Simon Baron-Cohen', 'p': 'Loop ID', 'o': '?x0'}

 Q: What is {is daughter of} of {has brother} of {George Jay Gould I} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3101668 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is daughter of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Gould', 'p': 'bro', 'o': '$y0'}}

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: Give me {mythical human-animal hybrid} that {worshipped by} {Greek mythology} and which contains the word {minotaur} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20902363 . ?sbj wdt:P1049 wd:Q34726 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'minotaur')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythical human-animal hybrid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': 'Greek mythology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'minotaur'}}

 Q: Did {Macau} {public holiday} {public holidays in the United States} and {Double Ninth Festival} ?
 SPARQL: ASK WHERE { wd:Q14773 wdt:P832 wd:Q1934708 . wd:Q14773 wdt:P832 wd:Q463754 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Macau', 'p': 'public holiday', 'o': '?x0', '?x0': 'public holidays in the United States'}, {'h': 'IS', 'v': '?x1', 's': 'Macau', 'p': 'public holiday', 'o': '?x1', '?x1': 'Double Ninth Festival'}]

 Q: What is the name of an embankment dam that starts with the letter h.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1244922 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'embankment dam'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: What is {educated at} of {Alice Walker} that is {academic degree} is {Bachelor of Arts} ?
 SPARQL: SELECT ?obj WHERE { wd:Q215868 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q1765120 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alice Walker', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Bachelor of Arts'}}}

 Q: What is {antonym} of {hypotension}, that has {treated by} is {esmolol} ?
 SPARQL: SELECT ?answer WHERE { wd:Q275419 wdt:P461 ?answer . ?answer wdt:P2176 wd:Q418139}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'hypotension', 'p': 'antonym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'treated by', 'o': 'esmolol'}}

 Q: Who are Ric Flair's son and Ric Flair's mother?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q44546 wdt:P40 ?ans_1 . wd:Q44546 wdt:P25 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ric Flair', 'p': 'son', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ric Flair', 'p': 'mother', 'o': '?x1'}]

 Q: What is local dialing code of Ho Chi Minh City that has end time is 2017-7-16 ?
 SPARQL: SELECT ?obj WHERE { wd:Q1854 p:P473 ?s . ?s ps:P473 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ho Chi Minh City', 'p': 'local dialing code', 'o': '?x0', 't': '2017'}

 Q: What is {member of} of {land} of {Lashkar Gah} ?
 SPARQL: SELECT ?answer WHERE { wd:Q476800 wdt:P17 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lashkar Gah', 'p': 'land', 'o': '$y0'}}

 Q: What chemical compounds cause air pollution?
 SPARQL:  select distinct ?obj where { wd:Q131123 wdt:P828 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'air pollution', 'p': 'cause', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Tell me first-class city whose name has the word milwaukee in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15221304 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'milwaukee')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'first-class city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'milwaukee'}}

 Q: When was George S. Patton awarded the Distinguished Service Cross and the Order of the Crown?
 SPARQL: ASK WHERE { wd:Q186492 wdt:P166 wd:Q833376 . wd:Q186492 wdt:P166 wd:Q1068636 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'George S. Patton', 'p': 'award', 'o': '?x0', '?x0': 'Distinguished Service Cross'}, {'h': 'IS', 'v': '?x1', 's': 'George S. Patton', 'p': 'award', 'o': '?x1', '?x1': 'Order of the Crown'}]

 Q: Name an instruction set architecture that contain the word " x87" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q272683 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'x87')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'instruction set architecture'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'x87'}}

 Q: Who wrote the notable work Doctor Who?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P800 wd:Q34316 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'notable work', 'o': 'Doctor Who'}

 Q: What is the Brazilian Olympic Committee athlete ID of Ronaldinho?
 SPARQL: select distinct ?answer where { wd:Q39444 wdt:P4060 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ronaldinho', 'p': 'Brazilian Olympic Committee athlete ID', 'o': '?x0'}

 Q: What's the stock exchange for Toshiba?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q49125 wdt:P414 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Toshiba', 'p': 'stock exchange', 'o': '?x0'}

 Q: Who is the {specialized agency of the United Nations} for {subsidiary} of {World Bank}
 SPARQL:  select distinct ?obj where { wd:Q7164 wdt:P355 ?obj . ?obj wdt:P31 wd:Q15925165 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'World Bank', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialized agency of the United Nations'}}

 Q: Which is the vegetable for this taxon is source of eggplant?
 SPARQL:  select distinct ?obj where { wd:Q7540 wdt:P1672 ?obj . ?obj wdt:P31 wd:Q1470762 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'eggplant', 'p': 'this taxon is source of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vegetable'}}

 Q: Which ballet was composed by Pyotr Ilyich Tchaikovsky?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q7315 . ?sbj wdt:P31 wd:Q15079786 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composed by', 'o': 'Pyotr Ilyich Tchaikovsky', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ballet'}}

 Q: What type of music is developed by Monopoly Star Wars?
 SPARQL: SELECT ?answer WHERE { wd:Q28233097 wdt:P136 ?X . ?X wdt:P178 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Monopoly Star Wars', 'p': 'type of music', 'o': '$y0'}}

 Q: What was Paul McCartney's estimated net worth in the year 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q2599 p:P2218 ?s . ?s ps:P2218 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paul McCartney', 'p': 'net worth', 'o': '?x0', 't': '2016'}

 Q: What education did Thelma Ritter get in 1922?
 SPARQL: SELECT ?obj WHERE { wd:Q229266 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1922')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thelma Ritter', 'p': 'education', 'o': '?x0', 't': '1922'}

 Q: what is the {replaced by} for {Martin Ryle} has {position held} as {Astronomer Royal} ?
 SPARQL: SELECT ?value WHERE { wd:Q190766 p:P39 ?s . ?s ps:P39 wd:Q369877 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Ryle', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Astronomer Royal'}}}

 Q: Give me {television series} that {presenter} {Jerry Springer} and which contains the word {jerry} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5398426 . ?sbj wdt:P371 wd:Q27214 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'jerry')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'host', 'o': 'Jerry Springer'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'jerry'}}

 Q: What is {has regions} of {born in} of {Norman Bel Geddes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q278247 wdt:P19 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has regions', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Norman Bel Geddes', 'p': 'born in', 'o': '$y0'}}

 Q: What is {position held} of {Pepin of Herstal} that is {replaces} is {Wulfoald} ?
 SPARQL: SELECT ?obj WHERE { wd:Q91392 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q980925 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pepin of Herstal', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Wulfoald'}}}

 Q: What is {energy source} of {replaced} of {Hävringe upper light} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40101409 wdt:P1365 ?X . ?X wdt:P618 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'energy source', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hävringe upper light', 'p': 'replaced', 'o': '$y0'}}

 Q: At what point in time was Margaret Mitchell nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q173540 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Margaret Mitchell', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: Tell me about country of origin of pasta and publication date?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q178 p:P495 ?s . ?s ps:P495 ?obj . ?s pq:P577 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pasta', 'p': 'country of origin', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'country of origin', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pasta', 'p': 'country of origin', 'o': '$y0'}}]

 Q: Who is the {Vidhan Sabha} for {executive body} of {Himachal Pradesh}
 SPARQL:  select distinct ?obj where { wd:Q1177 wdt:P208 ?obj . ?obj wdt:P31 wd:Q3091020 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Himachal Pradesh', 'p': 'executive body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Vidhan Sabha'}}

 Q: what is the {end time} for {Bob Paisley} has {member of sports team} as {Bishop Auckland F.C.} ?
 SPARQL: SELECT ?value WHERE { wd:Q314436 p:P54 ?s . ?s ps:P54 wd:Q4917491 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bob Paisley', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Bishop Auckland F.C.'}}}

 Q: Tell me cell whose name has the word synoviocyte in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7868 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'synoviocyte')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cell'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'synoviocyte'}}

 Q: Which means{open period from} on{Monday} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3027 wd:Q105}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'open period from', 'o': 'Monday'}

 Q: What's the patent number for MP3?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q42591 wdt:P1246 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'MP3', 'p': 'patent number', 'o': '?x0'}

 Q: Give me {skyscraper} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11303 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'skyscraper'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {topic of} of {law of large numbers}, that has {scholarly field for} is {data} ?
 SPARQL: SELECT ?answer WHERE { wd:Q207952 wdt:P1269 ?answer . ?answer wdt:P2578 wd:Q42848}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'law of large numbers', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'scholarly field for', 'o': 'data'}}

 Q: Give me the series ordinal for Chuck Berry has given name as Anderson ?
 SPARQL: SELECT ?value WHERE { wd:Q5921 p:P735 ?s . ?s ps:P735 wd:Q16274894 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chuck Berry', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Anderson'}}}

 Q: What is the {position} for {office held by head of government} of {Barcelona}
 SPARQL:  select distinct ?obj where { wd:Q1492 wdt:P1313 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Barcelona', 'p': 'office held by head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'office'}}

 Q: Which is the VICNAMES Place ID for Bass Strait?
 SPARQL: select distinct ?answer where { wd:Q171846 wdt:P3472 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bass Strait', 'p': 'VICNAMES Place ID', 'o': '?x0'}

 Q: Is the units sold of Harry Potter and the Philosopher's Stone equal to 400000000.0
 SPARQL: ASK WHERE { wd:Q43361 wdt:P2664 ?obj filter(?obj = 400000000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "Harry Potter and the Philosopher's Stone", 'p': 'units sold', 'o': '?x0', '?x0': '400000000.0'}

 Q: Which is the medical specialty of the field of work of Sigmund Freud?
 SPARQL:  select distinct ?obj where { wd:Q9215 wdt:P101 ?obj . ?obj wdt:P31 wd:Q930752 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sigmund Freud', 'p': 'field of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical specialty'}}

 Q: Name a color model that contain the word "hsv " in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2294018 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hsv')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'color model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'hsv'}}

 Q: :What city on the continent of North America is considered the twin town of Kraków?"
 SPARQL: SELECT ?answer WHERE { wd:Q31487 wdt:P190 ?answer . ?answer wdt:P30 wd:Q49}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kraków', 'p': 'twin town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'North America'}}

 Q: What is <Czech NDOP taxon ID> of <Peregrine Falcon> ?
 SPARQL: select distinct ?answer where { wd:Q30535 wdt:P5263 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Peregrine Falcon', 'p': 'Czech NDOP taxon ID', 'o': '?x0'}

 Q: What is the {fruit} for {this taxon is source of} of {Cuminum cyminum}
 SPARQL:  select distinct ?obj where { wd:Q132624 wdt:P1672 ?obj . ?obj wdt:P31 wd:Q1364 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cuminum cyminum', 'p': 'this taxon is source of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fruit'}}

 Q: Johann Schelle is the professor of what literary genre?
 SPARQL: SELECT ?answer WHERE { wd:Q449311 wdt:P1066 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johann Schelle', 'p': 'professor', 'o': '$y0'}}

 Q: Who is the team manager of Manan Sharma plays?
 SPARQL: SELECT ?answer WHERE { wd:Q19898331 wdt:P54 ?X . ?X wdt:P286 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manager', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Manan Sharma', 'p': 'team', 'o': '$y0'}}

 Q: what is the {end time} for {Lower Saxony} has {head of government} as {Christian Wulff} ?
 SPARQL: SELECT ?value WHERE { wd:Q1197 p:P6 ?s . ?s ps:P6 wd:Q2540 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lower Saxony', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Christian Wulff'}}}

 Q: Tell me fundamental state of matter whose name has the word solid in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15831576 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'solid')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fundamental state of matter'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'solid'}}

 Q: What is distribution for My Little Pony ?
 SPARQL: select distinct ?answer where { wd:Q1071312 wdt:P437 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'My Little Pony', 'p': 'distribution', 'o': '?x0'}

 Q: which is the {location} for {Joseph Raymond McCarthy} where {educated at} as {primary school} ?
 SPARQL: SELECT ?value WHERE { wd:Q189197 p:P69 ?s . ?s ps:P69 wd:Q9842 . ?s pq:P276 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Raymond McCarthy', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'primary school'}}}

 Q: When did child of Pedro I and mother?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: What is {on chromosome} of {genetic association} of {migraine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q133823 wdt:P2293 ?X . ?X wdt:P1057 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chromosome', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'migraine', 'p': 'genetic association', 'o': '$y0'}}

 Q: What is the {human} with the {MAX(personal best)} whose {country of citizenship} is {Germany}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2415 ?obj . ?ent wdt:P27 wd:Q183 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'personal best', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'Germany'}}}

 Q: Which is the Artsy gene for Cubism?
 SPARQL: select distinct ?answer where { wd:Q42934 wdt:P2411 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cubism', 'p': 'Artsy gene', 'o': '?x0'}

 Q: What is the national anthem of Nazi Germany?
 SPARQL:  select distinct ?obj where { wd:Q7318 wdt:P85 ?obj . ?obj wdt:P31 wd:Q23691 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nazi Germany', 'p': 'anthem', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national anthem'}}

 Q: Which bay of Valentia Island has the tributary Courantyne River?
 SPARQL: SELECT ?answer WHERE { wd:Q1146838 wdt:P206 ?answer . ?answer wdt:P974 wd:Q508582}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Valentia Island', 'p': 'bay', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Courantyne River'}}

 Q: What is {position held} of {José Sarney} that is {replaced by} is {Itamar Franco} ?
 SPARQL: SELECT ?obj WHERE { wd:Q244997 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q485946 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jose Sarney', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Itamar Franco'}}}

 Q: What was Jonathan Larson nominated for in 2002?
 SPARQL: SELECT ?obj WHERE { wd:Q449002 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jonathan Larson', 'p': 'nominated for', 'o': '?x0', 't': '2002'}

 Q: tell me social philosophy that starts with e
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q180592 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social philosophy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: Which is the vehicle normally used for Railjet?
 SPARQL: select distinct ?answer where { wd:Q327051 wdt:P3438 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Railjet', 'p': 'vehicle normally used', 'o': '?x0'}

 Q: What is <maximum thrust> of <Typhoon> ?
 SPARQL: select distinct ?answer where { wd:Q151384 wdt:P2228 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Typhoon', 'p': 'maximum thrust', 'o': '?x0'}

 Q: What is {contains} of {workplace} of {Frederick II of Prussia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q33550 wdt:P937 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'contains', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick II of Prussia', 'p': 'workplace', 'o': '$y0'}}

 Q: What are the Jewish denomination that starts with the letter j
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3001185 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Jewish denomination'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'j'}}

 Q: What was Verona's population in 1981?
 SPARQL: SELECT ?obj WHERE { wd:Q2028 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Verona', 'p': 'population', 'o': '?x0', 't': '1981'}

 Q: What is the {big city} for {twinned administrative body} of {Leeds}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q39121 . ?sbj wdt:P31 wd:Q1549591 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Leeds', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'big city'}}

 Q: How many numbers of the official symbol for the Quebec} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q176 wdt:P2238 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Quebec', 'p': 'official symbol', 'o': '?x0'}

 Q: What award did Giorgos Seferis receive in 1963?
 SPARQL: SELECT ?obj WHERE { wd:Q165823 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1963')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Giorgos Seferis', 'p': 'award', 'o': '?x0', 't': '1963'}

 Q: How many input methods are there for a gamepad?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P479 wd:Q273140 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'input method', 'o': 'gamepad'}

 Q: what is the {point in time} for {Keio University} has {students count} as {2492.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q815432 p:P2196 ?s . ?s ps:P2196 ?x filter(contains(?x,'2492.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Keio University', 'p': 'students count', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'students count', 'o': '2492.0'}, 't': '?x0'}

 Q: wich means{Total number of cases}that {suffers from} at{Giovanni Battista Pergolesi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q185312 wdt:P1050 ?X . ?X wdt:P1603 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of cases', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giovanni Battista Pergolesi', 'p': 'suffers from', 'o': '$y0'}}

 Q: What award is Luigi Pirandello received that is 1934-1-1 on point in time?
 SPARQL: SELECT ?obj WHERE { wd:Q1403 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1934')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Luigi Pirandello', 'p': 'award', 'o': '?x0', 't': '1934'}

 Q: What is the {atomic nucleus} with the {MAX(isospin z-component)} whose {follows} is {deuteron}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q37147 . ?ent wdt:P1127 ?obj . ?ent wdt:P155 wd:Q503527 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'isospin z-component', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'atomic nucleus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'deuteron'}}}

 Q: When did Gabon have a population of 692,535?
 SPARQL: SELECT ?value WHERE { wd:Q1000 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'692535.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gabon', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '692535.0'}, 't': '?x0'}

 Q: What is {has proponent} of {medical specialty} of {schizotypal personality disorder} ?
 SPARQL: SELECT ?answer WHERE { wd:Q861560 wdt:P1995 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has proponent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'schizotypal personality disorder', 'p': 'medical specialty', 'o': '$y0'}}

 Q: Who became the spouse of Auguste Rodin on January 29th 1917?
 SPARQL: SELECT ?obj WHERE { wd:Q30755 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1917')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Auguste Rodin', 'p': 'spouse', 'o': '?x0', 't': '1917'}

 Q: How many {present in work} are to/by {Assassin's Creed} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1441 wd:Q420292 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': "Assassin's Creed"}

 Q: "What is the {domain} of {unconformity} which is {associated with} is {geologist} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q876798 wdt:P2579 ?answer . ?answer wdt:P3095 wd:Q520549}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'unconformity', 'p': 'domain', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'associated with', 'o': 'geologist'}}

 Q: What is <history of topic> of <Zambia> ?
 SPARQL: select distinct ?answer where { wd:Q953 wdt:P2184 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zambia', 'p': 'history of topic', 'o': '?x0'}

 Q: What is a photographic technique which includes the word vignetting in the name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1439691 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vignetting')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'photographic technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vignetting'}}

 Q: what is the {statement is subject of} for {Georges Delerue} has {nominated for} as {Academy Award for Best Original Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q435034 p:P1411 ?s . ?s ps:P1411 wd:Q488651 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georges Delerue', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Score'}}}

 Q: What is the total revenue for ExxonMobil?
 SPARQL: select distinct ?answer where { wd:Q156238 wdt:P2139 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ExxonMobil', 'p': 'total revenue', 'o': '?x0'}

 Q: What is the {title of Mary} for {patron saint} of {Spanish Empire}
 SPARQL:  select distinct ?obj where { wd:Q80702 wdt:P417 ?obj . ?obj wdt:P31 wd:Q1509831 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Spanish Empire', 'p': 'patron saint', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'p'}}

 Q: What is {date of death} of {Aemilius Papinianus} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q315765 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Papinian', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: what is the {replaces} for {Isabel Martínez de Perón} has {position held} as {President of Argentina} ?
 SPARQL: SELECT ?value WHERE { wd:Q191014 p:P39 ?s . ?s ps:P39 wd:Q12969145 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabel Martinez de Peron', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Argentina'}}}

 Q: What is {headquarters location} of {University of Barcelona} that is {postal code} is {08007} ?
 SPARQL: SELECT ?obj WHERE { wd:Q219615 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P281 ?x filter(contains(?x,'08007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University of Barcelona', 'p': 'headquarters location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'postal code', 'o': '08007'}}}

 Q: What is Kitaro's Myspace ID?
 SPARQL: select distinct ?answer where { wd:Q273652 wdt:P3265 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kitaro', 'p': 'Myspace ID', 'o': '?x0'}

 Q: What is the {association football tournament} with the {MIN(number of points/goals/set scored)} whose {country} is {Uruguay}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1478437 . ?ent wdt:P1351 ?obj . ?ent wdt:P17 wd:Q77} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of points/goals/set scored', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'football tournament', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Uruguay'}}}

 Q: What is the twin town of Sakie Akiyama's birthplace?
 SPARQL: SELECT ?answer WHERE { wd:Q11594958 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sakie Akiyama', 'p': 'birthplace', 'o': '$y0'}}

 Q: What was the population of Hobart on August 9, 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q40191 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hobart', 'p': 'population', 'o': '?x0', 't': '2016'}

 Q: How many architectural styles are detectable in the Peterhof Palace?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1258473 wdt:P149 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Peterhof Palace', 'p': 'architectural style', 'o': '?x0'}

 Q: Which is the Courrier international topic ID for Nicolas Sarkozy?
 SPARQL: select distinct ?answer where { wd:Q329 wdt:P5551 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nicolas Sarkozy', 'p': 'Courrier international topic ID', 'o': '?x0'}

 Q: what is the {determination method} for {Alberta} has {population} as {4306039} ?
 SPARQL: SELECT ?value WHERE { wd:Q1951 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'4306039')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alberta', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '4306039'}}}

 Q: what is the {sport number} for {Moses Malone} has {member of sports team} as {Houston Rockets} ?
 SPARQL: SELECT ?value WHERE { wd:Q316179 p:P54 ?s . ?s ps:P54 wd:Q161345 . ?s pq:P1618 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sport number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moses Malone', 'p': 'played for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'played for', 'o': 'Houston Rockets'}}}

 Q: Who is the  {Wikidata property for an identifier} for {subject item of this property} of {Nazi Party}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1629 wd:Q7320 . ?sbj wdt:P31 wd:Q19847637 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'item', 'o': 'Nazi Party', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata property for an identifier'}}

 Q: What is {from} of {Yes}, that has {ocean} is {River Thames} ?
 SPARQL: SELECT ?answer WHERE { wd:Q184386 wdt:P740 ?answer . ?answer wdt:P206 wd:Q19686}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yes', 'p': 'from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ocean', 'o': 'River Thames'}}

 Q: How many are followed by Oracle Corporation?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P156 wd:Q19900 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'Oracle Corporation'}

 Q: "Which film director of Akira, has the first name Katsuhiro?"
 SPARQL: SELECT ?answer WHERE { wd:Q1905968 wdt:P57 ?answer . ?answer wdt:P735 wd:Q6378087}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Akira', 'p': 'director', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'first name', 'o': 'Katsuhiro'}}

 Q: What is {award received} of {George Lucas} that is {point in time} is {2009-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q38222 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Lucas', 'p': 'award', 'o': '?x0', 't': '2009'}

 Q: Which is {influenced by} and {followed by} of {Alexander_the_Great} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8409 wdt:P737 ?ans_1 . wd:Q8409 wdt:P156 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Alexander', 'p': 'influenced by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Alexander', 'p': 'followed by', 'o': '?x1'}]

 Q: Is this taxon is source of goji?
 SPARQL: select distinct ?answer where { ?answer wdt:P1672 wd:Q2617260}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'this taxon is source of', 'o': 'goji'}

 Q: Give me {National Historic Trail} that {country} {United States of America} and which contains the word {trail} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6973377 . ?sbj wdt:P17 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trail')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'National Historic Trail', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'USA'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'trail'}}

 Q: What is the full address of Glencore's headquarters located at Baaremattstrasse 3?
 SPARQL: SELECT ?obj WHERE { wd:Q169339 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x filter(contains(?x,'Baarermattstrasse 3')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Glencore', 'p': 'headquarters', 'o': '?x0'}

 Q: Tell me the name of a high-rise building designed by structural engineer Atkins, and which starts with "a".
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18142 . ?sbj wdt:P631 wd:Q1510450 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'high-rise building', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'structural engineer', 'o': 'Atkins'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: Is it true that the size of team at start of El Salvador at the 2004 Summer Olympics equals to 7?
 SPARQL: ASK WHERE { wd:Q143745 wdt:P2103 ?obj filter(?obj = 7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'El Salvador at the 2004 Summer Olympics', 'p': 'size of team at start', 'o': '?x0', '?x0': '7'}

 Q: what is the {winner} for {Jean-Luc Godard} has {award received} as {Honorary César} ?
 SPARQL: SELECT ?value WHERE { wd:Q53001 p:P166 ?s . ?s ps:P166 wd:Q727282 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean-Luc Godard', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Honorary Cesar'}}}

 Q: Which uncle did a tribute to Christ Church?
 SPARQL: SELECT ?answer WHERE { wd:Q26451415 wdt:P825 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'uncle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christ Church', 'p': 'tribute to', 'o': '$y0'}}

 Q: What is {location of death} of {Daniel Dunglas Home}, that has {diplomatic relation} is {Mauritius} ?
 SPARQL: SELECT ?answer WHERE { wd:Q725741 wdt:P20 ?answer . ?answer wdt:P530 wd:Q1027}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Daniel Dunglas Home', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Mauritius'}}

 Q: Which is the Scottish Football Association player ID of Matt Busby?
 SPARQL: select distinct ?answer where { wd:Q206237 wdt:P3049 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Matt Busby', 'p': 'Scottish Football Association player ID', 'o': '?x0'}

 Q: Which is the Fashion Model Directory photographer ID of Richard Avedon?
 SPARQL: select distinct ?answer where { wd:Q305497 wdt:P2485 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Richard Avedon', 'p': 'Fashion Model Directory photographer ID', 'o': '?x0'}

 Q: How many {place of publication} are to/by {Brasília} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P291 wd:Q2844 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'place of publication', 'o': 'Brasília'}

 Q: Is Ibn Taymiyyah's place of birth the country known as Harran?
 SPARQL: SELECT ?value WHERE { wd:Q491558 p:P19 ?s . ?s ps:P19 wd:Q199547 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ibn Taymiyyah', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of birth', 'o': 'Harran'}}}

 Q: How many {country for sport} are to/by {San Marino} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1532 wd:Q238 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'country for sport', 'o': 'San Marino'}

 Q: Die Hard is the narrative location of what county seat ?
 SPARQL:  select distinct ?obj where { wd:Q105598 wdt:P840 ?obj . ?obj wdt:P31 wd:Q62049 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Die Hard', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'county seat'}}

 Q: Which is {denomination} of {writers} of {Executive Order 3800} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19107125 wdt:P50 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'denomination', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Executive Order 3800', 'p': 'writer', 'o': '$y0'}}

 Q: Which is the ctext work ID for Romance of the Three Kingdoms?
 SPARQL: select distinct ?answer where { wd:Q70806 wdt:P4517 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Romance of the Three Kingdoms', 'p': 'ctext work ID', 'o': '?x0'}

 Q: tell me demographic profile replaced by early childhood  starts with letter b
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5932254 . ?sbj wdt:P1366 wd:Q3377398 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'demographic profile', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'early childhood'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: What is {nominated for} of {Montgomery Clift} that is {statement is subject of} is {24th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193102 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917184 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Montgomery Clift', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '24th Academy Awards'}}}

 Q: Give me {embankment dam} that contains the word {hydro} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1244922 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'hydro')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'embankment dam'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'hydro'}}

 Q: What are the Magnetic confinement fusion which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q939954 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Magnetic confinement fusion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is <academic degree> of <Andrei Tupolev> ?
 SPARQL: select distinct ?answer where { wd:Q219734 wdt:P512 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andrei Tupolev', 'p': 'academic degree', 'o': '?x0'}

 Q: Was Barry Kooser a film crew member on The Lion King?
 SPARQL: ASK WHERE { wd:Q36479 wdt:P3092 wd:Q16204825 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Lion King', 'p': 'film crew member', 'o': '?x0', '?x0': 'Barry Kooser'}]

 Q: What is the {members have occupation} and the {said to be the same as} of {Coen_brothers} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q56095 wdt:P3989 ?ans_1 . wd:Q56095 wdt:P460 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Coen brothers', 'p': 'members have occupation', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Coen brothers', 'p': 'said to be the same as', 'o': '?x1'}]

 Q: Which  bodies of water basin category of Peace River ?
 SPARQL: select distinct ?answer where { wd:Q2220 wdt:P1200 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Peace River', 'p': 'bodies of water basin category', 'o': '?x0'}

 Q: Which is the kingdom of the country of Kingdom of Wessex?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q105313 . ?sbj wdt:P31 wd:Q417175 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Kingdom of Wessex', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kingdom'}}

 Q: what is the {transliteration} for {Śūnyatā} has {native label} as {শূন্যতা} ?
 SPARQL: SELECT ?value WHERE { wd:Q546054 p:P1705 ?s . ?s ps:P1705 ?x filter(contains(?x,'শূন্যতা')) . ?s pq:P2440 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'transliteration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Śūnyatā', 'p': 'native label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'native label', 'o': 'শূন্যতা'}}}

 Q: What is {chairperson} of {member of} of {The Football Association} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9500 wdt:P463 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chairperson', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Football Association', 'p': 'member of', 'o': '$y0'}}

 Q: What is {position held} of {Athelstan} that is {start time} is {927-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q170017 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(?x,'927-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Athelstan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '927-0-0'}}}

 Q: Is the diameter of the Adiri equal to 0?
 SPARQL: ASK WHERE { wd:Q112516 wdt:P2386 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Adiri', 'p': 'diameter', 'o': '?x0', '?x0': '0'}

 Q: Which is the phase point for water?
 SPARQL: select distinct ?answer where { wd:Q283 wdt:P873 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'water', 'p': 'phase point', 'o': '?x0'}

 Q: Which means {location of formation} at {Apodaca} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P740 wd:Q1782406}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location of formation', 'o': 'Apodaca'}

 Q: What is the {county of California} for {contains administrative territorial entity} of {Los Angeles}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q65 . ?sbj wdt:P31 wd:Q13212489 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Los Angeles', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'county of California'}}

 Q: What is <union of> of <galaxy group or cluster> ?
 SPARQL: select distinct ?answer where { wd:Q17512228 wdt:P2737 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'galaxy group or cluster', 'p': 'union of', 'o': '?x0'}

 Q: what is the {start time} for {Dally Messenger} has {member of sports team} as {Australia national rugby union team} ?
 SPARQL: SELECT ?value WHERE { wd:Q3012496 p:P54 ?s . ?s ps:P54 wd:Q622443 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dally Messenger', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Australia national rugby union team'}}}

 Q: What is the name of the painting that depicts Jesus Christ
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P180 wd:Q302 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'Jesus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: What was the population of New Jersey in the year 2001?
 SPARQL: SELECT ?obj WHERE { wd:Q785 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jersey', 'p': 'population', 'o': '?x0', 't': '2001'}

 Q: What is {next to} of {Tarapacá Region}, that has {has states} is {Sud Chichas Province} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2114 wdt:P47 ?answer . ?answer wdt:P150 wd:Q1425463}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tarapacá Region', 'p': 'next to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has states', 'o': 'Sud Chichas Province'}}

 Q: "Which actor in The Godfather was educated at Hofstra University?
 SPARQL: SELECT ?answer WHERE { wd:Q47703 wdt:P161 ?answer . ?answer wdt:P69 wd:Q1623314}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Godfather', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'educated at', 'o': 'Hofstra University'}}

 Q: What is the {Wikimedia category} for {category of associated people} of {Manipur}
 SPARQL:  select distinct ?obj where { wd:Q1193 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Manipur', 'p': 'category of associated people', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cat'}}

 Q: Is the number of speakers of Sanskrit equal 2654.4?
 SPARQL: ASK WHERE { wd:Q11059 wdt:P1098 ?obj filter(?obj = 2654.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sanskrit', 'p': 'number of speakers', 'o': '?x0', '?x0': '2654.4'}

 Q: Is it true that the maximum operating altitude of the Airbus A400M equals to 11275?
 SPARQL: ASK WHERE { wd:Q6496 wdt:P2254 ?obj filter(?obj = 11275) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Airbus A400M', 'p': 'maximum operating altitude', 'o': '?x0', '?x0': '11275'}

 Q: What type kinship is a son-in-law?
 SPARQL: select distinct ?answer where { ?answer wdt:P1039 wd:Q3752578}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'kinship', 'o': 'son-in-law'}

 Q: Did {Goodfellas} {cast member} {Vincent Pastore} and {Peter Onorati} ?
 SPARQL: ASK WHERE { wd:Q42047 wdt:P161 wd:Q512986 . wd:Q42047 wdt:P161 wd:Q328409 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Goodfellas', 'p': 'cast member', 'o': '?x0', '?x0': 'Vincent Pastore'}, {'h': 'IS', 'v': '?x1', 's': 'Goodfellas', 'p': 'cast member', 'o': '?x1', '?x1': 'Peter Onorati'}]

 Q: What is {label} of {Lars Ulrich}, that has {date of commencement} is {1929-1-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106193 wdt:P264 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1929'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lars Ulrich', 'p': 'label', 'o': '?x0', 't': '1929'}

 Q: What is {formed out of} of {platinum}, that has {namesake} is {Francis Louis Sperry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q880 wdt:P186 ?answer . ?answer wdt:P138 wd:Q27908788}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'platinum', 'p': 'formed out of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Francis Louis Sperry'}}

 Q: What is {member of sports team} of {Nicklas Lidström} that is {start time} is {1994-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q434200 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nicklas Lidström', 'p': 'team', 'o': '?x0', 't': '1994'}

 Q: What is a time of day that starts with the letter m.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1260524 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'time of day'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is <BPH journal ID> of <American Journal of Botany> ?
 SPARQL: select distinct ?answer where { wd:Q2664693 wdt:P4569 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Journal of Botany', 'p': 'BPH journal ID', 'o': '?x0'}

 Q: What award did Frances McDormand receive in 2018?
 SPARQL: SELECT ?obj WHERE { wd:Q204299 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frances McDormand', 'p': 'award', 'o': '?x0', 't': '2018'}

 Q: Tell me mineral supergroup whose name has the word tourmalines in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3977918 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tourmalines')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral supergroup'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tourmalines'}}

 Q: How many operating systems run on MS-DOS?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P306 wd:Q47604 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'operating system', 'o': 'MS-DOS'}

 Q: Name a Catholic cathedral dedicated to Virgin Mary that contains the word "dame" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56242215 . ?sbj wdt:P825 wd:Q345 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dame')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Catholic cathedral', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'dedicated to', 'o': 'Virgin Mary'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dame'}}

 Q: Tell me time whose name has the word  prehistory in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11471 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'prehistory')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'time'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'prehistory'}}

 Q: What is the garrison of International Society for Krishna Consciousness, of which the Women in Red Banner are Mayapur Banner.jpg?
 SPARQL: SELECT ?answer WHERE { wd:Q190193 wdt:P159 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Mayapur Banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'International Society for Krishna Consciousness', 'p': 'garrison', 'o': '?x0'}

 Q: What is {position held} of {Hammer DeRoburt} that is {end time} is {1986-9-17} ?
 SPARQL: SELECT ?obj WHERE { wd:Q336231 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1986')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hammer DeRoburt', 'p': 'position held', 'o': '?x0', 't': '1986'}

 Q: What is SHARE Catalogue author ID for John Greenleaf Whittier?
 SPARQL: select distinct ?answer where { wd:Q458372 wdt:P3987 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Greenleaf Whittier', 'p': 'SHARE Catalogue author ID', 'o': '?x0'}

 Q: What is the leader of the nominee for of The Lavender Hill Mob ?
 SPARQL: SELECT ?answer WHERE { wd:Q1168531 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'leader', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Lavender Hill Mob', 'p': 'nominee for', 'o': '$y0'}}

 Q: What is the {wizard in the Harry Potter universe} for {present in work} of {Harry Potter}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q8337 . ?sbj wdt:P31 wd:Q15298259 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Harry Potter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'wizard in the Harry Potter universe'}}

 Q: Which is the World Surf League ID for Kelly Slater?
 SPARQL: select distinct ?answer where { wd:Q364406 wdt:P3339 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kelly Slater', 'p': 'World Surf League ID', 'o': '?x0'}

 Q: What is {date of death} and {date of birth} of {{Abigail Adams} has {child} as {Charles Adams}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q5074968 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles Adams'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Charles Adams'}}}]

 Q: Which is the audio pronunciation of Alfred Jodl?
 SPARQL: select distinct ?answer where { wd:Q57123 wdt:P443 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alfred Jodl', 'p': 'audio pronunciation', 'o': '?x0'}

 Q: How many electrical plug types are used for Saint Kitts and Nevis?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q763 wdt:P2853 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Saint Kitts and Nevis', 'p': 'electrical plug type', 'o': '?x0'}

 Q: what is the {end time} for {Pliny the Elder} has {position held} as {Procurator} ?
 SPARQL: SELECT ?value WHERE { wd:Q82778 p:P39 ?s . ?s ps:P39 wd:Q499165 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pliny the Elder', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Procurator'}}}

 Q: Is it true that the employees of the European Movement Germany equals to 10?
 SPARQL: ASK WHERE { wd:Q537395 wdt:P1128 ?obj filter(?obj = 10) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'European Movement Germany', 'p': 'employees', 'o': '?x0', '?x0': '10'}

 Q: Kurdish people are of what ethnic group?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P172 wd:Q12223 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'ethnic group', 'o': 'Kurdish people', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: What is {number of out of school children} of {continent} of {decolonisation of Asia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5249554 wdt:P30 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'decolonisation of Asia', 'p': 'continent', 'o': '$y0'}}

 Q: "Who is taxon parent of moth, whose vernacular name is Butterflies and Moths?"
 SPARQL: SELECT ?answer WHERE { wd:Q1725788 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Butterflies and Moths'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'moth', 'p': 'taxon parent', 'o': '?x0'}

 Q: Which is the CTHS person ID for François Quesnay?
 SPARQL: select distinct ?answer where { wd:Q13575 wdt:P2383 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'François Quesnay', 'p': 'CTHS person ID', 'o': '?x0'}

 Q: What is the effect of aspirin?
 SPARQL: select distinct ?answer where { wd:Q18216 wdt:P1542 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'aspirin', 'p': 'effect', 'o': '?x0'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Birgit Prinz} has {member of sports team} as {FSV Frankfurt}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q109868 p:P54 ?s . ?s ps:P54 wd:Q157352 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Birgit Prinz', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'FSV Frankfurt'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Birgit Prinz', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'FSV Frankfurt'}}}]

 Q: What is the Christian name for Peter Garrett, it is said to the same as Petelo
 SPARQL: SELECT ?answer WHERE { wd:Q528907 wdt:P735 ?answer . ?answer wdt:P460 wd:Q18640816}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Garrett', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Petelo'}}

 Q: What are the love deity which contains the word inanna in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1670614 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'inanna')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'love deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'inanna'}}

 Q: When did country for sport of Michael Schumacher and start time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9671 p:P1532 ?s . ?s ps:P1532 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Schumacher', 'p': 'country for sport', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'country for sport', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Schumacher', 'p': 'country for sport', 'o': '$y0'}}]

 Q: What is <UltraSignup runner ID> of <Dean Karnazes> ?
 SPARQL: select distinct ?answer where { wd:Q331288 wdt:P3585 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dean Karnazes', 'p': 'UltraSignup runner ID', 'o': '?x0'}

 Q: where is the head of government and head of state of Goa?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1171 wdt:P6 ?ans_1 . wd:Q1171 wdt:P35 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Goa', 'p': 'head of government', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Goa', 'p': 'head of state', 'o': '?x1'}]

 Q: Give me {international organization} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q484652 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international organization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is Righteous Among The Nations ID for Raoul Wallenberg ?
 SPARQL: select distinct ?answer where { wd:Q152850 wdt:P1979 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Raoul Wallenberg', 'p': 'Righteous Among The Nations ID', 'o': '?x0'}

 Q: What is the birth date of the book by Avenue Q?
 SPARQL: SELECT ?answer WHERE { wd:Q790583 wdt:P87 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birth date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Avenue Q', 'p': 'book by', 'o': '$y0'}}

 Q: Was Michael Bloomberg a residence in Medford and Allston?
 SPARQL: ASK WHERE { wd:Q607 wdt:P551 wd:Q54145 . wd:Q607 wdt:P551 wd:Q572788 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Michael Bloomberg', 'p': 'residence', 'o': '?x0', '?x0': 'Medford'}, {'h': 'IS', 'v': '?x1', 's': 'Michael Bloomberg', 'p': 'residence', 'o': '?x1', '?x1': 'Allston'}]

 Q: Is Bhumibol Adulyadej the child of Sirikit and Chulabhorn Walailak?
 SPARQL: ASK WHERE { wd:Q855252 wdt:P40 wd:Q164518 . wd:Q855252 wdt:P40 wd:Q1089410 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bhumibol Adulyadej', 'p': 'child', 'o': '?x0', '?x0': 'Sirikit'}, {'h': 'IS', 'v': '?x1', 's': 'Bhumibol Adulyadej', 'p': 'child', 'o': '?x1', '?x1': 'Chulabhorn Walailak'}]

 Q: Who is the {human} for {spouse} of {Sean Hannity}
 SPARQL:  select distinct ?obj where { wd:Q557730 wdt:P26 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sean Hannity', 'p': 'spouse', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the narrative location and genre of Hamlet?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q41567 wdt:P840 ?ans_1 . wd:Q41567 wdt:P136 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hamlet', 'p': 'narrative location', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hamlet', 'p': 'genre', 'o': '?x1'}]

 Q: What is {coordinate location} of {Ganges} that is {applies to part} is {river mouth} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5089 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q1233637 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ganges', 'p': 'coordinates', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'river mouth'}}}

 Q: What is {member of the board of directors} of {developed by} of {Mac OS X 10.1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q478451 wdt:P178 ?X . ?X wdt:P3320 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of the board of directors', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mac OS X 10.1', 'p': 'developed by', 'o': '$y0'}}

 Q: What has the higher taxon of Ulmus, is it the common name jilmovite?
 SPARQL: SELECT ?answer WHERE { wd:Q131113 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'jilmovité'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ulmus', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'common name', 'o': 'jilmovité'}}

 Q: Tell me novella that starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q149537 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'novella'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the study of Kazimierz Nitsch's academic subject?
 SPARQL: SELECT ?answer WHERE { wd:Q2077007 wdt:P101 ?X . ?X wdt:P2578 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'study of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kazimierz Nitsch', 'p': 'subject', 'o': '$y0'}}

 Q: what is the life stance of Bantu People, that was established by Jesus Christ ?
 SPARQL: SELECT ?answer WHERE { wd:Q173371 wdt:P140 ?answer . ?answer wdt:P112 wd:Q302}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bantu', 'p': 'life stance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'established by', 'o': 'Jesus'}}

 Q: What would be the penalty of blasphemy?
 SPARQL: select distinct ?answer where { ?answer wdt:P1596 wd:Q200481}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'penalty', 'o': 'blasphemy'}

 Q: How many {active ingredient in} are for {acetaminophen} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q57055 wdt:P3780 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'acetaminophen', 'p': 'active ingredient in', 'o': '?x0'}

 Q: Tell me criterion of similarity whose name has the word number in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7250271 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'number')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'criterion of similarity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'number'}}

 Q: What is {daughters} of {Olivia de Havilland}, that has {craft} is {journalist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q95068 wdt:P40 ?answer . ?answer wdt:P106 wd:Q1930187}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Olivia de Havilland', 'p': 'daughter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'journalist'}}

 Q: what is the {start time} for {Alfred Dreyfus} has {award received} as {Officer of the Legion of Honour} ?
 SPARQL: SELECT ?value WHERE { wd:Q171826 p:P166 ?s . ?s ps:P166 wd:Q10855195 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Dreyfus', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Officer of the Legion of Honour'}}}

 Q: What is the {biological process} for {biological phase} of {DNA replication}
 SPARQL:  select distinct ?obj where { wd:Q130996 wdt:P4774 ?obj . ?obj wdt:P31 wd:Q2996394 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'DNA replication', 'p': 'biological phase', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biological process'}}

 Q: What is <C-SPAN organization ID> of <Hamburg> ?
 SPARQL: select distinct ?answer where { wd:Q1055 wdt:P4725 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamburg', 'p': 'C-SPAN organization ID', 'o': '?x0'}

 Q: What is the {human} for {influenced by} of {Louis Pasteur}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P737 wd:Q529 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'influenced by', 'o': 'Louis Pasteur', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Give me {soft drink} that {country of origin} {North America} and which contains the word {beer} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q147538 . ?sbj wdt:P495 wd:Q49 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'beer')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'soft drink', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'North America'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'beer'}}

 Q: what is the {point in time} for {Colorado} has {population} as {939629.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q1261 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'939629.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Colorado', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '939629.0'}, 't': '?x0'}

 Q: Can you tell me which dwarf planet with the largest argument of periapsis has a moon called Dysnomia?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2199 . ?ent wdt:P2248 ?obj . ?ent wdt:P398 wd:Q102656 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'argument of periapsis', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dwarf planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Dysnomia'}}}

 Q: What was the operator of the London Underground that finished in December 31st, 1969?
 SPARQL: SELECT ?obj WHERE { wd:Q20075 p:P137 ?s . ?s ps:P137 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'London Underground', 'p': 'operator', 'o': '?x0', 't': '1969'}

 Q: What is the name of Ian Fleming's sister, whose language is English?
 SPARQL: SELECT ?answer WHERE { wd:Q82104 wdt:P3373 ?answer . ?answer wdt:P1412 wd:Q1860}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ian Fleming', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language', 'o': 'English'}}

 Q: Christopher Columbus is dedicated to how many?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P825 wd:Q7322 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'dedicated to', 'o': 'Christopher Columbus'}

 Q: What is {competed in} of {Angela Merkel}, that has {agent} is {Andreas Schwarz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q567 wdt:P1344 ?answer . ?answer wdt:P710 wd:Q15434565}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Angela Merkel', 'p': 'competed in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'agent', 'o': 'Andreas Schwarz'}}

 Q: What is <applies to part> of <Go> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P518 wd:Q11413}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'applies to part', 'o': 'Go'}

 Q: Which is the depositor for United Nations Secretary-General?
 SPARQL: select distinct ?answer where { ?answer wdt:P2058 wd:Q81066}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depositor', 'o': 'United Nations Secretary-General'}

 Q: Marge Champion's given name is Celeste in which series ordinal?
 SPARQL: SELECT ?value WHERE { wd:Q2617543 p:P735 ?s . ?s ps:P735 wd:Q3664222 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marge Champion', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Celeste'}}}

 Q: Which is the IAAF ID of Genzebe Dibaba?
 SPARQL: select distinct ?answer where { wd:Q457099 wdt:P1146 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genzebe Dibaba', 'p': 'IAAF ID', 'o': '?x0'}

 Q: What is Plymouth's IWM memorial ID?
 SPARQL: select distinct ?answer where { wd:Q43382 wdt:P3038 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Plymouth', 'p': 'IWM memorial ID', 'o': '?x0'}

 Q: Did Socrates marry Xanthippe and Myrto?
 SPARQL: ASK WHERE { wd:Q913 wdt:P26 wd:Q233677 . wd:Q913 wdt:P26 wd:Q1956836 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Socrates', 'p': 'marry', 'o': '?x0', '?x0': 'Xanthippe'}, {'h': 'IS', 'v': '?x1', 's': 'Socrates', 'p': 'marry', 'o': '?x1', '?x1': 'Myrto'}]

 Q: Which  is wing configuration of A-10 Thunderbolt II?
 SPARQL: select distinct ?answer where { wd:Q192443 wdt:P1654 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thunderbolt II', 'p': 'wing configuration', 'o': '?x0'}

 Q: Who married Grover Cleveland on June 2, 1886?
 SPARQL: SELECT ?obj WHERE { wd:Q35171 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1886')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Grover Cleveland', 'p': 'married', 'o': '?x0', 't': '1886'}

 Q: In 1933, what sports team was Douglas Jardine a part of?
 SPARQL: SELECT ?obj WHERE { wd:Q3038014 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1933')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Douglas Jardine', 'p': 'team', 'o': '?x0', 't': '1933'}

 Q: Did {Nancy_Kerrigan} {country for sport} {United States of America}?
 SPARQL: ASK WHERE { wd:Q239988 wdt:P1532 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Nancy Kerrigan', 'p': 'country for sport', 'o': '?x0', '?x0': 'United States of America'}]

 Q: Who is the student of Carl Friedrich Gauss?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q6722 wdt:P1066 ?ans_1 . wd:Q6722 wdt:P802 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Carl Friedrich Gauss', 'p': 'student of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Carl Friedrich Gauss', 'p': 'student', 'o': '?x1'}]

 Q: Tell me what literary form has the word yuefu in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4263830 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuefu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary form'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yuefu'}}

 Q: Tell me weekly newspaper whose name has the word es in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2305295 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'és')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weekly newspaper'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'és'}}

 Q: What is {death location} of {John Flynn}, that has {is in the municipality of} is {New South Wales} ?
 SPARQL: SELECT ?answer WHERE { wd:Q323080 wdt:P20 ?answer . ?answer wdt:P131 wd:Q3224}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Flynn', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'New South Wales'}}

 Q: What award was James Gandolfini nominated for in 2009?
 SPARQL: SELECT ?obj WHERE { wd:Q308722 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Gandolfini', 'p': 'nominated for', 'o': '?x0', 't': '2009'}

 Q: Which one is of the pasteurization?
 SPARQL: select distinct ?answer where { wd:Q58148 wdt:P642 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pasteurization', 'p': 'of', 'o': '?x0'}

 Q: Which is the constellation of Hercules?
 SPARQL: select distinct ?answer where { ?answer wdt:P59 wd:Q10448}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Hercules'}

 Q: What what is dead language has conjugation class Latin third conjungation and also which starts with letter i
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q45762 . ?sbj wdt:P5206 wd:Q54295441 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dead language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has conjugation class', 'o': 'Latin third conjungation'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Who is the judge of Nuremberg trials?
 SPARQL: select distinct ?answer where { wd:Q80130 wdt:P1594 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'judge', 'o': '?x0'}

 Q: What is the name of the awards confered by Youtube ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1027 wd:Q866 . ?sbj wdt:P31 wd:Q618779 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'by', 'o': 'Youtube', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award'}}

 Q: what is the {follows} for {Baja California Sur} has {inception} as {1930-12-30} ?
 SPARQL: SELECT ?value WHERE { wd:Q46508 p:P571 ?s . ?s ps:P571 ?x filter(contains(YEAR(?x),'1930')) . ?s pq:P155 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Baja California Sur', 'p': 'inception', 'o': '$y0'}}

 Q: What is {has towns} of {comes from} of {Game Informer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27197 wdt:P495 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has towns', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Game Informer', 'p': 'comes from', 'o': '$y0'}}

 Q: Give me {city of the United States} that contains the word {washington} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1093829 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'washington')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'washington'}}

 Q: How many {partnership with} are to/by {Autonomous University of Barcelona} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2652 wd:Q43452 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'partnership with', 'o': 'Autonomous University of Barcelona'}

 Q: Flickr is depends on software ?
 SPARQL: select distinct ?answer where { wd:Q103204 wdt:P1547 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Flickr', 'p': 'depends on software', 'o': '?x0'}

 Q: what is the {start time} for {Bank of America} has {subsidiary} as {Seafirst Bank} ?
 SPARQL: SELECT ?value WHERE { wd:Q487907 p:P355 ?s . ?s ps:P355 wd:Q7440350 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bank of America', 'p': 'subsidiary', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subsidiary', 'o': 'Seafirst Bank'}}}

 Q: What is {member of sports team} of {Just Fontaine} that is {start time} is {1950-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192749 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1950')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Just Fontaine', 'p': 'member of sports team', 'o': '?x0', 't': '1950'}

 Q: Where is the administrative unit of {architecture of India}, whose {administrative centre} is {New Delhi}?
 SPARQL: SELECT ?answer WHERE { wd:Q61050 wdt:P131 ?answer . ?answer wdt:P36 wd:Q987}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'architecture of India', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'administrative centre', 'o': 'New Delhi'}}

 Q: Does the apoapsis of the 3375 Amy equal 2.227?
 SPARQL: ASK WHERE { wd:Q545429 wdt:P2243 ?obj filter(?obj = 2.227) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '3375 Amy', 'p': 'apoapsis', 'o': '?x0', '?x0': '2.227'}

 Q: What is the {imperative programming language} for {developer} of {Dennis M. Ritchie}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P178 wd:Q45575 . ?sbj wdt:P31 wd:Q21562092 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Dennis M. Ritchie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'imperative programming language'}}

 Q: Who is the{SCO summit} for {participant of} of {Alexander Lukashenko}
 SPARQL:  select distinct ?obj where { wd:Q2866 wdt:P1344 ?obj . ?obj wdt:P31 wd:Q30178840 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander Lukashenko', 'p': 'participant of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'SCO summit'}}

 Q: What is {profession's field} of {studied by} of {canoeing} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20856109 wdt:P3095 ?X . ?X wdt:P425 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': "profession's field", 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'canoeing', 'p': 'studied by', 'o': '$y0'}}

 Q: What is the village of Ukraine with the maximum elevation above sea level whose located in the administrative territorial entity is Staryi Sambir Raion?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21672098 . ?ent wdt:P2044 ?obj . ?ent wdt:P131 wd:Q2599775 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'elevation above sea level', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'village of Ukraine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Staryi Sambir Raion'}}}

 Q: What is {instrument played} of {zero-sum game}, that has {scientific area} is {control theory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q156612 wdt:P2283 ?answer . ?answer wdt:P101 wd:Q6501221}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'zero-sum game', 'p': 'uses', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area', 'o': 'control theory'}}

 Q: What is the {standardized writing system} for {writing system} of {traditional Chinese characters}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q178528 . ?sbj wdt:P31 wd:Q55692290 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'traditional Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'standardized writing system'}}

 Q: What is the {kingdom} for {official language} of {Romanian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7913 . ?sbj wdt:P31 wd:Q417175 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Romanian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kingdom'}}

 Q: Who did Louis XIV of France marry on June 9, 1660?
 SPARQL: SELECT ?obj WHERE { wd:Q7742 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1660')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louis XIV of France', 'p': 'marry', 'o': '?x0', 't': '1660'}

 Q: Which is the tributary over the Pont Neuf?
 SPARQL: SELECT ?answer WHERE { wd:Q335277 wdt:P177 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pont Neuf', 'p': 'over', 'o': '$y0'}}

 Q: What is the {manned spacecraft} for {astronaut mission} of {Alan Shepard}
 SPARQL:  select distinct ?obj where { wd:Q174979 wdt:P450 ?obj . ?obj wdt:P31 wd:Q7217761 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alan Shepard', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'manned spacecraft'}}

 Q: What is {subtopic of} of {history of Suriname}, that has {consumer price index inflation rate} is {28.4} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1516634 wdt:P1269 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'28.4'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Suriname', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '28.4'}}

 Q: What is the {fictional company} for {creator} of {Jerry Seinfeld}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q215506 . ?sbj wdt:P31 wd:Q5446565 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'creator', 'o': 'Jerry Seinfeld', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional company'}}

 Q: What is the {ethnic group} for {language used} of {Norwegian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q9043 . ?sbj wdt:P31 wd:Q41710 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Norwegian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnic group'}}

 Q: What is the {steam locomotive} with the {MAX(number of cylinders)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q171043 . ?ent wdt:P1100 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of cylinders', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steam locomotive'}}

 Q: What is {created in document} of {source location of group/organisation} of {Dream Theater} ?
 SPARQL: SELECT ?answer WHERE { wd:Q162586 wdt:P740 ?X . ?X wdt:P457 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'created in document', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dream Theater', 'p': 'source location of group/organisation', 'o': '$y0'}}

 Q: Is  the number of graves of the Argentine Military Cemetery equal to 237?
 SPARQL: ASK WHERE { wd:Q772556 wdt:P2351 ?obj filter(?obj = 237) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Argentine Military Cemetery', 'p': 'number of graves', 'o': '?x0', '?x0': '237'}

 Q: What is {elected in} and {electoral district} of {{John Gorton} has {position held} as {Member of the Australian House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q356411 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P2715 ?value1 . ?s pq:P768 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Gorton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'electoral district', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Gorton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}]

 Q: Tell me religious belief whose name has the word pacha in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2728698 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pacha')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious belief'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pacha'}}

 Q: What is the age of the oldest person to have an award?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q618779 . ?ent wdt:P4135 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum age', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award'}}

 Q: What is {route of administration} of {has symptom} of {toluene} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15779 wdt:P1542 ?X . ?X wdt:P636 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'route of administration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'toluene', 'p': 'has symptom', 'o': '$y0'}}

 Q: What position in public office did Joko Widodo hold?
 SPARQL:  select distinct ?obj where { wd:Q3318231 wdt:P39 ?obj . ?obj wdt:P31 wd:Q294414 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joko Widodo', 'p': 'public office', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public office'}}

 Q: Alan Shearer is the member of what secondary national association football team ?
 SPARQL:  select distinct ?obj where { wd:Q483583 wdt:P54 ?obj . ?obj wdt:P31 wd:Q45053817 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alan Shearer', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'secondary national association football team'}}

 Q: who sister city of location born of Shawn Stasiak ?
 SPARQL: SELECT ?answer WHERE { wd:Q999056 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shawn Stasiak', 'p': 'location born', 'o': '$y0'}}

 Q: What is {has planet} of {orbits} of {Io} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3123 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has planet', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Io', 'p': 'orbits', 'o': '$y0'}}

 Q: Which is the proxy war for the event of the Cuban Missile Crisis?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P793 wd:Q128160 . ?sbj wdt:P31 wd:Q864113 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'event', 'o': 'Cuban Missile Crisis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'proxy war'}}

 Q: which is depicted by and immediate cause of Computer_network?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1301371 wdt:P1299 ?ans_1 . wd:Q1301371 wdt:P1536 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'network', 'p': 'depicted by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'network', 'p': 'immediate cause of', 'o': '?x1'}]

 Q: How many {item operated} are for {cook} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q156839 wdt:P121 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'cook', 'p': 'item operated', 'o': '?x0'}

 Q: Name a concept studied by sociology that starts with letter S
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q151885 . ?sbj wdt:P2579 wd:Q21201 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'sociology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: what is the {point in time} for {Robert Falcon Scott} has {award received} as {Scheele Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q102527 p:P166 ?s . ?s ps:P166 wd:Q15303658 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Robert Falcon Scott', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Scheele Award'}, 't': '?x0'}

 Q: What is the cation with the lowest isospin z-component whose instance of is cation ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q326277 . ?ent wdt:P1127 ?obj . ?ent wdt:P31 wd:Q326277} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'isospin z-component', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cation'}}

 Q: What are the sports of Leinster Rugby whose OpenStreetMap key is Tag:sports=rugby_union?
 SPARQL: SELECT ?answer WHERE { wd:Q1473374 wdt:P641 ?answer . ?answer wdt:P1282 ?x FILTER(contains(?x,'Tag:sport=rugby_union'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leinster Rugby', 'p': 'sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'key', 'o': 'tag'}}

 Q: Which kinship has the strongest family relationship degree?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q171318 . ?ent wdt:P4500 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'family relationship degree', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kinship'}}

 Q: What is {followed by} and {follows} of {{Clovis I} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q82339 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What is {percent of area that is water} of {deathplace} of {Thomas Brackett Reed} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2094078 wdt:P20 ?X . ?X wdt:P2927 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'percent of area that is water', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Brackett Reed', 'p': 'deathplace', 'o': '$y0'}}

 Q: Which is the pair of enantiomers which starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55662747 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pair of enantiomers'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {superhero} for {member of} of {X-Men}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P463 wd:Q128452 . ?sbj wdt:P31 wd:Q188784 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'X-Men', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superhero'}}

 Q: Is it true that the limiting oxygen index of the nylon 6-6 is less than 31.2?
 SPARQL: ASK WHERE { wd:Q7071155 wdt:P5929 ?obj filter(?obj < 31.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'nylon 6-6', 'p': 'limiting oxygen index', 'o': '?x0', '?x0': '31.2'}

 Q: What is {acop} of {formation} of {Thomas W. Steed} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7794787 wdt:P241 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'acop', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas W. Steed', 'p': 'formation', 'o': '$y0'}}

 Q: What award did Dmitry Khvorostovsky achieve in 1991?
 SPARQL: SELECT ?obj WHERE { wd:Q333201 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dmitry Khvorostovsky', 'p': 'award', 'o': '?x0', 't': '1991'}

 Q: Which muscle insertion is use over the rib?
 SPARQL: select distinct ?answer where { ?answer wdt:P3491 wd:Q196672}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'muscle insertion', 'o': 'rib'}

 Q: What is {location of death} of {Antonio Canova}, that has {category of associated people} is {Category:People from Venice} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5547 wdt:P20 ?answer . ?answer wdt:P1792 wd:Q7234650}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antonio Canova', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:People from Venice'}}

 Q: What is {twinned administrative body} of {Vologda} that is {start time} is {2009-12-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1957 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vologda', 'p': 'twinned administrative body', 'o': '?x0', 't': '2009'}

 Q: What is {personal name} of {William George Beers}, that has {main events} is {most frequent first names at birth in Rotterdam (1811-1913)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3568653 wdt:P735 ?answer . ?answer wdt:P793 wd:Q21142040}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William George Beers', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'main events', 'o': 'most frequent first names at birth in Rotterdam (1811-1913)'}}

 Q: Which road leads to Seville?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P609 wd:Q8717 . ?sbj wdt:P31 wd:Q34442 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'to', 'o': 'Seville', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road'}}

 Q: Who was the Anna Karina's husband in the year 1982?
 SPARQL: SELECT ?obj WHERE { wd:Q232113 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anna Karina', 'p': 'husband', 'o': '?x0', 't': '1982'}

 Q: On September 21st, 1821, what degree did Jules Michelet have?
 SPARQL: SELECT ?obj WHERE { wd:Q310791 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1821')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jules Michelet', 'p': 'degree', 'o': '?x0', 't': '1821'}

 Q: Which works of Emma Watson have a Category II Filmiroda rating?
 SPARQL: SELECT ?answer WHERE { wd:Q39476 wdt:P800 ?answer . ?answer wdt:P2747 wd:Q23830577}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Emma Watson', 'p': 'work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Filmiroda rating', 'o': 'Category II'}}

 Q: What is {coat of arms} of {state} of {Lake Winnebago} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1801110 wdt:P17 ?X . ?X wdt:P237 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coat of arms', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lake Winnebago', 'p': 'state', 'o': '$y0'}}

 Q: What is {part of constellation} of {planetary system} of {Messier 13} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11312 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 13', 'p': 'planetary system', 'o': '$y0'}}

 Q: Is 0 the the number of houses of the Schuleroch?
 SPARQL: ASK WHERE { wd:Q2251145 wdt:P4080 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Schulerloch', 'p': 'number of houses', 'o': '?x0', '?x0': '0'}

 Q: what is the {statement is subject of} for {Edith Head} has {award received} as {Academy Award for Best Costume Design, Black-and-White} ?
 SPARQL: SELECT ?value WHERE { wd:Q234961 p:P166 ?s . ?s ps:P166 wd:Q22120095 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edith Head', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Costume Design, Black-and-White'}}}

 Q: What is {speed of sound} of {mercury} that is {phase of matter} is {liquid} ?
 SPARQL: SELECT ?obj WHERE { wd:Q925 p:P2075 ?s . ?s ps:P2075 ?obj . ?s pq:P515 wd:Q11435 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'speed of sound', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mercury', 'p': 'speed of sound', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase of matter', 'o': 'liquid'}}}

 Q: What is the main food source and the locomotion means of Orangutan?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q41050 wdt:P1034 ?ans_1 . wd:Q41050 wdt:P3512 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Orangutan', 'p': 'main food source', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Orangutan', 'p': 'locomotion', 'o': '?x1'}]

 Q: What is the wavelength of 2MASS?
 SPARQL: select distinct ?answer where { wd:Q1454942 wdt:P2808 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '2MASS', 'p': 'wavelength', 'o': '?x0'}

 Q: What is the perimeter of Kahoolawe?
 SPARQL: select distinct ?answer where { wd:Q224086 wdt:P2547 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kahoolawe', 'p': 'perimeter', 'o': '?x0'}

 Q: What is {Charles and Ray Eames} {recognition title} who is the {titleholder} of {E. Fay Jones}?
 SPARQL: SELECT ?answer WHERE { wd:Q14634037 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q5321862}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles and Ray Eames', 'p': 'recognition title', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'titleholder', 'o': 'E. Fay Jones'}}

 Q: How many have received the award of baron?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P166 wd:Q165503 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': 'baron'}

 Q: What arrondissement is the Waikato Region, the highest judicial authority in the Supreme Court of New Zealand?
 SPARQL: SELECT ?answer WHERE { wd:Q139918 wdt:P131 ?answer . ?answer wdt:P209 wd:Q1355832}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Waikato Region', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest judicial authority', 'o': 'Supreme Court of New Zealand'}}

 Q: What is the maximum lifetime of isotope of neutronium?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12525553 . ?ent wdt:P2645 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'mean lifetime', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of neutronium'}}

 Q: What is {leader} of {political party} of {Robert Borrie} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7342220 wdt:P102 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'leader', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Borrie', 'p': 'party', 'o': '$y0'}}

 Q: What is {position held} of {Benedict XVI} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q2494 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'successor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benedict XVI', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benedict XVI', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {number of employees} of {developed by} of {x86-64} ?
 SPARQL: SELECT ?answer WHERE { wd:Q272629 wdt:P178 ?X . ?X wdt:P1128 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employees', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'x86-64', 'p': 'developed by', 'o': '$y0'}}

 Q: What is {award received} of {Rakhee Gulzar} that is {for work} is {Tapasya} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3196775 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q3427471 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rakhee Gulzar', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Tapasya'}}}

 Q: What is in the settlement of Fort Peck Dam, that has the abbreviation of MT?
 SPARQL: SELECT ?answer WHERE { wd:Q1426242 wdt:P131 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'MT'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fort Peck Dam', 'p': 'is in the settlement of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'abbreviation', 'o': 'mt'}}

 Q: What is {language spoken} of {Nathaniel Hawthorne}, that has {has grammatical person} is {third-person neuter singular} ?
 SPARQL: SELECT ?answer WHERE { wd:Q69339 wdt:P1412 ?answer . ?answer wdt:P5110 wd:Q52433289}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nathaniel Hawthorne', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical person', 'o': 'third-person neuter singular'}}

 Q: Is the lowest atmospheric pressure of the Typhoon Nina greater than 1092.0?
 SPARQL: ASK WHERE { wd:Q134484 wdt:P2532 ?obj filter(?obj > 1092.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Typhoon Nina', 'p': 'lowest atmospheric pressure', 'o': '?x0', '?x0': '1092.0'}

 Q: What is {characters} of {is shown in} of {Bowser} ?
 SPARQL: SELECT ?answer WHERE { wd:Q845864 wdt:P1441 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bowser', 'p': 'is shown in', 'o': '$y0'}}

 Q: Which is the historical country for the narrative location of the Exodus?
 SPARQL:  select distinct ?obj where { wd:Q9190 wdt:P840 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Exodus', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is {educated at} of {Newt Gingrich} that is {academic degree} is {Doctor of Philosophy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q182788 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q752297 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Newt Gingrich', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'Doctor of Philosophy'}}}

 Q: When Saint Petersburg has its population 2.92e+06?
 SPARQL: SELECT ?value WHERE { wd:Q656 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'2.92e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Saint Petersburg', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '2.92e+06'}, 't': '?x0'}

 Q: What is the {F-type main-sequence star} with the {MAX(absolute magnitude)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1353952 . ?ent wdt:P1457 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'absolute magnitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'F-type main-sequence star'}}

 Q: What is the region of the Battle of Leipzig whose partner town is Lyon?
 SPARQL: SELECT ?answer WHERE { wd:Q151005 wdt:P276 ?answer . ?answer wdt:P190 wd:Q456}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Leipzig', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Lyon'}}

 Q: Is it true that the operating income of the AeroLogic is less than 9840000?
 SPARQL: ASK WHERE { wd:Q381509 wdt:P3362 ?obj filter(?obj < 9840000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'AeroLogic', 'p': 'operating income', 'o': '?x0', '?x0': '9840000.0'}

 Q: Tell me which is the reference model that starts with the letter m!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q356674 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'reference model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What are the social philosophy which start with the letter eugenics
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q180592 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'eugenics')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social philosophy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'eugenics'}}

 Q: What is {has moon} of {Uranus}, that has {developer of} is {David C. Jewitt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q324 wdt:P398 ?answer . ?answer wdt:P61 wd:Q382992}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Uranus', 'p': 'has moon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'developed by', 'o': 'David C. Jewitt'}}

 Q: What is the {computer network protocol} for {uses} of {Internet Protocol version 4}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2283 wd:Q11103 . ?sbj wdt:P31 wd:Q15836568 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'Internet Protocol version 4', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer network protocol'}}

 Q: What is {musical artist} of {Deck the Halls}, that has {nomination received} is {MTV Video Music Award for Best Artist Website} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2287842 wdt:P175 ?answer . ?answer wdt:P1411 wd:Q821166}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Deck the Halls', 'p': 'musician', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'nomination received', 'o': 'MTV Video Music Award for Best Artist Website'}}

 Q: What is in the manifestation of Sleeping Beauty?
 SPARQL: select distinct ?answer where { ?answer wdt:P1557 wd:Q11824}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'Sleeping Beauty'}

 Q: What is Tate artist identifier for William Etty?
 SPARQL: select distinct ?answer where { wd:Q766362 wdt:P2741 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Etty', 'p': 'Tate artist identifier', 'o': '?x0'}

 Q: Who is the{film} for {distributor} of {20th Century Fox}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P750 wd:Q434841 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'distributor', 'o': '20th Century Fox', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: Is the mortality rate of Finland 163.3
 SPARQL: ASK WHERE { wd:Q24175139 wdt:P2844 ?obj filter(?obj = 163.3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'mortality in Finland', 'p': 'incidence', 'o': '?x0', '?x0': '163.3'}

 Q: what is the {replaced by} for {Suharto} has {position held} as {Secretary General of the Non-Aligned Movement} ?
 SPARQL: SELECT ?value WHERE { wd:Q44819 p:P39 ?s . ?s ps:P39 wd:Q15647601 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Suharto', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary General of the Non-Aligned Movement'}}}

 Q: what is the {start time} for {Henan} has {capital} as {Zhengzhou} ?
 SPARQL: SELECT ?value WHERE { wd:Q43684 p:P36 ?s . ?s ps:P36 wd:Q30340 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henan', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': 'Zhengzhou'}}}

 Q: Nigel Farage was employed by whom and until when?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q318471 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'until', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nigel Farage', 'p': 'employed by', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'employed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nigel Farage', 'p': 'employed by', 'o': '$y0'}}]

 Q: What is editor for  Catherine II of Russia
 SPARQL: select distinct ?answer where { ?answer wdt:P98 wd:Q36450}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'editor', 'o': 'Catherine II of Russia'}

 Q: Is the annual energy output of Walney Wind Farm equal to 1300?
 SPARQL: ASK WHERE { wd:Q1330226 wdt:P4131 ?obj filter(?obj = 1300) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Walney Wind Farm', 'p': 'annual energy output', 'o': '?x0', '?x0': '1300'}

 Q: Who is the chairman of the member of Gordon S. Wood?
 SPARQL: SELECT ?answer WHERE { wd:Q5585778 wdt:P463 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chair', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gordon S. Wood', 'p': 'member of', 'o': '$y0'}}

 Q: What is {constructed} of {developed by} of {Frogger} ?
 SPARQL: SELECT ?answer WHERE { wd:Q524267 wdt:P178 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constructed', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frogger', 'p': 'developed by', 'o': '$y0'}}

 Q: what are the mineral species that contains the word zoisite  in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55076514 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zoisite')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral species'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zoisite'}}

 Q: What is {sibling} of {Joe DiMaggio} that is {type of kinship} is {brother} ?
 SPARQL: SELECT ?obj WHERE { wd:Q297142 p:P3373 ?s . ?s ps:P3373 ?obj . ?s pq:P1039 wd:Q10861465 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joe DiMaggio', 'p': 'bro', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'brother'}}}

 Q: Did Glen Campbell have the record label Motown and Liberty Records?
 SPARQL: ASK WHERE { wd:Q162667 wdt:P264 wd:Q43327 . wd:Q162667 wdt:P264 wd:Q1392321 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Glen Campbell', 'p': 'record label', 'o': '?x0', '?x0': 'Motown'}, {'h': 'IS', 'v': '?x1', 's': 'Glen Campbell', 'p': 'record label', 'o': '?x1', '?x1': 'Liberty'}]

 Q: What is the {river} for {located in or next to body of water} of {Baltimore}
 SPARQL:  select distinct ?obj where { wd:Q5092 wdt:P206 ?obj . ?obj wdt:P31 wd:Q4022 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Baltimore', 'p': 'located in or next to body of water', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'river'}}

 Q: What is {continent} of {taiga}, that has {wgs-84} is {46.0 7.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q69564 wdt:P30 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'46.0 7.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'taiga', 'p': 'continent', 'o': '?x0'}

 Q: What is the headquarters of Ghent University, whose telephone prefix is 09?
 SPARQL: SELECT ?answer WHERE { wd:Q1137665 wdt:P159 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'09'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ghent University', 'p': 'headquarters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'telephone prefix', 'o': '09'}}

 Q: Which is the religious text that follows the Exodus?
 SPARQL:  select distinct ?obj where { wd:Q9190 wdt:P155 ?obj . ?obj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Exodus', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: Give me {Hindu deity} that starts with {'y'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q979507 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Hindu deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Is the lower flammable limit of styrene less than 1.08?
 SPARQL: ASK WHERE { wd:Q28917 wdt:P2202 ?obj filter(?obj < 1.08) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'styrene', 'p': 'lower flammable limit', 'o': '?x0', '?x0': '1.08'}

 Q: what is the {start time} for {Charles VII of France} has {position held} as {King of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q133372 p:P39 ?s . ?s ps:P39 wd:Q18384454 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles VII of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of France'}}}

 Q: "What is {made by} of {Cthulhu}, which has {floruit start} is {1897-0-0} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q12038 wdt:P170 ?answer . ?answer wdt:P2031 ?x FILTER(contains(YEAR(?x),'1897'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cthulhu', 'p': 'made by', 'o': '?x0', 't': '1897'}

 Q: Henry II of France wore what kind of plate armor?
 SPARQL:  select distinct ?obj where { wd:Q132545 wdt:P3828 ?obj . ?obj wdt:P31 wd:Q3391846 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Henry II of France', 'p': 'wore', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'plate armor'}}

 Q: What is {native label} of {Leviathan} that is {transliteration} is {Liwyāṯān} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192677 p:P1705 ?s . ?s ps:P1705 ?obj . ?s pq:P2440 ?x filter(contains(?x,'Liwyāṯān')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'native label', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leviathan', 'p': 'native label', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'transliteration', 'o': 'liwyāṯān'}}}

 Q: What is <Anime News Network anime ID> of <Nausicaä of the Valley of the Wind> ?
 SPARQL: select distinct ?answer where { wd:Q8885676 wdt:P1985 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nausicaä of the Valley of the Wind', 'p': 'Anime News Network anime ID', 'o': '?x0'}

 Q: What is the  translation of birth name of Averroes?
 SPARQL: SELECT ?obj WHERE { wd:Q39837 p:P1477 ?s . ?s ps:P1477 ?obj . ?s pq:P2440 ?x filter(contains(?x,'Abū l-Walīd Muhammad ibn Ahmad ibn Rushd')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Averroes', 'p': 'birth name', 'o': '?x0'}

 Q: What is {doctoral advisor} and {academic degree} of {{Joseph Goebbels} has {educated at} as {Heidelberg University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q41749 p:P69 ?s . ?s ps:P69 wd:Q151510 . ?s pq:P184 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Goebbels', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Heidelberg University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Goebbels', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Heidelberg University'}}}]

 Q: What award did Earl Warren receive in the year 1969?
 SPARQL: SELECT ?obj WHERE { wd:Q311197 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Earl Warren', 'p': 'award', 'o': '?x0', 't': '1969'}

 Q: What is {original title} of {murder method} of {Henry III, Holy Roman Emperor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q153023 wdt:P509 ?X . ?X wdt:P1476 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'title', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry III', 'p': 'murder method', 'o': '$y0'}}

 Q: What is the {dialect} for {dialect of} of {Tagalog}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4913 wd:Q34057 . ?sbj wdt:P31 wd:Q33384 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'Tagalog', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect'}}

 Q: What is {scholarly field for} of {scholarly field for} of {Leonhard Euler} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7604 wdt:P101 ?X . ?X wdt:P2578 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'scholarly field for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leonhard Euler', 'p': 'fields', 'o': '$y0'}}

 Q: What is <INE municipality code> of <Zaragoza> ?
 SPARQL: select distinct ?answer where { wd:Q10305 wdt:P772 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zaragoza', 'p': 'INE municipality code', 'o': '?x0'}

 Q: What is the diplomatic relation of the basin countries of the Black Sea?
 SPARQL: SELECT ?answer WHERE { wd:Q166 wdt:P205 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Black Sea', 'p': 'basin countries', 'o': '$y0'}}

 Q: What significant event is proportionate to 0.001 Russian ruble?
 SPARQL: SELECT ?obj WHERE { wd:Q41044 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P1107 ?x filter(contains(?x,'0.001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significant event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Russian ruble', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'proportion', 'o': '0.001'}}}

 Q: What is <point group> of <quartz> ?
 SPARQL: select distinct ?answer where { wd:Q43010 wdt:P589 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'quartz', 'p': 'point group', 'o': '?x0'}

 Q: What is position held of Constans II that is replaces of Heraklonas ?
 SPARQL: SELECT ?obj WHERE { wd:Q41613 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q31513 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Constans II', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Heraklonas'}}}

 Q: Is it true that the time-weighted average exposure limit of the cobalt is less than 0.04?
 SPARQL: ASK WHERE { wd:Q740 wdt:P2404 ?obj filter(?obj < 0.04) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'cobalt', 'p': 'time-weighted average exposure limit', 'o': '?x0', '?x0': '0.04'}

 Q: Is the date of birth for Christoper Columbus 1451-10-31?
 SPARQL: SELECT ?obj WHERE { wd:Q7322 p:P569 ?s . ?s ps:P569 ?obj . ?s pq:P1326 ?x filter(contains(YEAR(?x),'1451')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Columbus', 'p': 'date of birth', 'o': '?x0', 't': '1451'}

 Q: what is the {point in time} for {Maurice Sendak} has {award received} as {Astrid Lindgren Memorial Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q314771 p:P166 ?s . ?s ps:P166 wd:Q430035 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Maurice Sendak', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Astrid Lindgren Memorial Award'}, 't': '?x0'}

 Q: What is {member of sports team} of {Jock Stein} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q355378 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jock Stein', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jock Stein', 'p': 'team', 'o': '$y0'}}]

 Q: Which is the YSO ID for Lesotho?
 SPARQL: select distinct ?answer where { wd:Q1013 wdt:P2347 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lesotho', 'p': 'YSO ID', 'o': '?x0'}

 Q: What is the {fictional human} for {performer} of {Ben Affleck}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P175 wd:Q483118 . ?sbj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Ben Affleck', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional human'}}

 Q: What is {educated at} of {John Paul Stevens} that is {end time} is {1947-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11109 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1947')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Paul Stevens', 'p': 'educated at', 'o': '?x0', 't': '1947'}

 Q: What is the {Population I star} for {parent astronomical body} of {Jupiter}
 SPARQL:  select distinct ?obj where { wd:Q319 wdt:P397 ?obj . ?obj wdt:P31 wd:Q3592493 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jupiter', 'p': 'star', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Population I star'}}

 Q: Which automobile marque has the highest assets?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q17412622 . ?ent wdt:P2403 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'assets', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile marque'}}

 Q: What is the {mainland territory of Australia} for {replaces} of {Northern Territory}
 SPARQL:  select distinct ?obj where { wd:Q3235 wdt:P1365 ?obj . ?obj wdt:P31 wd:Q14192234 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Northern Territory', 'p': 'replaces', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mainland territory of Australia'}}

 Q: What is the {stadium} for {operator} of {Indianapolis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P137 wd:Q6346 . ?sbj wdt:P31 wd:Q483110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'Indianapolis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stadium'}}

 Q: What is {position held} of {Charles V of France} that is {start time} is {1364-4-8} ?
 SPARQL: SELECT ?obj WHERE { wd:Q167782 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1364')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles V of France', 'p': 'position held', 'o': '?x0', 't': '1364'}

 Q: What are the universal library which start with the letter I
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2495568 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'universal library'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Tell me what human migration starts with the letter u.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q177626 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human migration'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is {input} of {in work} of {Captain Hook} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55728689 wdt:P1441 ?X . ?X wdt:P479 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'input', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Captain Hook', 'p': 'in work', 'o': '$y0'}}

 Q: Which  is alcohol by volume of absinthe} ?
 SPARQL: select distinct ?answer where { wd:Q170210 wdt:P2665 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'absinthe', 'p': 'alcohol by volume', 'o': '?x0'}

 Q: What is {inventor} of {Hamiltonian mechanics}, that has {member of} is {National Academy of Sciences} ?
 SPARQL: SELECT ?answer WHERE { wd:Q477921 wdt:P61 ?answer . ?answer wdt:P463 wd:Q270794}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hamiltonian mechanics', 'p': 'invented', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'National Academy of Sciences'}}

 Q: Is the foreign direct investment net outflow of Belarus equal to 204800000?
 SPARQL: ASK WHERE { wd:Q184 wdt:P2140 ?obj filter(?obj = 204800000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Belarus', 'p': 'foreign direct investment net outflow', 'o': '?x0', '?x0': '204800000'}

 Q: What is {languages spoken} of {Miriam Makeba}, that has {has influence} is {French} ?
 SPARQL: SELECT ?answer WHERE { wd:Q146256 wdt:P1412 ?answer . ?answer wdt:P737 wd:Q150}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Miriam Makeba', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has influence', 'o': 'French'}}

 Q: What is <Filmweb.pl film ID> of <Mr. Smith Goes to Washington> ?
 SPARQL: select distinct ?answer where { wd:Q866120 wdt:P5032 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mr. Smith Goes to Washington', 'p': 'Filmweb.pl film ID', 'o': '?x0'}

 Q: What is fabrication method of The Ren & Stimpy Show?
 SPARQL: select distinct ?answer where { wd:Q1361124 wdt:P2079 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Ren & Stimpy Show', 'p': 'fabrication method', 'o': '?x0'}

 Q: What is {number of speakers} of {Esperanto} that is {point in time} is {2015-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q143 p:P1098 ?s . ?s ps:P1098 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Esperanto', 'p': 'number of speakers', 'o': '?x0', 't': '2015'}

 Q: What is the kinematic viscosity of sulfuric acid (H2SO4)?
 SPARQL: select distinct ?answer where { wd:Q4118 wdt:P2118 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sulfuric acid', 'p': 'kinematic viscosity', 'o': '?x0'}

 Q: What is the accessory of the characters from Horsing Around with History?
 SPARQL: SELECT ?answer WHERE { wd:Q4024510 wdt:P674 ?X . ?X wdt:P3828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'accessory', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Horsing Around with History', 'p': 'characters', 'o': '$y0'}}

 Q: What is the name of a data structure that starts with the letter t.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q175263 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'data structure'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: In the denomination of Sikhism, What is Martha's sainthood status?
 SPARQL: SELECT ?answer WHERE { wd:Q232453 wdt:P411 ?answer . ?answer wdt:P140 wd:Q9316}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Martha', 'p': 'sainthood status', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'denomination', 'o': 'Sikhism'}}

 Q: What is <original combination> of <Carcharocles megalodon> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1403 wd:Q163873}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'original combination', 'o': 'megalodon'}

 Q: Which is the birthplace of Alexander Nevsky, that has STD code 48535 ?
 SPARQL: SELECT ?answer WHERE { wd:Q174044 wdt:P19 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'48535'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alexander Nevsky', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'STD code', 'o': '48535'}}

 Q: which apple cultivar with highest shelf life?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15731356 . ?ent wdt:P4218 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'shelf life', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'apple cultivar'}}

 Q: what is the {mother} for {Herod the Great} has {child} as {Herod Antipas} ?
 SPARQL: SELECT ?value WHERE { wd:Q51672 p:P40 ?s . ?s ps:P40 wd:Q192950 . ?s pq:P25 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Herod the Great', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Herod Antipas'}}}

 Q: Is the electric dipole moment of acetic acid equal to 1.74?
 SPARQL: ASK WHERE { wd:Q47512 wdt:P2201 ?obj filter(?obj = 1.74) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'acetic acid', 'p': 'electric dipole moment', 'o': '?x0', '?x0': '1.74'}

 Q: Which book publishing company is owned by the University of Oxford?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q34433 . ?sbj wdt:P31 wd:Q1320047 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'University of Oxford', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book publishing company'}}

 Q: Tell me the most notable work of Christopher Hitchens and also the publisher.
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P123 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'notable work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}]

 Q: Which {artist} {precedes} by {Die, Die My Darling} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2337653 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'artist', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Die, Die My Darling', 'p': 'precedes', 'o': '$y0'}}

 Q: Which is {award received} of {Kailash Satyarthi} where {statement is subject of} is {2014 Nobel Peace Prize} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3442375 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q18204229 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kailash Satyarthi', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '2014 Nobel Peace Prize'}}}

 Q: What is in the borough of Berlin U-Bahn whose inhabitants are 6000.0?
 SPARQL: SELECT ?answer WHERE { wd:Q68646 wdt:P131 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'6000.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Berlin U-Bahn', 'p': 'is in the borough of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '6000.0'}}

 Q: What was the daily newspaper for political alignment of Communist Party of the Soviet Union?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1387 wd:Q79854 . ?sbj wdt:P31 wd:Q1110794 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'political alignment', 'o': 'Communist Party of the Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'daily newspaper'}}

 Q: What is the {Wikimedia list article} for {is a list of} of {The Thinker}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P360 wd:Q18003128 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is a list of', 'o': 'The Thinker', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'list'}}

 Q: What is {heart pulse} of {found in species} of {glycerol} ?
 SPARQL: SELECT ?answer WHERE { wd:Q132501 wdt:P703 ?X . ?X wdt:P3395 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'heart pulse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'glycerol', 'p': 'found in species', 'o': '$y0'}}

 Q: What is Art UK collection ID for National Gallery?
 SPARQL: select distinct ?answer where { wd:Q180788 wdt:P1751 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'National Gallery', 'p': 'Art UK collection ID', 'o': '?x0'}

 Q: How many {office held by head of government} are to/by {president} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1313 wd:Q30461 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'office held by head of government', 'o': 'president'}

 Q: What is {type of film} of {musical artist} of {Jubileum Volume I} ?
 SPARQL: SELECT ?answer WHERE { wd:Q221404 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of film', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jubileum Volume I', 'p': 'artist', 'o': '$y0'}}

 Q: Who is the spouse of Anggun in 2010-6-0?
 SPARQL: SELECT ?obj WHERE { wd:Q221310 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anggun', 'p': 'spouse', 'o': '?x0', 't': '2010'}

 Q: What is the {suspension bridge} with the {MIN(longest span)} whose {country} is {People's Republic of China}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12570 . ?ent wdt:P2787 ?obj . ?ent wdt:P17 wd:Q148} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'longest span', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'suspension bridge', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': "People's Republic of China"}}}

 Q: How many {occupant} are for {Windsor Castle} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q42646 wdt:P466 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Windsor Castle', 'p': 'occupant', 'o': '?x0'}

 Q: who daughters of is daughter of Charles IV of Spain ?
 SPARQL: SELECT ?answer WHERE { wd:Q183226 wdt:P25 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles IV', 'p': 'is daughter of', 'o': '$y0'}}

 Q: What is the {sovereign state} for {participant of} of {Korean War}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q8663 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant of', 'o': 'Korean War', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Which is the fruit which contains the word pomelo in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3314483 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pomelo')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fruit'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pomelo'}}

 Q: Which is the MedlinePlus ID for anorexia nervosa?
 SPARQL: select distinct ?answer where { wd:Q131749 wdt:P604 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'anorexia nervosa', 'p': 'MedlinePlus ID', 'o': '?x0'}

 Q: When did Hugh Grant received the Volpi Cup for Best Actor award?
 SPARQL: SELECT ?value WHERE { wd:Q163286 p:P166 ?s . ?s ps:P166 wd:Q2089923 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Hugh Grant', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Volpi Cup for Best Actor'}, 't': '?x0'}

 Q: Thomas Aquinas holds which position relating to his occupation?
 SPARQL:  select distinct ?obj where { wd:Q9438 wdt:P106 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thomas Aquinas', 'p': 'occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is {continues from} of {worked at} of {Edward Snowden} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13424289 wdt:P108 ?X . ?X wdt:P1365 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continues from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward Snowden', 'p': 'worked at', 'o': '$y0'}}

 Q: What works did the sculptor Ebenezer Scrooge do?
 SPARQL: SELECT ?answer WHERE { wd:Q626756 wdt:P170 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ebenezer Scrooge', 'p': 'sculptor', 'o': '$y0'}}

 Q: What is {in work} of {wives} of {Basil Fawlty} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1766187 wdt:P26 ?X . ?X wdt:P1441 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Basil Fawlty', 'p': 'wife', 'o': '$y0'}}

 Q: Which is the color for white?
 SPARQL: select distinct ?answer where { ?answer wdt:P462 wd:Q23444}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'color', 'o': 'white'}

 Q: Is the quantity of the borkumer Kleinbah Melitta equal to 1?
 SPARQL: ASK WHERE { wd:Q893876 wdt:P1114 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Borkumer Kleinbahn Melitta', 'p': 'quantity', 'o': '?x0', '?x0': '1'}

 Q: What is the {human} for {work location} of {Bern}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P937 wd:Q70 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Bern', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {educated at} of {Anne Hathaway} that is {end time} is {1993-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36301 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anne Hathaway', 'p': 'educated at', 'o': '?x0', 't': '1993'}

 Q: What is {used for treatment} of {murder method} of {Henry Clay Frick} ?
 SPARQL: SELECT ?answer WHERE { wd:Q93709 wdt:P509 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used for treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Clay Frick', 'p': 'murder method', 'o': '$y0'}}

 Q: What is {top dog} of {nomination received} of {X-Men} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106182 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'top dog', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'X-Men', 'p': 'nomination received', 'o': '$y0'}}

 Q: What astronaut mission of human spaceflight did Christa McAuliffe do?
 SPARQL:  select distinct ?obj where { wd:Q229674 wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Christa McAuliffe', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human spaceflight'}}

 Q: what is the {point in time} for {Kevin Garnett} has {award received} as {NBA Most Valuable Player Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q189240 p:P166 ?s . ?s ps:P166 wd:Q222047 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kevin Garnett', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'NBA Most Valuable Player Award'}, 't': '?x0'}

 Q: What is {languages of expression} of {Bede}, that has {has grammatical gender} is {masculine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q154938 wdt:P1412 ?answer . ?answer wdt:P5109 wd:Q499327}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bede', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical gender', 'o': 'masculine'}}

 Q: Which  is USNPL ID for Village Voice ?
 SPARQL: select distinct ?answer where { wd:Q876158 wdt:P5454 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Village Voice', 'p': 'USNPL ID', 'o': '?x0'}

 Q: At what point in time did Lois Lowry receive a Newbery Medal award?
 SPARQL: SELECT ?value WHERE { wd:Q238124 p:P166 ?s . ?s ps:P166 wd:Q622813 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lois Lowry', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Newbery Medal'}, 't': '?x0'}

 Q: What is Boléro dedicated to?
 SPARQL: select distinct ?answer where { wd:Q327331 wdt:P825 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Boléro', 'p': 'dedicated to', 'o': '?x0'}

 Q: When Frédéric Mistral was nominated for Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q42596 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Frédéric Mistral', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What is {chairperson} of {Communist Party of China} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'chairperson', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}]

 Q: How much ammunition is need by a 9x19mm Parabellum?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P739 wd:Q135550 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'ammunition', 'o': '9x19mm'}

 Q: Which is the record label as the record label for Linda Perry?
 SPARQL:  select distinct ?obj where { wd:Q236125 wdt:P264 ?obj . ?obj wdt:P31 wd:Q18127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linda Perry', 'p': 'record label', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'record label'}}

 Q: What is the {taxon} for {taxonomic type} of {Saccharomyces cerevisiae}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P427 wd:Q719725 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'taxonomic type', 'o': 'Saccharomyces cerevisiae', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: is the effective firing range of SPG-82 equal to 220.0?
 SPARQL: ASK WHERE { wd:Q949345 wdt:P4176 ?obj filter(?obj = 220.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'SPG-82', 'p': 'effective firing range', 'o': '?x0', '?x0': '220.0'}

 Q: Is it true that the number of works on the Robert ap Huw Manuscripts is more than 36.0?
 SPARQL: ASK WHERE { wd:Q55774867 wdt:P3740 ?obj filter(?obj > 36.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Robert ap Huw Manuscripts', 'p': 'number of works', 'o': '?x0', '?x0': '36.0'}

 Q: Is Shanghai twinned administrative body Basel and Porto?
 SPARQL: ASK WHERE { wd:Q8686 wdt:P190 wd:Q78 . wd:Q8686 wdt:P190 wd:Q36433 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Shanghai', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Basel'}, {'h': 'IS', 'v': '?x1', 's': 'Shanghai', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Porto'}]

 Q: What is the {show dog} with the {MIN(number of subscribers)} whose {instance of} is {dog}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12008694 . ?ent wdt:P3744 ?obj . ?ent wdt:P31 wd:Q144} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of subscribers', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'show dog', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog'}}}

 Q: Which means{International Weightlifting Federation ID} at the {Hossein Rezazadeh} ?
 SPARQL: select distinct ?answer where { wd:Q374353 wdt:P3667 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hossein Rezazadeh', 'p': 'International Weightlifting Federation ID', 'o': '?x0'}

 Q: What language uses the Phoenician alphabet?
 SPARQL:  select distinct ?obj where { wd:Q26752 wdt:P407 ?obj . ?obj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phoenician', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Which is the genetic association of the murder method of José Ferrer?
 SPARQL: SELECT ?answer WHERE { wd:Q312098 wdt:P509 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'José Ferrer', 'p': 'murder method', 'o': '$y0'}}

 Q: What is the {human} for {chief executive officer} of {ExxonMobil}
 SPARQL:  select distinct ?obj where { wd:Q156238 wdt:P169 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ExxonMobil', 'p': 'CEO', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {start time} for {Grenoble} has {head of government} as {Éric Piolle} ?
 SPARQL: SELECT ?value WHERE { wd:Q1289 p:P6 ?s . ?s ps:P6 wd:Q16007948 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grenoble', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Éric Piolle'}}}

 Q: What is the artistic genre of the major works of Joyce Blau?
 SPARQL: SELECT ?answer WHERE { wd:Q3187221 wdt:P800 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joyce Blau', 'p': 'work', 'o': '$y0'}}

 Q: What is NSW Heritage database ID of Sydney Opera House?
 SPARQL: select distinct ?answer where { wd:Q45178 wdt:P3449 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sydney Opera House', 'p': 'NSW Heritage database ID', 'o': '?x0'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Radamel Falcao García} has {member of sports team} as {Manchester United F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q138172 p:P54 ?s . ?s ps:P54 wd:Q18656 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'games played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radamel Falcao', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Manchester United F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radamel Falcao', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Manchester United F.C.'}}}]

 Q: What is {Human Development Index} of {Bulgaria} that is {point in time} in {1980-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q219 p:P1081 ?s . ?s ps:P1081 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bulgaria', 'p': 'Human Development Index', 'o': '?x0', 't': '1980'}

 Q: What is award received of Robert Fisk that is point in time is 2000-0-0 ?
 SPARQL: SELECT ?obj WHERE { wd:Q310900 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Robert Fisk', 'p': 'award received', 'o': '?x0', 't': '2000'}

 Q: What is {deathplace} of {Bjørnstjerne Bjørnson}, that has {has local government areas} is {11th arrondissement of Paris} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46405 wdt:P20 ?answer . ?answer wdt:P150 wd:Q169293}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bjørnstjerne Bjørnson', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has local government areas', 'o': '11th arrondissement of Paris'}}

 Q: When did position held of Charles Stewart Parnell and elected in?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q317436 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Stewart Parnell', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Stewart Parnell', 'p': 'position held', 'o': '$y0'}}]

 Q: How many discoverers are there of mathematical induction?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q178377 wdt:P61 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'mathematical induction', 'p': 'discoverer', 'o': '?x0'}

 Q: What is {academic degree} and {academic major} of {{Sylvia Plath} has {educated at} as {Smith College}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q133054 p:P69 ?s . ?s ps:P69 wd:Q49204 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sylvia Plath', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Smith College'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sylvia Plath', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Smith College'}}}]

 Q: Which part of constellation orbits the Djorgovski 1?
 SPARQL: SELECT ?answer WHERE { wd:Q9207890 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Djorgovski 1', 'p': 'orbits', 'o': '$y0'}}

 Q: Which is the gene that encodes the Insulin, isoform CRA_a and that contains the word ins in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7187 . ?sbj wdt:P688 wd:Q21121462 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ins')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'encodes', 'o': 'Insulin, isoform CRA_a'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ins'}}

 Q: Which is C-SPAN person ID for Slavoj Žižek?
 SPARQL: select distinct ?answer where { wd:Q184750 wdt:P2190 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Slavoj Žižek', 'p': 'C-SPAN person ID', 'o': '?x0'}

 Q: How many are followed by the Kingdom of Georgia?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q154667 wdt:P156 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Kingdom of Georgia', 'p': 'followed by', 'o': '?x0'}

 Q: How many dome enclosures are there?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3158 wd:Q12493 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'enclosure', 'o': 'dome'}

 Q: what is the {proportion} for {Japan} has {ethnic group} as {Japanese people} ?
 SPARQL: SELECT ?value WHERE { wd:Q17 p:P172 ?s . ?s ps:P172 wd:Q161652 . ?s pq:P1107 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'proportion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Japan', 'p': 'people', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'people', 'o': 'Japanese'}}}

 Q: What is the {chemical compound} for {conjugate acid} of {water}
 SPARQL:  select distinct ?obj where { wd:Q283 wdt:P4147 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'water', 'p': 'conjugate acid', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Who is the male of Owain Glyndŵr, whose abbreviation is 男?
 SPARQL: SELECT ?answer WHERE { wd:Q317279 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'男'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Owain Glyndŵr', 'p': 'male', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'abbreviation', 'o': '男'}}

 Q: What is {co-founded by} of {published in journal} of {University panel faults cloning co-author.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q53254858 wdt:P1433 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University panel faults cloning co-author.', 'p': 'published in', 'o': '$y0'}}

 Q: Which is the automobile marque for the business division of Ford Motor Company?
 SPARQL:  select distinct ?obj where { wd:Q44294 wdt:P199 ?obj . ?obj wdt:P31 wd:Q17412622 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ford Motor Company', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile marque'}}

 Q: What is the {cultural area} with the {MAX(total imports)} whose {topic's main category} is {Category:Northern England}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q518261 . ?ent wdt:P2136 ?obj . ?ent wdt:P910 wd:Q30564613 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'imports', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cultural area', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': "topic's main category", 'o': 'Category:Northern England'}}}

 Q: What is {owner} of {motif} of {The Art Gallery of Jan Gildemeester Jansz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17337965 wdt:P180 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Art Gallery of Jan Gildemeester Jansz', 'p': 'motif', 'o': '$y0'}}

 Q: What is {head of government} of {Tucumán Province} that is {start time} is {2015-10-29} ?
 SPARQL: SELECT ?obj WHERE { wd:Q44829 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tucuman Province', 'p': 'head of government', 'o': '?x0', 't': '2015'}

 Q: How many employees worked at SpaceX in 2017?
 SPARQL: SELECT ?obj WHERE { wd:Q193701 p:P1128 ?s . ?s ps:P1128 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'SpaceX', 'p': 'employees', 'o': '?x0', 't': '2017'}

 Q: Name the municipality that diocese Roman Catholic Archdiocese of Barcelona and which that starts with the letter b
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15284 . ?sbj wdt:P708 wd:Q1364117 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diocese', 'o': 'Roman Catholic Archdiocese of Barcelona'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: What is <Scope.dk film ID> of <The Big Lebowski> ?
 SPARQL: select distinct ?answer where { wd:Q337078 wdt:P2518 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Big Lebowski', 'p': 'Scope.dk film ID', 'o': '?x0'}

 Q: What is <FR SIRET number> of <École Polytechnique> ?
 SPARQL: select distinct ?answer where { wd:Q273626 wdt:P3215 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Polytechnique', 'p': 'SIRET', 'o': '?x0'}

 Q: Is the number of speakers of the Awakatek more than 21.6?
 SPARQL: ASK WHERE { wd:Q35091 wdt:P1098 ?obj filter(?obj > 21.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Awakatek', 'p': 'number of speakers', 'o': '?x0', '?x0': '21.6'}

 Q: Who is film crew member for Alan Menken?
 SPARQL: select distinct ?answer where { ?answer wdt:P3092 wd:Q317272}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'film crew member', 'o': 'Alan Menken'}

 Q: Does the electric charge of the Majorana Fermion equal 0?
 SPARQL: ASK WHERE { wd:Q1065883 wdt:P2200 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Majorana fermion', 'p': 'electric charge', 'o': '?x0', '?x0': '0'}

 Q: Macauis located on what continent and in what country?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q14773 wdt:P30 ?ans_1 . wd:Q14773 wdt:P17 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Macau', 'p': 'continent', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Macau', 'p': 'country', 'o': '?x1'}]

 Q: Who {has children} of {actor} {The Counterfeit Traitor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q908713 wdt:P161 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Counterfeit Traitor', 'p': 'actor', 'o': '$y0'}}

 Q: What is {name in official language} of {part of constellation} of {Markarian 421} ?
 SPARQL: SELECT ?answer WHERE { wd:Q201968 wdt:P59 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name in official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Markarian 421', 'p': 'constellation', 'o': '$y0'}}

 Q: What is <guidance system> of <Global Positioning System> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P624 wd:Q18822}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'guidance system', 'o': 'Global Positioning System'}

 Q: Which Class IB flammable liquid has the most fusion enthalpy?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2066 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'fusion enthalpy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid'}}

 Q: How many {lakes on river} are for {Tagus river} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q14294 wdt:P469 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Tagus river', 'p': 'lakes on river', 'o': '?x0'}

 Q: What sports team did Magic Johnson belong to until the beginning of 1991?
 SPARQL: SELECT ?obj WHERE { wd:Q134183 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Magic Johnson', 'p': 'team', 'o': '?x0', 't': '1991'}

 Q: what is the {start time} for {Josephine Baker} has {country of citizenship} as {France} ?
 SPARQL: SELECT ?value WHERE { wd:Q151972 p:P27 ?s . ?s ps:P27 wd:Q142 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Josephine Baker', 'p': 'citizen of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizen of', 'o': 'France'}}}

 Q: what is the {valid in period} for {Messina} has {located in time zone} as {UTC+01:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q13666 p:P421 ?s . ?s ps:P421 wd:Q6655 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messina', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+01:00'}}}

 Q: what is the {object has role} for {Bonanza} has {cast member} as {Dan Blocker} ?
 SPARQL: SELECT ?value WHERE { wd:Q862187 p:P161 ?s . ?s ps:P161 wd:Q962647 . ?s pq:P3831 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonanza', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Dan Blocker'}}}

 Q: Is the electronegativity of gallium less than 2.172?
 SPARQL: ASK WHERE { wd:Q861 wdt:P1108 ?obj filter(?obj < 2.172) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'gallium', 'p': 'electronegativity', 'o': '?x0', '?x0': '2.172'}

 Q: What is the {chemical compound} for {drug used for treatment} of {skin cancer}
 SPARQL:  select distinct ?obj where { wd:Q192102 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'skin cancer', 'p': 'used for treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Which is the Croatian Olympic Committee athlete ID for Ivano Balić?
 SPARQL: select distinct ?answer where { wd:Q310526 wdt:P4541 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ivano Balić', 'p': 'Croatian Olympic Committee athlete ID', 'o': '?x0'}

 Q: What is {makes} of {product of} of {Cessna Model A} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3665640 wdt:P176 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'product', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cessna Model A', 'p': 'product of', 'o': '$y0'}}

 Q: "What is {namesake} of {Diffie–Hellman key exchange}, which has {prize awarded} is {Computer History Museum fellow} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q623447 wdt:P138 ?answer . ?answer wdt:P166 wd:Q29545180}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Diffie–Hellman key exchange', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'award', 'o': 'Computer History Museum fellow'}}

 Q: What is the alkane with the safety classification and labelling of NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response and which has the word "propane" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41581 . ?sbj wdt:P4952 wd:Q51139288 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'propane')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alkane', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'propane'}}

 Q: What is the {aircraft family} with the {MIN(maximum glide ratio)} whose {instance of} is {aircraft family}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056993 . ?ent wdt:P1470 ?obj . ?ent wdt:P31 wd:Q15056993} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'maximum glide ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: how many buildings are to be destroyed?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3082 wd:Q41176 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'destroyed', 'o': 'building'}

 Q: What is {synonym of this name} of {found in species} of {vascular tissue} ?
 SPARQL: SELECT ?answer WHERE { wd:Q968604 wdt:P703 ?X . ?X wdt:P1420 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'synonym of this name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'vascular tissue', 'p': 'found in species', 'o': '$y0'}}

 Q: What is the regulatory body of the signed language of Ramon Berenguer IV, Principe de Aragon y Count of Barcelona?
 SPARQL: SELECT ?answer WHERE { wd:Q319439 wdt:P1412 ?X . ?X wdt:P1018 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'regulatory body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ramon Berenguer IV', 'p': 'language', 'o': '$y0'}}

 Q: What country shares a border with Duisburg?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P47 wd:Q2100 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Duisburg'}

 Q: What is the topic's main template for international trade?
 SPARQL: select distinct ?answer where { wd:Q178803 wdt:P1424 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'international trade', 'p': "topic's main template", 'o': '?x0'}

 Q: What is {award received} of {Ravi Shankar} that is {for work} is {The Concert for Bangladesh} ?
 SPARQL: SELECT ?obj WHERE { wd:Q103774 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q1164558 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ravi Shankar', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Concert for Bangladesh'}}}

 Q: What is the etymology of Laplace transform whose place of death is Paris?
 SPARQL: SELECT ?answer WHERE { wd:Q199691 wdt:P138 ?answer . ?answer wdt:P20 wd:Q90}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Laplace transform', 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'place of death', 'o': 'Paris'}}

 Q: what is the {for work} for {Dalton Trumbo} has {nominated for} as {Academy Award for Best Story} ?
 SPARQL: SELECT ?value WHERE { wd:Q350666 p:P1411 ?s . ?s ps:P1411 wd:Q504298 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dalton Trumbo', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Story'}}}

 Q: Which is the monogram for Charles II of England?
 SPARQL: select distinct ?answer where { wd:Q122553 wdt:P1543 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles II of England', 'p': 'monogram', 'o': '?x0'}

 Q: Which is the time period of Menander I?
 SPARQL: select distinct ?answer where { wd:Q347878 wdt:P2348 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Menander I', 'p': 'time period', 'o': '?x0'}

 Q: What is the {ethnic group} for {indigenous to} of {Russian}
 SPARQL:  select distinct ?obj where { wd:Q7737 wdt:P2341 ?obj . ?obj wdt:P31 wd:Q41710 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian', 'p': 'indigenous to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnic group'}}

 Q: What is Karl von Frisch's Catalogus Professorum Rostochiensium ID?
 SPARQL: select distinct ?answer where { wd:Q60060 wdt:P2940 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Karl von Frisch', 'p': 'Catalogus Professorum Rostochiensium ID', 'o': '?x0'}

 Q: what is the {start time} for {Silvia Neid} has {member of sports team} as {SC Klinge Seckach} ?
 SPARQL: SELECT ?value WHERE { wd:Q289857 p:P54 ?s . ?s ps:P54 wd:Q2205479 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Silvia Neid', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'SC Klinge Seckach'}}}

 Q: What are the national library which start with the letter library
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22806 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'library')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national library'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'library'}}

 Q: What is the temperature of lake Valletta?
 SPARQL: SELECT ?answer WHERE { wd:Q23800 wdt:P206 ?X . ?X wdt:P2076 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valletta', 'p': 'lake', 'o': '$y0'}}

 Q: What is <The Vogue List ID> of <John Galliano> ?
 SPARQL: select distinct ?answer where { wd:Q313607 wdt:P3404 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Galliano', 'p': 'The Vogue List ID', 'o': '?x0'}

 Q: How many {musical conductor} are to/by {Zubin Mehta} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3300 wd:Q157635 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'musical conductor', 'o': 'Zubin Mehta'}

 Q: what is the {start time} for {Kharkiv Oblast} has {located in the administrative territorial entity} as {Ukraine} ?
 SPARQL: SELECT ?value WHERE { wd:Q170666 p:P131 ?s . ?s ps:P131 wd:Q212 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kharkiv Oblast', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Ukraine'}}}

 Q: What is {subitem of} of {history of France}, that has {operating speed} is {30.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7778 wdt:P1269 ?answer . ?answer wdt:P3086 ?x FILTER(contains(?x,'30.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of France', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operating speed', 'o': '30.0'}}

 Q: How many armaments are pistols?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P520 wd:Q1907525 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'armament', 'o': 'pistol'}

 Q: What destroyer has the largest draft?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q174736 . ?ent wdt:P2262 ?obj . ?ent wdt:P31 wd:Q174736 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'draft', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'destroyer'}}

 Q: In what division of MLB is the team owned by Branch Rickey found?
 SPARQL: SELECT ?answer WHERE { wd:Q126019 wdt:P54 ?answer . ?answer wdt:P118 wd:Q1163715}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Branch Rickey', 'p': 'team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'division', 'o': 'MLB'}}

 Q: Does the municipal chamber of Sao Bernardo do Campo have 0 constituencies?
 SPARQL: ASK WHERE { wd:Q56450224 wdt:P4253 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'municipal chamber of Sao Bernardo do Campo', 'p': 'number of constituencies', 'o': '?x0', '?x0': '0'}

 Q: What body of water is Warsaw near and in what is the time zone?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q270 wdt:P206 ?ans_1 . wd:Q270 wdt:P421 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Warsaw', 'p': 'body of water', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Warsaw', 'p': 'time zone', 'o': '?x1'}]

 Q: What is {sculptors} of {part of series} of {Patrick's Staycation/Walking the Plankton} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29565419 wdt:P179 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sculptor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Patrick's Staycation/Walking the Plankton", 'p': 'part of series', 'o': '$y0'}}

 Q: What is the {historical period} for {located on terrain feature} of {ancient Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P706 wd:Q1747689 . ?sbj wdt:P31 wd:Q11514315 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical period'}}

 Q: Does the Peugeot 107 have a wheelbase that is equal to 2340?
 SPARQL: ASK WHERE { wd:Q214229 wdt:P3039 ?obj filter(?obj = 2340) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Peugeot 107', 'p': 'wheelbase', 'o': '?x0', '?x0': '2340'}

 Q: What is HPIP ID for Elmina Castle ?
 SPARQL: select distinct ?answer where { wd:Q1438772 wdt:P5094 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Elmina Castle', 'p': 'HPIP ID', 'o': '?x0'}

 Q: What is Daniel Ellsberg's NYRB contributor ID?
 SPARQL: select distinct ?answer where { wd:Q431085 wdt:P5419 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Daniel Ellsberg', 'p': 'NYRB contributor ID', 'o': '?x0'}

 Q: When did Istanbul have a population of 14657434?
 SPARQL: SELECT ?value WHERE { wd:Q406 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'14657434')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Istanbul', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '14657434'}, 't': '?x0'}

 Q: Tell me a human who may be fictional that has the word cech in their name.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21070568 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'čech')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human who may be fictional'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'čech'}}

 Q: What is <relative to> of <queue> ?
 SPARQL: select distinct ?answer where { wd:Q220543 wdt:P2210 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'queue', 'p': 'relative to', 'o': '?x0'}

 Q: What is {tributary} of {body of water} of {Paramaribo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3001 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paramaribo', 'p': 'body of water', 'o': '$y0'}}

 Q: What is the {summit} for {participant of} of {Donald Trump}
 SPARQL:  select distinct ?obj where { wd:Q22686 wdt:P1344 ?obj . ?obj wdt:P31 wd:Q1072326 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Donald Trump', 'p': 'participant of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'summit'}}

 Q: What was Natalie Portman nominated for in 2011?
 SPARQL: SELECT ?obj WHERE { wd:Q37876 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Natalie Portman', 'p': 'nominated for', 'o': '?x0', 't': '2011'}

 Q: Tell me a specialty that starts with the letter w.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1047113 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Is the vehicle range of the Airbus A380 less than 12160.0?
 SPARQL: ASK WHERE { wd:Q5830 wdt:P2073 ?obj filter(?obj < 12160.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Airbus A380', 'p': 'vehicle range', 'o': '?x0', '?x0': '12160.0'}

 Q: What is {this taxon is a source of} of {main topic of list} of {List of mammals of Puerto Rico} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6627050 wdt:P360 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is a source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'list of mammals of Puerto Rico', 'p': 'list of', 'o': '$y0'}}

 Q: How many {statistical leader} are to/by {Lionel Messi} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3279 wd:Q615 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'statistical leader', 'o': 'Lionel Messi'}

 Q: What is the {type of quantum particle} with the {MAX(magnetic moment)} whose {subclass of} is {lepton}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2069 ?obj . ?ent wdt:P279 wd:Q82586 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'magnetic moment', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'lepton'}}}

 Q: what is the {start time} for {Alexios I Komnenos} has {position held} as {Byzantine emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q41600 p:P39 ?s . ?s ps:P39 wd:Q18577504 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexios I Komnenos', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Byzantine emperor'}}}

 Q: Give me {book of the Bible} that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29154430 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book of the Bible'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the muscle origin for human mandible?
 SPARQL: select distinct ?answer where { ?answer wdt:P3490 wd:Q16370}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'muscle origin', 'o': 'human mandible'}

 Q: Who is the chief executive officer of Sony starting April 1, 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q41187 p:P169 ?s . ?s ps:P169 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sony', 'p': 'chief executive officer', 'o': '?x0', 't': '2012'}

 Q: What is the {applies to jurisdiction} and the {office held by head of the organisation} of {United_States_Secret_Service} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q503224 wdt:P1001 ?ans_1 . wd:Q503224 wdt:P2388 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'United States Secret Service', 'p': 'applies to jurisdiction', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'United States Secret Service', 'p': 'office held by head of the organisation', 'o': '?x1'}]

 Q: What is the health specialty and medical examinations needed for Colorectal cancer?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q188874 wdt:P1995 ?ans_1 . wd:Q188874 wdt:P923 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'rectal cancer', 'p': 'health specialty', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'rectal cancer', 'p': 'medical examinations', 'o': '?x1'}]

 Q: Tell me incorporation whose name has the word geman in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25394665 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'german')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'incorporation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'german'}}

 Q: What is the {human} for {sibling} of {Silvio Berlusconi}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3373 wd:Q11860 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sibling', 'o': 'Silvio Berlusconi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: who is investor of Lawrence Summers ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1951 wd:Q317953}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'investor', 'o': 'Lawrence Summers'}

 Q: What is the country of origin and language of work of Catch-22?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q278208 wdt:P495 ?ans_1 . wd:Q278208 wdt:P407 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Catch-22', 'p': 'country of origin', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Catch-22', 'p': 'language of work', 'o': '?x1'}]

 Q: What what is American football team home venue Soldier Field and also which starts with letter c
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17156793 . ?sbj wdt:P115 wd:Q1132413 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'American football team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'home venue', 'o': 'Soldier Field'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {founders} of {worked at} of {Alexander McQueen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q207939 wdt:P108 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander McQueen', 'p': 'worked at', 'o': '$y0'}}

 Q: Give me {asymmetric warfare} that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q752673 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asymmetric warfare'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is {electoral district} and {elected in} of {{Malcolm Turnbull} has {position held} as {Member of the Australian House of Representatives}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q927550 p:P39 ?s . ?s ps:P39 wd:Q18912794 . ?s pq:P768 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Turnbull', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Turnbull', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Australian House of Representatives'}}}]

 Q: Were Turkic languages official language of Uyghur people in Mongol Empire?
 SPARQL: ASK WHERE { wd:Q12557 wdt:P37 wd:Q34090 . wd:Q12557 wdt:P37 wd:Q46118 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mongol Empire', 'p': 'official language', 'o': '?x0', '?x0': 'Turkic languages'}, {'h': 'IS', 'v': '?x1', 's': 'Mongol Empire', 'p': 'official language', 'o': '?x1', '?x1': 'Uyghur people'}]

 Q: What is the {whistleblower platform} for {developer} of {Julian Assange}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P178 wd:Q360 . ?sbj wdt:P31 wd:Q1344897 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Julian Assange', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'whistleblower platform'}}

 Q: What is Danish Bibliometric Research Indicator level for the Lancet ?
 SPARQL: select distinct ?answer where { wd:Q939416 wdt:P1240 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lancet', 'p': 'Danish Bibliometric Research Indicator level', 'o': '?x0'}

 Q: What is <solid solution series with> of <dolomite> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2155 wd:Q167741}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'solid solution series with', 'o': 'dolomite'}

 Q: Tell me aspect of music whose name has the word phrase  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15198957 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'phrase')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of music'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'phrase'}}

 Q: What is the {follows} and the {day in year for periodic occurrence} of {Christmas} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q19809 wdt:P155 ?ans_1 . wd:Q19809 wdt:P837 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Christmas', 'p': 'follows', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Christmas', 'p': 'day', 'o': '?x1'}]

 Q: tell me intensive quantityfacet of electricity starts with v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3387041 . ?sbj wdt:P1269 wd:Q12725 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intensive quantity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'electricity'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What are the studies of natural science ?
 SPARQL: select distinct ?answer where { wd:Q7991 wdt:P2578 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'natural science', 'p': 'studies', 'o': '?x0'}

 Q: What is the tributary of the bay of Santo Domingo?
 SPARQL: SELECT ?answer WHERE { wd:Q34820 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Santo Domingo', 'p': 'bay', 'o': '$y0'}}

 Q: what is the {end time} for {Charlemagne} has {spouse} as {Desiderata of the Lombards} ?
 SPARQL: SELECT ?value WHERE { wd:Q3044 p:P26 ?s . ?s ps:P26 wd:Q263474 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Desiderata of the Lombards'}}}

 Q: What is the treatment and result of hepatitis ?
 SPARQL: SELECT ?answer WHERE { wd:Q131742 wdt:P1542 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hepatitis', 'p': 'result', 'o': '$y0'}}

 Q: what is the {start time} for {George Weah} has {member of sports team} as {Al Jazira Club} ?
 SPARQL: SELECT ?value WHERE { wd:Q173139 p:P54 ?s . ?s ps:P54 wd:Q429630 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Weah', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Al Jazira Club'}}}

 Q: Which is the net profit for SAP SE?
 SPARQL: select distinct ?answer where { wd:Q552581 wdt:P2295 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'SAP SE', 'p': 'net profit', 'o': '?x0'}

 Q: What is National Heritage List for England number ofPalace of Westminster ?
 SPARQL: select distinct ?answer where { wd:Q62408 wdt:P1216 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Palace of Westminster', 'p': 'National Heritage List for England number', 'o': '?x0'}

 Q: What is the woman in Ernst Wilimowski whose acronym is чол?
 SPARQL: SELECT ?answer WHERE { wd:Q559779 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'чол'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ernst Wilimowski', 'p': 'man', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'acronym', 'o': 'чол'}}

 Q: What is the {metropolis} for {residence} of {Aung San Suu Kyi}
 SPARQL:  select distinct ?obj where { wd:Q36740 wdt:P551 ?obj . ?obj wdt:P31 wd:Q200250 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aung San Suu Kyi', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolis'}}

 Q: What is Laut.de artist ID for Blondie?
 SPARQL: select distinct ?answer where { wd:Q202741 wdt:P5356 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Blondie', 'p': 'Laut.de artist ID', 'o': '?x0'}

 Q: Which is the Iconclass notation of the aquarium?
 SPARQL: select distinct ?answer where { wd:Q45782 wdt:P1256 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'aquarium', 'p': 'Iconclass notation', 'o': '?x0'}

 Q: what is Colorado Sports Hall of Fame ID forJack Dempsey
 SPARQL: select distinct ?answer where { wd:Q313686 wdt:P4642 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jack Dempsey', 'p': 'Colorado Sports Hall of Fame ID', 'o': '?x0'}

 Q: what is the {instance of} for {Ghent Altarpiece} has {inception} as {1432-1-1} ?
 SPARQL: SELECT ?value WHERE { wd:Q734834 p:P571 ?s . ?s ps:P571 ?x filter(contains(YEAR(?x),'1432')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ghent Altarpiece', 'p': 'inception', 'o': '$y0'}}

 Q: What is the chef-lieu of Xia dynasty whose post code is 452470?
 SPARQL: SELECT ?answer WHERE { wd:Q169705 wdt:P36 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'452470'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Xia dynasty', 'p': 'chef-lieu', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'post code', 'o': '452470'}}

 Q: What is SBFI occupation code for truck driver?
 SPARQL: select distinct ?answer where { wd:Q508846 wdt:P1024 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'truck driver', 'p': 'SBFI occupation code', 'o': '?x0'}

 Q: What is <GujLit Person ID> of <Mahatma Gandhi> ?
 SPARQL: select distinct ?answer where { wd:Q1001 wdt:P4180 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mahatma Gandhi', 'p': 'GujLit Person ID', 'o': '?x0'}

 Q: When did child of Abigail Adams and date of birth?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}]

 Q: What is the {human} for {creator} of {Batman}
 SPARQL:  select distinct ?obj where { wd:Q2695156 wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Batman', 'p': 'created', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who gave the {type of taxon} of {higher taxon} of {×Triticale} ?
 SPARQL: SELECT ?answer WHERE { wd:Q380329 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of taxon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '×Triticale', 'p': 'higher taxon', 'o': '$y0'}}

 Q: Tell me me a ethnic group whose name consist of the word "sioux" and whose language used Sioux
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41710 . ?sbj wdt:P2936 wd:Q13268 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sioux')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnic group', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Sioux'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'sioux'}}

 Q: what is the {conferred by} for {Peter Scholze} has {award received} as {fellow} ?
 SPARQL: SELECT ?value WHERE { wd:Q98034 p:P166 ?s . ?s ps:P166 wd:Q1404101 . ?s pq:P1027 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conferred by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Scholze', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'fellow'}}}

 Q: Is the total liabilities of the Dalmoreprodukt equal to 1477000000?
 SPARQL: ASK WHERE { wd:Q4154217 wdt:P2138 ?obj filter(?obj = 1477000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Dalmoreprodukt', 'p': 'total liabilities', 'o': '?x0', '?x0': '1477000000'}

 Q: What is {academic major} and {academic degree} of {{Vladimir Nabokov} has {educated at} as {Trinity College}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q36591 p:P69 ?s . ?s ps:P69 wd:Q332342 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Nabokov', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Trinity College'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Nabokov', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Trinity College'}}}]

 Q: What is sports season of league or competition for college football ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3450 wd:Q1109032}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports season of league or competition', 'o': 'college football'}

 Q: Which means {armament} from {grenade} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P520 wd:Q173517}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'armament', 'o': 'grenade'}

 Q: what is the {point in time} for {Casey Affleck} has {nominated for} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q270730 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Casey Affleck', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}, 't': '?x0'}

 Q: What is the geographic region with the highest number of out of school children whose part of is Asia ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q82794 . ?ent wdt:P2573 ?obj . ?ent wdt:P361 wd:Q48 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of out of school children', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geographic region', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'part of', 'o': 'Asia'}}}

 Q: Which  is origin of the watercourse of Mittelland Canal ?
 SPARQL: select distinct ?answer where { wd:Q48480 wdt:P885 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mittelland Canal', 'p': 'origin of the watercourse', 'o': '?x0'}

 Q: What is the inverse of pleasure whose treatment is topiramate?
 SPARQL: SELECT ?answer WHERE { wd:Q208195 wdt:P461 ?answer . ?answer wdt:P2176 wd:Q221174}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pleasure', 'p': 'inverse', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'treatment', 'o': 'topiramate'}}

 Q: "What is {is in the Indian reserve of} of {Fujian}, which has {borders} of {Afghanistan} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q41705 wdt:P131 ?answer . ?answer wdt:P47 wd:Q889}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fujian', 'p': 'is in the Indian reserve of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Afghanistan'}}

 Q: What is the country with the highest median income whose member of is United Nations Educational, Scientific and Cultural Organization ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6256 . ?ent wdt:P3529 ?obj . ?ent wdt:P463 wd:Q7809 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'median income', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'United Nations Educational, Scientific and Cultural Organization'}}}

 Q: What is the position held by David Packard born at 1969-1-24?
 SPARQL: SELECT ?obj WHERE { wd:Q380484 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Packard', 'p': 'position held', 'o': '?x0', 't': '1969'}

 Q: Who was the winner of the Arlene Raven Award that was bestowed by the Women's Caucus for Art?
 SPARQL: SELECT ?answer WHERE { wd:Q4792169 wdt:P166 ?answer . ?answer wdt:P1027 wd:Q8030842}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arlene Raven', 'p': 'win', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bestowed by', 'o': "Women's Caucus for Art"}}

 Q: Is the apparent magnitude of the Crab Nebula equal to 6.72?
 SPARQL: ASK WHERE { wd:Q10934 wdt:P1215 ?obj filter(?obj = 6.72) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Crab Nebula', 'p': 'apparent magnitude', 'o': '?x0', '?x0': '6.72'}

 Q: Who is a graduate of Sam Rockwell, that has the location {40.7533 - 73.9905} ?
 SPARQL: SELECT ?answer WHERE { wd:Q316446 wdt:P69 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'40.7533 -73.9905'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sam Rockwell', 'p': 'graduate of', 'o': '?x0'}

 Q: who archipelago for official language of norwegian?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q9043 . ?sbj wdt:P31 wd:Q33837 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'no', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archipelago'}}

 Q: is iPhone XR carbon footprint less than 91.2?
 SPARQL: ASK WHERE { wd:Q56599334 wdt:P5991 ?obj filter(?obj < 91.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'iPhone XR', 'p': 'carbon footprint', 'o': '?x0', '?x0': '91.2'}

 Q: Which is the evaluation of the pulse?
 SPARQL: select distinct ?answer where { ?answer wdt:P5134 wd:Q191733}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'evaluation of', 'o': 'pulse'}

 Q: What are the  railroad line which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q728937 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railroad line'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {free software} for {programming language} of {PHP}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P277 wd:Q59 . ?sbj wdt:P31 wd:Q341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'written in', 'o': 'PHP', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'free software'}}

 Q: What is {residence} of {Lionel Trilling} that is {end time} is {1975-11-5} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1827287 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lionel Trilling', 'p': 'residence', 'o': '?x0', 't': '1975'}

 Q: What is {member of sports team} of {Alan Shearer} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q483583 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Shearer', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Shearer', 'p': 'team', 'o': '$y0'}}]

 Q: Whicn means {parent of this hybrid, breed, or cultivar} originated {Oryza sativa} ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1531 wd:Q161426}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent of this hybrid, breed, or cultivar', 'o': 'Oryza sativa'}

 Q: What is the {sporting event} for {competition class} of {high jump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2094 wd:Q165704 . ?sbj wdt:P31 wd:Q16510064 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'competition class', 'o': 'high jump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sporting event'}}

 Q: What is Arminius' middle name in Latin script?
 SPARQL: SELECT ?answer WHERE { wd:Q68880 wdt:P735 ?answer . ?answer wdt:P282 wd:Q8229}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arminius', 'p': 'middle name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'script', 'o': 'Latin script'}}

 Q: what is the {end cause} for {Henry II of England} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q102140 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P1534 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry II of England', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: Did {Mel_Gibson} {partner} {Oksana Grigorieva}?
 SPARQL: ASK WHERE { wd:Q42229 wdt:P451 wd:Q4149360 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mel Gibson', 'p': 'partner', 'o': '?x0', '?x0': 'Oksana Grigorieva'}]

 Q: Are there 2 parts to the work of art, "Schwanda the Bagpiper"
 SPARQL: ASK WHERE { wd:Q80934 wdt:P2635 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Schwanda the Bagpiper', 'p': 'number of parts of this work', 'o': '?x0', '?x0': '2'}

 Q: Septuagint is an edition of which literary work ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P747 wd:Q29334 . ?sbj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'Septuagint', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: Which is the number of pages for The Tale of Peter Rabbit?
 SPARQL: select distinct ?answer where { wd:Q580463 wdt:P1104 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Tale of Peter Rabbit', 'p': 'number of pages', 'o': '?x0'}

 Q: When did member of sports team of Andriy Shevchenko and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41244 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andriy Shevchenko', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: How many {public holiday} are for {Israel} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q801 wdt:P832 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Israel', 'p': 'public holiday', 'o': '?x0'}

 Q: What is {speakers of language} of {language spoken} of {L. Ron Hubbard} ?
 SPARQL: SELECT ?answer WHERE { wd:Q216896 wdt:P1412 ?X . ?X wdt:P1098 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'speakers of language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'L. Ron Hubbard', 'p': 'language spoken', 'o': '$y0'}}

 Q: How many patron saints are with the {Gabriel} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P417 wd:Q81989 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Gabriel'}

 Q: What is the group of chemical substances with the lowest ultimate tensile strength whose topic's main category is Category:Nylon ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q17339814 . ?ent wdt:P5479 ?obj . ?ent wdt:P910 wd:Q55272807} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'ultimate tensile strength', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group of chemical substances', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': "topic's main category", 'o': 'Category:Nylon'}}}

 Q: what is the {for work} for {Peter Carey} has {award received} as {Miles Franklin Literary Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q313254 p:P166 ?s . ?s ps:P166 wd:Q996 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Carey', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Miles Franklin Literary Award'}}}

 Q: What is {nominated for} of {The Social Network} that is {nominee} is {Scott Rudin} ?
 SPARQL: SELECT ?obj WHERE { wd:Q185888 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q461529 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Social Network', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Scott Rudin'}}}

 Q: What is the subitem of the history of Indiana that is bordered by the state of Michigan?
 SPARQL: SELECT ?answer WHERE { wd:Q11287624 wdt:P1269 ?answer . ?answer wdt:P47 wd:Q1166}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Indiana', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bordered by', 'o': 'Michigan'}}

 Q: What position held by Fritz Lang was succeeded by Olivia de Havilland?
 SPARQL: SELECT ?obj WHERE { wd:Q19504 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q95068 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fritz Lang', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'succeeded by', 'o': 'Olivia de Havilland'}}}

 Q: Which is the radius of Earth?
 SPARQL: select distinct ?answer where { wd:Q2 wdt:P2120 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Earth', 'p': 'radius', 'o': '?x0'}

 Q: Tell me hypothesis whose name has the word substratum in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41719 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'substratum')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hypothesis'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'substratum'}}

 Q: Which stratovolcano has the most topographic prominence?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q169358 . ?ent wdt:P2660 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'topographic prominence', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stratovolcano'}}

 Q: What is {notable books} of {Francis Ford Coppola}, that has {nomination received} is {Academy Award for Best Writing, Adapted Screenplay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q56094 wdt:P800 ?answer . ?answer wdt:P1411 wd:Q107258}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Francis Ford Coppola', 'p': 'notable books', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'nomination received', 'o': 'Academy Award for Best Writing, Adapted Screenplay'}}

 Q: What is  in the TLG author ID of Thucydides ?
 SPARQL: select distinct ?answer where { wd:Q41683 wdt:P3576 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thucydides', 'p': 'TLG author ID', 'o': '?x0'}

 Q: Name the inventor of deuterium who worked at Columbia University.
 SPARQL: SELECT ?answer WHERE { wd:Q102296 wdt:P61 ?answer . ?answer wdt:P108 wd:Q49088}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'deuterium', 'p': 'inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worked at', 'o': 'Columbia University'}}

 Q: Give me {film production company} that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1762059 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film production company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {chronology of topic} of {based in} of {Watsons, Ontario} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7974891 wdt:P131 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chronology of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Watsons, Ontario', 'p': 'in', 'o': '$y0'}}

 Q: How many publications are published in The Economist?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1433 wd:Q180089 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'The Economist'}

 Q: What is the county seat of Naypyidaw, which has a CPI inflation rate of 8.9?
 SPARQL: SELECT ?answer WHERE { wd:Q37400 wdt:P1376 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'8.9'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Naypyidaw', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '8.9'}}

 Q: Jim Henson was the director of which film?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q191037 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Jim Henson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the {type of quantum particle} for {antiparticle} of {photon}
 SPARQL:  select distinct ?obj where { wd:Q3198 wdt:P2152 ?obj . ?obj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'photon', 'p': 'antiparticle', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: How many will be replaced by the Fatimid caliphate?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1366 wd:Q160307 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Fatimid caliphate'}

 Q: How many movies have Georges Méliès as the production designer?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2554 wd:Q152272 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production designer', 'o': 'Georges Méliès'}

 Q: What is the {human} for {professional or sports partner} of {Kristi Yamaguchi}
 SPARQL:  select distinct ?obj where { wd:Q237651 wdt:P1327 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kristi Yamaguchi', 'p': 'sports partner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Was Benedict Cumberbatch nominated for an Evening Standard Award?
 SPARQL: ASK WHERE { wd:Q244674 wdt:P1411 wd:Q5416631 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Benedict Cumberbatch', 'p': 'nominated for', 'o': '?x0', '?x0': 'Evening Standard Award'}]

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: What is the language official for Caucasian Albania , that comes before Persian?
 SPARQL: SELECT ?answer WHERE { wd:Q177076 wdt:P37 ?answer . ?answer wdt:P156 wd:Q9168}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Caucasian Albania', 'p': 'language official', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'comes before', 'o': 'Persian'}}

 Q: Who is the co-driver for Sébastien Ogier?
 SPARQL: select distinct ?answer where { wd:Q368793 wdt:P2095 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sébastien Ogier', 'p': 'co-driver', 'o': '?x0'}

 Q: What is <Scottish Poetry Library poet ID> of <James Hogg> ?
 SPARQL: select distinct ?answer where { wd:Q941810 wdt:P5470 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Hogg', 'p': 'Scottish Poetry Library poet ID', 'o': '?x0'}

 Q: Mention the predecessor and the successor of Star Wars Episode VI: Return of the Jedi in Star Wars series
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q181803 p:P179 ?s . ?s ps:P179 wd:Q22092344 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'predecessor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Return of the Jedi', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'successor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Return of the Jedi', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Star Wars'}}}]

 Q: What is {guilty of} of {executive power headed by} of {Munich} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1726 wdt:P6 ?X . ?X wdt:P1399 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'guilty of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Munich', 'p': 'executive power headed by', 'o': '$y0'}}

 Q: Give me {unit of energy} that contains the word {zettajoule} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2916980 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zettajoule')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of energy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zettajoule'}}

 Q: Is the refractive index of silver chloride equal to 2.0224?
 SPARQL: ASK WHERE { wd:Q216918 wdt:P1109 ?obj filter(?obj = 2.0224) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'silver chloride', 'p': 'refractive index', 'o': '?x0', '?x0': '2.0224'}

 Q: What is the start time for Axel Springer, husband of Martha Else Meyer?
 SPARQL: SELECT ?value WHERE { wd:Q216183 p:P26 ?s . ?s ps:P26 wd:Q1903037 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Axel Springer', 'p': 'husband', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'husband', 'o': 'Martha Else Meyer'}}}

 Q: The conjugate acid of ammonia has what chemical compound?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q4087 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'ammonia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: The vici.org ID of Palmyra is?
 SPARQL: select distinct ?answer where { wd:Q5747 wdt:P1481 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Palmyra', 'p': 'vici.org ID', 'o': '?x0'}

 Q: Which is the Species Profile and Threats Database ID of numbat?
 SPARQL: select distinct ?answer where { wd:Q242419 wdt:P2455 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'numbat', 'p': 'Species Profile and Threats Database ID', 'o': '?x0'}

 Q: What is {birthdate} of {discoverer of} of {permaculture} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4572 wdt:P61 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birthdate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'permaculture', 'p': 'discoverer', 'o': '$y0'}}

 Q: What award did Lise Meitner receive in 1960 ?
 SPARQL: SELECT ?obj WHERE { wd:Q56189 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1960')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lise Meitner', 'p': 'award', 'o': '?x0', 't': '1960'}

 Q: What is the {London Underground station} with the {MIN(patronage)} whose {connecting line} is {District line}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q14562709 . ?ent wdt:P3872 ?obj . ?ent wdt:P81 wd:Q211265} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'passengers', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'London Underground station', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'connecting line', 'o': 'District line'}}}

 Q: What is {total fertility rate} of {Solomon Islands} that is {point in time} is {2004-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q685 p:P4841 ?s . ?s ps:P4841 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Solomon Islands', 'p': 'total fertility rate', 'o': '?x0', 't': '2004'}

 Q: What is {is in the administrative region of} of {graduate of} of {William M. Bass} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2579797 wdt:P69 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William M. Bass', 'p': 'graduate of', 'o': '$y0'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Clarence Seedorf} has {member of sports team} as {Inter Milan}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q484909 p:P54 ?s . ?s ps:P54 wd:Q631 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clarence Seedorf', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Inter Milan'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clarence Seedorf', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Inter Milan'}}}]

 Q: What is {twinned administrative body} of {Ōsaka Prefecture} that is {start time} is {1987-7-21} ?
 SPARQL: SELECT ?obj WHERE { wd:Q122723 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1987')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Osaka Prefecture', 'p': 'twinned administrative body', 'o': '?x0', 't': '1987'}

 Q: tell me cattle breed which name has the word wagtu in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12045585 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wagyu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cattle breed'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wagyu'}}

 Q: What is USATF athlete ID for Ashton Eaton ?
 SPARQL: select distinct ?answer where { wd:Q1789 wdt:P3926 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ashton Eaton', 'p': 'USATF athlete ID', 'o': '?x0'}

 Q: What is the {minor basilica} for {place of burial} of {Anthony of Padua}
 SPARQL:  select distinct ?obj where { wd:Q167477 wdt:P119 ?obj . ?obj wdt:P31 wd:Q120560 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anthony of Padua', 'p': 'burial place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'minor basilica'}}

 Q: What is Rfam ID for transfer RNA ?
 SPARQL: select distinct ?answer where { wd:Q201448 wdt:P3523 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'transfer RNA', 'p': 'Rfam ID', 'o': '?x0'}

 Q: what is the {point in time} for {Gerard Reve} has {award received} as {Prijs der Nederlandse Letteren} ?
 SPARQL: SELECT ?value WHERE { wd:Q364153 p:P166 ?s . ?s ps:P166 wd:Q2063896 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gerard Reve', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Prijs der Nederlandse Letteren'}, 't': '?x0'}

 Q: Tell me the name of armed forces which starts with "w"
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q772547 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'armed forces'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which constellation includes the star NGC 6723 ?
 SPARQL: SELECT ?answer WHERE { wd:Q612606 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NGC 6723', 'p': 'star', 'o': '$y0'}}

 Q: What is {size} of {hometown} of {Rashi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26456 wdt:P551 ?X . ?X wdt:P2046 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'size', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rashi', 'p': 'hometown', 'o': '$y0'}}

 Q: What is {member of sports team} of {Landon Donovan} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Landon Donovan', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Landon Donovan', 'p': 'team', 'o': '$y0'}}]

 Q: What is {disease treated} of {niacin}, that has {used for treatment} is {cerivastatin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q134658 wdt:P2175 ?answer . ?answer wdt:P2176 wd:Q423439}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'niacin', 'p': 'disease treated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used for treatment', 'o': 'cerivastatin'}}

 Q: What premier of Ontario was born on 1953-5-21?
 SPARQL: SELECT ?answer WHERE { wd:Q1904 wdt:P6 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1953'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ontario', 'p': 'premier', 'o': '?x0', 't': '1953'}

 Q: what is the {start time} for {Republic of Dagestan} has {head of government} as {Vladimir Vasilyev} ?
 SPARQL: SELECT ?value WHERE { wd:Q5118 p:P6 ?s . ?s ps:P6 wd:Q4104566 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Republic of Dagestan', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Vladimir Vasilyev'}}}

 Q: Which is the FACR player ID of Josef Bican?
 SPARQL: select distinct ?answer where { wd:Q352017 wdt:P3050 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Josef Bican', 'p': 'FACR player ID', 'o': '?x0'}

 Q: What is {commodity} of {subsidiary entities} of {Harman International Industries} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1585599 wdt:P355 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'commodity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harman International Industries', 'p': 'subsidiary', 'o': '$y0'}}

 Q: what is the {for work} for {David Fincher} has {award received} as {BAFTA Award for Best Direction} ?
 SPARQL: SELECT ?value WHERE { wd:Q184903 p:P166 ?s . ?s ps:P166 wd:Q787131 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Fincher', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'BAFTA Award for Best Direction'}}}

 Q: Which is the GDPR data controller for the product or material produced by Facebook?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q355 . ?sbj wdt:P31 wd:Q59859818 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'Facebook', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'data controller'}}

 Q: Tell me the version, edition or translation that starts with "K".
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3331189 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'к')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'edition'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'к'}}

 Q: What is the citizenship of Henry Cavendish whose end cause is Acts of Union 1800?
 SPARQL: SELECT ?obj WHERE { wd:Q131733 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P1534 wd:Q343100 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'citizenship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Cavendish', 'p': 'citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'end cause', 'o': 'Acts of Union 1800'}}}

 Q: How many architects are by Buckminster Fuller
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P84 wd:Q102289 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Buckminster Fuller'}

 Q: What is the file extension for Prolog?
 SPARQL: select distinct ?answer where { wd:Q163468 wdt:P1195 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Prolog', 'p': 'file extension', 'o': '?x0'}

 Q: How many {lake inflows} are to/by {Irtysh river} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P200 wd:Q128102 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'inflows', 'o': 'Irtysh'}

 Q: What is Vision of Britain place ID for Isles of Scilly ?
 SPARQL: select distinct ?answer where { wd:Q180209 wdt:P3616 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Isles of Scilly', 'p': 'Vision of Britain place ID', 'o': '?x0'}

 Q: Which is the inner planet that is a child astronomical body of Mir?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q48604 . ?sbj wdt:P31 wd:Q3504248 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Mir', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inner planet'}}

 Q: Who was the head of government of Montreuil in 1971?
 SPARQL: SELECT ?obj WHERE { wd:Q193370 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1971')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Montreuil', 'p': 'head of government', 'o': '?x0', 't': '1971'}

 Q: What is the {cemetery} for {religion} of {United Methodist Church}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P140 wd:Q329646 . ?sbj wdt:P31 wd:Q39614 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'United Methodist Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cemetery'}}

 Q: When did Fujitsu have a total revenue of 5.0317e + 10?
 SPARQL: SELECT ?value WHERE { wd:Q186394 p:P2139 ?s . ?s ps:P2139 ?x filter(contains(?x,'5.0317e+10')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Fujitsu', 'p': 'total revenue', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'total revenue', 'o': '5.0317e+10'}, 't': '?x0'}

 Q: what is the {replaces} for {José Mujica} has {position held} as {President pro tempore of the Union of South American Nations} ?
 SPARQL: SELECT ?value WHERE { wd:Q9094 p:P39 ?s . ?s ps:P39 wd:Q3068962 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jose Mujica', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President pro tempore of the Union of South American Nations'}}}

 Q: What is the {oxyanion} for {conjugate acid} of {nitric acid}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q83320 . ?sbj wdt:P31 wd:Q3269344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'nitric acid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'oxyanion'}}

 Q: What is <oath made by> of <Aleksandr Medved> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P543 wd:Q435761}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'oath made by', 'o': 'Aleksandr Medved'}

 Q: Who is the diplomatic relations citizen of Kitty Wells
 SPARQL: SELECT ?answer WHERE { wd:Q272913 wdt:P27 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kitty Wells', 'p': 'citizen of', 'o': '$y0'}}

 Q: What is {agent} of {participated in conflict} of {Lajos Mórocz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47462699 wdt:P607 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'agent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lajos Mórocz', 'p': 'conflict', 'o': '$y0'}}

 Q: What is <cause of destruction> of <flood> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P770 wd:Q8068}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of destruction', 'o': 'flood'}

 Q: Give the type of quantum particle with the lowest gyromagnetic ratio which has weak interaction?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2222 ?obj . ?ent wdt:P517 wd:Q11418} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'gyromagnetic ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'weak interaction'}}}

 Q: What was Charles Barkley award received for All-NBA Team?
 SPARQL: SELECT ?value WHERE { wd:Q192707 p:P166 ?s . ?s ps:P166 wd:Q674359 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Charles Barkley', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'All-NBA Team'}, 't': '?x0'}

 Q: what is the {number of points/goals/set scored} for {Gianluigi Buffon} has {member of sports team} as {Italy national under-23 football team} ?
 SPARQL: SELECT ?value WHERE { wd:Q68060 p:P54 ?s . ?s ps:P54 wd:Q3873569 . ?s pq:P1351 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'score for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gianluigi Buffon', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Italy national under-23 football team'}}}

 Q: What city became Guanajuato's sister city on November 6, 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q46475 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Guanajuato', 'p': 'sister city', 'o': '?x0', 't': '2014'}

 Q: What is number of seats for United States House of Representatives ?
 SPARQL: select distinct ?answer where { wd:Q11701 wdt:P1342 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'United States House of Representatives', 'p': 'number of seats', 'o': '?x0'}

 Q: What is {result} of {cellulose}, that has {route of administration} is {eye contact} ?
 SPARQL: SELECT ?answer WHERE { wd:Q80294 wdt:P1542 ?answer . ?answer wdt:P636 wd:Q21074571}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cellulose', 'p': 'effect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'route of administration', 'o': 'eye contact'}}

 Q: What is the shortest duration color film?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11424 . ?ent wdt:P2047 ?obj . ?ent wdt:P462 wd:Q22006653} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'duration', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'color', 'o': 'color'}}}

 Q: Which golf course with the highest par is in California?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1048525 . ?ent wdt:P3530 ?obj . ?ent wdt:P131 wd:Q99 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'par', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'golf course', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'California'}}}

 Q: What is {position held} of {Robert Bork} that is {replaced by} is {Wade H. McCree} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1365780 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q2538688 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Bork', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Wade H. McCree'}}}

 Q: What is the {art genre} for {genre} of {David Blaine}
 SPARQL:  select distinct ?obj where { wd:Q353983 wdt:P136 ?obj . ?obj wdt:P31 wd:Q1792379 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Blaine', 'p': 'genre', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art genre'}}

 Q: What is {mass} of {general manager} of {Montreal Canadiens} ?
 SPARQL: SELECT ?answer WHERE { wd:Q188143 wdt:P505 ?X . ?X wdt:P2067 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'weight', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Montreal Canadiens', 'p': 'general manager', 'o': '$y0'}}

 Q: derive me that wikimedia set index article which starts with the letter t in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15623926 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'set index article'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is <destroyed> of <infrastructure> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3082 wd:Q121359}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'destroyed', 'o': 'infrastructure'}

 Q: What is the informed by of the film script by The Elevator?
 SPARQL: SELECT ?answer WHERE { wd:Q7731771 wdt:P58 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'informed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Elevator', 'p': 'film script by', 'o': '$y0'}}

 Q: What is the by-product of combustion?
 SPARQL: select distinct ?answer where { ?answer wdt:P2822 wd:Q133235}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'by-product of', 'o': 'combustion'}

 Q: What was Ben Bernanke a member of when he left in June of 2005?
 SPARQL: SELECT ?obj WHERE { wd:Q201795 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ben Bernanke', 'p': 'member of', 'o': '?x0', 't': '2005'}

 Q: What is Marine Regions Geographic ID for Timor Sea?
 SPARQL: select distinct ?answer where { wd:Q131418 wdt:P3006 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Timor Sea', 'p': 'Marine Regions Geographic ID', 'o': '?x0'}

 Q: Which is the outcome of using treatment for chemotherapy?
 SPARQL: SELECT ?answer WHERE { wd:Q974135 wdt:P1542 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'chemotherapy', 'p': 'outcome', 'o': '$y0'}}

 Q: Did {Education} {studied by} {social work}?
 SPARQL: ASK WHERE { wd:Q8434 wdt:P2579 wd:Q205398 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'education', 'p': 'studied by', 'o': '?x0', '?x0': 'social work'}]

 Q: What is the {system on a chip} with the {MAX(clock speed)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q610398 . ?ent wdt:P2149 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'clock speed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'system on a chip'}}

 Q: When will Shandong have a population of 9.57931e+07?
 SPARQL: SELECT ?value WHERE { wd:Q43407 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'9.57931e+07')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Shandong', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '9.57931e+07'}, 't': '?x0'}

 Q: What is the {ship} for {manufacturer} of {Dutch East India Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q159766 . ?sbj wdt:P31 wd:Q11446 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Dutch East India Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ship'}}

 Q: Which is the gene for the genetic association with lung cancer?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2293 wd:Q47912 . ?sbj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'lung cancer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: What is the headquarters of the International Hydrographic Organization that has mayor Serge Telle?
 SPARQL: SELECT ?answer WHERE { wd:Q233611 wdt:P159 ?answer . ?answer wdt:P6 wd:Q3479546}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'International Hydrographic Organization', 'p': 'headquarters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mayor', 'o': 'Serge Telle'}}

 Q: what is the {start time} for {Mahmoud Abbas} has {position held} as {President of the State of Palestine} ?
 SPARQL: SELECT ?value WHERE { wd:Q127998 p:P39 ?s . ?s ps:P39 wd:Q3911022 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahmoud Abbas', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the State of Palestine'}}}

 Q: Is the female population of the Yerranderie equal to 0.0?
 SPARQL: ASK WHERE { wd:Q8052661 wdt:P1539 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Yerranderie', 'p': 'female population', 'o': '?x0', '?x0': '0.0'}

 Q: Was Helen_of_Troy spouse Paris and Pandarus?
 SPARQL: ASK WHERE { wd:Q164061 wdt:P26 wd:Q167646 . wd:Q164061 wdt:P26 wd:Q1057384 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Helen', 'p': 'spouse', 'o': '?x0', '?x0': 'Paris'}, {'h': 'IS', 'v': '?x1', 's': 'Helen', 'p': 'spouse', 'o': '?x1', '?x1': 'Pandarus'}]

 Q: Who is the head coach of Arsenal F.C.?
 SPARQL: select distinct ?answer where { wd:Q9617 wdt:P286 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arsenal F.C.', 'p': 'head coach', 'o': '?x0'}

 Q: What is {has boroughs} of {birth place} of {Zhao Tuo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q701895 wdt:P19 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has boroughs', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zhao Tuo', 'p': 'birth place', 'o': '$y0'}}

 Q: What are the religious text which start with the letter tohorot
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179461 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tohorot')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tohorot'}}

 Q: what is the {start time} for {Saddam Hussein} has {educated at} as {Cairo  University} ?
 SPARQL: SELECT ?value WHERE { wd:Q1316 p:P69 ?s . ?s ps:P69 wd:Q194445 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saddam Hussein', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Cairo University'}}}

 Q: What are theartistic theme which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1406161 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'artistic theme'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is Wikipedia's F-Droid package?
 SPARQL: select distinct ?answer where { wd:Q52 wdt:P3597 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wikipedia', 'p': 'F-Droid package', 'o': '?x0'}

 Q: What is {uses} of {Dick Cheney} that is {start time} is {2001-6-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q48259 p:P2283 ?s . ?s ps:P2283 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dick Cheney', 'p': 'uses', 'o': '?x0', 't': '2001'}

 Q: Is Steve's specific age inside the fictional universe 18?
 SPARQL: ASK WHERE { wd:Q62545285 wdt:P6249 ?obj filter(?obj = 18) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Steve', 'p': 'specific age inside fictional universe', 'o': '?x0', '?x0': '18'}

 Q: What is the {group of chemical substances} with the {MAX(ultimate tensile strength)} whose {instance of} is {group of chemical substances}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q17339814 . ?ent wdt:P5479 ?obj . ?ent wdt:P31 wd:Q17339814 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ultimate tensile strength', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group of chemical substances'}}

 Q: What is the {place of birth} and the {place of death} of {Constantine_the_Great} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8413 wdt:P19 ?ans_1 . wd:Q8413 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Constantine the Great', 'p': 'place of birth', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Constantine the Great', 'p': 'place of death', 'o': '?x1'}]

 Q: What is the award of Al Gore whose 1st place medalist is David Trimble?
 SPARQL: SELECT ?answer WHERE { wd:Q19673 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q192556}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Al Gore', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': '1st place medalist', 'o': 'David Trimble'}}

 Q: Is water density more than 1.1998074?
 SPARQL: ASK WHERE { wd:Q283 wdt:P2054 ?obj filter(?obj > 1.1998074) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'water', 'p': 'density', 'o': '?x0', '?x0': '1.1998074'}

 Q: In the Mauna Kea Observatories, which asteroid had the maximum radius?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3863 . ?ent wdt:P2120 ?obj . ?ent wdt:P65 wd:Q831790 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'radius', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'site of astronomical discovery', 'o': 'Mauna Kea Observatories'}}}

 Q: "Where is {location born} of {Mark the Evangelist}, which has {timeline of topic} is {history of Palestine} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q31966 wdt:P19 ?answer . ?answer wdt:P2184 wd:Q556079}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mark the Evangelist', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'timeline of topic', 'o': 'history of Palestine'}}

 Q: Is the maximum frequency of audible sound of the sheep less than 24000.0?
 SPARQL: ASK WHERE { wd:Q7368 wdt:P3465 ?obj filter(?obj < 24000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'sheep', 'p': 'maximum frequency of audible sound', 'o': '?x0', '?x0': '24000.0'}

 Q: When did the South Sudan have a total fertility rate of 5.969?
 SPARQL: SELECT ?value WHERE { wd:Q958 p:P4841 ?s . ?s ps:P4841 ?x filter(contains(?x,'5.969')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'South Sudan', 'p': 'total fertility rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'total fertility rate', 'o': '5.969'}, 't': '?x0'}

 Q: What is the affiliation of the Hebrew University of Jerusalem?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1416 wd:Q174158 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'Hebrew University of Jerusalem'}

 Q: Give me {web search engine} that starts with {'y'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4182287 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'search engine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Did Colin Farrell receive his education at Quinnipiac University School of Law?
 SPARQL: ASK WHERE { wd:Q172035 wdt:P69 wd:Q7272316 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Colin Farrell', 'p': 'education', 'o': '?x0', '?x0': 'Quinnipiac University School of Law'}]

 Q: What is {name in native language} of {Park Geun-hye} that is {writing system} is {Hanja} ?
 SPARQL: SELECT ?obj WHERE { wd:Q138048 p:P1559 ?s . ?s ps:P1559 ?obj . ?s pq:P282 wd:Q485619 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name in native language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'name in native language', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'writing system', 'o': 'Hanja'}}}

 Q: What is {pronunciation audio} of {ingredient} of {marmalade} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5834964 wdt:P186 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'marmalade', 'p': 'ingredient', 'o': '$y0'}}

 Q: Is the flash point of lead azide more than 396.0?
 SPARQL: ASK WHERE { wd:Q111213 wdt:P2128 ?obj filter(?obj > 396.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'lead azide', 'p': 'flash point', 'o': '?x0', '?x0': '396.0'}

 Q: what is the {point in time} for {University of Leeds} has {follows} as {Yorkshire College} ?
 SPARQL: SELECT ?value WHERE { wd:Q503424 p:P155 ?s . ?s ps:P155 wd:Q24637302 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'University of Leeds', 'p': 'follows', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'Yorkshire College'}, 't': '?x0'}

 Q: What is {relative} of {Ferdinand II of Aragon} that is {type of kinship} is {son-in-law} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12860 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1039 wd:Q3752578 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son-in-law', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ferdinand II of Aragon', 'p': 'son-in-law', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'son-in-law'}}}

 Q: What is {prize money} and {together with} of {{Henry Dunant} has {award received} as {Nobel Peace Prize}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q12091 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P2121 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Nobel Peace Prize'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'together with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Nobel Peace Prize'}}}]

 Q: Which is the HelveticArchives ID of Glasgow?
 SPARQL: select distinct ?answer where { wd:Q4093 wdt:P1255 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Glasgow', 'p': 'HelveticArchives ID', 'o': '?x0'}

 Q: Are the ballots cast in the Catalan regional election 2015 in Pontons more than 225.6?
 SPARQL: ASK WHERE { wd:Q44910740 wdt:P1868 ?obj filter(?obj > 225.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Catalan regional election 2015 in Pontons', 'p': 'ballots cast', 'o': '?x0', '?x0': '225.6'}

 Q: What is {followed by} and {follows} of {{Communist Party of China} has {chairperson} as {Hu Yaobang}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99850 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Hu Yaobang'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Hu Yaobang'}}}]

 Q: What is <Red Bull athlete ID> of <Felix Baumgartner> ?
 SPARQL: select distinct ?answer where { wd:Q4203 wdt:P3883 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Felix Baumgartner', 'p': 'Red Bull athlete ID', 'o': '?x0'}

 Q: What are the based on and the influenced by of Linux?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q388 wdt:P144 ?ans_1 . wd:Q388 wdt:P737 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Linux', 'p': 'based on', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Linux', 'p': 'influenced by', 'o': '?x1'}]

 Q: who is marry accused of Kirkorov vs Aroyan Scandal?
 SPARQL: SELECT ?answer WHERE { wd:Q4421556 wdt:P710 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'marry', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kirkorov vs Aroyan Scandal', 'p': 'accused', 'o': '$y0'}}

 Q: Which is the Nederlands Soortenregister ID of Castor?
 SPARQL: select distinct ?answer where { wd:Q47542 wdt:P3405 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Castor', 'p': 'Nederlands Soortenregister ID', 'o': '?x0'}

 Q: What is {connected with} of {vein}, that has {pronunciation audio} is {Ta-இதயம்.ogg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9609 wdt:P2789 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'Ta-இதயம்.ogg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'vein', 'p': 'connected with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pronunciation audio', 'o': 'ta-இதயம்.ogg'}}

 Q: When was Sevastopol placed in the administrative territorial entity of Ukrainian Soviet Socialist Republic?
 SPARQL: SELECT ?value WHERE { wd:Q7525 p:P131 ?s . ?s ps:P131 wd:Q133356 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sevastopol', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Ukrainian Soviet Socialist Republic'}}}

 Q: What is {nominated for} of {Nick Park} that is {statement is subject of} is {66th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q336206 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q944352 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nick Park', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '66th Academy Awards'}}}

 Q: Which are the characters for Tosca?
 SPARQL: select distinct ?answer where { wd:Q192941 wdt:P674 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tosca', 'p': 'characters', 'o': '?x0'}

 Q: What is the published in journal of the bibliographic citation of The Five Marks of the Mental.?
 SPARQL: SELECT ?answer WHERE { wd:Q38652945 wdt:P2860 ?X . ?X wdt:P1433 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Five Marks of the Mental.', 'p': 'bibliographic citation', 'o': '$y0'}}

 Q: what is the {start time} for {Black Mirror} has {production company} as {Zeppotron} ?
 SPARQL: SELECT ?value WHERE { wd:Q558112 p:P272 ?s . ?s ps:P272 wd:Q8069350 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Black Mirror', 'p': 'production company', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'production company', 'o': 'Zeppotron'}}}

 Q: What is the first name of Jerzy Rubach, that is equivalent to the Gorch?
 SPARQL: SELECT ?answer WHERE { wd:Q11725319 wdt:P735 ?answer . ?answer wdt:P460 wd:Q13188334}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jerzy Rubach', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'equivalent to', 'o': 'Gorch'}}

 Q: What is {member of} of {sovereign state} of {Lexington} ?
 SPARQL: SELECT ?answer WHERE { wd:Q49241 wdt:P17 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lexington', 'p': 'state', 'o': '$y0'}}

 Q: What genre is Rear Window?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q34414 wdt:P136 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Rear Window', 'p': 'genre', 'o': '?x0'}

 Q: Tell me the theory that was named by Fred Hoyle and contains the word bang in the name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17737 . ?sbj wdt:P3938 wd:Q183397 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bang')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theory', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'named by', 'o': 'Fred Hoyle'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'bang'}}

 Q: What is {head of national government} of {death place} of {Jan Dismas Zelenka} ?
 SPARQL: SELECT ?answer WHERE { wd:Q157777 wdt:P20 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'head of national government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jan Dismas Zelenka', 'p': 'death place', 'o': '$y0'}}

 Q: What is {member of sports team} of {Richie McCaw} and {number of points/goals/set scored}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q726148 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richie McCaw', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richie McCaw', 'p': 'team', 'o': '$y0'}}]

 Q: What is the {human} for {child} of {Leif Erikson}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P40 wd:Q42838 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Leif Erikson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the power consumed by the Montmartre funicular 129000?
 SPARQL: ASK WHERE { wd:Q99562 wdt:P2791 ?obj filter(?obj = 129000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Montmartre funicular', 'p': 'power consumed', 'o': '?x0', '?x0': '129000'}

 Q: Tell me the medication used for the treatment of post-traumatic stress disorder.
 SPARQL:  select distinct ?obj where { wd:Q202387 wdt:P2176 ?obj . ?obj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'post-traumatic stress disorder', 'p': 'treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medication'}}

 Q: Is it true that the total debt of Accor is greater than -100800000.0?
 SPARQL: ASK WHERE { wd:Q212599 wdt:P2133 ?obj filter(?obj > -100800000.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Accor', 'p': 'total debt', 'o': '?x0', '?x0': '-100800000.0'}

 Q: What genetic association with type I hypersensitivity has ortholog of abl2?
 SPARQL: SELECT ?answer WHERE { wd:Q42982 wdt:P2293 ?answer . ?answer wdt:P684 wd:Q29773403}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'hypersensitivity', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ortholog', 'o': 'abl2'}}

 Q: What is the total exports for Northern England?
 SPARQL: select distinct ?answer where { wd:Q1788657 wdt:P2135 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Northern England', 'p': 'total exports', 'o': '?x0'}

 Q: What is the same as a Christian?
 SPARQL: select distinct ?answer where { ?answer wdt:P460 wd:Q229188}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Christian'}

 Q: What award did Alice Hamilton receive in 1947?
 SPARQL: SELECT ?obj WHERE { wd:Q275600 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1947')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alice Hamilton', 'p': 'award', 'o': '?x0', 't': '1947'}

 Q: What are the album which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q482994 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'album'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: what is the {character role} for {Lawrence of Arabia} has {cast member} as {Jack Hawkins} ?
 SPARQL: SELECT ?value WHERE { wd:Q228186 p:P161 ?s . ?s ps:P161 wd:Q26118 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'character role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lawrence of Arabia', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Jack Hawkins'}}}

 Q: What is the occupation of William Shakespeare?
 SPARQL:  select distinct ?obj where { wd:Q692 wdt:P106 ?obj . ?obj wdt:P31 wd:Q12737077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Shakespeare', 'p': 'occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'occupation'}}

 Q: Which is the hair color for orange?
 SPARQL: select distinct ?answer where { ?answer wdt:P1884 wd:Q39338}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'hair color', 'o': 'orange'}

 Q: Give me {Catholic cathedral} that {dedicated to} {Virgin Mary} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56242215 . ?sbj wdt:P825 wd:Q345 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Catholic cathedral', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'dedicated to', 'o': 'Virgin Mary'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: What is {elected in} and {end cause} of {{Bonar Law} has {position held} as {Member of the 30th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q166663 p:P39 ?s . ?s ps:P39 wd:Q41582581 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonar Law', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 30th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonar Law', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 30th Parliament of the United Kingdom'}}}]

 Q: What is the stop of the genetic association of Parkinson disease?
 SPARQL: SELECT ?answer WHERE { wd:Q11085 wdt:P2293 ?X . ?X wdt:P645 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stop', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Parkinson', 'p': 'genetic association', 'o': '$y0'}}

 Q: what is the {serial number} for {Semyon Timoshenko} has {award received} as {Order of Victory} ?
 SPARQL: SELECT ?value WHERE { wd:Q191702 p:P166 ?s . ?s ps:P166 wd:Q465316 . ?s pq:P2598 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'serial number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Semyon Timoshenko', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Order of Victory'}}}

 Q: What is the {constitutional republic} for {applies to jurisdiction} of {U.S. Declaration of Independence}
 SPARQL:  select distinct ?obj where { wd:Q127912 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q1520223 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Declaration of Independence', 'p': 'jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitutional republic'}}

 Q: What is the {regional organization} for {diplomatic relation} of {ASEAN}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q7768 . ?sbj wdt:P31 wd:Q4120211 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'ASEAN', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'regional organization'}}

 Q: What is the {business} for {owner of} of {American Broadcasting Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1830 wd:Q169889 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owner of', 'o': 'American Broadcasting Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Name a confederation in the Roman Empire.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q2277 . ?sbj wdt:P31 wd:Q170156 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'confederation'}}

 Q: Who {has sons} of {son of} of {Fu Xi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q236972 wdt:P22 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fu Xi', 'p': 'son of', 'o': '$y0'}}

 Q: What twinned administrative body of Cuenca began on March 14, 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q54886 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cuenca', 'p': 'twinned administrative body', 'o': '?x0', 't': '2000'}

 Q: does the HD 40307 stellar rotational velocity equal 3?
 SPARQL: ASK WHERE { wd:Q26687 wdt:P4296 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'HD 40307', 'p': 'stellar rotational velocity', 'o': '?x0', '?x0': '3'}

 Q: How many producer for Gladiator?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q128518 wdt:P162 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Gladiator', 'p': 'producer', 'o': '?x0'}

 Q: Is the number of points/goals/sets scored by the 2007 UEFA Futsal Championship more than 66.4?
 SPARQL: ASK WHERE { wd:Q116525 wdt:P1351 ?obj filter(?obj > 66.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '2007 UEFA Futsal Championship', 'p': 'number of points', 'o': '?x0', '?x0': '66.4'}

 Q: What is {position held} of {Boutros Boutros-Ghali} that is {start time} is {1992-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1257 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Boutros Boutros-Ghali', 'p': 'position held', 'o': '?x0', 't': '1992'}

 Q: Which is the animation technique of the facet of 3D animation software and contains the word animation in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3516833 . ?sbj wdt:P1269 wd:Q23442766 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'animation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animation technique', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': '3D animation software'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'animation'}}

 Q: What is {educated at} and {field of work} of {{Gavin McInnes} has {academic degree} as {Bachelor of Arts}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q5528217 p:P512 ?s . ?s ps:P512 wd:Q1765120 . ?s pq:P69 ?value1 . ?s pq:P101 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gavin McInnes', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Bachelor of Arts'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'field of work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gavin McInnes', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Bachelor of Arts'}}}]

 Q: what is the {end time} for {Edred of England} has {country of citizenship} as {Kingdom of Wessex} ?
 SPARQL: SELECT ?value WHERE { wd:Q191767 p:P27 ?s . ?s ps:P27 wd:Q105313 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edred of England', 'p': 'country of citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country of citizenship', 'o': 'Kingdom of Wessex'}}}

 Q: What is {in the administrative unit} of {Cascade Range}, that has {has rural cities} is {Wahkiakum County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4558 wdt:P131 ?answer . ?answer wdt:P150 wd:Q484015}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cascade Range', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has rural cities', 'o': 'Wahkiakum County'}}

 Q: Who is the {anion} for {conjugate base} of {sulfate ion}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4149 wd:Q172290 . ?sbj wdt:P31 wd:Q107968 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate base', 'o': 'sulfate ion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anion'}}

 Q: When did series of Star Wars Episode V: The Empire Strikes Back and follows?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q181795 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Star Wars Episode V: The Empire Strikes Back', 'p': 'series', 'o': '$y0'}}]

 Q: What is {seat} of {KGB}, that has {has states} is {Golyanovo District} ?
 SPARQL: SELECT ?answer WHERE { wd:Q80919 wdt:P159 ?answer . ?answer wdt:P150 wd:Q2365753}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'KGB', 'p': 'seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has states', 'o': 'Golyanovo District'}}

 Q: How many {mountain range} are to/by {Atlas Mountains} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4552 wd:Q130135 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'range', 'o': 'Atlas Mountains'}

 Q: What is {alma mater} of {musical score by} of {Holly Hobbie and Friends: Surprise Party} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12124801 wdt:P86 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'alma mater', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Holly Hobbie and Friends: Surprise Party', 'p': 'musical score by', 'o': '$y0'}}

 Q: How many {habitat} are in {tropical forest}?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2974 wd:Q199403 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'habitat', 'o': 'tropical forest'}

 Q: Which is the video of Glenn Greenwald?
 SPARQL: select distinct ?answer where { wd:Q5568842 wdt:P10 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Glenn Greenwald', 'p': 'video', 'o': '?x0'}

 Q: What is the Haumea minor planet group?
 SPARQL: select distinct ?answer where { wd:Q601 wdt:P196 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Haumea', 'p': 'minor planet group', 'o': '?x0'}

 Q: What is <conjugate base> of <sulfate ion> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4149 wd:Q172290}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate base', 'o': 'sulfate ion'}

 Q: What is the {nation of Nineteen Eighty-Four} for {present in work} of {Nineteen Eighty-Four}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q208460 . ?sbj wdt:P31 wd:Q14752002 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Nineteen Eighty-Four', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nation of Nineteen Eighty-Four'}}

 Q: What is <day in year for periodic occurrence> of <Easter> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P837 wd:Q21196}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'day in year for periodic occurrence', 'o': 'Easter'}

 Q: How many {charge} are for {Nuremberg trials} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80130 wdt:P1595 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'charge', 'o': '?x0'}

 Q: Was Babylon the capital of the Achaemenid Empire and  the Neo-Babylonian Empire?
 SPARQL: ASK WHERE { wd:Q5684 wdt:P1376 wd:Q389688 . wd:Q5684 wdt:P1376 wd:Q624887 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Babylon', 'p': 'capital of', 'o': '?x0', '?x0': 'Achaemenid Empire'}, {'h': 'IS', 'v': '?x1', 's': 'Babylon', 'p': 'capital of', 'o': '?x1', '?x1': 'Neo-Babylonian Empire'}]

 Q: Is it true that the aftershocks of 2017 Jiuzhaigou earthquake are equal to 1392.8?
 SPARQL: ASK WHERE { wd:Q35519507 wdt:P2320 ?obj filter(?obj = 1392.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2017 Jiuzhaigou earthquake', 'p': 'aftershocks', 'o': '?x0', '?x0': '1392.8'}

 Q: What is {nominated for} of {Jack Lemmon} that is {statement is subject of} is {35th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q94123 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917148 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Lemmon', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subject of', 'o': '35th Academy Awards'}}}

 Q: Tell me about the river located in or next to body of water in Munich.
 SPARQL:  select distinct ?obj where { wd:Q1726 wdt:P206 ?obj . ?obj wdt:P31 wd:Q4022 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Munich', 'p': 'located in or next to body of water', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'river'}}

 Q: What character in Ben-Hur was played by the voice actor Jean-Claude Michel?
 SPARQL: SELECT ?value WHERE { wd:Q180098 p:P725 ?s . ?s ps:P725 wd:Q3165115 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ben-Hur', 'p': 'voice actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'voice actor', 'o': 'Jean-Claude Michel'}}}

 Q: What is <OpenSecrets people ID> of <Hillary Clinton> ?
 SPARQL: select distinct ?answer where { wd:Q6294 wdt:P2686 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'OpenSecrets people ID', 'o': '?x0'}

 Q: What commandment starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1497090 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commandment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the Crunchbase person ID for Rihanna?
 SPARQL: select distinct ?answer where { wd:Q36844 wdt:P2087 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rihanna', 'p': 'Crunchbase person ID', 'o': '?x0'}

 Q: What is the alphabet of Sumeria that has been discovered by Sumerians?
 SPARQL: SELECT ?answer WHERE { wd:Q36790 wdt:P282 ?answer . ?answer wdt:P61 wd:Q656043}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sumerian', 'p': 'alphabet', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discovered by', 'o': 'Sumerians'}}

 Q: Is it true that the number of the participants of the 2011 Women's Six Nations Championship are equal to 6?
 SPARQL: ASK WHERE { wd:Q3535295 wdt:P1132 ?obj filter(?obj = 6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "2011 Women's Six Nations Championship", 'p': 'participants', 'o': '?x0', '?x0': '6'}

 Q: what is the {start time} for {Óscar de la Renta Fiallo} has {country of citizenship} as {Dominican Republic} ?
 SPARQL: SELECT ?value WHERE { wd:Q288029 p:P27 ?s . ?s ps:P27 wd:Q786 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Óscar de la Renta', 'p': 'citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizenship', 'o': 'Dominican Republic'}}}

 Q: What is <target interest rate> of <Federal Reserve System> ?
 SPARQL: select distinct ?answer where { wd:Q53536 wdt:P2661 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Federal Reserve', 'p': 'target interest rate', 'o': '?x0'}

 Q: What is {academic discipline} of {translated by} of {Tractatus Logico-Philosophicus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q655717 wdt:P655 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discipline', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tractatus Logico-Philosophicus', 'p': 'translated by', 'o': '$y0'}}

 Q: What is the notation of character encoding?
 SPARQL: select distinct ?answer where { ?answer wdt:P913 wd:Q184759}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'notation', 'o': 'character encoding'}

 Q: Amtrak operates which train service?
 SPARQL:  select distinct ?obj where { wd:Q23239 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15141321 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amtrak', 'p': 'operates', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'train service'}}

 Q: what is the {start time} for {Allen Iverson} has {member of sports team} as {Philadelphia 76ers} ?
 SPARQL: SELECT ?value WHERE { wd:Q190094 p:P54 ?s . ?s ps:P54 wd:Q138089 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Allen Iverson', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Philadelphia 76ers'}}}

 Q: Were Garuda Indonesia and Saudia operators to Boeing 747?
 SPARQL: ASK WHERE { wd:Q179 wdt:P137 wd:Q512468 . wd:Q179 wdt:P137 wd:Q541179 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Boeing 747', 'p': 'operator', 'o': '?x0', '?x0': 'Garuda Indonesia'}, {'h': 'IS', 'v': '?x1', 's': 'Boeing 747', 'p': 'operator', 'o': '?x1', '?x1': 'Saudia'}]

 Q: Tell me the musical duo that contains the word yazoo in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9212979 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yazoo')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical duo'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yazoo'}}

 Q: What is {tributary} of {on harbour} of {Guangzhou} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16572 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guangzhou', 'p': 'on harbour', 'o': '$y0'}}

 Q: What is the rank of food made from artichoke?
 SPARQL: SELECT ?answer WHERE { wd:Q23041430 wdt:P1582 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'artichoke', 'p': 'made from', 'o': '$y0'}}

 Q: How many {facet of} are for {gravity} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q11412 wdt:P1269 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'gravity', 'p': 'facet of', 'o': '?x0'}

 Q: What is {position held} of {Valéry Giscard d'Estaing} that is {end time} is {1981-5-21} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2124 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Giscard', 'p': 'position held', 'o': '?x0', 't': '1981'}

 Q: Who are the inhabitants of the sovereign state of Ulhasnagar?
 SPARQL: SELECT ?answer WHERE { wd:Q460222 wdt:P17 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ulhasnagar', 'p': 'sovereign state', 'o': '$y0'}}

 Q: Which is the Italian Chamber of Deputies dati ID of Silvio Berlusconi?
 SPARQL: select distinct ?answer where { wd:Q11860 wdt:P1341 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Silvio Berlusconi', 'p': 'Italian Chamber of Deputies dati ID', 'o': '?x0'}

 Q: What are the {transliteration for the {Zhongshan} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q59223 wdt:P2440 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Zhongshan', 'p': 'transliteration', 'o': '?x0'}

 Q: Is it true that the compulsory education for the minimum age in Hungary equals to 3?
 SPARQL: ASK WHERE { wd:Q28 wdt:P3270 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hungary', 'p': 'compulsory education (minimum age)', 'o': '?x0', '?x0': '3'}

 Q: what is the {start time} for {Tokyo} has {twinned administrative body} as {Moscow} ?
 SPARQL: SELECT ?value WHERE { wd:Q1490 p:P190 ?s . ?s ps:P190 wd:Q649 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tokyo', 'p': 'twin city', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twin city', 'o': 'Moscow'}}}

 Q: what is the {end time} for {Pierre-Auguste Renoir} has {residence} as {Limoges} ?
 SPARQL: SELECT ?value WHERE { wd:Q39931 p:P551 ?s . ?s ps:P551 wd:Q45656 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pierre-Auguste Renoir', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Limoges'}}}

 Q: What is {work location} of {Artemisia Gentileschi} that is {start time} is {1610-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q212657 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1610')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Artemisia Gentileschi', 'p': 'work location', 'o': '?x0', 't': '1610'}

 Q: Which was the working place established by Eric Johnston?
 SPARQL: SELECT ?answer WHERE { wd:Q5386837 wdt:P108 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Johnston', 'p': 'working place', 'o': '$y0'}}

 Q: How many {supports programming language} are to/by {Logo} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3985 wd:Q201436 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'supports programming language', 'o': 'Logo'}

 Q: What is <source website for the property> of <E. M. Forster> ?
 SPARQL: select distinct ?answer where { wd:Q189119 wdt:P1896 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'E. M. Forster', 'p': 'source website for the property', 'o': '?x0'}

 Q: When did head of government of Seattle and work period (end)?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P2032 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'head of government', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}]

 Q: How many {filming location} are for {Lawrence of Arabia} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q228186 wdt:P915 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Lawrence of Arabia', 'p': 'filming location', 'o': '?x0'}

 Q: What is butane's upper flammable limit?
 SPARQL: select distinct ?answer where { wd:Q134192 wdt:P2203 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'butane', 'p': 'upper flammable limit', 'o': '?x0'}

 Q: What is {nominated for} of {It's a Wonderful Life} that is {nominee} is {John O. Aalberg} ?
 SPARQL: SELECT ?obj WHERE { wd:Q204191 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q1699086 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "It's a Wonderful Life", 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'John O. Aalberg'}}}

 Q: What is the human population of the twin town, Tucson?
 SPARQL: SELECT ?answer WHERE { wd:Q18575 wdt:P190 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tucson', 'p': 'twin town', 'o': '$y0'}}

 Q: What is the Revised Hepburn romanization for Jun Maeda, name in native language as 麻枝 准?
 SPARQL: SELECT ?value WHERE { wd:Q683407 p:P1559 ?s . ?s ps:P1559 ?x filter(contains(?x,'麻枝 准')) . ?s pq:P2125 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Revised Hepburn romanization', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jun Maeda', 'p': 'name in native language', 'o': '$y0'}}

 Q: What is <ARKive ID> of <Nelumbo nucifera> ?
 SPARQL: select distinct ?answer where { wd:Q16528 wdt:P2833 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nelumbo nucifera', 'p': 'ARKive ID', 'o': '?x0'}

 Q: is it true that the HD 113538 c of the M sin i equals 0.36?
 SPARQL: ASK WHERE { wd:Q1252981 wdt:P2051 ?obj filter(?obj = 0.36) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'HD 113538 c', 'p': 'M sin i', 'o': '?x0', '?x0': '0.36'}

 Q: What is the {bibliography} for {list of works} of {Charles Dickens}
 SPARQL:  select distinct ?obj where { wd:Q5686 wdt:P1455 ?obj . ?obj wdt:P31 wd:Q1631107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Dickens', 'p': 'list of works', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bibliography'}}

 Q: Which is the USB vendor ID for Toshiba?
 SPARQL: select distinct ?answer where { wd:Q49125 wdt:P1167 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Toshiba', 'p': 'USB vendor ID', 'o': '?x0'}

 Q: Who did Mahmoud Ahmadinejad marry on June 12, 2981?
 SPARQL: SELECT ?obj WHERE { wd:Q34448 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mahmoud Ahmadinejad', 'p': 'marry', 'o': '?x0', 't': '1981'}

 Q: Which is the location of birth of Irina Slutskaya, that have event of death by burning?
 SPARQL: SELECT ?answer WHERE { wd:Q231590 wdt:P19 ?answer . ?answer wdt:P793 wd:Q468455}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Irina Slutskaya', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'event', 'o': 'death by burning'}}

 Q: What is {record held} of {pole vault} and {height}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P2048 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: How many {officeholder} are for {United Nations Secretary-General} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q81066 wdt:P1308 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'United Nations Secretary-General', 'p': 'officeholder', 'o': '?x0'}

 Q: When did educated at of Robert J. Shiller and academic degree?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q338151 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert J. Shiller', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert J. Shiller', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is {stockholder} of {Figure}, that has {deathdate} is {1798-3-22} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5448002 wdt:P127 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1798'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Figure', 'p': 'stockholder', 'o': '?x0', 't': '1798'}

 Q: What is the {legislative body} and the {executive body} of {Assam} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1164 wdt:P194 ?ans_1 . wd:Q1164 wdt:P208 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Assam', 'p': 'legislative body', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Assam', 'p': 'executive body', 'o': '?x1'}]

 Q: What is the motto of Paris?
 SPARQL: SELECT ?obj WHERE { wd:Q90 p:P1451 ?s . ?s ps:P1451 ?obj . ?s pq:P2441 ?x filter(contains(?x,'Його хитає, але він не тоне')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paris', 'p': 'motto', 'o': '?x0'}

 Q: When was The Matrix awarded the National Film Registry?
 SPARQL: SELECT ?value WHERE { wd:Q83495 p:P166 ?s . ?s ps:P166 wd:Q823422 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'The Matrix', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'National Film Registry'}, 't': '?x0'}

 Q: What was Jacques Offenbach country of citizenship in 1860-1-14?
 SPARQL: SELECT ?obj WHERE { wd:Q41555 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1860')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jacques Offenbach', 'p': 'country of citizenship', 'o': '?x0', 't': '1860'}

 Q: What is {academic major} and {end time} of {{Charles Laughton} has {educated at} as {Royal Academy of Dramatic Art}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q55264 p:P69 ?s . ?s ps:P69 wd:Q523926 . ?s pq:P812 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Laughton', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Royal Academy of Dramatic Art'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'to', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Laughton', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Royal Academy of Dramatic Art'}}}]

 Q: Is Russia's total exports 333500000000?
 SPARQL: ASK WHERE { wd:Q159 wdt:P2135 ?obj filter(?obj = 333500000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Russia', 'p': 'total exports', 'o': '?x0', '?x0': '333500000000'}

 Q: How many streaks colors does the color red possess?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P534 wd:Q3142 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'streak', 'o': 'red'}

 Q: What is {literary works} of {starring} of {The Cider House Rules} ?
 SPARQL: SELECT ?answer WHERE { wd:Q648977 wdt:P161 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Cider House Rules', 'p': 'starring', 'o': '$y0'}}

 Q: When was Jean Renoir nominated for the BAFTA Award for Best Film?
 SPARQL: SELECT ?value WHERE { wd:Q50713 p:P1411 ?s . ?s ps:P1411 wd:Q139184 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jean Renoir', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'BAFTA Award for Best Film'}, 't': '?x0'}

 Q: In 1943, Alf Ramsey was member of which sports team?
 SPARQL: SELECT ?obj WHERE { wd:Q311029 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1943')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alf Ramsey', 'p': 'team', 'o': '?x0', 't': '1943'}

 Q: Is it true that the fiscal/tax revenue of Daguioman is less than 40873085.264?
 SPARQL: ASK WHERE { wd:Q28044 wdt:P3087 ?obj filter(?obj < 40873085.264) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Daguioman', 'p': 'fiscal/tax revenue', 'o': '?x0', '?x0': '40873085.264'}

 Q: What is {trend} of {studied under} of {Dardanus of Athens} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2661420 wdt:P1066 ?X . ?X wdt:P135 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'trend', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dardanus of Athens', 'p': 'studied under', 'o': '$y0'}}

 Q: What is the {Greek deity} for {appears in the form of} of {Artemis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4675 wd:Q39503 . ?sbj wdt:P31 wd:Q22989102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'appears as', 'o': 'Artemis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greek deity'}}

 Q: Who were the members of sports team of Francisco Gento before the year of 1953 ?
 SPARQL: SELECT ?obj WHERE { wd:Q493081 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Francisco Gento', 'p': 'team', 'o': '?x0', 't': '1953'}

 Q: What is {actor} of {Downton Abbey}, that has {gender} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83071 wdt:P161 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Downton Abbey', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gender', 'o': 'male'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{John Charles} has {member of sports team} as {Hereford United F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q312404 p:P54 ?s . ?s ps:P54 wd:Q18516 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Charles', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hereford United F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'goals scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Charles', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hereford United F.C.'}}}]

 Q: What did Chișinău include in it's administrative territorial region in 08-02-1940?
 SPARQL: SELECT ?obj WHERE { wd:Q21197 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1940')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chișinău', 'p': 'in', 'o': '?x0', 't': '1940'}

 Q: How many connecting lines are there for the Channel Tunnel?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q10257 wdt:P81 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Channel Tunnel', 'p': 'connecting line', 'o': '?x0'}

 Q: What award did Bobby Darin receive in the year 1960?
 SPARQL: SELECT ?obj WHERE { wd:Q311267 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1960')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bobby Darin', 'p': 'award', 'o': '?x0', 't': '1960'}

 Q: Who was the spouse of Gower Champion in 1973?
 SPARQL: SELECT ?obj WHERE { wd:Q3112833 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1973')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gower Champion', 'p': 'spouse', 'o': '?x0', 't': '1973'}

 Q: What is {nominated for} of {Rush} that is {point in time} is {2013-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q203871 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rush', 'p': 'nominated for', 'o': '?x0', 't': '2013'}

 Q: What is {first minister} of {partner town} of {Hama} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173545 wdt:P190 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first minister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hama', 'p': 'partner town', 'o': '$y0'}}

 Q: which railway company in transport have least operating income?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q249556 . ?ent wdt:P3362 ?obj . ?ent wdt:P452 wd:Q3565868} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'operating income', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'industry', 'o': 'rail transport'}}}

 Q: What is the {human} for {religion} of {Judaism}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P140 wd:Q9268 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'Judaism', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Tell me about member of sports team of Lionel Messi and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q615 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel Messi', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel Messi', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: what is the {start time} for {Britney Spears} has {spouse} as {Jason Allen Alexander} ?
 SPARQL: SELECT ?value WHERE { wd:Q11975 p:P26 ?s . ?s ps:P26 wd:Q27949402 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Britney Spears', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Jason Allen Alexander'}}}

 Q: What is {material produced} of {developed by} of {McAfee VirusScan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1629915 wdt:P178 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'material produced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'McAfee VirusScan', 'p': 'developed by', 'o': '$y0'}}

 Q: What is <Gaming-History identifier> of <Xbox> ?
 SPARQL: select distinct ?answer where { wd:Q132020 wdt:P4806 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Xbox', 'p': 'Gaming-History identifier', 'o': '?x0'}

 Q: How many {participant of} are for {Ronaldinho} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q39444 wdt:P1344 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ronaldinho', 'p': 'participant of', 'o': '?x0'}

 Q: What is {significant event} of {Mindaugas} that is {point in time} is {1251-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q242436 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1251')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mindaugas', 'p': 'significant event', 'o': '?x0', 't': '1251'}

 Q: What is the {tell} for {place of death} of {Akhenaten}
 SPARQL:  select distinct ?obj where { wd:Q81794 wdt:P20 ?obj . ?obj wdt:P31 wd:Q755017 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Akhenaten', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tell'}}

 Q: How many fathers are for Frederick I} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P22 wd:Q79789 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'father', 'o': 'Frederick I'}

 Q: What is the {country} and the {continent} of {Brussels} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q240 wdt:P17 ?ans_1 . wd:Q240 wdt:P30 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Brussels', 'p': 'country', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Brussels', 'p': 'continent', 'o': '?x1'}]

 Q: How many were injured in the Second Italo-Ethiopian War?
 SPARQL: select distinct ?answer where { wd:Q94916 wdt:P1339 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Second Italo-Ethiopian War', 'p': 'injured', 'o': '?x0'}

 Q: Which sociolect is a dialect of British English?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4913 wd:Q7979 . ?sbj wdt:P31 wd:Q207101 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'British English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sociolect'}}

 Q: Who was the head of government of Poznań in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q268 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Poznań', 'p': 'head of government', 'o': '?x0', 't': '2014'}

 Q: Which is the French National Assembly Lobbyist ID for SNCF?
 SPARQL: select distinct ?answer where { wd:Q13646 wdt:P3281 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'SNCF', 'p': 'French National Assembly Lobbyist ID', 'o': '?x0'}

 Q: what is the {point in time} for {Peter Jennings} has {award received} as {Disney Legends} ?
 SPARQL: SELECT ?value WHERE { wd:Q354540 p:P166 ?s . ?s ps:P166 wd:Q1150306 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Peter Jennings', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Disney Legends'}, 't': '?x0'}

 Q: What is the {military specialism} for {occupation} of {Saint George}
 SPARQL:  select distinct ?obj where { wd:Q48438 wdt:P106 ?obj . ?obj wdt:P31 wd:Q6857706 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Saint George', 'p': 'occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military specialism'}}

 Q: What is the dredger with the highest payload mass?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5810820 . ?ent wdt:P4519 ?obj . ?ent wdt:P31 wd:Q5810820 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'payload mass', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dredger'}}

 Q: What is {position held} of {Clement Attlee} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q129006 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement Attlee', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clement Attlee', 'p': 'position held', 'o': '$y0'}}]

 Q: Tell me the road bridge which contains the word viaduct in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q537127 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viaduct')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road bridge'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'viaduct'}}

 Q: What is {country of jurisdiction} of {executive branch}, that has {has villages} is {Ingeniero Moneta} ?
 SPARQL: SELECT ?answer WHERE { wd:Q35798 wdt:P1001 ?answer . ?answer wdt:P150 wd:Q16302002}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'executive branch', 'p': 'of jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has villages', 'o': 'Ingeniero Moneta'}}

 Q: What county seat of Lilongwe is divided into the Lilongwe District?
 SPARQL: SELECT ?answer WHERE { wd:Q3876 wdt:P1376 ?answer . ?answer wdt:P150 wd:Q1058453}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lilongwe', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Lilongwe District'}}

 Q: Is it true that the matches/games drawn/tied of the 1891 British Lions tour to South Africa equals to 0?
 SPARQL: ASK WHERE { wd:Q3996163 wdt:P1357 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1891 British Lions tour to South Africa', 'p': 'drawn', 'o': '?x0', '?x0': '0.0'}

 Q: Who is the  {legal case} for {defendant} of {Bill Cosby}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1591 wd:Q213512 . ?sbj wdt:P31 wd:Q2334719 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'defendant', 'o': 'Bill Cosby', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legal case'}}

 Q: What is {nominated for} of {Marisa Tomei} that is {for work} is {Before the Devil Knows You're Dead} ?
 SPARQL: SELECT ?obj WHERE { wd:Q191828 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1321503 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marisa Tomei', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': "Before the Devil Knows You're Dead"}}}

 Q: What was Yuri Lotman a member of starting 1977?
 SPARQL: SELECT ?obj WHERE { wd:Q360084 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yuri Lotman', 'p': 'member of', 'o': '?x0', 't': '1977'}

 Q: What is the {Wii Remote extension} for {input method} of {Wii}
 SPARQL:  select distinct ?obj where { wd:Q8079 wdt:P479 ?obj . ?obj wdt:P31 wd:Q44753009 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wii', 'p': 'input method', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wii Remote extension'}}

 Q: What is the {sovereign state} for {history of topic} of {history of Australia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2184 wd:Q174825 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'history of topic', 'o': 'history of Australia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: When was François Truffaut nominated for National Society of Film Critics Award for Best Screenplay?
 SPARQL: SELECT ?value WHERE { wd:Q53002 p:P1411 ?s . ?s ps:P1411 wd:Q6978541 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'François Truffaut', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'National Society of Film Critics Award for Best Screenplay'}, 't': '?x0'}

 Q: Tell me non-metropolitan county whose name has the word worcestershire in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q769603 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'worcestershire')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'non-metropolitan county'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'worcestershire'}}

 Q: When did Kevin Durant receive the All-NBA Team award?
 SPARQL: SELECT ?value WHERE { wd:Q29545 p:P166 ?s . ?s ps:P166 wd:Q674359 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Kevin Durant', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'All-NBA Team'}, 't': '?x0'}

 Q: In what point in time was Nepal's population 5.63848e+06?
 SPARQL: SELECT ?value WHERE { wd:Q837 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'5.63848e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nepal', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '5.63848e+06'}, 't': '?x0'}

 Q: What is {series} of {Rama} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q160213 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rama', 'p': 'series', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'series', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rama', 'p': 'series', 'o': '$y0'}}]

 Q: Is the parity of the arsenic-84 equal to -1?
 SPARQL: ASK WHERE { wd:Q18844788 wdt:P1123 ?obj filter(?obj = -1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'arsenic-84', 'p': 'parity', 'o': '?x0', '?x0': '-1'}

 Q: What are the first aid measures for mercury poisoning?
 SPARQL: select distinct ?answer where { wd:Q408089 wdt:P2239 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mercury poisoning', 'p': 'first aid measures', 'o': '?x0'}

 Q: What is the {human} for {doctoral advisor} of {Max Planck}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P184 wd:Q9021 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral advisor', 'o': 'Max Planck', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is <archINFORM ID (projects)> of <Yosemite National Park> ?
 SPARQL: select distinct ?answer where { wd:Q180402 wdt:P5383 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yosemite National Park', 'p': 'archINFORM ID (projects)', 'o': '?x0'}

 Q: Which Jade Emperor that married Nuwa had a child?
 SPARQL: SELECT ?answer WHERE { wd:Q860434 wdt:P40 ?answer . ?answer wdt:P26 wd:Q641632}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jade Emperor', 'p': 'child', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'married', 'o': 'Nuwa'}}

 Q: Which is the tributary for Euphrates?
 SPARQL: select distinct ?answer where { wd:Q34589 wdt:P974 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Euphrates', 'p': 'tributary', 'o': '?x0'}

 Q: Where are Attila's place of birth and place of death?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q36724 wdt:P19 ?ans_1 . wd:Q36724 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Attila', 'p': 'place of birth', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Attila', 'p': 'place of death', 'o': '?x1'}]

 Q: Is the net tonnage of the MS Nordlys less than 3322.4?
 SPARQL: ASK WHERE { wd:Q1614744 wdt:P2790 ?obj filter(?obj < 3322.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Nordlys', 'p': 'net tonnage', 'o': '?x0', '?x0': '3322.4'}

 Q: What is {pronunciation audio} of {fish} that is {language of work or name} is {American English} ?
 SPARQL: SELECT ?obj WHERE { wd:Q152 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q7976 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'fish', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'American English'}}}

 Q: What is the human with the highest Elo rating whose sport is chess?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P1087 ?obj . ?ent wdt:P641 wd:Q718 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Elo rating', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'chess'}}}

 Q: Who are the founders of Symantec, that have the surname Hendrix?
 SPARQL: SELECT ?answer WHERE { wd:Q677085 wdt:P112 ?answer . ?answer wdt:P734 wd:Q16870694}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Symantec', 'p': 'founders', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'surname', 'o': 'Hendrix'}}

 Q: What is {coordinate of southernmost point} of {basin countries} of {Columbia River} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2251 wdt:P205 ?X . ?X wdt:P1333 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate of southernmost point', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Columbia River', 'p': 'basin countries', 'o': '$y0'}}

 Q: What is the name of a government agency that starts with the letter y.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q327333 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'government agency'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: How many destinations does Voyager 2 have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q48475 wdt:P1444 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Voyager 2', 'p': 'destination', 'o': '?x0'}

 Q: What is {Carnegie Classification of Institutions of Higher Education} of {employed by} of {Arthur E. Bryson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4798535 wdt:P108 ?X . ?X wdt:P2643 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'Carnegie Classification of Institutions of Higher Education', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur E. Bryson', 'p': 'employed by', 'o': '$y0'}}

 Q: Does gonorrhea affect more than 654175.2 people?
 SPARQL: ASK WHERE { wd:Q101896 wdt:P2854 ?obj filter(?obj > 654175.2) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'gonorrhea', 'p': 'disease burden', 'o': '?x0', '?x0': '654175.2'}

 Q: What is {represents} of {famous for} of {Brose Partington} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4975395 wdt:P800 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'represents', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brose Partington', 'p': 'famous for', 'o': '$y0'}}

 Q: What is the Barbarian R.C. ID for Serge Blanco?
 SPARQL: select distinct ?answer where { wd:Q1322456 wdt:P4494 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Serge Blanco', 'p': 'Barbarian R.C. ID', 'o': '?x0'}

 Q: What big band type of film was inaugurated on 1900-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q207378 wdt:P136 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1900'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'big band', 'p': 'type of film', 'o': '?x0', 't': '1900'}

 Q: Give me {alcohol} that {safety classification and labelling} {Regulation (EC) No. 1272/2008} and which contains the word {ether} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q156 . ?sbj wdt:P4952 wd:Q2005334 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ether')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alcohol', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'safety classification and labelling', 'o': 'Regulation (EC) No. 1272/2008'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ether'}}

 Q: Tell me the historic county of England of the capital of Norwich and that contains the word norfolk in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1138494 . ?sbj wdt:P36 wd:Q130191 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'norfolk')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historic county of England', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Norwich'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'norfolk'}}

 Q: What is {dubbed by} of {part of series} of {I Second That Emotion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1992298 wdt:P179 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dubbed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I Second That Emotion', 'p': 'series', 'o': '$y0'}}

 Q: What kingdom starts with the letter "z"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q417175 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kingdom'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is the Royal Aero Club Aviator's Certificate ID of Charles Rolls?
 SPARQL: select distinct ?answer where { wd:Q313074 wdt:P1293 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Rolls', 'p': "Royal Aero Club Aviator's Certificate ID", 'o': '?x0'}

 Q: When did Benjamin Howard Baker leave the sports team Everton F.C. ?
 SPARQL: SELECT ?value WHERE { wd:Q4140865 p:P54 ?s . ?s ps:P54 wd:Q5794 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benjamin Howard Baker', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Everton F.C.'}}}

 Q: How many {programming language} are for {iOS} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q48493 wdt:P277 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'iOS', 'p': 'programming language', 'o': '?x0'}

 Q: What is {member of sports team} of {Dino Zoff} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q180661 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dino Zoff', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dino Zoff', 'p': 'team', 'o': '$y0'}}]

 Q: What sports team was Viv Richards a member of until 1977-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q738016 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Viv Richards', 'p': 'team', 'o': '?x0', 't': '1977'}

 Q: What is the penis sexually homologous with?
 SPARQL: select distinct ?answer where { ?answer wdt:P4545 wd:Q58}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sexually homologous with', 'o': 'penis'}

 Q: Did {Isaac_Newton} {place of burial} {Westminster Abbey}?
 SPARQL: ASK WHERE { wd:Q935 wdt:P119 wd:Q5933 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Isaac Newton', 'p': 'place of burial', 'o': '?x0', '?x0': 'Westminster Abbey'}]

 Q: What are the seven deadly sins  which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q166502 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'seven deadly sins'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: How many programming languages are made by Perl?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P277 wd:Q42478 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'programming language', 'o': 'Perl'}

 Q: Palm Sunday is the feast day for which biblical episode?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P841 wd:Q42236 . ?sbj wdt:P31 wd:Q22704077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'feast day', 'o': 'Palm Sunday', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}}

 Q: What are the educational stage which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18189 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'educational stage'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'k'}}

 Q: What is the {animated film} for {voice actor} of {David Spade}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q298658 . ?sbj wdt:P31 wd:Q202866 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'David Spade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated film'}}

 Q: Is it true that the male population of the Top Springs equal to 0?
 SPARQL: ASK WHERE { wd:Q18026 wdt:P1540 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Top Springs', 'p': 'male population', 'o': '?x0', '?x0': '0'}

 Q: Give me {private university} that {member of} {Scholarly Publishing and Academic Resources Coalition} and which contains the word {university} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q902104 . ?sbj wdt:P463 wd:Q647039 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private university', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Scholarly Publishing and Academic Resources Coalition'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'university'}}

 Q: What is {place of birth} of {John Perry Barlow} that is {sourcing circumstances} is {near} ?
 SPARQL: SELECT ?obj WHERE { wd:Q534428 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P1480 wd:Q21818619 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birth place', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Perry Barlow', 'p': 'birth place', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'near'}}}

 Q: which office building has the highest floors below ground?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1021645 . ?ent wdt:P1139 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'floors below ground', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'office building'}}

 Q: What is {dialect of} of {language of the original work} of {The Last Blood} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14476441 wdt:P364 ?X . ?X wdt:P4913 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dialect of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Last Blood', 'p': 'language of the original work', 'o': '$y0'}}

 Q: What is {opening days} of {school attended} of {Louis Brassin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1367651 wdt:P69 ?X . ?X wdt:P3025 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opening days', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis Brassin', 'p': 'school attended', 'o': '$y0'}}

 Q: Which is the PEGI rating for Wii Sports?
 SPARQL: select distinct ?answer where { wd:Q71936 wdt:P908 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wii Sports', 'p': 'PEGI rating', 'o': '?x0'}

 Q: What are the Bantu languages which start with the letter zulu
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q33146 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zulu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Bantu'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zulu'}}

 Q: What Class IB flammable liquid has the highest ceiling exposure limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2405 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ceiling exposure limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid'}}

 Q: What is the first name of Channing Tatum that is the same as Matthias?
 SPARQL: SELECT ?answer WHERE { wd:Q212064 wdt:P735 ?answer . ?answer wdt:P460 wd:Q4927273}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Channing Tatum', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Matthias'}}

 Q: What is the {landlocked country} with the {MAX(VAT-rate)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q123480 . ?ent wdt:P2855 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'VAT', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'landlocked country'}}

 Q: Was Scooby-Doo genre horror film and science fiction film?
 SPARQL: ASK WHERE { wd:Q205683 wdt:P136 wd:Q200092 . wd:Q205683 wdt:P136 wd:Q471839 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Scooby-Doo', 'p': 'genre', 'o': '?x0', '?x0': 'horror film'}, {'h': 'IS', 'v': '?x1', 's': 'Scooby-Doo', 'p': 'genre', 'o': '?x1', '?x1': 'science fiction film'}]

 Q: What is the {taxon} for {natural product of taxon} of {watermelon}
 SPARQL:  select distinct ?obj where { wd:Q38645 wdt:P1582 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'watermelon', 'p': 'natural product of taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What was the residence of Oliver Heaviside born at 1889-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q154345 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1889')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oliver Heaviside', 'p': 'residence', 'o': '?x0', 't': '1889'}

 Q: What is the terminus of the Menai Bridge
 SPARQL: select distinct ?answer where { ?answer wdt:P559 wd:Q2655856}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'terminus', 'o': 'Menai Bridge'}

 Q: What is {award received} of {Lee Marvin} that is {for work} is {Cat Ballou} ?
 SPARQL: SELECT ?obj WHERE { wd:Q76895 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q76824 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lee Marvin', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Cat Ballou'}}}

 Q: What is the {human} for {depicts} of {Mona Lisa}
 SPARQL:  select distinct ?obj where { wd:Q12418 wdt:P180 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mona Lisa', 'p': 'depicts', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What are the season which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24384 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'season'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {part of work} of {bibliographic citation} of {Childhood obesity: are we all speaking the same language?} ?
 SPARQL: SELECT ?answer WHERE { wd:Q34729820 wdt:P2860 ?X . ?X wdt:P1433 ?answer}
 ALIST: {}

 Q: what is the {replaces} for {Mohammad Mosaddegh} has {position held} as {Prime Minister of Iran} ?
 SPARQL: SELECT ?value WHERE { wd:Q123037 p:P39 ?s . ?s ps:P39 wd:Q13561063 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mohammad Mosaddegh', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Iran'}}}

 Q: What is the prefecture of Japan that contains administrative territorial entity of Osaka
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q35765 . ?sbj wdt:P31 wd:Q50337 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Osaka', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prefecture of Japan'}}

 Q: What is {inhabitants} of {suspect} of {Battle of France} ?
 SPARQL: SELECT ?answer WHERE { wd:Q151340 wdt:P710 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle of France', 'p': 'suspect', 'o': '$y0'}}

 Q: What is {position of head of government} of {place of work} of {Pius VII} ?
 SPARQL: SELECT ?answer WHERE { wd:Q124754 wdt:P937 ?X . ?X wdt:P1313 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position of head of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pius VII', 'p': 'place of work', 'o': '$y0'}}

 Q: What is {material used} of {paper} that is {nature of statement} is {often} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11472 p:P186 ?s . ?s ps:P186 ?obj . ?s pq:P5102 wd:Q28962312 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'material used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'paper', 'p': 'material used', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nature of statement', 'o': 'common'}}}

 Q: What is {find location} of {beryllium}, that has {diplomatic relation} is {Romania} ?
 SPARQL: SELECT ?answer WHERE { wd:Q569 wdt:P189 ?answer . ?answer wdt:P530 wd:Q218}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'beryllium', 'p': 'find location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Romania'}}

 Q: What is {bordered by} of {Kingdom of Castile}, that has {language official} is {Spanish} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179293 wdt:P47 ?answer . ?answer wdt:P37 wd:Q1321}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kingdom of Castile', 'p': 'bordered by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Spanish'}}

 Q: What is {runtime} of {medium} of {Jurassic Park: The Game} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2368168 wdt:P437 ?X . ?X wdt:P400 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'runtime', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jurassic Park: The Game', 'p': 'medium', 'o': '$y0'}}

 Q: What is <Elite Prospects player ID> of <Ray Bourque> ?
 SPARQL: select distinct ?answer where { wd:Q715566 wdt:P2481 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ray Bourque', 'p': 'Elite Prospects player ID', 'o': '?x0'}

 Q: What is <British Olympic Association athlete ID> of <Alistair Brownlee> ?
 SPARQL: select distinct ?answer where { wd:Q716308 wdt:P4490 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alistair Brownlee', 'p': 'British Olympic Association athlete ID', 'o': '?x0'}

 Q: Which is the parent astronomical body for Beta Pictoris?
 SPARQL: select distinct ?answer where { ?answer wdt:P397 wd:Q582547}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Beta Pictoris'}

 Q: What is {discoverer or inventor of} of {NGC 6302}, that has {specialism} is {astronomy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q497739 wdt:P61 ?answer . ?answer wdt:P101 wd:Q333}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'NGC 6302', 'p': 'discoverer or inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'specialism', 'o': 'astronomy'}}

 Q: What is {subsidiary company} of {shareholder} of {Economist Intelligence Unit} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1063288 wdt:P127 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Economist Intelligence Unit', 'p': 'shareholder', 'o': '$y0'}}

 Q: What are the abnormally low values that start with letter U
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54928607 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abnormally low value'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Which is the LRB contributor ID for Chimamanda Ngozi Adichie?
 SPARQL: select distinct ?answer where { wd:Q230141 wdt:P5502 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chimamanda Ngozi Adichie', 'p': 'LRB contributor ID', 'o': '?x0'}

 Q: What is {feedstock} of {pressure vessel}, that has {Mercosur code} is {7109.00.00} ?
 SPARQL: SELECT ?answer WHERE { wd:Q740460 wdt:P186 ?answer . ?answer wdt:P1987 ?x FILTER(contains(?x,'7109.00.00'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'pressure vessel', 'p': 'feedstock', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Mercosur code', 'o': '7109.00.00'}}

 Q: Who gave the{academic discipline} of {mentor} of {Hermann Lotze} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57684 wdt:P1066 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discipline', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hermann Lotze', 'p': 'mentor', 'o': '$y0'}}

 Q: What is the name of the film starring an actor from The Big Lebowski and has received awards from the British Academy of Film and Television Arts?
 SPARQL: SELECT ?answer WHERE { wd:Q337078 wdt:P161 ?answer . ?answer wdt:P166 wd:Q159661}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Big Lebowski', 'p': 'starring', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'awards', 'o': 'British Academy of Film and Television Arts'}}

 Q: What is <physically interacts with> of <electromagnetic waveguide> ?
 SPARQL: select distinct ?answer where { wd:Q354724 wdt:P129 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'electromagnetic waveguide', 'p': 'physically interacts with', 'o': '?x0'}

 Q: Is the refractive index of water equal 1.33298?
 SPARQL: ASK WHERE { wd:Q283 wdt:P1109 ?obj filter(?obj = 1.33298) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'water', 'p': 'refractive index', 'o': '?x0', '?x0': '1.33298'}

 Q: Is the fiscal/tax revenue of Del Carmen greater than 55486688.456?
 SPARQL: ASK WHERE { wd:Q28735 wdt:P3087 ?obj filter(?obj > 55486688.456) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Del Carmen', 'p': 'fiscal/tax revenue', 'o': '?x0', '?x0': '55486688.456'}

 Q: In the languages of expression of Cormac McCarthy which cases are known as the genitive case?
 SPARQL: SELECT ?answer WHERE { wd:Q272610 wdt:P1412 ?answer . ?answer wdt:P2989 wd:Q146233}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cormac McCarthy', 'p': 'languages of expression', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'cases', 'o': 'genitive case'}}

 Q: Was Cristiano Ronaldo participant of División de Honor Juvenil de Fútbol?
 SPARQL: ASK WHERE { wd:Q11571 wdt:P1344 wd:Q2023337 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Cristiano Ronaldo', 'p': 'participant of', 'o': '?x0', '?x0': 'División de Honor Juvenil de Fútbol'}]

 Q: Who gave the   {human population} of {continent} of {ghetto in Nazi-occupied Europe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2583015 wdt:P30 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ghetto in Nazi-occupied Europe', 'p': 'continent', 'o': '$y0'}}

 Q: What song is Andrew Lloyd Webber the composer of?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q180975 . ?sbj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composer', 'o': 'Andrew Lloyd Webber', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: Which taxon has the largest basic reproduction number?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P3492 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'basic reproduction number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is <Inventari del Patrimoni Arquitectònic de Catalunya code> of <Sagrada Família> ?
 SPARQL: select distinct ?answer where { wd:Q48435 wdt:P1600 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sagrada Familia', 'p': 'Inventari del Patrimoni Arquitectònic de Catalunya code', 'o': '?x0'}

 Q: Which is the possible medical findings of hypertension?
 SPARQL: select distinct ?answer where { wd:Q41861 wdt:P5131 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hypertension', 'p': 'possible medical findings', 'o': '?x0'}

 Q: What is the {anatomical structure} for {connects with} of {esophagus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2789 wd:Q173710 . ?sbj wdt:P31 wd:Q4936952 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'connects with', 'o': 'esophagus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anatomical structure'}}

 Q: Who is {is in the village of} of {borders} of {Terni} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8621 wdt:P47 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is in the village of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Terni', 'p': 'border', 'o': '$y0'}}

 Q: Which cast member from The Hitchhiker's Guide to the Galaxy played the role of Ford Prefect?
 SPARQL: SELECT ?obj WHERE { wd:Q3521267 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q928321 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cast member', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Hitchhiker's Guide to the Galaxy", 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'role', 'o': 'Ford Prefect'}}}

 Q: What is said to be the same as ethnic cleaning has to be distinguished from massacre?
 SPARQL: SELECT ?answer WHERE { wd:Q154278 wdt:P460 ?answer . ?answer wdt:P1889 wd:Q3199915}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'ethnic cleaning', 'p': 'said to be the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'distinguished from', 'o': 'massacre'}}

 Q: What is {featured in work} of {loyalty} of {Cú Chulainn} ?
 SPARQL: SELECT ?answer WHERE { wd:Q211955 wdt:P945 ?X . ?X wdt:P1441 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'featured in work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cu Chulainn', 'p': 'loyalty', 'o': '$y0'}}

 Q: How many {instruction set} are to/by {x86} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1068 wd:Q182933 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'instruction set', 'o': 'x86'}

 Q: what is the {start time} for {Annibale Carracci} has {student} as {Antonio Marziale Carracci} ?
 SPARQL: SELECT ?value WHERE { wd:Q7824 p:P802 ?s . ?s ps:P802 wd:Q2624075 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Annibale Carracci', 'p': 'student', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'student', 'o': 'Antonio Marziale Carracci'}}}

 Q: What is {died in} of {François Villon}, that has {diplomatic relation} is {Germany} ?
 SPARQL: SELECT ?answer WHERE { wd:Q849 wdt:P20 ?answer . ?answer wdt:P530 wd:Q183}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'François Villon', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Germany'}}

 Q: WHat is the fossil taxon of type OH 7 that contains the word habilis"" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj wdt:P427 wd:Q7072569 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'habilis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fossil taxon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'OH 7'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'habilis'}}

 Q: Was Grace Kelly born in Philadelphia?
 SPARQL: ASK WHERE { wd:Q3925 wdt:P19 wd:Q1345 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Grace Kelly', 'p': 'born in', 'o': '?x0', '?x0': 'Philadelphia'}]

 Q: What is {elected in} and {end cause} of {{Stanley Baldwin} has {position held} as {Member of the 34th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q166635 p:P39 ?s . ?s ps:P39 wd:Q41582587 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanley Baldwin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 34th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanley Baldwin', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 34th Parliament of the United Kingdom'}}}]

 Q: What is the {position} for {military rank} of {Salman of Saudi Arabia}
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P410 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'military rank', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is the {human} for {country of citizenship} of {Maurya Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P27 wd:Q62943 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'Maurya Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {point in time} for {Wayne Gretzky} has {award received} as {Hockey Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q209518 p:P166 ?s . ?s ps:P166 wd:Q1136687 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Wayne Gretzky', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Hockey Hall of Fame'}, 't': '?x0'}

 Q: What was Anthony Quinn nominated for, in the beginning of January 1957?
 SPARQL: SELECT ?obj WHERE { wd:Q83484 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1957')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anthony Quinn', 'p': 'nominated for', 'o': '?x0', 't': '1957'}

 Q: Which is the enterprise of the headquarters location in Cleveland?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q37320 . ?sbj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters location', 'o': 'Cleveland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: What depicts a sauna?
 SPARQL: select distinct ?answer where { ?answer wdt:P180 wd:Q57036}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'sauna'}

 Q: What award did Ed Begley receive in the year 1956?
 SPARQL: SELECT ?obj WHERE { wd:Q318312 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1956')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ed Begley', 'p': 'award', 'o': '?x0', 't': '1956'}

 Q: Did {Mesopotamia} {direction relative to location} {Postclassical Era} and {east} ?
 SPARQL: ASK WHERE { wd:Q11767 wdt:P654 wd:Q7234117 . wd:Q11767 wdt:P654 wd:Q684 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mesopotamia', 'p': 'direction relative to location', 'o': '?x0', '?x0': 'Postclassical Era'}, {'h': 'IS', 'v': '?x1', 's': 'Mesopotamia', 'p': 'direction relative to location', 'o': '?x1', '?x1': 'east'}]

 Q: What is  award received  from Henrik Pontoppidan that is  together with is  Karl Adolph Gjellerup ?
 SPARQL: SELECT ?obj WHERE { wd:Q225554 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q131487 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henrik Pontoppidan', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Karl Adolph Gjellerup'}}}

 Q: Tell me Class II combustible liquid whose name has the word toluene in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21009057 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'toluene')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class II combustible liquid'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'toluene'}}

 Q: Does Alloy 718's Poisson's ratio equal to .32?
 SPARQL: ASK WHERE { wd:Q55843475 wdt:P5593 ?obj filter(?obj = 0.32) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Alloy 718', 'p': "Poisson's ratio", 'o': '?x0', '?x0': '0.32'}

 Q: What was the start time of the head of government of San Luis Province on 12-10-2015?
 SPARQL: SELECT ?obj WHERE { wd:Q44818 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'San Luis Province', 'p': 'head of government', 'o': '?x0', 't': '2015'}

 Q: What is the landscape of Water Lilies having vernacular name of
 SPARQL: SELECT ?answer WHERE { wd:Q1189907 wdt:P180 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'اپسرا'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Water Lilies', 'p': 'landscape of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'اپسرا'}}

 Q: What is {has villages} of {Xingtai}, that has {inhabitants} is {300029} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58576 wdt:P150 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'300029'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Xingtai', 'p': 'has villages', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '300029'}}

 Q: Which is the place of work of August Sander that has executive power headed by Ernst Schwering?
 SPARQL: SELECT ?answer WHERE { wd:Q61530 wdt:P937 ?answer . ?answer wdt:P6 wd:Q1360182}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'August Sander', 'p': 'place of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive power headed by', 'o': 'Ernst Schwering'}}

 Q: Tell me revolution which contains the word o revolution in their own name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10931 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'revolution')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'revolution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'revolution'}}

 Q: What is the FAA airport code for Los Angeles International Airport?
 SPARQL: select distinct ?answer where { wd:Q8731 wdt:P240 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Los Angeles International Airport', 'p': 'FAA airport code', 'o': '?x0'}

 Q: What is the {chemical compound} for {significant drug interaction} of {erythromycin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P769 wd:Q213511 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant drug interaction', 'o': 'erythromycin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Which is the legal doctrine which starts with the letter p?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1192543 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legal doctrine'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Give me {hill} that {continent} {Asia} and which contains the word {ridges} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54050 . ?sbj wdt:P30 wd:Q48 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ridges')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hill', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'Asia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ridges'}}

 Q: Who is the family and father of Rollo?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q273773 wdt:P53 ?ans_1 . wd:Q273773 wdt:P22 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Rollo', 'p': 'family', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Rollo', 'p': 'father', 'o': '?x1'}]

 Q: What is {writer} of {Nineteen Eighty-Four}, that has {known for} is {Politics and the English Language} ?
 SPARQL: SELECT ?answer WHERE { wd:Q208460 wdt:P50 ?answer . ?answer wdt:P800 wd:Q2273966}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '1984', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'known for', 'o': 'Politics and the English Language'}}

 Q: What is the diplomatic relation of the land of Ujjain?
 SPARQL: SELECT ?answer WHERE { wd:Q200119 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ujjain', 'p': 'land', 'o': '$y0'}}

 Q: Which is the Danish urban area code for Odense?
 SPARQL: select distinct ?answer where { wd:Q25331 wdt:P1894 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Odense', 'p': 'Danish urban area code', 'o': '?x0'}

 Q: Which is calculated from the probability?
 SPARQL: select distinct ?answer where { ?answer wdt:P4934 wd:Q9492}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'calculated from', 'o': 'probability'}

 Q: What award was presented to Walter Payton in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q963117 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Walter Payton', 'p': 'award', 'o': '?x0', 't': '1993'}

 Q: Are Berliner Volksbank's net profits equal to 19,700,000?
 SPARQL: ASK WHERE { wd:Q821855 wdt:P2295 ?obj filter(?obj = 19700000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Berliner Volksbank', 'p': 'net profit', 'o': '?x0', '?x0': '19700000'}

 Q: Which is the Commonwealth realm for the anthem of God Save the Queen?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P85 wd:Q40807 . ?sbj wdt:P31 wd:Q202686 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'God Save the Queen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Commonwealth realm'}}

 Q: What is the {village} with the {MAX(area)} whose {located in the administrative territorial entity} is {Munchingi Puttu}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q532 . ?ent wdt:P2046 ?obj . ?ent wdt:P131 wd:Q11107378 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'area', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'village', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Munchingi Puttu'}}}

 Q: what is branch of biology that starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28598684 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of biology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Who is the chairperson of the U.S. Department of State?
 SPARQL: select distinct ?answer where { wd:Q789915 wdt:P488 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'U.S. Department of State', 'p': 'chairperson', 'o': '?x0'}

 Q: Which is the gene for the genetic association of schizophrenia?
 SPARQL:  select distinct ?obj where { wd:Q41112 wdt:P2293 ?obj . ?obj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'schizophrenia', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: On 1-1-1958 which award was received by Martin Buber?
 SPARQL: SELECT ?obj WHERE { wd:Q84423 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1958')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Martin Buber', 'p': 'award', 'o': '?x0', 't': '1958'}

 Q: what is the {end time} for {Ma Long} has {ranking} as {1.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q459114 p:P1352 ?s . ?s ps:P1352 ?x filter(contains(?x,'1.0')) . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ma Long', 'p': 'ranking', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ranking', 'o': '1.0'}}}

 Q: Tell me vocal group whose name has the word willows in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q120544 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'willows')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vocal group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'willows'}}

 Q: What is {educated at} of {Sylvia Plath} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q133054 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sylvia Plath', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sylvia Plath', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {hereditary title} for {officeholder} of {Salman of Saudi Arabia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q367825 . ?sbj wdt:P31 wd:Q5737899 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Salman of Saudi Arabia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hereditary title'}}

 Q: What is the {house} for {place of death} of {James Watt}
 SPARQL:  select distinct ?obj where { wd:Q9041 wdt:P20 ?obj . ?obj wdt:P31 wd:Q3947 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Watt', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'house'}}

 Q: What is {lives in} of {holds position} of {Lech Kaczyński} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2757 wdt:P39 ?X . ?X wdt:P263 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'lives in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lech Kaczyński', 'p': 'holds position', 'o': '$y0'}}

 Q: what is the {statement is subject of} for {Maggie Cheung} has {nominated for} as {César Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q234778 p:P1411 ?s . ?s ps:P1411 wd:Q24241 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maggie Cheung', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Actress'}}}

 Q: What is the {railroad} with the {MAX(daily patronage)} whose {part of} is {Massachusetts Bay Transportation Authority}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22667 . ?ent wdt:P1373 ?obj . ?ent wdt:P361 wd:Q171985 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'daily patronage', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railroad', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'part of', 'o': 'Massachusetts Bay Transportation Authority'}}}

 Q: What is the {vegetable} for {this taxon is source of} of {eggplant}
 SPARQL:  select distinct ?obj where { wd:Q7540 wdt:P1672 ?obj . ?obj wdt:P31 wd:Q11004 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'eggplant', 'p': 'this taxon is source of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vegetable'}}

 Q: What is {gender expression} of {Faust}, that has {confused with} is {man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q332885 wdt:P21 ?answer . ?answer wdt:P1889 wd:Q8441}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Faust', 'p': 'gender expression', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'confused with', 'o': 'man'}}

 Q: Is it true that the points awarded of 3-2 sets are greater than 2.4?
 SPARQL: ASK WHERE { wd:Q27210429 wdt:P3260 ?obj filter(?obj > 2.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '3-2 sets', 'p': 'points awarded', 'o': '?x0', '?x0': '2.4'}

 Q: What is {film starring} of {series} of {Plane Daffy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7201002 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Plane Daffy', 'p': 'series', 'o': '$y0'}}

 Q: Who is the author and publisher of Grand Theft Auto V?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q17452 wdt:P50 ?ans_1 . wd:Q17452 wdt:P123 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Grand Theft Auto V', 'p': 'author', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Grand Theft Auto V', 'p': 'publisher', 'o': '?x1'}]

 Q: Did {Machu_Picchu} {culture} {Inca Empire}?
 SPARQL: ASK WHERE { wd:Q676203 wdt:P2596 wd:Q28573 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Machu Picchu', 'p': 'culture', 'o': '?x0', '?x0': 'Inca Empire'}]

 Q: What is <SBN author ID> of <Beniamino Gigli> ?
 SPARQL: select distinct ?answer where { wd:Q159473 wdt:P396 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Beniamino Gigli', 'p': 'SBN author ID', 'o': '?x0'}

 Q: When did head of government of Seattle and work period (end)?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P2032 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'head of government', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}]

 Q: What is the salinity of the Baltic Sea?
 SPARQL: select distinct ?answer where { wd:Q545 wdt:P4350 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Baltic Sea', 'p': 'salinity', 'o': '?x0'}

 Q: What is {venue} of {production method} of {biscuit} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13270 wdt:P2079 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'biscuit', 'p': 'production method', 'o': '$y0'}}

 Q: What is <IOC country code> of <Gabon> ?
 SPARQL: select distinct ?answer where { wd:Q1000 wdt:P984 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gabon', 'p': 'IOC country code', 'o': '?x0'}

 Q: Is the size of the team at the start of Burkina Faso 2016 Summer Olympics greater than 4?
 SPARQL: ASK WHERE { wd:Q20113529 wdt:P2103 ?obj filter(?obj > 4.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Burkina Faso at the 2016 Summer Olympics', 'p': 'size of team at start', 'o': '?x0', '?x0': '4.0'}

 Q: What is {led to} of {field of action} of {mafia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18550 wdt:P452 ?X . ?X wdt:P1542 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'led to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mafia', 'p': 'field of action', 'o': '$y0'}}

 Q: what is the {replaces} for {Humayun} has {position held} as {Mughal emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q486188 p:P39 ?s . ?s ps:P39 wd:Q15390704 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Humayun', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Mughal emperor'}}}

 Q: Which tank locomotive has the highest number of cylinders with a 0-4-OT wheel arrangement?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q785745 . ?ent wdt:P1100 ?obj . ?ent wdt:P2978 wd:Q26234727 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of cylinders', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tank locomotive', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wheel arrangement', 'o': '0-4-0T'}}}

 Q: How many {head of government} are for {Moldova} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q217 wdt:P6 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Moldova', 'p': 'head of government', 'o': '?x0'}

 Q: What is the {taxon} for {this taxon is source of} of {opium}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1672 wd:Q46452 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'this taxon is source of', 'o': 'opium', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is the {plenary session} for {founded by} of {UNICEF}
 SPARQL:  select distinct ?obj where { wd:Q740308 wdt:P112 ?obj . ?obj wdt:P31 wd:Q18287076 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'UNICEF', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'plenary session'}}

 Q: Are the total points in Mikko Lehtonen's career equal to 0?
 SPARQL: ASK WHERE { wd:Q59951 wdt:P6544 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Mikko Lehtonen', 'p': 'total points in career', 'o': '?x0', '?x0': '0'}

 Q: Who is the person that was a student of Ivan Pavlov?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1066 wd:Q42985 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Ivan Pavlov', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: what is the {issued by} for {nipple} has {native label} as {papilla mammaria} ?
 SPARQL: SELECT ?value WHERE { wd:Q188641 p:P1705 ?s . ?s ps:P1705 ?x filter(contains(?x,'papilla mammaria')) . ?s pq:P2378 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'issued by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nipple', 'p': 'native label', 'o': '$y0'}}

 Q: Which is the National Natural Landmarks site ID of Fort Worth?
 SPARQL: select distinct ?answer where { wd:Q16558 wdt:P4182 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fort Worth', 'p': 'National Natural Landmarks site ID', 'o': '?x0'}

 Q: How many times has Bob Hawke been a candidate
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P726 wd:Q269372 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'candidate', 'o': 'Bob Hawke'}

 Q: Which {sister has} {kids} of {John Spencer, 8th Earl Spencer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q593671 wdt:P40 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Spencer, 8th Earl Spencer', 'p': 'kid', 'o': '$y0'}}

 Q: what is the {sourcing circumstances} for {Irene of Athens} has {date of birth} as {752-1-1} ?
 SPARQL: SELECT ?value WHERE { wd:Q206737 p:P569 ?s . ?s ps:P569 ?x filter(contains(?x,'752-1-1')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Irene of Athens', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'date of birth', 'o': '752-1-1'}}}

 Q: Which chemical compound has the highest standard enthalpy of formation?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P3078 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'standard enthalpy of formation', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: Which is the metalanguage which HTML5 is based on?
 SPARQL:  select distinct ?obj where { wd:Q2053 wdt:P144 ?obj . ?obj wdt:P31 wd:Q193983 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'HTML5', 'p': 'based on', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metalanguage'}}

 Q: What is {deity of} of {kami}, that has {has influence} is {koshintō} ?
 SPARQL: SELECT ?answer WHERE { wd:Q524158 wdt:P1049 ?answer . ?answer wdt:P737 wd:Q3096508}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'kami', 'p': 'deity of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has influence', 'o': 'koshintō'}}

 Q: How many {noble title} are for {Louis the Pious} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q43974 wdt:P97 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '?x0'}

 Q: What is WeRelate person ID of William Pitt, 1st Earl of Chatham ?
 SPARQL: select distinct ?answer where { wd:Q208663 wdt:P4159 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Pitt, 1st Earl of Chatham', 'p': 'WeRelate person ID', 'o': '?x0'}

 Q: What is name of the higher taxon of Medicago sativa whose vernacular name is אספסת?
 SPARQL: SELECT ?answer WHERE { wd:Q156106 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'אספסת'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Medicago sativa', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'אספסת'}}

 Q: What is the {owner of} and the {home venue} of {Los_Angeles_Lakers} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q121783 wdt:P1830 ?ans_1 . wd:Q121783 wdt:P115 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Los Angeles Lakers', 'p': 'owner of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Los Angeles Lakers', 'p': 'home venue', 'o': '?x1'}]

 Q: What is the {public office} for {office held by head of government} of {Lahore}
 SPARQL:  select distinct ?obj where { wd:Q11739 wdt:P1313 ?obj . ?obj wdt:P31 wd:Q294414 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lahore', 'p': 'office held by head of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public office'}}

 Q: What is {follows} and {followed by} of {{Charlemagne} has {noble title} as {king of Lombards}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P97 ?s . ?s ps:P97 wd:Q22997793 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Lombards'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Lombards'}}}]

 Q: Does 1 E2 has a lower limit equal to 100?
 SPARQL: ASK WHERE { wd:Q13012283 wdt:P5447 ?obj filter(?obj = 100) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1 E2', 'p': 'lower limit', 'o': '?x0', '?x0': '100'}

 Q: Did {Hypertension} {drug used for treatment} {labetalol} and {piretanide} ?
 SPARQL: ASK WHERE { wd:Q41861 wdt:P2176 wd:Q958087 . wd:Q41861 wdt:P2176 wd:Q3905617 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'hypertension', 'p': 'used for treatment', 'o': '?x0', '?x0': 'labetalol'}, {'h': 'IS', 'v': '?x1', 's': 'hypertension', 'p': 'used for treatment', 'o': '?x1', '?x1': 'piretanide'}]

 Q: Which is the Cinema Treasures ID for Canadian Museum of History>=?
 SPARQL: select distinct ?answer where { wd:Q1032269 wdt:P4129 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Canadian Museum of History', 'p': 'Cinema Treasures ID', 'o': '?x0'}

 Q: How many {occupant} are to/by {New York Yankees} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P466 wd:Q213417 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'occupant', 'o': 'New York Yankees'}

 Q: What is {location of narrative} of {Raging Bull}, that has {divided into} is {Washtenaw County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q220780 wdt:P840 ?answer . ?answer wdt:P150 wd:Q137916}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Raging Bull', 'p': 'location of narrative', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Washtenaw County'}}

 Q: Did {William_the_Conqueror} {owner of} {Tower of London} and {Windsor} ?
 SPARQL: ASK WHERE { wd:Q37594 wdt:P1830 wd:Q62378 . wd:Q37594 wdt:P1830 wd:Q464955 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'William the Conqueror', 'p': 'owner of', 'o': '?x0', '?x0': 'Tower of London'}, {'h': 'IS', 'v': '?x1', 's': 'William the Conqueror', 'p': 'owner of', 'o': '?x1', '?x1': 'Windsor'}]

 Q: What version of bitcoin software was published 11-1-2016?
 SPARQL: SELECT ?obj WHERE { wd:Q131723 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'bitcoin', 'p': 'version', 'o': '?x0', 't': '2016'}

 Q: When was the graduate of Konstantin Balmont constructed?
 SPARQL: SELECT ?answer WHERE { wd:Q314498 wdt:P69 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constructed', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Konstantin Balmont', 'p': 'graduate of', 'o': '$y0'}}

 Q: tell  me literary genre union of list values as qualifiers  starts with f
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q223393 . ?sbj wdt:P2737 wd:Q23766486 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary genre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'union of', 'o': 'list values as qualifiers'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: What is the {historical country} for {culture} of {Rome}
 SPARQL:  select distinct ?obj where { wd:Q220 wdt:P2596 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rome', 'p': 'culture', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: Who is creator Criss Angel?
 SPARQL: select distinct ?answer where { ?answer wdt:P170 wd:Q131685}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'creator', 'o': 'Criss Angel'}

 Q: What is {place of death} of {Samuel P. Huntington} that is {located in the administrative territorial entity} is {Massachusetts} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19074 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q771 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Samuel P. Huntington', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Massachusetts'}}}

 Q: Which is the British Museum thesaurus ID for mineral?
 SPARQL: select distinct ?answer where { wd:Q7946 wdt:P3632 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mineral', 'p': 'British Museum thesaurus ID', 'o': '?x0'}

 Q: Which is the Encyclopædia Universalis ID of John Singer Sargent?
 SPARQL: select distinct ?answer where { wd:Q155626 wdt:P3219 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Singer Sargent', 'p': 'Encyclopædia Universalis ID', 'o': '?x0'}

 Q: What are the Hindu scriptures and texts which start with the letter b that is translated by Franklin Edgerton
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1194040 . ?sbj wdt:P655 wd:Q16002981 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Hindu scriptures and texts', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'translated by', 'o': 'Franklin Edgerton'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: What is {operated by} of {railway line} of {36th Street} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4635783 wdt:P81 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '36th Street', 'p': 'railway line', 'o': '$y0'}}

 Q: What is {inflation rate of consumer price index} of {aspect of} of {history of Chad} ?
 SPARQL: SELECT ?answer WHERE { wd:Q754192 wdt:P1269 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'history of Chad', 'p': 'aspect of', 'o': '$y0'}}

 Q: Who was the spouse of Catherine of Medici in 1533?
 SPARQL: SELECT ?obj WHERE { wd:Q131552 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1533')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Catherine of Medici', 'p': 'spouse', 'o': '?x0', 't': '1533'}

 Q: When did Charles Aznavour receive the award for Officer of the National Order of Quebec?
 SPARQL: SELECT ?value WHERE { wd:Q1785 p:P166 ?s . ?s ps:P166 wd:Q15464524 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Charles Aznavour', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Officer of the National Order of Quebec'}, 't': '?x0'}

 Q: What is {elected in} and {end cause} of {{David Trimble} has {position held} as {Member of the 1st Northern Ireland Assembly}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q192556 p:P39 ?s . ?s ps:P39 wd:Q37303731 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Trimble', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 1st Northern Ireland Assembly'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Trimble', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 1st Northern Ireland Assembly'}}}]

 Q: Who is {students} of {painters} {Elisabeth Vilhelmine Juel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50872419 wdt:P170 ?X . ?X wdt:P802 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'student', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Elisabeth Vilhelmine Juel', 'p': 'painter', 'o': '$y0'}}

 Q: What is canonization status of the saint  ?
 SPARQL: select distinct ?answer where { ?answer wdt:P411 wd:Q43115}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'canonization status', 'o': 'saint'}

 Q: What is the battery of the plane that has causes of eating?
 SPARQL: SELECT ?answer WHERE { wd:Q204260 wdt:P618 ?answer . ?answer wdt:P828 wd:Q213449}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'plane', 'p': 'battery', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cause', 'o': 'eating'}}

 Q: What is <USA Gymnastics athlete ID> of <Gabby Douglas> ?
 SPARQL: select distinct ?answer where { wd:Q233286 wdt:P3671 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gabby Douglas', 'p': 'USA Gymnastics athlete ID', 'o': '?x0'}

 Q: Name a part of a plant that contain the word "veil " in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20011319 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'veil')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'part of a plant'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'veil'}}

 Q: What is {works for} of {incumbent} of {Chief Official White House Photographer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28955826 wdt:P1308 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'works for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chief Official White House Photographer', 'p': 'incumbent', 'o': '$y0'}}

 Q: What are the stratus which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q40526 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stratus'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: How many {medical examinations} are for {liver cirrhosis} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q147778 wdt:P923 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'cirrhosis of the liver', 'p': 'medical examinations', 'o': '?x0'}

 Q: Was Coldplay's genre rock music?
 SPARQL: ASK WHERE { wd:Q45188 wdt:P136 wd:Q11399 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Coldplay', 'p': 'genre', 'o': '?x0', '?x0': 'rock music'}]

 Q: What was the population of Taraz in 1989?
 SPARQL: SELECT ?obj WHERE { wd:Q486545 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Taraz', 'p': 'population', 'o': '?x0', 't': '1989'}

 Q: What is the Class IB flammable liquid with the highest fusion enthalpy whose instance of is Class IB flammable liquid ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2066 ?obj . ?ent wdt:P31 wd:Q21009055 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'fusion enthalpy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid'}}

 Q: Is it true that the sublimation temperature of starch is equal to 410?
 SPARQL: ASK WHERE { wd:Q41534 wdt:P2113 ?obj filter(?obj = 410) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'starch', 'p': 'sublimation temperature', 'o': '?x0', '?x0': '410'}

 Q: What is the number of out of school children of the continent of Kagera River ?
 SPARQL: SELECT ?answer WHERE { wd:Q2750140 wdt:P30 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kagera River', 'p': 'continent', 'o': '$y0'}}

 Q: What is in the administrative unit of Imo State, specifically the one who's capital city is Lagos?
 SPARQL: SELECT ?answer WHERE { wd:Q842939 wdt:P131 ?answer . ?answer wdt:P36 wd:Q8673}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Imo State', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Lagos'}}

 Q: Which is the coat of arms for the coat of arms of Valencia?
 SPARQL:  select distinct ?obj where { wd:Q8818 wdt:P237 ?obj . ?obj wdt:P31 wd:Q14659 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Valencia', 'p': 'coat of arms', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'coat of arms'}}

 Q: What is {educated at} of {James Heckman} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q312561 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Heckman', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Heckman', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is {titleholder} of {awards received} of {Gene Wolfe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q361149 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'titleholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gene Wolfe', 'p': 'awards', 'o': '$y0'}}

 Q: What are the coordinates for the location of the Limpopo river source?
 SPARQL: SELECT ?obj WHERE { wd:Q173017 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Limpopo', 'p': 'coordinates', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for', 'o': 'river source'}}}

 Q: Who are the carries for the Confederation Bridge?
 SPARQL: select distinct ?answer where { wd:Q865076 wdt:P2505 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Confederation Bridge', 'p': 'carries', 'o': '?x0'}

 Q: What is {member of sports team} of {Rinus Michels} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q2154479 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rinus Michels', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What county seat of N'Djamena contains the villages of the Kanem Region?
 SPARQL: SELECT ?answer WHERE { wd:Q3659 wdt:P1376 ?answer . ?answer wdt:P150 wd:Q849841}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "N'Djamena", 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'contains', 'o': 'Kanem Region'}}

 Q: What is {end time} and {start time} of {{Kim Novak} has {spouse} as {Richard Johnson}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q212879 p:P26 ?s . ?s ps:P26 wd:Q166422 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kim Novak', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Richard Johnson'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kim Novak', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Richard Johnson'}}}]

 Q: What is {inventory number} of {Liberty Leading the People} that is {collection} is {Department of Paintings of the Louvre} ?
 SPARQL: SELECT ?obj WHERE { wd:Q29530 p:P217 ?s . ?s ps:P217 ?obj . ?s pq:P195 wd:Q3044768 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inventory number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Liberty Leading the People', 'p': 'inventory number', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'collection', 'o': 'Department of Paintings of the Louvre'}}}

 Q: Is it true that the Gini coefficient of Tunisia equals to 36.1?
 SPARQL: ASK WHERE { wd:Q948 wdt:P1125 ?obj filter(?obj = 36.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tunisia', 'p': 'Gini coefficient', 'o': '?x0', '?x0': '36.1'}

 Q: What are the animated series that executive producer Ken Keeler and which contains the word futurama in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581714 . ?sbj wdt:P1431 wd:Q1339527 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'futurama')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive producer', 'o': 'Ken Keeler'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'futurama'}}

 Q: Mayor John Purroy Mitchel is the mayor of what place which is also the deathplace of William Magear Tweed?
 SPARQL: SELECT ?answer WHERE { wd:Q1353450 wdt:P20 ?answer . ?answer wdt:P6 wd:Q3182321}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Magear Tweed', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mayor', 'o': 'John Purroy Mitchel'}}

 Q: Is the Alexa rank of Wolfram Alpha less than 1290.4?
 SPARQL: ASK WHERE { wd:Q207006 wdt:P1661 ?obj filter(?obj < 1290.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Wolfram Alpha', 'p': 'Alexa rank', 'o': '?x0', '?x0': '1290.4'}

 Q: What is the {people} for {indigenous to} of {Norwegian}
 SPARQL:  select distinct ?obj where { wd:Q9043 wdt:P2341 ?obj . ?obj wdt:P31 wd:Q2472587 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'no', 'p': 'indigenous to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: Is it true that the stroke of the SNCF 232.P.1 equals 255?
 SPARQL: ASK WHERE { wd:Q2815068 wdt:P2557 ?obj filter(?obj = 255) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'SNCF 232.P.1', 'p': 'stroke', 'o': '?x0', '?x0': '255'}

 Q: Did {Jerry_Heller} {military branch} {United States Army}?
 SPARQL: ASK WHERE { wd:Q2748625 wdt:P241 wd:Q9212 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jerry Heller', 'p': 'military branch', 'o': '?x0', '?x0': 'U.S. Army'}]

 Q: What GSRR rating did World of Warcraft get?
 SPARQL: select distinct ?answer where { wd:Q131007 wdt:P916 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'World of Warcraft', 'p': 'GSRR rating', 'o': '?x0'}

 Q: tell  me document that editor National Constituent Assembly  starts withc
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49848 . ?sbj wdt:P98 wd:Q876424 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'document', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'editor', 'o': 'National Constituent Assembly'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {is in the region of} of {Zealand}, that has {state headed by} is {Christopher of Bavaria} ?
 SPARQL: SELECT ?answer WHERE { wd:Q25535 wdt:P131 ?answer . ?answer wdt:P35 wd:Q58056}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Zealand', 'p': 'region', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'state headed by', 'o': 'Christopher of Bavaria'}}

 Q: What is {diplomatic relation} of {Mexico} that is {statement is subject of} is {Holy See–Mexico relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q96 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q5886105 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mexico', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Holy See–Mexico relations'}}}

 Q: what is the {series ordinal} for {Montserrat Caballé i Folch} has {given name} as {María de Montserrat} ?
 SPARQL: SELECT ?value WHERE { wd:Q151435 p:P735 ?s . ?s ps:P735 wd:Q47487249 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Montserrat Caballé', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'María de Montserrat'}}}

 Q: what is the {start time} for {Philipp Kirkorov} has {educated at} as {Gnessin Russian Academy of Music} ?
 SPARQL: SELECT ?value WHERE { wd:Q494596 p:P69 ?s . ?s ps:P69 wd:Q372040 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philipp Kirkorov', 'p': 'education', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'education', 'o': 'Gnessin Russian Academy of Music'}}}

 Q: What is the {human} for {place of birth} of {Monterrey}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P19 wd:Q81033 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Monterrey', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {award received} of {8½} that is {winner} is {Piero Gherardi} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12018 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q506734 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '8 1/2', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'Piero Gherardi'}}}

 Q: what is the {nature of statement} for {Tacitus} has {student of} as {Quintilian} ?
 SPARQL: SELECT ?value WHERE { wd:Q2161 p:P1066 ?s . ?s ps:P1066 wd:Q193769 . ?s pq:P5102 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nature of statement', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tacitus', 'p': 'student of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'student of', 'o': 'Quintilian'}}}

 Q: What is {etymology} of {lynching}, that has {born at} is {Colony of Virginia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q486775 wdt:P138 ?answer . ?answer wdt:P19 wd:Q1070529}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'lynching', 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born at', 'o': 'Colony of Virginia'}}

 Q: What is the HDI of the city of Ceuta?
 SPARQL: SELECT ?answer WHERE { wd:Q5823 wdt:P131 ?answer . ?answer wdt:P1081 ?x FILTER(contains(?x,'0.803'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ceuta', 'p': 'city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'HDI', 'o': '0.803'}}

 Q: What is {musician} of {sequel of} of {I Will Be Here} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5979779 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I Will Be Here', 'p': 'sequel of', 'o': '$y0'}}

 Q: When Tsung-Dao Lee was award Nobel Prize in Physics?
 SPARQL: SELECT ?value WHERE { wd:Q183679 p:P166 ?s . ?s ps:P166 wd:Q38104 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tsung-Dao Lee', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Nobel Prize in Physics'}, 't': '?x0'}

 Q: What is the {human} with the {MIN(time in space)} whose {country of citizenship} is {United States of America}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5 . ?ent wdt:P2873 ?obj . ?ent wdt:P27 wd:Q30} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'time in space', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'America'}}}

 Q: What are feature film which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24869 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'feature film'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which is the Shironet song ID of O Captain! My Captain!?
 SPARQL: select distinct ?answer where { wd:Q2008338 wdt:P4035 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'O Captain! My Captain!', 'p': 'Shironet song ID', 'o': '?x0'}

 Q: Tell me atmospheric electricity whose name has the word ball in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q427085 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ball')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'atmospheric electricity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ball'}}

 Q: Which bridge did Isambard Kingdom Brunel engineer?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P631 wd:Q207380 . ?sbj wdt:P31 wd:Q12280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'engineer', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bridge'}}

 Q: What is established by the Rurik dynasty that has been born in Europe?
 SPARQL: SELECT ?answer WHERE { wd:Q210398 wdt:P112 ?answer . ?answer wdt:P19 wd:Q46}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rurik dynasty', 'p': 'established by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Europe'}}

 Q: what is the {point in time} for {Bryan Adams} has {nominated for} as {Juno Award for Single of the Year} ?
 SPARQL: SELECT ?value WHERE { wd:Q482907 p:P1411 ?s . ?s ps:P1411 wd:Q6314103 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bryan Adams', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Juno Award for Single of the Year'}, 't': '?x0'}

 Q: What is the {open content} for {programming language} of {PHP}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P277 wd:Q59 . ?sbj wdt:P31 wd:Q1293664 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'programming language', 'o': 'PHP', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'open content'}}

 Q: What is the {symbol of the European Union} for {anthem} of {European Union}
 SPARQL:  select distinct ?obj where { wd:Q458 wdt:P85 ?obj . ?obj wdt:P31 wd:Q23774077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'EU', 'p': 'anthem', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'symbol of the European Union'}}

 Q: what is the {point in time} for {Julian Barnes} has {nominated for} as {Man Booker Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q295431 p:P1411 ?s . ?s ps:P1411 wd:Q160082 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Julian Barnes', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Booker Prize'}, 't': '?x0'}

 Q: What is the {human} for {student} of {John the Baptist}
 SPARQL:  select distinct ?obj where { wd:Q40662 wdt:P802 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John the Baptist', 'p': 'student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Name a uninformed search that uses graph that starts with letter F
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4443425 . ?sbj wdt:P2283 wd:Q2479726 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'uninformed search', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'graph'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: what is the {end time} for {Sasha Grey} has {member of} as {aTelecine} ?
 SPARQL: SELECT ?value WHERE { wd:Q2709 p:P463 ?s . ?s ps:P463 wd:Q4033106 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sasha Grey', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'aTelecine'}}}

 Q: what is the start time for Rashi has residence as Worms ?
 SPARQL: SELECT ?value WHERE { wd:Q26456 p:P551 ?s . ?s ps:P551 wd:Q3852 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rashi', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Worms'}}}

 Q: What is {inhabitants} of {place of origin} of {The Fresh Prince of Bel-Air} ?
 SPARQL: SELECT ?answer WHERE { wd:Q309063 wdt:P495 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Fresh Prince of Bel-Air', 'p': 'place of origin', 'o': '$y0'}}

 Q: What is Hepatitis health specialty and medical examinations?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q131742 wdt:P923 ?ans_1 . wd:Q131742 wdt:P1995 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hepatitis', 'p': 'medical examinations', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hepatitis', 'p': 'health specialty', 'o': '?x1'}]

 Q: What is the programming language used for JavaScript?
 SPARQL: select distinct ?answer where { ?answer wdt:P277 wd:Q2005}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'programming language', 'o': 'JavaScript'}

 Q: Whichs {house} of {characters} of {Benvenuto Cellini} ?
 SPARQL: SELECT ?answer WHERE { wd:Q277846 wdt:P674 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'house', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benvenuto Cellini', 'p': 'characters', 'o': '$y0'}}

 Q: What is Japan's diplomatic relationship with the jurisdiction of unconscionability?
 SPARQL: SELECT ?answer WHERE { wd:Q896358 wdt:P1001 ?answer . ?answer wdt:P530 wd:Q17}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'unconscionability', 'p': 'jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Japan'}}

 Q: Which taxon has the highest frequency of audible sound?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16521 . ?ent wdt:P3465 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum frequency of audible sound', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: Tell me studio album whose name has the word wolf in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208569 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wolf')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'studio album'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wolf'}}

 Q: IS THE ORBITAL ECCENTRICITY OF THE 6275 KIRYU EQAULS TO 0.01
 SPARQL: ASK WHERE { wd:Q556104 wdt:P1096 ?obj filter(?obj = 0.01) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '6275 Kiryu', 'p': 'orbital eccentricity', 'o': '?x0', '?x0': '0.01'}

 Q: What is the {musical} for {composer} of {Pete Townshend}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q26933 . ?sbj wdt:P31 wd:Q2743 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composer', 'o': 'Pete Townshend', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical'}}

 Q: What is {diplomatic relation} of {state} of {Arena Football League} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2725641 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arena Football League', 'p': 'state', 'o': '$y0'}}

 Q: Which is an active ingredient of the alcoholic beverage?
 SPARQL: select distinct ?answer where { wd:Q154 wdt:P3781 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'alcoholic beverage', 'p': 'active ingredient', 'o': '?x0'}

 Q: What is {differs from} of {heat}, that has {subitem of} is {energy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44432 wdt:P1889 ?answer . ?answer wdt:P1269 wd:Q11379}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'heat', 'p': 'differs from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subitem of', 'o': 'energy'}}

 Q: When did Delta Air Lines have a 12.8 market capitalization?
 SPARQL: SELECT ?value WHERE { wd:Q188920 p:P2226 ?s . ?s ps:P2226 ?x filter(contains(?x,'1.1643e+10')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Delta Air Lines', 'p': 'market capitalization', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'market capitalization', 'o': '1.1643e+10'}, 't': '?x0'}

 Q: What is the maximum angular resolution of robotic telescope?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3982946 . ?ent wdt:P3439 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'angular resolution', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'robotic telescope'}}

 Q: Bay Area Rapid Transit KML rank is what?
 SPARQL: select distinct ?answer where { wd:Q610120 wdt:P3096 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bay Area Rapid Transit', 'p': 'KML', 'o': '?x0'}

 Q: Is it true that 96 is the hydraulic head of Alqueva Dam?
 SPARQL: ASK WHERE { wd:Q2165228 wdt:P4441 ?obj filter(?obj = 96) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Alqueva Dam', 'p': 'hydraulic head', 'o': '?x0', '?x0': '96'}

 Q: What is {president} of {edited by} of {Garcia Report} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17277843 wdt:P98 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'president', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Garcia Report', 'p': 'edited by', 'o': '$y0'}}

 Q: What area are the papers at the Monique Genonceaux about?
 SPARQL: SELECT ?answer WHERE { wd:Q49965119 wdt:P485 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Monique Genonceaux', 'p': 'papers at', 'o': '$y0'}}

 Q: What is <NDL Auth ID> of <handball> ?
 SPARQL: select distinct ?answer where { wd:Q8418 wdt:P349 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'handball', 'p': 'NDL Auth ID', 'o': '?x0'}

 Q: What is Javier Zanetti's Soccerway player ID?
 SPARQL: select distinct ?answer where { wd:Q52876 wdt:P2369 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Javier Zanetti', 'p': 'Soccerway player ID', 'o': '?x0'}

 Q: What is {opposite} of {employment} of {Takeshi Inoue} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11373250 wdt:P106 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Takeshi Inoue', 'p': 'employment', 'o': '$y0'}}

 Q: When did Madison have a population of 6611?
 SPARQL: SELECT ?value WHERE { wd:Q43788 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'6611.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Madison', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '6611.0'}, 't': '?x0'}

 Q: What is the chemical compound with the least acceptable daily intake?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2542 ?obj . ?ent wdt:P31 wd:Q11173} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'acceptable daily intake', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is {medical specialty} of {treats medical condition} of {sodium bicarbonate} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179731 wdt:P2175 ?X . ?X wdt:P1995 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'medical specialty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sodium Bicarbonate', 'p': 'treats', 'o': '$y0'}}

 Q: What is the {human} for {spouse} of {Janet Yellen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P26 wd:Q263725 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'married to', 'o': 'Janet Yellen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the number of casualties of Bulgaria equal to 79?
 SPARQL: ASK WHERE { wd:Q1265953 wdt:P1590 ?obj filter(?obj = 79) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Bulgaria', 'p': 'number of casualties', 'o': '?x0', '?x0': '79'}

 Q: What is {award received} of {John Mott} that is {prize money} is {60762.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q159726 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'60762.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Mott', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '60762.0'}}}

 Q: Which is the mythical dog that was killed by Heracles?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P157 wd:Q122248 . ?sbj wdt:P31 wd:Q30307328 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'killed by', 'o': 'Heracles', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythical dog'}}

 Q: tell me chartered company starts with c
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q162157 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chartered company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {population} of {Arizona} that is {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q816 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arizona', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: Which is the democratic republic that is replaced by the Thirteen Colonies?
 SPARQL:  select distinct ?obj where { wd:Q179997 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thirteen Colonies', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: What is the {sovereign state} for {replaced by} of {Thirteen Colonies}
 SPARQL:  select distinct ?obj where { wd:Q179997 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thirteen Colonies', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is {Showrunner} of {appears in} of {Creeper} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3696918 wdt:P1441 ?X . ?X wdt:P1431 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'showrunner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Creeper', 'p': 'appears in', 'o': '$y0'}}

 Q: Which is partially coincident with the web application?
 SPARQL: select distinct ?answer where { wd:Q189210 wdt:P1382 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'web application', 'p': 'partially coincident with', 'o': '?x0'}

 Q: What is {activity corresponding to this occupation} of {astronaut}, that has {often confused with} is {unmanned spaceflight} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11631 wdt:P425 ?answer . ?answer wdt:P1889 wd:Q512399}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'astronaut', 'p': 'activity corresponding to this occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'confused with', 'o': 'unmanned spaceflight'}}

 Q: Is the average shot length of the Too Late greater than 16.0?
 SPARQL: ASK WHERE { wd:Q20649989 wdt:P2208 ?obj filter(?obj > 16.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Too Late', 'p': 'average shot length', 'o': '?x0', '?x0': '16.0'}

 Q: what is the {start time} for {Kingdom of England} has {instance of} as {state} ?
 SPARQL: SELECT ?value WHERE { wd:Q179876 p:P31 ?s . ?s ps:P31 ?x filter(contains(?x,'http://dbpedia.org/ontology/State')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingdom of England', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'http'}}}

 Q: Is the wing area of the Lancaster equal to 1556.4?
 SPARQL: ASK WHERE { wd:Q203622 wdt:P2112 ?obj filter(?obj = 1556.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lancaster', 'p': 'wing area', 'o': '?x0', '?x0': '1556.4'}

 Q: what is the {criterion used} for {Saturday} has {series ordinal} as {0} ?
 SPARQL: SELECT ?value WHERE { wd:Q131 p:P1545 ?s . ?s ps:P1545 ?x filter(contains(?x,'0')) . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saturday', 'p': 'series ordinal', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '0'}}}

 Q: Who is the narrator of the Adventures of Huckleberry Finn?
 SPARQL: select distinct ?answer where { wd:Q215410 wdt:P2438 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Adventures of Huckleberry Finn', 'p': 'narrator', 'o': '?x0'}

 Q: What is the name of the artery that supplies the liver?
 SPARQL:  select distinct ?obj where { wd:Q9368 wdt:P2286 ?obj . ?obj wdt:P31 wd:Q9655 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'liver', 'p': 'artery', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'artery'}}

 Q: what is the {end time} for {Jefferson Davis} has {spouse} as {Varina Davis} ?
 SPARQL: SELECT ?value WHERE { wd:Q162269 p:P26 ?s . ?s ps:P26 wd:Q457993 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jefferson Davis', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Varina Davis'}}}

 Q: what is the {point in time} for {Michael Palin} has {award received} as {BAFTA Award for Best Actor in a Supporting Role} ?
 SPARQL: SELECT ?value WHERE { wd:Q223985 p:P166 ?s . ?s ps:P166 wd:Q548389 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Michael Palin', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'BAFTA Award for Best Actor in a Supporting Role'}, 't': '?x0'}

 Q: Tell me neighborhood whose name has zeitungsviertel in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q123705 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitungsviertel')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'neighborhood'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeitungsviertel'}}

 Q: How many {executive body} are to/by {prefecture} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P208 wd:Q515716 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'executive body', 'o': 'prefecture'}

 Q: Is it true that pKa of cocaine equals to 8.41?
 SPARQL: ASK WHERE { wd:Q41576 wdt:P1117 ?obj filter(?obj = 8.41) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'cocaine', 'p': 'pKa', 'o': '?x0', '?x0': '8.41'}

 Q: What is Pantera's genre and record label?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q180880 wdt:P136 ?ans_1 . wd:Q180880 wdt:P264 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Pantera', 'p': 'genre', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Pantera', 'p': 'record label', 'o': '?x1'}]

 Q: what is the {start time} for {Luxembourg} has {member of} as {International Centre for Settlement of Investment Disputes} ?
 SPARQL: SELECT ?value WHERE { wd:Q32 p:P463 ?s . ?s ps:P463 wd:Q899770 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Luxembourg', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'International Centre for Settlement of Investment Disputes'}}}

 Q: What is {label in official language} of {historical period} of {Ephrem the Syrian} ?
 SPARQL: SELECT ?answer WHERE { wd:Q200608 wdt:P2348 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'label in official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ephrem the Syrian', 'p': 'historical period', 'o': '$y0'}}

 Q: What is {has counties} of {sovereign state} of {Hōryū-ji} ?
 SPARQL: SELECT ?answer WHERE { wd:Q261932 wdt:P17 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has counties', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hōryū-ji', 'p': 'country', 'o': '$y0'}}

 Q: What is the {human} for {founded by} of {International Red Cross and Red Crescent Movement}
 SPARQL:  select distinct ?obj where { wd:Q7178 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'International Red Cross and Red Crescent Movement', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What location with 1036412 inhabitants is the birthplace of Cecilia Brækhus?
 SPARQL: SELECT ?answer WHERE { wd:Q292783 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'1036412'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cecilia Brækhus', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '1036412'}}

 Q: what is the {start time} for {Victor Hugo} has {member of} as {Académie française} ?
 SPARQL: SELECT ?value WHERE { wd:Q535 p:P463 ?s . ?s ps:P463 wd:Q161806 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Académie française'}}}

 Q: Give me {commune of France with specific status} that {list of monuments} {list of monuments in Lyon} and which that starts with {'l'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22927616 . ?sbj wdt:P1456 wd:Q3252117 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commune of France with specific status', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'list of monuments', 'o': 'list of monuments in Lyon'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: Who is the composer and librettist for West Side Story?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q669010 wdt:P86 ?ans_1 . wd:Q669010 wdt:P87 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'West Side Story', 'p': 'composer', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'West Side Story', 'p': 'librettist', 'o': '?x1'}]

 Q: Does Dick Cheney have children Elizabeth Cheney and Mary Cheney?
 SPARQL: ASK WHERE { wd:Q48259 wdt:P40 wd:Q5362573 . wd:Q48259 wdt:P40 wd:Q442226 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Dick Cheney', 'p': 'child', 'o': '?x0', '?x0': 'Elizabeth Cheney'}, {'h': 'IS', 'v': '?x1', 's': 'Dick Cheney', 'p': 'child', 'o': '?x1', '?x1': 'Mary Cheney'}]

 Q: What is the {human} for {rector} of {McGill University}
 SPARQL:  select distinct ?obj where { wd:Q201492 wdt:P1075 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'McGill University', 'p': 'rector', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the {national anthem} for {anthem} of {European Union}
 SPARQL:  select distinct ?obj where { wd:Q458 wdt:P85 ?obj . ?obj wdt:P31 wd:Q23691 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Union', 'p': 'anthem', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national anthem'}}

 Q: What is {member of sports team} of {Glenn McGrath} that is {start time} is {2000-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1392178 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Glenn McGrath', 'p': 'team', 'o': '?x0', 't': '2000'}

 Q: Is the number of volunteers of the French Red Cross equal to 68400?
 SPARQL: ASK WHERE { wd:Q3003244 wdt:P6125 ?obj filter(?obj = 68400.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'French Red Cross', 'p': 'number of volunteers', 'o': '?x0', '?x0': '68400.0'}

 Q: Who are the inhabitants of the basin countries of Barents Sea?
 SPARQL: SELECT ?answer WHERE { wd:Q45823 wdt:P205 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barents Sea', 'p': 'basin countries', 'o': '$y0'}}

 Q: What is the GUI toolkit or framework for Objective-C?
 SPARQL: select distinct ?answer where { ?answer wdt:P1414 wd:Q188531}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'GUI toolkit or framework', 'o': 'Objective-C'}

 Q: What is <sidekick of> of <Luigi> ?
 SPARQL: select distinct ?answer where { wd:Q210593 wdt:P2546 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Luigi', 'p': 'sidekick of', 'o': '?x0'}

 Q: what is the {for work} for {Mark Rylance} has {award received} as {British Academy Television Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q324572 p:P166 ?s . ?s ps:P166 wd:Q2925701 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mark Rylance', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'British Academy Television Award for Best Actor'}}}

 Q: What is Songkick artist ID of Bohuslav Martinů ?
 SPARQL: select distinct ?answer where { wd:Q223258 wdt:P3478 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bohuslav Martinů', 'p': 'Songkick artist ID', 'o': '?x0'}

 Q: Tell me about country of citizenship of Compton Mackenzie and end time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1122051 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Compton Mackenzie', 'p': 'country of citizenship', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'country of citizenship', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Compton Mackenzie', 'p': 'country of citizenship', 'o': '$y0'}}]

 Q: What is the {university and college sports club} for {represents} of {Duke University}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1268 wd:Q168751 . ?sbj wdt:P31 wd:Q2367225 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'represents', 'o': 'Duke University', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'university and college sports club'}}

 Q: What is {extreme point south} of {set in location} of {The Third Man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q271830 wdt:P840 ?X . ?X wdt:P1333 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'extreme point south', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Third Man', 'p': 'set in location', 'o': '$y0'}}

 Q: What is the {human} for {patient of} of {Louis XVIII of France}
 SPARQL:  select distinct ?obj where { wd:Q7750 wdt:P3205 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Louis XVIII of France', 'p': 'patient of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {altitude} of {partner town} of {Saskatoon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10566 wdt:P190 ?X . ?X wdt:P2044 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'altitude', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saskatoon', 'p': 'partner town', 'o': '$y0'}}

 Q: Is the total revenue of the Serviam Girls Academy equal to 672343?
 SPARQL: ASK WHERE { wd:Q7455628 wdt:P2139 ?obj filter(?obj = 672343) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Serviam Girls Academy', 'p': 'total revenue', 'o': '?x0', '?x0': '672343'}

 Q: Give me {college town} that {located in or next to body of water} {Rhine} and which contains the word {mannheim} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1187811 . ?sbj wdt:P206 wd:Q584 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'mannheim')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college town', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in or next to body of water', 'o': 'Rhine'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'mannheim'}}

 Q: What is {actress} of {comes before} of {Cotton Comes to Harlem} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5175678 wdt:P156 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actress', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cotton Comes to Harlem', 'p': 'comes before', 'o': '$y0'}}

 Q: Is the chromosome count of the Passiflora pentagona equal to 24?
 SPARQL: ASK WHERE { wd:Q17557987 wdt:P5230 ?obj filter(?obj = 24) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Passiflora pentagona', 'p': 'chromosome count', 'o': '?x0', '?x0': '24'}

 Q: What is {birthplace} of {Joseph Brodsky}, that has {next to lake} is {Bolshaya Neva River} ?
 SPARQL: SELECT ?answer WHERE { wd:Q862 wdt:P19 ?answer . ?answer wdt:P206 wd:Q27780}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph Brodsky', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next to lake', 'o': 'Bolshaya Neva River'}}

 Q: What is the {human} for {cast member} of {Forrest Gump}
 SPARQL:  select distinct ?obj where { wd:Q134773 wdt:P161 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Forrest Gump', 'p': 'cast member', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who are the parents of Aretha Franklin?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q125121 wdt:P22 ?ans_1 . wd:Q125121 wdt:P25 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Aretha Franklin', 'p': 'parent', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Aretha Franklin', 'p': 'parent', 'o': '?x1'}]

 Q: What is Little Rock's Legal Entity ID?
 SPARQL: select distinct ?answer where { wd:Q33405 wdt:P1278 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Little Rock', 'p': 'Legal Entity ID', 'o': '?x0'}

 Q: What is the {disease} with the {MIN(disease burden)} whose {drug used for treatment} is {erythromycin}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12136 . ?ent wdt:P2854 ?obj . ?ent wdt:P2176 wd:Q213511} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'disease burden', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used for treatment', 'o': 'erythromycin'}}}

 Q: Give me the big city with the largest fiscal/tax revenue located in the region of Metro Manila.
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1549591 . ?ent wdt:P3087 ?obj . ?ent wdt:P131 wd:Q13580 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'fiscal/tax revenue', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'big city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Metro Manila'}}}

 Q: Were the 1923 Bentley #8 laps completed equal to 89.6?
 SPARQL: ASK WHERE { wd:Q54989178 wdt:P5349 ?obj filter(?obj = 89.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1923 Bentley #8', 'p': 'laps completed', 'o': '?x0', '?x0': '89.6'}

 Q: Which is Google Play Store App ID for Netflix?
 SPARQL: select distinct ?answer where { wd:Q907311 wdt:P3418 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Netflix', 'p': 'Google Play', 'o': '?x0'}

 Q: what is the {start time} for {Marie Louise, Duchess of Parma} has {spouse} as {Napoleon} ?
 SPARQL: SELECT ?value WHERE { wd:Q157491 p:P26 ?s . ?s ps:P26 wd:Q517 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marie Louise, Duchess of Parma', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Napoleon'}}}

 Q: How many shots are done by David Lynch, director of photography?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P344 wd:Q2071 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'director of photography', 'o': 'David Lynch'}

 Q: Give me {monotypic taxon} that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q310890 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monotypic taxon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {famous works} of {composed by} of {The Seasons} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7762868 wdt:P86 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Seasons', 'p': 'composed by', 'o': '$y0'}}

 Q: Where is the deathplace of Rupa Goswami whose height is 170.0?
 SPARQL: SELECT ?answer WHERE { wd:Q2989506 wdt:P20 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'170.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rupa Goswami', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'height', 'o': '170.0'}}

 Q: What is {work location} of {John Ruskin} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q179126 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Ruskin', 'p': 'work location', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'work location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Ruskin', 'p': 'work location', 'o': '$y0'}}]

 Q: Is the carbon footprint of SAE 316L stainless steel equal 3.9?
 SPARQL: ASK WHERE { wd:Q28453931 wdt:P5991 ?obj filter(?obj = 3.9) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'SAE 316L stainless steel', 'p': 'carbon footprint', 'o': '?x0', '?x0': '3.9'}

 Q: What is {position held} of {Ingrid Bergman} that is {point in time} is {1973-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43247 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1973')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ingrid Bergman', 'p': 'position held', 'o': '?x0', 't': '1973'}

 Q: What is {award received} of {Beatrice Straight} that is {statement is subject of} is {7th Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q232532 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q4644204 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beatrice Straight', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '7th Tony Awards'}}}

 Q: What are the thoracic disease which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18553676 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'thoracic disease'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: How many {author of foreword} are to/by {John Lasseter} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2679 wd:Q269214 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'author of foreword', 'o': 'John Lasseter'}

 Q: Did {Charlize_Theron} {languages spoken, written or signed} {Old English}?
 SPARQL: ASK WHERE { wd:Q80046 wdt:P1412 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Charlize Theron', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Old English'}]

 Q: what is the {located in the administrative territorial entity} for {Aleksis Kivi} has {place of death} as {Aleksis Kivi Memorial Cottage} ?
 SPARQL: SELECT ?value WHERE { wd:Q216904 p:P20 ?s . ?s ps:P20 wd:Q17380002 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksis Kivi', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Aleksis Kivi Memorial Cottage'}}}

 Q: At what point in time did Barry Bonds receive the award for MLB MVP?
 SPARQL: SELECT ?value WHERE { wd:Q314712 p:P166 ?s . ?s ps:P166 wd:Q1514249 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Barry Bonds', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'MVP'}, 't': '?x0'}

 Q: What is {follows} and {followed by} of {{Charles the Fat} has {noble title} as {emperor of Occident}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q23906200 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'emperor of Occident'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'emperor of Occident'}}}]

 Q: What is <has edition> of <1> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P747 wd:Q199}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': '1'}

 Q: What was the inflation rate of Estonia in the year of 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q191 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Estonia', 'p': 'inflation rate', 'o': '?x0', 't': '2000'}

 Q: Were there 0 missing people after the 2018 Magnitogorsk building collapse?
 SPARQL: ASK WHERE { wd:Q60311957 wdt:P1446 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2018 Magnitogorsk building collapse', 'p': 'missing', 'o': '?x0', '?x0': '0'}

 Q: Which is the ISFDB title ID of The Age of Innocence?
 SPARQL: select distinct ?answer where { wd:Q1045464 wdt:P1274 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Age of Innocence', 'p': 'ISFDB title ID', 'o': '?x0'}

 Q: Cairo is located in which country that began on May second in the year 1250?
 SPARQL: SELECT ?obj WHERE { wd:Q85 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1250')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cairo', 'p': 'country', 'o': '?x0', 't': '1250'}

 Q: What is {seat} of {built by} of {Mastermind} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17286 wdt:P176 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mastermind', 'p': 'built by', 'o': '$y0'}}

 Q: What are notation which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2001982 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'notation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: what is the {start time} for {Moscow State University} has {rector} as {Ivan Udaltsov} ?
 SPARQL: SELECT ?value WHERE { wd:Q13164 p:P1075 ?s . ?s ps:P1075 wd:Q4469264 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moscow State University', 'p': 'rector', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'rector', 'o': 'Ivan Udaltsov'}}}

 Q: What is {follows} and {followed by} of {{Gediminas} has {noble title} as {Grand Duke of Lithuania}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q244852 p:P97 ?s . ?s ps:P97 wd:Q2639920 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gediminas', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'Grand Duke of Lithuania'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gediminas', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'Grand Duke of Lithuania'}}}]

 Q: where is the {point in time} for {bell hooks} who has {educated at} as {Stanford University} ?
 SPARQL: SELECT ?value WHERE { wd:Q259507 p:P69 ?s . ?s ps:P69 wd:Q41506 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'bell hooks', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Stanford University'}, 't': '?x0'}

 Q: what is the {academic major} for {Rani Mukherjee} has {educated at} as {SNDT Women's University} ?
 SPARQL: SELECT ?value WHERE { wd:Q485557 p:P69 ?s . ?s ps:P69 wd:Q7391831 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rani Mukherjee', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': "SNDT Women's University"}}}

 Q: What is {musician} of {track list} of {The Fragile} ?
 SPARQL: SELECT ?answer WHERE { wd:Q902850 wdt:P658 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Fragile', 'p': 'track list', 'o': '$y0'}}

 Q: Did the 2008 Iwate-Miyagi Nairiku earthquake reach JMA magnitude 5.76?
 SPARQL: ASK WHERE { wd:Q748301 wdt:P5900 ?obj filter(?obj = 5.76) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2008 Iwate-Miyagi Nairiku earthquake', 'p': 'JMA Magnitude', 'o': '?x0', '?x0': '5.76'}

 Q: What is Mira's type of variable star?
 SPARQL: select distinct ?answer where { wd:Q12965 wdt:P881 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mira', 'p': 'type of variable star', 'o': '?x0'}

 Q: What is the {Wikidata property related to online communities} for {conferred by} of {YouTube}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1027 wd:Q866 . ?sbj wdt:P31 wd:Q30041186 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conferred by', 'o': 'YouTube', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata property related to online communities'}}

 Q: Is it true that the mean age of the Karlovy Vary District equal to 43.2?
 SPARQL: ASK WHERE { wd:Q757240 wdt:P4442 ?obj filter(?obj = 43.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Karlovy Vary District', 'p': 'mean age', 'o': '?x0', '?x0': '43.2'}

 Q: What was the inflation rate of Sri Lanka on 1-1-2004?
 SPARQL: SELECT ?obj WHERE { wd:Q854 p:P1279 ?s . ?s ps:P1279 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sri Lanka', 'p': 'inflation rate', 'o': '?x0', 't': '2004'}

 Q: Which television series has the highest number of episodes?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5398426 . ?ent wdt:P3740 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of works', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series'}}

 Q: What was the namesake for Bohr radius with a recognition title of Copley Medal?
 SPARQL: SELECT ?answer WHERE { wd:Q652571 wdt:P138 ?answer . ?answer wdt:P166 wd:Q28003}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bohr radius', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'recognition title', 'o': 'Copley Medal'}}

 Q: "Where is {borders} of {Wuxi}, which has {sister city} is {Grenoble} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q42651 wdt:P47 ?answer . ?answer wdt:P190 wd:Q1289}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wuxi', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Grenoble'}}

 Q: How many language regulatory bodys are there for Portuguese?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q5146 wdt:P1018 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Portuguese', 'p': 'language regulatory body', 'o': '?x0'}

 Q: When did educated at of David Cameron and academic degree?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q192 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Cameron', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Cameron', 'p': 'educated at', 'o': '$y0'}}]

 Q: Does the installed capacity of the HMS Terror equals 30?
 SPARQL: ASK WHERE { wd:Q141667 wdt:P2109 ?obj filter(?obj = 30) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'HMS Terror', 'p': 'installed capacity', 'o': '?x0', '?x0': '30'}

 Q: "Who is the {spouse} of {Lauryn Hill}, that has {craft} who is a {Canadian football player} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q214226 wdt:P26 ?answer . ?answer wdt:P106 wd:Q19841381}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lauryn Hill', 'p': 'spouse', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'Canadian football player'}}

 Q: Was Johnny Carson's occupation a military officer and/or journalist?
 SPARQL: ASK WHERE { wd:Q310819 wdt:P106 wd:Q189290 . wd:Q310819 wdt:P106 wd:Q1930187 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Johnny Carson', 'p': 'occupation', 'o': '?x0', '?x0': 'military officer'}, {'h': 'IS', 'v': '?x1', 's': 'Johnny Carson', 'p': 'occupation', 'o': '?x1', '?x1': 'journalist'}]

 Q: What are the series of creative works that starts with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7725310 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'series of creative works'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is short name  of Leviticus ?
 SPARQL: select distinct ?answer where { wd:Q41490 wdt:P1813 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leviticus', 'p': 'short name', 'o': '?x0'}

 Q: How many {child astronomical body} are for {Virgo Supercluster} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q175760 wdt:P398 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Virgo Supercluster', 'p': 'child astronomical body', 'o': '?x0'}

 Q: what is the {point in time} for {Luiz Inácio Lula da Silva} has {award received} as {Grand Cross of the Order of the Sun of Peru‎} ?
 SPARQL: SELECT ?value WHERE { wd:Q37181 p:P166 ?s . ?s ps:P166 wd:Q25755314 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lula', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grand Cross of the Order of the Sun of Peru\u200e'}, 't': '?x0'}

 Q: Give me {German nationalism} that starts with {'n'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q370744 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'German nationalism'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is {celebrates} of {Mawlid an-Nabi}, that has {is the opposite of} is {death anniversary} ?
 SPARQL: SELECT ?answer WHERE { wd:Q193027 wdt:P547 ?answer . ?answer wdt:P461 wd:Q1202197}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mawlid', 'p': 'celebrates', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'death anniversary'}}

 Q: What is {location of work} of {Joseph Freiherr von Eichendorff}, that has {twin cities} is {Rotterdam} ?
 SPARQL: SELECT ?answer WHERE { wd:Q77204 wdt:P937 ?answer . ?answer wdt:P190 wd:Q34370}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph Freiherr von Eichendorff', 'p': 'location of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin cities', 'o': 'Rotterdam'}}

 Q: What is garrison in Commonwealth of Nations having category of associated people of Category:People from London?
 SPARQL: SELECT ?answer WHERE { wd:Q7785 wdt:P159 ?answer . ?answer wdt:P1792 wd:Q6356996}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Commonwealth of Nations', 'p': 'garrison', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:People from London'}}

 Q: How many signatories are there for the {U.S. Declaration of Independence} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q127912 wdt:P1891 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Declaration of Independence', 'p': 'signatories', 'o': '?x0'}

 Q: When was the inflation rate of 3.1 in Macedonia ?
 SPARQL: SELECT ?value WHERE { wd:Q221 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'3.1')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Macedonia', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '3.1'}, 't': '?x0'}

 Q: What is the {federal state} for {head of state} of {Jefferson Davis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q162269 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'president', 'o': 'Jefferson Davis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: Give me the country of Hebron that started in 1948
 SPARQL: SELECT ?obj WHERE { wd:Q168225 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1948')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hebron', 'p': 'country', 'o': '?x0', 't': '1948'}

 Q: What is {award received} of {W. D. Hamilton} that is {point in time} is {1991-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q15451 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'W. D. Hamilton', 'p': 'win', 'o': '?x0', 't': '1991'}

 Q: What is {has arrondissements} of {German Democratic Republic}, that has {governor} is {Karl Steinhoff} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16957 wdt:P150 ?answer . ?answer wdt:P6 wd:Q531807}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'German Democratic Republic', 'p': 'has arrondissements', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'governor', 'o': 'Karl Steinhoff'}}

 Q: Who is the employer conservatory of Pyotr llyich Tchaikovsky?
 SPARQL:  select distinct ?obj where { wd:Q7315 wdt:P108 ?obj . ?obj wdt:P31 wd:Q184644 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tchaikovsky', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conservatory'}}

 Q: What award did Enrique Peña Nieto receive in 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q296741 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Enrique Peña Nieto', 'p': 'award', 'o': '?x0', 't': '2015'}

 Q: How many {source of energy} are to/by {natural gas} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P618 wd:Q40858 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'source of energy', 'o': 'natural gas'}

 Q: What is Lyubov Orlova's Zemereshet artist ID?
 SPARQL: select distinct ?answer where { wd:Q236229 wdt:P4071 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lyubov Orlova', 'p': 'Zemereshet artist ID', 'o': '?x0'}

 Q: Which is the parent club of the St. Louis Cardinals?
 SPARQL: select distinct ?answer where { ?answer wdt:P831 wd:Q504309}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent club', 'o': 'St. Louis Cardinals'}

 Q: What are the city with millions of inhabitants which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1637706 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city with millions of inhabitants'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the religion of Druze ?
 SPARQL:  select distinct ?obj where { wd:Q163943 wdt:P140 ?obj . ?obj wdt:P31 wd:Q9174 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Druze', 'p': 'religion', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religion'}}

 Q: What is the {UCI Trade Team I} for {member of sports team} of {Bradley Wiggins}
 SPARQL:  select distinct ?obj where { wd:Q193876 wdt:P54 ?obj . ?obj wdt:P31 wd:Q20653563 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bradley Wiggins', 'p': 'member of sports team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'UCI Trade Team I'}}

 Q: What is penalty of Aileen Wuornos?
 SPARQL: select distinct ?answer where { wd:Q264849 wdt:P1596 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aileen Wuornos', 'p': 'penalty', 'o': '?x0'}

 Q: Was Orson Welles educated at the School of the Art Institute of Chicago and Cawthra Park Secondary School?
 SPARQL: ASK WHERE { wd:Q24829 wdt:P69 wd:Q7432601 . wd:Q24829 wdt:P69 wd:Q5055242 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Orson Welles', 'p': 'educated at', 'o': '?x0', '?x0': 'School of the Art Institute of Chicago'}, {'h': 'IS', 'v': '?x1', 's': 'Orson Welles', 'p': 'educated at', 'o': '?x1', '?x1': 'Cawthra Park Secondary School'}]

 Q: Tell the name of military museum with the highest number of visitors per year whose location is les invalides?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2772772 . ?ent wdt:P1174 ?obj . ?ent wdt:P276 wd:Q188977 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'visitors per year', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military museum', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Les Invalides'}}}

 Q: Was Achilles the partner of Helen of Troy and Penthesilea?
 SPARQL: ASK WHERE { wd:Q41746 wdt:P451 wd:Q164061 . wd:Q41746 wdt:P451 wd:Q379828 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Achilles', 'p': 'partner', 'o': '?x0', '?x0': 'Helen of Troy'}, {'h': 'IS', 'v': '?x1', 's': 'Achilles', 'p': 'partner', 'o': '?x1', '?x1': 'Penthesilea'}]

 Q: What education does Sergei Diaghilev have that begins at 1890-8-1?
 SPARQL: SELECT ?obj WHERE { wd:Q211513 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1890')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sergei Diaghilev', 'p': 'education', 'o': '?x0', 't': '1890'}

 Q: Who is the candidate Emmanuel Macron?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P726 wd:Q3052772 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'candidate', 'o': 'Emmanuel Macron'}

 Q: What is {electoral district} and {end cause} of {{George Cayley} has {position held} as {Member of the 11th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q319362 p:P39 ?s . ?s ps:P39 wd:Q41582546 . ?s pq:P768 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Cayley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 11th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Cayley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 11th Parliament of the United Kingdom'}}}]

 Q: What is a dynasty that begins with the letter p?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q164950 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dynasty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: What is the {sovereign state} for {country} of {Madrid}
 SPARQL:  select distinct ?obj where { wd:Q2807 wdt:P17 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Madrid', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is the {archipelagic state} for {head of government} of {Joko Widodo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q3318231 . ?sbj wdt:P31 wd:Q13107770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Joko Widodo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archipelagic state'}}

 Q: what is a flag image of Nebraska
 SPARQL: select distinct ?answer where { wd:Q1553 wdt:P41 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nebraska', 'p': 'flag image', 'o': '?x0'}

 Q: What is {scientific discipline} of {writer} of {Structural colouration of mammalian skin: convergent evolution of coherently scattering dermal collagen arrays.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q31061242 wdt:P50 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discipline', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Structural colouration of mammalian skin: convergent evolution of coherently scattering dermal collagen arrays.', 'p': 'author', 'o': '$y0'}}

 Q: What is the {type of quantum particle} for {antiparticle} of {electron}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2152 wd:Q2225 . ?sbj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'antiparticle', 'o': 'electron', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: Who is the discoverer of the Iron Curtain and had political office held as the First Lord of the Admiralty?
 SPARQL: SELECT ?answer WHERE { wd:Q124425 wdt:P61 ?answer . ?answer wdt:P39 wd:Q21561383}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Iron Curtain', 'p': 'discoverer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'political office held', 'o': 'First Lord of the Admiralty'}}

 Q: How many surface tensions are there for ethyl acetate?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q407153 wdt:P3013 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'ethyl acetate', 'p': 'surface tension', 'o': '?x0'}

 Q: Which is Conseil constitutionnel ID for Jacques Chirac?
 SPARQL: select distinct ?answer where { wd:Q2105 wdt:P5457 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jacques Chirac', 'p': 'Conseil constitutionnel ID', 'o': '?x0'}

 Q: How many notable work done by the Henrik Ibsen} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q36661 wdt:P800 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Henrik Ibsen', 'p': 'notable work', 'o': '?x0'}

 Q: Give me {cryptocurrency} that {notation} {Bitcoin currency sign} and which that starts with {'b'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13479982 . ?sbj wdt:P913 wd:Q23055403 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cryptocurrency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'notation', 'o': 'Bitcoin currency sign'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: what is the {for work} for {Jacques Tati} has {award received} as {Jury Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q51549 p:P166 ?s . ?s ps:P166 wd:Q164200 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacques Tati', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Jury Prize'}}}

 Q: What is {sector} of {holding company} of {Bombardier Transportation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q688893 wdt:P749 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sector', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bombardier Transportation', 'p': 'parent company', 'o': '$y0'}}

 Q: What is tributary on the shore of Lanzarote?
 SPARQL: SELECT ?answer WHERE { wd:Q182432 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lanzarote', 'p': 'on the shore of', 'o': '$y0'}}

 Q: Did {Alex_Rodriguez} {member of sports team} {Baltimore Orioles} and {Trenton Thunder} ?
 SPARQL: ASK WHERE { wd:Q558664 wdt:P54 wd:Q650816 . wd:Q558664 wdt:P54 wd:Q3526064 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Alex Rodriguez', 'p': 'member of sports team', 'o': '?x0', '?x0': 'Baltimore Orioles'}, {'h': 'IS', 'v': '?x1', 's': 'Alex Rodriguez', 'p': 'member of sports team', 'o': '?x1', '?x1': 'Trenton Thunder'}]

 Q: Tell me ethnoreligious group whose name has the word yazidis in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11197007 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yazidis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnoreligious group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yazidis'}}

 Q: How many {production statistics} are to/by {cider} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2746 wd:Q167296 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production statistics', 'o': 'cider'}

 Q: What is {publishing house} of {published in journal} of {Once-daily gentamicin administration for community-associated methicillin resistant Staphylococcus aureus in an in vitro pharmacodynamic model: preliminary reports for the advantages for optimizing pharmacodynamic index.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41877860 wdt:P1433 ?X . ?X wdt:P123 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publishing house', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Once-daily gentamicin administration for community-associated methicillin resistant Staphylococcus aureus in an in vitro pharmacodynamic model: preliminary reports for the advantages for optimizing pharmacodynamic index.', 'p': 'published in', 'o': '$y0'}}

 Q: Which South Australian House of Assembly by-election had the most ballots cast?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q51879476 . ?ent wdt:P1868 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ballots cast', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'South Australian House of Assembly by-election'}}

 Q: What is {building date} of {battle} of {Muammar al-Gaddafi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19878 wdt:P607 ?X . ?X wdt:P580 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'building date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gaddafi', 'p': 'battle', 'o': '$y0'}}

 Q: Is it true ethanol has a role as a solvent and a GABA reuptake inhibitor?
 SPARQL: ASK WHERE { wd:Q153 wdt:P2868 wd:Q146505 . wd:Q153 wdt:P2868 wd:Q5512768 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'ethanol', 'p': 'role', 'o': '?x0', '?x0': 'solvent'}, {'h': 'IS', 'v': '?x1', 's': 'ethanol', 'p': 'role', 'o': '?x1', '?x1': 'GABA reuptake inhibitor'}]

 Q: What is {founders} of {LaVeyan Satanism}, that has {biological sex} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q256223 wdt:P112 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'LaVeyan Satanism', 'p': 'founders', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'man', 'o': 'man'}}

 Q: Where is the grave that commemorates Ulysses S. Grant?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P547 wd:Q34836 . ?sbj wdt:P31 wd:Q173387 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commemorates', 'o': 'Ulysses S. Grant', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'grave'}}

 Q: What are Hon Hai Precision Industry's total assets for 12-23-2016?
 SPARQL: SELECT ?obj WHERE { wd:Q463094 p:P2403 ?s . ?s ps:P2403 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hon Hai', 'p': 'total assets', 'o': '?x0', 't': '2016'}

 Q: Which is the Behind The Voice Actors character ID of Donald Duck?
 SPARQL: select distinct ?answer where { wd:Q6550 wdt:P5107 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Donald Duck', 'p': 'Behind The Voice Actors character ID', 'o': '?x0'}

 Q: What is {discoverer or inventor of} of {Trapezium Cluster}, that has {fields} is {physics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14031 wdt:P61 ?answer . ?answer wdt:P101 wd:Q413}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Trapezium Cluster', 'p': 'discoverer or inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'fields', 'o': 'physics'}}

 Q: What is the {private not-for-profit educational institution} for {archives at} of {Jefferson Davis}
 SPARQL:  select distinct ?obj where { wd:Q162269 wdt:P485 ?obj . ?obj wdt:P31 wd:Q23002054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jefferson Davis', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private not-for-profit educational institution'}}

 Q: What is {award received} of {Yehudi Menuhin} that is {point in time} is {1996-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q156814 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yehudi Menuhin', 'p': 'award', 'o': '?x0', 't': '1996'}

 Q: What is the {G-type main-sequence star} for {parent astronomical body} of {Pluto}
 SPARQL:  select distinct ?obj where { wd:Q339 wdt:P397 ?obj . ?obj wdt:P31 wd:Q5864 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pluto', 'p': 'star', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: What is the {material used} and the {operator} of {Airbus_A380} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q5830 wdt:P186 ?ans_1 . wd:Q5830 wdt:P137 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Airbus A380', 'p': 'material used', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Airbus A380', 'p': 'operator', 'o': '?x1'}]

 Q: What is {end cause} and {end time} of {{George Canning} has {country of citizenship} as {Kingdom of Great Britain}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q219731 p:P27 ?s . ?s ps:P27 wd:Q161885 . ?s pq:P1534 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Canning', 'p': 'citizen of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizen of', 'o': 'Great Britain'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Canning', 'p': 'citizen of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizen of', 'o': 'Great Britain'}}}]

 Q: Which is the JMA Seismic Intensity Scale for 2011 Tōhoku earthquake and tsunami?
 SPARQL: select distinct ?answer where { wd:Q36204 wdt:P5386 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '2011 Tōhoku earthquake and tsunami', 'p': 'JMA Seismic Intensity Scale', 'o': '?x0'}

 Q: who constituency of the Rajya Sabha for coextensive with of West Bengal?
 SPARQL:  select distinct ?obj where { wd:Q1356 wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'West Bengal', 'p': 'coextensive with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: what is the {instance of} for {Chaitanya Mahaprabhu} has {date of birth} as {1486-1-1} ?
 SPARQL: SELECT ?value WHERE { wd:Q870262 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1486')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chaitanya Mahaprabhu', 'p': 'date of birth', 'o': '$y0'}}

 Q: Tell me notation whose name has the word symbol  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2001982 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'symbol')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'notation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'symbol'}}

 Q: Fernando de Noronha is coextensive with what?
 SPARQL: select distinct ?answer where { ?answer wdt:P3403 wd:Q175057}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'coextensive with', 'o': 'Fernando de Noronha'}

 Q: who was the spouse of Joan Collins back in 1972?
 SPARQL: SELECT ?obj WHERE { wd:Q152843 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1972')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joan Collins', 'p': 'spouse', 'o': '?x0', 't': '1972'}

 Q: When did animated feature film for voice actor of Tom Hanks?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q2263 . ?sbj wdt:P31 wd:Q29168811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Tom Hanks', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated feature film'}}

 Q: Which is the excipient which is an active ingredient in Sclerosol and that contains the word talc in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q902638 . ?sbj wdt:P3780 wd:Q47522115 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'talc')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'excipient', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'active ingredient in', 'o': 'Sclerosol'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'talc'}}

 Q: What is the etymology of Bayes' theorem, that contains a death dated on 1761-4-17?
 SPARQL: SELECT ?answer WHERE { wd:Q182505 wdt:P138 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1761'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Bayes' theorem", 'p': 'etymology', 'o': '?x0', 't': '1761'}

 Q: What is {position held} of {Nawaz Sharif} that is {replaces} is {Ghulam Mustafa Jatoi} ?
 SPARQL: SELECT ?obj WHERE { wd:Q134068 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q2039548 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nawaz Sharif', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Ghulam Mustafa Jatoi'}}}

 Q: what is the {start time} for {Billy Hughes} has {position held} as {Prime Minister of Australia} ?
 SPARQL: SELECT ?value WHERE { wd:Q152666 p:P39 ?s . ?s ps:P39 wd:Q319145 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Billy Hughes', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Australia'}}}

 Q: Is Matthew McConaughey a citizen of the United States of America?
 SPARQL: ASK WHERE { wd:Q188955 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Matthew McConaughey', 'p': 'citizen of', 'o': '?x0', '?x0': 'United States of America'}]

 Q: Which is the discovery that the inventor of CERN made?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P61 wd:Q42944 . ?sbj wdt:P31 wd:Q753297 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'inventor', 'o': 'CERN', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discovery'}}

 Q: Does the salinity of the Borovoe equals 0.15?
 SPARQL: ASK WHERE { wd:Q5092054 wdt:P4350 ?obj filter(?obj = 0.15) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Borovoe', 'p': 'salinity', 'o': '?x0', '?x0': '0.15'}

 Q: How many {vehicle range} are for {Airbus A340} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q6481 wdt:P2073 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Airbus A340', 'p': 'vehicle range', 'o': '?x0'}

 Q: Does Johnny Depp have Christoph as another forename that is said to be different from Johnny?
 SPARQL: SELECT ?answer WHERE { wd:Q37175 wdt:P735 ?answer . ?answer wdt:P460 wd:Q17689481}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Johnny Depp', 'p': 'forename', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be different from', 'o': 'Christoph'}}

 Q: What was the academic major of Donald Knuth and where was he educated at?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Knuth', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Knuth', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the {end time} for {Margaret Murray} has {country of citizenship} as {United Kingdom of Great Britain and Ireland} ?
 SPARQL: SELECT ?value WHERE { wd:Q242542 p:P27 ?s . ?s ps:P27 wd:Q174193 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Margaret Murray', 'p': 'country of citizenship', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country of citizenship', 'o': 'United Kingdom of Great Britain and Ireland'}}}

 Q: What is ITRA runner ID  for Dean Karnazes ?
 SPARQL: select distinct ?answer where { wd:Q331288 wdt:P3584 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dean Karnazes', 'p': 'ITRA runner ID', 'o': '?x0'}

 Q: "Which participants of the Battle of Leuthen, had a brother named Francis I, Holy Roman Emperor?"
 SPARQL: SELECT ?answer WHERE { wd:Q313435 wdt:P710 ?answer . ?answer wdt:P3373 wd:Q151075}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Battle of Leuthen', 'p': 'participant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bro', 'o': 'Francis I, Holy Roman Emperor'}}

 Q: What is {quantity} of {foot-pound}, that has {measured by} is {mass} ?
 SPARQL: SELECT ?answer WHERE { wd:Q730251 wdt:P111 ?answer . ?answer wdt:P1880 wd:Q11423}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'foot-pound', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'mass'}}

 Q: What is {elected in} and {end cause} of {{Harold Macmillan} has {position held} as {Member of the 38th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q128985 p:P39 ?s . ?s ps:P39 wd:Q41582597 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 38th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Macmillan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 38th Parliament of the United Kingdom'}}}]

 Q: What award did Boris Yeltsin receive on January 30th, 1981?
 SPARQL: SELECT ?obj WHERE { wd:Q34453 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Boris Yeltsin', 'p': 'award', 'o': '?x0', 't': '1981'}

 Q: What is {member of sports team} of {Fritz Walter} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q22717 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fritz Walter', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fritz Walter', 'p': 'team', 'o': '$y0'}}]

 Q: "Where is {location of death} of {Kalu Rinpoche}, which has {geographic coordinate} is {30.601669444444 96.841552777778} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q770945 wdt:P20 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'30.601669444444 96.841552777778'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kalu Rinpoche', 'p': 'location of death', 'o': '?x0'}

 Q: What was the item used by Malcolm Perry's doctoral supervisor?
 SPARQL: SELECT ?answer WHERE { wd:Q6742553 wdt:P184 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'item used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Perry', 'p': 'doctoral supervisor', 'o': '$y0'}}

 Q: what is the {end time} for {Palermo} has {head of government} as {Leoluca Orlando} ?
 SPARQL: SELECT ?value WHERE { wd:Q2656 p:P6 ?s . ?s ps:P6 wd:Q703503 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Palermo', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Leoluca Orlando'}}}

 Q: what is the {start time} for {Paul Hindemith} has {educated at} as {Hoch Conservatory} ?
 SPARQL: SELECT ?value WHERE { wd:Q57244 p:P69 ?s . ?s ps:P69 wd:Q466029 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Hindemith', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Hoch Conservatory'}}}

 Q: What is personal best for Valerie Adams ?
 SPARQL: select distinct ?answer where { wd:Q6357 wdt:P2415 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Valerie Adams', 'p': 'personal best', 'o': '?x0'}

 Q: What is the {literary character} for {present in work} of {Harry Potter}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q8337 . ?sbj wdt:P31 wd:Q3658341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Harry Potter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary character'}}

 Q: What is <emissivity> of <cement> ?
 SPARQL: select distinct ?answer where { wd:Q45190 wdt:P1295 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cement', 'p': 'emissivity', 'o': '?x0'}

 Q: When was Natalia Makarova nominated for the Laurence Olivier Award for Best Actress in a Musical?
 SPARQL: SELECT ?value WHERE { wd:Q267796 p:P1411 ?s . ?s ps:P1411 wd:Q6500775 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Natalia Makarova', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Laurence Olivier Award for Best Actress in a Musical'}, 't': '?x0'}

 Q: What is the {county seat} for {twinned administrative body} of {Nagasaki}
 SPARQL:  select distinct ?obj where { wd:Q38234 wdt:P190 ?obj . ?obj wdt:P31 wd:Q62049 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nagasaki', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'county seat'}}

 Q: What is the role model of the doctoral supervisor of Carl Neumann?
 SPARQL: SELECT ?answer WHERE { wd:Q77313 wdt:P184 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role model', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Neumann', 'p': 'doctoral supervisor', 'o': '$y0'}}

 Q: What are theGreco-Roman mysteries which start with the letter M
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q505821 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greco-Roman mysteries'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is {place of activity} of {Erich von dem Bach-Zelewski}, that has {on lake} is {Westhafen Canal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57267 wdt:P937 ?answer . ?answer wdt:P206 wd:Q1532109}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Erich von dem Bach-Zelewski', 'p': 'place of activity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on lake', 'o': 'Westhafen Canal'}}

 Q: What is {genetic association} of {regulates (molecular biology)} of {hsa-miR-335-3p} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27594933 wdt:P128 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hsa-miR-335-3p', 'p': 'regulates (molecular biology)', 'o': '$y0'}}

 Q: What is {patron saint} of {accountant}, that has {is son of} is {Alphaeus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q326653 wdt:P417 ?answer . ?answer wdt:P22 wd:Q1542853}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'accountant', 'p': 'patron saint', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'son of', 'o': 'Alphaeus'}}

 Q: Which is the single execution of an artwork as the exemplar of The Great Wave off Kanagawa?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1574 wd:Q252485 . ?sbj wdt:P31 wd:Q28912688 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'exemplar of', 'o': 'The Great Wave off Kanagawa', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single execution of an artwork'}}

 Q: What is {member of} of {coined} of {molybdenum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1053 wdt:P61 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'molybdenum', 'p': 'coined', 'o': '$y0'}}

 Q: Tell me the series by Rama.
 SPARQL:  select distinct ?obj where { wd:Q160213 wdt:P179 ?obj . ?obj wdt:P31 wd:Q20937557 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rama', 'p': 'series', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'series'}}

 Q: When did Evonne Goolagong Cawley receive the Companion of the Order of Australia award?
 SPARQL: SELECT ?value WHERE { wd:Q228559 p:P166 ?s . ?s ps:P166 wd:Q9680541 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Evonne Goolagong Cawley', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Companion of the Order of Australia'}, 't': '?x0'}

 Q: What is the {supreme court} for {highest judicial authority} of {Hong Kong}
 SPARQL:  select distinct ?obj where { wd:Q8646 wdt:P209 ?obj . ?obj wdt:P31 wd:Q190752 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hong Kong', 'p': 'highest judicial authority', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'supreme court'}}

 Q: What is {pronunciation audio} of {life stance} of {Tulunids} ?
 SPARQL: SELECT ?answer WHERE { wd:Q726798 wdt:P140 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tulunids', 'p': 'life stance', 'o': '$y0'}}

 Q: Which is the ICD-9-CM for migraine?
 SPARQL: select distinct ?answer where { wd:Q133823 wdt:P1692 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'migraine', 'p': 'ICD-9-CM', 'o': '?x0'}

 Q: Who is the son of the brother or sister of the Archduchess Maria Carolina of Austria ?
 SPARQL: SELECT ?answer WHERE { wd:Q4785857 wdt:P3373 ?X . ?X wdt:P25 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Archduchess Maria Carolina of Austria', 'p': 'sister', 'o': '$y0'}}

 Q: Is the partition coefficient water/octanol of raloxifene equal to 5.2?
 SPARQL: ASK WHERE { wd:Q425223 wdt:P2993 ?obj filter(?obj = 5.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'raloxifene', 'p': 'partition coefficient water/octanol', 'o': '?x0', '?x0': '5.2'}

 Q: What terrain feature of Hokkaido has the tributary Bol'shaya Sarannaya?
 SPARQL: SELECT ?answer WHERE { wd:Q35581 wdt:P706 ?answer . ?answer wdt:P974 wd:Q4091645}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hokkaido', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': "Bol'shaya Sarannaya"}}

 Q: What is {administrator} of {service operated} of {WOW air} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1156931 wdt:P121 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'administrator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'WOW air', 'p': 'service operated', 'o': '$y0'}}

 Q: Tell me spaceport whose name has the word station in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q194188 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'station')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spaceport'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'station'}}

 Q: What is {forename} of {Jan Tschichold}, that has {is said to be the same as} is {Juan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q455232 wdt:P735 ?answer . ?answer wdt:P460 wd:Q475210}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jan Tschichold', 'p': 'forename', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Juan'}}

 Q: What is the {subsidiary company} for {parent organization} of {American Broadcasting Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q169889 . ?sbj wdt:P31 wd:Q658255 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent company', 'o': 'American Broadcasting Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'subsidiary'}}

 Q: What is the time zone located in the territorial entity of Vinson Massif?
 SPARQL: SELECT ?answer WHERE { wd:Q163758 wdt:P131 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vinson Massif', 'p': 'in', 'o': '$y0'}}

 Q: What is {aspect of} of {history of Los Angeles}, that has {dialling code} is {424} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3136743 wdt:P1269 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'424'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Los Angeles', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area code', 'o': '424'}}

 Q: John Diefenbaker is the incumbent for what public office held by Justin Trudeau?
 SPARQL: SELECT ?answer WHERE { wd:Q3099714 wdt:P39 ?answer . ?answer wdt:P1308 wd:Q128614}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Justin Trudeau', 'p': 'public office', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'incumbent', 'o': 'John Diefenbaker'}}

 Q: What is the production rate for the tennis ball?
 SPARQL: select distinct ?answer where { wd:Q246514 wdt:P2197 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'tennis ball', 'p': 'production rate', 'o': '?x0'}

 Q: During the February Revolution was Santiago de Cuba known as twin town?
 SPARQL: SELECT ?answer WHERE { wd:Q101534 wdt:P276 ?answer . ?answer wdt:P190 wd:Q117040}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'February Revolution', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin town', 'o': 'Santiago de Cuba'}}

 Q: What is {child} of {Pedro I} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the writable file format of iTunes?
 SPARQL: select distinct ?answer where { wd:Q9589 wdt:P1073 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'iTunes', 'p': 'writable file format', 'o': '?x0'}

 Q: What is {location} and {height} of {{pole vault} has {record held} as {Igor Potapovich}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q2330636 . ?s pq:P276 ?value1 . ?s pq:P2048 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Igor Potapovich'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'height', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Igor Potapovich'}}}]

 Q: What is {member of sports team} of {Kareem Abdul-Jabbar} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q179051 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareem Abdul-Jabbar', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kareem Abdul-Jabbar', 'p': 'team', 'o': '$y0'}}]

 Q: what is the {point in time} for {Jude Law} has {award received} as {Theatre World Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q160432 p:P166 ?s . ?s ps:P166 wd:Q1131356 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jude Law', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Theatre World Award'}, 't': '?x0'}

 Q: How many {newspaper format} are to/by {magazine} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3912 wd:Q41298 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'newspaper format', 'o': 'magazine'}

 Q: what is the {start time} for {Karlsruhe Institute of Technology} has {manager/director} as {Eberhard Umbach} ?
 SPARQL: SELECT ?value WHERE { wd:Q309988 p:P1037 ?s . ?s ps:P1037 wd:Q77995 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karlsruhe Institute of Technology', 'p': 'director', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'director', 'o': 'Eberhard Umbach'}}}

 Q: What is Actorenregister ID for Utrecht University?
 SPARQL: select distinct ?answer where { wd:Q221653 wdt:P3273 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Utrecht University', 'p': 'Actorenregister ID', 'o': '?x0'}

 Q: To which country does Prince Salman pledge allegiance?
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P945 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman', 'p': 'allegiance', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {population} of {Almería} that is {determination method} is {register office} ?
 SPARQL: SELECT ?obj WHERE { wd:Q10400 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Almería', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: Which is the direction relative to location of west?
 SPARQL: select distinct ?answer where { ?answer wdt:P654 wd:Q679}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'direction relative to location', 'o': 'west'}

 Q: Which is the UN/LOCODE of Bari?
 SPARQL: select distinct ?answer where { wd:Q3519 wdt:P1937 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bari', 'p': 'UN/LOCODE', 'o': '?x0'}

 Q: What is the {international reactions to the United States presidential election, 2016} for {participant} of {Donald Trump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q22686 . ?sbj wdt:P31 wd:Q27822033 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Donald Trump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international reactions to the United States presidential election, 2016'}}

 Q: What is the codomain of  natural logarithm ?
 SPARQL: select distinct ?answer where { wd:Q204037 wdt:P1571 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'natural logarithm', 'p': 'codomain', 'o': '?x0'}

 Q: Did {Boston} {legislative body} {Boston City Council}?
 SPARQL: ASK WHERE { wd:Q100 wdt:P194 wd:Q4947808 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Boston', 'p': 'legislative body', 'o': '?x0', '?x0': 'Boston City Council'}]

 Q: Give me {municipality of the Netherlands} that contains the word {zwolle} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2039348 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zwolle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of the Netherlands'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zwolle'}}

 Q: Name a movie directed by Ang Lee
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q160726 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'directed by', 'o': 'Ang Lee', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie'}}

 Q: What is {position held} of {Robert Peel} and {end cause}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q181875 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1534 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Peel', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Peel', 'p': 'position held', 'o': '$y0'}}]

 Q: Which is the inferior planet with maximum albedo?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3901935 . ?ent wdt:P4501 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'albedo', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inferior planet'}}

 Q: What is <country for sport> of <Zinedine Zidane> ?
 SPARQL: select distinct ?answer where { wd:Q1835 wdt:P1532 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zinedine Zidane', 'p': 'country for sport', 'o': '?x0'}

 Q: Which is the Twitter hashtag for Emmanuel Macron?
 SPARQL: select distinct ?answer where { wd:Q3052772 wdt:P2572 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Emmanuel Macron', 'p': 'hashtag', 'o': '?x0'}

 Q: What is {physically interacts with} of {adenosine triphosphate} that is {subject has role} is {agonist} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80863 p:P129 ?s . ?s ps:P129 ?obj . ?s pq:P2868 wd:Q389934 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'physically interacts with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'adenosine triphosphate', 'p': 'physically interacts with', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'as', 'o': 'agonist'}}}

 Q: What is the {mineral species} for {fabrication method} of {uranium}
 SPARQL:  select distinct ?obj where { wd:Q1098 wdt:P2079 ?obj . ?obj wdt:P31 wd:Q55076514 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'U', 'p': 'fabrication method', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral species'}}

 Q: what is the {type of kinship} for {Barbara W. Tuchman} has {relative} as {Henry Morgenthau} ?
 SPARQL: SELECT ?value WHERE { wd:Q59112 p:P1038 ?s . ?s ps:P1038 wd:Q47946 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara W. Tuchman', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Henry Morgenthau'}}}

 Q: what is the {symbolizes} for {flag of the United States of America} has {depicts} as {field} ?
 SPARQL: SELECT ?value WHERE { wd:Q42537 p:P180 ?s . ?s ps:P180 wd:Q372254 . ?s pq:P4878 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbolizes', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'flag of the United States', 'p': 'depicts', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'depicts', 'o': 'field'}}}

 Q: What was the nomination received by Anjelica Huston, but had a prizewinner of Mira Sorvino?
 SPARQL: SELECT ?answer WHERE { wd:Q190998 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q212026}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anjelica Huston', 'p': 'nomination received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Mira Sorvino'}}

 Q: What is {death place} of {Karl von Frisch}, that has {has cities} is {Altstadt-Lehel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q60060 wdt:P20 ?answer . ?answer wdt:P150 wd:Q971198}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Karl von Frisch', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Altstadt-Lehel'}}

 Q: What develops from gynoecium?
 SPARQL: select distinct ?answer where { ?answer wdt:P3094 wd:Q588964}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'develops from', 'o': 'gynoecium'}

 Q: What multiple starts with the letter "h"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1055293 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'multiple'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: What is {type species} of {higher taxon} of {Piper mollipilosum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18036791 wdt:P171 ?X . ?X wdt:P427 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type species', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piper mollipilosum', 'p': 'higher taxon', 'o': '$y0'}}

 Q: who champ of awards of Joyce Carol Oates ?
 SPARQL: SELECT ?answer WHERE { wd:Q217557 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joyce Carol Oates', 'p': 'awards', 'o': '$y0'}}

 Q: What was the population of Iasi in 1910?
 SPARQL: SELECT ?obj WHERE { wd:Q46852 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1912')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Iasi', 'p': 'population', 'o': '?x0', 't': '1912'}

 Q: What is {place of birth} of {Jared Leto} that is {located in the administrative territorial entity} is {Louisiana} ?
 SPARQL: SELECT ?obj WHERE { wd:Q484523 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P131 wd:Q1588 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jared Leto', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Louisiana'}}}

 Q: Who is {member of} {coined} {Köppen climate classification} ?
 SPARQL: SELECT ?answer WHERE { wd:Q124095 wdt:P61 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Köppen climate classification', 'p': 'coined', 'o': '$y0'}}

 Q: Give the name of film character in the fictional analog of George II of Great Britain?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1074 wd:Q131981 . ?sbj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional analog of', 'o': 'George II of Great Britain', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character'}}

 Q: Who are the disciples of Christiaan Huygens who were informed by Maimonides?
 SPARQL: SELECT ?answer WHERE { wd:Q39599 wdt:P802 ?answer . ?answer wdt:P737 wd:Q127398}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Christiaan Huygens', 'p': 'disciple', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'informed by', 'o': 'Maimonides'}}

 Q: what is the {start time} for {Aarhus} has {twinned administrative body} as {Rostock} ?
 SPARQL: SELECT ?value WHERE { wd:Q25319 p:P190 ?s . ?s ps:P190 wd:Q2861 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aarhus', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Rostock'}}}

 Q: What is {co-founded by} of {member of} of {Inge Morath} ?
 SPARQL: SELECT ?answer WHERE { wd:Q112033 wdt:P463 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Inge Morath', 'p': 'member of', 'o': '$y0'}}

 Q: Which is the color of the red wine?
 SPARQL: select distinct ?answer where { wd:Q1827 wdt:P462 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'red wine', 'p': 'color', 'o': '?x0'}

 Q: What notable work did Thomas Nagel publish in 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q350239 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Nagel', 'p': 'notable work', 'o': '?x0', 't': '2012'}

 Q: what is the {for work} for {Catherine Deneuve} has {nominated for} as {César Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q106418 p:P1411 ?s . ?s ps:P1411 wd:Q24241 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Catherine Deneuve', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Actress'}}}

 Q: The parent taxon of a Nematoda belongs to what taxonomic ranking?
 SPARQL: SELECT ?answer WHERE { wd:Q5185 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'taxonomic rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nematoda', 'p': 'parent taxon', 'o': '$y0'}}

 Q: What is <Norwegian organisation number> of <KPMG> ?
 SPARQL: select distinct ?answer where { wd:Q493751 wdt:P2333 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'KPMG', 'p': 'Norwegian organisation number', 'o': '?x0'}

 Q: How many {World Health Organisation International Nonproprietary Name} are for {amphetamine} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q179452 wdt:P2275 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'amphetamine', 'p': 'World Health Organisation International Nonproprietary Name', 'o': '?x0'}

 Q: What is {prequel of} of {colors} of {The Secret of the Black Widow} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1168051 wdt:P462 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prequel of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Secret of the Black Widow', 'p': 'color', 'o': '$y0'}}

 Q: what is the {end time} for {Chandragupta Maurya} has {spouse} as {Durdhara} ?
 SPARQL: SELECT ?value WHERE { wd:Q188541 p:P26 ?s . ?s ps:P26 wd:Q5316334 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chandragupta Maurya', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Durdhara'}}}

 Q: Who is the doctoral student of Martin Weitzman supervisor?
 SPARQL: SELECT ?answer WHERE { wd:Q591572 wdt:P184 ?X . ?X wdt:P185 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral student', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Weitzman', 'p': 'supervisor', 'o': '$y0'}}

 Q: Which is the zenith of the jurisdiction of Citizens United v. Federal Election Commission?
 SPARQL: SELECT ?answer WHERE { wd:Q1092602 wdt:P1001 ?X . ?X wdt:P610 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zenith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Citizens United v. Federal Election Commission', 'p': 'jurisdiction', 'o': '$y0'}}

 Q: Is the biobased content weight percentage of the Polyamid 1010 reinforced with 30% glass fiber equal to 70?
 SPARQL: ASK WHERE { wd:Q57248741 wdt:P6076 ?obj filter(?obj = 70) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Polyamid 1010 reinforced with 30% glass fiber', 'p': 'biobased content weight percentage', 'o': '?x0', '?x0': '70'}

 Q: What political party is Julian Assange a member of?
 SPARQL:  select distinct ?obj where { wd:Q360 wdt:P102 ?obj . ?obj wdt:P31 wd:Q7278 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Julian Assange', 'p': 'party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party'}}

 Q: What is the {Population I star} with the {MAX(temperature)} whose {child astronomical body} is {(341958) Chrétien}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3592493 . ?ent wdt:P2076 ?obj . ?ent wdt:P398 wd:Q25397081 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Population I star', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Chrétien'}}}

 Q: what is the {statement is subject of} for {Donald Trump} has {significant event} as {inauguration} ?
 SPARQL: SELECT ?value WHERE { wd:Q22686 p:P793 ?s . ?s ps:P793 wd:Q1417098 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Trump', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'inauguration'}}}

 Q: What award did Joseph E. Stiglitz receive at the start of 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q18430 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph E. Stiglitz', 'p': 'award', 'o': '?x0', 't': '1979'}

 Q: Sevastopol is located on what peninsula?
 SPARQL:  select distinct ?obj where { wd:Q7525 wdt:P706 ?obj . ?obj wdt:P31 wd:Q34763 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sevastopol', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'peninsula'}}

 Q: What is {member of sports team} of {Ronaldinho} that is {number of matches played} is {6.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q39444 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'6.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ronaldinho', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '6.0'}}}

 Q: What is {studied under} of {sculptor} of {Urd Werdande Skuld (The Norns)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18543004 wdt:P170 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'studied under', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Urd Werdande Skuld (The Norns)', 'p': 'sculptor', 'o': '$y0'}}

 Q: Is the base salary of George Stephenson more than 240.0?
 SPARQL: ASK WHERE { wd:Q133614 wdt:P3618 ?obj filter(?obj > 240.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'George Stephenson', 'p': 'base salary', 'o': '?x0', '?x0': '240.0'}

 Q: How many {total produced} are for {Glock} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q739882 wdt:P1092 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Glock', 'p': 'total produced', 'o': '?x0'}

 Q: What is {continent} of {participants} of {Cold War} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8683 wdt:P710 ?X . ?X wdt:P30 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cold War', 'p': 'participant', 'o': '$y0'}}

 Q: What international university was founded by the United Nations General Assembly?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q47423 . ?sbj wdt:P31 wd:Q10829188 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'United Nations General Assembly', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international university'}}

 Q: What is {open period to} and {closed on} of {{British Museum} has {open days} as {all weekdays}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 wd:Q26214163 . ?s pq:P3028 ?value1 . ?s pq:P3026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'closed on', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'open days', 'o': 'all weekdays'}}}]

 Q: Is the duration of the 2058-2059 one-year-period greater than 1.2?
 SPARQL: ASK WHERE { wd:Q61702894 wdt:P2047 ?obj filter(?obj > 1.2) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '2058-2059 one-year-period', 'p': 'duration', 'o': '?x0', '?x0': '1.2'}

 Q: What are the Christian denomination which start with the letter united
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q879146 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'united')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian denomination'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'united'}}

 Q: What is <established from medical condition> of <Down syndrome> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P5166 wd:Q47715}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'established from medical condition', 'o': 'Down syndrome'}

 Q: What credit institution starts with the letter "w"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q730038 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'credit institution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: what is the {point in time} for {Szczecin} has {population} as {407811.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q393 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'407811.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Szczecin', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '407811.0'}, 't': '?x0'}

 Q: What is MYmovies actor ID of Adrien Brody?
 SPARQL: select distinct ?answer where { wd:Q104514 wdt:P4779 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Adrien Brody', 'p': 'MYmovies actor ID', 'o': '?x0'}

 Q: What is the {trademark} with the {MAX(alcohol by volume)} whose {country of origin} is {Belgium}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q167270 . ?ent wdt:P2665 ?obj . ?ent wdt:P495 wd:Q31 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'alcohol by volume', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'trademark', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Belgium'}}}

 Q: How many movements made for the {futurism} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P135 wd:Q131221 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'movement', 'o': 'futurism'}

 Q: Is it true that the visitors per year of Paul-Raymond Museum equals to 882?
 SPARQL: ASK WHERE { wd:Q3329306 wdt:P1174 ?obj filter(?obj = 882) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Paul-Raymond Museum', 'p': 'visitors per year', 'o': '?x0', '?x0': '882'}

 Q: What is {champ} of {nomination received} of {Stephen Hendry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q295201 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stephen Hendry', 'p': 'nomination received', 'o': '$y0'}}

 Q: What is {nominated for} of {Clint Eastwood} that is {statement is subject of} is {76th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43203 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q458646 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clint Eastwood', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '76th Academy Awards'}}}

 Q: Which is used by the standard genetic code?
 SPARQL: select distinct ?answer where { wd:Q180618 wdt:P1535 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'standard genetic code', 'p': 'used by', 'o': '?x0'}

 Q: What is the {administrative building} for {occupant} of {East India Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P466 wd:Q83164 . ?sbj wdt:P31 wd:Q2519340 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'occupant', 'o': 'East India Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'administrative building'}}

 Q: Is the vehicles per thousand people of Berlin equal to 342?
 SPARQL: ASK WHERE { wd:Q64 wdt:P5167 ?obj filter(?obj = 342) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Berlin', 'p': 'vehicles per thousand people', 'o': '?x0', '?x0': '342'}

 Q: who  is the professional wrestling promotion for replaces of WWE?
 SPARQL:  select distinct ?obj where { wd:Q35339 wdt:P1365 ?obj . ?obj wdt:P31 wd:Q721067 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'WWE', 'p': 'replaces', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'professional wrestling promotion'}}

 Q: Which is the chromosome count for Down syndrome?
 SPARQL: select distinct ?answer where { wd:Q47715 wdt:P5230 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Down syndrome', 'p': 'chromosome count', 'o': '?x0'}

 Q: Was PHP influenced by C++ and PHP?
 SPARQL: ASK WHERE { wd:Q59 wdt:P737 wd:Q2407 . wd:Q59 wdt:P737 wd:Q59 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'PHP', 'p': 'influenced by', 'o': '?x0', '?x0': 'C++'}, {'h': 'IS', 'v': '?x1', 's': 'PHP', 'p': 'influenced by', 'o': '?x1', '?x1': 'PHP'}]

 Q: When did position held of Arthur Balfour and elected in?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q19008 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Balfour', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Balfour', 'p': 'position held', 'o': '$y0'}}]

 Q: What is the {video game publisher} for {product or material produced} of {Commodore 64}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1056 wd:Q99775 . ?sbj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'product or material produced', 'o': 'Commodore 64', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: What is the {human} for {sport} of {boxing}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P641 wd:Q32112 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'boxing', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which metabolite has the largest mass?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q407595 . ?ent wdt:P2067 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'mass', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metabolite'}}

 Q: Which are the honors of the discoverer of hovercraft?
 SPARQL: SELECT ?answer WHERE { wd:Q185757 wdt:P61 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'honors', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hovercraft', 'p': 'discoverer', 'o': '$y0'}}

 Q: Is it true that the rate of fire of the 127/54 Compact equal 48.0?
 SPARQL: ASK WHERE { wd:Q1257331 wdt:P3792 ?obj filter(?obj = 48.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '127/54 Compact', 'p': 'rate of fire', 'o': '?x0', '?x0': '48.0'}

 Q: What is {chairperson} of {University of Tokyo} that is {start time} is {2015-4-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7842 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of Tokyo', 'p': 'chairperson', 'o': '?x0', 't': '2015'}

 Q: What is {population} of {Baku} that is {point in time} is {1979-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q9248 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Baku', 'p': 'population', 'o': '?x0', 't': '1979'}

 Q: What is the country of origin for thrash metal?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q483352 wdt:P495 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'thrash metal', 'p': 'country of origin', 'o': '?x0'}

 Q: What is {county seat for} of {work location} of {Feodor Chaliapin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q189164 wdt:P937 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Feodor Chaliapin', 'p': 'work location', 'o': '$y0'}}

 Q: What award was given to Gerhart Hauptmann, and how much money did he win from it?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q43523 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerhart Hauptmann', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerhart Hauptmann', 'p': 'award', 'o': '$y0'}}]

 Q: What is the {language} for {indigenous to} of {Khazars}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2341 wd:Q173282 . ?sbj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'indigenous to', 'o': 'Khazars', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: When was Dizzee Rascal nominated for the Brit Award for British Breakthrough Act?
 SPARQL: SELECT ?value WHERE { wd:Q366506 p:P1411 ?s . ?s ps:P1411 wd:Q16985318 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Dizzee Rascal', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Brit Award for British Breakthrough Act'}, 't': '?x0'}

 Q: What is {end time} and {start time} of {{Deodoro da Fonseca} has {position held} as {President of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q200812 p:P39 ?s . ?s ps:P39 wd:Q5176750 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Deodoro da Fonseca', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Deodoro da Fonseca', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Brazil'}}}]

 Q: Which is the Wikimedia disambiguation page which starts with the letter z?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4167410 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia disambiguation page'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Who gave the {unit symbol} of {adaptation of} of {foot per second} ?
 SPARQL: SELECT ?answer WHERE { wd:Q748716 wdt:P144 ?X . ?X wdt:P5061 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'unit symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'foot per second', 'p': 'adaptation of', 'o': '$y0'}}

 Q: What is the Setlist FM artist ID of The Cure?
 SPARQL: select distinct ?answer where { wd:Q484427 wdt:P5431 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Cure', 'p': 'Setlist FM artist ID', 'o': '?x0'}

 Q: what is forensic technique starts with d
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q456443 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'forensic technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Who gave the {co-founded by} of {has designer} of {RIM-116 Rolling Airframe Missile} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1060737 wdt:P287 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'RIM-116 Rolling Airframe Missile', 'p': 'has designer', 'o': '$y0'}}

 Q: What is {made by} of {in narrative} of {Jacques} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24565962 wdt:P1441 ?X . ?X wdt:P2079 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'made by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacques', 'p': 'in narrative', 'o': '$y0'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Gordon Banks} has {member of sports team} as {Stoke City F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q213879 p:P54 ?s . ?s ps:P54 wd:Q18736 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gordon Banks', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Stoke City F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gordon Banks', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Stoke City F.C.'}}}]

 Q: When was the population of Burkina Faso 8.57982e+06?
 SPARQL: SELECT ?value WHERE { wd:Q965 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'8.57982e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Burkina Faso', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '8.57982e+06'}, 't': '?x0'}

 Q: Is the atomic number of sulfur greater than 12.8
 SPARQL: ASK WHERE { wd:Q682 wdt:P1086 ?obj filter(?obj > 12.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'sulfur', 'p': 'atomic number', 'o': '?x0', '?x0': '12.8'}

 Q: Which is the 3D model of David?
 SPARQL: select distinct ?answer where { wd:Q179900 wdt:P4896 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David', 'p': '3D model', 'o': '?x0'}

 Q: Who is the facility operator of UTair Flight 120?
 SPARQL: SELECT ?answer WHERE { wd:Q633870 wdt:P137 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'UTair Flight 120', 'p': 'operator', 'o': '$y0'}}

 Q: what is the {replaces} for {Frank Forde} has {position held} as {Member of the Queensland Legislative Assembly} ?
 SPARQL: SELECT ?value WHERE { wd:Q459146 p:P39 ?s . ?s ps:P39 wd:Q18526194 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Forde', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the Queensland Legislative Assembly'}}}

 Q: what is the {point in time} for {Lassie} has {original network} as {broadcast syndication} ?
 SPARQL: SELECT ?value WHERE { wd:Q289537 p:P449 ?s . ?s ps:P449 wd:Q1572845 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lassie', 'p': 'network', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'network', 'o': 'broadcast syndication'}, 't': '?x0'}

 Q: Does the University of Oxford admit a rate of .0175?
 SPARQL: ASK WHERE { wd:Q34433 wdt:P5822 ?obj filter(?obj = 0.175) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'University of Oxford', 'p': 'admission rate', 'o': '?x0', '?x0': '0.175'}

 Q: Is the endowment of McGill University greater than 1252960800?
 SPARQL: ASK WHERE { wd:Q201492 wdt:P6589 ?obj filter(?obj > 1252960800.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'McGill University', 'p': 'endowment', 'o': '?x0', '?x0': '1252960800.0'}

 Q: What is the {said to be the same as} and the {present in work} of {Satan} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q35230 wdt:P460 ?ans_1 . wd:Q35230 wdt:P1441 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Satan', 'p': 'said to be the same as', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Satan', 'p': 'present in work', 'o': '?x1'}]

 Q: Which is the Crunchbase organisation ID of Alphabet Inc. ?
 SPARQL: select distinct ?answer where { wd:Q20800404 wdt:P2088 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alphabet Inc.', 'p': 'Crunchbase organisation ID', 'o': '?x0'}

 Q: "What is the treats disease of bismuth whose treatment is Trovafloxacin?
 SPARQL: SELECT ?answer WHERE { wd:Q942 wdt:P2175 ?answer . ?answer wdt:P2176 wd:Q544393}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'bismuth', 'p': 'treats', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'treatment', 'o': 'Trovafloxacin'}}

 Q: What is the {human} for {position held} of {UNESCO}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P39 wd:Q7809 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'position held', 'o': 'UNESCO', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {son of} of {has brother} of {Stanisław Grabowski} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9341975 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanisław Grabowski', 'p': 'bro', 'o': '$y0'}}

 Q: How many highest point are scored by Ben Nevis?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P610 wd:Q104674 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'highest point', 'o': 'Ben Nevis'}

 Q: What is {member of sports team} of {George Mikan} that is {position played on team / speciality} is {center} ?
 SPARQL: SELECT ?obj WHERE { wd:Q314185 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P413 wd:Q222052 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Mikan', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position played on team / speciality', 'o': 'center'}}}

 Q: Is it true that the Sister member count equals 4?
 SPARQL: ASK WHERE { wd:Q223048 wdt:P2124 ?obj filter(?obj = 4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sistar', 'p': 'member count', 'o': '?x0', '?x0': '4'}

 Q: What is {is in the borough of} of {Limpopo}, that has {has cities} is {North West} ?
 SPARQL: SELECT ?answer WHERE { wd:Q134907 wdt:P131 ?answer . ?answer wdt:P150 wd:Q165956}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Limpopo', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'North West'}}

 Q: What is named for Compton scattering which has the honorary title of "X-ray badge"?
 SPARQL: SELECT ?answer WHERE { wd:Q171516 wdt:P138 ?answer . ?answer wdt:P166 wd:Q2202680}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Compton scattering', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'honorary title', 'o': 'X-ray badge'}}

 Q: WHat are the types of software that contain the word "system" in their name ?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28530532 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'system')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'types of software'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'system'}}

 Q: what is the {country} for {Marilyn Chambers} has {place of death} as {Santa Clarita} ?
 SPARQL: SELECT ?value WHERE { wd:Q220693 p:P20 ?s . ?s ps:P20 wd:Q491132 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marilyn Chambers', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Santa Clarita'}}}

 Q: What is {coat of arms} of {national of} of {Thomas Love Peacock} ?
 SPARQL: SELECT ?answer WHERE { wd:Q561408 wdt:P27 ?X . ?X wdt:P237 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coat of arms', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Love Peacock', 'p': 'national of', 'o': '$y0'}}

 Q: What is <ISzDb film ID> of <Jaws> ?
 SPARQL: select distinct ?answer where { wd:Q189505 wdt:P3110 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jaws', 'p': 'ISzDb film ID', 'o': '?x0'}

 Q: What is {developed by} of {medium} of {Filhos da Grávida de Taubaté} ?
 SPARQL: SELECT ?answer WHERE { wd:Q49305856 wdt:P437 ?X . ?X wdt:P178 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Filhos da Grávida de Taubaté', 'p': 'medium', 'o': '$y0'}}

 Q: What's the native label for congee?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q878624 wdt:P1705 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'congee', 'p': 'native label', 'o': '?x0'}

 Q: What is {award received} of {Robert Bresson} that is {for work} is {L'Argent} ?
 SPARQL: SELECT ?obj WHERE { wd:Q55391 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q2621769 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Bresson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': "L'Argent"}}}

 Q: Who is {discoverer of} {big event} of {Najib Razak} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57675 wdt:P793 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discoverer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Najib Razak', 'p': 'big event', 'o': '$y0'}}

 Q: What is the {Yukon Quest} with the {MAX(size of team at finish)} whose {participant} is {Cody Strathe}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2301224 . ?ent wdt:P2105 ?obj . ?ent wdt:P710 wd:Q18588261 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'size of team at finish', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Yukon Quest', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Cody Strathe'}}}

 Q: What is {published in journal} of {citation} of {Darwin's abominable mystery: Insights from a supertree of the angiosperms} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24621983 wdt:P2860 ?X . ?X wdt:P1433 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Darwin's abominable mystery: Insights from a supertree of the angiosperms", 'p': 'citation', 'o': '$y0'}}

 Q: When Cardiff has its population 346100.0?
 SPARQL: SELECT ?value WHERE { wd:Q10690 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'346100.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Cardiff', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '346100.0'}, 't': '?x0'}

 Q: What is <event distance> of <Epsom Derby> ?
 SPARQL: select distinct ?answer where { wd:Q55629 wdt:P3157 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Epsom Derby', 'p': 'event distance', 'o': '?x0'}

 Q: What is {vapor pressure} of {Galinstan} that is {determination method} is {maximum} ?
 SPARQL: SELECT ?obj WHERE { wd:Q675176 p:P2119 ?s . ?s ps:P2119 ?obj . ?s pq:P459 wd:Q10578722 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'vapor pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Galinstan', 'p': 'vapor pressure', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'maximum'}}}

 Q: What is the {triangular number} with the {MIN(numeric value)} whose {instance of} is {composite number}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q245102 . ?ent wdt:P1181 ?obj . ?ent wdt:P31 wd:Q50707} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'numeric value', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'triangular number', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'composite number'}}}

 Q: What is the {executive body} and the {legislative body} of {Goa} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1171 wdt:P208 ?ans_1 . wd:Q1171 wdt:P194 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Goa', 'p': 'executive body', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Goa', 'p': 'legislative body', 'o': '?x1'}]

 Q: What is {has grammatical gender} of {second language} of {Elizabeth Pakenham, Countess of Longford} ?
 SPARQL: SELECT ?answer WHERE { wd:Q530870 wdt:P1412 ?X . ?X wdt:P5109 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical gender', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Elizabeth Pakenham, Countess of Longford', 'p': 'language', 'o': '$y0'}}

 Q: Are there fewer than 3.6 spans of the Kew Bridge?
 SPARQL: ASK WHERE { wd:Q371906 wdt:P1314 ?obj filter(?obj < 3.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Kew Bridge', 'p': 'spans', 'o': '?x0', '?x0': '3.6'}

 Q: who is the {mother} for {Will Smith} that has {child} as {Willow Smith} ?
 SPARQL: SELECT ?value WHERE { wd:Q40096 p:P40 ?s . ?s ps:P40 wd:Q298209 . ?s pq:P25 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Will Smith', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Willow Smith'}}}

 Q: "Which is {topic of} of {history of Alabama}, that has {has shires} is {Perry County} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q5774933 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q253538}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Alabama', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has shires', 'o': 'Perry County'}}

 Q: What is {occupation} of {Charles Baudelaire} that is {field of work} is {English} ?
 SPARQL: SELECT ?obj WHERE { wd:Q501 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P101 wd:Q1860 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'occupation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Baudelaire', 'p': 'occupation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'field of work', 'o': 'English'}}}

 Q: What is {diplomatic relation} of {location of burial} of {Karen Carpenter} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1250861 wdt:P119 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karen Carpenter', 'p': 'location of burial', 'o': '$y0'}}

 Q: What is the {library} for {owned by} of {University of Oxford}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q34433 . ?sbj wdt:P31 wd:Q7075 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'University of Oxford', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'library'}}

 Q: What is RYM artist ID for Van Morrison ?
 SPARQL: select distinct ?answer where { wd:Q272203 wdt:P5404 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Van Morrison', 'p': 'RYM artist ID', 'o': '?x0'}

 Q: which programming paradigm is language of mIRC ?
 SPARQL: SELECT ?answer WHERE { wd:Q211680 wdt:P277 ?X . ?X wdt:P3966 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'programming paradigm', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'mIRC', 'p': 'language', 'o': '$y0'}}

 Q: Is it true that the emissivity of the cement is greater than 0.648?
 SPARQL: ASK WHERE { wd:Q45190 wdt:P1295 ?obj filter(?obj > 0.648) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'cement', 'p': 'emissivity', 'o': '?x0', '?x0': '0.648'}

 Q: What earthquake in Kamouraskas had the most aftershocks?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2320 ?obj . ?ent wdt:P131 wd:Q178178 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'aftershocks', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'earthquake', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Kamouraska Regional County Municipality'}}}

 Q: Tell me municipiu of Romania whose name has the word  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q640364 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zalău')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipiu of Romania'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zalău'}}

 Q: Was Sony BMG Music Entertainment Backstreet Boys' record label?
 SPARQL: ASK WHERE { wd:Q17140 wdt:P264 wd:Q3001888 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Backstreet Boys', 'p': 'record label', 'o': '?x0', '?x0': 'Sony BMG'}]

 Q: Who is the daughter of the president of the Conservative Party?
 SPARQL: SELECT ?answer WHERE { wd:Q9626 wdt:P488 ?X . ?X wdt:P25 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Conservative Party', 'p': 'president', 'o': '$y0'}}

 Q: What is the {Wikidata property for lexicographical data} for {subject item of this property} of {Chinese characters}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1629 wd:Q8201 . ?sbj wdt:P31 wd:Q54076056 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'item', 'o': 'Chinese characters', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata property for lexicographical data'}}

 Q: What left office is from the temporal range start of Sturtian glaciation?
 SPARQL: SELECT ?answer WHERE { wd:Q1450075 wdt:P523 ?X . ?X wdt:P582 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'left office', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sturtian glaciation', 'p': 'temporal range start', 'o': '$y0'}}

 Q: What is {subsidiary entities} of {works for} of {Buzz Aldrin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2252 wdt:P108 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Buzz Aldrin', 'p': 'works for', 'o': '$y0'}}

 Q: Which is the fictional continent of the narrative location of Game of Thrones?
 SPARQL:  select distinct ?obj where { wd:Q23572 wdt:P840 ?obj . ?obj wdt:P31 wd:Q17199338 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Game of Thrones', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional continent'}}

 Q: What place with a NW zipcode is the admin HQ of Arsenal F.C.?
 SPARQL: SELECT ?answer WHERE { wd:Q9617 wdt:P159 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'NW'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arsenal F.C.', 'p': 'HQ', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'zipcode', 'o': 'nw'}}

 Q: what is the {winner} for {Gloria Estefan} has {award received} as {Latin Grammy Award for Best Tropical Song} ?
 SPARQL: SELECT ?value WHERE { wd:Q184697 p:P166 ?s . ?s ps:P166 wd:Q6496398 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gloria Estefan', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Latin Grammy Award for Best Tropical Song'}}}

 Q: Give me {United States federal executive department} that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q910252 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'United States federal executive department'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Which is the Unicode hex codepoint for smiley?
 SPARQL: select distinct ?answer where { wd:Q11241 wdt:P4213 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'smiley', 'p': 'Unicode hex codepoint', 'o': '?x0'}

 Q: Is the Wikidata time precision of the minute equal to 13?
 SPARQL: ASK WHERE { wd:Q7727 wdt:P2803 ?obj filter(?obj = 13) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'minute', 'p': 'Wikidata time precision', 'o': '?x0', '?x0': '13'}

 Q: Were the House of Lancaster and the House of Neville participants in the Wars of the Roses?
 SPARQL: ASK WHERE { wd:Q127751 wdt:P710 wd:Q2364167 . wd:Q127751 wdt:P710 wd:Q105278 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Wars of the Roses', 'p': 'participant', 'o': '?x0', '?x0': 'House of Neville'}, {'h': 'IS', 'v': '?x1', 's': 'Wars of the Roses', 'p': 'participant', 'o': '?x1', '?x1': 'House of Lancaster'}]

 Q: WHat treaty serves as the main regulatory text in Soviet Union
 SPARQL:  select distinct ?obj where { wd:Q15180 wdt:P92 ?obj . ?obj wdt:P31 wd:Q131569 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Soviet Union', 'p': 'main regulatory text', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'treaty'}}

 Q: Is QCOM the stock exchange ticker symbol for Qualcomm?
 SPARQL: SELECT ?obj WHERE { wd:Q544847 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x filter(contains(?x,'QCOM')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stock exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Qualcomm', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ticker symbol', 'o': 'qcom'}}}

 Q: what is the {point in time} for {Marion Cotillard} has {award received} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q8927 p:P166 ?s . ?s ps:P166 wd:Q103618 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Marion Cotillard', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Actress'}, 't': '?x0'}

 Q: Who did Alejandro Sanz marry on May 26, 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q276170 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alejandro Sanz', 'p': 'marry', 'o': '?x0', 't': '2012'}

 Q: What is {co-founded by} of {developed by} of {The Sims: Hot Date} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1991302 wdt:P178 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Sims: Hot Date', 'p': 'developed by', 'o': '$y0'}}

 Q: What sovereign state starts with the letter "y"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3624078 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is the {human} for {conflict} of {World War II}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P607 wd:Q362 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'World War II', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {date of death} and {date of birth} of {{Abigail Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams Smith'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams Smith'}}}]

 Q: What was Leo Tolstoy nominated for in 1905?
 SPARQL: SELECT ?obj WHERE { wd:Q7243 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1905')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leo Tolstoy', 'p': 'nominated for', 'o': '?x0', 't': '1905'}

 Q: Give me {state of Australia} that contains the word {victoria} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5852411 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'victoria')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state of Australia'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'victoria'}}

 Q: What edition of "On the Origin of Species" was published in 1906?
 SPARQL: SELECT ?obj WHERE { wd:Q20124 p:P747 ?s . ?s ps:P747 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'1906')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'On the Origin of Species', 'p': 'edition', 'o': '?x0', 't': '1906'}

 Q: What is the {Wikimedia list article} for {published in} of {Rolling Stone}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1433 wd:Q33511 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Rolling Stone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: What is {head of government} of {North Rhine-Westphalia} that is {start time} is {1956-2-20} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1198 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1956')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'North Rhine-Westphalia', 'p': 'head of government', 'o': '?x0', 't': '1956'}

 Q: What was the Human Development Index of Chile in 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q298 p:P1081 ?s . ?s ps:P1081 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chile', 'p': 'Human Development Index', 'o': '?x0', 't': '2012'}

 Q: what is the {point in time} for {Ginger Lynn} has {award received} as {AVN Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q233596 p:P166 ?s . ?s ps:P166 wd:Q824540 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ginger Lynn', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'AVN Award'}, 't': '?x0'}

 Q: How many work locations are for Hans Hofmann?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q215461 wdt:P937 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Hans Hofmann', 'p': 'work location', 'o': '?x0'}

 Q: Name the honorary title given to Jack Kilby whose leader is Herwig Kogelnik?
 SPARQL: SELECT ?answer WHERE { wd:Q182031 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q1528517}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jack Kilby', 'p': 'honorary title', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'leader', 'o': 'Herwig Kogelnik'}}

 Q: What is <inventory number> of <Guernica> ?
 SPARQL: select distinct ?answer where { wd:Q175036 wdt:P217 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Guernica', 'p': 'inventory number', 'o': '?x0'}

 Q: What is {differs from} of {Great Commandment}, that has {created on language} is {English} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51641 wdt:P1889 ?answer . ?answer wdt:P364 wd:Q1860}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Great Commandment', 'p': 'differs from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'created on language', 'o': 'English'}}

 Q: Did {Al_Pacino} {educated at} {Hurst Lodge School}?
 SPARQL: ASK WHERE { wd:Q41163 wdt:P69 wd:Q15227061 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Al Pacino', 'p': 'educated at', 'o': '?x0', '?x0': 'Hurst Lodge School'}]

 Q: What is the {Juno Award} for {winner} of {The Weeknd}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1346 wd:Q2121062 . ?sbj wdt:P31 wd:Q507057 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'The Weeknd', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Juno Award'}}

 Q: Is the residence time of the water in the Sea of Galilee 4.8?
 SPARQL: ASK WHERE { wd:Q126982 wdt:P3020 ?obj filter(?obj = 4.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sea of Galilee', 'p': 'residence time of water', 'o': '?x0', '?x0': '4.8'}

 Q: What is {human population} of {principal place} of {Roman Republic} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17167 wdt:P36 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roman Republic', 'p': 'capital', 'o': '$y0'}}

 Q: What is the Christian name of James Hetfield that is the same as Jacques?
 SPARQL: SELECT ?answer WHERE { wd:Q484302 wdt:P735 ?answer . ?answer wdt:P460 wd:Q941049}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Hetfield', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Jacques'}}

 Q: Give me {Magnetic confinement fusion} that contains the word {tokamak} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q939954 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tokamak')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Magnetic confinement fusion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tokamak'}}

 Q: what is the due to of the death cause of Edwin Kagin?
 SPARQL: SELECT ?answer WHERE { wd:Q5346572 wdt:P509 ?X . ?X wdt:P828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edwin Kagin', 'p': 'death cause', 'o': '$y0'}}

 Q: When did Rolf-Dieter Heuer stop being the director of CERN?
 SPARQL: SELECT ?value WHERE { wd:Q42944 p:P1037 ?s . ?s ps:P1037 wd:Q65092 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'CERN', 'p': 'director', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'director', 'o': 'Rolf-Dieter Heuer'}}}

 Q: Which is the RxNorm CUI for palladium?
 SPARQL: select distinct ?answer where { wd:Q1089 wdt:P3345 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'palladium', 'p': 'RxNorm CUI', 'o': '?x0'}

 Q: What is {position held} of {Helen Clark} that is {start time} is {1981-11-28} ?
 SPARQL: SELECT ?obj WHERE { wd:Q180383 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Helen Clark', 'p': 'position held', 'o': '?x0', 't': '1981'}

 Q: How many CEOs does Apple, Inc., have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q312 wdt:P169 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Apple', 'p': 'CEO', 'o': '?x0'}

 Q: What is {heraldic emblem} of {twin cities} of {Changsha} ?
 SPARQL: SELECT ?answer WHERE { wd:Q174091 wdt:P190 ?X . ?X wdt:P94 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'heraldic emblem', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Changsha', 'p': 'twin cities', 'o': '$y0'}}

 Q: what is the {end time} for {Geneva} has {capital of} as {Republic of Geneva} ?
 SPARQL: SELECT ?value WHERE { wd:Q71 p:P1376 ?s . ?s ps:P1376 wd:Q23366230 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geneva', 'p': 'capital of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital of', 'o': 'Republic of Geneva'}}}

 Q: Who is the author of The Merchant of Venice and who are it's characters?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q206400 wdt:P674 ?ans_1 . wd:Q206400 wdt:P50 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'The Merchant of Venice', 'p': 'characters', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'The Merchant of Venice', 'p': 'author', 'o': '?x1'}]

 Q: Is the number of registered contributors of Project Euler 485867?
 SPARQL: ASK WHERE { wd:Q168430 wdt:P1833 ?obj filter(?obj = 485867) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Project Euler', 'p': 'number of registered users/contributors', 'o': '?x0', '?x0': '485867'}

 Q: Who is the doctoral supervisor and founder of clinical psychology?
 SPARQL: SELECT ?answer WHERE { wd:Q199906 wdt:P112 ?X . ?X wdt:P184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral supervisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'clinical psychology', 'p': 'founder', 'o': '$y0'}}

 Q: Give me {profession} that {facet of} {female dominance} and which contains the word {dominatrix} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28640 . ?sbj wdt:P1269 wd:Q1404482 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dominatrix')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'female dominance'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dominatrix'}}

 Q: what is the {start time} for {Robert Evans} has {spouse} as {Ali MacGraw} ?
 SPARQL: SELECT ?value WHERE { wd:Q1826885 p:P26 ?s . ?s ps:P26 wd:Q229983 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Evans', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Ali MacGraw'}}}

 Q: What is <color index> of <Alpha Centauri> ?
 SPARQL: select distinct ?answer where { wd:Q12176 wdt:P1458 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alpha Centauri', 'p': 'color index', 'o': '?x0'}

 Q: Is the maximum Strahler number of Black Creek equal to 3?
 SPARQL: ASK WHERE { wd:Q4920591 wdt:P1548 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Black Creek', 'p': 'maximum Strahler number', 'o': '?x0', '?x0': '3'}

 Q: What is {zipcode} of {sister town} of {Volgograd} ?
 SPARQL: SELECT ?answer WHERE { wd:Q914 wdt:P190 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'zipcode', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Volgograd', 'p': 'sister town', 'o': '$y0'}}

 Q: What is <less than> of <Uranus> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P5136 wd:Q324}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'less than', 'o': 'Uranus'}

 Q: Where is the {location of discovery} and the {discoverer or inventor} of {Tungsten} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q743 wdt:P189 ?ans_1 . wd:Q743 wdt:P61 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'W', 'p': 'location of discovery', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'W', 'p': 'discoverer or inventor', 'o': '?x1'}]

 Q: Is the data size of The Elder Scrolls: Legends equal to 3448098816?
 SPARQL: ASK WHERE { wd:Q20538679 wdt:P3575 ?obj filter(?obj = 3448098816) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'The Elder Scrolls: Legends', 'p': 'data size', 'o': '?x0', '?x0': '3448098816'}

 Q: What is {educated at} of {Indra Nooyi} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q264913 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Indra Nooyi', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Indra Nooyi', 'p': 'educated at', 'o': '$y0'}}]

 Q: What film genre is pupil of Carl Reinecke ?
 SPARQL: SELECT ?answer WHERE { wd:Q159569 wdt:P1066 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Reinecke', 'p': 'pupil of', 'o': '$y0'}}

 Q: How many residences are there for Mikhail Bulgakov?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q835 wdt:P551 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Mikhail Bulgakov', 'p': 'residence', 'o': '?x0'}

 Q: Did {Osama_bin_Laden} {residence} {Osama bin Laden's house in Khartoum}?
 SPARQL: ASK WHERE { wd:Q1317 wdt:P551 wd:Q7105667 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Osama bin Laden', 'p': 'residence', 'o': '?x0', '?x0': "Osama bin Laden's house in Khartoum"}]

 Q: What is {subject in} of {interaction} of {top quark} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6778 wdt:P517 ?X . ?X wdt:P1269 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'top quark', 'p': 'interaction', 'o': '$y0'}}

 Q: What is {spouse} of {Alexander Hamilton} that is {place of marriage} is {Schuyler Mansion} ?
 SPARQL: SELECT ?obj WHERE { wd:Q178903 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q1666617 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'marry', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Hamilton', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of marriage', 'o': 'Schuyler Mansion'}}}

 Q: what is the {end time} for {Sigismund} has {position held} as {King of Bohemia} ?
 SPARQL: SELECT ?value WHERE { wd:Q57124 p:P39 ?s . ?s ps:P39 wd:Q45341328 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sigismund', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of Bohemia'}}}

 Q: Is 65 the retirement age in Czech Republic?
 SPARQL: ASK WHERE { wd:Q213 wdt:P3001 ?obj filter(?obj = 65) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Czech Republic', 'p': 'retirement age', 'o': '?x0', '?x0': '65'}

 Q: "Where is {grave at} of {James Bond}, which {partner town} is {Incheon} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q241031 wdt:P119 ?answer . ?answer wdt:P190 wd:Q20934}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Bond', 'p': 'grave at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Incheon'}}

 Q: What is {population} of {Rhode Island} that is {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1387 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rhode Island', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: Which is the volcanic rock which contains the word trachyte in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q108689 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trachyte')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'volcanic rock'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'trachyte'}}

 Q: What is {discipline of sport} of {coach} of {Nina Dumbadze} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50878 wdt:P286 ?X . ?X wdt:P2416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discipline of sport', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nina Dumbadze', 'p': 'coach', 'o': '$y0'}}

 Q: What is {location} and {height} of {{pole vault} has {record held} as {Yelena Isinbayeva}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q6319 . ?s pq:P276 ?value1 . ?s pq:P2048 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Yelena Isinbayeva'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'height', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Yelena Isinbayeva'}}}]

 Q: Who is record producer Vento del sud married to?
 SPARQL: SELECT ?answer WHERE { wd:Q4009726 wdt:P162 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vento del sud', 'p': 'producer', 'o': '$y0'}}

 Q: Tell me highly urbanized city whose name has the word valenzuela in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29946056 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'valenzuela')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'highly urbanized city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'valenzuela'}}

 Q: What is {science, that studies} of {moveable object location} of {cell cycle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q188941 wdt:P276 ?X . ?X wdt:P2579 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'science, that studies', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cell cycle', 'p': 'location', 'o': '$y0'}}

 Q: What is the {sporting event} with the {MAX(event distance)} whose {winner} is {Rudolf Caracciola}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q16510064 . ?ent wdt:P3157 ?obj . ?ent wdt:P1346 wd:Q57365 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'event distance', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sporting event', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'champion', 'o': 'Rudolf Caracciola'}}}

 Q: What is {head quarters} of {member of} of {Georg Rabuse} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1505690 wdt:P102 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georg Rabuse', 'p': 'member of', 'o': '$y0'}}

 Q: Did {Muhammad} {conflict} {Caravan raids}?
 SPARQL: ASK WHERE { wd:Q9458 wdt:P607 wd:Q3079899 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Muhammad', 'p': 'conflict', 'o': '?x0', '?x0': 'Caravan raids'}]

 Q: What shape is a rectangle?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1419 wd:Q209 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'shape', 'o': 'rectangle'}

 Q: Is it true that the thickness of the "Portrait of a Man" is less than .72"?
 SPARQL: ASK WHERE { wd:Q28016117 wdt:P2610 ?obj filter(?obj < 0.72) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Portrait of a Man', 'p': 'thickness', 'o': '?x0', '?x0': '0.72'}

 Q: How many {partner} are to/by {Iron Man} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P451 wd:Q180704 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'partner', 'o': 'Iron Man'}

 Q: What is {county seat for} of {workplace} of {La Monte Young} ?
 SPARQL: SELECT ?answer WHERE { wd:Q432822 wdt:P937 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'La Monte Young', 'p': 'workplace', 'o': '$y0'}}

 Q: What is {start time} and {end time} of {{Barnaul} has {located in the administrative territorial entity} as {West Siberian Krai}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6014 p:P131 ?s . ?s ps:P131 wd:Q4186485 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barnaul', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'West Siberian Krai'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barnaul', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'West Siberian Krai'}}}]

 Q: Which is the cultural region that is located in Bilbao?
 SPARQL:  select distinct ?obj where { wd:Q8692 wdt:P276 ?obj . ?obj wdt:P31 wd:Q3502482 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bilbao', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cultural region'}}

 Q: Is it true that the number of points/goals/set scored of UEFA Euro 1984 equals to 41?
 SPARQL: ASK WHERE { wd:Q182770 wdt:P1351 ?obj filter(?obj = 41) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'UEFA Euro 1984', 'p': 'number of points/goals/set scored', 'o': '?x0', '?x0': '41'}

 Q: What is {sister city} of {Eindhoven}, that has {gps co-ordinate} is {53.116666666667 23.166666666667} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9832 wdt:P190 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'53.116666666667 23.166666666667'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eindhoven', 'p': 'sister city', 'o': '?x0'}

 Q: What is {doctoral supervisor} of {rector} of {Imperial St. Petersburg University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28729082 wdt:P1075 ?X . ?X wdt:P184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral supervisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Imperial St. Petersburg University', 'p': 'rector', 'o': '$y0'}}

 Q: What is {shape} of {CompactFlash}, that has {base} is {rectangle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q678615 wdt:P1419 ?answer . ?answer wdt:P3263 wd:Q209}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'CompactFlash', 'p': 'shape', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'base', 'o': 'rectangle'}}

 Q: What is {preceded by} of {epoch} of {Selkirk Mountains} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1420547 wdt:P2348 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'preceded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Selkirk Mountains', 'p': 'epoch', 'o': '$y0'}}

 Q: Give me {band} that {discography} {Nightwish discography} and which contains the word {nightwish} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q215380 . ?sbj wdt:P358 wd:Q960630 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nightwish')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'band', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discography', 'o': 'Nightwish discography'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'nightwish'}}

 Q: What is Thomas Aquinas' profession?
 SPARQL:  select distinct ?obj where { wd:Q9438 wdt:P106 ?obj . ?obj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thomas Aquinas', 'p': 'profession', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: What is the Who's Who UK ID of Albert Einstein?
 SPARQL: select distinct ?answer where { wd:Q937 wdt:P4789 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albert Einstein', 'p': "Who's Who UK ID", 'o': '?x0'}

 Q: Which is the BnF ID for planetary nebula?
 SPARQL: select distinct ?answer where { wd:Q13632 wdt:P268 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'planetary nebula', 'p': 'BnF ID', 'o': '?x0'}

 Q: Is the kinematic viscosity of Unleaded 91 equal to 0.475?
 SPARQL: ASK WHERE { wd:Q50740556 wdt:P2118 ?obj filter(?obj = 0.475) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Unleaded 91', 'p': 'kinematic viscosity', 'o': '?x0', '?x0': '0.475'}

 Q: Is the solubility of ethylene dichloride less than 1.08?
 SPARQL: ASK WHERE { wd:Q161480 wdt:P2177 ?obj filter(?obj < 1.08) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'ethylene dichloride', 'p': 'solubility', 'o': '?x0', '?x0': '1.08'}

 Q: What is {time of publication} of {environment} of {Grand Theft Auto III} ?
 SPARQL: SELECT ?answer WHERE { wd:Q149106 wdt:P400 ?X . ?X wdt:P577 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grand Theft Auto III', 'p': 'environment', 'o': '$y0'}}

 Q: What is the {Soyuz-TMA} with the {MAX(apoapsis)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2425489 . ?ent wdt:P2243 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'apoapsis', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Soyuz-TMA'}}

 Q: What award did Keanu Reeves receive, which was also won by Sandra Bullock?
 SPARQL: SELECT ?obj WHERE { wd:Q43416 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q40791 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Keanu Reeves', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'won by', 'o': 'Sandra Bullock'}}}

 Q: What is the {directory service} with the {MAX(port)} whose {instance of} is {directory service}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q756230 . ?ent wdt:P1641 ?obj . ?ent wdt:P31 wd:Q756230 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'port', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'directory service'}}

 Q: What is {mouth of the watercourse} of {Mississippi River} that is {statement is subject of} is {Mississippi River Delta} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1497 p:P403 ?s . ?s ps:P403 ?obj . ?s pq:P805 wd:Q1528035 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mouth of the watercourse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mississippi River', 'p': 'mouth of the watercourse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Mississippi River Delta'}}}

 Q: How many {significant person} are for {Rumi} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q43347 wdt:P3342 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Rumi', 'p': 'significant person', 'o': '?x0'}

 Q: How many {chairperson} are for {Musée d'Orsay} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q23402 wdt:P488 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': "Musée d'Orsay", 'p': 'chairperson', 'o': '?x0'}

 Q: What is the {concept} for {studied by} of {social science}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2579 wd:Q34749 . ?sbj wdt:P31 wd:Q151885 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'social science', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept'}}

 Q: What is {cohabitant} of {Courteney Cox}, that has {career} is {record producer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58912 wdt:P451 ?answer . ?answer wdt:P106 wd:Q183945}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Courteney Cox', 'p': 'cohabitant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'record producer'}}

 Q: Who has kids with Kanye West, whose brother-in-law is Kris Jenner?
 SPARQL: SELECT ?answer WHERE { wd:Q15935 wdt:P40 ?answer . ?answer wdt:P1038 wd:Q1138235}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kanye West', 'p': 'kid', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'brother-in-law', 'o': 'Kris Jenner'}}

 Q: Which runway in LAX are made of concrete?
 SPARQL: SELECT ?obj WHERE { wd:Q8731 p:P529 ?s . ?s ps:P529 ?obj . ?s pq:P186 wd:Q22657 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'runway', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'LAX', 'p': 'runway', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'made of', 'o': 'concrete'}}}

 Q: What is the civilisation of episkyros whose starting time is -1200-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q3565742 wdt:P2596 ?answer . ?answer wdt:P580 ?x FILTER(contains(YEAR(?x),'1200'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'episkyros', 'p': 'civilisation', 'o': '?x0', 't': '1200'}

 Q: How many {office held by head of state} are for {Romania} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q218 wdt:P1906 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Romania', 'p': 'office held by head of state', 'o': '?x0'}

 Q: Is Pinto Colvig the name of the performer who plays Goofy?
 SPARQL: SELECT ?value WHERE { wd:Q111135 p:P175 ?s . ?s ps:P175 wd:Q945591 . ?s pq:P642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Goofy', 'p': 'performer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'performer', 'o': 'Pinto Colvig'}}}

 Q: Which is the introduced feature for air conditioning?
 SPARQL: select distinct ?answer where { ?answer wdt:P751 wd:Q173725}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'introduced feature', 'o': 'air conditioning'}

 Q: What is the {country} for {language used} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q5287 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'ja', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is the {federal state} for {language used} of {Hungarian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q9067 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Hungarian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What kind of instrument is a vibraphone?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1303 wd:Q206987 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'instrument', 'o': 'vibraphone'}

 Q: How much more fabrication methods are need to start cloning?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2079 wd:Q120877 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'fabrication method', 'o': 'cloning'}

 Q: What is <dialect of> of <Ancient Greek> ?
 SPARQL: select distinct ?answer where { wd:Q35497 wdt:P4913 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ancient Greek', 'p': 'dialect of', 'o': '?x0'}

 Q: What is the work of inventor Lucy?
 SPARQL: SELECT ?answer WHERE { wd:Q245388 wdt:P61 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lucy', 'p': 'inventor', 'o': '$y0'}}

 Q: Name this psychoactive drug made from Papaver somniferum that contains the word "opium " in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3706669 . ?sbj wdt:P1582 wd:Q131584 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'opium')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'psychoactive drug', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'made from', 'o': 'Papaver somniferum'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'opium'}}

 Q: What is the type of quantum particle with the highest gyromagnetic ratio whose instance of is isotope of neutronium ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22675015 . ?ent wdt:P2222 ?obj . ?ent wdt:P31 wd:Q12525553 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'gyromagnetic ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of neutronium'}}}

 Q: Which is the issue of tuberculosis?
 SPARQL: select distinct ?answer where { wd:Q12204 wdt:P433 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'tuberculosis', 'p': 'issue', 'o': '?x0'}

 Q: What sport does Bob Pettit play that has a runtime of 40?
 SPARQL: SELECT ?answer WHERE { wd:Q368561 wdt:P641 ?answer . ?answer wdt:P2047 ?x FILTER(contains(?x,'40'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bob Pettit', 'p': 'sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'runtime', 'o': '40'}}

 Q: What disease burden does Brian Wilson suffers from?
 SPARQL: SELECT ?answer WHERE { wd:Q313013 wdt:P1050 ?X . ?X wdt:P2854 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disease burden', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brian Wilson', 'p': 'disease', 'o': '$y0'}}

 Q: What is a computer model which uses the word zx81 in it's name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55990535 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zx81')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zx81'}}

 Q: Is the relative permeability of vacuum equal to 1?
 SPARQL: ASK WHERE { wd:Q11475 wdt:P5676 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'vacuum', 'p': 'relative permeability', 'o': '?x0', '?x0': '1'}

 Q: What is {predecessor} of {Cretaceous}, that has {closed} is {-145000000-0-0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44626 wdt:P155 ?answer . ?answer wdt:P582 ?x FILTER(contains(YEAR(?x),'0000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cretaceous', 'p': 'predecessor', 'o': '?x0', 't': '0000'}

 Q: What is the {sport in a geographic region} with the {MAX(number of players in region)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29791211 . ?ent wdt:P4909 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of players in region', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport in a geographic region'}}

 Q: What is {academic major} and {academic degree} of {{Rowan Atkinson} has {educated at} as {Newcastle University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 wd:Q837164 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Newcastle University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Newcastle University'}}}]

 Q: Which country has a disease burden from air pollution as 4.353e+06?
 SPARQL: SELECT ?value WHERE { wd:Q131123 p:P2854 ?s . ?s ps:P2854 ?x filter(contains(?x,'4.353e+06')) . ?s pq:P276 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'air pollution', 'p': 'disease burden', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'disease burden', 'o': '4.353e+06'}}}

 Q: What is the {annual event} for {based on} of {Eurovision Song Contest}
 SPARQL:  select distinct ?obj where { wd:Q276 wdt:P144 ?obj . ?obj wdt:P31 wd:Q18574946 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eurovision Song Contest', 'p': 'based on', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'annual event'}}

 Q: Who is elected in The Joong-ang Ilbo?
 SPARQL: select distinct ?answer where { ?answer wdt:P2715 wd:Q483903}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'elected in', 'o': 'The Joong-ang Ilbo'}

 Q: What is {height} and {location} of {{pole vault} has {record held} as {Steve Hooker}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q15573 . ?s pq:P2048 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Steve Hooker'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Steve Hooker'}}}]

 Q: What is {place of activity} of {Andrea Mantegna}, that has {twin cities} is {Handan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5681 wdt:P937 ?answer . ?answer wdt:P190 wd:Q58570}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrea Mantegna', 'p': 'place of activity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin cities', 'o': 'Handan'}}

 Q: What is {governing body} of {worked for} of {Charles McLean Andrews} ?
 SPARQL: SELECT ?answer WHERE { wd:Q472498 wdt:P108 ?X . ?X wdt:P797 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'governing body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles McLean Andrews', 'p': 'worked for', 'o': '$y0'}}

 Q: What is {inititated} of {board game publisher} of {The Eternal Champion} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7732542 wdt:P123 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inititated', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Eternal Champion', 'p': 'publisher', 'o': '$y0'}}

 Q: What is {qty fatalities} of {in action} of {Matt Busby} ?
 SPARQL: SELECT ?answer WHERE { wd:Q206237 wdt:P607 ?X . ?X wdt:P1120 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fatalities', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matt Busby', 'p': 'in action', 'o': '$y0'}}

 Q: Give me {state church} that {office held by head of the organisation} {Archbishop of Canterbury} and which contains the word {church} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2325038 . ?sbj wdt:P2388 wd:Q29282 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'church')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'office held by head of the organisation', 'o': 'Archbishop of Canterbury'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'church'}}

 Q: what is the {start time} for {William Howard Taft} has {position held} as {President of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q35648 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Howard Taft', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the US'}}}

 Q: Is the marriageable age of Ireland equal to18?
 SPARQL: ASK WHERE { wd:Q27 wdt:P3000 ?obj filter(?obj = 18) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ireland', 'p': 'marriageable age', 'o': '?x0', '?x0': '18'}

 Q: What is {tributary} of {next to lake} of {Cádiz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15682 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cadiz', 'p': 'next to lake', 'o': '$y0'}}

 Q: IS THE ELECTRICAL RESISTIVITY OF GRIVORY GM-G4 EQUIVALENT TO 10000000000000?
 SPARQL: ASK WHERE { wd:Q57051271 wdt:P5679 ?obj filter(?obj = 10000000000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Grivory GM-4H', 'p': 'electrical resistivity', 'o': '?x0', '?x0': '10000000000000'}

 Q: What is the {vocabulary} for {facet of} of {Hungarian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1269 wd:Q9067 . ?sbj wdt:P31 wd:Q6499736 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Hungarian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vocabulary'}}

 Q: What is propylene a polymer of?
 SPARQL: select distinct ?answer where { ?answer wdt:P4600 wd:Q151324}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'polymer of', 'o': 'propylene'}

 Q: What is in the basin area of the Lake Balkhash tributary?
 SPARQL: SELECT ?answer WHERE { wd:Q134485 wdt:P974 ?X . ?X wdt:P2053 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'basin area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lake Balkhash', 'p': 'tributary', 'o': '$y0'}}

 Q: What product, made from raspberry, has the common name Малина?
 SPARQL: SELECT ?answer WHERE { wd:Q13179 wdt:P1582 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Малина'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'raspberry', 'p': 'made from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'common name', 'o': 'малина'}}

 Q: Tell me religious denomination whose name has the word unitarianism in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13414953 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'unitarianism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious denomination'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'unitarianism'}}

 Q: Which  is contributor(s) to the creative work of Bulletin of the Atomic Scientists ?
 SPARQL: select distinct ?answer where { wd:Q1004412 wdt:P767 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bulletin of the Atomic Scientists', 'p': 'contributor', 'o': '?x0'}

 Q: What is the {art exhibition} for {exhibition history} of {Mona Lisa}
 SPARQL:  select distinct ?obj where { wd:Q12418 wdt:P608 ?obj . ?obj wdt:P31 wd:Q667276 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mona Lisa', 'p': 'exhibition history', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art exhibition'}}

 Q: What is {recognition title} of {Médecins Sans Frontières}, that has {1st place medalist} is {Richard von Weizsäcker} ?
 SPARQL: SELECT ?answer WHERE { wd:Q49330 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q2567}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Médecins Sans Frontières', 'p': 'recognition title', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': '1st place medalist', 'o': 'Richard von Weizsäcker'}}

 Q: What are theeconomic policy which start with the letter tripartism
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q582577 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tripartism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic policy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tripartism'}}

 Q: What is {work period (end)} and {work period (start)} of {{Nastia Liukin} has {sport} as {female artistic gymnastics}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q230164 p:P641 ?s . ?s ps:P641 wd:Q3122646 . ?s pq:P2032 ?value1 . ?s pq:P2031 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nastia Liukin', 'p': 'sport', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sport', 'o': 'female artistic gymnastics'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'work period (start)', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nastia Liukin', 'p': 'sport', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sport', 'o': 'female artistic gymnastics'}}}]

 Q: What is the {taxon} for {natural product of taxon} of {silk}
 SPARQL:  select distinct ?obj where { wd:Q37681 wdt:P1582 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'silk', 'p': 'natural product of taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What are the castle which start with the letter o
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23413 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ö')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'castle'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ö'}}

 Q: What is the {Roman amphitheatre} for {culture} of {ancient Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2596 wd:Q1747689 . ?sbj wdt:P31 wd:Q7362268 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'culture', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Roman amphitheatre'}}

 Q: What are the academic major which start with the letter T
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4671286 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic major'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is sexually homologous with for ovary ?
 SPARQL: select distinct ?answer where { wd:Q9631 wdt:P4545 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ovary', 'p': 'sexually homologous with', 'o': '?x0'}

 Q: How many {cause of death} are to/by {cricket ball} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P509 wd:Q1139973 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'cause of death', 'o': 'cricket ball'}

 Q: When did residence of Vladimir Putin and owned by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q7747 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P127 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owned by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'residence', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'residence', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'residence', 'o': '$y0'}}]

 Q: What spouse did Antonio Banderas take on starting on 1996-5-14?
 SPARQL: SELECT ?obj WHERE { wd:Q41548 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antonio Banderas', 'p': 'spouse', 'o': '?x0', 't': '1996'}

 Q: What is {nomination received} of {David Mitchell}, that has {1st place medalist} is {Kiran Desai} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40479 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q228589}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Mitchell', 'p': 'nomination received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': '1st place medalist', 'o': 'Kiran Desai'}}

 Q: What is {tributary} of {on harbour} of {Rarotonga} ?
 SPARQL: SELECT ?answer WHERE { wd:Q471793 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rarotonga', 'p': 'on harbour', 'o': '$y0'}}

 Q: Which is the mineral variety that starts with the letter z?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q429795 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral variety'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What literary genre is the prequel of Alien?
 SPARQL: SELECT ?answer WHERE { wd:Q103569 wdt:P156 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alien', 'p': 'prequel of', 'o': '$y0'}}

 Q: What is the {business} for {owned by} of {My Little Pony}
 SPARQL:  select distinct ?obj where { wd:Q1071312 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'My Little Pony', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is the {monoanion} for {conjugate acid} of {nitric acid}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q83320 . ?sbj wdt:P31 wd:Q55523986 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'nitric acid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monoanion'}}

 Q: What is {alma mater} of {John Sinclair}, that has {parent company of} is {University of Michigan School of Music, Theatre & Dance} ?
 SPARQL: SELECT ?answer WHERE { wd:Q706977 wdt:P69 ?answer . ?answer wdt:P355 wd:Q7895775}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Sinclair', 'p': 'alma mater', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent company of', 'o': 'University of Michigan School of Music, Theatre & Dance'}}

 Q: Which is the award received for constellation?
 SPARQL: select distinct ?answer where { ?answer wdt:P166 wd:Q8928}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'award received', 'o': 'constellation'}

 Q: What is the birthplace of Bradley Wiggins, and has the coat of arms of Ghent?
 SPARQL: SELECT ?answer WHERE { wd:Q193876 wdt:P19 ?answer . ?answer wdt:P237 wd:Q18286857}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bradley Wiggins', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'coat of arms of Ghent'}}

 Q: What is {authors} of {Suicide}, that has {alma mater} is {Leipzig University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q384404 wdt:P50 ?answer . ?answer wdt:P69 wd:Q154804}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Suicide', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alma mater', 'o': 'Leipzig University'}}

 Q: what is the {image} for {Earth} has {radius} as {6339.9} ?
 SPARQL: SELECT ?value WHERE { wd:Q2 p:P2120 ?s . ?s ps:P2120 ?x filter(contains(?x,'6339.9')) . ?s pq:P18 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'image', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Earth', 'p': 'radius', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'radius', 'o': '6339.9'}}}

 Q: What is {continues from} of {developed by} of {HP-UX} ?
 SPARQL: SELECT ?answer WHERE { wd:Q847593 wdt:P178 ?X . ?X wdt:P1365 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continues from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'HP-UX', 'p': 'developed by', 'o': '$y0'}}

 Q: What is famous works of  Louise Bourgeois that has the coordinates is -77.0233?
 SPARQL: SELECT ?answer WHERE { wd:Q159409 wdt:P800 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-77.0233'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louise Bourgeois', 'p': 'work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinates', 'o': '-77.0233'}}

 Q: Which is the IUCN protected areas category of the Great Smoky Mountains National Park?
 SPARQL: select distinct ?answer where { wd:Q464004 wdt:P814 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Great Smoky Mountains National Park', 'p': 'IUCN protected areas category', 'o': '?x0'}

 Q: what is the {start time} for {Tina Fey} has {spouse} as {Jeff Richmond} ?
 SPARQL: SELECT ?value WHERE { wd:Q14540 p:P26 ?s . ?s ps:P26 wd:Q641975 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tina Fey', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Jeff Richmond'}}}

 Q: Is it true that sexual intercourse has an effect on abortion?
 SPARQL: ASK WHERE { wd:Q5873 wdt:P1542 wd:Q8452 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'sexual intercourse', 'p': 'effect', 'o': '?x0', '?x0': 'abortion'}]

 Q: What topic of the history of Wales has cities like Caerphilly County Borough as central areas?
 SPARQL: SELECT ?answer WHERE { wd:Q1063608 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q748065}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Wales', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Caerphilly County Borough'}}

 Q: what is the {start time} for {Bolesław Bierut} has {position held} as {President of Poland} ?
 SPARQL: SELECT ?value WHERE { wd:Q55832 p:P39 ?s . ?s ps:P39 wd:Q1054799 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bolesław Bierut', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Poland'}}}

 Q: When was the part of series of Heroes of Might and Magic III: Armageddon's Blade published on?
 SPARQL: SELECT ?answer WHERE { wd:Q507074 wdt:P179 ?X . ?X wdt:P400 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'published on', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Heroes of Might and Magic III: Armageddon's Blade", 'p': 'part of series', 'o': '$y0'}}

 Q: What is the name of a television series that starts with the letter z.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5398426 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television series'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: How many language regulatory bodys are there for Portuguese?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q5146 wdt:P1018 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Portuguese', 'p': 'language regulatory body', 'o': '?x0'}

 Q: Give me {sausage sandwich} that {parent astronomical body} {Proxima Centauri} and which contains the word {dog} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7427595 . ?sbj wdt:P397 wd:Q14266 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dog')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sausage sandwich', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Proxima Centauri'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dog'}}

 Q: What is {first recorded in} of {location of work} of {Martin Bormann} ?
 SPARQL: SELECT ?answer WHERE { wd:Q76367 wdt:P937 ?X . ?X wdt:P1249 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first recorded in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Ludwig Bormann', 'p': 'location of work', 'o': '$y0'}}

 Q: What is the {family name} for {family} of {Genghis Khan}
 SPARQL:  select distinct ?obj where { wd:Q720 wdt:P53 ?obj . ?obj wdt:P31 wd:Q101352 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genghis Khan', 'p': 'family', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'family name'}}

 Q: Give me {metropolitan area} that {maintained by} {Metropolitan Manila Development Authority} and which contains the word {manila} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1907114 . ?sbj wdt:P126 wd:Q259278 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manila')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolitan area', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'maintained by', 'o': 'Metropolitan Manila Development Authority'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'manila'}}

 Q: What is {papers at} of {music by} of {String Quartet No. 14 (Beethoven)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q188081 wdt:P86 ?X . ?X wdt:P485 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'papers at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'String Quartet No. 14 (Beethoven)', 'p': 'music by', 'o': '$y0'}}

 Q: What is the {conflation} for {product or material produced} of {human}
 SPARQL:  select distinct ?obj where { wd:Q5 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q14946528 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'human', 'p': 'product or material produced', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conflation'}}

 Q: What is {member of sports team} of {Franz Beckenbauer} that is {number of matches played} is {103.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q4457 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'103.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '103.0'}}}

 Q: Which is {sculptor} of {series} {First Responders} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18392016 wdt:P179 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sculptor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'First Responders', 'p': 'series', 'o': '$y0'}}

 Q: What is {child} of {Frederick William I of Prussia} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q105013 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frederick William I of Prussia', 'p': 'child', 'o': '$y0'}}]

 Q: What is {in conflict} of {between} of {Battle of Ayta ash-Shab} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2888072 wdt:P710 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle of Ayta ash-Shab', 'p': 'between', 'o': '$y0'}}

 Q: What is the maximum vibration of drill model?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q23811262 . ?ent wdt:P2806 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'vibration', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'drill model'}}

 Q: Princeton University has how many parent organization?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P749 wd:Q21578 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Princeton University'}

 Q: What is {nominated for} of {Easy Rider} that is {nominee} is {Terry Southern} ?
 SPARQL: SELECT ?obj WHERE { wd:Q503638 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q591270 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Easy Rider', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Terry Southern'}}}

 Q: What is the natural script for written Ancient Greek?
 SPARQL:  select distinct ?obj where { wd:Q35497 wdt:P282 ?obj . ?obj wdt:P31 wd:Q29517555 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ancient Greek', 'p': 'script', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural script'}}

 Q: What is the signed language of Nicole Oresme that started in 1350?
 SPARQL: SELECT ?answer WHERE { wd:Q310777 wdt:P1412 ?answer . ?answer wdt:P580 ?x FILTER(contains(YEAR(?x),'1350'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nicole Oresme', 'p': 'language', 'o': '?x0', 't': '1350'}

 Q: What was the parent organization of Bayer AG starting in 1925?
 SPARQL: SELECT ?obj WHERE { wd:Q152051 p:P749 ?s . ?s ps:P749 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1925')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bayer', 'p': 'parent organization', 'o': '?x0', 't': '1925'}

 Q: What is the time zone of Hebei, which is the equivalent of China Standard Time?
 SPARQL: SELECT ?answer WHERE { wd:Q21208 wdt:P421 ?answer . ?answer wdt:P460 wd:Q1143153}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hebei', 'p': 'time zone', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'equivalent of', 'o': 'China Standard Time'}}

 Q: When did Honduras have an unemployment rate of 4.0?
 SPARQL: SELECT ?value WHERE { wd:Q783 p:P1198 ?s . ?s ps:P1198 ?x filter(contains(?x,'4.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Honduras', 'p': 'unemployment rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'unemployment rate', 'o': '4.0'}, 't': '?x0'}

 Q: What is {setting location} of {King Kong}, that has {border} is {Westchester County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q309048 wdt:P840 ?answer . ?answer wdt:P47 wd:Q54066}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'King Kong', 'p': 'setting location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Westchester County'}}

 Q: Which is {used for treatment} of {capable of inhibiting or preventing pathological process} of {methenamine hippurate} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27283414 wdt:P2175 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used for treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'methenamine hippurate', 'p': 'capable of inhibiting or preventing pathological process', 'o': '$y0'}}

 Q: Who is the creator of Bart Simpson?
 SPARQL: select distinct ?answer where { wd:Q5480 wdt:P170 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bart Simpson', 'p': 'creator', 'o': '?x0'}

 Q: Give me {land-grant university} that {affiliation} {Purdue University system} and which contains the word {purdue} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q615150 . ?sbj wdt:P1416 wd:Q929715 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'purdue')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'land-grant university', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'Purdue University system'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'purdue'}}

 Q: What is {has mother} of {role model} of {Diana Gabaldon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q272492 wdt:P737 ?X . ?X wdt:P25 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diana Gabaldon', 'p': 'role model', 'o': '$y0'}}

 Q: What is {doctoral supervisor} of {academic supervisor} of {Émile Durkheim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15948 wdt:P1066 ?X . ?X wdt:P184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral supervisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Émile Durkheim', 'p': 'supervisor', 'o': '$y0'}}

 Q: What is the distance of Paris-Charles de Gaulle Airport with runway as 09L/27R?
 SPARQL: SELECT ?value WHERE { wd:Q46280 p:P529 ?s . ?s ps:P529 ?x filter(contains(?x,'09L/27R')) . ?s pq:P2043 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'distance', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paris-Charles de Gaulle Airport', 'p': 'runway', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'runway', 'o': '09l/27r'}}}

 Q: In 2014, what was the population of New Haven?
 SPARQL: SELECT ?obj WHERE { wd:Q49145 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New Haven', 'p': 'population', 'o': '?x0', 't': '2014'}

 Q: Did {Bali} {located in or next to body of water} {Indian Ocean} and {Gulf of Thailand} ?
 SPARQL: ASK WHERE { wd:Q4648 wdt:P206 wd:Q1239 . wd:Q4648 wdt:P206 wd:Q131217 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bali', 'p': 'located in or next to body of water', 'o': '?x0', '?x0': 'Indian Ocean'}, {'h': 'IS', 'v': '?x1', 's': 'Bali', 'p': 'located in or next to body of water', 'o': '?x1', '?x1': 'Gulf of Thailand'}]

 Q: tell me animated character that starts name with w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15711870 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated character'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Give me {newspaper} that {newspaper format} {broadsheet} and which that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11032 . ?sbj wdt:P3912 wd:Q665319 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newspaper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'newspaper format', 'o': 'broadsheet'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: "What is the {personal name} of {Jan Swammerdam}, whose {audio language} is {Swedish} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q336794 wdt:P735 ?answer . ?answer wdt:P407 wd:Q9027}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jan Swammerdam', 'p': 'personal name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'audio language', 'o': 'Swedish'}}

 Q: What is {middle name} of {Lisa del Giocondo}, that has {said to be different from} is {Liesel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q153032 wdt:P735 ?answer . ?answer wdt:P460 wd:Q19689474}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lisa del Giocondo', 'p': 'middle name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be different from', 'o': 'Liesel'}}

 Q: what is the {statement is subject of} for {Paraguay} that has {diplomatic relation} as {Peru} ?
 SPARQL: SELECT ?value WHERE { wd:Q733 p:P530 ?s . ?s ps:P530 wd:Q419 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paraguay', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'diplomatic relation', 'o': 'Peru'}}}

 Q: what is the {start time} for {Cape Town} has {head of government} as {Dan Plato} ?
 SPARQL: SELECT ?value WHERE { wd:Q5465 p:P6 ?s . ?s ps:P6 wd:Q379122 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cape Town', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Dan Plato'}}}

 Q: Give me {nonmetal} that {location of discovery} {England} and which contains the word {oxygen} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19600 . ?sbj wdt:P189 wd:Q21 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'oxygen')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonmetal', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of discovery', 'o': 'England'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'oxygen'}}

 Q: What is the {film} for {takes place in fictional universe} of {Marvel Cinematic Universe}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1434 wd:Q642878 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'takes place in fictional universe', 'o': 'Marvel Cinematic Universe', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the magazine with the highest readership whose publisher is National Parks Conservation Association?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q41298 . ?ent wdt:P4295 ?obj . ?ent wdt:P123 wd:Q6974765 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'readership', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'publisher', 'o': 'National Parks Conservation Association'}}}

 Q: Is it true that the Gini coefficient of France is greater than 40.02?
 SPARQL: ASK WHERE { wd:Q142 wdt:P1125 ?obj filter(?obj > 40.02) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'France', 'p': 'Gini coefficient', 'o': '?x0', '?x0': '40.02'}

 Q: What award did Maria Rojo receive in 1978?
 SPARQL: SELECT ?obj WHERE { wd:Q290301 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1978')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maria Rojo', 'p': 'award', 'o': '?x0', 't': '1978'}

 Q: What is {language} of {Paul von Hindenburg}, that has {has case} is {dative case} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2667 wdt:P1412 ?answer . ?answer wdt:P2989 wd:Q145599}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paul von Hindenburg', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has case', 'o': 'dative case'}}

 Q: How many continents are in the Portuguese Empire?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q200464 wdt:P30 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Portuguese Empire', 'p': 'continent', 'o': '?x0'}

 Q: What is {toponym} of {St. Elmo's fire}, that has {historical era} is {Roman Empire}?
 SPARQL: SELECT ?answer WHERE { wd:Q120688 wdt:P138 ?answer . ?answer wdt:P2348 wd:Q2277}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "St. Elmo's fire", 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'era', 'o': 'Roman Empire'}}

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the original language of work for The Muppet Show?
 SPARQL: select distinct ?answer where { wd:Q2120540 wdt:P364 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Muppet Show', 'p': 'original language', 'o': '?x0'}

 Q: What is the {biological process} for {contributing factor of} of {necrosis}
 SPARQL:  select distinct ?obj where { wd:Q178069 wdt:P1537 ?obj . ?obj wdt:P31 wd:Q2996394 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'necrosis', 'p': 'contributing factor of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biological process'}}

 Q: What is place served by transport hub for Fairbanks ?
 SPARQL: select distinct ?answer where { ?answer wdt:P931 wd:Q79638}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place served by transport hub', 'o': 'Fairbanks'}

 Q: Who is the graduate of the sculptor of Red & Black?
 SPARQL: SELECT ?answer WHERE { wd:Q27894648 wdt:P170 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'graduate of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Red & Black', 'p': 'sculptor', 'o': '$y0'}}

 Q: What is the {film} with the {MAX(box office)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11424 . ?ent wdt:P2142 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'box office', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: what is the {start time} for {Charlie Chaplin} has {spouse} as {Oona O'Neill} ?
 SPARQL: SELECT ?value WHERE { wd:Q882 p:P26 ?s . ?s ps:P26 wd:Q137808 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlie Chaplin', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': "Oona O'Neill"}}}

 Q: What editions, developed by, Cascading Style Sheets, is in the World Wide Web Consortium?
 SPARQL: SELECT ?answer WHERE { wd:Q46441 wdt:P747 ?answer . ?answer wdt:P178 wd:Q37033}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cascading Style Sheets', 'p': 'editions', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'developed by', 'o': 'World Wide Web Consortium'}}

 Q: Which is the main regulatory text for Antarctic?
 SPARQL: select distinct ?answer where { wd:Q1555938 wdt:P92 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antarctic', 'p': 'main regulatory text', 'o': '?x0'}

 Q: Is the lower flammable limit of methanol equal to 0?
 SPARQL: ASK WHERE { wd:Q14982 wdt:P2202 ?obj filter(?obj = 6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'methanol', 'p': 'lower flammable limit', 'o': '?x0', '?x0': '6'}

 Q: What is the {sovereign state} for {applies to jurisdiction} of {pope}
 SPARQL:  select distinct ?obj where { wd:Q19546 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pope', 'p': 'applies to jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what is the {valid in period} for {Zhytomyr Oblast} has {located in time zone} as {UTC+03:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q40637 p:P421 ?s . ?s ps:P421 wd:Q6760 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zhytomyr Oblast', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+3'}}}

 Q: Who was Doris Day's husband in the year 1946?
 SPARQL: SELECT ?obj WHERE { wd:Q104372 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Doris Day', 'p': 'husband', 'o': '?x0', 't': '1946'}

 Q: Which camera is different from a still camera to catch taxon parent of eukaryote?
 SPARQL: SELECT ?answer WHERE { wd:Q15328 wdt:P1889 ?answer . ?answer wdt:P171 wd:Q19088}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'camera', 'p': 'different from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'taxon parent', 'o': 'eukaryote'}}

 Q: What is the ZVG number of  hafnium?
 SPARQL: select distinct ?answer where { wd:Q1119 wdt:P679 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hafnium', 'p': 'ZVG number', 'o': '?x0'}

 Q: What is {parent company of} of {superior formation} of {Academy for Spatial Research and Planning} ?
 SPARQL: SELECT ?answer WHERE { wd:Q414327 wdt:P749 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parent company of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Academy for Spatial Research and Planning', 'p': 'superior formation', 'o': '$y0'}}

 Q: When was Ronald Fisher nominated for the Nobel Prize in Physiology or Medicine?
 SPARQL: SELECT ?value WHERE { wd:Q216723 p:P1411 ?s . ?s ps:P1411 wd:Q80061 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ronald Fisher', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physiology or Medicine'}, 't': '?x0'}

 Q: What is the {provisional government} for {head of government} of {Josip Broz Tito}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q9161 . ?sbj wdt:P31 wd:Q59281 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Josip Broz Tito', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'provisional government'}}

 Q: How many {instrumentation} are for {The Carnival of the Animals} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q941724 wdt:P870 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Carnival of the Animals', 'p': 'instrumentation', 'o': '?x0'}

 Q: Which is the parent body of Enceladus, that have child body as Hyrrokkin?
 SPARQL: SELECT ?answer WHERE { wd:Q3303 wdt:P397 ?answer . ?answer wdt:P398 wd:Q18032}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Enceladus', 'p': 'parent body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child body', 'o': 'Hyrrokkin'}}

 Q: Who is the  {operationalization} for {manifestation of} of {inertia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q122508 . ?sbj wdt:P31 wd:Q286017 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'inertia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operationalization'}}

 Q: What is {academic area} of {PhD advisor} of {Vladimir Berkovich} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7938273 wdt:P184 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Berkovich', 'p': 'advisor', 'o': '$y0'}}

 Q: What is {date of death} and {mother} of {{Joseph Stalin} has {child} as {Vasily Dzhugashvili}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q459216 . ?s pq:P570 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Vasily Dzhugashvili'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'mother', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Vasily Dzhugashvili'}}}]

 Q: What is {position held} of {Douglas Nicholls} that is {replaces} is {Mark Oliphant} ?
 SPARQL: SELECT ?obj WHERE { wd:Q447675 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q727443 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Douglas Nicholls', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Mark Oliphant'}}}

 Q: Give me {province of Pakistan} that contains the word {sindh} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15058985 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sindh')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'province of Pakistan'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'sindh'}}

 Q: Which is the INSPIRE-HEP author ID for Niels Bohr?
 SPARQL: select distinct ?answer where { wd:Q7085 wdt:P2930 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Niels Bohr', 'p': 'INSPIRE-HEP author ID', 'o': '?x0'}

 Q: What is the event location of the took part in of Florin Prunea ?
 SPARQL: SELECT ?answer WHERE { wd:Q1333942 wdt:P1344 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Florin Prunea', 'p': 'took part', 'o': '$y0'}}

 Q: what is the {start time} for {Arthur Wellesley, 1st Duke of Wellington} has {position held} as {Prime Minister of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q131691 p:P39 ?s . ?s ps:P39 wd:Q14211 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Wellesley, 1st Duke of Wellington', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of the United Kingdom'}}}

 Q: In 1944 who was the spouse of Simone Signoret?
 SPARQL: SELECT ?obj WHERE { wd:Q106126 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1944')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Simone Signoret', 'p': 'spouse', 'o': '?x0', 't': '1944'}

 Q: Who is the superpartner of Higgs boson?
 SPARQL: select distinct ?answer where { ?answer wdt:P2376 wd:Q402}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'superpartner of', 'o': 'Higgs boson'}

 Q: How many carries are by Canal du Midi?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2505 wd:Q202494 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'carries', 'o': 'Canal du Midi'}

 Q: What is the PDB structure ID for rhenium?
 SPARQL: select distinct ?answer where { wd:Q737 wdt:P638 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'rhenium', 'p': 'PDB structure ID', 'o': '?x0'}

 Q: Name a member of Christopher Hill, whose Institution template is Hungarian Academy of Sciences, Budapest?
 SPARQL: SELECT ?answer WHERE { wd:Q719787 wdt:P463 ?answer . ?answer wdt:P1612 ?x FILTER(contains(?x,'Hungarian Academy of Sciences, Budapest'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Christopher Hill', 'p': 'member of', 'o': '?x0'}

 Q: What is the {earthquake} with the {MAX(aftershocks)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2320 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'aftershocks', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'earthquake'}}

 Q: What is {partner} of {Demi Lovato} that is {end time} is {2016-6-3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41173 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Demi Lovato', 'p': 'partner', 'o': '?x0', 't': '2016'}

 Q: Tell me the social networking service which starts with the letter y?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3220391 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social networking service'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is {symbol} of {measures} of {ruler} ?
 SPARQL: SELECT ?answer WHERE { wd:Q104555 wdt:P2575 ?X . ?X wdt:P416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ruler', 'p': 'measures', 'o': '$y0'}}

 Q: What is the {human} for {stepparent} of {Barack Obama}
 SPARQL:  select distinct ?obj where { wd:Q76 wdt:P3448 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Barack Obama', 'p': 'stepparent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {Class IB flammable liquid} with the {MAX(surface tension)} whose {instance of} is {chemical compound}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P3013 ?obj . ?ent wdt:P31 wd:Q11173 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'surface tension', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}}

 Q: what is the {for work} for {Paul Newman} has {nominated for} as {Academy Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q41871 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Newman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}}}

 Q: Name the feminine name behind the language work of Russian
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q7737 . ?sbj wdt:P31 wd:Q11879590 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'feminine name'}}

 Q: What is Harold Wilson's middle name?  Is it the same as Andrin's?
 SPARQL: SELECT ?answer WHERE { wd:Q128956 wdt:P735 ?answer . ?answer wdt:P460 wd:Q511611}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Harold Wilson', 'p': 'middle name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Andrin'}}

 Q: what is the {valid in period} for {Molise} has {located in time zone} as {UTC+02:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q1443 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Molise', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+02:00'}}}

 Q: What are the mass media which start with the letter youtube
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11033 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'youtube')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mass media'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'youtube'}}

 Q: What is the EPHE ID of Marcel Mauss?
 SPARQL: select distinct ?answer where { wd:Q295393 wdt:P4890 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Marcel Mauss', 'p': 'EPHE ID', 'o': '?x0'}

 Q: what is the {number of points/goals/set scored} for {Bobby Charlton} has {member of sports team} as {Manchester United F.C.} ?
 SPARQL: SELECT ?value WHERE { wd:Q171583 p:P54 ?s . ?s ps:P54 wd:Q18656 . ?s pq:P1351 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bobby Charlton', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Manchester United F.C.'}}}

 Q: Which is different to liquorice , that played by Bride?
 SPARQL: SELECT ?answer WHERE { wd:Q138811 wdt:P1889 ?answer . ?answer wdt:P175 wd:Q913552}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'liquorice', 'p': 'different to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'played by', 'o': 'Bride'}}

 Q: What cast member joined Sesame Street in 1972?
 SPARQL: SELECT ?obj WHERE { wd:Q155629 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1972')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sesame Street', 'p': 'cast member', 'o': '?x0', 't': '1972'}

 Q: What is the {historical country} for {territory claimed by} of {German Democratic Republic}
 SPARQL:  select distinct ?obj where { wd:Q16957 wdt:P1336 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'German Democratic Republic', 'p': 'claimed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: How many noble titles owned by {emir} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P97 wd:Q166382 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'noble title', 'o': 'emir'}

 Q: Tell me the time which starts with the letter p!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11471 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'time'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: what is the {start time} for {Ilse Koch} has {member of political party} as {NSDAP} ?
 SPARQL: SELECT ?value WHERE { wd:Q58036 p:P102 ?s . ?s ps:P102 wd:Q7320 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ilse Koch', 'p': 'party', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'party', 'o': 'NSDAP'}}}

 Q: What is the {megacity} for {work location} of {Vladimir Lenin}
 SPARQL:  select distinct ?obj where { wd:Q1394 wdt:P937 ?obj . ?obj wdt:P31 wd:Q174844 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Lenin', 'p': 'work location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'megacity'}}

 Q: What is {location of burial} of {Gioseffo Zarlino}, that has {WHS criteria} is {(iii)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q365805 wdt:P119 ?answer . ?answer wdt:P2614 wd:Q23038977}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gioseffo Zarlino', 'p': 'location of burial', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'WHS criteria', 'o': '(iii)'}}

 Q: Which annual event was inspired by the Eurovision Song Contest?
 SPARQL:  select distinct ?obj where { wd:Q276 wdt:P941 ?obj . ?obj wdt:P31 wd:Q18574946 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eurovision Song Contest', 'p': 'inspired by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'annual event'}}

 Q: Where is the administrative territorial entity of Lancashire that ended in April of 1994?
 SPARQL: SELECT ?obj WHERE { wd:Q23077 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lancashire', 'p': 'in', 'o': '?x0', 't': '1994'}

 Q: What features are associated with playing on a skateboard?
 SPARQL: SELECT ?answer WHERE { wd:Q15783 wdt:P641 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'associated with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'skateboard', 'p': 'play', 'o': '$y0'}}

 Q: What is the {material used} and the {indigenous to} of {Tequila} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q122195 wdt:P186 ?ans_1 . wd:Q122195 wdt:P2341 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'tequila', 'p': 'material used', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'tequila', 'p': 'indigenous to', 'o': '?x1'}]

 Q: What is {place of death} of {Emmy Noether} that is {located in the administrative territorial entity} is {Pennsylvania} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7099 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q1400 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emmy Noether', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Pennsylvania'}}}

 Q: What is {feedstock} of {chair}, that has {mass} is {55.935} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15026 wdt:P186 ?answer . ?answer wdt:P2067 ?x FILTER(contains(?x,'55.935'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'chair', 'p': 'feedstock', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mass', 'o': '55.935'}}

 Q: What is {relative} of {Augustus} that is {type of kinship} is {adoptive parent} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1405 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1039 wd:Q20746742 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'relative', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Augustus', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'adoptive parent'}}}

 Q: what is the {determination method} for {multiple sclerosis} has {genetic association} as {VAV2} ?
 SPARQL: SELECT ?value WHERE { wd:Q8277 p:P2293 ?s . ?s ps:P2293 wd:Q18032316 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'multiple sclerosis', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'VAV2'}}}

 Q: What is {spouse} of {Anna Karina} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q232113 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Karina', 'p': 'married', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'married', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Karina', 'p': 'married', 'o': '$y0'}}]

 Q: What is {creates} of {has designer} of {Thunderbolt} ?
 SPARQL: SELECT ?answer WHERE { wd:Q329003 wdt:P287 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'creates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thunderbolt', 'p': 'has designer', 'o': '$y0'}}

 Q: Which is the URL for Civil Disobedience?
 SPARQL: select distinct ?answer where { wd:Q331092 wdt:P2699 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Civil Disobedience', 'p': 'URL', 'o': '?x0'}

 Q: What is {son-in-law} of {co-founded by} of {Catholic Church} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9592 wdt:P112 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son-in-law', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Catholic Church', 'p': 'co-founder', 'o': '$y0'}}

 Q: How many {instance of} are to/by {instruction set architecture} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P31 wd:Q272683 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'instruction set architecture'}

 Q: What what is Fibonacci number edition or translation of by Lexicon Forestale and also which starts with letter 1
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47577 . ?sbj wdt:P629 wd:Q62469935 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), '1')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Fibonacci number', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'edition or translation of', 'o': 'Lexicon Forestale'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': '1'}}

 Q: Which songwriter of Suite bergamasque died in Paris?
 SPARQL: SELECT ?answer WHERE { wd:Q1367599 wdt:P86 ?answer . ?answer wdt:P20 wd:Q90}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Suite bergamasque', 'p': 'songwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Paris'}}

 Q: How many {open days} are to/by {Sunday} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3025 wd:Q132 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'open days', 'o': 'Sunday'}

 Q: What is the aspect ratio of Law & Order that ended in May 5, 1994?
 SPARQL: SELECT ?obj WHERE { wd:Q321423 p:P2061 ?s . ?s ps:P2061 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1994')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Law & Order', 'p': 'aspect ratio', 'o': '?x0', 't': '1994'}

 Q: What is {position held} of {Halford Mackinder} that is {electoral district} is {Glasgow Camlachie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q299938 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 wd:Q5566762 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Halford Mackinder', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'electoral district', 'o': 'Glasgow Camlachie'}}}

 Q: what is the {point in time} for {André Previn} has {award received} as {Grammy Lifetime Achievement Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q155712 p:P166 ?s . ?s ps:P166 wd:Q935843 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'André Previn', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Lifetime Achievement Award'}, 't': '?x0'}

 Q: What is {position held} of {Henry Campbell-Bannerman} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q106618 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Campbell-Bannerman', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Campbell-Bannerman', 'p': 'position held', 'o': '$y0'}}]

 Q: Is the electric charge of a proton greater than 1.92261194496e-19?
 SPARQL: ASK WHERE { wd:Q2294 wdt:P2200 ?obj filter(?obj > 1.92261194496e-19) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'proton', 'p': 'electric charge', 'o': '?x0', '?x0': '1.92261194496e-19'}

 Q: Name the capital city of the Empire of Japan.
 SPARQL:  select distinct ?obj where { wd:Q188712 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire of Japan', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is {followed by} and {follows} of {{Louis the Pious} has {noble title} as {emperor of Occident}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q43974 p:P97 ?s . ?s ps:P97 wd:Q23906200 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'emperor of Occident'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis the Pious', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'emperor of Occident'}}}]

 Q: Who is the spouse of Arnold Schwarzenegger who got married with him in 1984 on April 26th?
 SPARQL: SELECT ?obj WHERE { wd:Q2685 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1986')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arnold Schwarzenegger', 'p': 'spouse', 'o': '?x0', 't': '1986'}

 Q: What software version of Perl was published on October 1st, 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q42478 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Perl', 'p': 'version', 'o': '?x0', 't': '2014'}

 Q: What is {is owned by} of {owns} of {Dalian Hexing} ?
 SPARQL: SELECT ?answer WHERE { wd:Q36340882 wdt:P1830 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'owned by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dalian Hexing', 'p': 'owns', 'o': '$y0'}}

 Q: What are sculptors of quantum mechanics that have worked at Humboldt University of Berlin?
 SPARQL: SELECT ?answer WHERE { wd:Q944 wdt:P170 ?answer . ?answer wdt:P108 wd:Q152087}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'quantum mechanics', 'p': 'sculptor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'worked at', 'o': 'Humboldt University of Berlin'}}

 Q: Which asteroid with the shortest orbital period was discovered at the Nice Observatory?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3863 . ?ent wdt:P2146 ?obj . ?ent wdt:P65 wd:Q508362} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'orbital period', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'site of astronomical discovery', 'o': 'Nice Observatory'}}}

 Q: What are the kingdom which start with the letter zakhara
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q417175 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zakhara')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kingdom'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zakhara'}}

 Q: What is {sibling} of {Mary Shelley} that is {type of kinship} is {maternal half-sister} ?
 SPARQL: SELECT ?obj WHERE { wd:Q47152 p:P3373 ?s . ?s ps:P3373 ?obj . ?s pq:P1039 wd:Q19595229 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mary Shelley', 'p': 'sister', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'maternal half-sister'}}}

 Q: In how many fields did Simone de Beauvoir work?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q7197 wdt:P101 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Simone de Beauvoir', 'p': 'fields', 'o': '?x0'}

 Q: What region is adjacent to the Battle of Fontenoy?
 SPARQL: SELECT ?answer WHERE { wd:Q569953 wdt:P276 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'adjacent to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Battle of Fontenoy', 'p': 'location', 'o': '$y0'}}

 Q: How many {film crew member} are for {Snow White and the Seven Dwarfs} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q134430 wdt:P3092 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Snow White and the Seven Dwarfs', 'p': 'film crew member', 'o': '?x0'}

 Q: What is the consumer price index inflation rate for the state of Jambi Province?
 SPARQL: SELECT ?answer WHERE { wd:Q2051 wdt:P17 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jambi', 'p': 'state', 'o': '$y0'}}

 Q: What is <activity policy in this place> of <Museum of Fine Arts, Boston> ?
 SPARQL: select distinct ?answer where { wd:Q49133 wdt:P5023 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Museum of Fine Arts', 'p': 'activity policy in this place', 'o': '?x0'}

 Q: Who did C.S. Lewis marry  on 1-1-1956?
 SPARQL: SELECT ?obj WHERE { wd:Q9204 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1956')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'C.S. Lewis', 'p': 'marry', 'o': '?x0', 't': '1956'}

 Q: Give the mortality rate which has the strongest incidence in Finland.
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q58702 . ?ent wdt:P2844 ?obj . ?ent wdt:P276 wd:Q33 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'incidence', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mortality rate', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Finland'}}}

 Q: Which chemical compound has the most explosive speed?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2231 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'explosive velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What are the mineral acid that starts with the letter a
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408683 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mineral acid'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is {etymology} of {Poisson distribution}, that has {famous books} is {Poisson's equation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q205692 wdt:P138 ?answer . ?answer wdt:P800 wd:Q827688}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Poisson distribution', 'p': 'etymology', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'famous books', 'o': "Poisson's equation"}}

 Q: Give me {military order} that {allegiance} {Holy Roman Emperor} and which contains the word {knights} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q474717 . ?sbj wdt:P945 wd:Q181765 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'knights')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military order', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'allegiance', 'o': 'Holy Roman Emperor'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'knights'}}

 Q: Give me {sport} that {sports discipline competed in} {beach handball} and which contains the word {handball} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q349 . ?sbj wdt:P2416 wd:Q535116 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'handball')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sports discipline competed in', 'o': 'beach handball'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'handball'}}

 Q: Which is Soccerdonna player ID for Ellyse Perry?
 SPARQL: select distinct ?answer where { wd:Q600090 wdt:P4381 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ellyse Perry', 'p': 'Soccerdonna player ID', 'o': '?x0'}

 Q: Is the number of seats of the Senate of Palau greater than 10.8?
 SPARQL: ASK WHERE { wd:Q969494 wdt:P1342 ?obj filter(?obj > 10.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Senate of Palau', 'p': 'number of seats', 'o': '?x0', '?x0': '10.8'}

 Q: What is the {Tour de France} for {participant of} of {Lance Armstrong}
 SPARQL:  select distinct ?obj where { wd:Q2172 wdt:P1344 ?obj . ?obj wdt:P31 wd:Q33881 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lance Armstrong', 'p': 'participant of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Tour de France'}}

 Q: What is the aircraft family with the highest maximum glide ratio whose manufacturer is Grob Aircraft ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056993 . ?ent wdt:P1470 ?obj . ?ent wdt:P176 wd:Q561036 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum glide ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Grob Aircraft'}}}

 Q: What is the lagoon with the lowest residence time of water whose country is Chile?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q187223 . ?ent wdt:P3020 ?obj . ?ent wdt:P17 wd:Q298} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'residence time of water', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lagoon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Chile'}}}

 Q: What is <topic's main Wikimedia portal> of <Judaism> ?
 SPARQL: select distinct ?answer where { wd:Q9268 wdt:P1151 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Judaism', 'p': "topic's main Wikimedia portal", 'o': '?x0'}

 Q: which process starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3249551 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'process'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which is the temporal range end for Quaternary?
 SPARQL: select distinct ?answer where { ?answer wdt:P524 wd:Q26185}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'temporal range end', 'o': 'Quaternary'}

 Q: Did {Larry_Bird} {award received} {NBA Rookie of the Year Award} and {National Basketball Association} ?
 SPARQL: ASK WHERE { wd:Q190152 wdt:P166 wd:Q644357 . wd:Q190152 wdt:P166 wd:Q155223 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Larry Bird', 'p': 'award received', 'o': '?x0', '?x0': 'NBA Rookie of the Year Award'}, {'h': 'IS', 'v': '?x1', 's': 'Larry Bird', 'p': 'award received', 'o': '?x1', '?x1': 'National Basketball Association'}]

 Q: What is {pronunciation audio} of {Triticum aestivum} that is {language of work or name} is {Swedish} ?
 SPARQL: SELECT ?obj WHERE { wd:Q161098 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q9027 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Triticum aestivum', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'Swedish'}}}

 Q: Which is the chemical substance which starts with the letter z?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q79529 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical substance'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Is the vapor pressure of ethylene glycol monoethyl ether 4?
 SPARQL: ASK WHERE { wd:Q209381 wdt:P2119 ?obj filter(?obj = 4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'ethylene glycol monoethyl ether', 'p': 'vapor pressure', 'o': '?x0', '?x0': '4'}

 Q: Do the matches/games drawn/tied of the 2005 British and Irish Lions tour to New Zealand equal 0?
 SPARQL: ASK WHERE { wd:Q3535483 wdt:P1357 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2005 British and Irish Lions tour to New Zealand', 'p': 'D', 'o': '?x0', '?x0': '0'}

 Q: What is the {human} for {professional or sports partner} of {Matt Stone}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1327 wd:Q44410 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports partner', 'o': 'Matt Stone', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {logographic writing system} for {writing system} of {Chinese}
 SPARQL:  select distinct ?obj where { wd:Q7850 wdt:P282 ?obj . ?obj wdt:P31 wd:Q3953107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chinese', 'p': 'writing system', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'logographic system'}}

 Q: what is the {for work} for {Henry Louis Gates} has {award received} as {American Book Awards} ?
 SPARQL: SELECT ?value WHERE { wd:Q561458 p:P166 ?s . ?s ps:P166 wd:Q463606 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Louis Gates', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'American Book Awards'}}}

 Q: Where is the birth place of Andrew W. Mellon located at 40.44062 -79.99589?
 SPARQL: SELECT ?answer WHERE { wd:Q446858 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'40.44062 -79.99589'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrew W. Mellon', 'p': 'birth place', 'o': '?x0'}

 Q: Give me {film production company} that contains the word {tellfilm} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1762059 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tellfilm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film production company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tellfilm'}}

 Q: What is {given name} of {Wojciech Jaruzelski} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q55834 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wojciech Jaruzelski', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: What is {educated at} of {Hans Christian Andersen} that is {start time} is {1822-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5673 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1822')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hans Christian Andersen', 'p': 'educated at', 'o': '?x0', 't': '1822'}

 Q: Is Paul the Apostle most significant event conversion of Paul the Apostle and Dumb Ways to Die?
 SPARQL: ASK WHERE { wd:Q9200 wdt:P793 wd:Q901397 . wd:Q9200 wdt:P793 wd:Q58120 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Paul', 'p': 'significant event', 'o': '?x0', '?x0': 'conversion of Paul the Apostle'}, {'h': 'IS', 'v': '?x1', 's': 'Paul', 'p': 'significant event', 'o': '?x1', '?x1': 'Dumb Ways to Die'}]

 Q: When was Yukio Mishima nominated for a Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q134456 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Yukio Mishima', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: what is the {for work} for {David Mitchell} has {nominated for} as {Guardian First Book Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q40479 p:P1411 ?s . ?s ps:P1411 wd:Q153296 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Mitchell', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Guardian First Book Award'}}}

 Q: Name a road in Karachi.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q8660 . ?sbj wdt:P31 wd:Q34442 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Karachi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road'}}

 Q: IS THE MAXIMUM CAPACITY OF THE SZD 50 PUCHARCZ EQUALS 1.6
 SPARQL: ASK WHERE { wd:Q9375 wdt:P1083 ?obj filter(?obj = 1.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'SZD-50 Puchacz', 'p': 'maximum capacity', 'o': '?x0', '?x0': '1.6'}

 Q: What is the botanist author abbreviation of Robert Brown?
 SPARQL: select distinct ?answer where { wd:Q155764 wdt:P428 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Brown', 'p': 'botanist author abbreviation', 'o': '?x0'}

 Q: When did member of sports team of Ali Daei and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q159622 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Give me {periodization} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q816829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the production process of medium grog?
 SPARQL: SELECT ?answer WHERE { wd:Q492554 wdt:P186 ?X . ?X wdt:P2079 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'production process', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'grog', 'p': 'medium', 'o': '$y0'}}

 Q: How many {distribution} are for {Team Fortress 2} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q382108 wdt:P437 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Team Fortress 2', 'p': 'distribution', 'o': '?x0'}

 Q: How many {member of political party} are for {Shigeru Yoshida} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q301804 wdt:P102 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Shigeru Yoshida', 'p': 'member of political party', 'o': '?x0'}

 Q: What is {characters} of {Nabucco} that is {voice type} is {soprano} ?
 SPARQL: SELECT ?obj WHERE { wd:Q202230 p:P674 ?s . ?s ps:P674 ?obj . ?s pq:P412 wd:Q30903 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nabucco', 'p': 'characters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'voice type', 'o': 'soprano'}}}

 Q: What is {location of birth} of {Enrique Iglesias}, that has {partner town} is {Bogotá} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47122 wdt:P19 ?answer . ?answer wdt:P190 wd:Q2841}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Enrique Iglesias', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Bogota'}}

 Q: What is the astronomical filter for Messier 7 has apparent magnitude as 3.3?
 SPARQL: SELECT ?value WHERE { wd:Q11234 p:P1215 ?s . ?s ps:P1215 ?x filter(contains(?x,'3.3')) . ?s pq:P1227 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'astronomical filter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Messier 7', 'p': 'apparent magnitude', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'apparent magnitude', 'o': '3.3'}}}

 Q: Which is religion of Maratha Empire ?
 SPARQL: select distinct ?answer where { wd:Q83618 wdt:P140 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maratha Empire', 'p': 'religion', 'o': '?x0'}

 Q: what is the {replaced by} for {H. H. Asquith} has {position held} as {Secretary of State for the Home Department} ?
 SPARQL: SELECT ?value WHERE { wd:Q166714 p:P39 ?s . ?s ps:P39 wd:Q2484309 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'H. H. Asquith', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary of State for the Home Department'}}}

 Q: Who gave the  {sector} of {developed by} of {Ms. Pac-Man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2141683 wdt:P178 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sector', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ms. Pac-Man', 'p': 'developed by', 'o': '$y0'}}

 Q: What is {titleholder} of {nomination received} of {Insaaf Ka Tarazu} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11000078 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'titleholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Insaaf Ka Tarazu', 'p': 'nominated for', 'o': '$y0'}}

 Q: Which is the Internet Encyclopedia of Philosophy ID of aesthetics?
 SPARQL: select distinct ?answer where { wd:Q35986 wdt:P5088 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'aesthetics', 'p': 'Internet Encyclopedia of Philosophy ID', 'o': '?x0'}

 Q: How many people depicted by the {Jesus Christ} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q302 wdt:P1299 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Jesus', 'p': 'depicted by', 'o': '?x0'}

 Q: What is the {academic discipline} for {studies} of {Hebrew}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q9288 . ?sbj wdt:P31 wd:Q11862829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'Hebrew', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discipline'}}

 Q: Which is the highest judicial authority of Rhode Island?
 SPARQL: select distinct ?answer where { wd:Q1387 wdt:P209 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rhode Island', 'p': 'highest judicial authority', 'o': '?x0'}

 Q: Which is the interaction of the supersymmetric particle of quark?
 SPARQL: SELECT ?answer WHERE { wd:Q6718 wdt:P2375 ?X . ?X wdt:P517 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'interaction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'quark', 'p': 'supersymmetric particle', 'o': '$y0'}}

 Q: What is {award received} of {Toni Braxton} that is {for work} is {Love, Marriage & Divorce} ?
 SPARQL: SELECT ?obj WHERE { wd:Q155412 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q16916554 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Toni Braxton', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Love, Marriage & Divorce'}}}

 Q: Genghis Khan's noble family name is?
 SPARQL:  select distinct ?obj where { wd:Q720 wdt:P734 ?obj . ?obj wdt:P31 wd:Q13417114 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genghis Khan', 'p': 'family name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble family'}}

 Q: Which article of Z-Boys features the film director Stacy Peralta?
 SPARQL: SELECT ?answer WHERE { wd:Q191378 wdt:P805 ?answer . ?answer wdt:P57 wd:Q465229}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Z-Boys', 'p': 'article', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Stacy Peralta'}}

 Q: Is it true that Heath Ledger's ethnicity was Ulster Protestant?
 SPARQL: ASK WHERE { wd:Q40572 wdt:P172 wd:Q17017729 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Heath Ledger', 'p': 'ethnicity', 'o': '?x0', '?x0': 'Ulster Protestant'}]

 Q: What is {position held} of {Muammar al-Gaddafi} that is {end time} is {2010-1-31} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19878 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gaddafi', 'p': 'position held', 'o': '?x0', 't': '2010'}

 Q: What award did Jane Goodall receive in 2004?
 SPARQL: SELECT ?obj WHERE { wd:Q184746 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jane Goodall', 'p': 'award', 'o': '?x0', 't': '2004'}

 Q: What is the {country for sport} and the {position played on team / speciality} of {Allen_Iverson} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q190094 wdt:P1532 ?ans_1 . wd:Q190094 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Allen Iverson', 'p': 'country for sport', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Allen Iverson', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: Is the standard molar entropy of sodium greater than 61.44?
 SPARQL: ASK WHERE { wd:Q658 wdt:P3071 ?obj filter(?obj > 61.44) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'sodium', 'p': 'standard molar entropy', 'o': '?x0', '?x0': '61.44'}

 Q: Did Harry Styles get his education at Ivybridge Community College?
 SPARQL: ASK WHERE { wd:Q3626966 wdt:P69 wd:Q6099982 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Harry Styles', 'p': 'education', 'o': '?x0', '?x0': 'Ivybridge Community College'}]

 Q: Tell me  a album whose name consist of the word wall and whose english is the language of work
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q482994 . ?sbj wdt:P407 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wall')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'album', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language of work', 'o': 'en'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wall'}}

 Q: What are the invention which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18119757 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'invention'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the tributary orientation of Aras River whose mouth of the watercourse is Kura River?
 SPARQL: SELECT ?value WHERE { wd:Q179751 p:P403 ?s . ?s ps:P403 wd:Q156557 . ?s pq:P3871 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary orientation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aras River', 'p': 'mouth of the watercourse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mouth of the watercourse', 'o': 'Kura River'}}}

 Q: How many {language of work or name} are for {Spotify} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q689141 wdt:P407 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Spotify', 'p': 'language of work or name', 'o': '?x0'}

 Q: Did {Grover_Cleveland} {position held} {President of the United States} and {Governor of New York} ?
 SPARQL: ASK WHERE { wd:Q35171 wdt:P39 wd:Q11696 . wd:Q35171 wdt:P39 wd:Q2347975 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Grover Cleveland', 'p': 'position held', 'o': '?x0', '?x0': 'President of the US'}, {'h': 'IS', 'v': '?x1', 's': 'Grover Cleveland', 'p': 'position held', 'o': '?x1', '?x1': 'Governor of New York'}]

 Q: What is the {type of quantum particle} for {antiparticle} of {electron}
 SPARQL:  select distinct ?obj where { wd:Q2225 wdt:P2152 ?obj . ?obj wdt:P31 wd:Q22675015 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'electron', 'p': 'antiparticle', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle'}}

 Q: What is {from} of {coincident with} of {Japan National Route 438} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6157543 wdt:P1382 ?X . ?X wdt:P609 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Japan National Route 438', 'p': 'coincident with', 'o': '$y0'}}

 Q: What are the subculture which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q264965 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'subculture'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which academic major was taken by Emil Cioran who was educated at University of Bucharest?
 SPARQL: SELECT ?value WHERE { wd:Q193405 p:P69 ?s . ?s ps:P69 wd:Q608338 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emil Cioran', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Bucharest'}}}

 Q: What is {manifestation of} of {operated by} of {e-commerce} ?
 SPARQL: SELECT ?answer WHERE { wd:Q484847 wdt:P137 ?X . ?X wdt:P1557 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manifestation of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'e-commerce', 'p': 'operated by', 'o': '$y0'}}

 Q: What is the {human} for {conflict} of {Battle of Verdun}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P607 wd:Q130847 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'Battle of Verdun', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which is the GUI toolkit of framework for iOS?
 SPARQL: select distinct ?answer where { wd:Q48493 wdt:P1414 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'iOS', 'p': 'GUI toolkit', 'o': '?x0'}

 Q: What is {date of death} of {Masaccio} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5811 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Masaccio', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: Did {National_Football_League} {headquarters location} {New York City}?
 SPARQL: ASK WHERE { wd:Q1215884 wdt:P159 wd:Q60 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'NFL', 'p': 'headquarters location', 'o': '?x0', '?x0': 'New York City'}]

 Q: When did Scotland have a population of 5.3136e+06?
 SPARQL: SELECT ?value WHERE { wd:Q22 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'5.3136e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Scotland', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '5.3136e+06'}, 't': '?x0'}

 Q: What ilocation to takes part of Stanislav Cherchesov ?
 SPARQL: SELECT ?answer WHERE { wd:Q699557 wdt:P1344 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stanislav Cherchesov', 'p': 'takes part', 'o': '$y0'}}

 Q: How many package management systems exist for Android?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q94 wdt:P3033 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Android', 'p': 'package management system', 'o': '?x0'}

 Q: Who is the developer of wave equation with member of Royal Swedish Academy of Sciences?
 SPARQL: SELECT ?answer WHERE { wd:Q193846 wdt:P61 ?answer . ?answer wdt:P463 wd:Q191583}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'wave equation', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Royal Swedish Academy of Sciences'}}

 Q: Who was the person that was a student of Gustav Mahler?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1066 wd:Q7304 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Gustav Mahler', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: "Which is {musical score by} of {Requiem}, where {woman} is {male} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1356210 wdt:P86 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Requiem', 'p': 'musical score by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'man', 'o': 'male'}}

 Q: What is {number of points/goals/set scored} and {number of matches played} of {{Jock Stein} has {member of sports team} as {Scottish Football League XI}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q355378 p:P54 ?s . ?s ps:P54 wd:Q7437735 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jock Stein', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Scottish Football League XI'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jock Stein', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Scottish Football League XI'}}}]

 Q: Google has how many distributors?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P750 wd:Q95 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'distributor', 'o': 'Google'}

 Q: Who is the musical conductor of Mary Poppins?
 SPARQL: select distinct ?answer where { wd:Q209170 wdt:P3300 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mary Poppins', 'p': 'musical conductor', 'o': '?x0'}

 Q: what is the {applies to part} for {Vistula} has {coordinate location} as {54.3641} ?
 SPARQL: SELECT ?value WHERE { wd:Q548 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'54.3641')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vistula', 'p': 'co-ordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'co-ordinate location', 'o': '54.3641'}}}

 Q: What is {worked for} of {Franz Bopp}, that has {rector} is {Ernst Bumm} ?
 SPARQL: SELECT ?answer WHERE { wd:Q76934 wdt:P108 ?answer . ?answer wdt:P1075 wd:Q90646}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Franz Bopp', 'p': 'worked for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'rector', 'o': 'Ernst Bumm'}}

 Q: What what is  female beauty pageant operating area by all countries which starts with letter m
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58863414 . ?sbj wdt:P2541 wd:Q62900839 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'female beauty pageant', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operating area', 'o': 'all countries'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: When was Gabriela Mistral nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q80871 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Gabriela Mistral', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: Tell me cell type whose name has the word reticulodyte in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q189118 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'reticulocyte')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cell type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'reticulocyte'}}

 Q: Which is the name of the child of Abigail Adams, born on the 14th of july 1765?
 SPARQL: SELECT ?obj WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?x filter(contains(YEAR(?x),'1765')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Abigail Adams', 'p': 'child', 'o': '?x0', 't': '1765'}

 Q: What is {residence} of {Don Bluth} that is {start time} is {1940-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q448957 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1940')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Don Bluth', 'p': 'residence', 'o': '?x0', 't': '1940'}

 Q: What is {followed by} and {follows} of {{Pepin the Short} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q81212 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pepin the Short', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pepin the Short', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What is the {professional sports team} for {member of sports team} of {Lionel Messi}
 SPARQL:  select distinct ?obj where { wd:Q615 wdt:P54 ?obj . ?obj wdt:P31 wd:Q20639856 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lionel Messi', 'p': 'member of sports team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'professional sports team'}}

 Q: What is the {human} for {head of state} of {Czechoslovakia}
 SPARQL:  select distinct ?obj where { wd:Q33946 wdt:P35 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Czechoslovakia', 'p': 'leader', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When was Louis XVI of France divorced his spouse Marie Antoinette?
 SPARQL: SELECT ?value WHERE { wd:Q7732 p:P26 ?s . ?s ps:P26 wd:Q47365 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divorced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis XVI of France', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Marie Antoinette'}}}

 Q: What is the religion of Roman Empire since 380-2-27?
 SPARQL: SELECT ?obj WHERE { wd:Q2277 p:P140 ?s . ?s ps:P140 ?obj . ?s pq:P580 ?x filter(contains(?x,'380-2-27')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'religion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roman Empire', 'p': 'religion', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'since', 'o': '380-2-27'}}}

 Q: Where is the birthplace of Sherilyn Fenn that was founded in 1701?
 SPARQL: SELECT ?answer WHERE { wd:Q229993 wdt:P19 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1701'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sherilyn Fenn', 'p': 'birthplace', 'o': '?x0', 't': '1701'}

 Q: What's the LombardiaBeniCulturali building ID of the Milan Cathedral.
 SPARQL: select distinct ?answer where { wd:Q18068 wdt:P3503 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Milan Cathedral', 'p': 'LombardiaBeniCulturali building ID', 'o': '?x0'}

 Q: What is {electoral district} and {end cause} of {{Henry Morton Stanley} has {position held} as {Member of the 26th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q171421 p:P39 ?s . ?s ps:P39 wd:Q41582573 . ?s pq:P768 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Morton Stanley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 26th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Morton Stanley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 26th Parliament of the United Kingdom'}}}]

 Q: "Which is {plays} of {cricket ball}, whose {has proponent} is {cricketer} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1139973 wdt:P641 ?answer . ?answer wdt:P3095 wd:Q12299841}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cricket ball', 'p': 'play', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has proponent', 'o': 'cricketer'}}

 Q: What is the available observing time of a Very Large Telescope?
 SPARQL: select distinct ?answer where { wd:Q265628 wdt:P3891 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Very Large Telescope', 'p': 'available observing time', 'o': '?x0'}

 Q: Is it true that the parallax of Arcturus equals to 88.85?
 SPARQL: ASK WHERE { wd:Q12985 wdt:P2214 ?obj filter(?obj = 88.85) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Arcturus', 'p': 'parallax', 'o': '?x0', '?x0': '88.85'}

 Q: What chemical phenomenon starts with the letter "c"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3382117 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical phenomenon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Did {The_Empire_Strikes_Back} {cast member} {Carrie Fisher} and {Jeremy Bulloch} ?
 SPARQL: ASK WHERE { wd:Q181795 wdt:P161 wd:Q108941 . wd:Q181795 wdt:P161 wd:Q2369237 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Empire Strikes Back', 'p': 'cast member', 'o': '?x0', '?x0': 'Carrie Fisher'}, {'h': 'IS', 'v': '?x1', 's': 'The Empire Strikes Back', 'p': 'cast member', 'o': '?x1', '?x1': 'Jeremy Bulloch'}]

 Q: Is the average shot length of the Mist equal to 5.4?
 SPARQL: ASK WHERE { wd:Q695209 wdt:P2208 ?obj filter(?obj = 5.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Mist', 'p': 'average shot length', 'o': '?x0', '?x0': '5.4'}

 Q: What are the literary form which start with the letter Y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4263830 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary form'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is {member of} of {Austrian Empire} that is {end time} is {1866-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131964 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1866')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Austrian Empire', 'p': 'member of', 'o': '?x0', 't': '1866'}

 Q: what is the {replaced by} for {Ibn Saud} has {position held} as {King of Saudi Arabia} ?
 SPARQL: SELECT ?value WHERE { wd:Q151509 p:P39 ?s . ?s ps:P39 wd:Q850168 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ibn Saud', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of Saudi Arabia'}}}

 Q: Which is the Visual Novel Database ID of courage?
 SPARQL: select distinct ?answer where { wd:Q208160 wdt:P3180 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'courage', 'p': 'Visual Novel Database ID', 'o': '?x0'}

 Q: What is {alumna of} of {Edward Said}, that has {is in the province of} is {Elizabeth} ?
 SPARQL: SELECT ?answer WHERE { wd:Q201538 wdt:P69 ?answer . ?answer wdt:P131 wd:Q138311}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Edward Said', 'p': 'alumna of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'is in the province of', 'o': 'Elizabeth'}}

 Q: What is Library of Congress Genre/Form Terms ID for encyclopedia?
 SPARQL: select distinct ?answer where { wd:Q5292 wdt:P4953 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'encyclopedia', 'p': 'Library of Congress Genre/Form Terms ID', 'o': '?x0'}

 Q: When did Jim Skinner stop being McDonald's chief executive officer?
 SPARQL: SELECT ?value WHERE { wd:Q38076 p:P169 ?s . ?s ps:P169 wd:Q1355678 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'McD', 'p': 'chief executive officer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chief executive officer', 'o': 'Jim Skinner'}}}

 Q: Is the luminosity of Betelgeuse equal to 48000.0?
 SPARQL: ASK WHERE { wd:Q12124 wdt:P2060 ?obj filter(?obj = 48000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Betelgeuse', 'p': 'luminosity', 'o': '?x0', '?x0': '48000.0'}

 Q: Does silver have electrical conductivity equal to 63000000
 SPARQL: ASK WHERE { wd:Q1090 wdt:P2055 ?obj filter(?obj = 63000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'silver', 'p': 'electrical conductivity', 'o': '?x0', '?x0': '63000000'}

 Q: Give me {languoid class} that contains the word {variety} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28923954 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'variety')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'languoid class'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'variety'}}

 Q: What is the {aircraft family} for {item operated} of {American Airlines}
 SPARQL:  select distinct ?obj where { wd:Q32396 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American Airlines', 'p': 'item operated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: What is <ITTF table tennis player ID> of <Jan-Ove Waldner> ?
 SPARQL: select distinct ?answer where { wd:Q345360 wdt:P1364 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jan-Ove Waldner', 'p': 'ITTF table tennis player ID', 'o': '?x0'}

 Q: What is the {codon} for {encodes} of {L-Tyrosine}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P688 wd:Q188017 . ?sbj wdt:P31 wd:Q165052 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'encodes', 'o': 'L-Tyrosine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'codon'}}

 Q: Which is the Wimbledon player ID for Novak Djokovic?
 SPARQL: select distinct ?answer where { wd:Q5812 wdt:P4503 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Novak Djokovic', 'p': 'Wimbledon player ID', 'o': '?x0'}

 Q: What is <Wikimedia outline> of <outline of physics> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P5125 wd:Q2427913}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'Wikimedia outline', 'o': 'outline of physics'}

 Q: DOES THE DISCHARGE OF THE CONCA EQUALS 1.5
 SPARQL: ASK WHERE { wd:Q970873 wdt:P2225 ?obj filter(?obj = 1.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Conca', 'p': 'discharge', 'o': '?x0', '?x0': '1.5'}

 Q: who AMSL of principal place of Zaire?
 SPARQL: SELECT ?answer WHERE { wd:Q6500954 wdt:P36 ?X . ?X wdt:P2044 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'AMSL', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zaire', 'p': 'principal place', 'o': '$y0'}}

 Q: Who was Leopold Sedar Senghor's spouse in 1946?
 SPARQL: SELECT ?obj WHERE { wd:Q154545 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leopold Sedar Senghor', 'p': 'spouse', 'o': '?x0', 't': '1946'}

 Q: What is {source of inspiration} of {sidekick of} of {Sebastian} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7885388 wdt:P2546 ?X . ?X wdt:P941 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'source of inspiration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sebastian', 'p': 'sidekick of', 'o': '$y0'}}

 Q: What is the {day in the Eastern Orthodox liturgical calendar} with the {MIN(Sandbox-Quantity)} whose {instance of} is {day in the Eastern Orthodox liturgical calendar}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q47164206 . ?ent wdt:P1106 ?obj . ?ent wdt:P31 wd:Q47164206} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'Sandbox-Quantity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'day in the Eastern Orthodox liturgical calendar'}}

 Q: What is the {Class IC flammable liquid} with the {MIN(ionization energy)} whose {has part} is {carbon}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009056 . ?ent wdt:P2260 ?obj . ?ent wdt:P527 wd:Q623} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'ionization energy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IC flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'carbon'}}}

 Q: Is it true that the number of episodes of the the 10.5: Apocalypse equals 2?
 SPARQL: ASK WHERE { wd:Q163903 wdt:P1113 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '10.5: Apocalypse', 'p': 'number of episodes', 'o': '?x0', '?x0': '2'}

 Q: what is the {replaces} for {Gerhard Schröder} has {position held} as {Federal Chancellor of Germany} ?
 SPARQL: SELECT ?value WHERE { wd:Q2530 p:P39 ?s . ?s ps:P39 wd:Q4970706 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gerhard Schröder', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Federal Chancellor of Germany'}}}

 Q: What is the {protein} for {physically interacts with} of {hydrogen peroxide}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P129 wd:Q171877 . ?sbj wdt:P31 wd:Q8054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'physically interacts with', 'o': 'hydrogen peroxide', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'protein'}}

 Q: Who is the director and director of photography of Apocalypse Now?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q182692 wdt:P57 ?ans_1 . wd:Q182692 wdt:P344 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Apocalypse Now', 'p': 'director', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Apocalypse Now', 'p': 'director of photography', 'o': '?x1'}]

 Q: What is the {conversation} for {used by} of {human}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1535 wd:Q5 . ?sbj wdt:P31 wd:Q52943 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'used by', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conversation'}}

 Q: what is the {located in the administrative territorial entity} for {Johann Gottfried Herder} has {place of birth} as {Morąg} ?
 SPARQL: SELECT ?value WHERE { wd:Q155547 p:P19 ?s . ?s ps:P19 wd:Q139725 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johann Gottfried Herder', 'p': 'birthplace', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'birthplace', 'o': 'Morąg'}}}

 Q: Did Philadelphia share border with Delran Township?
 SPARQL: ASK WHERE { wd:Q1345 wdt:P47 wd:Q3016798 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Philadelphia', 'p': 'border', 'o': '?x0', '?x0': 'Delran Township'}]

 Q: What is a lifestyle that begins with the letter w.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q32090 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lifestyle'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What Belgian municipality with city privileges shares a border with Bruges?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q12994 . ?sbj wdt:P31 wd:Q15273785 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Bruges', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Belgian municipality with city privileges'}}

 Q: What is the {human} for {member of sports team} of {F.C. Porto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P54 wd:Q128446 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'plays for', 'o': 'FC Porto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who was the mother of Eleanor of Aquitaine?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P25 wd:Q178525 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'mother', 'o': 'Eleanor of Aquitaine'}

 Q: what is the {point in time} for {Patricia Arquette} has {award received} as {Golden Globe Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q215976 p:P166 ?s . ?s ps:P166 wd:Q1011547 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Patricia Arquette', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Golden Globe Award'}, 't': '?x0'}

 Q: Give me {metropolitan city of South Korea} that starts with {'u'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q482821 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolitan city of South Korea'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Is Budapest a twinned administrative body with Tehran and San Vito al Tagliamento?
 SPARQL: ASK WHERE { wd:Q1781 wdt:P190 wd:Q3616 . wd:Q1781 wdt:P190 wd:Q53194 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Budapest', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Tehran'}, {'h': 'IS', 'v': '?x1', 's': 'Budapest', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'San Vito al Tagliamento'}]

 Q: What is Barefoot Gen's Anime News Network manga ID?
 SPARQL: select distinct ?answer where { wd:Q4347 wdt:P1984 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Barefoot Gen', 'p': 'Anime News Network manga ID', 'o': '?x0'}

 Q: Which is the Italian cadastre code of Venice?
 SPARQL: select distinct ?answer where { wd:Q641 wdt:P806 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Venice', 'p': 'Italian cadastre code', 'o': '?x0'}

 Q: Who gave the {pronunciation audio} of {language written} of {Jonas Savimbi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q273051 wdt:P1412 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jonas Savimbi', 'p': 'language written', 'o': '$y0'}}

 Q: What is {subsidiary company} of {label} of {Deep Purple} ?
 SPARQL: SELECT ?answer WHERE { wd:Q101505 wdt:P264 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Deep Purple', 'p': 'label', 'o': '$y0'}}

 Q: What is the filmography of Ron Howard?
 SPARQL:  select distinct ?obj where { wd:Q103646 wdt:P1283 ?obj . ?obj wdt:P31 wd:Q1371849 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ron Howard', 'p': 'filmography', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'filmography'}}

 Q: What is {house} of {has sister} of {Lionel of Antwerp, 1st Duke of Clarence} ?
 SPARQL: SELECT ?answer WHERE { wd:Q313846 wdt:P3373 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'house', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel of Antwerp, 1st Duke of Clarence', 'p': 'sister', 'o': '$y0'}}

 Q: What is {is in the voivodeship of} of {Beni Suef Governorate}, that has {diplomatic relation} is {South Korea} ?
 SPARQL: SELECT ?answer WHERE { wd:Q30683 wdt:P131 ?answer . ?answer wdt:P530 wd:Q884}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Beni Suef Governorate', 'p': 'is in the voivodeship of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'South Korea'}}

 Q: What is the {single} for {follows} of {Unchained Melody}
 SPARQL:  select distinct ?obj where { wd:Q949416 wdt:P155 ?obj . ?obj wdt:P31 wd:Q134556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unchained Melody', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single'}}

 Q: What is {IPv4 routing prefix} of {Department of Defense} that is {has quality} is {legacy IPv4 address block} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11209 p:P3761 ?s . ?s ps:P3761 ?obj . ?s pq:P1552 wd:Q28919811 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'IPv4 routing prefix', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Department of Defense', 'p': 'IPv4 routing prefix', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has quality', 'o': 'legacy IPv4 address block'}}}

 Q: what is the {end time} for {William Lamb, 2nd Viscount Melbourne} has {position held} as {Prime Minister of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q312567 p:P39 ?s . ?s ps:P39 wd:Q14211 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Lamb, 2nd Viscount Melbourne', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of the United Kingdom'}}}

 Q: What is the {profession} for {field of this occupation} of {ecology}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P425 wd:Q7150 . ?sbj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'field of this occupation', 'o': 'ecology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: Is the age of consent in Norway 16?
 SPARQL: ASK WHERE { wd:Q20 wdt:P2999 ?obj filter(?obj = 16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Norway', 'p': 'age of consent', 'o': '?x0', '?x0': '16'}

 Q: Is the synodic period of mars less than 623.952?
 SPARQL: ASK WHERE { wd:Q111 wdt:P4341 ?obj filter(?obj < 623.952) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Mars', 'p': 'synodic period', 'o': '?x0', '?x0': '623.952'}

 Q: What is <captain> of <Montreal Canadiens> ?
 SPARQL: select distinct ?answer where { wd:Q188143 wdt:P634 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Montreal Canadiens', 'p': 'captain', 'o': '?x0'}

 Q: How many {student of} are to/by {Hans Hofmann} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1066 wd:Q215461 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Hans Hofmann'}

 Q: What is the {human} for {conflict} of {Russian Civil War}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P607 wd:Q79911 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'Russian Civil War', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {start time} for {Dmitry Medvedev} has {position held} as {First Deputy Chairman of the Government of the Russian Federation} ?
 SPARQL: SELECT ?value WHERE { wd:Q23530 p:P39 ?s . ?s ps:P39 wd:Q1965788 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dmitry Medvedev', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'First Deputy Chairman of the Government of the Russian Federation'}}}

 Q: what is the {end time} for {Mohammad Reza Pahlavi} has {position held} as {Shah} ?
 SPARQL: SELECT ?value WHERE { wd:Q128245 p:P39 ?s . ?s ps:P39 wd:Q184299 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mohammad Reza Pahlavi', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Shah'}}}

 Q: Is it true that Natalie Wood married to Richard Gregson?
 SPARQL: ASK WHERE { wd:Q180919 wdt:P26 wd:Q19299123 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Natalie Wood', 'p': 'married to', 'o': '?x0', '?x0': 'Richard Gregson'}]

 Q: What is the thermal conductivity of aluminium?
 SPARQL: select distinct ?answer where { wd:Q663 wdt:P2068 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'aluminium', 'p': 'thermal conductivity', 'o': '?x0'}

 Q: what is the {nominee} for {The Last of the Mohicans} has {nominated for} as {Academy Award for Best Sound Mixing} ?
 SPARQL: SELECT ?value WHERE { wd:Q144483 p:P1411 ?s . ?s ps:P1411 wd:Q830079 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Last of the Mohicans', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Sound'}}}

 Q: Is Lil Wayne's country of citizenship the United States of America?
 SPARQL: ASK WHERE { wd:Q15615 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Lil Wayne', 'p': 'country of citizenship', 'o': '?x0', '?x0': 'United States of America'}]

 Q: What is the {nuclear weapon} with the {MAX(explosive energy equivalent)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12802 . ?ent wdt:P2145 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'explosive energy equivalent', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nuclear weapon'}}

 Q: What is {located in time zone} of {Tennessee} that is {applies to part} is {Lake County} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1509 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P518 wd:Q494771 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tennessee', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'Lake County'}}}

 Q: What is {precedes} of {featured in work} of {Albany} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27990788 wdt:P1441 ?X . ?X wdt:P156 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'precedes', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Albany', 'p': 'featured in work', 'o': '$y0'}}

 Q: Give me {book of the Bible} that contains the word {song} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29154430 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'song')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book of the Bible'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'song'}}

 Q: What is {has local government areas} of {Incheon}, that has {co-ords} is {37.4094} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20934 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'37.4094'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Incheon', 'p': 'has local government areas', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-ords', 'o': '37.4094'}}

 Q: Which is co-founded by the League of Nations, which is also a member of American Philosophical Society?
 SPARQL: SELECT ?answer WHERE { wd:Q38130 wdt:P112 ?answer . ?answer wdt:P463 wd:Q466089}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'League of Nations', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'American Philosophical Society'}}

 Q: What is the {human} for {architect} of {Mausoleum of Maussollos}
 SPARQL:  select distinct ?obj where { wd:Q45368 wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mausoleum of Maussollos', 'p': 'architect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {software publisher} of {Super Smash Bros. Melee}, that has {divisions} is {Nintendo Platform Technology Development} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1052131 wdt:P123 ?answer . ?answer wdt:P199 wd:Q21190892}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Super Smash Bros. Melee', 'p': 'publisher', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divisions', 'o': 'Nintendo Platform Technology Development'}}

 Q: Which is the science award that is conferred by the Columbia University and contains the word prize in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11448906 . ?sbj wdt:P1027 wd:Q49088 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'prize')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'science award', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'conferred by', 'o': 'Columbia University'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'prize'}}

 Q: Which is the IDESCAT territorial code in Catalonia for Badalona?
 SPARQL: select distinct ?answer where { wd:Q15468 wdt:P4335 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Badalona', 'p': 'IDESCAT territorial code in Catalonia', 'o': '?x0'}

 Q: What is the birth location of Frederic Remington whose co-ords are 44.5975 -75.1711?
 SPARQL: SELECT ?answer WHERE { wd:Q560787 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'44.5975 -75.1711'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frederic Remington', 'p': 'birth location', 'o': '?x0'}

 Q: What is {part of work} of {bibliographic citation} of {Masked smoothing using separable kernels for CT perfusion images.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q35229347 wdt:P2860 ?X . ?X wdt:P1433 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'part of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Masked smoothing using separable kernels for CT perfusion images.', 'p': 'bibliographic citation', 'o': '$y0'}}

 Q: What is the name of the circular saw model and its acoustic power?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q23811261 . ?ent wdt:P2797 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'sound power level', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'circular saw model'}}

 Q: What is the {place of death} and the {cause of death} of {Robert_Wadlow} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q192789 wdt:P20 ?ans_1 . wd:Q192789 wdt:P509 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Robert Wadlow', 'p': 'place of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Robert Wadlow', 'p': 'cause of death', 'o': '?x1'}]

 Q: what is the {end time} for {Valentino Rossi} has {member of sports team} as {Ducati Motor Holding} ?
 SPARQL: SELECT ?value WHERE { wd:Q169814 p:P54 ?s . ?s ps:P54 wd:Q271812 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valentino Rossi', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Ducati Motor Holding'}}}

 Q: Jimmy Page has how many producers?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P162 wd:Q165467 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'producer', 'o': 'Jimmy Page'}

 Q: Which is the television film that was based on Twenty Thousand Leagues Under the Sea?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q183565 . ?sbj wdt:P31 wd:Q506240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Twenty Thousand Leagues Under the Sea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television film'}}

 Q: what is the {point in time} for {Jan Brueghel the Elder} has {work location} as {Prague} ?
 SPARQL: SELECT ?value WHERE { wd:Q209050 p:P937 ?s . ?s ps:P937 wd:Q1085 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jan Brueghel the Elder', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'Prague'}, 't': '?x0'}

 Q: How many series are with Metroid} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P179 wd:Q12397 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Metroid'}

 Q: Which is the Diamond League athlete ID for Ezekiel Kemboi?
 SPARQL: select distinct ?answer where { wd:Q1677 wdt:P3923 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ezekiel Kemboi', 'p': 'Diamond League athlete ID', 'o': '?x0'}

 Q: What is {discharge} of {Canadian River} that is {location} is {Whitefield} ?
 SPARQL: SELECT ?obj WHERE { wd:Q597753 p:P2225 ?s . ?s ps:P2225 ?obj . ?s pq:P276 wd:Q2380417 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discharge', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Canadian River', 'p': 'discharge', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'location', 'o': 'Whitefield'}}}

 Q: What is {famous works} of {Isabelle Adjani}, that has {inspiring artist} is {Alexandre Dumas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106383 wdt:P800 ?answer . ?answer wdt:P1877 wd:Q38337}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Isabelle Adjani', 'p': 'work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inspiring artist', 'o': 'Alexandre Dumas'}}

 Q: What is {has towns} of {Tottori Prefecture}, that has {point on the globe} is {133.43} ?
 SPARQL: SELECT ?answer WHERE { wd:Q133935 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'133.43'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tottori Prefecture', 'p': 'has towns', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'point on the globe', 'o': '133.43'}}

 Q: which construction has starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q811430 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'construction'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is {record held} of {pole vault} and {location}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: What is <Lafonoteca artist ID> of <Miguel Bosé> ?
 SPARQL: select distinct ?answer where { wd:Q356762 wdt:P5295 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Miguel Bosé', 'p': 'Lafonoteca artist ID', 'o': '?x0'}

 Q: what is the {start time} for {John McEnroe} has {spouse} as {Patty Smyth} ?
 SPARQL: SELECT ?value WHERE { wd:Q16474 p:P26 ?s . ?s ps:P26 wd:Q444096 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John McEnroe', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Patty Smyth'}}}

 Q: Who was the spouse of Cher in 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q12003 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cher', 'p': 'spouse', 'o': '?x0', 't': '1979'}

 Q: What is the {native language} and the {history of topic} of {Romani_people} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8060 wdt:P103 ?ans_1 . wd:Q8060 wdt:P2184 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Romani', 'p': 'native language', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Romani', 'p': 'history of topic', 'o': '?x1'}]

 Q: What is {member of} of {sovereign state} of {Uppsala University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q185246 wdt:P17 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uppsala University', 'p': 'sovereign state', 'o': '$y0'}}

 Q: Is it true that 160 is the max peak exposure limit of carbon tetrachloride?
 SPARQL: ASK WHERE { wd:Q225045 wdt:P2406 ?obj filter(?obj > 160.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'carbon tetrachloride', 'p': 'maximum peak exposure limit', 'o': '?x0', '?x0': '160.0'}

 Q: Tell me me a unit of energy whose name consist of the word "joule" and whose based on metre
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2916980 . ?sbj wdt:P144 wd:Q11573 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'joule')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of energy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'metre'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'joule'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Ian Rush} has {member of sports team} as {Liverpool F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q219354 p:P54 ?s . ?s ps:P54 wd:Q1130849 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ian Rush', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Liverpool F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ian Rush', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Liverpool F.C.'}}}]

 Q: What is {aspect of} of {domain} of {filter} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3072260 wdt:P2579 ?X . ?X wdt:P1269 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'aspect of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'filter', 'p': 'domain', 'o': '$y0'}}

 Q: Which drug has the highest heat capacity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12140 . ?ent wdt:P2056 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'heat capacity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'drug'}}

 Q: what is the {point in time} for {Audrey Hepburn} has {award received} as {Grammy Award for Best Spoken Word Album for Children} ?
 SPARQL: SELECT ?value WHERE { wd:Q42786 p:P166 ?s . ?s ps:P166 wd:Q3113382 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Audrey Hepburn', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best Spoken Word Album for Children'}, 't': '?x0'}

 Q: What is the {song} for {present in work} of {hard rock}
 SPARQL:  select distinct ?obj where { wd:Q83270 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'hard rock', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: What is the {sovereign state} for {foundational text} of {U.S. Declaration of Independence}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P457 wd:Q127912 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'foundational text', 'o': 'Declaration of Independence', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: tell me border whose name has the starts with I in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q133346 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'l')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'border'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'l'}}

 Q: "What instrument does Frank Sinatra play that was created by Manuel Nunes?"
 SPARQL: SELECT ?answer WHERE { wd:Q40912 wdt:P1303 ?answer . ?answer wdt:P61 wd:Q21850546}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frank Sinatra', 'p': 'instrument', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'Manuel Nunes'}}

 Q: What is {member of sports team} of {Abby Wambach} that is {number of matches played} is {39.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q233112 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?x filter(contains(?x,'39.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abby Wambach', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'matches played', 'o': '39.0'}}}

 Q: What are the possible examinations of the murder method of Rattana Pestonji?
 SPARQL: SELECT ?answer WHERE { wd:Q6585331 wdt:P509 ?X . ?X wdt:P923 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'possible examinations', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rattana Pestonji', 'p': 'murder method', 'o': '$y0'}}

 Q: How many students are there in the {Constantin Brâncuși} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q153048 wdt:P802 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Constantin Brâncuși', 'p': 'student', 'o': '?x0'}

 Q: tell me medical attribute whose name starts with w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44476427 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical attribute'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {religious text} for {present in work} of {David}
 SPARQL:  select distinct ?obj where { wd:Q41370 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: How many {offers view on} are to/by {Grand Canyon} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3173 wd:Q118841 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'offers view on', 'o': 'Grand Canyon'}

 Q: What is the {profession} for {occupation} of {William Shakespeare}
 SPARQL:  select distinct ?obj where { wd:Q692 wdt:P106 ?obj . ?obj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Shakespeare', 'p': 'occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: who symbol of quantity of cord ?
 SPARQL: SELECT ?answer WHERE { wd:Q920297 wdt:P111 ?X . ?X wdt:P416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cord', 'p': 'quantity', 'o': '$y0'}}

 Q: What is the {festival} for {language used} of {Hungarian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q9067 . ?sbj wdt:P31 wd:Q132241 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Hungarian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'festival'}}

 Q: Who was the head of government of Saarbrücken that ended at 2004-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q1724 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saarbrücken', 'p': 'head of government', 'o': '?x0', 't': '2004'}

 Q: what is the {statement is subject of} for {Helen Hayes} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q213302 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Helen Hayes', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: Is the wheelbase of the Lunar Roving Vehicle equal to 2.3?
 SPARQL: ASK WHERE { wd:Q275816 wdt:P3039 ?obj filter(?obj = 2.3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lunar Roving Vehicle', 'p': 'wheelbase', 'o': '?x0', '?x0': '2.3'}

 Q: What is the name of the person that the Euler equations are named for, that died in Saint Petersburg?
 SPARQL: SELECT ?answer WHERE { wd:Q375175 wdt:P138 ?answer . ?answer wdt:P20 wd:Q656}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Euler equations', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Saint Petersburg'}}

 Q: Who is the chief operating officers of the builders of the Nintendo DS?
 SPARQL: SELECT ?answer WHERE { wd:Q170323 wdt:P176 ?X . ?X wdt:P1789 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chief operating officer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nintendo DS', 'p': 'builder', 'o': '$y0'}}

 Q: What is based in the Arab Revolt that resulted in inflation rate of consumer price index of 34.2?
 SPARQL: SELECT ?answer WHERE { wd:Q239060 wdt:P276 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'34.2'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arab Revolt', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '34.2'}}

 Q: What is {work location} of {Theo van Doesburg} that is {point in time} is {1929-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q160422 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1929')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Theo van Doesburg', 'p': 'work location', 'o': '?x0', 't': '1929'}

 Q: Does the vertical depth of the Pervomayskaya equal 0?
 SPARQL: ASK WHERE { wd:Q3900622 wdt:P4511 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Pervomayskaya', 'p': 'vertical depth', 'o': '?x0', '?x0': '0'}

 Q: What is {performer} of {Superman} that is {of} is {Superman} ?
 SPARQL: SELECT ?obj WHERE { wd:Q79015 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q2405659 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'performer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Superman', 'p': 'performer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'Superman'}}}

 Q: What is <industry> of <e-commerce> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P452 wd:Q484847}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'industry', 'o': 'e-commerce'}

 Q: What is {eponym} of {Marxism}, that has {employment} is {poet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7264 wdt:P138 ?answer . ?answer wdt:P106 wd:Q49757}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marxism', 'p': 'eponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employment', 'o': 'poet'}}

 Q: What is {position held} of {Hu Jintao} that is {parliamentary term} is {9th National People's Congress} ?
 SPARQL: SELECT ?obj WHERE { wd:Q15029 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2937 wd:Q4646623 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hu Jintao', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'parliamentary term', 'o': "9th National People's Congress"}}}

 Q: What is the {shipwrecking} with the {MIN(number of casualties)} whose {vessel} is {RMS Titanic}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q906512 . ?ent wdt:P1590 ?obj . ?ent wdt:P1876 wd:Q25173} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of casualties', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'shipwreck', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ship', 'o': 'RMS Titanic'}}}

 Q: What is <website account on> of <Twitch> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P553 wd:Q4555537}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'website account on', 'o': 'Twitch'}

 Q: What is {has administrative divisions} of {citizenship} of {Gummo Marx} ?
 SPARQL: SELECT ?answer WHERE { wd:Q504548 wdt:P27 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has administrative divisions', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gummo Marx', 'p': 'citizenship', 'o': '$y0'}}

 Q: What is {plant taxon in botanical garden} of {administrator} of {Toronto Zoo Domain Ride} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7826576 wdt:P137 ?X . ?X wdt:P1990 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'plant taxon in botanical garden', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Toronto Zoo Domain Ride', 'p': 'administrator', 'o': '$y0'}}

 Q: Is the heart rate of a horse equal to 40.8?
 SPARQL: ASK WHERE { wd:Q726 wdt:P3395 ?obj filter(?obj = 40.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'horse', 'p': 'heart rate', 'o': '?x0', '?x0': '40.8'}

 Q: What is the mass of deuterium oxide?
 SPARQL: select distinct ?answer where { wd:Q155890 wdt:P2067 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'deuterium oxide', 'p': 'mass', 'o': '?x0'}

 Q: When did Ohio have the population of 9.7064e+06?
 SPARQL: SELECT ?value WHERE { wd:Q1397 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'9.7064e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ohio', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '9.7064e+06'}, 't': '?x0'}

 Q: What is the EPCR player ID for Jonah Lomu?
 SPARQL: select distinct ?answer where { wd:Q363717 wdt:P3666 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jonah Lomu', 'p': 'EPCR player ID', 'o': '?x0'}

 Q: What is the position held by Emmanuel Joseph Sieyès born at 1795-4-20?
 SPARQL: SELECT ?obj WHERE { wd:Q294344 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1795')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Emmanuel Joseph Sieyès', 'p': 'position held', 'o': '?x0', 't': '1795'}

 Q: What is the {country} for {head of state} of {Donald Trump}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q22686 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Donald Trump', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Is the muzzle velocity of the 5"/38 caliber gun equal to 790?
 SPARQL: ASK WHERE { wd:Q2071130 wdt:P4137 ?obj filter(?obj = 790) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '5"/38 caliber gun', 'p': 'muzzle velocity', 'o': '?x0', '?x0': '790'}

 Q: Which is the ethnic group which contains the word zambo in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41710 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zambo')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnic group'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zambo'}}

 Q: what is the {start time} for {Amsterdam} has {instance of} as {settlement} ?
 SPARQL: SELECT ?value WHERE { wd:Q727 p:P31 ?s . ?s ps:P31 ?x filter(contains(?x,'http://dbpedia.org/ontology/Settlement')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amsterdam', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'http'}}}

 Q: What chemical compound has a significant drug interaction with astemizole starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11173 . ?sbj wdt:P769 wd:Q423437 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant drug interaction', 'o': 'astemizole'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {antonym of} of {subject in} of {compressible flow} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2705141 wdt:P1269 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'compressible flow', 'p': 'subject in', 'o': '$y0'}}

 Q: what is the {start time} for {Richard Attenborough} has {spouse} as {Sheila Sim} ?
 SPARQL: SELECT ?value WHERE { wd:Q51506 p:P26 ?s . ?s ps:P26 wd:Q4419444 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Attenborough', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Sheila Sim'}}}

 Q: What town was lived in by Aristotle, whose partner town is Cali?
 SPARQL: SELECT ?answer WHERE { wd:Q868 wdt:P551 ?answer . ?answer wdt:P190 wd:Q51103}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aristotle', 'p': 'lived in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner town', 'o': 'Cali'}}

 Q: What was the primary profession of the author of "The Road to Serfdom?"
 SPARQL: SELECT ?answer WHERE { wd:Q1638194 wdt:P50 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Road to Serfdom', 'p': 'author', 'o': '$y0'}}

 Q: What is {informed by} of {authors} of {Needle in the Groove} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6986611 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'informed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Needle in the Groove', 'p': 'author', 'o': '$y0'}}

 Q: What lake of São Jorge Island has the Curoca River, a tributary?
 SPARQL: SELECT ?answer WHERE { wd:Q743362 wdt:P206 ?answer . ?answer wdt:P974 wd:Q10361834}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'São Jorge Island', 'p': 'lake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Curoca River'}}

 Q: What award did Emile Berliner receive on 1-1-1929?
 SPARQL: SELECT ?obj WHERE { wd:Q71004 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1929')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Emile Berliner', 'p': 'award', 'o': '?x0', 't': '1929'}

 Q: What is {because} of {bone fracture}, that has {medical specialty} is {traumatology} ?
 SPARQL: SELECT ?answer WHERE { wd:Q68833 wdt:P828 ?answer . ?answer wdt:P1995 wd:Q376680}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'bone fracture', 'p': 'cause', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'medical specialty', 'o': 'traumatology'}}

 Q: What are the low-cost airline which start with the letter vueling
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190915 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vueling')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'low-cost airline'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vueling'}}

 Q: What is {instrument played} of {citation} of {Clustering of scientific citations in Wikipedia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26857876 wdt:P2860 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clustering of scientific citations in Wikipedia', 'p': 'citation', 'o': '$y0'}}

 Q: Tell me which is the single-family detached home which contains the word villa in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1307276 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'villa')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single-family detached home'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'villa'}}

 Q: What is the name of the ethical theory of movement by Jeremy Bentham?
 SPARQL:  select distinct ?obj where { wd:Q60887 wdt:P135 ?obj . ?obj wdt:P31 wd:Q58927801 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jeremy Bentham', 'p': 'movement', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethical theory'}}

 Q: What is {discovered} of {plays} of {Émile Waldteufel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q286616 wdt:P1303 ?X . ?X wdt:P575 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discovered', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Émile Waldteufel', 'p': 'plays', 'o': '$y0'}}

 Q: Mention the border participants of Livonian War?
 SPARQL: SELECT ?answer WHERE { wd:Q246863 wdt:P710 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Livonian War', 'p': 'participant', 'o': '$y0'}}

 Q: Does the short term exposure limit of benzene get greater than 2.4?
 SPARQL: ASK WHERE { wd:Q2270 wdt:P2407 ?obj filter(?obj > 2.4) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'benzene', 'p': 'short-term exposure limit', 'o': '?x0', '?x0': '2.4'}

 Q: What is the CPU with the fastest FSB speed?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5300 . ?ent wdt:P2150 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'FSB speed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'CPU'}}

 Q: Are Kelsey and Allen given names of Kelsey Grammer?
 SPARQL: ASK WHERE { wd:Q196560 wdt:P735 wd:Q16277805 . wd:Q196560 wdt:P735 wd:Q18118122 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kelsey Grammer', 'p': 'given name', 'o': '?x0', '?x0': 'Kelsey'}, {'h': 'IS', 'v': '?x1', 's': 'Kelsey Grammer', 'p': 'given name', 'o': '?x1', '?x1': 'Allen'}]

 Q: What is the {flag} for {applies to jurisdiction} of {Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q220 . ?sbj wdt:P31 wd:Q14660 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flag'}}

 Q: What is UIC numerical country code for Albania ?
 SPARQL: select distinct ?answer where { wd:Q222 wdt:P2982 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albania', 'p': 'UIC numerical country code', 'o': '?x0'}

 Q: What is Bill Falkinder's branch mascot?
 SPARQL: SELECT ?answer WHERE { wd:Q4908944 wdt:P241 ?X . ?X wdt:P822 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mascot', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bill Falkinder', 'p': 'branch', 'o': '$y0'}}

 Q: Is it true that the mean lifetime of W or Z boson equals to 0.0000000000000000000000003?
 SPARQL: ASK WHERE { wd:Q211922 wdt:P2645 ?obj filter(?obj = 0.0000000000000000000000003) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'W or Z boson', 'p': 'mean lifetime', 'o': '?x0', '?x0': '0.0000000000000000000000003'}

 Q: What river is a tributary for the Hertfordshire?
 SPARQL:  select distinct ?obj where { wd:Q3410 wdt:P974 ?obj . ?obj wdt:P31 wd:Q4022 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hertfordshire', 'p': 'tributary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'river'}}

 Q: What is the name of the garrison sister town of Charles University in Prague?
 SPARQL: SELECT ?answer WHERE { wd:Q31519 wdt:P159 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles University', 'p': 'garrison', 'o': '$y0'}}

 Q: Where is the location of birth of Antónia Ferreira subdivided into Galafura e Covelinhas?
 SPARQL: SELECT ?answer WHERE { wd:Q591755 wdt:P19 ?answer . ?answer wdt:P150 wd:Q25438947}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Antónia Ferreira', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Galafura e Covelinhas'}}

 Q: Was Andy Kaufman a comedian and showman for an occupation?
 SPARQL: ASK WHERE { wd:Q299983 wdt:P106 wd:Q245068 . wd:Q299983 wdt:P106 wd:Q355242 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Andy Kaufman', 'p': 'occupation', 'o': '?x0', '?x0': 'comedian'}, {'h': 'IS', 'v': '?x1', 's': 'Andy Kaufman', 'p': 'occupation', 'o': '?x1', '?x1': 'showman'}]

 Q: What is the {literary character} for {narrator} of {On the Road}
 SPARQL:  select distinct ?obj where { wd:Q743180 wdt:P2438 ?obj . ?obj wdt:P31 wd:Q3658341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'On the Road', 'p': 'narrator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary character'}}

 Q: For what award was Jo Van Fleet nominated for in 1958?
 SPARQL: SELECT ?obj WHERE { wd:Q233832 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1958')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jo Van Fleet', 'p': 'nominated for', 'o': '?x0', 't': '1958'}

 Q: What is {position held} of {Philip Noel-Baker, Baron Noel-Baker} that is {end time} is {1964-9-25} ?
 SPARQL: SELECT ?obj WHERE { wd:Q211856 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1964')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Philip Noel-Baker, Baron Noel-Baker', 'p': 'position held', 'o': '?x0', 't': '1964'}

 Q: Who was the chairman of the event producer in the 2017 Masters?
 SPARQL: SELECT ?answer WHERE { wd:Q28114247 wdt:P664 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chair', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '2017 Masters', 'p': 'event producer', 'o': '$y0'}}

 Q: what is the {start time} for {Alan García} has {position held} as {President of Peru} ?
 SPARQL: SELECT ?value WHERE { wd:Q167211 p:P39 ?s . ?s ps:P39 wd:Q5708511 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan García', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Peru'}}}

 Q: In Exodus, a mountain serves as a narrative location--where is it?
 SPARQL:  select distinct ?obj where { wd:Q9190 wdt:P840 ?obj . ?obj wdt:P31 wd:Q8502 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Exodus', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mountain'}}

 Q: Is the boiling point of eicosane equal to 344.1?
 SPARQL: ASK WHERE { wd:Q150925 wdt:P2102 ?obj filter(?obj = 344.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'eicosane', 'p': 'boiling point', 'o': '?x0', '?x0': '344.1'}

 Q: What is the {barque} with the {MAX(number of masts)} whose {instance of} is {barque}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q216057 . ?ent wdt:P1099 ?obj . ?ent wdt:P31 wd:Q216057 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of masts', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'barque'}}

 Q: What is {found in species} of {methanol}, that has {common name} is {Manusia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14982 wdt:P703 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Manusia'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'methanol', 'p': 'found in species', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'common name', 'o': 'manusia'}}

 Q: what is the {end time} for {Saxony-Anhalt} has {head of government} as {Reinhard Höppner} ?
 SPARQL: SELECT ?value WHERE { wd:Q1206 p:P6 ?s . ?s ps:P6 wd:Q78414 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saxony-Anhalt', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Reinhard Höppner'}}}

 Q: What is {date of death} and {date of birth} of {{Philip II of France} has {child} as {Philip I}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q34428 p:P40 ?s . ?s ps:P40 wd:Q19007 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'death date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip II of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Philip I'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip II of France', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Philip I'}}}]

 Q: Which commemorative coin with the lowest face value is made of gold?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q855973 . ?ent wdt:P3934 ?obj . ?ent wdt:P186 wd:Q897} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'face value', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'commemorative coin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'made of', 'o': 'gold'}}}

 Q: What is the {departmental council} for {legislative body} of {Paris}
 SPARQL:  select distinct ?obj where { wd:Q90 wdt:P194 ?obj . ?obj wdt:P31 wd:Q19758733 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paris', 'p': 'legislative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'departmental council'}}

 Q: Who did Anna of Russia marry on 1710-11-11?
 SPARQL: SELECT ?obj WHERE { wd:Q160165 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1710')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anna of Russia', 'p': 'marry', 'o': '?x0', 't': '1710'}

 Q: Is the IPA number order of the voiced bilabial nasal less than 136.8?
 SPARQL: ASK WHERE { wd:Q201817 wdt:P3917 ?obj filter(?obj < 136.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'voiced bilabial nasal', 'p': 'IPA number order', 'o': '?x0', '?x0': '136.8'}

 Q: What publisher has population  as 122728  for Monza ?
 SPARQL: SELECT ?value WHERE { wd:Q6252 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'122728')) . ?s pq:P123 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Monza', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '122728'}}}

 Q: What is <PSA World Tour ID> of <Nicol David> ?
 SPARQL: select distinct ?answer where { wd:Q867189 wdt:P3476 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nicol David', 'p': 'PSA World Tour ID', 'o': '?x0'}

 Q: what is the {start time} for {Dennis Lillee} has {member of sports team} as {Tasmania cricket team} ?
 SPARQL: SELECT ?value WHERE { wd:Q1189313 p:P54 ?s . ?s ps:P54 wd:Q1133545 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dennis Lillee', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Tasmania cricket team'}}}

 Q: What is the exhibition history of Pomona College?
 SPARQL: select distinct ?answer where { ?answer wdt:P608 wd:Q7227384}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'exhibition history', 'o': 'Pomona College'}

 Q: What are the rock band which start with the letter yellowcard
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5741069 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yellowcard')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rock band'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yellowcard'}}

 Q: What is the {music award} for {winner} of {Loretta Lynn}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1346 wd:Q272931 . ?sbj wdt:P31 wd:Q1364556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Loretta Lynn', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music award'}}

 Q: What is the {human} for {partner} of {Johann Wolfgang von Goethe}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P451 wd:Q5879 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partner', 'o': 'Johann Wolfgang von Goethe', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the death location of Saul on the continent of Asia?
 SPARQL: SELECT ?answer WHERE { wd:Q28730 wdt:P20 ?answer . ?answer wdt:P30 wd:Q48}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saul', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'continent', 'o': 'Asia'}}

 Q: What is {advisor} of {inventor of} of {Titan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2565 wdt:P61 ?X . ?X wdt:P184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Titan', 'p': 'inventor', 'o': '$y0'}}

 Q: What is {champion} of {awarded} of {Jan Tinbergen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q183181 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'champion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jan Tinbergen', 'p': 'award', 'o': '$y0'}}

 Q: What is the {monocation} for {conjugate base} of {ammonia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4149 wd:Q4087 . ?sbj wdt:P31 wd:Q55523831 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate base', 'o': 'ammonia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monocation'}}

 Q: What is <Freebase ID> of <Niall Ferguson> ?
 SPARQL: select distinct ?answer where { wd:Q377638 wdt:P646 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Niall Ferguson', 'p': 'Freebase ID', 'o': '?x0'}

 Q: What is the {position} for {country} of {Kingdom of Wessex}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q105313 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Kingdom of Wessex', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: what is the {series ordinal} for {Ernesto Samper} has {position held} as {Secretary General of the Non-Aligned Movement} ?
 SPARQL: SELECT ?value WHERE { wd:Q365427 p:P39 ?s . ?s ps:P39 wd:Q15647601 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ernesto Samper', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Secretary General of the Non-Aligned Movement'}}}

 Q: What is {date of birth} and {father} of {{Joseph Stalin} has {child} as {Artem Sergeev}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 wd:Q4416801 . ?s pq:P569 ?value1 . ?s pq:P22 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Artem Sergeev'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'father', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Artem Sergeev'}}}]

 Q: What is the {non-positive integer} for {opposite of} of {0}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P461 wd:Q204 . ?sbj wdt:P31 wd:Q47371099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'o', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'non-positive integer'}}

 Q: Which is the World Series of Poker ID of Phil Hellmuth?
 SPARQL: select distinct ?answer where { wd:Q375966 wdt:P3554 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phil Hellmuth', 'p': 'World Series of Poker ID', 'o': '?x0'}

 Q: who aircraft family for item operated of Air India?
 SPARQL:  select distinct ?obj where { wd:Q69906 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Air India', 'p': 'item operated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: What is the {G-type main-sequence star} for {child astronomical body} of {Jupiter}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q319 . ?sbj wdt:P31 wd:Q5864 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Jupiter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: What is the {monoanion} for {conjugate acid} of {phenol}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4147 wd:Q130336 . ?sbj wdt:P31 wd:Q55523986 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conjugate acid', 'o': 'phenol', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monoanion'}}

 Q: What is {treatment} of {hepatitis C}, that has {SMILES} is {C1=NC(=NN1C2C(C(C(O2)CO)O)O)C(=O)N} ?
 SPARQL: SELECT ?answer WHERE { wd:Q154869 wdt:P2176 ?answer . ?answer wdt:P233 ?x FILTER(contains(?x,'C1=NC(=NN1C2C(C(C(O2)CO)O)O)C(=O)N'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'hepatitis C', 'p': 'treatment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'SMILES', 'o': 'c1=nc(=nn1c2c(c(c(o2)co)o)o)c(=o)n'}}

 Q: What is the {human} for {film editor} of {The Birth of a Nation}
 SPARQL:  select distinct ?obj where { wd:Q220394 wdt:P1040 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Birth of a Nation', 'p': 'film editor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What are the civil code which start with the letter code
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1923776 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'code')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'civil code'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'code'}}

 Q: Is it true that the total reserves of Denmark equal 75391898443?
 SPARQL: ASK WHERE { wd:Q35 wdt:P2134 ?obj filter(?obj = 75391898443) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Denmark', 'p': 'total reserves', 'o': '?x0', '?x0': '75391898443'}

 Q: Name a song composed by Pete Townshend.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q26933 . ?sbj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composed by', 'o': 'Pete Townshend', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: Claude Monet belonged to which art movement?
 SPARQL:  select distinct ?obj where { wd:Q296 wdt:P135 ?obj . ?obj wdt:P31 wd:Q968159 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Claude Monet', 'p': 'movement', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art movement'}}

 Q: What Ghost in the Shell character was voiced by actor Kōichi Yamadera?
 SPARQL: SELECT ?value WHERE { wd:Q1066948 p:P725 ?s . ?s ps:P725 wd:Q333194 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'as', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ghost in the Shell', 'p': 'voiced by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'voiced by', 'o': 'Kōichi Yamadera'}}}

 Q: Who is the {tilting train} for {item operated} of {Amtrak}
 SPARQL:  select distinct ?obj where { wd:Q23239 wdt:P121 ?obj . ?obj wdt:P31 wd:Q671188 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amtrak', 'p': 'item operated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tilting train'}}

 Q: What is {work location} of {Yayoi Kusama} that is {end time} is {2015-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q231121 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yayoi Kusama', 'p': 'work location', 'o': '?x0', 't': '2015'}

 Q: Who was Galileo Galilei's employer in 1592?
 SPARQL: SELECT ?obj WHERE { wd:Q307 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1592')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Galileo Galilei', 'p': 'employer', 'o': '?x0', 't': '1592'}

 Q: what is the {for work} for {Joss Whedon} has {nominated for} as {Nebula Award for Best Script} ?
 SPARQL: SELECT ?value WHERE { wd:Q298025 p:P1411 ?s . ?s ps:P1411 wd:Q644077 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joss Whedon', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nebula Award for Best Script'}}}

 Q: What is the {aspect of history} that {follows} {apartheid}?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P155 wd:Q11409 . ?sbj wdt:P31 wd:Q17524420 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'apartheid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of history'}}

 Q: What is the {transcontinental country} for {cause of destruction} of {October Revolution}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P770 wd:Q42976 . ?sbj wdt:P31 wd:Q1323642 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of destruction', 'o': 'October Revolution', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'transcontinental country'}}

 Q: the {inception} of {Uffizi} that is {end time} is {1580-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51252 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1580')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Uffizi', 'p': 'inception', 'o': '?x0', 't': '1580'}

 Q: What is {followed by} and {follows} of {{The Godfather Part II} has {series} as {Godfather trilogy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q184768 p:P179 ?s . ?s ps:P179 wd:Q3225260 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Godfather Part II', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Godfather trilogy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Godfather Part II', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Godfather trilogy'}}}]

 Q: Tell me the end time for Federal Republic of Central America has capital as Sonsonate ?
 SPARQL: SELECT ?value WHERE { wd:Q190025 p:P36 ?s . ?s ps:P36 wd:Q1014248 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Federal Republic of Central America', 'p': 'capital', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital', 'o': 'Sonsonate'}}}

 Q: What is the {film} for {screenwriter} of {Mike Myers}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P58 wd:Q185724 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'screenwriter', 'o': 'Mike Myers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: Which is the Elle.fr person ID of Miranda Kerr?
 SPARQL: select distinct ?answer where { wd:Q127454 wdt:P3812 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Miranda Kerr', 'p': 'Elle.fr person ID', 'o': '?x0'}

 Q: Which is the PCP reference number of Kunsthaus Zürich?
 SPARQL: select distinct ?answer where { wd:Q685038 wdt:P381 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kunsthaus Zürich', 'p': 'PCP reference number', 'o': '?x0'}

 Q: What is the { criterion used } for { pole vault } { record held } as { Eliza McCartney }?
 SPARQL: SELECT ?value WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q18011042 . ?s pq:P1013 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'criterion used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Eliza McCartney'}}}

 Q: What is {artistic genre} of {part of series} of {The Bachelor, season 18} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15706907 wdt:P179 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Bachelor, season 18', 'p': 'part of the series', 'o': '$y0'}}

 Q: Does Tarek Amouri has 63 national team caps?
 SPARQL: ASK WHERE { wd:Q16020996 wdt:P1129 ?obj filter(?obj = 63) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Tarek Amouri', 'p': 'national team caps', 'o': '?x0', '?x0': '63'}

 Q: What is {spouses} of {painter} of {Glorious victory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21512830 wdt:P170 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'spouse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glorious victory', 'p': 'painter', 'o': '$y0'}}

 Q: Who is the leader of party membership for Martin Dinha?
 SPARQL: SELECT ?answer WHERE { wd:Q6775305 wdt:P102 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'leader', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martin Dinha', 'p': 'party', 'o': '$y0'}}

 Q: What is {number of out of school children} of {based in} of {South Island} ?
 SPARQL: SELECT ?answer WHERE { wd:Q120755 wdt:P131 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'South Island', 'p': 'in', 'o': '$y0'}}

 Q: What award did Maggie Smith win on 4/9/1979?
 SPARQL: SELECT ?obj WHERE { wd:Q172653 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maggie Smith', 'p': 'award', 'o': '?x0', 't': '1979'}

 Q: What is Julian Assange's occupant's embassy?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P466 wd:Q360 . ?sbj wdt:P31 wd:Q3917681 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'occupant', 'o': 'Julian Assange', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'embassy'}}

 Q: What is the {station located underground} with the {MAX(number of platform tracks)} whose {country} is {Finland}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22808403 . ?ent wdt:P1103 ?obj . ?ent wdt:P17 wd:Q33 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of platform tracks', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'station located underground', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'land', 'o': 'Finland'}}}

 Q: What is the {brand} for {manufacturer} of {The Coca-Cola Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q3295867 . ?sbj wdt:P31 wd:Q431289 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Coca-Cola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'brand'}}

 Q: What borders the Hamadan Province that has acreage totalling 29127.0?
 SPARQL: SELECT ?answer WHERE { wd:Q187373 wdt:P47 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'29137.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hamadan Province', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'acreage', 'o': '29137.0'}}

 Q: What is {pressure} and {phase of matter} of {{water} has {phase point} as {triple point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q106410 . ?s pq:P2077 ?value1 . ?s pq:P515 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase of matter', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}]

 Q: What is the asteroid with the highest longitude of ascending node whose site of astronomical discovery is Vienna Observatory?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3863 . ?ent wdt:P2213 ?obj . ?ent wdt:P65 wd:Q532127 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'longitude of ascending node', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'asteroid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'site of astronomical discovery', 'o': 'Vienna Observatory'}}}

 Q: Is the distance from earth to the Messier 107 20,550?
 SPARQL: ASK WHERE { wd:Q4755 wdt:P2583 ?obj filter(?obj = 20550) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Messier 107', 'p': 'distance from Earth', 'o': '?x0', '?x0': '20550'}

 Q: Is the bore Mitsubishi Kinsei equal to 140?
 SPARQL: ASK WHERE { wd:Q2723523 wdt:P2556 ?obj filter(?obj = 140) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Kinsei', 'p': 'bore', 'o': '?x0', '?x0': '140'}

 Q: Did {Prague} {twinned administrative body} {Hamburg} and {Miami-Dade County} ?
 SPARQL: ASK WHERE { wd:Q1085 wdt:P190 wd:Q1055 . wd:Q1085 wdt:P190 wd:Q468557 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Prague', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Hamburg'}, {'h': 'IS', 'v': '?x1', 's': 'Prague', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Miami-Dade County'}]

 Q: What series of silicate minerals is named after Ernest H. Nickel?
 SPARQL: SELECT ?answer WHERE { wd:Q178977 wdt:P179 ?answer . ?answer wdt:P138 wd:Q1356348}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'silicate mineral', 'p': 'series', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Ernest H. Nickel'}}

 Q: What is the {league} and the {position played on team / speciality} of {Michael_Owen} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q128829 wdt:P118 ?ans_1 . wd:Q128829 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Michael Owen', 'p': 'league', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Michael Owen', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: Tell me about occupation of Bettie Page and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q61898 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'occupation', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'occupation', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'occupation', 'o': '$y0'}}]

 Q: How many narrators are in Dracula?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q41542 wdt:P2438 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Dracula', 'p': 'narrator', 'o': '?x0'}

 Q: What is the {archaeological site} for {capital} of {Achaemenid Empire}
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P36 ?obj . ?obj wdt:P31 wd:Q839954 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site'}}

 Q: what is the {point in time} for {Tim Hunt} has {award received} as {Croonian Lecture} ?
 SPARQL: SELECT ?value WHERE { wd:Q309977 p:P166 ?s . ?s ps:P166 wd:Q1192912 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tim Hunt', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Croonian Lecture'}, 't': '?x0'}

 Q: Which is legislative body of Cook Islands?
 SPARQL: select distinct ?answer where { wd:Q26988 wdt:P194 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cook Islands', 'p': 'legislative body', 'o': '?x0'}

 Q: What mechanical property of materials starts with the letter "y"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5725005 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mechanical property of materials'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Which 3D film was Sarah Silverman a voice actor for?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q229013 . ?sbj wdt:P31 wd:Q229390 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Sarah Silverman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '3D film'}}

 Q: Give me {republic} that {official religion} {Catholicism} and which that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7270 . ?sbj wdt:P3075 wd:Q1841 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official religion', 'o': 'Catholicism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: Name a Roman province located in the Roman Empire.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q2277 . ?sbj wdt:P31 wd:Q182547 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Roman province'}}

 Q: What is {working on what?} of {Galactic astronomy}, that has {child body} is {Boötes II} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58908 wdt:P2578 ?answer . ?answer wdt:P398 wd:Q2483957}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'galactic astronomy', 'p': 'working on what?', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child body', 'o': 'Boötes II'}}

 Q: Which {streak color} is {solid solution series with} of {fayalite} ?
 SPARQL: SELECT ?answer WHERE { wd:Q411130 wdt:P2155 ?X . ?X wdt:P534 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'streak color', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'fayalite', 'p': 'solid solution series with', 'o': '$y0'}}

 Q: What is {date of birth} and {date of death} of {{Pedro I} has {child} as {Princess Maria Amélia of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q235815 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Maria Amélia of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Maria Amélia of Brazil'}}}]

 Q: When did Newfoundland and Labrador have a population of 519716 people?
 SPARQL: SELECT ?value WHERE { wd:Q2003 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'519716.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Newfoundland and Labrador', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '519716.0'}, 't': '?x0'}

 Q: What is {capable of inhibiting or preventing pathological process} of {prescribed drug} of {inflammation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q101991 wdt:P2176 ?X . ?X wdt:P2175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capable of inhibiting or preventing pathological process', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'inflammation', 'p': 'prescribed drug', 'o': '$y0'}}

 Q: what is the {point in time} for {The Band} has {award received} as {Canadian Music Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q600344 p:P166 ?s . ?s ps:P166 wd:Q3362499 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'The Band', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Canadian Music Hall of Fame'}, 't': '?x0'}

 Q: Which is the Phasmida Species File ID for Phasmatodea?
 SPARQL: select distinct ?answer where { wd:Q188029 wdt:P4855 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phasmatodea', 'p': 'Phasmida Species File ID', 'o': '?x0'}

 Q: What is {symbol} of {measure of} of {ångström} ?
 SPARQL: SELECT ?answer WHERE { wd:Q81454 wdt:P111 ?X . ?X wdt:P416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'angstrom', 'p': 'measure of', 'o': '$y0'}}

 Q: What was Davor Šuker's team in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q189217 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Davor Šuker', 'p': 'team', 'o': '?x0', 't': '1996'}

 Q: Who is the person that was student of Gottfried Wilhelm Leibniz?
 SPARQL:  select distinct ?obj where { wd:Q9047 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gottfried Wilhelm Leibniz', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is the {taxon} for {natural product of taxon} of {opium}
 SPARQL:  select distinct ?obj where { wd:Q46452 wdt:P1582 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'opium', 'p': 'natural product of taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is {taxon parent} of {has causes} of {wound botulism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18553251 wdt:P828 ?X . ?X wdt:P171 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'taxon parent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'wound botulism', 'p': 'cause', 'o': '$y0'}}

 Q: Which is Louisiana Sports Hall of Fame ID for Terry Bradshaw?
 SPARQL: select distinct ?answer where { wd:Q633263 wdt:P4367 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Terry Bradshaw', 'p': 'Louisiana Sports Hall of Fame ID', 'o': '?x0'}

 Q: What is from Dungeons & Dragons' fictional universe?
 SPARQL: select distinct ?answer where { ?answer wdt:P1080 wd:Q1375}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'universe', 'o': 'Dungeons & Dragons'}

 Q: Tell me a {character encoding} whinch includes the word {yuscii} in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q184759 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuscii')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character encoding'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yuscii'}}

 Q: What is {prime minister} of {comes from} of {Barefoot Gen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4347 wdt:P495 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prime minister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barefoot Gen', 'p': 'comes from', 'o': '$y0'}}

 Q: What is {subitem of} of {history of Barbados}, that has {diplomatic relation} is {Nigeria} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2206741 wdt:P1269 ?answer . ?answer wdt:P530 wd:Q1033}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Barbados', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Nigeria'}}

 Q: What is long  lives in  John Keats ?
 SPARQL: SELECT ?answer WHERE { wd:Q82083 wdt:P551 ?X . ?X wdt:P2043 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'long', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Keats', 'p': 'lives in', 'o': '$y0'}}

 Q: What is {desired outcome} of {remake of} of {Half Moon replica} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42173625 wdt:P144 ?X . ?X wdt:P3712 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'desired outcome', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Half Moon replica', 'p': 'remake of', 'o': '$y0'}}

 Q: What are the form factor which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24574728 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'form factor'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What writer, born in Hamburg, wrote Curious George?
 SPARQL: SELECT ?answer WHERE { wd:Q5194776 wdt:P50 ?answer . ?answer wdt:P19 wd:Q1055}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Curious George', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Hamburg'}}

 Q: What is {year created} of {published by} of {The Funnies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1645141 wdt:P123 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'created', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Funnies', 'p': 'published by', 'o': '$y0'}}

 Q: Is the enthalpy of vaporization of nitric acid 46.92?
 SPARQL: ASK WHERE { wd:Q83320 wdt:P2116 ?obj filter(?obj = 46.92) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'nitric acid', 'p': 'enthalpy of vaporization', 'o': '?x0', '?x0': '46.92'}

 Q: Name the door commissioned by Frederick William II of Prussia that contains the word " brandenburg" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q36794 . ?sbj wdt:P88 wd:Q152229 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'brandenburg')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'door', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'Frederick William II of Prussia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'brandenburg'}}

 Q: What is {award received} of {Cherry Jones} that is {statement is subject of} is {49th Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q239046 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q4638847 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cherry Jones', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '49th Tony Awards'}}}

 Q: Alexander McQueen is the employer of what fashion label?
 SPARQL:  select distinct ?obj where { wd:Q207939 wdt:P108 ?obj . ?obj wdt:P31 wd:Q1618899 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander McQueen', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fashion label'}}

 Q: What is {nomination received} of {discoverer or inventor of} of {oscilloscope} ?
 SPARQL: SELECT ?answer WHERE { wd:Q174320 wdt:P61 ?X . ?X wdt:P1411 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nomination received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'oscilloscope', 'p': 'inventor', 'o': '$y0'}}

 Q: Who was married to Walter Sickert in 1911?
 SPARQL: SELECT ?obj WHERE { wd:Q703369 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1911')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Walter Sickert', 'p': 'married to', 'o': '?x0', 't': '1911'}

 Q: What is {end time} and {start time} of {{Park Geun-hye} has {educated at} as {Sacred Heart Girls' High School}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q138048 p:P69 ?s . ?s ps:P69 wd:Q21577152 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': "Sacred Heart Girls' High School"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': "Sacred Heart Girls' High School"}}}]

 Q: What is the {video game publisher} for {manufacturer} of {Commodore 64}
 SPARQL:  select distinct ?obj where { wd:Q99775 wdt:P176 ?obj . ?obj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Commodore 64', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: Tell me about occupation of Bettie Page and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q61898 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'occupation', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'occupation', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'occupation', 'o': '$y0'}}]

 Q: How many narrators are in Dracula?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q41542 wdt:P2438 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Dracula', 'p': 'narrator', 'o': '?x0'}

 Q: What is the {archaeological site} for {capital} of {Achaemenid Empire}
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P36 ?obj . ?obj wdt:P31 wd:Q839954 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site'}}

 Q: what is the {point in time} for {Tim Hunt} has {award received} as {Croonian Lecture} ?
 SPARQL: SELECT ?value WHERE { wd:Q309977 p:P166 ?s . ?s ps:P166 wd:Q1192912 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tim Hunt', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Croonian Lecture'}, 't': '?x0'}

 Q: Which is legislative body of Cook Islands?
 SPARQL: select distinct ?answer where { wd:Q26988 wdt:P194 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cook Islands', 'p': 'legislative body', 'o': '?x0'}

 Q: What mechanical property of materials starts with the letter "y"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5725005 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mechanical property of materials'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Which 3D film was Sarah Silverman a voice actor for?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q229013 . ?sbj wdt:P31 wd:Q229390 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Sarah Silverman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '3D film'}}

 Q: Give me {republic} that {official religion} {Catholicism} and which that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7270 . ?sbj wdt:P3075 wd:Q1841 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'official religion', 'o': 'Catholicism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: Name a Roman province located in the Roman Empire.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q2277 . ?sbj wdt:P31 wd:Q182547 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Roman province'}}

 Q: What is {working on what?} of {Galactic astronomy}, that has {child body} is {Boötes II} ?
 SPARQL: SELECT ?answer WHERE { wd:Q58908 wdt:P2578 ?answer . ?answer wdt:P398 wd:Q2483957}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'galactic astronomy', 'p': 'working on what?', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child body', 'o': 'Boötes II'}}

 Q: Which {streak color} is {solid solution series with} of {fayalite} ?
 SPARQL: SELECT ?answer WHERE { wd:Q411130 wdt:P2155 ?X . ?X wdt:P534 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'streak color', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'fayalite', 'p': 'solid solution series with', 'o': '$y0'}}

 Q: What is {date of birth} and {date of death} of {{Pedro I} has {child} as {Princess Maria Amélia of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q235815 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Maria Amélia of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Maria Amélia of Brazil'}}}]

 Q: When did Newfoundland and Labrador have a population of 519716 people?
 SPARQL: SELECT ?value WHERE { wd:Q2003 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'519716.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Newfoundland and Labrador', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '519716.0'}, 't': '?x0'}

 Q: What is {capable of inhibiting or preventing pathological process} of {prescribed drug} of {inflammation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q101991 wdt:P2176 ?X . ?X wdt:P2175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'capable of inhibiting or preventing pathological process', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'inflammation', 'p': 'prescribed drug', 'o': '$y0'}}

 Q: what is the {point in time} for {The Band} has {award received} as {Canadian Music Hall of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q600344 p:P166 ?s . ?s ps:P166 wd:Q3362499 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'The Band', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Canadian Music Hall of Fame'}, 't': '?x0'}

 Q: Which is the Phasmida Species File ID for Phasmatodea?
 SPARQL: select distinct ?answer where { wd:Q188029 wdt:P4855 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phasmatodea', 'p': 'Phasmida Species File ID', 'o': '?x0'}

 Q: What is {symbol} of {measure of} of {ångström} ?
 SPARQL: SELECT ?answer WHERE { wd:Q81454 wdt:P111 ?X . ?X wdt:P416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'symbol', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'angstrom', 'p': 'measure of', 'o': '$y0'}}

 Q: What was Davor Šuker's team in 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q189217 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Davor Šuker', 'p': 'team', 'o': '?x0', 't': '1996'}

 Q: Who is the person that was student of Gottfried Wilhelm Leibniz?
 SPARQL:  select distinct ?obj where { wd:Q9047 wdt:P1066 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gottfried Wilhelm Leibniz', 'p': 'student of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is the {taxon} for {natural product of taxon} of {opium}
 SPARQL:  select distinct ?obj where { wd:Q46452 wdt:P1582 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'opium', 'p': 'natural product of taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is {taxon parent} of {has causes} of {wound botulism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18553251 wdt:P828 ?X . ?X wdt:P171 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'taxon parent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'wound botulism', 'p': 'cause', 'o': '$y0'}}

 Q: Which is Louisiana Sports Hall of Fame ID for Terry Bradshaw?
 SPARQL: select distinct ?answer where { wd:Q633263 wdt:P4367 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Terry Bradshaw', 'p': 'Louisiana Sports Hall of Fame ID', 'o': '?x0'}

 Q: What is from Dungeons & Dragons' fictional universe?
 SPARQL: select distinct ?answer where { ?answer wdt:P1080 wd:Q1375}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'universe', 'o': 'Dungeons & Dragons'}

 Q: Tell me a {character encoding} whinch includes the word {yuscii} in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q184759 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuscii')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character encoding'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yuscii'}}

 Q: What is {prime minister} of {comes from} of {Barefoot Gen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4347 wdt:P495 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prime minister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barefoot Gen', 'p': 'comes from', 'o': '$y0'}}

 Q: What is {subitem of} of {history of Barbados}, that has {diplomatic relation} is {Nigeria} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2206741 wdt:P1269 ?answer . ?answer wdt:P530 wd:Q1033}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Barbados', 'p': 'subitem of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Nigeria'}}

 Q: What is long  lives in  John Keats ?
 SPARQL: SELECT ?answer WHERE { wd:Q82083 wdt:P551 ?X . ?X wdt:P2043 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'long', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Keats', 'p': 'lives in', 'o': '$y0'}}

 Q: What is {desired outcome} of {remake of} of {Half Moon replica} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42173625 wdt:P144 ?X . ?X wdt:P3712 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'desired outcome', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Half Moon replica', 'p': 'remake of', 'o': '$y0'}}

 Q: What are the form factor which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24574728 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'form factor'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What writer, born in Hamburg, wrote Curious George?
 SPARQL: SELECT ?answer WHERE { wd:Q5194776 wdt:P50 ?answer . ?answer wdt:P19 wd:Q1055}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Curious George', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Hamburg'}}

 Q: What is {year created} of {published by} of {The Funnies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1645141 wdt:P123 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'created', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Funnies', 'p': 'published by', 'o': '$y0'}}

 Q: Is the enthalpy of vaporization of nitric acid 46.92?
 SPARQL: ASK WHERE { wd:Q83320 wdt:P2116 ?obj filter(?obj = 46.92) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'nitric acid', 'p': 'enthalpy of vaporization', 'o': '?x0', '?x0': '46.92'}

 Q: Name the door commissioned by Frederick William II of Prussia that contains the word " brandenburg" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q36794 . ?sbj wdt:P88 wd:Q152229 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'brandenburg')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'door', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'Frederick William II of Prussia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'brandenburg'}}

 Q: What is {award received} of {Cherry Jones} that is {statement is subject of} is {49th Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q239046 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q4638847 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cherry Jones', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '49th Tony Awards'}}}

 Q: Alexander McQueen is the employer of what fashion label?
 SPARQL:  select distinct ?obj where { wd:Q207939 wdt:P108 ?obj . ?obj wdt:P31 wd:Q1618899 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander McQueen', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fashion label'}}

 Q: What is {nomination received} of {discoverer or inventor of} of {oscilloscope} ?
 SPARQL: SELECT ?answer WHERE { wd:Q174320 wdt:P61 ?X . ?X wdt:P1411 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nomination received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'oscilloscope', 'p': 'inventor', 'o': '$y0'}}

 Q: Who was married to Walter Sickert in 1911?
 SPARQL: SELECT ?obj WHERE { wd:Q703369 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1911')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Walter Sickert', 'p': 'married to', 'o': '?x0', 't': '1911'}

 Q: What is {end time} and {start time} of {{Park Geun-hye} has {educated at} as {Sacred Heart Girls' High School}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q138048 p:P69 ?s . ?s ps:P69 wd:Q21577152 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': "Sacred Heart Girls' High School"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': "Sacred Heart Girls' High School"}}}]

 Q: What is the {video game publisher} for {manufacturer} of {Commodore 64}
 SPARQL:  select distinct ?obj where { wd:Q99775 wdt:P176 ?obj . ?obj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Commodore 64', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: Which {coat of arms} {is in the administrative region of} of {Western Canada} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1145847 wdt:P131 ?X . ?X wdt:P237 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coat of arms', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Western Canada', 'p': 'is in the administrative region of', 'o': '$y0'}}

 Q: What is playing hand of Novak Djokovic ?
 SPARQL: select distinct ?answer where { wd:Q5812 wdt:P741 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Novak Djokovic', 'p': 'playing hand', 'o': '?x0'}

 Q: What is <FAI ID> of <Neil Armstrong> ?
 SPARQL: select distinct ?answer where { wd:Q1615 wdt:P4556 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Neil Armstrong', 'p': 'FAI ID', 'o': '?x0'}

 Q: What is the patronym or matronym for Vladimir Putin's name?
 SPARQL: select distinct ?answer where { wd:Q7747 wdt:P2976 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Putin', 'p': 'patronym', 'o': '?x0'}

 Q: What is the sister city of Bethlehem with a surface area of 17236.0?
 SPARQL: SELECT ?answer WHERE { wd:Q5776 wdt:P190 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'17236.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bethlehem', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area', 'o': '17236.0'}}

 Q: What is the {gazetteer} with the {MIN(number of records)} whose {Wikidata property} is {Bulgarian Antarctic Gazetteer ID}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1006160 . ?ent wdt:P4876 ?obj . ?ent wdt:P1687 wd:P5388} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of records', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gazetteer', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Wikidata property', 'o': 'Bulgarian Antarctic Gazetteer ID'}}}

 Q: Name the submarine power cable with the least throughput whose CEO is Nasos Ktorides
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4117949 . ?ent wdt:P2957 ?obj . ?ent wdt:P169 wd:Q47459088} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'throughput', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'submarine power cable', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Nasos Ktorides'}}}

 Q: Tell me horse breed  whose name has the word zangersheide in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1160573 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zangersheide')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'horse breed'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zangersheide'}}

 Q: what is the {start time} for {Luc Besson} has {spouse} as {Milla Jovovich} ?
 SPARQL: SELECT ?value WHERE { wd:Q484779 p:P26 ?s . ?s ps:P26 wd:Q170576 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Luc Besson', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Milla Jovovich'}}}

 Q: What is the {sexual orientation} and the {sex or gender} of {Deadpool} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1631090 wdt:P91 ?ans_1 . wd:Q1631090 wdt:P21 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Deadpool', 'p': 'sexual orientation', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Deadpool', 'p': 'sex or gender', 'o': '?x1'}]

 Q: What is the {business} for {member of sports team} of {Zinedine Zidane}
 SPARQL:  select distinct ?obj where { wd:Q1835 wdt:P54 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zinedine Zidane', 'p': 'member of sports team', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Tell me about talk show for presenter of Ellen DeGeneres?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q483325 . ?sbj wdt:P31 wd:Q622812 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talk show'}}

 Q: what is the {end time} for {George Harrison} has {part of} as {The Beatles} ?
 SPARQL: SELECT ?value WHERE { wd:Q2643 p:P361 ?s . ?s ps:P361 wd:Q1299 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Harrison', 'p': 'part of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'part of', 'o': 'Beatles'}}}

 Q: What is the {ruins} for {patron saint} of {Anthony of Padua}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P417 wd:Q167477 . ?sbj wdt:P31 wd:Q109607 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patron saint', 'o': 'Anthony of Padua', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ruins'}}

 Q: What is the {dominion of the British Empire} for {country} of {Wellington}
 SPARQL:  select distinct ?obj where { wd:Q23661 wdt:P17 ?obj . ?obj wdt:P31 wd:Q223832 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wellington', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dominion of the British Empire'}}

 Q: What is list of characters from narrative of Mario ?
 SPARQL: SELECT ?answer WHERE { wd:Q12379 wdt:P1441 ?X . ?X wdt:P1881 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'list of characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mario', 'p': 'from narrative', 'o': '$y0'}}

 Q: Which films did screenwriter Andrew Lloyd Webber produce?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P58 wd:Q180975 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'screenwriter', 'o': 'Andrew Lloyd Webber', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the {anime} for {language of work or name} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q5287 . ?sbj wdt:P31 wd:Q1107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anime'}}

 Q: What is {inhabitants} of {sovereign state} of {Razavi Khorasan Province} ?
 SPARQL: SELECT ?answer WHERE { wd:Q587090 wdt:P17 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Razavi Khorasan Province', 'p': 'sovereign state', 'o': '$y0'}}

 Q: What is the topic's main category for divination?
 SPARQL: select distinct ?answer where { wd:Q1043197 wdt:P910 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'divination', 'p': "topic's main category", 'o': '?x0'}

 Q: what is the {statement is subject of} for {Asian elephant} has {uses} as {self-awareness} ?
 SPARQL: SELECT ?value WHERE { wd:Q133006 p:P2283 ?s . ?s ps:P2283 wd:Q1314553 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Asian elephant', 'p': 'uses', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'uses', 'o': 'self-awareness'}}}

 Q: What is the {human} for {cast member} of {Friends}
 SPARQL:  select distinct ?obj where { wd:Q79784 wdt:P161 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Friends', 'p': 'actor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which sausage sandwich starts with the letter d?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7427595 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sausage sandwich'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Is the river mouth of Esperanto Island less than 802.56 miles?
 SPARQL: ASK WHERE { wd:Q12349285 wdt:P2148 ?obj filter(?obj < 802.56) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Esperanto island', 'p': 'distance from river mouth', 'o': '?x0', '?x0': '802.56'}

 Q: Tell me the religion of the main regulatory text of Tao Te Ching and that starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9174 . ?sbj wdt:P92 wd:Q134425 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'main regulatory text', 'o': 'Tao Te Ching'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {namesake} of {Planck constant}, that has {member of} is {Lincean Academy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q122894 wdt:P138 ?answer . ?answer wdt:P463 wd:Q338432}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Planck constant', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Lincean Academy'}}

 Q: What is the {flammable solid} with the {MIN(decomposition point)} whose {instance of} is {insecticide}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21073024 . ?ent wdt:P2107 ?obj . ?ent wdt:P31 wd:Q181322} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'decomposition point', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable solid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'insecticide'}}}

 Q: What is {county seat for} of {Apia}, that has {subdivided into} is {Palauli} ?
 SPARQL: SELECT ?answer WHERE { wd:Q36260 wdt:P1376 ?answer . ?answer wdt:P150 wd:Q1147216}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Apia', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Palauli'}}

 Q: What is {award received} of {Ansel Adams} that is {follows} is {Lennart Nilsson} ?
 SPARQL: SELECT ?obj WHERE { wd:Q60809 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P155 wd:Q568506 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ansel Adams', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'Lennart Nilsson'}}}

 Q: What is {award received} of {Yaşar Kemal} that is {speaker} is {Günter Grass} ?
 SPARQL: SELECT ?obj WHERE { wd:Q327142 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P823 wd:Q6538 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Yaşar Kemal', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'speaker', 'o': 'Günter Grass'}}}

 Q: Who is the teacher of the kids of Ali al-Hadi?
 SPARQL: SELECT ?answer WHERE { wd:Q315377 wdt:P802 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kid', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali al-Hadi', 'p': 'teacher of', 'o': '$y0'}}

 Q: What is the NUTTAB food ID for Port wine?
 SPARQL: select distinct ?answer where { wd:Q191034 wdt:P2760 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Port wine', 'p': 'NUTTAB food ID', 'o': '?x0'}

 Q: What is the {science museum} with the {MAX(visitors per year)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q588140 . ?ent wdt:P1174 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'visitors per year', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'science museum'}}

 Q: Name the nuclear weapons test with the lowest explosive energy equivalent whose country of origin is soviet union?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q210112 . ?ent wdt:P2145 ?obj . ?ent wdt:P495 wd:Q15180} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'explosive energy equivalent', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nuclear weapons test', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Soviet Union'}}}

 Q: What employer did Gilles Deleuze work at until 1964?
 SPARQL: SELECT ?obj WHERE { wd:Q184226 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1964')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gilles Deleuze', 'p': 'employer', 'o': '?x0', 't': '1964'}

 Q: What is Information Center for Israeli Art artist ID for Daniel Libeskind ?
 SPARQL: select distinct ?answer where { wd:Q154538 wdt:P1736 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Daniel Libeskind', 'p': 'Information Center for Israeli Art artist ID', 'o': '?x0'}

 Q: Did {John_Glenn} {award received} {Congressional Gold Medal} and {Achievement Medal} ?
 SPARQL: ASK WHERE { wd:Q182642 wdt:P166 wd:Q721743 . wd:Q182642 wdt:P166 wd:Q2823025 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Glenn', 'p': 'award received', 'o': '?x0', '?x0': 'Congressional Gold Medal'}, {'h': 'IS', 'v': '?x1', 's': 'John Glenn', 'p': 'award received', 'o': '?x1', '?x1': 'Achievement Medal'}]

 Q: Which is the retail chain that is founded by the Verizon?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q467752 . ?sbj wdt:P31 wd:Q507619 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Verizon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'retail chain'}}

 Q: Which is the RXNO Ontology of aldol condensation?
 SPARQL: select distinct ?answer where { wd:Q1027170 wdt:P2106 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'aldol condensation', 'p': 'RXNO Ontology', 'o': '?x0'}

 Q: Who is the founder of Michelin Guide who is an alumna of Lycee Louis-le-Grand?
 SPARQL: SELECT ?answer WHERE { wd:Q214844 wdt:P112 ?answer . ?answer wdt:P69 wd:Q1059546}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michelin Guide', 'p': 'founder', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'alumna of', 'o': 'Lycee Louis-le-Grand'}}

 Q: What is the {automobile model} with the {MAX(vehicle range)} whose {subclass of} is {compact car}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3231690 . ?ent wdt:P2073 ?obj . ?ent wdt:P279 wd:Q946808 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'range', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subclass of', 'o': 'compact car'}}}

 Q: What is {birth city} of {Jon Finkel}, that has {contains} is {New York County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6270695 wdt:P19 ?answer . ?answer wdt:P150 wd:Q500416}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jon Finkel', 'p': 'birth city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'contains', 'o': 'New York County'}}

 Q: What is the place of birth of Alvin Ailey located in the administrative territorial entity known as Rogers?
 SPARQL: SELECT ?value WHERE { wd:Q449037 p:P19 ?s . ?s ps:P19 wd:Q978155 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alvin Ailey', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of birth', 'o': 'Rogers'}}}

 Q: What is the avionics of radar?
 SPARQL: select distinct ?answer where { ?answer wdt:P878 wd:Q47528}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'avionics', 'o': 'radar'}

 Q: What are weapon studio which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q728 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What famous people were born in Yekaterinburg?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P19 wd:Q887 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'born in', 'o': 'Yekaterinburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: What is {famous works} of {written by} of {Mule Bone} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6933876 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mule Bone', 'p': 'written by', 'o': '$y0'}}

 Q: What is <reservoir created> of <Grand Coulee Dam> ?
 SPARQL: select distinct ?answer where { wd:Q930391 wdt:P4661 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Grand Coulee Dam', 'p': 'reservoir created', 'o': '?x0'}

 Q: What is {deathplace} of {Sigmund Freud}, that has {partner city} is {Zagreb} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9215 wdt:P20 ?answer . ?answer wdt:P190 wd:Q1435}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sigmund Freud', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Zagreb'}}

 Q: What is {work location} of {Thomas Eakins} that is {point in time} is {1868-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q214905 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1868')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Eakins', 'p': 'work location', 'o': '?x0', 't': '1868'}

 Q: What community of Belgium uses Dutch as its official language?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7411 . ?sbj wdt:P31 wd:Q89934 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Dutch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'community of Belgium'}}

 Q: Which is the ISBN publisher prefix for DC Comics?
 SPARQL: select distinct ?answer where { wd:Q2924461 wdt:P3035 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'DC Comics', 'p': 'ISBN publisher prefix', 'o': '?x0'}

 Q: Is the number of representations of A Seaside Rendezvous less than 2.4?
 SPARQL: ASK WHERE { wd:Q2448568 wdt:P5027 ?obj filter(?obj < 2.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'A Seaside Rendezvous', 'p': 'number of representations', 'o': '?x0', '?x0': '2.4'}

 Q: What is Lou Reed's MusicBrainz artist ID?
 SPARQL: select distinct ?answer where { wd:Q189080 wdt:P434 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lou Reed', 'p': 'MusicBrainz artist ID', 'o': '?x0'}

 Q: What is {head of government} of {Navarre} that is {start time} is {1996-9-18} ?
 SPARQL: SELECT ?obj WHERE { wd:Q4018 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Navarre', 'p': 'head of government', 'o': '?x0', 't': '1996'}

 Q: How many package management systems exist for Android?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q94 wdt:P3033 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Android', 'p': 'package management system', 'o': '?x0'}

 Q: what is the {applies to part} for {Paraguay River} has {coordinate location} as {-27.290027966206 -58.60725402832} ?
 SPARQL: SELECT ?value WHERE { wd:Q179396 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'-27.290027966206 -58.60725402832')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paraguay River', 'p': 'coordinate location', 'o': '$y0'}}

 Q: How much alkanol is in the highest autoignition temperature?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11685431 . ?ent wdt:P2199 ?obj . ?ent wdt:P31 wd:Q11685431 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'autoignition temperature', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alkanol'}}

 Q: Which business enterprise has the most total liabilities?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q4830453 . ?ent wdt:P2138 ?obj . ?ent wdt:P31 wd:Q4830453 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total liabilities', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: In the tetrahedral group, does the cardinality of the group equal to 14.4?
 SPARQL: ASK WHERE { wd:Q45034192 wdt:P1164 ?obj filter(?obj = 14.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'tetrahedral group', 'p': 'cardinality of the group', 'o': '?x0', '?x0': '14.4'}

 Q: which is the  country for August has named after as Alp Arslan?
 SPARQL: SELECT ?value WHERE { wd:Q122 p:P138 ?s . ?s ps:P138 wd:Q200193 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'August', 'p': 'named after', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'named after', 'o': 'Alp Arslan'}}}

 Q: What is the name of the stockholder who worked for Ray Kurzweil?
 SPARQL: SELECT ?answer WHERE { wd:Q298341 wdt:P108 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stockholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ray Kurzweil', 'p': 'worked for', 'o': '$y0'}}

 Q: Did {Patricia_Arquette} {nominated for} {Academy Award for Best Supporting Actress} and {Golden Raspberry Award for Worst Supporting Actor} ?
 SPARQL: ASK WHERE { wd:Q215976 wdt:P1411 wd:Q106301 . wd:Q215976 wdt:P1411 wd:Q641316 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Patricia Arquette', 'p': 'nominated for', 'o': '?x0', '?x0': 'Academy Award for Best Supporting Actress'}, {'h': 'IS', 'v': '?x1', 's': 'Patricia Arquette', 'p': 'nominated for', 'o': '?x1', '?x1': 'Golden Raspberry Award for Worst Supporting Actor'}]

 Q: what is the {point in time} for {William Bateson} has {award received} as {Croonian Lecture} ?
 SPARQL: SELECT ?value WHERE { wd:Q297302 p:P166 ?s . ?s ps:P166 wd:Q1192912 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'William Bateson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Croonian Lecture'}, 't': '?x0'}

 Q: Who's the employer's at Nissan?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P108 wd:Q20165 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'Nissan'}

 Q: What is {profession} of {Aloysius Bertrand}, that has {field of this profession} is {journalism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q366464 wdt:P106 ?answer . ?answer wdt:P425 wd:Q11030}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aloysius Bertrand', 'p': 'profession', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'field of this profession', 'o': 'journalism'}}

 Q: What is {had reason} of {Revolutions of 1917–1923}, that has {between} is {Central Powers} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7318933 wdt:P828 ?answer . ?answer wdt:P710 wd:Q152283}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Revolutions of 1917–1923', 'p': 'reason', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'between', 'o': 'Central Powers'}}

 Q: What was the academic major of Donald Knuth and where was he educated at?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Knuth', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Knuth', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {rugby union team} for {league} of {Super Rugby}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P118 wd:Q855988 . ?sbj wdt:P31 wd:Q14645593 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'league', 'o': 'Super Rugby', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rugby union team'}}

 Q: Who is the game artist of Final Fantasy VII?
 SPARQL: select distinct ?answer where { wd:Q214232 wdt:P3080 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Final Fantasy VII', 'p': 'game artist', 'o': '?x0'}

 Q: What are the list of characters and the characters of Buffy the Vampire Slayer?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q183513 wdt:P1881 ?ans_1 . wd:Q183513 wdt:P674 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Buffy the Vampire Slayer', 'p': 'list of characters', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Buffy the Vampire Slayer', 'p': 'characters', 'o': '?x1'}]

 Q: Did the brother of Matilda of Habsburg have kids?
 SPARQL: SELECT ?answer WHERE { wd:Q2635513 wdt:P3373 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kid', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Matilda of Habsburg', 'p': 'bro', 'o': '$y0'}}

 Q: Which is the SecondHandSongs artist ID of George Harrison?
 SPARQL: select distinct ?answer where { wd:Q2643 wdt:P2909 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Harrison', 'p': 'SecondHandSongs artist ID', 'o': '?x0'}

 Q: What are the epic poem which start with the letter tambuka
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37484 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tambuka')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'epic poem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tambuka'}}

 Q: What is the {sovereign state} for {contains administrative territorial entity} of {Oslo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q585 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Oslo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who died in the writers of Philosophical Investigations?
 SPARQL: SELECT ?answer WHERE { wd:Q772496 wdt:P50 ?X . ?X wdt:P20 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'died in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philosophical Investigations', 'p': 'writer', 'o': '$y0'}}

 Q: For what One Direction was in nominated for in the year of 2013?
 SPARQL: SELECT ?obj WHERE { wd:Q146027 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'One Direction', 'p': 'nominated for', 'o': '?x0', 't': '2013'}

 Q: Are the beats per minute of Dance of Deception less than 0.0?
 SPARQL: ASK WHERE { wd:Q54913427 wdt:P1725 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Dance of Deception', 'p': 'beats per minute', 'o': '?x0', '?x0': '0.0'}

 Q: Who is Paulo Coelho's favorite player that has a career as a lyricist?
 SPARQL: SELECT ?answer WHERE { wd:Q12881 wdt:P737 ?answer . ?answer wdt:P106 wd:Q822146}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Paulo Coelho', 'p': 'favorite player', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'lyricist'}}

 Q: Which is Open Library subject ID for Halley's Comet?
 SPARQL: select distinct ?answer where { wd:Q23054 wdt:P3847 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Halley's Comet", 'p': 'Open Library subject ID', 'o': '?x0'}

 Q: what is the {start time} for {Agra} has {located in the administrative territorial entity} as {Agra district} ?
 SPARQL: SELECT ?value WHERE { wd:Q42941 p:P131 ?s . ?s ps:P131 wd:Q606343 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Agra', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Agra district'}}}

 Q: What is {academic major} and {academic degree} of {{Christiane Amanpour} has {educated at} as {University of Rhode Island}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q236939 p:P69 ?s . ?s ps:P69 wd:Q1641788 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christiane Amanpour', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Rhode Island'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christiane Amanpour', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Rhode Island'}}}]

 Q: What is {time zone} of {died in} of {Bettie Page} ?
 SPARQL: SELECT ?answer WHERE { wd:Q61898 wdt:P20 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bettie Page', 'p': 'died in', 'o': '$y0'}}

 Q: What is the {human} for {relative} of {Faisal of Saudi Arabia}
 SPARQL:  select distinct ?obj where { wd:Q217167 wdt:P1038 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Faisal of Saudi Arabia', 'p': 'relative', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {superhero} for {present in work} of {Sonic the Hedgehog}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q1046812 . ?sbj wdt:P31 wd:Q188784 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Sonic the Hedgehog', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superhero'}}

 Q: What is {daughter of} of {wives} of {Hans Rehmann} ?
 SPARQL: SELECT ?answer WHERE { wd:Q118740 wdt:P26 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Rehmann', 'p': 'wives', 'o': '$y0'}}

 Q: What is pronunciation audio of tongue that is language of work or name is German?
 SPARQL: SELECT ?obj WHERE { wd:Q9614 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q188 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'tongue', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'German'}}}

 Q: what is the {for work} for {Paul Thomas Anderson} has {nominated for} as {Academy Award for Best Writing, Adapted Screenplay} ?
 SPARQL: SELECT ?value WHERE { wd:Q25132 p:P1411 ?s . ?s ps:P1411 wd:Q107258 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Thomas Anderson', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Writing, Adapted Screenplay'}}}

 Q: What is {born at} of {Anne Enright}, that has {twin town} is {Bratislava} ?
 SPARQL: SELECT ?answer WHERE { wd:Q73176 wdt:P19 ?answer . ?answer wdt:P190 wd:Q1780}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anne Enright', 'p': 'born at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin town', 'o': 'Bratislava'}}

 Q: How many anthems are for Bulgaria?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q219 wdt:P85 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Bulgaria', 'p': 'anthem', 'o': '?x0'}

 Q: What is <National Portrait Gallery (London) person ID> of <Monica Vitti> ?
 SPARQL: select distinct ?answer where { wd:Q106881 wdt:P1816 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Monica Vitti', 'p': 'National Portrait Gallery (London) person ID', 'o': '?x0'}

 Q: What award did Jonas Salk receive in 1962?
 SPARQL: SELECT ?obj WHERE { wd:Q200101 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1962')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jonas Salk', 'p': 'award', 'o': '?x0', 't': '1962'}

 Q: What is {elected in} and {end cause} of {{James Callaghan} has {position held} as {Member of the 49th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q9576 p:P39 ?s . ?s ps:P39 wd:Q41582621 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Callaghan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 49th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Callaghan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 49th Parliament of the United Kingdom'}}}]

 Q: What is {museum collection} of {famous books} of {Paul Klee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44007 wdt:P800 ?X . ?X wdt:P195 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'collection', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paul Klee', 'p': 'work', 'o': '$y0'}}

 Q: What time zone is the continent of Levant?
 SPARQL: SELECT ?answer WHERE { wd:Q81483 wdt:P30 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Levant', 'p': 'continent', 'o': '$y0'}}

 Q: What is the {chemical compound} for {medical condition treated} of {inflammation}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2175 wd:Q101991 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'treats', 'o': 'inflammation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: what is the {end time} for {Odessa} has {head of government} as {Eduard Gurwits} ?
 SPARQL: SELECT ?value WHERE { wd:Q1874 p:P6 ?s . ?s ps:P6 wd:Q609435 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Odessa', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Eduard Gurwits'}}}

 Q: What is the {taxon} for {taxonomic type} of {Lactobacillus}
 SPARQL:  select distinct ?obj where { wd:Q1061596 wdt:P427 ?obj . ?obj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lactobacillus', 'p': 'taxonomic type', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is notation of Earth ?
 SPARQL: select distinct ?answer where { wd:Q2 wdt:P913 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Earth', 'p': 'notation', 'o': '?x0'}

 Q: Which is the radio telescope operator of California Institute of Technology?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P137 wd:Q161562 . ?sbj wdt:P31 wd:Q184356 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'California Institute of Technology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'radio telescope'}}

 Q: When did Richard Wright cease to be a member of the Communist Party USA?
 SPARQL: SELECT ?value WHERE { wd:Q319820 p:P102 ?s . ?s ps:P102 wd:Q308714 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Wright', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Communist Party USA'}}}

 Q: Where is the death location of Giuseppe Arcimboldo with the telephone code 02?
 SPARQL: SELECT ?answer WHERE { wd:Q7751 wdt:P20 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'02'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Giuseppe Arcimboldo', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'telephone code', 'o': '02'}}

 Q: What is the {declaration of independence} for {signatory} of {David Ben-Gurion}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1891 wd:Q37610 . ?sbj wdt:P31 wd:Q1464916 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'signatory', 'o': 'David Ben-Gurion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'declaration of independence'}}

 Q: Give me {concept} that {significant person} {Niklas Luhmann} and which contains the word {society} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q151885 . ?sbj wdt:P3342 wd:Q57238 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'society')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Niklas Luhmann'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'society'}}

 Q: What is the {taxon} for {this taxon is source of} of {milk}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1672 wd:Q8495 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'this taxon is source of', 'o': 'milk', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: When did Faye Dunaway die who was married to Terry O'Neill?
 SPARQL: SELECT ?value WHERE { wd:Q168721 p:P26 ?s . ?s ps:P26 wd:Q2405734 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faye Dunaway', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': "Terry O'Neill"}}}

 Q: What is {played by} of {fabrication process} of {Planta do Foro de Quiteria Maria Amaral Occupado Por Francisco Antonio Mariano Situado no Lageado - Freguezia da Penha Municipio da Capital São Paulo (Alekhine, Nicolau)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55213518 wdt:P2079 ?X . ?X wdt:P1535 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'played by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Planta do Foro de Quiteria Maria Amaral Occupado Por Francisco Antonio Mariano Situado no Lageado - Freguezia da Penha Municipio da Capital São Paulo (Alekhine, Nicolau)', 'p': 'fabrication process', 'o': '$y0'}}

 Q: what is the {point in time} for {Max Müller} has {award received} as {Bavarian Maximilian Order for Science and Art} ?
 SPARQL: SELECT ?value WHERE { wd:Q55068911 p:P166 ?s . ?s ps:P166 wd:Q565030 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Max Müller', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Bavarian Maximilian Order for Science and Art'}, 't': '?x0'}

 Q: What is the {municipal archive} for {archives at} of {Bonn}
 SPARQL:  select distinct ?obj where { wd:Q586 wdt:P485 ?obj . ?obj wdt:P31 wd:Q604177 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bonn', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal archive'}}

 Q: Which is located in or next to body of water of Saipan?
 SPARQL: select distinct ?answer where { wd:Q51679 wdt:P206 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Saipan', 'p': 'located in or next to body of water', 'o': '?x0'}

 Q: What is {coordinate location} of {atomic bombings of Hiroshima and Nagasaki} that is {location} is {Nagasaki} ?
 SPARQL: SELECT ?obj WHERE { wd:Q488 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P276 wd:Q38234 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'longitude', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'atomic bombings of Hiroshima and Nagasaki', 'p': 'longitude', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'location', 'o': 'Nagasaki'}}}

 Q: What is {operated by} of {SIMBAD}, that has {is in the Indian reservation of} is {Strasbourg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q654724 wdt:P137 ?answer . ?answer wdt:P131 wd:Q6602}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'SIMBAD', 'p': 'operated by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Strasbourg'}}

 Q: What is the {film trilogy} for {series} of {Once Upon a Time in the West}
 SPARQL:  select distinct ?obj where { wd:Q168154 wdt:P179 ?obj . ?obj wdt:P31 wd:Q13593818 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Once Upon a Time in the West', 'p': 'series', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film trilogy'}}

 Q: What is the municipal council in Finland with the lowest number of seats whose applies to jurisdiction is Lappajärvi ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q191893 . ?ent wdt:P1342 ?obj . ?ent wdt:P1001 wd:Q6020} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of seats', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal council in Finland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'Lappajärvi'}}}

 Q: What kind of horse is an example of Equus caballus?
 SPARQL: SELECT ?obj WHERE { wd:Q726 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P642 wd:Q10758650 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'horse', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'Equus caballus'}}}

 Q: What is {taxon parent} of {made from} of {cinnamon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28165 wdt:P1582 ?X . ?X wdt:P171 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'taxon parent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cinnamon', 'p': 'made from', 'o': '$y0'}}

 Q: What is unit symbol of kelvin ?
 SPARQL: select distinct ?answer where { wd:Q11579 wdt:P5061 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'kelvin', 'p': 'unit symbol', 'o': '?x0'}

 Q: What is the {human} for {production company} of {The Birth of a Nation}
 SPARQL:  select distinct ?obj where { wd:Q220394 wdt:P272 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Birth of a Nation', 'p': 'production company', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which {applies to territorial jurisdiction} of {holds position} of {Septimius Severus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1442 wdt:P39 ?X . ?X wdt:P1001 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'jurisdiction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Septimius Severus', 'p': 'holds position', 'o': '$y0'}}

 Q: What is {geography of topic} of {event participant} of {Reconstruction Era} ?
 SPARQL: SELECT ?answer WHERE { wd:Q623429 wdt:P710 ?X . ?X wdt:P2633 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'geography of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reconstruction Era', 'p': 'participant', 'o': '$y0'}}

 Q: What is the {legislature} with the {MAX(number of constituencies)} whose {applies to jurisdiction} is {County Wexford}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11204 . ?ent wdt:P4253 ?obj . ?ent wdt:P1001 wd:Q184599 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of constituencies', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legislature', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'applies to jurisdiction', 'o': 'County Wexford'}}}

 Q: How many {place of death} are to/by {Terceira Island} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P20 wd:Q215074 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'place of death', 'o': 'Terceira Island'}

 Q: What is the {enterprise} for {manufacturer} of {Commodore 64}
 SPARQL:  select distinct ?obj where { wd:Q99775 wdt:P176 ?obj . ?obj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Commodore 64', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'company'}}

 Q: What is {open days} of {British Museum} and {open period to}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q6373 p:P3025 ?s . ?s ps:P3025 ?obj . ?s pq:P3028 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'open period to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'open days', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'British Museum', 'p': 'open days', 'o': '$y0'}}]

 Q: Is it true that the students count of the Protestant College of Tabor is less than 69.6?
 SPARQL: ASK WHERE { wd:Q1380215 wdt:P2196 ?obj filter(?obj < 69.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Protestant College of Tabor', 'p': 'students count', 'o': '?x0', '?x0': '69.6'}

 Q: Which is the connecting line of Stockholm metro?
 SPARQL: select distinct ?answer where { ?answer wdt:P81 wd:Q272926}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'connecting line', 'o': 'Stockholm metro'}

 Q: Who is the Norse deity killed by Baldur?
 SPARQL:  select distinct ?obj where { wd:Q131658 wdt:P157 ?obj . ?obj wdt:P31 wd:Q16513881 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Baldur', 'p': 'killed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Norse deity'}}

 Q: What is the Sea of Galilee's bathymetry image?
 SPARQL: select distinct ?answer where { wd:Q126982 wdt:P207 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sea of Galilee', 'p': 'bathymetry image', 'o': '?x0'}

 Q: Is the parallax of DX Cancri less than 220.64?
 SPARQL: ASK WHERE { wd:Q289634 wdt:P2214 ?obj filter(?obj < 220.64) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'DX Cancri', 'p': 'parallax', 'o': '?x0', '?x0': '220.64'}

 Q: Where was Milton Friedman educated at and what was his academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q47426 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milton Friedman', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milton Friedman', 'p': 'educated at', 'o': '$y0'}}]

 Q: Which Class IIIA combustible liquid has the highest short-term exposure limit?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009058 . ?ent wdt:P2407 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'short-term exposure limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IIIA combustible liquid'}}

 Q: Which is Flanders Music Centre person ID for Stromae?
 SPARQL: select distinct ?answer where { wd:Q313453 wdt:P5410 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stromae', 'p': 'Flanders Music Centre person ID', 'o': '?x0'}

 Q: Is the observing time of the Leviathan of Parsonstown equal to 60?
 SPARQL: ASK WHERE { wd:Q459970 wdt:P3891 ?obj filter(?obj = 60) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Leviathan of Parsonstown', 'p': 'observing time available', 'o': '?x0', '?x0': '60'}

 Q: What is {state} of {languages spoken} of {Marcel Carné} ?
 SPARQL: SELECT ?answer WHERE { wd:Q52409 wdt:P1412 ?X . ?X wdt:P17 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'state', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marcel Carné', 'p': 'language', 'o': '$y0'}}

 Q: What is the {book of the Bible} for {present in work} of {David}
 SPARQL:  select distinct ?obj where { wd:Q41370 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q29154430 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book of the Bible'}}

 Q: What is the {constitutional court} for {highest judicial authority} of {Hamburg}
 SPARQL:  select distinct ?obj where { wd:Q1055 wdt:P209 ?obj . ?obj wdt:P31 wd:Q32766 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamburg', 'p': 'highest judicial authority', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitutional court'}}

 Q: Which is a picture of Ryōtarō Shiba?
 SPARQL: select distinct ?answer where { wd:Q1087887 wdt:P18 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ryōtarō Shiba', 'p': 'picture', 'o': '?x0'}

 Q: Is Mario Puzo the screenwriter of The Godfather?
 SPARQL: ASK WHERE { wd:Q47703 wdt:P58 wd:Q182870 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Godfather', 'p': 'screenwriter', 'o': '?x0', '?x0': 'Mario Puzo'}]

 Q: How many judges are by Ruth Bader Ginsburg?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1594 wd:Q11116 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'judge', 'o': 'Ruth Bader Ginsburg'}

 Q: What is the diplomatic relations of Saint Kitts and Nevis, that has an inflation rate of consumer price index is 2.7?
 SPARQL: SELECT ?answer WHERE { wd:Q763 wdt:P530 ?answer . ?answer wdt:P1279 ?x FILTER(contains(?x,'2.7'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saint Kitts and Nevis', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inflation rate', 'o': '2.7'}}

 Q: What is {educated at} of {Janet Yellen} and {academic degree}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q263725 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Janet Yellen', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Janet Yellen', 'p': 'educated at', 'o': '$y0'}}]

 Q: Name the lowest Alexa ranked magazine?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q41298 . ?ent wdt:P1661 ?obj . ?ent wdt:P31 wd:Q41298} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'Alexa rank', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine'}}

 Q: Which is the Wikimedia category for the category of associated people of Oslo?
 SPARQL:  select distinct ?obj where { wd:Q585 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oslo', 'p': 'category of associated people', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: What is the {ethnic group} and the {sex or gender} of {Alex_Trebek} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q929985 wdt:P172 ?ans_1 . wd:Q929985 wdt:P21 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Alex Trebek', 'p': 'ethnic group', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Alex Trebek', 'p': 'gender', 'o': '?x1'}]

 Q: Is the male population of Capital Hill equal to 0?
 SPARQL: ASK WHERE { wd:Q994840 wdt:P1540 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Capital Hill', 'p': 'male population', 'o': '?x0', '?x0': '0.0'}

 Q: What is <Human Phenotype Ontology ID> of <borderline personality disorder> ?
 SPARQL: select distinct ?answer where { wd:Q208166 wdt:P3841 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'borderline personality disorder', 'p': 'Human Phenotype Ontology ID', 'o': '?x0'}

 Q: What is {governing document} of {denomination} of {Navajo people} ?
 SPARQL: SELECT ?answer WHERE { wd:Q108266 wdt:P140 ?X . ?X wdt:P92 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'governing document', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Navajo', 'p': 'denomination', 'o': '$y0'}}

 Q: What is {GDP per capita based on purchasing power parity} of {setting location} of {Siddhartha} ?
 SPARQL: SELECT ?answer WHERE { wd:Q457289 wdt:P840 ?X . ?X wdt:P2299 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'GDP per capita based on purchasing power parity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Siddhartha', 'p': 'setting location', 'o': '$y0'}}

 Q: What is the {film} for {cast member} of {Bruce Willis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P161 wd:Q2680 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cast member', 'o': 'Bruce Willis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: what is the royal or noble rank contains the word in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q355567 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yabghu')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble rank'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yabghu'}}

 Q: what is the {point in time} for {Robert Baden-Powell, 1st Baron Baden-Powell} has {nominated for} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q12665 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Robert Baden-Powell, 1st Baron Baden-Powell', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: What is the number of protons of the decays to of potassium-40?
 SPARQL: SELECT ?answer WHERE { wd:Q2251076 wdt:P816 ?X . ?X wdt:P1086 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of protons', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'potassium-40', 'p': 'decays to', 'o': '$y0'}}

 Q: What platform and software engine does Dota 2 use?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q771541 wdt:P400 ?ans_1 . wd:Q771541 wdt:P408 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Dota 2', 'p': 'platform', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Dota 2', 'p': 'software engine', 'o': '?x1'}]

 Q: what is the {for work} for {Robert Frost} has {award received} as {Pulitzer Prize for Poetry} ?
 SPARQL: SELECT ?value WHERE { wd:Q168728 p:P166 ?s . ?s ps:P166 wd:Q2117891 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Frost', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Pulitzer Prize for Poetry'}}}

 Q: Vladimir Lenin was the head of government of which historical country.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P6 wd:Q1394 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of government', 'o': 'Vladimir Lenin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What award did Mairead Maguire receive, and how much was the prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mairead Maguire', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mairead Maguire', 'p': 'award', 'o': '$y0'}}]

 Q: Give me {mass media} that {readable file format} {3GPP file format} and which that starts with {'y'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11033 . ?sbj wdt:P1072 wd:Q27863097 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mass media', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'readable file format', 'o': '3GPP file format'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Which is the cruise speed of Airbus A340?
 SPARQL: select distinct ?answer where { wd:Q6481 wdt:P2217 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Airbus A340', 'p': 'cruise speed', 'o': '?x0'}

 Q: What is the {Wikidata property for items about people} for {subject item of this property} of {citizenship}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1629 wd:Q42138 . ?sbj wdt:P31 wd:Q18608871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'item', 'o': 'citizenship', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata property for items about people'}}

 Q: What is {award received} of {Maurice Wilkes} that is {for work} is {Electronic Delay Storage Automatic Calculator} ?
 SPARQL: SELECT ?obj WHERE { wd:Q62857 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q863565 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maurice Wilkes', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Electronic Delay Storage Automatic Calculator'}}}

 Q: Which is the Filmportal ID for Arsène Wenger?
 SPARQL: select distinct ?answer where { wd:Q47576 wdt:P2639 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arsène Wenger', 'p': 'Filmportal ID', 'o': '?x0'}

 Q: What is the {alliance} for {capital} of {Tenochtitlan}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q13695 . ?sbj wdt:P31 wd:Q878249 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Tenochtitlan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alliance'}}

 Q: Give me {sport} that {sports discipline competed in} {beach handball} and which that starts with {'h'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q349 . ?sbj wdt:P2416 wd:Q535116 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sports discipline', 'o': 'beach handball'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: What death place is divided into by Philaret Drozdov?
 SPARQL: SELECT ?answer WHERE { wd:Q129641 wdt:P20 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divided into', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philaret Drozdov', 'p': 'death place', 'o': '$y0'}}

 Q: Tell me  Jewish denomination whose name has the word judaism  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3001185 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'judaism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Jewish denomination'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'judaism'}}

 Q: Tell me theatrical genre whose name has the word zauberstück in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15850590 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zauberstück')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theatrical genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zauberstück'}}

 Q: Tell me probability distribution whose name has the word distribution in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200726 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'distribution')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'probability distribution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'distribution'}}

 Q: Did {Earthquake} {has effect} {Soil liquefaction}?
 SPARQL: ASK WHERE { wd:Q7944 wdt:P1542 wd:Q827291 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'quake', 'p': 'effect', 'o': '?x0', '?x0': 'Soil liquefaction'}]

 Q: What is the {capital} of {Kangwon Province}, which is a {member of} the {International Federation of Red Cross and Red Crescent Societies}?
 SPARQL: SELECT ?answer WHERE { wd:Q41416 wdt:P131 ?answer . ?answer wdt:P463 wd:Q1069175}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kangwon Province', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Federation of Red Cross and Red Crescent Societies'}}

 Q: Give me a name of coachwork type, that starts with an alphabet 'v'.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15729598 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'coachwork type'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the postal code of United States Naval Academy which has its headquarters in Annapolis?
 SPARQL: SELECT ?value WHERE { wd:Q559549 p:P159 ?s . ?s ps:P159 wd:Q28271 . ?s pq:P281 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'postal code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'United States Naval Academy', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'headquarters', 'o': 'Annapolis'}}}

 Q: Which is the military designation of C-130 Hercules?
 SPARQL: select distinct ?answer where { wd:Q182027 wdt:P798 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hercules', 'p': 'military designation', 'o': '?x0'}

 Q: What is regulated by sports  Union of North African Football Federations ?
 SPARQL: SELECT ?answer WHERE { wd:Q427061 wdt:P641 ?X . ?X wdt:P3719 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'regulated by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Union of North African Football Federations', 'p': 'sport', 'o': '$y0'}}

 Q: what is the {point in time} for {Michel Serrault} has {award received} as {César Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q318088 p:P166 ?s . ?s ps:P166 wd:Q900494 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Michel Serrault', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Cesar Award for Best Actor'}, 't': '?x0'}

 Q: What is {follows} and {followed by} of {{Louis II of Italy} has {noble title} as {emperor of Occident}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q215204 p:P97 ?s . ?s ps:P97 wd:Q23906200 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'emperor of Occident'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'emperor of Occident'}}}]

 Q: List the opposite of played by of copying.
 SPARQL: SELECT ?answer WHERE { wd:Q1156791 wdt:P1535 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'copying', 'p': 'played by', 'o': '$y0'}}

 Q: What is the phone number of the United States Postal Service?
 SPARQL: select distinct ?answer where { wd:Q668687 wdt:P1329 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'United States Postal Service', 'p': 'phone number', 'o': '?x0'}

 Q: Is it true that the main voltage of Finland is greater than 184.0?
 SPARQL: ASK WHERE { wd:Q33 wdt:P2884 ?obj filter(?obj > 184.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Finland', 'p': 'mains voltage', 'o': '?x0', '?x0': '184.0'}

 Q: Did {General_Dynamics_F-16_Fighting_Falcon} {manufacturer} {Turkish Aerospace Industries} and {Caproni} ?
 SPARQL: ASK WHERE { wd:Q100026 wdt:P176 wd:Q2002470 . wd:Q100026 wdt:P176 wd:Q2264354 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'F-16', 'p': 'manufacturer', 'o': '?x0', '?x0': 'Turkish Aerospace Industries'}, {'h': 'IS', 'v': '?x1', 's': 'F-16', 'p': 'manufacturer', 'o': '?x1', '?x1': 'Caproni'}]

 Q: Who are the members of sports team of Ricky Ponting since the year 2004?
 SPARQL: SELECT ?obj WHERE { wd:Q472649 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ricky Ponting', 'p': 'team', 'o': '?x0', 't': '2004'}

 Q: What is {population} of {City of London} that is {point in time} is {1971-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23311 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1971')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'City of London', 'p': 'population', 'o': '?x0', 't': '1971'}

 Q: Which is the autonomous system number of Amazon?
 SPARQL: select distinct ?answer where { wd:Q3884 wdt:P3797 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Amazon', 'p': 'autonomous system number', 'o': '?x0'}

 Q: Which is the language of the writing system of the Phoenician alphabet?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q26752 . ?sbj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'Phoenician', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Which Class IC flammable liquid has the highest standard molar entropy?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009056 . ?ent wdt:P3071 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'standard molar entropy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IC flammable liquid'}}

 Q: What is Portuguese Job Code CPP-2010 for astronomer?
 SPARQL: select distinct ?answer where { wd:Q11063 wdt:P1052 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'astronomer', 'p': 'Portuguese Job Code CPP-2010', 'o': '?x0'}

 Q: What is the funicular with the lowest average gradient whose source of energy is electricity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q142031 . ?ent wdt:P2198 ?obj . ?ent wdt:P618 wd:Q12725} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'average gradient', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'funicular', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'source of energy', 'o': 'electricity'}}}

 Q: who is brother for children of Eleanor of Aquitaine ?
 SPARQL: SELECT ?answer WHERE { wd:Q178525 wdt:P40 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eleanor of Aquitaine', 'p': 'child', 'o': '$y0'}}

 Q: Who is {headed by} of {party membership} of {Luis Alberto Sánchez} ?
 SPARQL: SELECT ?answer WHERE { wd:Q969753 wdt:P102 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Luis Alberto Sánchez', 'p': 'party', 'o': '$y0'}}

 Q: How many {present in work} are for {Catwoman} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q158952 wdt:P1441 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Catwoman', 'p': 'present in work', 'o': '?x0'}

 Q: What is {record held} of {Hicham El Guerrouj} that is {criterion used} is {world record} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83905 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P1013 wd:Q688615 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'record held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hicham El Guerrouj', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'criterion used', 'o': 'world record'}}}

 Q: What are the intergovernmental organization that contains the word southern in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q245065 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'southern')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'southern'}}

 Q: Is the elevation above sea level of the Markermeer equal to -3.2?
 SPARQL: ASK WHERE { wd:Q939766 wdt:P2044 ?obj filter(?obj = -3.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Markermeer', 'p': 'elevation above sea level', 'o': '?x0', '?x0': '-3.2'}

 Q: What is {position held} of {Michael Manley} that is {start time} is {1969-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q365395 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Michael Manley', 'p': 'position held', 'o': '?x0', 't': '1969'}

 Q: Which is EIRIN film rating for Breakfast at Tiffany's?
 SPARQL: select distinct ?answer where { wd:Q193066 wdt:P2756 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Breakfast at Tiffany's", 'p': 'EIRIN film rating', 'o': '?x0'}

 Q: What is postsynaptic connection of frontal lobe?
 SPARQL: select distinct ?answer where { ?answer wdt:P926 wd:Q749520}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'postsynaptic connection', 'o': 'frontal lobe'}

 Q: What are the unit of area which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1371562 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of area'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {musical score by} of {edition of} of {Via col vento} ?
 SPARQL: SELECT ?answer WHERE { wd:Q29478369 wdt:P629 ?X . ?X wdt:P86 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musical score by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Via col vento', 'p': 'edition of', 'o': '$y0'}}

 Q: what is the {start time} for {Ingvar Kamprad} has {spouse} as {Kerstin Wadling} ?
 SPARQL: SELECT ?value WHERE { wd:Q216932 p:P26 ?s . ?s ps:P26 wd:Q47519864 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ingvar Kamprad', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Kerstin Wadling'}}}

 Q: Who is the {human} for {father} of {Alexander Graham Bell}
 SPARQL:  select distinct ?obj where { wd:Q34286 wdt:P22 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander Graham Bell', 'p': 'father', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What team is Radamel Falcao Garcia a member of sports team and what is his number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q138172 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radamel Falcao', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radamel Falcao', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is {child} of {Peter Sellers} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q177984 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Sellers', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Sellers', 'p': 'child', 'o': '$y0'}}]

 Q: What is the {human} for {screenwriter} of {Neon Genesis Evangelion}
 SPARQL:  select distinct ?obj where { wd:Q662 wdt:P58 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Neon Genesis Evangelion', 'p': 'screenwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {location of item} of {pendant to} of {Portrait of Maria Bockenolle (Wife of Johannes Elison)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20557706 wdt:P1639 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Portrait of Maria Bockenolle (Wife of Johannes Elison)', 'p': 'pendant to', 'o': '$y0'}}

 Q: What is the {position} for {office held by head of the organisation} of {Church of England}
 SPARQL:  select distinct ?obj where { wd:Q82708 wdt:P2388 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Church of England', 'p': 'office held by head of the organisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: At what point in time did Birmingham have a population of 1123000?
 SPARQL: SELECT ?value WHERE { wd:Q2256 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1123000')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Birmingham', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1123000'}, 't': '?x0'}

 Q: Name the item operator of the object accessed by Air Mauritius
 SPARQL: SELECT ?answer WHERE { wd:Q407556 wdt:P121 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Air Mauritius', 'p': 'operator of', 'o': '$y0'}}

 Q: What is the name of the ethnic group that originates from Korea?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P495 wd:Q18097 . ?sbj wdt:P31 wd:Q41710 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'originates from', 'o': 'Korea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnic group'}}

 Q: Give me the name of the award received of Renzo Piano that of point in time is 2000-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q190148 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Renzo Piano', 'p': 'award received', 'o': '?x0', 't': '2000'}

 Q: What is the economy whose name contains the word russia in it?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q159810 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'russia')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'russia'}}

 Q: What is <WALS lect code> of <Ukrainian> ?
 SPARQL: select distinct ?answer where { wd:Q8798 wdt:P1466 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ukrainian', 'p': 'WALS lect code', 'o': '?x0'}

 Q: What what is programming language programming paradigm non-structured programming  and  alsowhich that starts with letter b
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9143 . ?sbj wdt:P3966 wd:Q905156 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'programming language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'programming paradigm', 'o': 'non-structured programming'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: Is the minimum spend bonus of the American Express Gold Card less than 40?
 SPARQL: ASK WHERE { wd:Q11285067 wdt:P4447 ?obj filter(?obj < 40.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'American Express Gold Card', 'p': 'minimum spend bonus', 'o': '?x0', '?x0': '40.0'}

 Q: what is the {point in time} for {São Paulo} has {population} as {4.50949e+07} ?
 SPARQL: SELECT ?value WHERE { wd:Q175 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'4.50949e+07')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'São Paulo', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '4.50949e+07'}, 't': '?x0'}

 Q: Is Hydrogen different from dihydrogen?
 SPARQL: ASK WHERE { wd:Q556 wdt:P1889 wd:Q3027893 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'hydrogen', 'p': 'different from', 'o': '?x0', '?x0': 'dihydrogen'}]

 Q: What is the namesake of Cassini-Huygens, that died in 9/14/1712?
 SPARQL: SELECT ?answer WHERE { wd:Q165585 wdt:P138 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1712'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cassini-Huygens', 'p': 'namesake', 'o': '?x0', 't': '1712'}

 Q: What is {musician} of {predecessor} of {Right Here Right Now Tour} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3935739 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Right Here Right Now Tour', 'p': 'predecessor', 'o': '$y0'}}

 Q: What is {agent} of {competed in} of {Kerri Walsh Jennings} ?
 SPARQL: SELECT ?answer WHERE { wd:Q232666 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'agent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kerri Walsh Jennings', 'p': 'competed in', 'o': '$y0'}}

 Q: Tell me system of units whose name has the word units in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q932268 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'units')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'system of units'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'units'}}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Michel Platini} has {member of sports team} as {France national football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q4261 p:P54 ?s . ?s ps:P54 wd:Q47774 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michel Platini', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'France national football team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michel Platini', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'France national football team'}}}]

 Q: Is the hydraulic head of the Mykstufoss powerplant more than 49.6?
 SPARQL: ASK WHERE { wd:Q19382111 wdt:P4441 ?obj filter(?obj > 49.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Mykstufoss', 'p': 'hydraulic head', 'o': '?x0', '?x0': '49.6'}

 Q: what is the {applies to part} for {Morava} has {coordinate location} as {48.1739} ?
 SPARQL: SELECT ?value WHERE { wd:Q179251 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'48.1739')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Morava', 'p': 'location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'location', 'o': '48.1739'}}}

 Q: What is the soundtrack album of Symphony No. 5?
 SPARQL: select distinct ?answer where { ?answer wdt:P406 wd:Q188709}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'soundtrack album', 'o': 'Symphony No. 5'}

 Q: What is {namesake} of {Lagrangian point}, that has {royal title} is {count} ?
 SPARQL: SELECT ?answer WHERE { wd:Q190463 wdt:P138 ?answer . ?answer wdt:P97 wd:Q3519259}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lagrangian point', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'royal title', 'o': 'count'}}

 Q: Which television show does Ellen DeGeneres host?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q483325 . ?sbj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'host', 'o': 'Ellen DeGeneres', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television show'}}

 Q: What is the twin city of Klaipeda, which has a size of 25.0?
 SPARQL: SELECT ?answer WHERE { wd:Q776965 wdt:P190 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'25.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Klaipeda', 'p': 'twin city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'size', 'o': '25.0'}}

 Q: what is the {start time} for {Carl Sagan} has {spouse} as {Ann Druyan} ?
 SPARQL: SELECT ?value WHERE { wd:Q410 p:P26 ?s . ?s ps:P26 wd:Q27167 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Sagan', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Ann Druyan'}}}

 Q: Who is {manager/director} of {European Southern Observatory} where {end time} is {1974-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q151991 p:P1037 ?s . ?s ps:P1037 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'European Southern Observatory', 'p': 'manager', 'o': '?x0', 't': '1974'}

 Q: What is the name of a roof shape that starts with the letter t.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1156686 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'roof shape'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the {disease} for {studies} of {psychotherapy}
 SPARQL:  select distinct ?obj where { wd:Q183257 wdt:P2578 ?obj . ?obj wdt:P31 wd:Q12136 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'psychotherapy', 'p': 'study of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: What is Castor's luminosity?
 SPARQL: select distinct ?answer where { wd:Q13029 wdt:P2060 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Castor', 'p': 'luminosity', 'o': '?x0'}

 Q: How many {lake inflows} are for {Lake Baikal} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q5513 wdt:P200 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Lake Baikal', 'p': 'inflows', 'o': '?x0'}

 Q: What is {country} of {Mantua} that is {start time} is {1805-3-17} ?
 SPARQL: SELECT ?obj WHERE { wd:Q6247 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1805')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mantua', 'p': 'country', 'o': '?x0', 't': '1805'}

 Q: What is the copy of steradian with the unit conversion of 0.00053996?
 SPARQL: SELECT ?answer WHERE { wd:Q177612 wdt:P144 ?answer . ?answer wdt:P2442 ?x FILTER(contains(?x,'0.00053996'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'steradian', 'p': 'copy of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'unit conversion', 'o': '0.00053996'}}

 Q: What is the {Wikimedia category} for {category for films shot at this location} of {Montreal}
 SPARQL:  select distinct ?obj where { wd:Q340 wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Montreal', 'p': 'category for films shot at this location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: Tell me health specialty whose name has the word sam in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44597158 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'sexology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'health specialty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'sexology'}}

 Q: Which is the ICSC ID of sodium hydroxide?
 SPARQL: select distinct ?answer where { wd:Q102769 wdt:P5220 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sodium hydroxide', 'p': 'ICSC ID', 'o': '?x0'}

 Q: Name the multiple star constellation where you can find Centaurus that starts with letter H
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q878367 . ?sbj wdt:P59 wd:Q8844 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'multiple star', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Centaurus'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: What is the capital of Henan with a location of 34.7578?
 SPARQL: SELECT ?answer WHERE { wd:Q43684 wdt:P36 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'34.7578'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henan', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': '34.7578'}}

 Q: What is music genre of comes before  I mine øjne ?
 SPARQL: SELECT ?answer WHERE { wd:Q3791021 wdt:P156 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I mine øjne', 'p': 'comes before', 'o': '$y0'}}

 Q: Which is replaced by North Carolina?
 SPARQL: select distinct ?answer where { wd:Q1454 wdt:P1365 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'North Carolina', 'p': 'replaced', 'o': '?x0'}

 Q: Name a color that contain the word "yellow " in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1075 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yellow')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'color'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yellow'}}

 Q: What is {colour} of {team} of {Maurice Wellock} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6793531 wdt:P54 ?X . ?X wdt:P462 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'colour', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maurice Wellock', 'p': 'team', 'o': '$y0'}}

 Q: What is the {intergovernmental organization} for {subsidiary} of {United Nations General Assembly}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P355 wd:Q47423 . ?sbj wdt:P31 wd:Q245065 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'United Nations General Assembly', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'IGO'}}

 Q: What is the {essay} for {published in} of {Federalist Papers}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1433 wd:Q858036 . ?sbj wdt:P31 wd:Q35760 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Federalist Papers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essay'}}

 Q: Give me {W3C Recommendation} that {series} {HyperText Markup Language} and which contains the word {html5} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2661442 . ?sbj wdt:P179 wd:Q8811 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'html5')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'W3C Recommendation', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'HyperText Markup Language'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'html5'}}

 Q: What are the orbits of the Local Bubble that are part of the constellation Orion?
 SPARQL: SELECT ?answer WHERE { wd:Q329182 wdt:P397 ?answer . ?answer wdt:P59 wd:Q8860}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Local Bubble', 'p': 'orbits', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constellation', 'o': 'Orion'}}

 Q: What is the {municipal flag} for {applies to jurisdiction} of {Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q220 . ?sbj wdt:P31 wd:Q21850100 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'jurisdiction', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal flag'}}

 Q: What are the direct-controlled municipality which start with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1208802 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'direct-controlled municipality'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which is Flanders Arts Institute organisation ID for Tate Modern?
 SPARQL: select distinct ?answer where { wd:Q193375 wdt:P5164 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tate Modern', 'p': 'Flanders Arts Institute organisation ID', 'o': '?x0'}

 Q: How many honorific prefixes relate to Sir?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P511 wd:Q209690 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'honorific prefix', 'o': 'Sir'}

 Q: What is the distinct from underworld whose date of publication is 1844-1-1?
 SPARQL: SELECT ?answer WHERE { wd:Q154365 wdt:P1889 ?answer . ?answer wdt:P577 ?x FILTER(contains(YEAR(?x),'1844'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'underworld', 'p': 'distinct from', 'o': '?x0', 't': '1844'}

 Q: Which country is the Hebrew language spoken?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q9288 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language spoken', 'o': 'Hebrew', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: Which jobs did the characters of Pinocchio have?
 SPARQL: SELECT ?answer WHERE { wd:Q4341553 wdt:P674 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'job', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pinocchio', 'p': 'characters', 'o': '$y0'}}

 Q: What is <linguistic typology> of <Austro-Asiatic languages> ?
 SPARQL: select distinct ?answer where { wd:Q33199 wdt:P4132 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Austro-Asiatic languages', 'p': 'linguistic typology', 'o': '?x0'}

 Q: What is {divisions} of {service operator} of {Airbus A380} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5830 wdt:P137 ?X . ?X wdt:P199 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divisions', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Airbus A380', 'p': 'operator', 'o': '$y0'}}

 Q: What is {place held} of {took part in} of {Allies} ?
 SPARQL: SELECT ?answer WHERE { wd:Q329888 wdt:P1344 ?X . ?X wdt:P276 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Allies', 'p': 'took part', 'o': '$y0'}}

 Q: What is the {human} for {founded by} of {Society of Jesus}
 SPARQL:  select distinct ?obj where { wd:Q36380 wdt:P112 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Society of Jesus', 'p': 'founded by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What was the position held by Bramwell Booth in 1929?
 SPARQL: SELECT ?obj WHERE { wd:Q2923664 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1929')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bramwell Booth', 'p': 'position held', 'o': '?x0', 't': '1929'}

 Q: what is the {applies to part} for {Malmö} has {area} as {2.371} ?
 SPARQL: SELECT ?value WHERE { wd:Q2211 p:P2046 ?s . ?s ps:P2046 ?x filter(contains(?x,'2.371')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malmö', 'p': 'area', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'area', 'o': '2.371'}}}

 Q: What is {associated with} of {item used} of {sailing ship} ?
 SPARQL: SELECT ?answer WHERE { wd:Q170483 wdt:P2283 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'associated with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'sailing ship', 'p': 'item used', 'o': '$y0'}}

 Q: Is the prize money of Literaturpreis der Wilhelm and Christine Hirschmann-Stiftung greater than 16000?
 SPARQL: ASK WHERE { wd:Q49719 wdt:P2121 ?obj filter(?obj > 16000.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Literaturpreis der Wilhelm und Christine Hirschmann-Stiftung', 'p': 'prize money', 'o': '?x0', '?x0': '16000.0'}

 Q: What is {painting of} of {coat of arms} of {Overbetuwe} ?
 SPARQL: SELECT ?answer WHERE { wd:Q600871 wdt:P237 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painting of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Overbetuwe', 'p': 'coat of arms', 'o': '$y0'}}

 Q: Is the toughness of the polycarbonate  27.5?
 SPARQL: ASK WHERE { wd:Q62246 wdt:P5520 ?obj filter(?obj = 27.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'polycarbonate', 'p': 'toughness', 'o': '?x0', '?x0': '27.5'}

 Q: What is {sister or brother} of {portrait of} of {Flaying of Marsyas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21723151 wdt:P180 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Flaying of Marsyas', 'p': 'portrait of', 'o': '$y0'}}

 Q: Tell me municipal corporation in India whose name has the word nagar in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6936225 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nagar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipal corporation in India'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'nagar'}}

 Q: What was Nastassja Kinski nominated for in 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q76711 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nastassja Kinski', 'p': 'nominated for', 'o': '?x0', 't': '1980'}

 Q: What is { award received } from { Mario Puzo } which is the subject of { 47th Academy Awards }?
 SPARQL: SELECT ?obj WHERE { wd:Q182870 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q369706 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mario Puzo', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subject of', 'o': '47th Academy Awards'}}}

 Q: Which applies to taxon of protist?
 SPARQL: select distinct ?answer where { ?answer wdt:P2352 wd:Q10892}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'applies to taxon', 'o': 'protist'}

 Q: When did Las Palmas de Gran Canaria have a population of 383050.0?
 SPARQL: SELECT ?value WHERE { wd:Q11974 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'383050.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Las Palmas de Gran Canaria', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '383050.0'}, 't': '?x0'}

 Q: Give me {textile fibre} that {natural product of taxon} {Bombyx mori} and which that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3071311 . ?sbj wdt:P1582 wd:Q134747 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'textile fibre', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'natural product of taxon', 'o': 'Bombyx mori'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is {item used} of {formation} of {Victor E. Renuart, Jr.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2522312 wdt:P241 ?X . ?X wdt:P121 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'item used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor E. Renuart, Jr.', 'p': 'formation', 'o': '$y0'}}

 Q: When did the life stance of saint governing text ?
 SPARQL: SELECT ?answer WHERE { wd:Q43115 wdt:P140 ?X . ?X wdt:P92 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'governing text', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'saint', 'p': 'life stance', 'o': '$y0'}}

 Q: What is the {aircraft model} with the {MAX(takeoff roll)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15056995 . ?ent wdt:P2430 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'takeoff roll', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft model'}}

 Q: What is the {college town} for {shares border with} of {Munich}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P47 wd:Q1726 . ?sbj wdt:P31 wd:Q1187811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Munich', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college town'}}

 Q: Did {Hunter_S._Thompson} {notable work} {Hell's Angels: The Strange and Terrible Saga of the Outlaw Motorcycle Gangs} and {The Kentucky Derby Is Decadent and Depraved} ?
 SPARQL: ASK WHERE { wd:Q219780 wdt:P800 wd:Q841931 . wd:Q219780 wdt:P800 wd:Q4158685 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hunter S. Thompson', 'p': 'notable work', 'o': '?x0', '?x0': "Hell's Angels: The Strange and Terrible Saga of the Outlaw Motorcycle Gangs"}, {'h': 'IS', 'v': '?x1', 's': 'Hunter S. Thompson', 'p': 'notable work', 'o': '?x1', '?x1': 'The Kentucky Derby Is Decadent and Depraved'}]

 Q: How many {academic degree} are for {Ernest Rutherford} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9123 wdt:P512 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ernest Rutherford', 'p': 'academic degree', 'o': '?x0'}

 Q: Is the number of works for the school equal 7?
 SPARQL: ASK WHERE { wd:Q30668273 wdt:P3740 ?obj filter(?obj = 7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'School', 'p': 'number of works', 'o': '?x0', '?x0': '7'}

 Q: What is {route of administration} of {led to} of {starch} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41534 wdt:P1542 ?X . ?X wdt:P636 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'route of administration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'starch', 'p': 'led to', 'o': '$y0'}}

 Q: What is the birth location, with a partner city of Khabarovsk, of Shannon Larratt?
 SPARQL: SELECT ?answer WHERE { wd:Q7488901 wdt:P19 ?answer . ?answer wdt:P190 wd:Q4454}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shannon Larratt', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Khabarovsk'}}

 Q: when was the price for the united states dollar at 0.77101 around?
 SPARQL: SELECT ?value WHERE { wd:Q4917 p:P2284 ?s . ?s ps:P2284 ?x filter(contains(?x,'0.77101')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'dollar', 'p': 'price', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'price', 'o': '0.77101'}, 't': '?x0'}

 Q: What is {follows} and {followed by} of {{Lothair I} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150735 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: Is the mass of the Procyon less than 1.8?
 SPARQL: ASK WHERE { wd:Q13034 wdt:P2067 ?obj filter(?obj < 1.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Procyon', 'p': 'mass', 'o': '?x0', '?x0': '1.8'}

 Q: What is <has vertex figure> of <pentagon> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1678 wd:Q127840}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has vertex figure', 'o': 'pentagon'}

 Q: what was the end time for Clifford Geertz has employer as University of Chicago?
 SPARQL: SELECT ?value WHERE { wd:Q310956 p:P108 ?s . ?s ps:P108 wd:Q131252 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clifford Geertz', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'University of Chicago'}}}

 Q: "Which prize received by Martha Graham, has another one of the winners named Lynn Fontanne?"
 SPARQL: SELECT ?answer WHERE { wd:Q487604 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q242484}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Martha Graham', 'p': 'prize received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'winner', 'o': 'Lynn Fontanne'}}

 Q: The total fertility rate of Liechtenstein is?
 SPARQL: select distinct ?answer where { wd:Q347 wdt:P4841 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Liechtenstein', 'p': 'total fertility rate', 'o': '?x0'}

 Q: Is it true that the compression ratio of the Junkers Jumo 210 is less than 7.8?
 SPARQL: ASK WHERE { wd:Q564413 wdt:P1247 ?obj filter(?obj < 7.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Junkers Jumo 210', 'p': 'compression ratio', 'o': '?x0', '?x0': '7.8'}

 Q: What is National Library of Greece ID for  Maurice Ravel ?
 SPARQL: select distinct ?answer where { wd:Q1178 wdt:P3348 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maurice Ravel', 'p': 'National Library of Greece ID', 'o': '?x0'}

 Q: Which is the Lotsawa House Indian author ID of Nagarjuna?
 SPARQL: select distinct ?answer where { wd:Q171195 wdt:P4349 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nagarjuna', 'p': 'Lotsawa House Indian author ID', 'o': '?x0'}

 Q: What are the concepts that contain the word "übersarung" in their name ?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q151885 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'übersarung')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'übersarung'}}

 Q: What is {faculty} of {film director} of {The Star Wars Holiday Special} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1538082 wdt:P57 ?X . ?X wdt:P69 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'faculty', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Star Wars Holiday Special', 'p': 'director', 'o': '$y0'}}

 Q: What is {record held} of {disc golf} and {location}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q876737 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'disc golf', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'disc golf', 'p': 'record held', 'o': '$y0'}}]

 Q: What what is economic crisis has cause Wall Street Crash of 1929 and also which starts with letter d
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q290178 . ?sbj wdt:P828 wd:Q201684 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'economic crisis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cause', 'o': 'Wall Street Crash of 1929'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: what is the {start time} for {Valencian Community} has {head of government} as {Ximo Puig} ?
 SPARQL: SELECT ?value WHERE { wd:Q5720 p:P6 ?s . ?s ps:P6 wd:Q9096682 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valencia', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Ximo Puig'}}}

 Q: What combustible gas with the highest IDLH exists in humans?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21073026 . ?ent wdt:P2129 ?obj . ?ent wdt:P703 wd:Q15978631 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'IDLH', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'combustible gas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'found in taxon', 'o': 'Homo sapiens'}}}

 Q: Who were Apollo's partner's Muses?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P451 wd:Q37340 . ?sbj wdt:P31 wd:Q66016 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partner', 'o': 'Apollo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Muses'}}

 Q: Give me {emirate of the United Arab Emirates} that contains the word {fujairah} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19833031 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'fujairah')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'emirate of the United Arab Emirates'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'fujairah'}}

 Q: Tell me forensic technique whose name has the word dnain it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q456443 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dna')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'forensic technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dna'}}

 Q: How many {executive body} are to/by {prefecture} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P208 wd:Q515716 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'executive body', 'o': 'prefecture'}

 Q: Which is the instrumentation of the Piano Concerto?
 SPARQL: select distinct ?answer where { wd:Q44261 wdt:P870 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Piano Concerto', 'p': 'instrumentation', 'o': '?x0'}

 Q: Did {Kamal_Haasan} {languages spoken, written or signed} {Romance languages} and {Tamil} ?
 SPARQL: ASK WHERE { wd:Q381477 wdt:P1412 wd:Q19814 . wd:Q381477 wdt:P1412 wd:Q5885 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kamal Haasan', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Romance languages'}, {'h': 'IS', 'v': '?x1', 's': 'Kamal Haasan', 'p': 'languages spoken, written or signed', 'o': '?x1', '?x1': 'Tamil'}]

 Q: What is in the  Transfermarkt manager ID of Alex Ferguson ?
 SPARQL: select distinct ?answer where { wd:Q44980 wdt:P2447 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alex Ferguson', 'p': 'Transfermarkt manager ID', 'o': '?x0'}

 Q: Moon Jae-in is the head of state of which sovereign state ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q21001 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Moon Jae-in', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: How many lifestyle follow mysticism?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1576 wd:Q45996 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'lifestyle', 'o': 'mysticism'}

 Q: Tell me the region of the Czech Republic that is the twinned administrative body of Hamburg.
 SPARQL:  select distinct ?obj where { wd:Q1055 wdt:P190 ?obj . ?obj wdt:P31 wd:Q38911 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamburg', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'region of the Czech Republic'}}

 Q: What is the bald eagle's Guide to North American Birds ID?
 SPARQL: select distinct ?answer where { wd:Q127216 wdt:P4715 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'bald eagle', 'p': 'Guide to North American Birds ID', 'o': '?x0'}

 Q: What is {member of} of {Czechoslovakia}, that has {maxime} is {Союз мира и социализма} ?
 SPARQL: SELECT ?answer WHERE { wd:Q33946 wdt:P463 ?answer . ?answer wdt:P1451 ?x FILTER(contains(?x,'Союз мира и социализма'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Czechoslovakia', 'p': 'member of', 'o': '?x0'}

 Q: What is mascot of took part in  Thierry Henry ?
 SPARQL: SELECT ?answer WHERE { wd:Q45901 wdt:P1344 ?X . ?X wdt:P822 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mascot', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thierry Henry', 'p': 'took part', 'o': '$y0'}}

 Q: What area of the South Bohemian Region has a male population of 637,834?
 SPARQL: SELECT ?value WHERE { wd:Q188373 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'637834.0')) . ?s pq:P1540 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'male population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'South Bohemian Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '637834.0'}}}

 Q: Is the minimum age of the Category 1 0.0?
 SPARQL: ASK WHERE { wd:Q23830576 wdt:P2899 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Category I', 'p': 'minimum age', 'o': '?x0', '?x0': '0.0'}

 Q: Does the HMS Shrospshire have a cruise speed of 25.6?
 SPARQL: ASK WHERE { wd:Q930632 wdt:P2217 ?obj filter(?obj = 25.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'HMS Shropshire', 'p': 'cruise speed', 'o': '?x0', '?x0': '25.6'}

 Q: which reserve currency has the highest price?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q756202 . ?ent wdt:P2284 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'price', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'reserve currency'}}

 Q: Did {Buddy_Holly} {record label} {Brunswick} and {CNR Records} ?
 SPARQL: ASK WHERE { wd:Q5977 wdt:P264 wd:Q994175 . wd:Q5977 wdt:P264 wd:Q2553853 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Buddy Holly', 'p': 'record label', 'o': '?x0', '?x0': 'Brunswick'}, {'h': 'IS', 'v': '?x1', 's': 'Buddy Holly', 'p': 'record label', 'o': '?x1', '?x1': 'CNR'}]

 Q: What is {prescribed drug} of {stroke}, that has {capable of inhibiting or preventing pathological process} is {cerebrovascular disease} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12202 wdt:P2176 ?answer . ?answer wdt:P2175 wd:Q3010352}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'stroke', 'p': 'prescribed drug', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'capable of inhibiting or preventing pathological process', 'o': 'cerebrovascular disease'}}

 Q: Give me {phase of life} that contains the word {zygospore} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1811014 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zygospore')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phase of life'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zygospore'}}

 Q: What is {location of death} of {Madam C. J. Walker}, that has {member of} is {Association of Southeast Asian Nations Regional Forum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q447716 wdt:P20 ?answer . ?answer wdt:P463 wd:Q7886981}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Madam C. J. Walker', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'ASEAN Regional Forum'}}

 Q: Which religion affiliation was established by Mahendra Sūri?
 SPARQL: SELECT ?answer WHERE { wd:Q6733781 wdt:P140 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahendra Sūri', 'p': 'religion', 'o': '$y0'}}

 Q: What is the {cult film} for {director} of {Francis Ford Coppola}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q56094 . ?sbj wdt:P31 wd:Q219557 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Francis Ford Coppola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cult film'}}

 Q: what is the {start time} for {Ingmar Bergman} has {spouse} as {Else Fisher} ?
 SPARQL: SELECT ?value WHERE { wd:Q7546 p:P26 ?s . ?s ps:P26 wd:Q3723687 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ingmar Bergman', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Else Fisher'}}}

 Q: What is the {publication} for {location of formation} of {University of Toronto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P740 wd:Q180865 . ?sbj wdt:P31 wd:Q732577 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location of formation', 'o': 'University of Toronto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'publication'}}

 Q: Give me {programming language} that {programming paradigm} {array programming} and which contains the word {zpl} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9143 . ?sbj wdt:P3966 wd:Q4795882 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zpl')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'programming language', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'programming paradigm', 'o': 'array programming'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zpl'}}

 Q: what is the {stated age at event} for {Noah} that has {significant event} as {death} ?
 SPARQL: SELECT ?value WHERE { wd:Q81422 p:P793 ?s . ?s ps:P793 wd:Q4 . ?s pq:P3629 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'age at event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Noah', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'death'}}}

 Q: Give me {unit of mass} that {measured physical quantity} {mass} and which that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3647172 . ?sbj wdt:P111 wd:Q11423 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of mass', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'quantity', 'o': 'mass'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the superhuman feature or ability of the superhero Daredevil?
 SPARQL: select distinct ?answer where { wd:Q327553 wdt:P2563 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Daredevil', 'p': 'superhuman feature or ability', 'o': '?x0'}

 Q: Bill Gates is the chairperson for what private foundation located in the United States?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P488 wd:Q5284 . ?sbj wdt:P31 wd:Q7246202 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Bill Gates', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private foundation'}}

 Q: what is the {point in time} for {William Jones} has {award received} as {Fellow of the Royal Society} ?
 SPARQL: SELECT ?value WHERE { wd:Q371877 p:P166 ?s . ?s ps:P166 wd:Q15631401 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'William Jones', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Fellow of the Royal Society'}, 't': '?x0'}

 Q: What is the {human} for {manager/director} of {BBC}
 SPARQL:  select distinct ?obj where { wd:Q9531 wdt:P1037 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'BBC', 'p': 'manager', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: How many {award received} are for {Alexey Sudayev} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q603779 wdt:P166 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Alexey Sudayev', 'p': 'awards', 'o': '?x0'}

 Q: What is {birth place} of {Margery Williams}, that has {has towns} is {London Borough of Ealing} ?
 SPARQL: SELECT ?answer WHERE { wd:Q948301 wdt:P19 ?answer . ?answer wdt:P150 wd:Q207218}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Margery Williams', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has towns', 'o': 'London Borough of Ealing'}}

 Q: What was the population of South Dakota in the year 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q1211 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Dakota', 'p': 'population', 'o': '?x0', 't': '2000'}

 Q: Did Ghostbusters cast members Bill Murray and Sigourney Weaver?
 SPARQL: ASK WHERE { wd:Q108745 wdt:P161 wd:Q29250 . wd:Q108745 wdt:P161 wd:Q102124 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ghostbusters', 'p': 'cast member', 'o': '?x0', '?x0': 'Bill Murray'}, {'h': 'IS', 'v': '?x1', 's': 'Ghostbusters', 'p': 'cast member', 'o': '?x1', '?x1': 'Sigourney Weaver'}]

 Q: what is the {for work} for {Blanca Esthela Guerra Islas} has {award received} as {Ariel Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q804319 p:P166 ?s . ?s ps:P166 wd:Q4790397 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Blanca Esthela Guerra Islas', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Ariel Award for Best Actress'}}}

 Q: What is the name of the sister town of the location of birth of Troy Fraser ?
 SPARQL: SELECT ?answer WHERE { wd:Q7846826 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Troy Fraser', 'p': 'location of birth', 'o': '$y0'}}

 Q: Is it true that the number of seats of Coles equals to 1?
 SPARQL: ASK WHERE { wd:Q5355257 wdt:P1342 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Coles', 'p': 'number of seats', 'o': '?x0', '?x0': '1'}

 Q: Who was born in Hugh Griffith near a body of water?
 SPARQL: SELECT ?answer WHERE { wd:Q310934 wdt:P19 ?X . ?X wdt:P206 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'body of water', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hugh Griffith', 'p': 'born in', 'o': '$y0'}}

 Q: What is {scientific area} of {correspondence at} of {Emil Baumgärtel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1335827 wdt:P485 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Emil Baumgärtel', 'p': 'correspondence at', 'o': '$y0'}}

 Q: Did {Metallica} {discography} {Megadeth discography}?
 SPARQL: ASK WHERE { wd:Q15920 wdt:P358 wd:Q1461269 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Metallica', 'p': 'discography', 'o': '?x0', '?x0': 'Megadeth discography'}]

 Q: What is {date of death} of {Gregory of Nyssa} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q191734 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregory of Nyssa', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'circa'}}}

 Q: Which is the spoken text audio for median?
 SPARQL: select distinct ?answer where { wd:Q226995 wdt:P989 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'median', 'p': 'spoken text audio', 'o': '?x0'}

 Q: In what year was Joan Sutherland awarded a Royal Philharmonic Society Gold Medal?
 SPARQL: SELECT ?value WHERE { wd:Q207269 p:P166 ?s . ?s ps:P166 wd:Q27575234 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Joan Sutherland', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Royal Philharmonic Society Gold Medal'}, 't': '?x0'}

 Q: what are the newscast which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1358344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newscast'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: How many diocese are there in the Russian Orthodox Church?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P708 wd:Q60995 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'diocese', 'o': 'Russian Orthodox Church'}

 Q: What is {chairperson} of {member of} of {Đurica Jojkić} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12747513 wdt:P102 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chairperson', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Đurica Jojkić', 'p': 'member of', 'o': '$y0'}}

 Q: What uses language from Mary Wollstonecraft, which has the label in original language of Deutsch?
 SPARQL: SELECT ?answer WHERE { wd:Q101638 wdt:P1412 ?answer . ?answer wdt:P1705 ?x FILTER(contains(?x,'Deutsch'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mary Wollstonecraft', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'label in original language', 'o': 'deutsch'}}

 Q: Which is the Rijksmonument IDfor Concertgebouw?
 SPARQL: select distinct ?answer where { wd:Q849957 wdt:P359 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Concertgebouw', 'p': 'Rijksmonument ID', 'o': '?x0'}

 Q: What is {key event} of {written by} of {Comprehensive Guide to the County of Durham (1892 edition)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q53574467 wdt:P50 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Comprehensive Guide to the County of Durham (1892 edition)', 'p': 'written by', 'o': '$y0'}}

 Q: What is the name of the hometown of Hello Kitty, whose postal code is N?
 SPARQL: SELECT ?answer WHERE { wd:Q191794 wdt:P551 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'N'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hello Kitty', 'p': 'hometown', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'postal code', 'o': 'n'}}

 Q: what is the {type of kinship} for {Queen Victoria} has {sibling} as {Princess Feodora of Leiningen} ?
 SPARQL: SELECT ?value WHERE { wd:Q9439 p:P3373 ?s . ?s ps:P3373 wd:Q60508 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Queen Victoria', 'p': 'sibling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sibling', 'o': 'Princess Feodora of Leiningen'}}}

 Q: what is the {end time} for {Carlos Fuentes} has {pseudonym} as {Emmanuel Matta} ?
 SPARQL: SELECT ?value WHERE { wd:Q154691 p:P742 ?s . ?s ps:P742 ?x filter(contains(?x,'Emmanuel Matta')) . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carlos Fuentes', 'p': 'alias', 'o': '$y0'}}

 Q: What is {using} of {academic discipline} of {syntax} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1152399 wdt:P101 ?X . ?X wdt:P2283 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'using', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'syntax', 'p': 'discipline', 'o': '$y0'}}

 Q: Tell me area of law whose name has the word law in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1756157 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'law')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of law'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'law'}}

 Q: Which is {manifestation of} of {work} of {Johann Reinhard Kistner} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55685289 wdt:P106 ?X . ?X wdt:P1557 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manifestation of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johann Reinhard Kistner', 'p': 'work', 'o': '$y0'}}

 Q: Which is the height and location of the pole vault record held by Sergey Bubka?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q184556 . ?s pq:P2048 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Sergey Bubka'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Sergey Bubka'}}}]

 Q: What is {has influence} of {written by} of {I taste a liquor never brewed} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5980230 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has influence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I taste a liquor never brewed', 'p': 'author', 'o': '$y0'}}

 Q: What is {birth location} of {Alonso Pérez de Guzmán, 7th Duke of Medina Sidonia}, that has {inhabitants} is {67640} ?
 SPARQL: SELECT ?answer WHERE { wd:Q278954 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'67640'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alonso Pérez de Guzmán, 7th Duke of Medina Sidonia', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '67640'}}

 Q: What are the musical which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2743 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Is the minimum frequency of audible sound for goldfish greater than 24?
 SPARQL: ASK WHERE { wd:Q123141 wdt:P3387 ?obj filter(?obj > 24.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'goldfish', 'p': 'minimum frequency of audible sound', 'o': '?x0', '?x0': '24.0'}

 Q: What are the  geometric concept which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21550639 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geometric concept'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is the decay mode for uranium-238?
 SPARQL: select distinct ?answer where { wd:Q1148503 wdt:P817 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'uranium-238', 'p': 'decay mode', 'o': '?x0'}

 Q: Give me {isotope of hydrogen} that {follows} {deuterium} and which that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q466603 . ?sbj wdt:P155 wd:Q102296 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of hydrogen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'deuterium'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is Irish Sites and Monuments Record ID  for Trinity College Dublin
 SPARQL: select distinct ?answer where { wd:Q258464 wdt:P4057 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Trinity College Dublin', 'p': 'Irish Sites and Monuments Record ID', 'o': '?x0'}

 Q: What is the {written work} for {characters} of {Christopher Hitchens}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q49081 . ?sbj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Christopher Hitchens', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: In what environment is the series Darius Force set?
 SPARQL: SELECT ?answer WHERE { wd:Q1527988 wdt:P179 ?X . ?X wdt:P400 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'environment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Darius Force', 'p': 'series', 'o': '$y0'}}

 Q: What country that is a member of the International Centre for Settlement of Investment Disputes has the most GDP?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6256 . ?ent wdt:P2131 ?obj . ?ent wdt:P463 wd:Q899770 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'GDP', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Centre for Settlement of Investment Disputes'}}}

 Q: What is {tribute to} of {Pictures at an Exhibition}, that has {deathplace} is {Saint Petersburg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q724981 wdt:P825 ?answer . ?answer wdt:P20 wd:Q656}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pictures at an Exhibition', 'p': 'tribute to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'deathplace', 'o': 'Saint Petersburg'}}

 Q: What is {last name} of {Franz Marc}, that has {is the same as} is {Marek} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44054 wdt:P734 ?answer . ?answer wdt:P460 wd:Q1894550}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Franz Marc', 'p': 'last name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Marek'}}

 Q: what is the {position held} for {Linz} has {head of government} as {Franz Dobusch} ?
 SPARQL: SELECT ?value WHERE { wd:Q41329 p:P6 ?s . ?s ps:P6 wd:Q1446553 . ?s pq:P39 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Linz', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Franz Dobusch'}}}

 Q: What is {papers at} of {Queen Victoria}, that has {co-ords} is {52.4145 -4.06846} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9439 wdt:P485 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'52.4145 -4.06846'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Queen Victoria', 'p': 'papers at', 'o': '?x0'}

 Q: Was Aileen Wuornos convicted of depraved heart murder and robbery?
 SPARQL: ASK WHERE { wd:Q264849 wdt:P1399 wd:Q5260820 . wd:Q264849 wdt:P1399 wd:Q53706 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Aileen Wuornos', 'p': 'convicted of', 'o': '?x0', '?x0': 'depraved heart murder'}, {'h': 'IS', 'v': '?x1', 's': 'Aileen Wuornos', 'p': 'convicted of', 'o': '?x1', '?x1': 'robbery'}]

 Q: What is <BPS language code> of <Sundanese> ?
 SPARQL: select distinct ?answer where { wd:Q34002 wdt:P2590 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sundanese', 'p': 'BPS language code', 'o': '?x0'}

 Q: What is {kids} of {Ferdinand I of León and Castile}, that has {date of the end} is {1109-7-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q296863 wdt:P40 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1109'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ferdinand I of León and Castile', 'p': 'child', 'o': '?x0', 't': '1109'}

 Q: Are Krillin and Son Gohan Dragon Ball Z characters?
 SPARQL: ASK WHERE { wd:Q477916 wdt:P674 wd:Q757141 . wd:Q477916 wdt:P674 wd:Q752269 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Dragon Ball Z', 'p': 'characters', 'o': '?x0', '?x0': 'Krillin'}, {'h': 'IS', 'v': '?x1', 's': 'Dragon Ball Z', 'p': 'characters', 'o': '?x1', '?x1': 'Gohan'}]

 Q: Does the degree of relation of a great grandfather equal 3.6?
 SPARQL: ASK WHERE { wd:Q2500621 wdt:P4500 ?obj filter(?obj = 3.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'great grandfather', 'p': 'family relationship degree', 'o': '?x0', '?x0': '3.6'}

 Q: What is {nominated for} of {Saint-John Perse} that is {point in time} is {1955-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q132684 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1955')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saint-John Perse', 'p': 'nominated for', 'o': '?x0', 't': '1955'}

 Q: which type of quantum particle that interaction  gravity starts with q
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22675015 . ?sbj wdt:P517 wd:Q11412 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of quantum particle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'gravity'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'q'}}

 Q: Which is the honorific for the officeholder of Salman of Saudi Arabia?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q367825 . ?sbj wdt:P31 wd:Q1326966 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Salman of Saudi Arabia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'honorific'}}

 Q: What is {media} of {has product} of {In-N-Out Burger} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1205312 wdt:P1056 ?X . ?X wdt:P186 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'media', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In-N-Out Burger', 'p': 'has product', 'o': '$y0'}}

 Q: What is <streaming media URL> of <Bjarne Stroustrup> ?
 SPARQL: select distinct ?answer where { wd:Q92620 wdt:P963 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bjarne Stroustrup', 'p': 'streaming media URL', 'o': '?x0'}

 Q: Does Seth's husband have sons?
 SPARQL: SELECT ?answer WHERE { wd:Q131795 wdt:P26 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seth', 'p': 'husband', 'o': '$y0'}}

 Q: What is {time of discovery or invention} and {discoverer or inventor} of {{Pan} has {uses} as {physical object}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q80174 p:P2283 ?s . ?s ps:P2283 wd:Q223557 . ?s pq:P575 ?value1 . ?s pq:P61 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'discovered', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pan', 'p': 'uses', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'uses', 'o': 'object'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'discoverer or inventor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pan', 'p': 'uses', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'uses', 'o': 'object'}}}]

 Q: Give me {political party} that {political ideology} {nationalism} and which contains the word {patriots} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7278 . ?sbj wdt:P1142 wd:Q6235 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'patriots')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political party', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'political ideology', 'o': 'nationalism'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'patriots'}}

 Q: What is the {mortality rate} with the {MIN(incidence)} whose {location} is {Finland}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q58702 . ?ent wdt:P2844 ?obj . ?ent wdt:P276 wd:Q33} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'incidence', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mortality rate', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Finland'}}}

 Q: tell me  me award that conferred by {National Academy of Television Arts and Sciences  starts with letter a
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q618779 . ?sbj wdt:P1027 wd:Q2822443 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'conferred by', 'o': 'National Academy of Television Arts and Sciences'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is {has cities} of {Central Europe}, that has {correspondence at} is {National Archives} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27509 wdt:P150 ?answer . ?answer wdt:P485 wd:Q6970414}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Central Europe', 'p': 'has cities', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'correspondence at', 'o': 'National Archives'}}

 Q: Is the Bengali writing system Arabic script and Kolezhuthu?
 SPARQL: ASK WHERE { wd:Q9610 wdt:P282 wd:Q1828555 . wd:Q9610 wdt:P282 wd:Q6427218 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Bengali', 'p': 'writing system', 'o': '?x0', '?x0': 'Arabic'}, {'h': 'IS', 'v': '?x1', 's': 'Bengali', 'p': 'writing system', 'o': '?x1', '?x1': 'Kolezhuthu'}]

 Q: What is {has daughter} of {James VII and II}, that has {is son of} is {Anne Hyde} ?
 SPARQL: SELECT ?answer WHERE { wd:Q126188 wdt:P40 ?answer . ?answer wdt:P25 wd:Q145609}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James VII', 'p': 'son', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'son of', 'o': 'Anne Hyde'}}

 Q: What is {prize money} and {together with} of {{Mairead Maguire} has {award received} as {Nobel Peace Prize}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q157655 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P2121 ?value1 . ?s pq:P1706 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mairead Maguire', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Peace Prize'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'together with', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mairead Maguire', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Peace Prize'}}}]

 Q: Who is the chief executive officer of Hewlett-Packard?
 SPARQL: select distinct ?answer where { wd:Q80978 wdt:P169 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hewlett-Packard', 'p': 'chief executive officer', 'o': '?x0'}

 Q: What is <Mutopia composer ID> of <Niccolò Paganini> ?
 SPARQL: select distinct ?answer where { wd:Q66075 wdt:P3674 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Niccolo Paganini', 'p': 'Mutopia composer ID', 'o': '?x0'}

 Q: Was Ramadan followed by Eid al-adha?
 SPARQL: ASK WHERE { wd:Q41662 wdt:P156 wd:Q514400 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Ramadan', 'p': 'followed by', 'o': '?x0', '?x0': 'id al-adha'}]

 Q: How many {approved by} are for {Iraq War} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q545449 wdt:P790 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Iraq War', 'p': 'approved by', 'o': '?x0'}

 Q: What are theheavy equipment which start with the letter tractor
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q874311 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tractor')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'heavy equipment'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tractor'}}

 Q: What is David Beckham's MLS player ID?
 SPARQL: select distinct ?answer where { wd:Q10520 wdt:P2398 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Beckham', 'p': 'MLS player ID', 'o': '?x0'}

 Q: What is {disease treated} of {epinephrine}, that has {medical speciality} is {infectious disease} ?
 SPARQL: SELECT ?answer WHERE { wd:Q132621 wdt:P2175 ?answer . ?answer wdt:P1995 wd:Q788926}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'epinephrine', 'p': 'disease treated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'medical speciality', 'o': 'infectious disease'}}

 Q: Is the cash of the Delta Air Lines more than 2313600000.0?
 SPARQL: ASK WHERE { wd:Q188920 wdt:P2232 ?obj filter(?obj > 2313600000.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Delta Air Lines', 'p': 'cash', 'o': '?x0', '?x0': '2313600000.0'}

 Q: what is the {series ordinal} for {J. Robert Oppenheimer} has {given name} as {Julius} ?
 SPARQL: SELECT ?value WHERE { wd:Q132537 p:P735 ?s . ?s ps:P735 wd:Q1102114 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Oppenheimer', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Julius'}}}

 Q: How many {season of club or team} are to/by {Toronto Argonauts} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P5138 wd:Q142349 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'season of club or team', 'o': 'Toronto Argonauts'}

 Q: What is the {film} for {executive producer} of {Hayao Miyazaki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1431 wd:Q55400 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'executive producer', 'o': 'Hayao Miyazaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: what is the {end time} for {Lucille Ball} has {spouse} as {Gary Morton} ?
 SPARQL: SELECT ?value WHERE { wd:Q209662 p:P26 ?s . ?s ps:P26 wd:Q5525629 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divorced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lucille Ball', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Gary Morton'}}}

 Q: What is {film starring} of {fork of} of {Starfleet Academy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55169598 wdt:P144 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Starfleet Academy', 'p': 'fork of', 'o': '$y0'}}

 Q: Which is the bestuursorgaan of the basic form of government of Georgetown University?
 SPARQL:  select distinct ?obj where { wd:Q333886 wdt:P122 ?obj . ?obj wdt:P31 wd:Q2717262 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georgetown University', 'p': 'basic form of government', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bestuursorgaan'}}

 Q: What is the {fictional human} for {narrator} of {On the Road}
 SPARQL:  select distinct ?obj where { wd:Q743180 wdt:P2438 ?obj . ?obj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'On the Road', 'p': 'narrator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional human'}}

 Q: What is {recurring event} of {New Year's Day}, that has {prequel is} is {January 0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q196627 wdt:P837 ?answer . ?answer wdt:P155 wd:Q12481}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "New Year's Day", 'p': 'recurring event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prequel is', 'o': 'January 0'}}

 Q: What is the position held by Benito Pérez Galdós whose electoral district is Guayama?
 SPARQL: SELECT ?obj WHERE { wd:Q189869 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 wd:Q1870997 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Benito Pérez Galdós', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'electoral district', 'o': 'Guayama'}}}

 Q: Did {Pi} {different from} {Π}?
 SPARQL: ASK WHERE { wd:Q167 wdt:P1889 wd:Q168 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Pi', 'p': 'different from', 'o': '?x0', '?x0': 'Pi'}]

 Q: Which is the sRGB color hex triplet for Cambrian?
 SPARQL: select distinct ?answer where { wd:Q79064 wdt:P465 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cambrian', 'p': 'sRGB color hex triplet', 'o': '?x0'}

 Q: Is the patronage of the Guiuan Airport equal to 1.2?
 SPARQL: ASK WHERE { wd:Q301648 wdt:P3872 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Guiuan Airport', 'p': 'patronage', 'o': '?x0', '?x0': '1.2'}

 Q: What is the {translation} for {edition or translation of} of {Hamlet}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P629 wd:Q41567 . ?sbj wdt:P31 wd:Q39811647 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition or translation of', 'o': 'Hamlet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'translated'}}

 Q: Who is the member of sports team of John Charles who started at 1950-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q312404 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1950')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Charles', 'p': 'member of sports team', 'o': '?x0', 't': '1950'}

 Q: What is the {general election} with the {MAX(ballots cast)} whose {successful candidate} is {Thomas Playford}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1076105 . ?ent wdt:P1868 ?obj . ?ent wdt:P991 wd:Q528382 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ballots cast', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'general election', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'successful candidate', 'o': 'Thomas Playford'}}}

 Q: What is {position held} of {Alain Poher} that is {start time} is {1974-4-3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q12950 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alain Poher', 'p': 'position held', 'o': '?x0', 't': '1974'}

 Q: What is {twin cities} of {location born} of {Prince Aloys Franz de Paula Maria} ?
 SPARQL: SELECT ?answer WHERE { wd:Q85538 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin cities', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prince Aloys Franz de Paula Maria', 'p': 'location born', 'o': '$y0'}}

 Q: Tell me which is the athletic conference which contains the word north in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2992826 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'north')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'athletic conference'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'north'}}

 Q: What is the {cause of death} and the {place of birth} of {Ansel_Adams} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q60809 wdt:P509 ?ans_1 . wd:Q60809 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ansel Adams', 'p': 'cause of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ansel Adams', 'p': 'place of birth', 'o': '?x1'}]
