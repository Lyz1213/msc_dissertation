
 Q: Who is the  {country} for {head of state} of {Mahmoud Abbas}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q127998 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Mahmoud Abbas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What was the population of Somalia in 2009-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q1045 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Somalia', 'p': 'population', 'o': '?x0', 't': '2009'}

 Q: What is {voice actresses} of {South Park}, that has {employment} is {singer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16538 wdt:P725 ?answer . ?answer wdt:P106 wd:Q177220}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Park', 'p': 'voice actress', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employ', 'o': 'singer'}}

 Q: What is {nominated for} of {Dolores del Río} that is {for work} is {La Otra} ?
 SPARQL: SELECT ?obj WHERE { wd:Q124057 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q3915489 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dolores del Río', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'La Otra'}}}

 Q: What was the population of Clermont-Ferrand on 1-1-2013?
 SPARQL: SELECT ?obj WHERE { wd:Q42168 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Clermont-Ferrand', 'p': 'population', 'o': '?x0', 't': '2013'}

 Q: On Lake Winnipeg what is the lakes on river?
 SPARQL: select distinct ?answer where { ?answer wdt:P469 wd:Q3272}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lakes on river', 'o': 'Lake Winnipeg'}

 Q: What open cluster has the largest radius?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11387 . ?ent wdt:P2120 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'radius', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'open cluster'}}

 Q: what is the {end time} for {Jonathan Swift} has {residence} as {Whitehaven} ?
 SPARQL: SELECT ?value WHERE { wd:Q41166 p:P551 ?s . ?s ps:P551 wd:Q1012481 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jonathan Swift', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Whitehaven'}}}

 Q: Give me {mode of transport} that contains the word {vehicle} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q334166 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vehicle')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mode of transport'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vehicle'}}

 Q: what is the {for work} for {Danny Elfman} has {nominated for} as {Academy Award for Best Original Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q193338 p:P1411 ?s . ?s ps:P1411 wd:Q488651 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Danny Elfman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Score'}}}

 Q: What is the name of the opera based on Twelfth Night ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q221211 . ?sbj wdt:P31 wd:Q1344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Twelfth Night', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'opera'}}

 Q: What is {nominated for} of {Franz Waxman} that is {statement is subject of} is {23rd Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q213611 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917076 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Waxman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '23rd Academy Awards'}}}

 Q: what is the {located in the administrative territorial entity} for {Rideau Canal} has {mouth of the watercourse} as {Ottawa River} ?
 SPARQL: SELECT ?value WHERE { wd:Q651323 p:P403 ?s . ?s ps:P403 wd:Q60974 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rideau Canal', 'p': 'mouth of the watercourse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mouth of the watercourse', 'o': 'Ottawa River'}}}

 Q: what is the {nominee} for {The Truman Show} has {nominated for} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q214801 p:P1411 ?s . ?s ps:P1411 wd:Q106291 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Truman Show', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: what are the cinematic technique that contains the word tilt in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1001378 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tilt')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cinematic technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tilt'}}

 Q: Tell me the historical period which is part of the time period of Muromachi period and whose name contains the word period?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11514315 . ?sbj wdt:P2348 wd:Q334845 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'period')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical period', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Muromachi period'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'period'}}

 Q: What is the {deity} for {student} of {John the Apostle}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P802 wd:Q44015 . ?sbj wdt:P31 wd:Q178885 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student', 'o': 'John the Apostle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'god'}}

 Q: When did socialist state for contains administrative territorial entity of Beijing?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q956 . ?sbj wdt:P31 wd:Q842112 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Beijing', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'socialist state'}}

 Q: Which is the PIM authority ID of Paul Erdős?
 SPARQL: select distinct ?answer where { wd:Q173746 wdt:P3973 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paul Erdős', 'p': 'PIM authority ID', 'o': '?x0'}

 Q: "Who is {wedded to} to {Radha}, that has a {child} named {Samba} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q113904 wdt:P26 ?answer . ?answer wdt:P40 wd:Q2841495}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Radha', 'p': 'wedded to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Samba'}}

 Q: When was the GDP of Rio Grande do Sul115e+9 ?
 SPARQL: SELECT ?value WHERE { wd:Q40030 p:P2131 ?s . ?s ps:P2131 ?x filter(contains(?x,'115e+9')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Rio Grande do Sul', 'p': 'GDP', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'GDP', 'o': '115e+9'}, 't': '?x0'}

 Q: What is <Minneapolis Institute of Art constituent ID> of <Johannes Gutenberg> ?
 SPARQL: select distinct ?answer where { wd:Q8958 wdt:P3603 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Johannes Gutenberg', 'p': 'Minneapolis Institute of Art constituent ID', 'o': '?x0'}

 Q: Who is born at Bertha Benz, whose inhabitants is 101165.0?
 SPARQL: SELECT ?answer WHERE { wd:Q77117 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'101165.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bertha Benz', 'p': 'born at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '101165.0'}}

 Q: What is <Poetry In Voice poet ID> of <Percy Bysshe Shelley> ?
 SPARQL: select distinct ?answer where { wd:Q93343 wdt:P5506 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Percy Bysshe Shelley', 'p': 'Poetry In Voice poet ID', 'o': '?x0'}

 Q: What is <TDKIV term ID> of <blog> ?
 SPARQL: select distinct ?answer where { wd:Q30849 wdt:P5398 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'blog', 'p': 'TDKIV term ID', 'o': '?x0'}

 Q: What is the {cause of death} and the {place of death} of {John_Denver} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q105460 wdt:P509 ?ans_1 . wd:Q105460 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'John Denver', 'p': 'cause of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'John Denver', 'p': 'place of death', 'o': '?x1'}]

 Q: When did head of government of Seattle and work period (end)?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P2032 ?value1}
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'head of government', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'head of government', 'o': '$y0'}}]

 Q: What is the maximum Strahler number for Loire?
 SPARQL: select distinct ?answer where { wd:Q1469 wdt:P1548 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Loire', 'p': 'maximum Strahler number', 'o': '?x0'}

 Q: Which medicines have a major drug interaction with erythromycin?
 SPARQL:  select distinct ?obj where { wd:Q213511 wdt:P769 ?obj . ?obj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'erythromycin', 'p': 'drug interaction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medicine'}}

 Q: What is {eponym} of {Lake Eyre}, that has {winner of} is {Founder’s Medal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179970 wdt:P138 ?answer . ?answer wdt:P166 wd:Q26268774}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lake Eyre', 'p': 'eponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'win', 'o': 'Founder’s Medal'}}

 Q: What is {member of} of {find spot} of {Ebola virus disease} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51993 wdt:P189 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ebola', 'p': 'find spot', 'o': '$y0'}}

 Q: What is the unit conversion of the theme of joule?
 SPARQL: SELECT ?answer WHERE { wd:Q25269 wdt:P144 ?X . ?X wdt:P2442 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'unit conversion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'joule', 'p': 'theme', 'o': '$y0'}}

 Q: Give me {national sports team} that {country} {Australia} and which contains the word {team} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1194951 . ?sbj wdt:P17 wd:Q408 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'team')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national sports team', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Australia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'team'}}

 Q: Does cobalt have a time-weighted average exposure limit of .1?
 SPARQL: ASK WHERE { wd:Q740 wdt:P2404 ?obj filter(?obj = 0.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'cobalt', 'p': 'time-weighted average exposure limit', 'o': '?x0', '?x0': '0.1'}

 Q: Name an ethnolect indigenous to the United States of America that contains the word "american" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q951873 . ?sbj wdt:P2341 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'american')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnolect', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'indigenous to', 'o': 'United States of America'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'american'}}

 Q: What is the {capital} for {twinned administrative body} of {Hamburg}
 SPARQL:  select distinct ?obj where { wd:Q1055 wdt:P190 ?obj . ?obj wdt:P31 wd:Q5119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamburg', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'capital'}}

 Q: who married to of actor of Bepanaah ?
 SPARQL: SELECT ?answer WHERE { wd:Q4890903 wdt:P161 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bepanaah', 'p': 'actor', 'o': '$y0'}}

 Q: Who is the {business} for {founded by} of {Ingvar Kamprad}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q216932 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Ingvar Kamprad', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is {position held} of {Harry S. Truman} that is {start time} is {1935-1-3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11613 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1935')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Harry S. Truman', 'p': 'position held', 'o': '?x0', 't': '1935'}

 Q: What feature is named after Juan de Fuca Plate, who died in the early 1600's?
 SPARQL: SELECT ?answer WHERE { wd:Q860385 wdt:P138 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1602'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Juan de Fuca Plate', 'p': 'named after', 'o': '?x0', 't': '1602'}

 Q: What is the significance of artists of The Beatles' Story?
 SPARQL: SELECT ?answer WHERE { wd:Q2304936 wdt:P175 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significance', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Beatles' Story", 'p': 'artist', 'o': '$y0'}}

 Q: Name a park located in Rome.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q220 . ?sbj wdt:P31 wd:Q22698 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'park'}}

 Q: Which is the business for the publisher of Space Invaders?
 SPARQL:  select distinct ?obj where { wd:Q220665 wdt:P123 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'publisher', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What are the borders of Southern Africa?
 SPARQL: SELECT ?answer WHERE { wd:Q27394 wdt:P706 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Southern Africa', 'p': 'location', 'o': '$y0'}}

 Q: What is the {IQ test} for {measures} of {intelligence}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2575 wd:Q83500 . ?sbj wdt:P31 wd:Q12021385 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measures', 'o': 'intelligence', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'IQ test'}}

 Q: Which is the arterial supply for the human nose?
 SPARQL: select distinct ?answer where { wd:Q2673594 wdt:P2286 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'human nose', 'p': 'arterial supply', 'o': '?x0'}

 Q: Whhich is {used for treatment} of {death cause} of {Madhavrao I} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5971343 wdt:P509 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used for treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Madhavrao I', 'p': 'death cause', 'o': '$y0'}}

 Q: Does the Brazillian Military Cemetery of Pustoia quantity buried equal 369.6?
 SPARQL: ASK WHERE { wd:Q1248729 wdt:P2324 ?obj filter(?obj = 369.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Brazilian Military Cemetery of Pistoia', 'p': 'quantity buried', 'o': '?x0', '?x0': '369.6'}

 Q: What is {died in} of {Margaret Murray}, that has {county seat of} is {Kingdom of Essex} ?
 SPARQL: SELECT ?answer WHERE { wd:Q242542 wdt:P20 ?answer . ?answer wdt:P1376 wd:Q110888}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Margaret Murray', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat of', 'o': 'Essex'}}

 Q: What is {worked at} of {Louis Agassiz}, that has {subsidiary company} is {Davis Center for Russian and Eurasian Studies, Harvard University} ?
 SPARQL: SELECT ?answer WHERE { wd:Q122972 wdt:P108 ?answer . ?answer wdt:P355 wd:Q45137420}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Louis Agassiz', 'p': 'worked at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'Davis Center for Russian and Eurasian Studies, Harvard University'}}

 Q: What is {follows} and {followed by} of {{Lothair I} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150735 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lothair I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: What is <albedo> of <Saturn> ?
 SPARQL: select distinct ?answer where { wd:Q193 wdt:P4501 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Saturn', 'p': 'albedo', 'o': '?x0'}

 Q: Tell me branch of science whose name has the word volkerpsychologie in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2465832 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'volkerpsychologie')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of science'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'volkerpsychologie'}}

 Q: what is the {burial plot reference} for {Henrik Ibsen} has {place of burial} as {Vår Frelsers gravlund} ?
 SPARQL: SELECT ?value WHERE { wd:Q36661 p:P119 ?s . ?s ps:P119 wd:Q1069938 . ?s pq:P965 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'burial plot reference', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henrik Ibsen', 'p': 'place of burial', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of burial', 'o': 'Vår Frelsers gravlund'}}}

 Q: When did position held of George Canning and end time?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q219731 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Canning', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Canning', 'p': 'position held', 'o': '$y0'}}]

 Q: Charles the Bald has how many noble titles?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q71231 wdt:P97 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Charles the Bald', 'p': 'noble title', 'o': '?x0'}

 Q: Give me {space center} that contains the word {space} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1192221 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'space')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space center'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'space'}}

 Q: What is {before was} of {language official} of {Champa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q216786 wdt:P37 ?X . ?X wdt:P155 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'before was', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Champa', 'p': 'language official', 'o': '$y0'}}

 Q: What is {order} of {Augustine of Canterbury}, that has {founded in} is {Abbey of Monte Cassino} ?
 SPARQL: SELECT ?answer WHERE { wd:Q32520 wdt:P611 ?answer . ?answer wdt:P740 wd:Q334051}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Augustine of Canterbury', 'p': 'order', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'founded in', 'o': 'Abbey of Monte Cassino'}}

 Q: Who did Shirley Jackson marry in 1940?
 SPARQL: SELECT ?obj WHERE { wd:Q239910 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1940')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shirley Jackson', 'p': 'marry', 'o': '?x0', 't': '1940'}

 Q: What is the {airport} for {place served by transport hub} of {Belgrade}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P931 wd:Q3711 . ?sbj wdt:P31 wd:Q1248784 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place served by transport hub', 'o': 'Belgrade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airport'}}

 Q: "Where is {town} of {Al Jawf Region}, which has {diplomatic relation} is {Sweden} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q1471266 wdt:P131 ?answer . ?answer wdt:P530 wd:Q34}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Al Jawf', 'p': 'town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Sweden'}}

 Q: Does the BMW M20B20 have a torque equal to 160?
 SPARQL: ASK WHERE { wd:Q42878353 wdt:P2230 ?obj filter(?obj = 160) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'BMW M20B20', 'p': 'torque', 'o': '?x0', '?x0': '160'}

 Q: What is {twinned administrative body} of {New Orleans} that is {start time} is {2012-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q34404 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New Orleans', 'p': 'twinned administrative body', 'o': '?x0', 't': '2012'}

 Q: What is the musical based on the book The Count of Monte Cristo?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q191838 . ?sbj wdt:P31 wd:Q2743 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'The Count of Monte Cristo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'musical'}}

 Q: What is {nominated for} of {Amélie} that is {nominee} is {Jean Umansky} ?
 SPARQL: SELECT ?obj WHERE { wd:Q484048 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q6171615 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amelie', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Jean Umansky'}}}

 Q: "What is {forename} of {Walter Yeo}, which has {similar to} is {Wöltje} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q7341047 wdt:P735 ?answer . ?answer wdt:P460 wd:Q25927645}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Walter Yeo', 'p': 'forename', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'similar to', 'o': 'Wöltje'}}

 Q: Did {Paul VI} {work location} {Rome} and {Munich} ?
 SPARQL: ASK WHERE { wd:Q16975 wdt:P937 wd:Q220 . wd:Q16975 wdt:P937 wd:Q1726 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Paul VI', 'p': 'work location', 'o': '?x0', '?x0': 'Rome'}, {'h': 'IS', 'v': '?x1', 's': 'Paul VI', 'p': 'work location', 'o': '?x1', '?x1': 'Munich'}]

 Q: What is the time-weighted average exposure limit for arsenic?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q871 wdt:P2404 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'arsenic', 'p': 'time-weighted average exposure limit', 'o': '?x0'}

 Q: How many {superhuman feature or ability} are for {Wonder Woman} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q338430 wdt:P2563 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Wonder Woman', 'p': 'superpower', 'o': '?x0'}

 Q: When did Glen Campbell receive a Grammy Hall of Fame award?
 SPARQL: SELECT ?value WHERE { wd:Q162667 p:P166 ?s . ?s ps:P166 wd:Q81180 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Glen Campbell', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Grammy Hall of Fame'}, 't': '?x0'}

 Q: What is {has grammatical gender} of {second language} of {Aleksandar Šapić} ?
 SPARQL: SELECT ?answer WHERE { wd:Q960994 wdt:P1412 ?X . ?X wdt:P5109 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has grammatical gender', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleksandar Šapić', 'p': 'language', 'o': '$y0'}}

 Q: Which is the birth city of Johann Strauss II which is sized 1.61?
 SPARQL: SELECT ?answer WHERE { wd:Q83309 wdt:P19 ?answer . ?answer wdt:P2046 ?x FILTER(contains(?x,'1.61'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Johann Strauss II', 'p': 'birth city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'size', 'o': '1.61'}}

 Q: Who introduced the prize received of Semyon Budyonny?
 SPARQL: SELECT ?answer WHERE { wd:Q242474 wdt:P166 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'introduced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Semyon Budyonny', 'p': 'prize received', 'o': '$y0'}}

 Q: What is {given name} of {Heinrich Himmler} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43067 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Heinrich Himmler', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: What is the {human} for {child} of {Prince George of Cambridge}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P40 wd:Q13590412 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child', 'o': 'Prince George of Cambridge', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the temperature of cosmic microwave background radiation equal to 2.72548?
 SPARQL: ASK WHERE { wd:Q15605 wdt:P2076 ?obj filter(?obj = 2.72548) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'cosmic microwave background', 'p': 'temperature', 'o': '?x0', '?x0': '2.72548'}

 Q: How many {has grammatical person} are for {French} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q150 wdt:P5110 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'French', 'p': 'has grammatical person', 'o': '?x0'}

 Q: Which statement describes the Pythagorean theorem?
 SPARQL: select distinct ?answer where { wd:Q11518 wdt:P2384 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pythagorean theorem', 'p': 'statement describes', 'o': '?x0'}

 Q: What is <ResearcherID> of <Andrey Korotayev> ?
 SPARQL: select distinct ?answer where { wd:Q189172 wdt:P1053 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andrey Korotayev', 'p': 'ResearcherID', 'o': '?x0'}

 Q: Which euroleague.net ID belongs to Arvydas Sabonis?
 SPARQL: select distinct ?answer where { wd:Q297750 wdt:P3536 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arvydas Sabonis', 'p': 'euroleague.net ID', 'o': '?x0'}

 Q: Which is Städel Museum artist ID for Käthe Kollwitz?
 SPARQL: select distinct ?answer where { wd:Q142472 wdt:P4581 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Käthe Kollwitz', 'p': 'Städel Museum artist ID', 'o': '?x0'}

 Q: What is the {collective pseudonym} for {said to be the same as} of {Coen brothers}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P460 wd:Q56095 . ?sbj wdt:P31 wd:Q16017119 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'Coen brothers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'collective pseudonym'}}

 Q: What is {position held} of {Hermann Göring} that is {replaces} is {Franz von Papen} ?
 SPARQL: SELECT ?obj WHERE { wd:Q47906 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q150552 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hermann Göring', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Franz von Papen'}}}

 Q: What is Deutsche Olympiamannschaft athlete ID for Ralf Schumann ?
 SPARQL: select distinct ?answer where { wd:Q553279 wdt:P4053 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ralf Schumann', 'p': 'Deutsche Olympiamannschaft athlete ID', 'o': '?x0'}

 Q: How many {author of foreword} are to/by {John Lasseter} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2679 wd:Q269214 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'author of foreword', 'o': 'John Lasseter'}

 Q: Is the developer of academic discipline, Petr Vopěnka?
 SPARQL: SELECT ?answer WHERE { wd:Q1888019 wdt:P101 ?X . ?X wdt:P61 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'developer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Petr Vopěnka', 'p': 'discipline', 'o': '$y0'}}

 Q: Which public office is John Jay part of?
 SPARQL:  select distinct ?obj where { wd:Q310847 wdt:P39 ?obj . ?obj wdt:P31 wd:Q294414 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Jay', 'p': 'public office', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public office'}}

 Q: Who was the head of government in Texas in 2015-1-20?
 SPARQL: SELECT ?obj WHERE { wd:Q1439 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Texas', 'p': 'head of government', 'o': '?x0', 't': '2015'}

 Q: Which is the parabolic reflector operated by University of Toronto?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P137 wd:Q180865 . ?sbj wdt:P31 wd:Q1087850 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operated by', 'o': 'University of Toronto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'parabolic reflector'}}

 Q: Is 13413 Bobpeterson inventor find the item operator?
 SPARQL: SELECT ?answer WHERE { wd:Q3597361 wdt:P61 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '13413 Bobpeterson', 'p': 'inventor', 'o': '$y0'}}

 Q: Which is the oxidation state for phosphorus?
 SPARQL: select distinct ?answer where { wd:Q674 wdt:P1121 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'phosphorus', 'p': 'oxidation state', 'o': '?x0'}

 Q: what is the {end time} for {Bruges} has {located in the administrative territorial entity} as {County of Flanders} ?
 SPARQL: SELECT ?value WHERE { wd:Q12994 p:P131 ?s . ?s ps:P131 wd:Q157070 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bruges', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Flanders'}}}

 Q: What are the dynasty which start with the letter paduspanids
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q164950 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'paduspanids')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dynasty'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'paduspanids'}}

 Q: Which is the exploitation visa number of Grease?
 SPARQL: select distinct ?answer where { wd:Q267721 wdt:P2755 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Grease', 'p': 'exploitation visa number', 'o': '?x0'}

 Q: what is the {series ordinal} for {Peter the Great} has {spouse} as {Eudoxia Lopukhina} ?
 SPARQL: SELECT ?value WHERE { wd:Q8479 p:P26 ?s . ?s ps:P26 wd:Q240145 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter the Great', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Eudoxia Lopukhina'}}}

 Q: What is the {art museum} for {residence} of {Rembrandt}
 SPARQL:  select distinct ?obj where { wd:Q5598 wdt:P551 ?obj . ?obj wdt:P31 wd:Q207694 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rembrandt', 'p': 'residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art museum'}}

 Q: What is the {unitary state} with the {MAX(real gross domestic product growth rate)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q179164 . ?ent wdt:P2219 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'real gross domestic product growth rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unitary state'}}

 Q: How many {depicts} are for {Primavera} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q549847 wdt:P180 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Primavera', 'p': 'depicts', 'o': '?x0'}

 Q: what is the {place of publication} for {The Shining} has {publication date} as {1980-11-7} ?
 SPARQL: SELECT ?value WHERE { wd:Q186341 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1980')) . ?s pq:P291 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Shining', 'p': 'published', 'o': '$y0'}}

 Q: Shimon Peres won what award together with someone else?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q57410 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shimon Peres', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Shimon Peres', 'p': 'award', 'o': '$y0'}}]

 Q: What is {date of birth} and {mother} of {{John Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P569 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams Smith'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'mother', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Abigail Adams Smith'}}}]

 Q: When did position held of Harold Holt and electoral district?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q312722 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Holt', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Holt', 'p': 'position held', 'o': '$y0'}}]

 Q: Who is the{legislature} for {location} of {Indore}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q66616 . ?sbj wdt:P31 wd:Q11204 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Indore', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legislature'}}

 Q: what is the {numeric value} for {atomic nucleus} has {has quality} as {baryon number} ?
 SPARQL: SELECT ?value WHERE { wd:Q37147 p:P1552 ?s . ?s ps:P1552 wd:Q110346 . ?s pq:P1181 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'numeric value', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'atomic nucleus', 'p': 'has quality', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has quality', 'o': 'baryon number'}}}

 Q: What is the LinkedIn company ID for Nanyang Technological University?
 SPARQL: select distinct ?answer where { wd:Q721064 wdt:P4264 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nanyang Technological University', 'p': 'LinkedIn company ID', 'o': '?x0'}

 Q: What is the {library} for {archives at} of {Bonn}
 SPARQL:  select distinct ?obj where { wd:Q586 wdt:P485 ?obj . ?obj wdt:P31 wd:Q7075 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bonn', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'library'}}

 Q: Tell me about award received of Henry Dunant and prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q12091 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Dunant', 'p': 'award received', 'o': '$y0'}}]

 Q: What is the {Vostok} for {astronaut mission} of {Yuri Gagarin}
 SPARQL:  select distinct ?obj where { wd:Q7327 wdt:P450 ?obj . ?obj wdt:P31 wd:Q624038 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yuri Gagarin', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Vostok'}}

 Q: What is {nominee for} of {The Apartment}, that has {victor} is {George Arliss} ?
 SPARQL: SELECT ?answer WHERE { wd:Q270510 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q182229}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Apartment', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'victor', 'o': 'George Arliss'}}

 Q: what is the {series ordinal} for {Helmut Kohl} has {given name} as {Michael} ?
 SPARQL: SELECT ?value WHERE { wd:Q2518 p:P735 ?s . ?s ps:P735 wd:Q4927524 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Helmut Kohl', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Michael'}}}

 Q: What is {subject has role} of {Harry Potter} that is {of} is {Harry Potter} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3244512 p:P2868 ?s . ?s ps:P2868 ?obj . ?s pq:P642 wd:Q8337 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject has role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harry Potter', 'p': 'subject has role', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'Harry Potter'}}}

 Q: Do the vehicles per thousand people equal 540 in Dubai?
 SPARQL: ASK WHERE { wd:Q612 wdt:P5167 ?obj filter(?obj = 540) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Dubai', 'p': 'vehicles per thousand people', 'o': '?x0', '?x0': '540'}

 Q: How many connects with the Trans-Siberian railway are there?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q58767 wdt:P2789 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Trans-Siberian railway', 'p': 'connects with', 'o': '?x0'}

 Q: What is the {snooker tournament} for {sport} of {snooker}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P641 wd:Q11015 . ?sbj wdt:P31 wd:Q17299750 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sport', 'o': 'snooker', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'snooker tournament'}}

 Q: What is {located in time zone} of {Saint-Denis} that is {valid in period} is {daylight saving time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q160506 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'located in time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saint-Denis', 'p': 'located in time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'daylight saving time'}}}

 Q: What PhD advisor of Clifford Geertz has the significant works The Structure of Social Action?
 SPARQL: SELECT ?answer WHERE { wd:Q310956 wdt:P184 ?answer . ?answer wdt:P800 wd:Q7767079}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Clifford Geertz', 'p': 'advisor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'The Structure of Social Action'}}

 Q: When did Phuket have a population of 394,169?
 SPARQL: SELECT ?value WHERE { wd:Q182565 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'394169.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Phuket', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '394169.0'}, 't': '?x0'}

 Q: What is {is in the rural city of} of {Fukushima}, that has {has rural cities} is {Kawamata} ?
 SPARQL: SELECT ?answer WHERE { wd:Q161176 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1347240}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fukushima', 'p': 'city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has rural cities', 'o': 'Kawamata'}}

 Q: For what was Anne Revere nominated for in 1943?
 SPARQL: SELECT ?obj WHERE { wd:Q239770 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1943')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anne Revere', 'p': 'nominated for', 'o': '?x0', 't': '1943'}

 Q: What is {nominated for} of {Joel Grey} that is {statement is subject of} is {33rd Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q316641 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4635303 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joel Grey', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '33rd Tony Awards'}}}

 Q: Who coined the name of RNA polymerase, who also has work as a biochemist?
 SPARQL: SELECT ?answer WHERE { wd:Q272631 wdt:P61 ?answer . ?answer wdt:P106 wd:Q2919046}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'RNA polymerase', 'p': 'coined', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'biochemist'}}

 Q: Which is the recurring sporting event of the Tennis Australia organizer that contains the word australian in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj wdt:P664 wd:Q3494880 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'australian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring sporting event', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'organizer', 'o': 'Tennis Australia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'australian'}}

 Q: What is {record held} of {sports event} of {Kamal Ziani} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6355549 wdt:P2416 ?X . ?X wdt:P1000 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'record held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kamal Ziani', 'p': 'sports event', 'o': '$y0'}}

 Q: Under the topic of the history of the Maldives, where were there inhabitants numbering 227,863?
 SPARQL: SELECT ?answer WHERE { wd:Q1074669 wdt:P1269 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'227863.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of the Maldives', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '227863.0'}}

 Q: What is {given name} of {Gian Lorenzo Bernini} that is {series ordinal} is {1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q160538 p:P735 ?s . ?s ps:P735 ?obj . ?s pq:P1545 ?x filter(contains(?x,'1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gian Lorenzo Bernini', 'p': 'first name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '1'}}}

 Q: What is the  divisions of member of École Centrale de Lille ?
 SPARQL: SELECT ?answer WHERE { wd:Q273461 wdt:P463 ?X . ?X wdt:P199 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divisions', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'École Centrale de Lille', 'p': 'member of', 'o': '$y0'}}

 Q: DOES THE MAGNIFICATION OF THE TZF 5E EQUALS 2.4
 SPARQL: ASK WHERE { wd:Q42302426 wdt:P4163 ?obj filter(?obj = 2.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'TZF 5e', 'p': 'magnification', 'o': '?x0', '?x0': '2.4'}

 Q: How many {member of political party} are for {Mátyás Rákosi} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q207631 wdt:P102 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Mátyás Rákosi', 'p': 'party', 'o': '?x0'}

 Q: Which is the nonprofit organization for the authority of the football association?
 SPARQL:  select distinct ?obj where { wd:Q2736 wdt:P797 ?obj . ?obj wdt:P31 wd:Q163740 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'football', 'p': 'authority', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nonprofit organization'}}

 Q: Did Chuck Berry's instruments include the Fender Stratocaster and Gibson ES-335?
 SPARQL: ASK WHERE { wd:Q5921 wdt:P1303 wd:Q208173 . wd:Q5921 wdt:P1303 wd:Q1143818 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chuck Berry', 'p': 'instrument', 'o': '?x0', '?x0': 'Fender Stratocaster'}, {'h': 'IS', 'v': '?x1', 's': 'Chuck Berry', 'p': 'instrument', 'o': '?x1', '?x1': 'Gibson ES-335'}]

 Q: What is {literary genre} of {artist} of {Sarah Brightman in Concert} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11703608 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sarah Brightman in Concert', 'p': 'artist', 'o': '$y0'}}

 Q: What is the {sinking} with the {MAX(number of missing)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q31920535 . ?ent wdt:P1446 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of missing', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sinking'}}

 Q: What is {continent} of {Jin dynasty}, that has {pronunciation audio} is {Fr-Asie.ogg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7352 wdt:P30 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'Fr-Asie.ogg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jin', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pronunciation audio', 'o': 'fr-asie.ogg'}}

 Q: How many {intended public} are to/by {woman} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2360 wd:Q467 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'intended audience', 'o': 'woman'}

 Q: Which fluorine-containing heterocyclic compound has the largest mass ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q193430 . ?ent wdt:P2067 ?obj . ?ent wdt:P527 wd:Q650 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'mass', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'heterocyclic compound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'contain', 'o': 'fluorine'}}}

 Q: What is  in the satellite bus of X Window System ?
 SPARQL: select distinct ?answer where { ?answer wdt:P707 wd:Q178481}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'satellite bus', 'o': 'X Window System'}

 Q: DOES THE ELIGIBLE VOTERS OF THE CATALAN REGIONAL ELECTION 2015 IN CASTELL DE I ARENY EQUALS 48.0
 SPARQL: ASK WHERE { wd:Q44854040 wdt:P1867 ?obj filter(?obj = 48.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "Catalan regional election 2015 in Castell de l'Areny", 'p': 'eligible voters', 'o': '?x0', '?x0': '48.0'}

 Q: When did educated at of Bernice Rubens and academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q449028 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernice Rubens', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernice Rubens', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the {court} for {Jari Sillanpää} has {convicted of} as {driving under the influence} ?
 SPARQL: SELECT ?value WHERE { wd:Q704225 p:P1399 ?s . ?s ps:P1399 wd:Q250062 . ?s pq:P4884 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'court', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jari Sillanpää', 'p': 'convicted of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'convicted of', 'o': 'driving under the influence'}}}

 Q: How many {student of} are for {Caspar David Friedrich} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q104884 wdt:P1066 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Caspar David Friedrich', 'p': 'student of', 'o': '?x0'}

 Q: what is the {academic degree} for {Katherine Dunham} has {educated at} as {University of Chicago} ?
 SPARQL: SELECT ?value WHERE { wd:Q272637 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P512 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Katherine Dunham', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}

 Q: What is the {constituency of the Rajya Sabha} for {coextensive with} of {Himachal Pradesh}
 SPARQL:  select distinct ?obj where { wd:Q1177 wdt:P3403 ?obj . ?obj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Himachal Pradesh', 'p': 'coextensive with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: Which aircraft family is operated by EasyJet?
 SPARQL:  select distinct ?obj where { wd:Q191551 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'EasyJet', 'p': 'operated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: What is {start time} and {end time} of {{Belfast} has {country} as {United Kingdom of Great Britain and Ireland}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q10686 p:P17 ?s . ?s ps:P17 wd:Q174193 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'land', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'United Kingdom of Great Britain and Ireland'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end date', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belfast', 'p': 'land', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'United Kingdom of Great Britain and Ireland'}}}]

 Q: What is {wives} of {landscape of} of {Snake Dance, Ruth St. Denis} ?
 SPARQL: SELECT ?answer WHERE { wd:Q48997623 wdt:P180 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'wives', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Snake Dance, Ruth St. Denis', 'p': 'landscape of', 'o': '$y0'}}

 Q: What is {cases} of {first language} of {Dirk Nowitzki} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44068 wdt:P103 ?X . ?X wdt:P2989 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cases', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dirk Nowitzki', 'p': 'first language', 'o': '$y0'}}

 Q: What is the country of citizenship and occupation of Bruno Mars?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1450 wdt:P27 ?ans_1 . wd:Q1450 wdt:P106 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Bruno Mars', 'p': 'country of citizenship', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Bruno Mars', 'p': 'occupation', 'o': '?x1'}]

 Q: What is the {biographical database} for {location of formation} of {University of Toronto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P740 wd:Q180865 . ?sbj wdt:P31 wd:Q36570165 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location of formation', 'o': 'University of Toronto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biographical database'}}

 Q: Is the maximum peak exposure limit of styrene equal to 3067.2?
 SPARQL: ASK WHERE { wd:Q28917 wdt:P2406 ?obj filter(?obj = 3067.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'styrene', 'p': 'maximum peak exposure limit', 'o': '?x0', '?x0': '3067.2'}

 Q: What are the game mechanics of Dungeons & Dragons?
 SPARQL: select distinct ?answer where { wd:Q1375 wdt:P4151 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dungeons & Dragons', 'p': 'game mechanics', 'o': '?x0'}

 Q: What is <mushroom cap shape> of <Pleurotus ostreatus> ?
 SPARQL: select distinct ?answer where { wd:Q186451 wdt:P784 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pleurotus ostreatus', 'p': 'mushroom cap shape', 'o': '?x0'}

 Q: Does MV Explorer speed equal to 12.5?
 SPARQL: ASK WHERE { wd:Q1384555 wdt:P2052 ?obj filter(?obj = 12.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'MV Explorer', 'p': 'speed', 'o': '?x0', '?x0': '12.5'}

 Q: What is the {sports season} for {participant} of {Magnus Carlsen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P710 wd:Q106807 . ?sbj wdt:P31 wd:Q27020041 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Magnus Carlsen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports season'}}

 Q: What is the drug interaction of the prescribed drug for focal epilepsy?
 SPARQL: SELECT ?answer WHERE { wd:Q7140388 wdt:P2176 ?X . ?X wdt:P769 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'drug interaction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'focal epilepsy', 'p': 'prescribed drug', 'o': '$y0'}}

 Q: What is the {human} for {spouse} of {Oliver Cromwell}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P26 wd:Q44279 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'married to', 'o': 'Oliver Cromwell', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Did {Garth_Brooks} {record label} {Big Machine Records} and {Decca} ?
 SPARQL: ASK WHERE { wd:Q216288 wdt:P264 wd:Q2902300 . wd:Q216288 wdt:P264 wd:Q557632 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Garth Brooks', 'p': 'record label', 'o': '?x0', '?x0': 'Big Machine Records'}, {'h': 'IS', 'v': '?x1', 's': 'Garth Brooks', 'p': 'record label', 'o': '?x1', '?x1': 'Decca'}]

 Q: Is the luminosity of the Alpha Andromedae less than 240.0?
 SPARQL: ASK WHERE { wd:Q13039 wdt:P2060 ?obj filter(?obj < 240.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Alpha Andromedae', 'p': 'luminosity', 'o': '?x0', '?x0': '240.0'}

 Q: What is {studied by} of {subitem of} of {engineering ethics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1133029 wdt:P1269 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'studied by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'engineering ethics', 'p': 'subitem of', 'o': '$y0'}}

 Q: What's the mountain range of the Sayan Mountains?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4552 wd:Q203239 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'mountain range', 'o': 'Sayan Mountains'}

 Q: Which is the substrate of the vegetable oil?
 SPARQL: select distinct ?answer where { ?answer wdt:P2414 wd:Q4739805}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'substrate of', 'o': 'vegetable oil'}

 Q: What product has the highest consumption rate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2424752 . ?ent wdt:P2292 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'consumption rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'product'}}

 Q: What is <Wikimedia language code> of <Quechua> ?
 SPARQL: select distinct ?answer where { wd:Q5218 wdt:P424 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Quechua', 'p': 'Wikimedia language code', 'o': '?x0'}

 Q: What is the {constitutional monarchy} for {contains administrative territorial entity} of {Oslo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P150 wd:Q585 . ?sbj wdt:P31 wd:Q41614 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Oslo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constitutional monarchy'}}

 Q: What is {member of} of {founder} of {postmodernism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47783 wdt:P112 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'postmodernism', 'p': 'founder', 'o': '$y0'}}

 Q: Sébastien Chabal was a member of which sports team in the year 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q465470 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sébastien Chabal', 'p': 'team', 'o': '?x0', 't': '2014'}

 Q: Is there only one platform track?
 SPARQL: ASK WHERE { wd:Q1165108 wdt:P1103 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Danube', 'p': 'number of platform tracks', 'o': '?x0', '?x0': '1'}

 Q: what is philosophical movement that practiced by atheist and which contains the word atheism in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2915955 . ?sbj wdt:P3095 wd:Q13211738 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'atheism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'philosophical movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'practiced by', 'o': 'atheist'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'atheism'}}

 Q: What is the Cultural heritage database in Austria ObjektID for Belvedere?
 SPARQL: select distinct ?answer where { wd:Q211818 wdt:P2951 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Belvedere', 'p': 'Cultural heritage database in Austria ObjektID', 'o': '?x0'}

 Q: Which is the borough in the United Kingdom that contains the administrative territorial entity of Norfolk?
 SPARQL:  select distinct ?obj where { wd:Q23109 wdt:P150 ?obj . ?obj wdt:P31 wd:Q1006876 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Norfolk', 'p': 'contains', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'borough in the United Kingdom'}}

 Q: what is the game name starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11410 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'game'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Which is the painting that contains the word young in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3305213 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'young')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'young'}}

 Q: Which is bordered by the principle office of The Daily Manila Shimbun?
 SPARQL: SELECT ?answer WHERE { wd:Q50552435 wdt:P159 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bordered by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Daily Manila Shimbun', 'p': 'principle office', 'o': '$y0'}}

 Q: What country did Franz Kafka have a citizenship in in 1882-7-3?
 SPARQL: SELECT ?obj WHERE { wd:Q905 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1883')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Franz Kafka', 'p': 'citizenship', 'o': '?x0', 't': '1883'}

 Q: What is <spore print color> of <brown> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P787 wd:Q47071}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'spore print color', 'o': 'brown'}

 Q: Who is the seiyu of part of a series of Max Jets?
 SPARQL: SELECT ?answer WHERE { wd:Q51164988 wdt:P179 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seiyu', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Max Jets', 'p': 'series', 'o': '$y0'}}

 Q: Who is bestowed by the award won from Karmen Jelincic?
 SPARQL: SELECT ?answer WHERE { wd:Q43325468 wdt:P166 ?X . ?X wdt:P1027 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bestowed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karmen Jelincic', 'p': 'award', 'o': '$y0'}}

 Q: Which is the public holiday of Georgia?
 SPARQL: select distinct ?answer where { wd:Q230 wdt:P832 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georgia', 'p': 'public holiday', 'o': '?x0'}

 Q: Give me {sovereign state} that {highest judicial authority} {British Supreme Court for China and Japan} and which that starts with {'j'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3624078 . ?sbj wdt:P209 wd:Q3001101 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'j')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest judicial authority', 'o': 'British Supreme Court for China and Japan'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'j'}}

 Q: What is {position held} of {F. W. de Klerk} that is {replaces} is {Alwyn Schlebusch} ?
 SPARQL: SELECT ?obj WHERE { wd:Q151813 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q449929 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'F. W. de Klerk', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Alwyn Schlebusch'}}}

 Q: What is the {natural satellite} for {parent astronomical body} of {Uranus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P397 wd:Q324 . ?sbj wdt:P31 wd:Q2537 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent astronomical body', 'o': 'Uranus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural satellite'}}

 Q: Does Bitfinex has a trading fee equal to 0.16?
 SPARQL: ASK WHERE { wd:Q29647473 wdt:P5896 ?obj filter(?obj = 0.16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Bitfinex', 'p': 'trading fee', 'o': '?x0', '?x0': '0.16'}

 Q: what is the {point in time} for {Jeff Bridges} has {award received} as {Golden Globe Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q174843 p:P166 ?s . ?s ps:P166 wd:Q1011547 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Jeff Bridges', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Golden Globe Award'}, 't': '?x0'}

 Q: What is the {writing system} for {different from} of {traditional Chinese characters}
 SPARQL:  select distinct ?obj where { wd:Q178528 wdt:P1889 ?obj . ?obj wdt:P31 wd:Q8192 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'traditional Chinese characters', 'p': 'different from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'writing system'}}

 Q: In 1258, what is Abbasid Caliphate?
 SPARQL: SELECT ?obj WHERE { wd:Q12536 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1258')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Abbasid Caliphate', 'p': 'type', 'o': '?x0', 't': '1258'}

 Q: What is the {dialect} for {writing system} of {Arabic alphabet}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P282 wd:Q8196 . ?sbj wdt:P31 wd:Q33384 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'alphabet', 'o': 'Arabic alphabet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dialect'}}

 Q: Which is the spin quantum number for boson?
 SPARQL: select distinct ?answer where { wd:Q43101 wdt:P1122 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'boson', 'p': 'spin quantum number', 'o': '?x0'}

 Q: What governing text regarding perjury has the shortened name StGB?
 SPARQL: SELECT ?answer WHERE { wd:Q310229 wdt:P92 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'StGB'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'perjury', 'p': 'governing text', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'stgb'}}

 Q: Give me {dog breed} that {country of origin} {Germany} and which contains the word {weimaraner} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj wdt:P495 wd:Q183 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weimaraner')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog breed', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Germany'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'weimaraner'}}

 Q: What is {educated at} of {Nicolaus Copernicus} that is {end time} is {1503-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q619 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1503')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nicolaus Copernicus', 'p': 'educated at', 'o': '?x0', 't': '1503'}

 Q: Which is {award received} by {pupil} of {Enrico Fermi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8753 wdt:P802 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award received', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Enrico Fermi', 'p': 'pupil', 'o': '$y0'}}

 Q: Name the songwriter of Fantasia on a Theme by Thomas Tallis and has Joan Trimble as disciple.
 SPARQL: SELECT ?answer WHERE { wd:Q2608920 wdt:P86 ?answer . ?answer wdt:P802 wd:Q544277}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fantasia on a Theme by Thomas Tallis', 'p': 'songwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'disciple', 'o': 'Joan Trimble'}}

 Q: What is {follows} and {followed by} of {{Berengar I of Italy} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar I of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: What is {position held} of {Al Franken} that is {start time} is {2009-7-7} ?
 SPARQL: SELECT ?obj WHERE { wd:Q319084 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Al Franken', 'p': 'position held', 'o': '?x0', 't': '2009'}

 Q: What is in the village of Negev that has diplomatic relations with the Czech Republic?
 SPARQL: SELECT ?answer WHERE { wd:Q162843 wdt:P131 ?answer . ?answer wdt:P530 wd:Q213}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Negev', 'p': 'is in the village of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Czech Republic'}}

 Q: Give me {borough of New York City} that {category of associated people} {Category:People from Manhattan} and which contains the word {manhattan} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q408804 . ?sbj wdt:P1792 wd:Q7234769 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'manhattan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'borough of New York City', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:People from Manhattan'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'manhattan'}}

 Q: What is {writer} of {prequel is} of {Girls under Pressure} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5564713 wdt:P155 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Girls under Pressure', 'p': 'prequel is', 'o': '$y0'}}

 Q: which physical object starts with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q223557 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical object'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Does the earthquake magnitude on the Richter magnitude scale of the 1995 Marathon earthquake equal 5.7?
 SPARQL: ASK WHERE { wd:Q4590475 wdt:P2528 ?obj filter(?obj = 5.7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1995 Marathon earthquake', 'p': 'earthquake magnitude on the Richter magnitude scale', 'o': '?x0', '?x0': '5.7'}

 Q: What are the angle that starts with the letter e
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11352 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'angle'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: What is the {film series} for {producer} of {Mike Myers}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P162 wd:Q185724 . ?sbj wdt:P31 wd:Q24856 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'produced by', 'o': 'Mike Myers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film series'}}

 Q: Is the oxidation state of phosphorus equal to 3?
 SPARQL: ASK WHERE { wd:Q674 wdt:P1121 ?obj filter(?obj = 3) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'phosphorus', 'p': 'oxidation state', 'o': '?x0', '?x0': '3'}

 Q: What is <Bien de Interés Cultural (BIC) code> of <Cave of Altamira> ?
 SPARQL: select distinct ?answer where { wd:Q133575 wdt:P808 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cave of Altamira', 'p': 'Bien de Interés Cultural (BIC) code', 'o': '?x0'}

 Q: What is <together with> of <AIDS> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1706 wd:Q12199}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'together with', 'o': 'AIDS'}

 Q: What state of matter is water in when it's density is .9857?
 SPARQL: SELECT ?value WHERE { wd:Q283 p:P2054 ?s . ?s ps:P2054 ?x filter(contains(?x,'0.9857')) . ?s pq:P515 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'state of matter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'density', 'o': '0.9857'}}}

 Q: Give me {nutrient} that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q181394 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'nutrient'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Did {Chennai} {twinned administrative body} {Chongqing} and {Ulsan} ?
 SPARQL: ASK WHERE { wd:Q1352 wdt:P190 wd:Q11725 . wd:Q1352 wdt:P190 wd:Q41278 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Chennai', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Chongqing'}, {'h': 'IS', 'v': '?x1', 's': 'Chennai', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Ulsan'}]

 Q: What is {cases} of {language official} of {Grand Duchy of Finland} ?
 SPARQL: SELECT ?answer WHERE { wd:Q62633 wdt:P37 ?X . ?X wdt:P2989 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cases', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grand Duchy of Finland', 'p': 'official language', 'o': '$y0'}}

 Q: What type of artwork does Jane Pauley's husband do?
 SPARQL: SELECT ?answer WHERE { wd:Q11274043 wdt:P26 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jane Pauley', 'p': 'husband', 'o': '$y0'}}

 Q: What is nominated for Gwen Verdon at 1966-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q508843 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1966')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gwen Verdon', 'p': 'nominated for', 'o': '?x0', 't': '1966'}

 Q: What is the {fictional humanoid} for {present in work} of {Looney Tunes}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q622435 . ?sbj wdt:P31 wd:Q28020127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Looney Tunes', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional humanoid'}}

 Q: What territory overlaps the Rideau Canal?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q651323 wdt:P3179 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Rideau Canal', 'p': 'territory overlaps', 'o': '?x0'}

 Q: What is the {spouse} and the {position played on team / speciality} of {Diego_Maradona} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q17515 wdt:P26 ?ans_1 . wd:Q17515 wdt:P413 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Diego Maradona', 'p': 'spouse', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Diego Maradona', 'p': 'position played on team / speciality', 'o': '?x1'}]

 Q: What is {in work} of {actor} of {Looney Tunes Super Stars' Pepe Le Pew: Zee Best of Zee Best} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6675710 wdt:P161 ?X . ?X wdt:P1441 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Looney Tunes Super Stars' Pepe Le Pew: Zee Best of Zee Best", 'p': 'actor', 'o': '$y0'}}

 Q: What are the genetic association and the health specialty of a Migraine?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q133823 wdt:P2293 ?ans_1 . wd:Q133823 wdt:P1995 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Migraine', 'p': 'genetic association', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Migraine', 'p': 'health specialty', 'o': '?x1'}]

 Q: What is {compiled by} of {published by} of {A Portrait of the Artist as a Young Man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q465360 wdt:P123 ?X . ?X wdt:P98 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'compiled by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A Portrait of the Artist as a Young Man', 'p': 'published by', 'o': '$y0'}}

 Q: What is {adjacent to} of {Essex}, that has {divides into} is {Royal Borough of Kensington and Chelsea} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23240 wdt:P47 ?answer . ?answer wdt:P150 wd:Q188801}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Essex', 'p': 'adjacent to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Royal Borough of Kensington and Chelsea'}}

 Q: What is {diplomatic relation} of {Israel} that is {statement is subject of} is {Israel–United States relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q801 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q607505 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Israel', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Israel–United States relations'}}}

 Q: Did {Zinedine_Zidane} {position played on team / speciality} {midfielder}?
 SPARQL: ASK WHERE { wd:Q1835 wdt:P413 wd:Q193592 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Zinedine Zidane', 'p': 'position played on team / speciality', 'o': '?x0', '?x0': 'midfielder'}]

 Q: Who was Robert Shaw married to until 1975?
 SPARQL: SELECT ?obj WHERE { wd:Q313727 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Robert Shaw', 'p': 'married to', 'o': '?x0', 't': '1975'}

 Q: What is {member of} of {diplomatic relation} of {Belgium} ?
 SPARQL: SELECT ?answer WHERE { wd:Q31 wdt:P530 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belgium', 'p': 'diplomatic relation', 'o': '$y0'}}

 Q: What is the {sub-orbital spaceflight} for {astronaut mission} of {Alan Shepard}
 SPARQL:  select distinct ?obj where { wd:Q174979 wdt:P450 ?obj . ?obj wdt:P31 wd:Q832435 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alan Shepard', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sub-orbital spaceflight'}}

 Q: What chemical substance is named after sperm whales?
 SPARQL:  select distinct ?obj where { wd:Q81214 wdt:P138 ?obj . ?obj wdt:P31 wd:Q79529 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sperm whale', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical substance'}}

 Q: Which is the HQ location of the party of the member Rajesh Khanna?
 SPARQL: SELECT ?answer WHERE { wd:Q107130 wdt:P102 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'HQ', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rajesh Khanna', 'p': 'party', 'o': '$y0'}}

 Q: what is the {point in time} for {Joe Greene} has {award received} as {AP NFL Defensive Player of the Year Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q505256 p:P166 ?s . ?s ps:P166 wd:Q835765 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Joe Greene', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'AP NFL Defensive Player of the Year Award'}, 't': '?x0'}

 Q: How many work locations are by Wuppertal?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P937 wd:Q2107 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Wuppertal'}

 Q: Did {Seoul} {contains administrative territorial entity} {Jongno District} and {Gangbuk District} ?
 SPARQL: ASK WHERE { wd:Q8684 wdt:P150 wd:Q36929 . wd:Q8684 wdt:P150 wd:Q50349 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Seoul', 'p': 'contains administrative territorial entity', 'o': '?x0', '?x0': 'Jongno District'}, {'h': 'IS', 'v': '?x1', 's': 'Seoul', 'p': 'contains administrative territorial entity', 'o': '?x1', '?x1': 'Gangbuk District'}]

 Q: Which is the publisher of Through the Looking-Glass?
 SPARQL: select distinct ?answer where { wd:Q220331 wdt:P123 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Through the Looking-Glass', 'p': 'publisher', 'o': '?x0'}

 Q: What is the {country} for {contains administrative territorial entity} of {European Union}
 SPARQL:  select distinct ?obj where { wd:Q458 wdt:P150 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Union', 'p': 'contains administrative territorial entity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'countries'}}

 Q: Which is the Cycling Quotient male cyclist ID of Chris Froome?
 SPARQL: select distinct ?answer where { wd:Q319591 wdt:P1541 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chris Froome', 'p': 'Cycling Quotient male cyclist ID', 'o': '?x0'}

 Q: What is {position held} of {Giorgio Vasari} that is {employer} is {House of Medici} ?
 SPARQL: SELECT ?obj WHERE { wd:Q128027 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P108 wd:Q170022 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giorgio Vasari', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'House of Medici'}}}

 Q: Which is the Art Museum of Estonia artist ID for Egon Schiele?
 SPARQL: select distinct ?answer where { wd:Q44032 wdt:P4563 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Egon Schiele', 'p': 'Art Museum of Estonia artist ID', 'o': '?x0'}

 Q: what is the {point in time} for {James Garner} has {nominated for} as {Screen Actors Guild Award for Outstanding Performance by a Male Actor in a Miniseries or Television Movie} ?
 SPARQL: SELECT ?value WHERE { wd:Q108510 p:P1411 ?s . ?s ps:P1411 wd:Q2665878 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'James Garner', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Screen Actors Guild Award for Outstanding Performance by a Male Actor in a Miniseries or Television Movie'}, 't': '?x0'}

 Q: How many {religious name} are for {Mother Teresa} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q30547 wdt:P1635 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Mother Teresa', 'p': 'religious name', 'o': '?x0'}

 Q: What is the portrait of Thomas Lawrence's major works?
 SPARQL: SELECT ?answer WHERE { wd:Q312096 wdt:P800 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'portrait of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Lawrence', 'p': 'work', 'o': '$y0'}}

 Q: Which is the taxon that has effect on typhus?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1542 wd:Q160649 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has effect', 'o': 'typhus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: What is Uzbekistan's PPP GDP per capita?
 SPARQL: select distinct ?answer where { wd:Q265 wdt:P2299 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Uzbekistan', 'p': 'PPP GDP per capita', 'o': '?x0'}

 Q: Is the relative permeability of iron equal to 240000.0
 SPARQL: ASK WHERE { wd:Q677 wdt:P5676 ?obj filter(?obj = 240000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'iron', 'p': 'relative permeability', 'o': '?x0', '?x0': '240000.0'}

 Q: What is {head of government} of {Niamey} that is {end time} is {1970-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q3674 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1970')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Niamey', 'p': 'head of government', 'o': '?x0', 't': '1970'}

 Q: What is the administrative territorial entity of Khabarovsk that was established on April 28th, 2004?
 SPARQL: SELECT ?obj WHERE { wd:Q4454 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2004')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Khabarovsk', 'p': 'in', 'o': '?x0', 't': '2004'}

 Q: What is Allcinema film ID for Groundhog Day ?
 SPARQL: select distinct ?answer where { wd:Q488655 wdt:P2465 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Groundhog Day', 'p': 'Allcinema film ID', 'o': '?x0'}

 Q: What are the photographic technique which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1439691 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'photographic technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Which is the ultimate tensile strength of nylon?
 SPARQL: select distinct ?answer where { wd:Q177941 wdt:P5479 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'nylon', 'p': 'ultimate tensile strength', 'o': '?x0'}

 Q: What do you call the tenant of a farm who works in the sector of agriculture?
 SPARQL: SELECT ?answer WHERE { wd:Q131596 wdt:P466 ?answer . ?answer wdt:P452 wd:Q11451}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'farm', 'p': 'tenant', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sector', 'o': 'agriculture'}}

 Q: When was the inflation rate for Lebanon 34.2?
 SPARQL: SELECT ?value WHERE { wd:Q822 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'34.2')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Lebanon', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '34.2'}, 't': '?x0'}

 Q: What is {olympic record} of {sports} {relay race} ?
 SPARQL: SELECT ?answer WHERE { wd:Q327742 wdt:P641 ?X . ?X wdt:P2869 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'olympic record', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'relay race', 'p': 'sport', 'o': '$y0'}}

 Q: What is {higher taxon} of {Viola}, that has {vernacular name} is {Фиалковые} ?
 SPARQL: SELECT ?answer WHERE { wd:Q146095 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Фиалковые'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Viola', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'фиалковые'}}

 Q: What is the {Class IC flammable liquid} with the {MAX(boiling point)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009056 . ?ent wdt:P2102 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'boiling point', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IC flammable liquid'}}

 Q: What is <lower flammable limit> of <phosphine> ?
 SPARQL: select distinct ?answer where { wd:Q207877 wdt:P2202 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'phosphine', 'p': 'lower flammable limit', 'o': '?x0'}

 Q: What was the population of Mashhad on September 11th, 1991?
 SPARQL: SELECT ?obj WHERE { wd:Q121157 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mashhad', 'p': 'population', 'o': '?x0', 't': '1991'}

 Q: Which is the administrative territorial entity for the territory claimed by the German Democratic Republic?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1336 wd:Q16957 . ?sbj wdt:P31 wd:Q56061 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'territory claimed by', 'o': 'German Democratic Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'administrative territorial entity'}}

 Q: what is the {start time} for {Empire of Japan} has {shares border with} as {Republic of China (1912–1949)} ?
 SPARQL: SELECT ?value WHERE { wd:Q188712 p:P47 ?s . ?s ps:P47 wd:Q13426199 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Japan', 'p': 'border', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'border', 'o': 'China'}}}

 Q: What is {first language} of {inventor or discoverer} of {Indo-European languages} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19860 wdt:P61 ?X . ?X wdt:P103 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Indo-European languages', 'p': 'discoverer', 'o': '$y0'}}

 Q: What is {executive power headed by} of {place of origin} of {Led Zeppelin} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2331 wdt:P495 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'executive power headed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Led Zeppelin', 'p': 'place of origin', 'o': '$y0'}}

 Q: "Which is {bordered by} of {Tamaulipas}, where has {has shires} is {Brewster County} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q80007 wdt:P47 ?answer . ?answer wdt:P150 wd:Q109160}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tamaulipas', 'p': 'bordered by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has shires', 'o': 'Brewster County'}}

 Q: What is {died in} of {Thomas Cole}, that has {divided into} is {Rensselaer County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q334001 wdt:P20 ?answer . ?answer wdt:P150 wd:Q156566}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Cole', 'p': 'died in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Rensselaer County'}}

 Q: What is the {biblical episode} for {significant event} of {Judas Iscariot}
 SPARQL:  select distinct ?obj where { wd:Q81018 wdt:P793 ?obj . ?obj wdt:P31 wd:Q22704077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Judas Iscariot', 'p': 'significant event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}}

 Q: What is the {referendums in Ireland} with the {MAX(votes received)} whose {follows} is {Thirty-First Amendment of the Constitution of Ireland}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q54086790 . ?ent wdt:P1111 ?obj . ?ent wdt:P155 wd:Q4310000 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'votes received', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'referendums in Ireland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'Thirty-First Amendment of the Constitution of Ireland'}}}

 Q: Did {The_Chainsmokers} {country of origin} {United States of America}?
 SPARQL: ASK WHERE { wd:Q7721993 wdt:P495 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'The Chainsmokers', 'p': 'country of origin', 'o': '?x0', '?x0': 'United States of America'}]

 Q: What is the {video game} for {voice actor} of {Phil LaMarr}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q356541 . ?sbj wdt:P31 wd:Q7889 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Phil LaMarr', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game'}}

 Q: What is the {human} for {sport} of {Australian rules football}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P641 wd:Q50776 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'play', 'o': 'Australian rules football', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the population of Terrassa at 2014-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q13939 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Terrassa', 'p': 'population', 'o': '?x0', 't': '2014'}

 Q: Taj Mahal, the humans place of burial is where?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P119 wd:Q9141 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place of burial', 'o': 'Taj Mahal', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: what is the {point in time} for {Günter Grass} has {award received} as {Princess of Asturias Literary Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q6538 p:P166 ?s . ?s ps:P166 wd:Q3332454 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Günter Grass', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Princess of Asturias Literary Prize'}, 't': '?x0'}

 Q: What is RePEc Short-ID for Lars Peter Hansen ?
 SPARQL: select distinct ?answer where { wd:Q1386049 wdt:P2428 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lars Peter Hansen', 'p': 'RePEc Short-ID', 'o': '?x0'}

 Q: Kingdom of Prussia is followed by how many?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P156 wd:Q27306 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'Kingdom of Prussia'}

 Q: What is the source of material of Central Africa?
 SPARQL: select distinct ?answer where { ?answer wdt:P2647 wd:Q27433}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'source of material', 'o': 'Central Africa'}

 Q: What is {location born} of {Mikhail Frunze}, that has {inhabitants} is {750327.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q191882 wdt:P19 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'750327.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mikhail Frunze', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '750327.0'}}

 Q: What is {date of death} of {Pausanias} that is {sourcing circumstances} is {circa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192931 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P1480 wd:Q5727902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pausanias', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'sourcing circumstances', 'o': 'circa'}}}

 Q: What award did Peter Debye receive and how much was the prize money?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q103835 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Debye', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Debye', 'p': 'award', 'o': '$y0'}}]

 Q: What is the {big city} for {shares border with} of {Los Angeles}
 SPARQL:  select distinct ?obj where { wd:Q65 wdt:P47 ?obj . ?obj wdt:P31 wd:Q1549591 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'LA', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'big city'}}

 Q: What is the Swedish Gravestone ID of Alfred Nobel?
 SPARQL: select distinct ?answer where { wd:Q23810 wdt:P5259 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alfred Nobel', 'p': 'Swedish Gravestone ID', 'o': '?x0'}

 Q: What is Museofile of Musée d'Orsay ?
 SPARQL: select distinct ?answer where { wd:Q23402 wdt:P539 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Musée d'Orsay", 'p': 'Museofile', 'o': '?x0'}

 Q: When did the Republic of Bashkortostan cease to be under the administrative territorial entity of the Russian Soviet Federative Socialist Republic?
 SPARQL: SELECT ?value WHERE { wd:Q5710 p:P131 ?s . ?s ps:P131 wd:Q2184 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bashkortostan', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Russian Soviet Federative Socialist Republic'}}}

 Q: Who is the owner of the East India Company and where is the headquarters located?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q83164 wdt:P1830 ?ans_1 . wd:Q83164 wdt:P159 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'East India Company', 'p': 'owner of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'East India Company', 'p': 'headquarters', 'o': '?x1'}]

 Q: What is <Open Media Database film ID> of <Mad Max> ?
 SPARQL: select distinct ?answer where { wd:Q248775 wdt:P3302 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mad Max', 'p': 'Open Media Database film ID', 'o': '?x0'}

 Q: What is {divides into} of {depiction of} of {Garden in Guangzhou} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50818549 wdt:P180 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divides into', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Garden in Guangzhou', 'p': 'depiction of', 'o': '$y0'}}

 Q: Which has villages in Corrientes with co-ordinate location of -27.75?
 SPARQL: SELECT ?answer WHERE { wd:Q44758 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'-27.75'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Corrientes', 'p': 'has villages', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-ordinate location', 'o': '-27.75'}}

 Q: What is {papers at} of {narrative set in} of {The Grapes of Wrath} ?
 SPARQL: SELECT ?answer WHERE { wd:Q215983 wdt:P840 ?X . ?X wdt:P485 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'papers at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Grapes of Wrath', 'p': 'narrative set in', 'o': '$y0'}}

 Q: What is {time} of {implies} of {turbulence} ?
 SPARQL: SELECT ?answer WHERE { wd:Q190132 wdt:P1542 ?X . ?X wdt:P585 ?answer}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'turbulence', 'p': 'implies', 'o': '$y0', 't': '?x0'}

 Q: What is the {historical country} for {capital} of {Tenochtitlan}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q13695 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Tenochtitlan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is Gamebase64 identifier for Donkey Kong?
 SPARQL: select distinct ?answer where { wd:Q12384 wdt:P4917 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Donkey Kong', 'p': 'Gamebase64 identifier', 'o': '?x0'}

 Q: What was the population of Hanoi in 2015?
 SPARQL: SELECT ?obj WHERE { wd:Q1858 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2015')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hanoi', 'p': 'population', 'o': '?x0', 't': '2015'}

 Q: What ethnic groups formed from the Uyghur people?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P172 wd:Q46118 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'ethnic group', 'o': 'Uyghur people'}

 Q: What is {sRGB colour hex triplet} of {colour} of {charcoal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q177463 wdt:P462 ?X . ?X wdt:P465 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'RGB', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'charcoal', 'p': 'colour', 'o': '$y0'}}

 Q: What is {art collection} of {on the tracklist of} of {Papyrus Oxyrhynchus 223} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7133388 wdt:P1433 ?X . ?X wdt:P195 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'collection', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Papyrus Oxyrhynchus 223', 'p': 'on the tracklist of', 'o': '$y0'}}

 Q: How many {participant of} are to/by {Spanish Civil War} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1344 wd:Q10859 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'participant of', 'o': 'Spanish Civil War'}

 Q: Mario Vargas Llosa has which Base de datos de premiados person ID?
 SPARQL: select distinct ?answer where { wd:Q39803 wdt:P5498 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mario Vargas Llosa', 'p': 'Base de datos de premiados person ID', 'o': '?x0'}

 Q: What is {PIN Code} of {lives in} of {Halle Berry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1033016 wdt:P551 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'PIN Code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Halle Berry', 'p': 'lives in', 'o': '$y0'}}

 Q: What were the last words of Jesus Christ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q302 wdt:P3909 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Jesus', 'p': 'last words', 'o': '?x0'}

 Q: What is {seiyu} of {succeeds to} of {Planes: Fire & Rescue} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15631322 wdt:P155 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seiyu', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Planes: Fire & Rescue', 'p': 'succeeds to', 'o': '$y0'}}

 Q: How many {author} are for {New Testament} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q18813 wdt:P50 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'New Testament', 'p': 'author', 'o': '?x0'}

 Q: Is the admission rate of the University of British Columbia more than 0.4192?
 SPARQL: ASK WHERE { wd:Q391028 wdt:P5822 ?obj filter(?obj > 0.4192) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'University of British Columbia', 'p': 'admission rate', 'o': '?x0', '?x0': '0.4192'}

 Q: How many {diplomatic relation} are to/by {Bangladesh} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P530 wd:Q902 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Bangladesh'}

 Q: What was William Blake a student of and who was his student?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q41513 wdt:P1066 ?ans_1 . wd:Q41513 wdt:P802 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'William Blake', 'p': 'student of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'William Blake', 'p': 'student', 'o': '?x1'}]

 Q: On what military branch Sigmund Jähn served until 1965?
 SPARQL: SELECT ?obj WHERE { wd:Q57229 p:P241 ?s . ?s ps:P241 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1965')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sigmund Jähn', 'p': 'military branch', 'o': '?x0', 't': '1965'}

 Q: what is the {located in the administrative territorial entity} for {Nikita Mikhalkov} has {place of birth} as {Moscow} ?
 SPARQL: SELECT ?value WHERE { wd:Q55207 p:P19 ?s . ?s ps:P19 wd:Q649 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nikita Mikhalkov', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of birth', 'o': 'Moscow'}}}

 Q: Is the apparent magnitude of the Messier 2 less than 5.2?
 SPARQL: ASK WHERE { wd:Q11099 wdt:P1215 ?obj filter(?obj < 5.2) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Messier 2', 'p': 'apparent magnitude', 'o': '?x0', '?x0': '5.2'}

 Q: What is {sculptors} of {The Smurfs}, that has {gender identity} is {male} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11221 wdt:P170 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Smurfs', 'p': 'sculptor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'male', 'o': 'male'}}

 Q: Give me end time for Alexey Leonov has significant event as extra-vehicular activity?
 SPARQL: SELECT ?value WHERE { wd:Q154269 p:P793 ?s . ?s ps:P793 wd:Q182020 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexey Leonov', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'significant event', 'o': 'extra-vehicular activity'}}}

 Q: What is the {human} for {founded by} of {International Red Cross and Red Crescent Movement}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q7178 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'International Red Cross and Red Crescent Movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the maximum Strahler number of the Kipps Run equal 2?
 SPARQL: ASK WHERE { wd:Q17298033 wdt:P1548 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Kipps Run', 'p': 'maximum Strahler number', 'o': '?x0', '?x0': '2'}

 Q: What award did Walter Cronkite receive in 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q31073 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Walter Cronkite', 'p': 'award', 'o': '?x0', 't': '1980'}

 Q: what is the {point in time} for {Jacobus Henricus van 't Hoff} has {award received} as {Helmholtz Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q102822 p:P166 ?s . ?s ps:P166 wd:Q1562616 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': "Jacobus Henricus van 't Hoff", 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Helmholtz Medal'}, 't': '?x0'}

 Q: What profession has the highest base salary?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q28640 . ?ent wdt:P3618 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'base salary', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: what is the {replaced by} for {Peter Damian} has {position held} as {cardinal-bishop} ?
 SPARQL: SELECT ?value WHERE { wd:Q258369 p:P39 ?s . ?s ps:P39 wd:Q1729113 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Damian', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'cardinal-bishop'}}}

 Q: Does the Maschingewehrkraftwagen have a maximum capacoty equal to 2
 SPARQL: ASK WHERE { wd:Q551296 wdt:P1083 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Maschinengewehrkraftwagen', 'p': 'maximum capacity', 'o': '?x0', '?x0': '2'}

 Q: Tell me gene whose name has the word vgf in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7187 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vgf')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vgf'}}

 Q: Does the net tonnage of the Maggie Lee equal 8?
 SPARQL: ASK WHERE { wd:Q6730270 wdt:P2790 ?obj filter(?obj = 8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Maggie Lee', 'p': 'net tonnage', 'o': '?x0', '?x0': '8'}

 Q: What award was Glenn Gould nominated for in 1982?
 SPARQL: SELECT ?obj WHERE { wd:Q216924 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Glenn Gould', 'p': 'nominated for', 'o': '?x0', 't': '1982'}

 Q: What is {nominated for} of {William Styron} that is {for work} is {Lie Down in Darkness} ?
 SPARQL: SELECT ?obj WHERE { wd:Q245257 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q4003902 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Styron', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Lie Down in Darkness'}}}

 Q: Give me {computer model} that {operating system} {Commodore BASIC V2} and which contains the word {64} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55990535 . ?sbj wdt:P306 wd:Q1115899 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), '64')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'operating system', 'o': 'Commodore BASIC V2'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': '64'}}

 Q: What is {start time} and {number of points/goals/set scored} of {{Peter Schmeichel} has {member of sports team} as {Manchester City F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q182314 p:P54 ?s . ?s ps:P54 wd:Q50602 . ?s pq:P580 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Schmeichel', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Manchester City F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Schmeichel', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Manchester City F.C.'}}}]

 Q: What is Armenian Cinema ID for Aram Khachaturian ?
 SPARQL: select distinct ?answer where { wd:Q152293 wdt:P5218 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aram Khachaturian', 'p': 'Armenian Cinema ID', 'o': '?x0'}

 Q: When did the Seychelles have an inflation rate of 2.3%?
 SPARQL: SELECT ?value WHERE { wd:Q1042 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'2.3')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Seychelles', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '2.3'}, 't': '?x0'}

 Q: Is 160 the stroke of the Mayback MD 871?
 SPARQL: ASK WHERE { wd:Q1914397 wdt:P2557 ?obj filter(?obj = 160.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Maybach MD 871', 'p': 'stroke', 'o': '?x0', '?x0': '160.0'}

 Q: What Han Chinese person has the largest net worth?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q42740 . ?ent wdt:P2218 ?obj . ?ent wdt:P31 wd:Q42740 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'net worth', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Han'}}

 Q: what is the {for work} for {Alanis Morissette} has {nominated for} as {Juno Award for Songwriter of the Year} ?
 SPARQL: SELECT ?value WHERE { wd:Q130742 p:P1411 ?s . ?s ps:P1411 wd:Q6314105 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alanis Morissette', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Juno Award for Songwriter of the Year'}}}

 Q: What is the {subject of international law} for {subsidiary} of {United Nations General Assembly}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P355 wd:Q47423 . ?sbj wdt:P31 wd:Q1896989 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'subsidiary', 'o': 'United Nations General Assembly', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'subject of international law'}}

 Q: Which airline has the highest total revenue?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q46970 . ?ent wdt:P2139 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total revenue', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}}

 Q: what is the {start time} for {Demi Moore} has {spouse} as {Bruce Willis} ?
 SPARQL: SELECT ?value WHERE { wd:Q43044 p:P26 ?s . ?s ps:P26 wd:Q2680 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Demi Moore', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Bruce Willis'}}}

 Q: What is {nominated for} of {Gene Hackman} that is {statement is subject of} is {43rd Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q150943 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q937162 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gene Hackman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '43rd Academy Awards'}}}

 Q: What was the university attended by Jad Abumrad while he was a member of the Center for Research Libraries?
 SPARQL: SELECT ?answer WHERE { wd:Q2856132 wdt:P69 ?answer . ?answer wdt:P463 wd:Q5059850}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jad Abumrad', 'p': 'university attended', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Center for Research Libraries'}}

 Q: What is { pronunciation audio } of { butter } that is { working language or name } is { Czech }?
 SPARQL: SELECT ?obj WHERE { wd:Q34172 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q9056 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'butter', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language', 'o': 'Czech'}}}

 Q: Which is the UNII for silver nitrate?
 SPARQL: select distinct ?answer where { wd:Q207442 wdt:P652 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'silver nitrate', 'p': 'UNII', 'o': '?x0'}

 Q: Did {RuPaul} {genre} {Eurodance} and {electronic dance music} ?
 SPARQL: ASK WHERE { wd:Q705715 wdt:P136 wd:Q216961 . wd:Q705715 wdt:P136 wd:Q851213 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'RuPaul', 'p': 'genre', 'o': '?x0', '?x0': 'Eurodance'}, {'h': 'IS', 'v': '?x1', 's': 'RuPaul', 'p': 'genre', 'o': '?x1', '?x1': 'electronic dance music'}]

 Q: What are the art form which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56055944 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art form'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Who is starring in the film series of Souls of the Departed?
 SPARQL: SELECT ?answer WHERE { wd:Q23022717 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Souls of the Departed', 'p': 'series', 'o': '$y0'}}

 Q: Give me {highly urbanized city} that {language used} {Davawenyo} and which contains the word {city} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q29946056 . ?sbj wdt:P2936 wd:Q5228174 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'city')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'highly urbanized city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Davawenyo'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'city'}}

 Q: what is the {point in time} for {Maria Tallchief} has {award received} as {Capezio Dance Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q264400 p:P166 ?s . ?s ps:P166 wd:Q29032885 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Maria Tallchief', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Capezio Dance Award'}, 't': '?x0'}

 Q: What are the war of national liberation which start with the letter war
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1006311 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war of national liberation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: When did Adunis win the Janus Pannonius International Poetry Prize?
 SPARQL: SELECT ?value WHERE { wd:Q380787 p:P166 ?s . ?s ps:P166 wd:Q17550770 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Adunis', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Janus Pannonius International Poetry Prize'}, 't': '?x0'}

 Q: Was Homo sapiens source of energy vitamin and large intestine ?
 SPARQL: ASK WHERE { wd:Q15978631 wdt:P618 wd:Q34956 . wd:Q15978631 wdt:P618 wd:Q11083 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Homo sapiens', 'p': 'source of energy', 'o': '?x0', '?x0': 'vitamin'}, {'h': 'IS', 'v': '?x1', 's': 'Homo sapiens', 'p': 'source of energy', 'o': '?x1', '?x1': 'large intestine'}]

 Q: What is {academic major} and {academic degree} of {{Bashar al-Assad} has {educated at} as {Damascus University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q44329 p:P69 ?s . ?s ps:P69 wd:Q1351317 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bashar al-Assad', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Damascus University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bashar al-Assad', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Damascus University'}}}]

 Q: What are the biblical episode which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22704077 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the {ghost town} for {narrative location} of {South Park}
 SPARQL:  select distinct ?obj where { wd:Q16538 wdt:P840 ?obj . ?obj wdt:P31 wd:Q74047 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Park', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ghost town'}}

 Q: What is the {municipality of Japan} for {currency} of {Japanese yen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q8146 . ?sbj wdt:P31 wd:Q1054813 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'yen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Japan'}}

 Q: Give me {public university} that {language used} {English} and which that starts with {'u'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q875538 . ?sbj wdt:P2936 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public university', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'English'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What are the legal forms are for the sole proprietorship} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1454 wd:Q2912172 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'legal form', 'o': 'sole proprietorship'}

 Q: Who is  connected with makes use of  butterfly stroke?
 SPARQL: SELECT ?answer WHERE { wd:Q245249 wdt:P2283 ?X . ?X wdt:P2789 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'connected with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'butterfly stroke', 'p': 'makes use of', 'o': '$y0'}}

 Q: tell  me national anthem published in The Army and Navy Hymnal starts with b
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23691 . ?sbj wdt:P1433 wd:Q50308756 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'b')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national anthem', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'The Army and Navy Hymnal'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'b'}}

 Q: When did educated at of Stephen King and academic degree?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q39829 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stephen King', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Stephen King', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is {position held} of {Robert Jenkinson, 2nd Earl of Liverpool} that is {replaces} is {William Wyndham Grenville, 1st Baron Grenville} ?
 SPARQL: SELECT ?obj WHERE { wd:Q312569 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q312596 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Jenkinson, 2nd Earl of Liverpool', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'William Wyndham Grenville'}}}

 Q: What is the {human} for {student} of {John the Apostle}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P802 wd:Q44015 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student', 'o': 'John the Apostle', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What steel bridge was designed by the architect Isambard Kingdom Brunel?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q207380 . ?sbj wdt:P31 wd:Q12042110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steel bridge'}}

 Q: How many {country} are for {Transylvania} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q39473 wdt:P17 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Transylvania', 'p': 'country', 'o': '?x0'}

 Q: What is {genre of music} of {portrayed by} of {Ghoomar (song)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q43016637 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ghoomar', 'p': 'portrayed by', 'o': '$y0'}}

 Q: what is OCLC control number for Fear and Loathing in Las Vegas
 SPARQL: select distinct ?answer where { wd:Q772435 wdt:P243 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fear and Loathing in Las Vegas', 'p': 'OCLC control number', 'o': '?x0'}

 Q: What is the {astronomical interferometer} for {operator} of {California Institute of Technology}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P137 wd:Q161562 . ?sbj wdt:P31 wd:Q17004698 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operator', 'o': 'California Institute of Technology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'astronomical interferometer'}}

 Q: what is the {point in time} for {Thirteen Colonies} has {population} as {1980} ?
 SPARQL: SELECT ?value WHERE { wd:Q179997 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1980')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Thirteen Colonies', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1980'}, 't': '?x0'}

 Q: What is {academic subject} of {music school}, that has {Wikivoyage banner} is {Deep Purple guitars banner.jpg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1021290 wdt:P101 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Deep Purple guitars banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'music school', 'p': 'subject', 'o': '?x0'}

 Q: What was the population of Chelyabinsk on 1926?
 SPARQL: SELECT ?obj WHERE { wd:Q906 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1926')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chelyabinsk', 'p': 'population', 'o': '?x0', 't': '1926'}

 Q: Which cover version has the highest beats per minute?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q155171 . ?ent wdt:P1725 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'beats per minute', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cover version'}}

 Q: What is the twin town of the Shiga Prefecture that has districts in the Eugenio de Castro area?
 SPARQL: SELECT ?answer WHERE { wd:Q131358 wdt:P190 ?answer . ?answer wdt:P150 wd:Q1784295}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shiga Prefecture', 'p': 'twin town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has districts', 'o': 'Eugenio de Castro'}}

 Q: Who are the sculptors of The Dream of the Fisherman's Wife whose artistic genre is ukiyo-e?
 SPARQL: SELECT ?answer WHERE { wd:Q2717022 wdt:P170 ?answer . ?answer wdt:P136 wd:Q185905}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "The Dream of the Fisherman's Wife", 'p': 'sculptor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'ukiyo-e'}}

 Q: Tell me {spiral galaxy} which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2488 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'spiral galaxy'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Which is the short film that had Sergei Eisenstein as film editor?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1040 wd:Q8003 . ?sbj wdt:P31 wd:Q24862 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'film editor', 'o': 'Sergei Eisenstein', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'short film'}}

 Q: Which is the noble title of Alexander the Great?
 SPARQL: select distinct ?answer where { wd:Q8409 wdt:P97 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander the Great', 'p': 'noble title', 'o': '?x0'}

 Q: Which is conferred by WWE?
 SPARQL: select distinct ?answer where { ?answer wdt:P1027 wd:Q35339}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conferred by', 'o': 'WWE'}

 Q: How many {payment types accepted} are for {Louvre Museum} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q19675 wdt:P2851 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Louvre', 'p': 'payment types accepted', 'o': '?x0'}

 Q: What are the machine learning which start with the letter m
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2539 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'machine learning'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is {writer} of {remake of} of {Lady in the Lake} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1884921 wdt:P144 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'writer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lady in the Lake', 'p': 'remake of', 'o': '$y0'}}

 Q: What is {phase point} of {water} and {pressure}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 ?obj . ?s pq:P2077 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase point', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}]

 Q: Does the amount of votes received for the swiss animal protection referendum of 1893 equal 101,580.8
 SPARQL: ASK WHERE { wd:Q1302571 wdt:P1111 ?obj filter(?obj = 101680.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Swiss animal protection referendum, 1893', 'p': 'votes received', 'o': '?x0', '?x0': '101680.8'}

 Q: What is <PASE ID> of <Athelstan> ?
 SPARQL: select distinct ?answer where { wd:Q170017 wdt:P2625 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Athelstan', 'p': 'PASE ID', 'o': '?x0'}

 Q: Is it true that the total shots in career of Petteri Wirtanen equals to 1?
 SPARQL: ASK WHERE { wd:Q24432 wdt:P6543 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Petteri Wirtanen', 'p': 'total shots in career', 'o': '?x0', '?x0': '1'}

 Q: What is {founders} of {video game publisher} of {Inca} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3797547 wdt:P123 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founders', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Inca', 'p': 'publisher', 'o': '$y0'}}

 Q: Give me {security agency} that {chairperson} {Yuri Andropov} and which that starts with {'k'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3238445 . ?sbj wdt:P488 wd:Q44071 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'security agency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'leader', 'o': 'Yuri Andropov'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'k'}}

 Q: What is {elected in} and {end cause} of {{James Callaghan} has {position held} as {Member of the 40th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q9576 p:P39 ?s . ?s ps:P39 wd:Q41582603 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Callaghan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 40th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Callaghan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 40th Parliament of the United Kingdom'}}}]

 Q: What is the {periodical literature} for {mouthpiece} of {Southwest Airlines}
 SPARQL:  select distinct ?obj where { wd:Q503308 wdt:P2813 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Southwest Airlines', 'p': 'mouthpiece', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: What is the {human} for {architect} of {White House}
 SPARQL:  select distinct ?obj where { wd:Q35525 wdt:P84 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'White House', 'p': 'architect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Is the wingspan of the Andean Condor equal to 3.048?
 SPARQL: ASK WHERE { wd:Q170598 wdt:P2050 ?obj filter(?obj = 3.048) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Andean Condor', 'p': 'wingspan', 'o': '?x0', '?x0': '3.048'}

 Q: What is the {city of the United States} for {narrative location} of {Friends}
 SPARQL:  select distinct ?obj where { wd:Q79784 wdt:P840 ?obj . ?obj wdt:P31 wd:Q1093829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Friends', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States'}}

 Q: What is <Czech street ID> of <Charles Bridge> ?
 SPARQL: select distinct ?answer where { wd:Q204871 wdt:P4533 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Bridge', 'p': 'Czech street ID', 'o': '?x0'}

 Q: What is {population} of {Kyōto Prefecture} that is {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q120730 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kyōto Prefecture', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: Is Ziauddin Yousafzai a father of Malala Yousafzai?
 SPARQL: ASK WHERE { wd:Q32732 wdt:P22 wd:Q8071389 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Malala Yousafzai', 'p': 'father', 'o': '?x0', '?x0': 'Ziauddin Yousafzai'}]

 Q: what is the {country} for {Constantin Stanislavski} has {place of birth} as {Moscow} ?
 SPARQL: SELECT ?value WHERE { wd:Q49484 p:P19 ?s . ?s ps:P19 wd:Q649 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Constantin Stanislavski', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Moscow'}}}

 Q: Give me {city of the United States} that starts with {'w'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1093829 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Is the net worth of Jesus Christ equal to t1417656573
 SPARQL: ASK WHERE { wd:Q302 wdt:P2218 ?obj filter(?obj = t1417656573) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jesus', 'p': 'net worth', 'o': '?x0', '?x0': 't1417656573'}

 Q: Which place is adjacent to Turkmenistan that is a member of Commonwealth of Independent States?
 SPARQL: SELECT ?answer WHERE { wd:Q874 wdt:P47 ?answer . ?answer wdt:P463 wd:Q7779}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Turkmenistan', 'p': 'adjacent to', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Commonwealth of Independent States'}}

 Q: Is the number of blank votes in the Rio Grande municipal election, 2016 for Councillor equal to 7170?
 SPARQL: ASK WHERE { wd:Q61868538 wdt:P5045 ?obj filter(?obj = 7170) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Rio Grande municipal election, 2016 for Councillor', 'p': 'number of blank votes', 'o': '?x0', '?x0': '7170'}

 Q: Which hurricane in the Pacific had the highest sustained winds during the Pacific hurricane season of 1959?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3306242 . ?ent wdt:P2895 ?obj . ?ent wdt:P361 wd:Q4569683 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'sustained winds', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Pacific hurricane', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': '1959 Pacific hurricane season'}}}

 Q: What physical quantity is measured in joules?
 SPARQL:  select distinct ?obj where { wd:Q25269 wdt:P111 ?obj . ?obj wdt:P31 wd:Q107715 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'joule', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical quantity'}}

 Q: Does aluminium-36 have a neutron number equal to 10.4?
 SPARQL: ASK WHERE { wd:Q1985521 wdt:P1148 ?obj filter(?obj = 10.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'aluminium-26', 'p': 'neutron number', 'o': '?x0', '?x0': '10.4'}

 Q: Who gave the {on harbour} of {player} of {Gallipoli campaign} ?
 SPARQL: SELECT ?answer WHERE { wd:Q164983 wdt:P710 ?X . ?X wdt:P206 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'on harbour', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gallipoli campaign', 'p': 'player', 'o': '$y0'}}

 Q: What is {position held} of {John C. Calhoun} that is {series ordinal} is {16} ?
 SPARQL: SELECT ?obj WHERE { wd:Q207191 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1545 ?x filter(contains(?x,'16')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John C. Calhoun', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series ordinal', 'o': '16'}}}

 Q: What amount of crosses are there to the Jhelum River?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P177 wd:Q214874 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'crosses', 'o': 'Jhelum River'}

 Q: What is {biological sex} of {Curtis Warren}, that has {shortened name} is {男} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3699686 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'男'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Curtis Warren', 'p': 'biological sex', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': '男'}}

 Q: Give me a first-class city name, that starts with an alphabet 'm'.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15221304 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'first-class city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: what is the {inventory number} for {Robert Southey} has {archives at} as {Leeds University Library} ?
 SPARQL: SELECT ?value WHERE { wd:Q216838 p:P485 ?s . ?s ps:P485 wd:Q24568958 . ?s pq:P217 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inventory number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Southey', 'p': 'archives at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'archives at', 'o': 'Leeds University Library'}}}

 Q: What is {date of birth} and {date of death} of {{Pedro I} has {child} as {Maria II of Portugal}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q221145 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Maria II of Portugal'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Maria II of Portugal'}}}]

 Q: what is the {end time} for {Zico} has {member of sports team} as {Brazil national football team} ?
 SPARQL: SELECT ?value WHERE { wd:Q47526 p:P54 ?s . ?s ps:P54 wd:Q83459 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zico', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Brazil national football team'}}}

 Q: What is Bill Belichick's  American football team for head coach?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P286 wd:Q720027 . ?sbj wdt:P31 wd:Q17156793 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head coach', 'o': 'Bill Belichick', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'American football team'}}

 Q: What is the {mascot character} for {mascot} of {Georgetown University}
 SPARQL:  select distinct ?obj where { wd:Q333886 wdt:P822 ?obj . ?obj wdt:P31 wd:Q386208 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georgetown University', 'p': 'mascot', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mascot character'}}

 Q: What is {sRGB colours hex triplet} of {colours} of {polar bear} ?
 SPARQL: SELECT ?answer WHERE { wd:Q33609 wdt:P462 ?X . ?X wdt:P465 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'RGB', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'polar bear', 'p': 'color', 'o': '$y0'}}

 Q: Was San_Diego owner of SDCCU Stadium and California State Route 209?
 SPARQL: ASK WHERE { wd:Q16552 wdt:P1830 wd:Q956072 . wd:Q16552 wdt:P1830 wd:Q623695 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'SD', 'p': 'owner of', 'o': '?x0', '?x0': 'SDCCU Stadium'}, {'h': 'IS', 'v': '?x1', 's': 'SD', 'p': 'owner of', 'o': '?x1', '?x1': 'California State Route 209'}]

 Q: What is the newspaper with the MAX publication interval?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11032 . ?ent wdt:P2896 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'publication interval', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'newspaper'}}

 Q: what is the {start time} for {Henry VII} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q675493 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry VII', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: DOES THE SPECIFIC AGE INSIDE FICTIONAL UNIVERSE OF THE DR.LANYON EQUALS 50
 SPARQL: ASK WHERE { wd:Q61933389 wdt:P6249 ?obj filter(?obj = 50) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Dr. Lanyon', 'p': 'specific age inside fictional universe', 'o': '?x0', '?x0': '50'}

 Q: Which is the musical conductor of Lorin Maazel?
 SPARQL: select distinct ?answer where { ?answer wdt:P3300 wd:Q117710}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'musical conductor', 'o': 'Lorin Maazel'}

 Q: Does rio dei Bareteri have a total watershed area that is equal to  0.0?
 SPARQL: ASK WHERE { wd:Q3432805 wdt:P2053 ?obj filter(?obj = 0.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'rio dei Bareteri', 'p': 'watershed area', 'o': '?x0', '?x0': '0.0'}

 Q: Is 12 the suicide rate of the {United States of America?
 SPARQL: ASK WHERE { wd:Q30 wdt:P3864 ?obj filter(?obj = 12.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'United States of America', 'p': 'suicide rate', 'o': '?x0', '?x0': '12.1'}

 Q: Who was Rafael Nadal's head coach starting in 1990?
 SPARQL: SELECT ?obj WHERE { wd:Q10132 p:P286 ?s . ?s ps:P286 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rafael Nadal', 'p': 'head coach', 'o': '?x0', 't': '1990'}

 Q: Which is the CiNii author ID of the books of François Hollande?
 SPARQL: select distinct ?answer where { wd:Q157 wdt:P271 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'François Hollande', 'p': 'CiNii author ID', 'o': '?x0'}

 Q: What is {location} and {height} of {{pole vault} has {record held} as {Brad Walker}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q353619 . ?s pq:P276 ?value1 . ?s pq:P2048 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Brad Walker'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'height', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Brad Walker'}}}]

 Q: What is {next to} of {death place} of {Hasdai Crescas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q528415 wdt:P20 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hasdai Crescas', 'p': 'death place', 'o': '$y0'}}

 Q: Who was the president of Calabria on 4/29/2014?
 SPARQL: SELECT ?obj WHERE { wd:Q1458 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Calabria', 'p': 'president', 'o': '?x0', 't': '2014'}

 Q: What is the aspect of the history of Malta, which has a diplomatic relation that is India?
 SPARQL: SELECT ?answer WHERE { wd:Q243842 wdt:P1269 ?answer . ?answer wdt:P530 wd:Q668}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Malta', 'p': 'aspect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'India'}}

 Q: Tell me Norse deity whose name has the word oor in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16513881 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'óðr')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Norse deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'óðr'}}

 Q: What is {artist} of {The Rise and Fall of Ziggy Stardust and the Spiders from Mars}, that has {work} is {pianist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q682846 wdt:P175 ?answer . ?answer wdt:P106 wd:Q486748}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ziggy Stardust', 'p': 'artist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'pianist'}}

 Q: What is the place of origin of the central bank of Sydney Morning Herald?
 SPARQL: SELECT ?answer WHERE { wd:Q390216 wdt:P495 ?X . ?X wdt:P1304 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'central bank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sydney Morning Herald', 'p': 'place of origin', 'o': '$y0'}}

 Q: which annual event starts with t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18574946 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'annual event'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Does the individual tax rate of the Netherland equal 41.6?
 SPARQL: ASK WHERE { wd:Q55 wdt:P2834 ?obj filter(?obj = 41.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Netherlands', 'p': 'individual tax rate', 'o': '?x0', '?x0': '41.6'}

 Q: What is the {award} for {field of work} of {communication}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P101 wd:Q11024 . ?sbj wdt:P31 wd:Q618779 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'field of work', 'o': 'communication', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award'}}

 Q: Which is GOST 7.67 cyrillic for South Korea?
 SPARQL: select distinct ?answer where { wd:Q884 wdt:P2988 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Korea', 'p': 'GOST 7.67 cyrillic', 'o': '?x0'}

 Q: Which is the sectional view of guava?
 SPARQL: select distinct ?answer where { wd:Q3181909 wdt:P2713 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'guava', 'p': 'sectional view', 'o': '?x0'}

 Q: What is the {G-type main-sequence star} with the {MAX(angular diameter)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5864 . ?ent wdt:P5348 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'angular diameter', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star'}}

 Q: What is {first minister} of {place of activity} of {Richard Russell} ?
 SPARQL: SELECT ?answer WHERE { wd:Q718415 wdt:P937 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'first minister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Russell', 'p': 'place of activity', 'o': '$y0'}}

 Q: The head of state of Bermuda is what?
 SPARQL: select distinct ?answer where { wd:Q23635 wdt:P35 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bermuda', 'p': 'head of state', 'o': '?x0'}

 Q: What is the {business} for {parent organization} of {Al Jazeera}
 SPARQL:  select distinct ?obj where { wd:Q13477 wdt:P749 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jazeera', 'p': 'parent organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is {nominated for} of {The Simpsons} that is {point in time} is {2001-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q886 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Simpsons', 'p': 'nominated for', 'o': '?x0', 't': '2001'}

 Q: What is the {human} for {member of political party} of {Nazi Party}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P102 wd:Q7320 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Nazi Party', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {web series} for {presenter} of {Jerry Seinfeld}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P371 wd:Q215506 . ?sbj wdt:P31 wd:Q526877 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'presenter', 'o': 'Jerry Seinfeld', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'web series'}}

 Q: What is the {house} for {residence} of {Charles Darwin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P551 wd:Q1035 . ?sbj wdt:P31 wd:Q3947 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'residence', 'o': 'Charles Darwin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'house'}}

 Q: What is the {video game developer} for {developer} of {Pong}
 SPARQL:  select distinct ?obj where { wd:Q216293 wdt:P178 ?obj . ?obj wdt:P31 wd:Q210167 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pong', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game developer'}}

 Q: Did {Kelly_Ripa} {nominated for} {Daytime Emmy Award for Outstanding Younger Actress in a Drama Series} and {Daytime Emmy Award for Outstanding Lead Actress in a Drama Series} ?
 SPARQL: ASK WHERE { wd:Q1148035 wdt:P1411 wd:Q5243457 . wd:Q1148035 wdt:P1411 wd:Q3019357 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Kelly Ripa', 'p': 'nominated for', 'o': '?x0', '?x0': 'Daytime Emmy Award for Outstanding Younger Actress in a Drama Series'}, {'h': 'IS', 'v': '?x1', 's': 'Kelly Ripa', 'p': 'nominated for', 'o': '?x1', '?x1': 'Daytime Emmy Award for Outstanding Lead Actress in a Drama Series'}]

 Q: What award did David Lynch receive in 2006?
 SPARQL: SELECT ?obj WHERE { wd:Q2071 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Lynch', 'p': 'award', 'o': '?x0', 't': '2006'}

 Q: What is <mushroom ecological type> of <Shiitake mushroom> ?
 SPARQL: select distinct ?answer where { wd:Q320999 wdt:P788 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'shiitake', 'p': 'mushroom ecological type', 'o': '?x0'}

 Q: Who was nominated for King of the Hill in 1998?
 SPARQL: SELECT ?obj WHERE { wd:Q1135966 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1998')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'King of the Hill', 'p': 'nominated for', 'o': '?x0', 't': '1998'}

 Q: The capital of Vilnius is which sovereign state?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q216 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Vilnius', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: What is {number of out of school children} of {continent} of {Middle East} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7204 wdt:P30 ?X . ?X wdt:P2573 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of out of school children', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Middle East', 'p': 'continent', 'o': '$y0'}}

 Q: Give me {chemical element} that contains the word {ytterbium} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11344 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ytterbium')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical element'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ytterbium'}}

 Q: Who is the prime minister of Niigata Prefecture who has a career as a politician?
 SPARQL: SELECT ?answer WHERE { wd:Q132705 wdt:P6 ?answer . ?answer wdt:P106 wd:Q82955}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Niigata Prefecture', 'p': 'prime minister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'politician'}}

 Q: How many ethnic groups are with the Uzbekistan} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q265 wdt:P172 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Uzbekistan', 'p': 'ethnic group', 'o': '?x0'}

 Q: Who is the  {island nation} for {official language} of {English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q1860 . ?sbj wdt:P31 wd:Q112099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation'}}

 Q: How many {bug tracking system} are for {Tencent QQ} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q857640 wdt:P1401 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Tencent QQ', 'p': 'bug tracking system', 'o': '?x0'}

 Q: what is the {start time} for {Sandra Day O'Connor} has {position held} as {Associate Justice of the Supreme Court of the United States} ?
 SPARQL: SELECT ?value WHERE { wd:Q11132 p:P39 ?s . ?s ps:P39 wd:Q11144 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Sandra Day O'Connor", 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Associate Justice of the Supreme Court of the United States'}}}

 Q: What's the TV series episode for Stephen Hawking's characters?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q17714 . ?sbj wdt:P31 wd:Q21191270 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Stephen Hawking', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'TV series episode'}}

 Q: What is located in the administrative territorial entity of Nicaragua?
 SPARQL: select distinct ?answer where { ?answer wdt:P131 wd:Q811}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Nicaragua'}

 Q: Southeast Asia is located on which continent?
 SPARQL:  select distinct ?obj where { wd:Q11708 wdt:P30 ?obj . ?obj wdt:P31 wd:Q5107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Southeast Asia', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'continent'}}

 Q: What is the {negative emotion} for {medical condition treated} of {phenol}
 SPARQL:  select distinct ?obj where { wd:Q130336 wdt:P2175 ?obj . ?obj wdt:P31 wd:Q60539481 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'phenol', 'p': 'medical condition treated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'negative emotion'}}

 Q: Which billionaire has the highest net worth estimate?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1062083 . ?ent wdt:P2218 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'net worth', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'billionaire'}}

 Q: What is Jamie Gillis' Pornhub ID?
 SPARQL: select distinct ?answer where { wd:Q725962 wdt:P5246 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jamie Gillis', 'p': 'Pornhub ID', 'o': '?x0'}

 Q: What is registration number for Ahmedabad?
 SPARQL: select distinct ?answer where { wd:Q1070 wdt:P2802 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ahmedabad', 'p': 'registration number', 'o': '?x0'}

 Q: Is the number of races by Alan Staley more than 1.2?
 SPARQL: ASK WHERE { wd:Q4707818 wdt:P1350 ?obj filter(?obj > 1.2) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Alan Staley', 'p': 'races', 'o': '?x0', '?x0': '1.2'}

 Q: "Where is the birthplace of Philippe Quintais, which is considered the sister city to Bethlehem?"
 SPARQL: SELECT ?answer WHERE { wd:Q3380589 wdt:P19 ?answer . ?answer wdt:P190 wd:Q5776}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Philippe Quintais', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Bethlehem'}}

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: Which is the Internet Broadway Database show ID for Antigone?
 SPARQL: select distinct ?answer where { wd:Q241077 wdt:P1219 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antigone', 'p': 'Internet Broadway Database show ID', 'o': '?x0'}

 Q: Which is the Tropicos publication ID for Botanical Journal of the Linnean Society?
 SPARQL: select distinct ?answer where { wd:Q2975482 wdt:P4904 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Botanical Journal of the Linnean Society', 'p': 'Tropicos publication ID', 'o': '?x0'}

 Q: What is {continent} of {lives in} of {Douglas Adams} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42 wdt:P551 ?X . ?X wdt:P30 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'continent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Douglas Adams', 'p': 'lives in', 'o': '$y0'}}

 Q: What are the vector physical quantity which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2672914 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'vector'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What continent is East Asia located in?
 SPARQL:  select distinct ?obj where { wd:Q27231 wdt:P30 ?obj . ?obj wdt:P31 wd:Q5107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'East Asia', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'continent'}}

 Q: Who was Herbert von Karajan employed by when he was replaced by Paul van Kempen?
 SPARQL: SELECT ?obj WHERE { wd:Q154895 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P1366 wd:Q529444 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Herbert von Karajan', 'p': 'employed by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Paul van Kempen'}}}

 Q: What are the Greek primordial deity which start with the letter u
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q878099 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greek primordial deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is {language native} of {Vivien Leigh}, that has {label in sign language} is {Csc-anglès-spreadthesign.ogv} ?
 SPARQL: SELECT ?answer WHERE { wd:Q129429 wdt:P103 ?answer . ?answer wdt:P2919 ?x FILTER(contains(?x,'Csc-anglès-spreadthesign.ogv'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vivien Leigh', 'p': 'native language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'label in sign language', 'o': 'csc-anglès-spreadthesign.ogv'}}

 Q: How many {residence} are to/by {Yekaterinburg} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P551 wd:Q887 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'residence', 'o': 'Yekaterinburg'}

 Q: How many {academic degree} are for {Ernest Rutherford} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9123 wdt:P512 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ernest Rutherford', 'p': 'academic degree', 'o': '?x0'}

 Q: Did {Eric_Clapton} {instrument} {guitar}?
 SPARQL: ASK WHERE { wd:Q48187 wdt:P1303 wd:Q6607 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Eric Clapton', 'p': 'instrument', 'o': '?x0', '?x0': 'guitar'}]

 Q: What is {deathplace} of {Bolesław Prus}, that has {sister town} is {Vilnius} ?
 SPARQL: SELECT ?answer WHERE { wd:Q144439 wdt:P20 ?answer . ?answer wdt:P190 wd:Q216}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Boleslaw Prus', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Vilnius'}}

 Q: Which {academic major} and {academic degree} of {{Robert McNamara} was {educated at} as {Harvard Business School}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q191999 p:P69 ?s . ?s ps:P69 wd:Q49126 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert McNamara', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard Business School'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert McNamara', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Harvard Business School'}}}]

 Q: Who is {actress} at {part of series} {You Give Lunch a Bad Name} ?
 SPARQL: SELECT ?answer WHERE { wd:Q48406646 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actress', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'You Give Lunch a Bad Name', 'p': 'part of series', 'o': '$y0'}}

 Q: What is <season starts> of <A-League> ?
 SPARQL: select distinct ?answer where { wd:Q219586 wdt:P4794 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'A-League', 'p': 'season starts', 'o': '?x0'}

 Q: What is {position held} of {Thomas Babington Macaulay, 1st Baron Macaulay} that is {end time} is {1834-12-29} ?
 SPARQL: SELECT ?obj WHERE { wd:Q315989 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1834')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Babington Macaulay, 1st Baron Macaulay', 'p': 'position held', 'o': '?x0', 't': '1834'}

 Q: What is named after Vladikavkaz since the year of 1954?
 SPARQL: SELECT ?obj WHERE { wd:Q5239 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1954')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vladikavkaz', 'p': 'named after', 'o': '?x0', 't': '1954'}

 Q: How was the movement during the Hellenistic period?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P135 wd:Q428995 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'movement', 'o': 'Hellenistic period'}

 Q: What is the {thesaurus} with the {MIN(data size)} whose {Wikidata property} is {British Museum place ID}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q17152639 . ?ent wdt:P3575 ?obj . ?ent wdt:P1687 wd:P3633} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'data size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'thesaurus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Wikidata property', 'o': 'British Museum place ID'}}}

 Q: what is the {applies to part} for {Thuringia} has {replaces} as {Leipzig District} ?
 SPARQL: SELECT ?value WHERE { wd:Q1205 p:P1365 ?s . ?s ps:P1365 wd:Q48079 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thuringia', 'p': 'replaces', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Leipzig District'}}}

 Q: What are the type of number which start with the letter n
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47460393 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of number'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: What is the side effect of combustion?
 SPARQL: select distinct ?answer where { ?answer wdt:P1909 wd:Q133235}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'side effect', 'o': 'combustion'}

 Q: What is the UK Provider Reference Number for the University of Birmingham?
 SPARQL: select distinct ?answer where { wd:Q223429 wdt:P4971 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Birmingham', 'p': 'UK Provider Reference Number', 'o': '?x0'}

 Q: What is {die from} of {painters} of {Suprematism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27861585 wdt:P170 ?X . ?X wdt:P509 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'die from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Suprematism', 'p': 'painter', 'o': '$y0'}}

 Q: Is the wheelbase of the LuAZ-967 equal to 1800?
 SPARQL: ASK WHERE { wd:Q323194 wdt:P3039 ?obj filter(?obj = 1800) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'LuAZ-967', 'p': 'wheelbase', 'o': '?x0', '?x0': '1800'}

 Q: What is {published on} of {Mortal Kombat}, that has {before was} is {PlayStation 3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q241163 wdt:P400 ?answer . ?answer wdt:P155 wd:Q10683}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mortal Kombat', 'p': 'published on', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'before was', 'o': 'PlayStation 3'}}

 Q: What is the airline for business division of AirAsia?
 SPARQL:  select distinct ?obj where { wd:Q406643 wdt:P199 ?obj . ?obj wdt:P31 wd:Q46970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'AirAsia', 'p': 'business division', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'airline'}}

 Q: Which is the region of Belgium that had Dutch as official language?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7411 . ?sbj wdt:P31 wd:Q83057 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Dutch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'region of Belgium'}}

 Q: What is the {business} for {manufacturer} of {Coca-Cola}
 SPARQL:  select distinct ?obj where { wd:Q2813 wdt:P176 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coca-Cola', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Is Hokkien the official language of United Nations?
 SPARQL: ASK WHERE { wd:Q1065 wdt:P37 wd:Q1624231 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'United Nations', 'p': 'official language', 'o': '?x0', '?x0': 'Hokkien'}]

 Q: who single} for lyrics by of Irving Berlin?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P676 wd:Q128746 . ?sbj wdt:P31 wd:Q134556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lyrics by', 'o': 'Irving Berlin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'single'}}

 Q: What is the {television channel} for {affiliation} of {PBS}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q215616 . ?sbj wdt:P31 wd:Q2001305 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'PBS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television channel'}}

 Q: Which is the BAV ID for Ida Tarbell?
 SPARQL: select distinct ?answer where { wd:Q271712 wdt:P1017 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ida Tarbell', 'p': 'BAV', 'o': '?x0'}

 Q: Who is Ultimate Fighting Championship's owner and founder?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q186471 wdt:P127 ?ans_1 . wd:Q186471 wdt:P112 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ultimate Fighting Championship', 'p': 'owner', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ultimate Fighting Championship', 'p': 'founder', 'o': '?x1'}]

 Q: What is {spouse} of {Anna Akhmatova} and {place of marriage}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q80440 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Akhmatova', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Akhmatova', 'p': 'spouse', 'o': '$y0'}}]

 Q: Which is the author name string for A Mathematical Theory of Communication?
 SPARQL: select distinct ?answer where { wd:Q724029 wdt:P2093 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'A Mathematical Theory of Communication', 'p': 'author name string', 'o': '?x0'}

 Q: What is the mean age of the South Bohemian Region?
 SPARQL: select distinct ?answer where { wd:Q188373 wdt:P4442 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Bohemian Region', 'p': 'mean age', 'o': '?x0'}

 Q: Who was the plaintiff in the Nuremberg trials?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80130 wdt:P1620 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'plaintiff', 'o': '?x0'}

 Q: What is {circumstance of death} of {actress} of {Spartacus} ?
 SPARQL: SELECT ?answer WHERE { wd:Q108297 wdt:P161 ?X . ?X wdt:P1196 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'circumstance of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Spartacus', 'p': 'actress', 'o': '$y0'}}

 Q: What is {nominated for} of {Maria Sharapova} that is {point in time} is {2007-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11666 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maria Sharapova', 'p': 'nominated for', 'o': '?x0', 't': '2007'}

 Q: What is <Swedish Olympic Committee athlete ID> of <Jan-Ove Waldner> ?
 SPARQL: select distinct ?answer where { wd:Q345360 wdt:P2323 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jan-Ove Waldner', 'p': 'Swedish Olympic Committee athlete ID', 'o': '?x0'}

 Q: Tell me about position held of Malcolm Fraser and elected in?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q315979 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Fraser', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Fraser', 'p': 'position held', 'o': '$y0'}}]

 Q: What is <award received> of <Väinö Linna> ?
 SPARQL: select distinct ?answer where { wd:Q311037 wdt:P166 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Väinö Linna', 'p': 'award received', 'o': '?x0'}

 Q: What is {follows} and {followed by} of {{The Myth of Sisyphus} has {series} as {Absurd cycle}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q1125903 p:P179 ?s . ?s ps:P179 wd:Q3008298 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Myth of Sisyphus', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Absurd cycle'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Myth of Sisyphus', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Absurd cycle'}}}]

 Q: When did the Ivory Coast have a population of 1.17111e+07?
 SPARQL: SELECT ?value WHERE { wd:Q1008 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.17111e+07')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ivory Coast', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.17111e+07'}, 't': '?x0'}

 Q: who is the medication for active ingredient in of amphetamine?
 SPARQL:  select distinct ?obj where { wd:Q179452 wdt:P3780 ?obj . ?obj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'amphetamine', 'p': 'active ingredient in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medication'}}

 Q: What is Leo XIII's ODIS ID?
 SPARQL: select distinct ?answer where { wd:Q43922 wdt:P2372 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leo XIII', 'p': 'ODIS ID', 'o': '?x0'}

 Q: what is the {place of publication} for {Full Metal Jacket} has {publication date} as {1987-6-26} ?
 SPARQL: SELECT ?value WHERE { wd:Q243439 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1987')) . ?s pq:P291 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Full Metal Jacket', 'p': 'released', 'o': '$y0'}}

 Q: Is the Gini coefficient of France equal to 23.936?
 SPARQL: ASK WHERE { wd:Q142 wdt:P1125 ?obj filter(?obj = 23.936) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'France', 'p': 'Gini coefficient', 'o': '?x0', '?x0': '23.936'}

 Q: What is {noble title} of {Chlothar II} and {followed by}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q209118 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chlothar II', 'p': 'noble title', 'o': '$y0'}}]

 Q: Which is the Wikidata property for items about people which was a subject to the Nazi Party?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1629 wd:Q7320 . ?sbj wdt:P31 wd:Q18608871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'item', 'o': 'Nazi Party', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata property for items about people'}}

 Q: What is <ESCO Occupation ID> of <watchmaker> ?
 SPARQL: select distinct ?answer where { wd:Q157798 wdt:P4652 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'watchmaker', 'p': 'ESCO Occupation ID', 'o': '?x0'}

 Q: who was Colin Firth's partner as at 1989-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q162492 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Colin Firth', 'p': 'partner', 'o': '?x0', 't': '1989'}

 Q: What is the {day in year for periodic occurrence} and the {foods traditionally associated} of {Hanukkah} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q130881 wdt:P837 ?ans_1 . wd:Q130881 wdt:P868 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hanukkah', 'p': 'day in year for periodic occurrence', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hanukkah', 'p': 'foods traditionally associated', 'o': '?x1'}]

 Q: What is the {research method} for {studied by} of {social science}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2579 wd:Q34749 . ?sbj wdt:P31 wd:Q1438073 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'social science', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research method'}}

 Q: What category of associated people are in Le Mans' twin town?
 SPARQL: SELECT ?answer WHERE { wd:Q1476 wdt:P190 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Le Mans', 'p': 'twin town', 'o': '$y0'}}

 Q: What is <template's main topic> of <Wham!> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1423 wd:Q744087}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': "template's main topic", 'o': 'Wham!'}

 Q: what is the {award received} for {Michael Phelps} has {participant of} as {2012 Summer Olympics} ?
 SPARQL: SELECT ?value WHERE { wd:Q39562 p:P1344 ?s . ?s ps:P1344 wd:Q8577 . ?s pq:P166 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'medals', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Phelps', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'participant of', 'o': '2012 Summer Olympics'}}}

 Q: wich means {explosive velocity} at {2,4,6-trinitrotoluene} ?
 SPARQL: select distinct ?answer where { wd:Q170167 wdt:P2231 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '2,4,6-trinitrotoluene', 'p': 'explosive velocity', 'o': '?x0'}

 Q: what is the {point in time} for {Věra Čáslavská} has {award received} as {Gratias Agit} ?
 SPARQL: SELECT ?value WHERE { wd:Q229503 p:P166 ?s . ?s ps:P166 wd:Q16550275 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Věra Čáslavská', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Gratias Agit'}, 't': '?x0'}

 Q: What is the {mausoleum} for {place of burial} of {Sun Yat-sen}
 SPARQL:  select distinct ?obj where { wd:Q8573 wdt:P119 ?obj . ?obj wdt:P31 wd:Q162875 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sun Yat-sen', 'p': 'place of burial', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mausoleum'}}

 Q: Who is the mother and child of Courtney Love?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q222071 wdt:P25 ?ans_1 . wd:Q222071 wdt:P40 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Courtney Love', 'p': 'mother', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Courtney Love', 'p': 'child', 'o': '?x1'}]

 Q: Did {Grace_Jones} {nominated for} {Golden Raspberry Award for Worst Supporting Actor} and {MTV Video Music Award for Best Female Video} ?
 SPARQL: ASK WHERE { wd:Q450429 wdt:P1411 wd:Q641316 . wd:Q450429 wdt:P1411 wd:Q1091031 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Grace Jones', 'p': 'nominated for', 'o': '?x0', '?x0': 'Golden Raspberry Award for Worst Supporting Actor'}, {'h': 'IS', 'v': '?x1', 's': 'Grace Jones', 'p': 'nominated for', 'o': '?x1', '?x1': 'MTV Video Music Award for Best Female Video'}]

 Q: What is {team manager} of {club played for} of {Bogdan Țîru} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16236602 wdt:P54 ?X . ?X wdt:P286 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coach', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bogdan Țîru', 'p': 'team', 'o': '$y0'}}

 Q: Which shape is used for laundry items.
 SPARQL: SELECT ?answer WHERE { wd:Q852100 wdt:P2283 ?X . ?X wdt:P1419 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'shape', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'laundry', 'p': 'used', 'o': '$y0'}}

 Q: What is {favorite player} of {writer} of {Black Girl / White Girl} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4920825 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'favorite player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Black Girl / White Girl', 'p': 'writer', 'o': '$y0'}}

 Q: What is the {human} for {sibling} of {Jon Voight}
 SPARQL:  select distinct ?obj where { wd:Q167520 wdt:P3373 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jon Voight', 'p': 'sibling', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When was Trento's population at 117185?
 SPARQL: SELECT ?value WHERE { wd:Q3376 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'117185')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Trento', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '117185'}, 't': '?x0'}

 Q: what is the {material used} for {O'Hare International Airport} has {runway} as {10R/28L} ?
 SPARQL: SELECT ?value WHERE { wd:Q213717 p:P529 ?s . ?s ps:P529 ?x filter(contains(?x,'10R/28L')) . ?s pq:P186 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'material used', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "O'Hare International Airport", 'p': 'runway', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'runway', 'o': '10r/28l'}}}

 Q: What is {co-founded by} of {label} of {Godfather Buried Alive} ?
 SPARQL: SELECT ?answer WHERE { wd:Q10506666 wdt:P264 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Godfather Buried Alive', 'p': 'label', 'o': '$y0'}}

 Q: What is the {position} for {office held by head of the organisation} of {United States Environmental Protection Agency}
 SPARQL:  select distinct ?obj where { wd:Q460173 wdt:P2388 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'United States Environmental Protection Agency', 'p': 'office held by head of the organisation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: which sports club starts with the letter a
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q847017 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'å')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sports club'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'å'}}

 Q: Who is the narrator of Derek Jacobi?
 SPARQL: select distinct ?answer where { ?answer wdt:P2438 wd:Q256164}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'narrator', 'o': 'Derek Jacobi'}

 Q: Was Playboy published by Playboy Enterprises and Hubert Burda Media Holding?
 SPARQL: ASK WHERE { wd:Q150820 wdt:P123 wd:Q3107204 . wd:Q150820 wdt:P123 wd:Q459029 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Playboy', 'p': 'published by', 'o': '?x0', '?x0': 'Playboy Enterprises'}, {'h': 'IS', 'v': '?x1', 's': 'Playboy', 'p': 'published by', 'o': '?x1', '?x1': 'Hubert Burda Media Holding'}]

 Q: what is the {winner} for {The Silmarillion} has {award received} as {Locus Award for Best Fantasy Novel} ?
 SPARQL: SELECT ?value WHERE { wd:Q79762 p:P166 ?s . ?s ps:P166 wd:Q607354 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Silmarillion', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Locus Award for Best Fantasy Novel'}}}

 Q: What is the {chronicle} for {language of work or name} of {Old English}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q42365 . ?sbj wdt:P31 wd:Q185363 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Old English', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chronicle'}}

 Q: What is the {human} for {has pet} of {Grumpy Cat}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1429 wd:Q7714263 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has pet', 'o': 'Grumpy Cat', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is <Munzinger Pop ID> of <Morrissey> ?
 SPARQL: select distinct ?answer where { wd:Q202246 wdt:P1286 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Morrissey', 'p': 'Munzinger Pop ID', 'o': '?x0'}

 Q: Which is the Smithsonian American Art Museum: person/institution thesaurus ID for Antoine Watteau?
 SPARQL: select distinct ?answer where { wd:Q183221 wdt:P1795 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antoine Watteau', 'p': 'Smithsonian American Art Museum: person/institution thesaurus ID', 'o': '?x0'}

 Q: What is the country of Kinshasa since 1960-6-30?
 SPARQL: SELECT ?obj WHERE { wd:Q3838 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1960')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kinshasa', 'p': 'country', 'o': '?x0', 't': '1960'}

 Q: what is the {start time} for {Leon Lai} has {spouse} as {Gaile Lok} ?
 SPARQL: SELECT ?value WHERE { wd:Q16836 p:P26 ?s . ?s ps:P26 wd:Q5517183 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leon Lai', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Gaile Lok'}}}

 Q: Which is the GeoNames feature code of wetland?
 SPARQL: select distinct ?answer where { wd:Q170321 wdt:P2452 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'wetland', 'p': 'GeoNames feature code', 'o': '?x0'}

 Q: Give me {phonetic alphabet} that contains the word {teuthonista} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q579287 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'teuthonista')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phonetic alphabet'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'teuthonista'}}

 Q: which is the medical treatment and health specialty of Ebola_virus_disease?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q51993 wdt:P924 ?ans_1 . wd:Q51993 wdt:P1995 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Ebola', 'p': 'treatment', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Ebola', 'p': 'health specialty', 'o': '?x1'}]

 Q: What is the {Golden Globe Award} for {nominated for} of {Ron Howard}
 SPARQL:  select distinct ?obj where { wd:Q103646 wdt:P1411 ?obj . ?obj wdt:P31 wd:Q1011547 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ron Howard', 'p': 'nominated for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Golden Globe Award'}}

 Q: Which is the fracturing of albite?
 SPARQL: select distinct ?answer where { wd:Q182264 wdt:P538 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'albite', 'p': 'fracturing', 'o': '?x0'}

 Q: What is the {language} for {dialect of} of {Tagalog}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4913 wd:Q34057 . ?sbj wdt:P31 wd:Q34770 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'Tagalog', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language'}}

 Q: Which is the Commonwealth Games Federation athlete ID of Sebastian Coe?
 SPARQL: select distinct ?answer where { wd:Q188502 wdt:P4548 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sebastian Coe', 'p': 'Commonwealth Games Federation athlete ID', 'o': '?x0'}

 Q: what is the {end time} for {Nikola Pašić} has {position held} as {Prime Minister of Serbia} ?
 SPARQL: SELECT ?value WHERE { wd:Q313843 p:P39 ?s . ?s ps:P39 wd:Q835586 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nikola Pašić', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Serbia'}}}

 Q: what is the {replaces} for {John Gorton} has {position held} as {Minister for Home Affairs} ?
 SPARQL: SELECT ?value WHERE { wd:Q356411 p:P39 ?s . ?s ps:P39 wd:Q6865868 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Gorton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Minister for Home Affairs'}}}

 Q: Who is the tenant in The Rape of Proserpina?
 SPARQL: SELECT ?answer WHERE { wd:Q2352789 wdt:P276 ?X . ?X wdt:P466 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tenant', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Rape of Proserpina', 'p': 'location', 'o': '$y0'}}

 Q: What is {forename} of {John Stagliano}, that has {is the same as} is {Ioan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1273684 wdt:P735 ?answer . ?answer wdt:P460 wd:Q931093}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Stagliano', 'p': 'forename', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same', 'o': 'Ioan'}}

 Q: "Where is {county seat} of {Jerusalem District}, which has {human population} is {60000.0} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q192232 wdt:P36 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'60000.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jerusalem District', 'p': 'county seat', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '60000.0'}}

 Q: Which is the OpenPlaques subject ID of Richard Wagner?
 SPARQL: select distinct ?answer where { wd:Q1511 wdt:P1430 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Richard Wagner', 'p': 'OpenPlaques subject ID', 'o': '?x0'}

 Q: That airplane is used by which fleet?
 SPARQL:  select distinct ?obj where { wd:Q197 wdt:P1535 ?obj . ?obj wdt:P31 wd:Q17372500 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'airplane', 'p': 'used by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fleet'}}

 Q: What is {height} and {location} of {{pole vault} has {record held} as {Yelena Isinbayeva}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 wd:Q6319 . ?s pq:P2048 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'height', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Yelena Isinbayeva'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'record held', 'o': 'Yelena Isinbayeva'}}}]

 Q: Which arch dam has the highest annual energy output?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q890545 . ?ent wdt:P4131 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'annual energy output', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'arch dam'}}

 Q: What is the {Class IB flammable liquid} with the {MIN(combustion enthalpy)} whose {has quality} is {hygroscopy}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2117 ?obj . ?ent wdt:P1552 wd:Q216678} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'combustion enthalpy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'quality', 'o': 'hygroscopy'}}}

 Q: What is {contains administrative territorial entity} of {Corsica} that is {end time} is {2018-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q14112 p:P150 ?s . ?s ps:P150 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2018')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Corsica', 'p': 'contains administrative territorial entity', 'o': '?x0', 't': '2018'}

 Q: In what country is Vyacheslav Tikhonov's birthplace, Pavlovsky Posad?
 SPARQL: SELECT ?value WHERE { wd:Q312483 p:P19 ?s . ?s ps:P19 wd:Q177908 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vyacheslav Tikhonov', 'p': 'birthplace', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'birthplace', 'o': 'Pavlovsky Posad'}}}

 Q: What is {position held} of {James Matheson} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q4870843 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Matheson', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Matheson', 'p': 'position held', 'o': '$y0'}}]

 Q: What is the {human} for {work location} of {Seville}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P937 wd:Q8717 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Seville', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: In the U.S Declaration of Independence, what is the foundational text for a democratic republic?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P457 wd:Q127912 . ?sbj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'foundational text', 'o': 'Declaration of Independence', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: Which is the association football stadium for which Foster + Partners were architects and contains the word stadium in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1154710 . ?sbj wdt:P84 wd:Q1208016 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'stadium')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'football stadium', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Foster + Partners'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'stadium'}}

 Q: What radio award is named after Salzburg?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P138 wd:Q34713 . ?sbj wdt:P31 wd:Q16948252 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'named after', 'o': 'Salzburg', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'radio award'}}

 Q: When did educated at of Saul Kripke and academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q298521 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saul Kripke', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saul Kripke', 'p': 'educated at', 'o': '$y0'}}]

 Q: Which is the minimum wavelength of sensitivity of Karl G. Jansky Very Large Array?
 SPARQL: select distinct ?answer where { wd:Q461382 wdt:P3738 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Karl G. Jansky Very Large Array', 'p': 'minimum wavelength of sensitivity', 'o': '?x0'}

 Q: Give me {feature film} that contains the word {tale} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24869 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tale')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'feature film'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tale'}}

 Q: Give me {ethnolect} that {indigenous to} {United States of America} and which that starts with {'a'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q951873 . ?sbj wdt:P2341 wd:Q30 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ethnolect', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'indigenous to', 'o': 'USA'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is {is in the county of} of {Saskatchewan}, that has {category of associated people} is {Category:Canadian people} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1989 wdt:P131 ?answer . ?answer wdt:P1792 wd:Q6994944}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saskatchewan', 'p': 'is in the county of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:Canadian people'}}

 Q: What is {audio language} of {O Tannenbaum}, that has {regulatory body} is {IDS – Institute for the German Language} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1046985 wdt:P407 ?answer . ?answer wdt:P1018 wd:Q1664834}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'O Tannenbaum', 'p': 'audio language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'regulatory body', 'o': 'IDS – Institute for the German Language'}}

 Q: What is dimethyl ether's UN number?
 SPARQL: select distinct ?answer where { wd:Q408050 wdt:P695 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'dimethyl ether', 'p': 'UN number', 'o': '?x0'}

 Q: What is {written by} of {preceeds} of {A Long Way from Chicago} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4657935 wdt:P156 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'written by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A Long Way from Chicago', 'p': 'precedes', 'o': '$y0'}}

 Q: Which is the postcode of the hometown of Ricky Martin?
 SPARQL: SELECT ?answer WHERE { wd:Q128799 wdt:P551 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'postcode', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ricky Martin', 'p': 'hometown', 'o': '$y0'}}

 Q: what is the {determination method} for {Gijón} has {population} as {277559.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q12273 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'277559.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gijon', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '277559.0'}}}

 Q: Which is the military rank for George Vancouver?
 SPARQL: select distinct ?answer where { wd:Q205485 wdt:P410 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Vancouver', 'p': 'military rank', 'o': '?x0'}

 Q: Name the disciple or the faith followed up by Theodosius Dobzhansky
 SPARQL: SELECT ?answer WHERE { wd:Q246731 wdt:P802 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'faith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodosius Dobzhansky', 'p': 'disciple', 'o': '$y0'}}

 Q: What is Hawai‘i Sports Hall of Fame ID for Duke Kahanamoku ?
 SPARQL: select distinct ?answer where { wd:Q123688 wdt:P4365 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Duke Kahanamoku', 'p': 'Hawai‘i Sports Hall of Fame ID', 'o': '?x0'}

 Q: what is decimal of radix
 SPARQL: select distinct ?answer where { wd:Q81365 wdt:P3264 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'decimal', 'p': 'radix', 'o': '?x0'}

 Q: What is the coordinate location of the mouth of the watercourse in the Bay of Biscay, Loire?
 SPARQL: SELECT ?value WHERE { wd:Q1469 p:P403 ?s . ?s ps:P403 wd:Q41573 . ?s pq:P625 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Loire', 'p': 'mouth of the watercourse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mouth of the watercourse', 'o': 'Bay of Biscay'}}}

 Q: What is the {monastery} for {diocese} of {Russian Orthodox Church}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P708 wd:Q60995 . ?sbj wdt:P31 wd:Q44613 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diocese', 'o': 'Russian Orthodox Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monastery'}}

 Q: What is {spouse} of {Marilyn Monroe} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q4616 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marilyn Monroe', 'p': 'husband', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'husband', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Marilyn Monroe', 'p': 'husband', 'o': '$y0'}}]

 Q: What is the {Wikimedia list article} for {list of monuments} of {Lyon}
 SPARQL:  select distinct ?obj where { wd:Q456 wdt:P1456 ?obj . ?obj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lyon', 'p': 'list of monuments', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'list'}}

 Q: What is the birth city of Augustus III of Poland, which has boroughs in Cotta?
 SPARQL: SELECT ?answer WHERE { wd:Q53438 wdt:P19 ?answer . ?answer wdt:P150 wd:Q383195}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Augustus III of Poland', 'p': 'birth city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has boroughs', 'o': 'Cotta'}}

 Q: Give me {type of business entity in the USA} that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57653825 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of business entity in the USA'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is {nominated for} of {Raiders of the Lost Ark} that is {statement is subject of} is {54th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q174284 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q28969 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Raiders of the Lost Ark', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '54th Academy Awards'}}}

 Q: Is it true that the absolute magnitude of the Triton equals to -1.2?
 SPARQL: ASK WHERE { wd:Q3359 wdt:P1457 ?obj filter(?obj = -1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Triton', 'p': 'absolute magnitude', 'o': '?x0', '?x0': '-1.2'}

 Q: Who is the sister of Claudius whose public office is the consul of the Roman Empire?
 SPARQL: SELECT ?answer WHERE { wd:Q1411 wdt:P3373 ?answer . ?answer wdt:P39 wd:Q26203875}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Claudius', 'p': 'sister', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'public office', 'o': 'consul of the Roman Empire'}}

 Q: Which is decays to Higgs boson?
 SPARQL: select distinct ?answer where { wd:Q402 wdt:P816 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Higgs boson', 'p': 'decays to', 'o': '?x0'}

 Q: Is Anderson Cooper's mother Gloria Vanderbilt?
 SPARQL: ASK WHERE { wd:Q316997 wdt:P25 wd:Q264730 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Anderson Cooper', 'p': 'mother', 'o': '?x0', '?x0': 'Gloria Vanderbilt'}]

 Q: Who is the  {biological process} for {has contributing factor} of {necrosis}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1479 wd:Q178069 . ?sbj wdt:P31 wd:Q2996394 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has contributing factor', 'o': 'necrosis', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biological process'}}

 Q: What is <home venue> of <Wembley Stadium> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P115 wd:Q128468}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'home venue', 'o': 'Wembley Stadium'}

 Q: What is the produced sound of housecat by Felis Silvestris catus.ogg?
 SPARQL: SELECT ?obj WHERE { wd:Q146 p:P4733 ?s . ?s ps:P4733 ?obj . ?s pq:P51 ?x filter(contains(?x,'Felis silvestris catus.ogg')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'cat', 'p': 'produced sound', 'o': '?x0'}

 Q: What academic major studies Hebrew?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q9288 . ?sbj wdt:P31 wd:Q4671286 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'Hebrew', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic major'}}

 Q: What is {die from} of {Luigi Comencini}, that has {genetic association} is {CNKSR3} ?
 SPARQL: SELECT ?answer WHERE { wd:Q53015 wdt:P509 ?answer . ?answer wdt:P2293 wd:Q18052256}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Luigi Comencini', 'p': 'die from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'genetic association', 'o': 'CNKSR3'}}

 Q: What is the {Norse mythical character} for {partner} of {Odin}
 SPARQL:  select distinct ?obj where { wd:Q43610 wdt:P451 ?obj . ?obj wdt:P31 wd:Q16513904 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Odin', 'p': 'partner', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Norse mythical character'}}

 Q: Who is the choreographer of The Rite of Spring?
 SPARQL: select distinct ?answer where { wd:Q206015 wdt:P1809 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Rite of Spring', 'p': 'choreographer', 'o': '?x0'}

 Q: What is the version, edition or translation of The Little Prince?
 SPARQL:  select distinct ?obj where { wd:Q25338 wdt:P747 ?obj . ?obj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Little Prince', 'p': 'edition', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'edition'}}

 Q: What is {award received} of {Manchester United F.C.} that is {point in time} is {2000-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q18656 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Manchester United F.C.', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: Is Brooklyn that has cities the birth location of Richard E. Bellman?
 SPARQL: SELECT ?answer WHERE { wd:Q441199 wdt:P19 ?answer . ?answer wdt:P150 wd:Q18419}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Richard E. Bellman', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has cities', 'o': 'Brooklyn'}}

 Q: What are the physical quantity which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical quantity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {position} for {appointed by} of {European Parliament}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P748 wd:Q8889 . ?sbj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'appointed by', 'o': 'European Parliament', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: Who are the parents of Edward IV of England?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q160341 wdt:P25 ?ans_1 . wd:Q160341 wdt:P22 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Edward IV of England', 'p': 'parent', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Edward IV of England', 'p': 'parent', 'o': '?x1'}]

 Q: What is {manner of death} of {Michael Jackson} that is {statement is subject of} is {death of Michael Jackson} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2831 p:P1196 ?s . ?s ps:P1196 ?obj . ?s pq:P805 wd:Q761887 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manner of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michael Jackson', 'p': 'manner of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'death of Michael Jackson'}}}

 Q: A stockholder of Nintendo, what is the publishing house of Pokémon?
 SPARQL: SELECT ?answer WHERE { wd:Q864 wdt:P123 ?answer . ?answer wdt:P127 wd:Q8093}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pokémon', 'p': 'publishing house', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'stockholder', 'o': 'Nintendo'}}

 Q: What numeral system contains the word "system" in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q122653 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'system')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'numeral system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'system'}}

 Q: What is {painting of} of {owns} of {Paula Høegh-Guldberg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47508083 wdt:P1830 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painting of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Paula Høegh-Guldberg', 'p': 'owns', 'o': '$y0'}}

 Q: Which technical standard has the lowest pressure ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q317623 . ?ent wdt:P2077 ?obj . ?ent wdt:P31 wd:Q317623} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'pressure', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'technical standard'}}

 Q: what is the {character role} for {Monty Python and the Holy Grail} has {cast member} as {Graham Chapman} ?
 SPARQL: SELECT ?value WHERE { wd:Q25043 p:P161 ?s . ?s ps:P161 wd:Q24962 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'character role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Monty Python and the Holy Grail', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'cast member', 'o': 'Graham Chapman'}}}

 Q: Who is the spouse of Ted Kennedy at the time of 2009-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q134549 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ted Kennedy', 'p': 'spouse', 'o': '?x0', 't': '2009'}

 Q: Which is the animal breed for Cavalier King Charles Spaniel?
 SPARQL: select distinct ?answer where { ?answer wdt:P4743 wd:Q38072}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'animal breed', 'o': 'Cavalier King Charles Spaniel'}

 Q: Name a kind of leather that starts with letter S
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q286 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'leather'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What are the subsidiary entities of the United States Department of the Air Force's parent unit?
 SPARQL: SELECT ?answer WHERE { wd:Q1465252 wdt:P749 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'United States Department of the Air Force', 'p': 'parent unit', 'o': '$y0'}}

 Q: What is the end time named after Oghuz Khagan that June has?
 SPARQL: SELECT ?value WHERE { wd:Q120 p:P138 ?s . ?s ps:P138 wd:Q2118293 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'June', 'p': 'named after', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'named after', 'o': 'Oghuz Khagan'}}}

 Q: What is {academic degree} of {Bengt Holmström} that is {academic major} is {operations research} ?
 SPARQL: SELECT ?obj WHERE { wd:Q354897 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P812 wd:Q194292 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bengt Holmstrom', 'p': 'degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic major', 'o': 'operations research'}}}

 Q: What is {diplomatic relation} of {signed by} of {Treaty of Versailles} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8736 wdt:P1891 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Treaty of Versailles', 'p': 'signed by', 'o': '$y0'}}

 Q: What is {head of government} of {City of Cape Town} that is {start time} is {2009-5-12} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1185115 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2009')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'City of Cape Town', 'p': 'head of government', 'o': '?x0', 't': '2009'}

 Q: what is the {start time} for {Brittany Murphy} has {spouse} as {Simon Monjack} ?
 SPARQL: SELECT ?value WHERE { wd:Q168847 p:P26 ?s . ?s ps:P26 wd:Q645704 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brittany Murphy', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Simon Monjack'}}}

 Q: What is the aspect ratio for Belarus that contains the map image as LocationBelarus.svg?
 SPARQL: SELECT ?value WHERE { wd:Q184 p:P242 ?s . ?s ps:P242 ?x filter(contains(?x,'LocationBelarus.svg')) . ?s pq:P2061 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'aspect ratio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Belarus', 'p': 'map', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'map', 'o': 'locationbelarus.svg'}}}

 Q: What is the {digital distribution platform} for {language used} of {Japanese}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q5287 . ?sbj wdt:P31 wd:Q19307174 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'digital distribution platform'}}

 Q: Tell me phenomenon whose name has the newton word in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16722960 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'newton')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phenomenon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'newton'}}

 Q: Who is the  {historical country} for {replaced by} of {Western Roman Empire}
 SPARQL:  select distinct ?obj where { wd:Q42834 wdt:P1366 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roman Empire', 'p': 'replaced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is <compulsory education (minimum age)> of <Oregon> ?
 SPARQL: select distinct ?answer where { wd:Q824 wdt:P3270 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oregon', 'p': 'compulsory education (minimum age)', 'o': '?x0'}

 Q: Who gave the{established by} of {member of} of {Ernest Lawrence} ?
 SPARQL: SELECT ?answer WHERE { wd:Q169577 wdt:P463 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ernest Lawrence', 'p': 'member of', 'o': '$y0'}}

 Q: Islam is practiced by and the foundational text of whom?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q432 wdt:P3095 ?ans_1 . wd:Q432 wdt:P457 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Islam', 'p': 'practiced by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Islam', 'p': 'foundational text', 'o': '?x1'}]

 Q: what is the {end time} for {Willis Tower} has {owned by} as {Willis Group} ?
 SPARQL: SELECT ?value WHERE { wd:Q29294 p:P127 ?s . ?s ps:P127 wd:Q919120 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Willis Tower', 'p': 'owned by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'owned by', 'o': 'Willis Group'}}}

 Q: What is the {universal language} for {history of topic} of {history of mathematics}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2184 wd:Q185264 . ?sbj wdt:P31 wd:Q41511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'history of topic', 'o': 'history of mathematics', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'universal language'}}

 Q: What painter of Maoism died in Zhongnanhai?
 SPARQL: SELECT ?answer WHERE { wd:Q167651 wdt:P170 ?answer . ?answer wdt:P20 wd:Q197889}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Maoism', 'p': 'painter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Zhongnanhai'}}

 Q: who human spaceflight for astronaut mission of Gordon Cooper?
 SPARQL:  select distinct ?obj where { wd:Q312833 wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gordon Cooper', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human spaceflight'}}

 Q: What is the public library with the smallest budget?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q28564 . ?ent wdt:P2769 ?obj . ?ent wdt:P31 wd:Q28564} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'budget', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public library'}}

 Q: How many {country of origin} are for {ska} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q54365 wdt:P495 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'ska', 'p': 'country of origin', 'o': '?x0'}

 Q: Which is a service entry of Airbus A340?
 SPARQL: select distinct ?answer where { wd:Q6481 wdt:P729 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Airbus A340', 'p': 'service entry', 'o': '?x0'}

 Q: What are the lunar calendar which start with the letter c
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q185688 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lunar calendar'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: Which is the Deutsche Synchronkartei film ID of Pan's Labyrinth?
 SPARQL: select distinct ?answer where { wd:Q216006 wdt:P3844 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Pan's Labyrinth", 'p': 'Deutsche Synchronkartei film ID', 'o': '?x0'}

 Q: What is the {sovereign state} with the {MAX(compulsory education (maximum age))} whose {member of} is {Interpol}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3624078 . ?ent wdt:P3271 ?obj . ?ent wdt:P463 wd:Q8475 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'compulsory education (maximum age)', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Interpol'}}}

 Q: Who was Alfred L. Kroeber employed by until 1945?
 SPARQL: SELECT ?obj WHERE { wd:Q311538 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1945')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alfred L. Kroeber', 'p': 'employed by', 'o': '?x0', 't': '1945'}

 Q: Tell me mythological Greek character whose name has the word tityos in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q22988604 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tityos')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythological Greek character'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tityos'}}

 Q: Is the clearance of 15 kV, 16.7 Hz AC railway electrification less than 4.4?
 SPARQL: ASK WHERE { wd:Q1415234 wdt:P2793 ?obj filter(?obj < 4.4) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '15 kV, 16.7 Hz AC railway electrification', 'p': 'clearance', 'o': '?x0', '?x0': '4.4'}

 Q: What is <language used> of <Gujarati> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P2936 wd:Q5137}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Gujarati'}

 Q: What is image of function for sine ?
 SPARQL: select distinct ?answer where { wd:Q152415 wdt:P2396 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sine', 'p': 'image of function', 'o': '?x0'}

 Q: What award did Billy Joel receive on January 1st, 2002?
 SPARQL: SELECT ?obj WHERE { wd:Q194333 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2002')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Billy Joel', 'p': 'award', 'o': '?x0', 't': '2002'}

 Q: What is the {historical language} for {official language} of {Achaemenid Empire}
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P37 ?obj . ?obj wdt:P31 wd:Q2315359 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'official language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical language'}}

 Q: Is the rotation period of the 20 Massalia equal to 6.4784?
 SPARQL: ASK WHERE { wd:Q107524 wdt:P2147 ?obj filter(?obj = 6.4784) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '20 Massalia', 'p': 'rotation period', 'o': '?x0', '?x0': '6.4784'}

 Q: Which is the research institute for subsidiary of Rutgers University?
 SPARQL:  select distinct ?obj where { wd:Q499451 wdt:P355 ?obj . ?obj wdt:P31 wd:Q31855 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rutgers University', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research institute'}}

 Q: What is the {nonprofit organization} for {operator} of {Wikipedia}
 SPARQL:  select distinct ?obj where { wd:Q52 wdt:P137 ?obj . ?obj wdt:P31 wd:Q163740 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wikipedia', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'non-profit organization'}}

 Q: When did chairperson of Communist Party of China and followed by?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P156 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'chairperson', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0'}}]

 Q: Give me {space mission} that {followed by} {Voyager 2} and which that starts with {'v'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2133344 . ?sbj wdt:P156 wd:Q48475 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space mission', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'Voyager 2'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is the film The Count of Monte Cristo based on?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q191838 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'The Count of Monte Cristo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: How many {performer} are to/by {Boris Grebenshchikov} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P175 wd:Q542101 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'performer', 'o': 'Boris Grebenshchikov'}

 Q: What point divides into the Rhineland-Palatinate, and has the wgs-84 position of 7.59778?
 SPARQL: SELECT ?answer WHERE { wd:Q1200 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'7.59778'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rhineland-Palatinate', 'p': 'divides into', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wgs-84', 'o': '7.59778'}}

 Q: What is the {unit of energy} for {measured physical quantity} of {energy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P111 wd:Q11379 . ?sbj wdt:P31 wd:Q2916980 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'quantity', 'o': 'energy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of energy'}}

 Q: What is the {disease} with the {MAX(maximal incubation period in humans)} whose {on focus list of Wikimedia project} is {Wikipedia:Vital articles}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12136 . ?ent wdt:P3487 ?obj . ?ent wdt:P5008 wd:Q5460604 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximal incubation period in humans', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on focus list of Wikimedia project', 'o': 'Wikipedia:Vital articles'}}}

 Q: What is {position held} of {Oliver Cromwell} that is {end time} is {1649-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q44279 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1649')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oliver Cromwell', 'p': 'position held', 'o': '?x0', 't': '1649'}

 Q: What is {not same as} of {truffle}, that has {type species} is {Tuber aestivum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2690965 wdt:P1889 ?answer . ?answer wdt:P427 wd:Q74692}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'truffle', 'p': 'not the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type species', 'o': 'Tuber aestivum'}}

 Q: Give me {human} that {significant person} {Gürcü Hatun} and which contains the word {rumi} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5 . ?sbj wdt:P3342 wd:Q2915023 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'rumi')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Gürcü Hatun'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'rumi'}}

 Q: Which is the diaspora of the African Americans?
 SPARQL: select distinct ?answer where { wd:Q49085 wdt:P3833 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'African Americans', 'p': 'diaspora', 'o': '?x0'}

 Q: What is the {scientific law} for {discoverer or inventor} of {Dimitri Mendeleyev}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P61 wd:Q9106 . ?sbj wdt:P31 wd:Q408891 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'Dimitri Mendeleyev', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scientific law'}}

 Q: Which is the Basketball-Reference.com NBA coach ID of George Mikan?
 SPARQL: select distinct ?answer where { wd:Q314185 wdt:P4718 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Mikan', 'p': 'Basketball-Reference.com NBA coach ID', 'o': '?x0'}

 Q: What is {location of death} of {Denis Diderot}, that has {has arrondissements} is {3rd arrondissement of Paris} ?
 SPARQL: SELECT ?answer WHERE { wd:Q448 wdt:P20 ?answer . ?answer wdt:P150 wd:Q223140}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Denis Diderot', 'p': 'location of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has arrondissements', 'o': '3rd arrondissement of Paris'}}

 Q: when s the {point in time} for {Bank of China} has {owned by} as {National Council for Social Security Fund} ?
 SPARQL: SELECT ?value WHERE { wd:Q790068 p:P127 ?s . ?s ps:P127 wd:Q6971896 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bank of China', 'p': 'owned by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'owned by', 'o': 'National Council for Social Security Fund'}, 't': '?x0'}

 Q: What is {bestowed by} of {chess title} of {Alexander Gelman} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27525240 wdt:P2962 ?X . ?X wdt:P1027 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bestowed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Gelman', 'p': 'chess title', 'o': '$y0'}}

 Q: Which is the patronage of the Berlin U-Bahn?
 SPARQL: select distinct ?answer where { wd:Q68646 wdt:P3872 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Berlin U-Bahn', 'p': 'patronage', 'o': '?x0'}

 Q: Does the beats per minute of the Dark Dance equal 0?
 SPARQL: ASK WHERE { wd:Q54913625 wdt:P1725 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Dark Dance', 'p': 'beats per minute', 'o': '?x0', '?x0': '0'}

 Q: What is the diplomatic relation between Iceland, which has arrondissements, and Arkhangelsk Oblast?
 SPARQL: SELECT ?answer WHERE { wd:Q189 wdt:P530 ?answer . ?answer wdt:P150 wd:Q1875}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Iceland', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has arrondissements', 'o': 'Arkhangelsk Oblast'}}

 Q: Who is the {talent agency} for {represented by} of {Bette Davis}
 SPARQL:  select distinct ?obj where { wd:Q71206 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bette Davis', 'p': 'represented by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talent agency'}}

 Q: Which is the historical country that had Romanian as official language?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7913 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Romanian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is {typology} of {wrote language} of {J. Robert Oppenheimer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q132537 wdt:P1412 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert Oppenheimer', 'p': 'language', 'o': '$y0'}}

 Q: What is the {state with limited recognition} for {head of state} of {Mahmoud Abbas}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q127998 . ?sbj wdt:P31 wd:Q15634554 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Mahmoud Abbas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state with limited recognition'}}

 Q: what is the {country} for {Hadrian} has {place of birth} as {Italica} ?
 SPARQL: SELECT ?value WHERE { wd:Q1427 p:P19 ?s . ?s ps:P19 wd:Q658893 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hadrian', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of birth', 'o': 'Italica'}}}

 Q: What did Dwayne Johnson major in in college and where was he educated at?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q10738 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dwayne Johnson', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dwayne Johnson', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the {winner} for {Family Ties} has {award received} as {Primetime Emmy Award for Outstanding Writing for a Comedy Series} ?
 SPARQL: SELECT ?value WHERE { wd:Q1144624 p:P166 ?s . ?s ps:P166 wd:Q3045762 . ?s pq:P1346 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Family Ties', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Primetime Emmy Award for Outstanding Writing for a Comedy Series'}}}

 Q: How many times has Joseph Barbera been an executive producer?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1431 wd:Q190373 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'executive producer', 'o': 'Joseph Barbera'}

 Q: What is <frequency of event> of <Paralympic Games> ?
 SPARQL: select distinct ?answer where { wd:Q73633 wdt:P2257 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Paralympic Games', 'p': 'frequency of event', 'o': '?x0'}

 Q: What is the vapor pressure of hydrogen cyanide at the temperature 68 degrees?
 SPARQL: SELECT ?obj WHERE { wd:Q26075 p:P2119 ?s . ?s ps:P2119 ?obj . ?s pq:P2076 ?x filter(contains(?x,'68.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'vapor pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hydrogen cyanide', 'p': 'vapor pressure', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'temperature', 'o': '68.0'}}}

 Q: What is {actor} of {next is} of {WrestleMania I} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50805 wdt:P156 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'WrestleMania I', 'p': 'next is', 'o': '$y0'}}

 Q: Where is the medals of the artist who inspired this of Solaris?
 SPARQL: SELECT ?answer WHERE { wd:Q125772 wdt:P1877 ?X . ?X wdt:P166 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'medals', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Solaris', 'p': 'artist who inspired this', 'o': '$y0'}}

 Q: What is the {medication} for {manifestation of} of {water}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1557 wd:Q283 . ?sbj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manifestation of', 'o': 'water', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medication'}}

 Q: What is {screenplay by} of {Reservoir Dogs}, that has {filmography} is {Quentin Tarantino filmography} ?
 SPARQL: SELECT ?answer WHERE { wd:Q72962 wdt:P58 ?answer . ?answer wdt:P1283 wd:Q6794012}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Reservoir Dogs', 'p': 'screenplay by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'filmography', 'o': 'Quentin Tarantino filmography'}}

 Q: Which excipient has the highest refractive index?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q902638 . ?ent wdt:P1109 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'refractive index', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'excipient'}}

 Q: Which is Swiss Federal Archives ID for Rudolf Hess?
 SPARQL: select distinct ?answer where { wd:Q75866 wdt:P3889 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rudolf Hess', 'p': 'Swiss Federal Archives ID', 'o': '?x0'}

 Q: Which instrument is of Herbie Hancock?
 SPARQL: select distinct ?answer where { wd:Q105875 wdt:P1303 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Herbie Hancock', 'p': 'instrument', 'o': '?x0'}

 Q: What is the {Class IB flammable liquid} with the {MAX(combustion enthalpy)} whose {instance of} is {monohydric alcohol}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2117 ?obj . ?ent wdt:P31 wd:Q19790488 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'combustion enthalpy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'monohydric alcohol'}}}

 Q: Which is the KMDb person ID for Jeff Bridges?
 SPARQL: select distinct ?answer where { wd:Q174843 wdt:P1649 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jeff Bridges', 'p': 'KMDb person ID', 'o': '?x0'}

 Q: What is {academic degree} and {academic major} of {{Tina Fey} has {educated at} as {University of Virginia}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q14540 p:P69 ?s . ?s ps:P69 wd:Q213439 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tina Fey', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Virginia'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tina Fey', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Virginia'}}}]

 Q: What is {floral emblem} of {national of} of {Jack Cole} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1677001 wdt:P27 ?X . ?X wdt:P2238 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'emblem', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Cole', 'p': 'national of', 'o': '$y0'}}

 Q: Which is the statistical leader of LeBron James?
 SPARQL: select distinct ?answer where { ?answer wdt:P3279 wd:Q36159}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'statistical leader', 'o': 'LeBron James'}

 Q: Name the BMW manufactured internal combustion engine with the highest compression ratio?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12757 . ?ent wdt:P1247 ?obj . ?ent wdt:P176 wd:Q26678 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'compression ratio', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'internal combustion engine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'BMW'}}}

 Q: What is {married} of {starring} of {Mr. Bean} ?
 SPARQL: SELECT ?answer WHERE { wd:Q484020 wdt:P161 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mr. Bean', 'p': 'starring', 'o': '$y0'}}

 Q: Is the wavelength of 2MASS equal to 1.662?
 SPARQL: ASK WHERE { wd:Q1454942 wdt:P2808 ?obj filter(?obj = 1.662) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2MASS', 'p': 'wavelength', 'o': '?x0', '?x0': '1.662'}

 Q: What is {CPI inflation rate} of {state} of {Münster} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2742 wdt:P17 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Munster', 'p': 'state', 'o': '$y0'}}

 Q: Give me {isotope of neutronium} that {interaction} {weak interaction} and which that starts with {'n'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12525553 . ?sbj wdt:P517 wd:Q11418 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'n')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of neutronium', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'weak interaction'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'n'}}

 Q: Who is {member of} of {county seat of} of {Palikir} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42751 wdt:P1376 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Palikir', 'p': 'county seat of', 'o': '$y0'}}

 Q: What is {type of music} of {lineal descendant} of {Mazhar Ali Khan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6798492 wdt:P1038 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of music', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mazhar Ali Khan', 'p': 'descendant', 'o': '$y0'}}

 Q: Is the number of arrests of the 2012 Quebec student protests less than 4210.8?
 SPARQL: ASK WHERE { wd:Q1357510 wdt:P5582 ?obj filter(?obj < 4210.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '2012 Quebec student protests', 'p': 'number of arrests', 'o': '?x0', '?x0': '4210.8'}

 Q: Who became a student of Charles Le Brun in 1633 ?
 SPARQL: SELECT ?obj WHERE { wd:Q271676 p:P1066 ?s . ?s ps:P1066 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1633')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles Le Brun', 'p': 'student of', 'o': '?x0', 't': '1633'}

 Q: What is the {historical country} for {follows} of {Roman Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P155 wd:Q2277 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is {position held} of {Bonar Law} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q166663 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonar Law', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonar Law', 'p': 'position held', 'o': '$y0'}}]

 Q: What is {end time} and {start time} of {{Ted Stevens} has {employer} as {United States Department of the Interior}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q50599 p:P108 ?s . ?s ps:P108 wd:Q608427 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ted Stevens', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'United States Department of the Interior'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'from', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ted Stevens', 'p': 'employer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'employer', 'o': 'United States Department of the Interior'}}}]

 Q: Who replaced the position held by Bill Clinton as President of the United States?
 SPARQL: SELECT ?value WHERE { wd:Q1124 p:P39 ?s . ?s ps:P39 wd:Q11696 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bill Clinton', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of the United States'}}}

 Q: Allahabad is the capital of what division of India?
 SPARQL:  select distinct ?obj where { wd:Q162442 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q1230708 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Allahabad', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'division of India'}}

 Q: Who is made by  part of series  Homage to the Square--Insert?
 SPARQL: SELECT ?answer WHERE { wd:Q20429051 wdt:P179 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'made by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Homage to the Square--Insert', 'p': 'part of series', 'o': '$y0'}}

 Q: Who is the {bay} for {located in or next to body of water} of {Venice}
 SPARQL:  select distinct ?obj where { wd:Q641 wdt:P206 ?obj . ?obj wdt:P31 wd:Q39594 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Venice', 'p': 'located in or next to body of water', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bay'}}

 Q: What is the {Internet Standard} for {uses} of {Internet Protocol version 4}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2283 wd:Q11103 . ?sbj wdt:P31 wd:Q290378 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'Internet Protocol version 4', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Internet Standard'}}

 Q: Who is the nominee for Eternal Sunshine of the Spotless Mind which has been nominated for an Academy Award for Best Writing, Original Screenplay?
 SPARQL: SELECT ?value WHERE { wd:Q208269 p:P1411 ?s . ?s ps:P1411 wd:Q41417 . ?s pq:P2453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominee', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eternal Sunshine of the Spotless Mind', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Writing, Original Screenplay'}}}

 Q: What is {relation} of {actress} of {Ishaqzaade} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3155258 wdt:P161 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ishaqzaade', 'p': 'actress', 'o': '$y0'}}

 Q: Tell me the most notable work of Christopher Hitchens and also the publisher.
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q49081 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P123 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publisher', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'notable work', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christopher Hitchens', 'p': 'notable work', 'o': '$y0'}}]

 Q: what is the {point in time} for {Santiago Calatrava} has {award received} as {Gran Cross of the Order of James I the Conqueror} ?
 SPARQL: SELECT ?value WHERE { wd:Q168482 p:P166 ?s . ?s ps:P166 wd:Q42313279 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Santiago Calatrava', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Gran Cross of the Order of James I the Conqueror'}, 't': '?x0'}

 Q: Is the standard enthalpy of formation of acetaldehyde equal to -166?
 SPARQL: ASK WHERE { wd:Q61457 wdt:P3078 ?obj filter(?obj = -166) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'acetaldehyde', 'p': 'standard enthalpy of formation', 'o': '?x0', '?x0': '-166'}

 Q: What is the {ferry} with the {MIN(gross tonnage)} whose {country} is {Italy}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q25653 . ?ent wdt:P1093 ?obj . ?ent wdt:P17 wd:Q38} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'gross tonnage', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ferry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Italia'}}}

 Q: What award was Arthur M. Schlesinger nominated for in 1961?
 SPARQL: SELECT ?obj WHERE { wd:Q435195 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1961')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Arthur M. Schlesinger', 'p': 'nominated for', 'o': '?x0', 't': '1961'}

 Q: Were the Middle Ages followed by the High Middle Ages and the early modern period?
 SPARQL: ASK WHERE { wd:Q12554 wdt:P156 wd:Q212685 . wd:Q12554 wdt:P156 wd:Q5308718 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Middle Ages', 'p': 'followed by', 'o': '?x0', '?x0': 'High Middle Ages'}, {'h': 'IS', 'v': '?x1', 's': 'Middle Ages', 'p': 'followed by', 'o': '?x1', '?x1': 'early modern period'}]

 Q: Who is the operator of business at CBS?
 SPARQL:  select distinct ?obj where { wd:Q43380 wdt:P137 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'CBS', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Who is the person that created Winnie the Pooh?
 SPARQL:  select distinct ?obj where { wd:Q188574 wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Winnie the Pooh', 'p': 'created', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {located in the administrative territorial entity} of {North Yorkshire} that is {applies to part} is {Stockton-on-Tees} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23086 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P518 wd:Q894094 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'North Yorkshire', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'Stockton-on-Tees'}}}

 Q: What is the name of a painting created by Rembrandt?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q5598 . ?sbj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'Rembrandt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: what is the {end time} for {Lawrence Summers} has {position held} as {United States Secretary of the Treasury} ?
 SPARQL: SELECT ?value WHERE { wd:Q317953 p:P39 ?s . ?s ps:P39 wd:Q4215834 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lawrence Summers', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States Secretary of the Treasury'}}}

 Q: Which excipient chemical compound has the least kinematic viscosity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q902638 . ?ent wdt:P2118 ?obj . ?ent wdt:P31 wd:Q11173} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'kinematic viscosity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'excipient', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}}

 Q: What is {academic degree} and {academic major} of {{Zora Neale Hurston} has {educated at} as {Barnard College}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q220480 p:P69 ?s . ?s ps:P69 wd:Q167733 . ?s pq:P512 ?value1 . ?s pq:P812 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Barnard College'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic major', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Barnard College'}}}]

 Q: What is {county seat for} of {formed in} of {Momoiro Clover Z} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1070606 wdt:P740 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Momoiro Clover Z', 'p': 'formed in', 'o': '$y0'}}

 Q: What is the {Wikimedia category} for {category for films shot at this location} of {Lyon}
 SPARQL:  select distinct ?obj where { wd:Q456 wdt:P1740 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lyon', 'p': 'category for films shot at this location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: What is {twin town} of {Suzhou}, that has {category of associated people} is {Category:People from Esbjerg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42622 wdt:P190 ?answer . ?answer wdt:P1792 wd:Q8733439}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Suzhou', 'p': 'twin town', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:People from Esbjerg'}}

 Q: Who are the parent organization and the parent club of FC Barcelona?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q7156 wdt:P749 ?ans_1 . wd:Q7156 wdt:P831 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'FC Barcelona', 'p': 'parent organization', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'FC Barcelona', 'p': 'parent club', 'o': '?x1'}]

 Q: Which is the installation for the collection of University of Pennsylvania?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P195 wd:Q49117 . ?sbj wdt:P31 wd:Q20437094 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'University of Pennsylvania', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'installation'}}

 Q: How many judges are held in the  {Nuremberg trials} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q80130 wdt:P1594 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nuremberg trials', 'p': 'judge', 'o': '?x0'}

 Q: What is {award received} of {Elia Kazan} that is {statement is subject of} is {27th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q72717 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q608130 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Elia Kazan', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '27th Academy Awards'}}}

 Q: What is the work location of Rembrandt where the end time is 1625-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q5598 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1625')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rembrandt', 'p': 'work location', 'o': '?x0', 't': '1625'}

 Q: What is the {knife} for {country} of {Ancient Egypt}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P17 wd:Q11768 . ?sbj wdt:P31 wd:Q32489 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Ancient Egypt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'knife'}}

 Q: How many {health specialty} are to/by {hematology} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1995 wd:Q103824 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'health specialty', 'o': 'hematology'}

 Q: is it true that the genre of the Rolling Stones is British blues?
 SPARQL: ASK WHERE { wd:Q11036 wdt:P136 wd:Q918542 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Rolling Stones', 'p': 'genre', 'o': '?x0', '?x0': 'British blues'}]

 Q: What is the village with the highest number of households whose country is India?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q532 . ?ent wdt:P1538 ?obj . ?ent wdt:P17 wd:Q668 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of households', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'village', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'India'}}}

 Q: What is {characters} of {theme} of {Adam and Eve} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3605055 wdt:P144 ?X . ?X wdt:P674 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'characters', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adam and Eve', 'p': 'theme', 'o': '$y0'}}

 Q: What is {accused} of {took part} of {Alistair Brownlee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q716308 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'accused', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alistair Brownlee', 'p': 'took part', 'o': '$y0'}}

 Q: Who is the architect responsible for the architectural style of the Palace of Westminster?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q62408 wdt:P84 ?ans_1 . wd:Q62408 wdt:P149 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Palace of Westminster', 'p': 'architect', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Palace of Westminster', 'p': 'architectural style', 'o': '?x1'}]

 Q: Genghis Khan's family is part of what dynasty?
 SPARQL:  select distinct ?obj where { wd:Q720 wdt:P53 ?obj . ?obj wdt:P31 wd:Q164950 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Genghis Khan', 'p': 'family', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dynasty'}}

 Q: what is the {for work} for {Judy Blume} has {award received} as {Dorothy Canfield Fisher Children's Book Award} ?
 SPARQL: SELECT ?value WHERE { wd:Q441214 p:P166 ?s . ?s ps:P166 wd:Q5298343 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Judy Blume', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': "Dorothy Canfield Fisher Children's Book Award"}}}

 Q: What is {incumbent} of {holds position} of {William Jennings Bryan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q205282 wdt:P39 ?X . ?X wdt:P1308 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'incumbent', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Jennings Bryan', 'p': 'holds position', 'o': '$y0'}}

 Q: What is the birth location of Harlow Curtice, which has MASL of 229.0?
 SPARQL: SELECT ?answer WHERE { wd:Q472824 wdt:P19 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'229.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Harlow Curtice', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'MASL', 'o': '229.0'}}

 Q: Give me {contract} that {collection} {British Library} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q93288 . ?sbj wdt:P195 wd:Q23308 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'contract', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'collection', 'o': 'British Library'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is the Gram staining for Gram-positive?
 SPARQL: select distinct ?answer where { ?answer wdt:P2597 wd:Q857288}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'Gram staining', 'o': 'Gram-positive'}

 Q: What is <wears> of <fez> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3828 wd:Q189862}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'wears', 'o': 'fez'}

 Q: What is <BrainInfo ID (hierarchical)> of <frontal lobe> ?
 SPARQL: select distinct ?answer where { wd:Q749520 wdt:P4395 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'frontal lobe', 'p': 'BrainInfo ID (hierarchical)', 'o': '?x0'}

 Q: What is the tonality of Goldberg Variations?
 SPARQL: select distinct ?answer where { wd:Q213728 wdt:P826 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Goldberg Variations', 'p': 'tonality', 'o': '?x0'}

 Q: Which is the UAI code for Collège de France?
 SPARQL: select distinct ?answer where { wd:Q202660 wdt:P3202 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Collège de France', 'p': 'UAI code', 'o': '?x0'}

 Q: Which is the storyboard artist for Ub Iwerks?
 SPARQL: select distinct ?answer where { ?answer wdt:P3275 wd:Q336424}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'storyboard artist', 'o': 'Ub Iwerks'}

 Q: What is the {head of government} and the {office held by head of government} of {Toronto} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q172 wdt:P6 ?ans_1 . wd:Q172 wdt:P1313 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Toronto', 'p': 'head of government', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Toronto', 'p': 'office held by head of government', 'o': '?x1'}]

 Q: What is <Carnegie Classification of Institutions of Higher Education> of <Washington University in St. Louis> ?
 SPARQL: select distinct ?answer where { wd:Q777403 wdt:P2643 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Washington University', 'p': 'Carnegie Classification of Institutions of Higher Education', 'o': '?x0'}

 Q: Is 7 the size of a team at the start of the San Marino at the 1996 Summer Olympics?
 SPARQL: ASK WHERE { wd:Q148156 wdt:P2103 ?obj filter(?obj = 7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'San Marino at the 1996 Summer Olympics', 'p': 'size of team at start', 'o': '?x0', '?x0': '7'}

 Q: Which literary works are from sculptor Arturo Belano?
 SPARQL: SELECT ?answer WHERE { wd:Q4801703 wdt:P170 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'literary works', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arturo Belano', 'p': 'sculptor', 'o': '$y0'}}

 Q: The Stranger OCLC work ID is?
 SPARQL: select distinct ?answer where { wd:Q163297 wdt:P5331 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Stranger', 'p': 'OCLC work ID', 'o': '?x0'}

 Q: Is the time index of the 4th day of the 3rd month in the Chinese calendar less than 4.8?
 SPARQL: ASK WHERE { wd:Q838975 wdt:P4895 ?obj filter(?obj < 4.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '4th day of the 3rd month in the Chinese calendar', 'p': 'time index', 'o': '?x0', '?x0': '4.8'}

 Q: What is {located in time zone} of {Aachen} that is {valid in period} is {standard time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1017 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aachen', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'standard time'}}}

 Q: What is {borders} of {citizen of} of {Colin Renfrew} ?
 SPARQL: SELECT ?answer WHERE { wd:Q335189 wdt:P27 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Colin Renfrew', 'p': 'citizen of', 'o': '$y0'}}

 Q: What is {diplomatic relation} of {comes from} of {The Amazing Spider-Man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q944598 wdt:P495 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Amazing Spider-Man', 'p': 'comes from', 'o': '$y0'}}

 Q: What is the {work} for {present in work} of {Confucius}
 SPARQL:  select distinct ?obj where { wd:Q4604 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q386724 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Confucius', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'work'}}

 Q: what is the {start time} for {San Antonio} has {head of government} as {Julian Castro} ?
 SPARQL: SELECT ?value WHERE { wd:Q975 p:P6 ?s . ?s ps:P6 wd:Q970720 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'San Antonio', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Julian Castro'}}}

 Q: How many dome enclosures are there?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3158 wd:Q12493 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'enclosure', 'o': 'dome'}

 Q: What is the {drink} for {manufacturer} of {The Coca-Cola Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q3295867 . ?sbj wdt:P31 wd:Q40050 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Coca-Cola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'drink'}}

 Q: What is <BFMTV.com director ID> of <Bernard Arnault> ?
 SPARQL: select distinct ?answer where { wd:Q32055 wdt:P4939 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bernard Arnault', 'p': 'BFMTV.com director ID', 'o': '?x0'}

 Q: Was James_Madison member of American Academy of Arts and Sciences and American Antiquarian Society?
 SPARQL: ASK WHERE { wd:Q11813 wdt:P463 wd:Q463303 . wd:Q11813 wdt:P463 wd:Q4742987 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Madison', 'p': 'member of', 'o': '?x0', '?x0': 'American Academy of Arts and Sciences'}, {'h': 'IS', 'v': '?x1', 's': 'Madison', 'p': 'member of', 'o': '?x1', '?x1': 'American Antiquarian Society'}]

 Q: what are the city/town which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7930989 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city/town'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: Who is the mass murder for the location of Manhattan?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q11299 . ?sbj wdt:P31 wd:Q750215 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Manhattan', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mass murder'}}

 Q: Olga Korbut was born in Grodno, which is located in what country?
 SPARQL: SELECT ?value WHERE { wd:Q221575 p:P19 ?s . ?s ps:P19 wd:Q181376 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Olga Korbut', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Grodno'}}}

 Q: Pinterest is the owner of what web service?
 SPARQL:  select distinct ?obj where { wd:Q255381 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q193424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pinterest', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'web service'}}

 Q: What is <last words> of <François Rabelais> ?
 SPARQL: select distinct ?answer where { wd:Q131018 wdt:P3909 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'François Rabelais', 'p': 'last words', 'o': '?x0'}

 Q: What is {scientific area} of {portrait of} of {statue of Sacred Heart of Jesus Christ} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19353457 wdt:P180 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'area', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'statue of Sacred Heart of Jesus Christ', 'p': 'portrait of', 'o': '$y0'}}

 Q: What is the SoC with minimum clock speed manufactured by Qualcomm Atheros?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q610398 . ?ent wdt:P2149 ?obj . ?ent wdt:P176 wd:Q1083858} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'clock speed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'SoC', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'manufactured by', 'o': 'Qualcomm Atheros'}}}

 Q: Which sovereign state replaced Czechoslovakia ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q33946 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced', 'o': 'Czechoslovakia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: what is the {replaced by} for {Moon Jae-in} has {position held} as {Member of National Assembly of South Korea} ?
 SPARQL: SELECT ?value WHERE { wd:Q21001 p:P39 ?s . ?s ps:P39 wd:Q14850694 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moon Jae-in', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of National Assembly of South Korea'}}}

 Q: What is {shareholder} of {translated by} of {Warface} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1052646 wdt:P655 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'shareholder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Warface', 'p': 'translated by', 'o': '$y0'}}

 Q: What is {position held} of {Goh Chok Tong} that is {parliamentary term} is {13th Parliament of Singapore} ?
 SPARQL: SELECT ?obj WHERE { wd:Q313300 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2937 wd:Q20967954 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Goh Chok Tong', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'parliamentary term', 'o': '13th Parliament of Singapore'}}}

 Q: Which is {heritage designation} of {administrative centre} {Kingdom of Kongo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q796583 wdt:P36 ?X . ?X wdt:P1435 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'heritage designation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingdom of Kongo', 'p': 'administrative centre', 'o': '$y0'}}

 Q: Who is the {constituency of the Rajya Sabha} for {different from} of {Meghalaya}
 SPARQL:  select distinct ?obj where { wd:Q1195 wdt:P1889 ?obj . ?obj wdt:P31 wd:Q57156205 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Meghalaya', 'p': 'different from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'constituency of the Rajya Sabha'}}

 Q: What is {grandchildren} of {film producer} of {The King on Main Street} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7744600 wdt:P162 ?X . ?X wdt:P1038 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'grandchild', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The King on Main Street', 'p': 'producer', 'o': '$y0'}}

 Q: What are the area of engineering which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12015335 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'engineering')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of engineering'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'engineering'}}

 Q: What social skills are used by the media that contain the word communication?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1413287 . ?sbj wdt:P1535 wd:Q17502905 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'communication')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social skills', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used by', 'o': 'the media'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'communication'}}

 Q: What is {musician} of {successor} of {The Jazz Giants '56} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7743037 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Jazz Giants '56", 'p': 'successor', 'o': '$y0'}}

 Q: What is {assassin} of {memorial to} of {memorials to Martin Luther King Jr.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40889111 wdt:P547 ?X . ?X wdt:P157 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'assassin', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'memorials to Martin Luther King Jr.', 'p': 'memorial to', 'o': '$y0'}}

 Q: what is the {start time} for {Ashoka} has {position held} as {Mauryan emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q8589 p:P39 ?s . ?s ps:P39 wd:Q27582039 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ashoka', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Mauryan emperor'}}}

 Q: Give me {archaeological culture} that {culture} {Sumerians} and which that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q465299 . ?sbj wdt:P2596 wd:Q656043 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological culture', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'culture', 'o': 'Sumerians'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {optical telescope} with the {MAX(focal length)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q35273 . ?ent wdt:P2151 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'focal length', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'optical telescope'}}

 Q: When did Teresa Wright win the Academy Award for Best Supporting Actress?
 SPARQL: SELECT ?value WHERE { wd:Q230136 p:P166 ?s . ?s ps:P166 wd:Q106301 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Teresa Wright', 'p': 'win', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'Academy Award for Best Supporting Actress'}, 't': '?x0'}

 Q: What is the {human} for {different from} of {Kevin Garnett}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1889 wd:Q189240 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'different from', 'o': 'Kevin Garnett', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is port of registry forTallinn ?
 SPARQL: select distinct ?answer where { ?answer wdt:P532 wd:Q1770}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'port of registry', 'o': 'Tallinn'}

 Q: What is the rank of taxon parent of Australopithecus ?
 SPARQL: SELECT ?answer WHERE { wd:Q103237 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Australopithecus', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What was Pasha Angelina awarded in the year 1947?
 SPARQL: SELECT ?obj WHERE { wd:Q1964769 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1947')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pasha Angelina', 'p': 'award', 'o': '?x0', 't': '1947'}

 Q: What is {end time} and {start time} of {{Radomir Putnik} has {position held} as {Chief of the General Staff}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q313133 p:P39 ?s . ?s ps:P39 wd:Q5097064 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radomir Putnik', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chief of the General Staff'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radomir Putnik', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chief of the General Staff'}}}]

 Q: what is the {statement is subject of} for {Sunset Boulevard} has {award received} as {Academy Award for Best Art Direction, Black and White} ?
 SPARQL: SELECT ?value WHERE { wd:Q193570 p:P166 ?s . ?s ps:P166 wd:Q22253133 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sunset Boulevard', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Art Direction, Black and White'}}}

 Q: How many beats per minute was the song Imagine written with?
 SPARQL: select distinct ?answer where { wd:Q1971 wdt:P1725 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Imagine', 'p': 'beats per minute', 'o': '?x0'}

 Q: What is the {film} for {composer} of {Irving Berlin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P86 wd:Q128746 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'composer', 'o': 'Irving Berlin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: Which is the filming location for The Godfather Part II?
 SPARQL: select distinct ?answer where { wd:Q184768 wdt:P915 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Godfather Part II', 'p': 'filming location', 'o': '?x0'}

 Q: What is the birthplace of Marat Balagula, and also has Alexei Kosygin as a chancellor?
 SPARQL: SELECT ?answer WHERE { wd:Q6754934 wdt:P19 ?answer . ?answer wdt:P6 wd:Q202770}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Marat Balagula', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chancellor', 'o': 'Alexei Kosygin'}}

 Q: What is {field of study} of {inventor or discoverer} of {pulsar} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4360 wdt:P61 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of study', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pulsar', 'p': 'inventor', 'o': '$y0'}}

 Q: What is {established by} of {before was} of {Mission San Carlos Borromeo de Carmelo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2689743 wdt:P155 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mission San Carlos Borromeo de Carmelo', 'p': 'before was', 'o': '$y0'}}

 Q: Who is the academic supervisor of the actor of The Twilight Samurai ?
 SPARQL: SELECT ?answer WHERE { wd:Q94033 wdt:P161 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'supervisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Twilight Samurai', 'p': 'actor', 'o': '$y0'}}

 Q: What is {master} of {consort} of {Denis William Brogan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1187698 wdt:P26 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'master', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Denis William Brogan', 'p': 'spouse', 'o': '$y0'}}

 Q: DOES THE OPTIMUM VIABLE TEMPERATURE OF THE PSEUDOMONAS PUTIDA K T2440 EQUALS 28
 SPARQL: ASK WHERE { wd:Q21079489 wdt:P3253 ?obj filter(?obj = 28) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Pseudomonas putida KT2440', 'p': 'optimum viable temperature', 'o': '?x0', '?x0': '28'}

 Q: Tell me medical attribute  whose name has the word wave in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44476427 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wave')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical attribute'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wave'}}

 Q: What is the Class IIIA combustible liquid with the highest boiling point whose described by source is Small Brockhaus and Efron Encyclopedic Dictionary ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009058 . ?ent wdt:P2102 ?obj . ?ent wdt:P1343 wd:Q19180675 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'boiling point', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IIIA combustible liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'Small Brockhaus and Efron Encyclopedic Dictionary'}}}

 Q: Tell me about IBM PC compatible for operating system of MS-DOS?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P306 wd:Q47604 . ?sbj wdt:P31 wd:Q751046 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'operating system', 'o': 'MS-DOS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'IBM PC compatible'}}

 Q: What is {authors} of {copy of} of {The Man with Two Faces} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7750132 wdt:P144 ?X . ?X wdt:P50 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'author', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Man with Two Faces', 'p': 'copy of', 'o': '$y0'}}

 Q: what is the {replaced by} for {George IV of the United Kingdom} has {position held} as {monarch} ?
 SPARQL: SELECT ?value WHERE { wd:Q130586 p:P39 ?s . ?s ps:P39 wd:Q116 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George IV of the United Kingdom', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch'}}}

 Q: What is {winners} of {nomination received} of {Apollo 13} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106428 wdt:P1411 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Apollo 13', 'p': 'nominated for', 'o': '$y0'}}

 Q: What is {borders} of {birth place} of {Grazia Deledda} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7728 wdt:P19 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grazia Deledda', 'p': 'birth place', 'o': '$y0'}}

 Q: What is {faith} of {sculptor} of {cybernetics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q123637 wdt:P170 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'faith', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'cybernetics', 'p': 'sculptor', 'o': '$y0'}}

 Q: How many official residences are there in the Parthian Empire?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1986139 wdt:P263 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Parthian Empire', 'p': 'official residence', 'o': '?x0'}

 Q: What are the literary character which start with the letter x
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3658341 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary character'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: what is the {point in time} for {Pasay} has {population} as {55161.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q17189 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'55161.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Pasay', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '55161.0'}, 't': '?x0'}

 Q: What musical instrument, played by Bill Withers, is constructed out of the source material maple?
 SPARQL: SELECT ?answer WHERE { wd:Q346565 wdt:P1303 ?answer . ?answer wdt:P186 wd:Q402516}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bill Withers', 'p': 'instrument', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'constructed out of', 'o': 'maple'}}

 Q: Name a movie directed by Federico Fellini
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q7371 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'directed by', 'o': 'Federico Fellini', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie'}}

 Q: What is the {season starts} and the {sport} of {Rugby_World_Cup} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q16640 wdt:P4794 ?ans_1 . wd:Q16640 wdt:P641 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Rugby World Cup', 'p': 'season starts', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Rugby World Cup', 'p': 'sport', 'o': '?x1'}]

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Giuseppe Meazza} has {member of sports team} as {Atalanta B.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q192131 p:P54 ?s . ?s ps:P54 wd:Q1886 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giuseppe Meazza', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Atalanta B.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giuseppe Meazza', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Atalanta B.C.'}}}]

 Q: What is the U-boat with the lowest vehicle range whose conflict is World War II?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q428661 . ?ent wdt:P2073 ?obj . ?ent wdt:P607 wd:Q362} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'vehicle range', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'U-boat', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'World War II'}}}

 Q: Who are the inhabitants of the the county seat of Ulaanbaatar?
 SPARQL: SELECT ?answer WHERE { wd:Q23430 wdt:P1376 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ulaanbaatar', 'p': 'county seat of', 'o': '$y0'}}

 Q: What is the {highly urbanized city} with the {MIN(electorate)} whose {located in the administrative territorial entity} is {Metro Manila}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q29946056 . ?ent wdt:P1831 ?obj . ?ent wdt:P131 wd:Q13580} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'electorate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'highly urbanized city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Metro Manila'}}}

 Q: Who is married to the daughters of Ferdinand II of Aragon?
 SPARQL: SELECT ?answer WHERE { wd:Q12860 wdt:P40 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ferdinand II of Aragon', 'p': 'daughter', 'o': '$y0'}}

 Q: Did {Tyler_Perry} {occupation} {songwriter} and {television director} ?
 SPARQL: ASK WHERE { wd:Q686301 wdt:P106 wd:Q753110 . wd:Q686301 wdt:P106 wd:Q2059704 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Tyler Perry', 'p': 'occupation', 'o': '?x0', '?x0': 'songwriter'}, {'h': 'IS', 'v': '?x1', 's': 'Tyler Perry', 'p': 'occupation', 'o': '?x1', '?x1': 'TV director'}]

 Q: What is {die from} of {Joseph von Fraunhofer}, that has {Total number of cases} is {12000.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q43948 wdt:P509 ?answer . ?answer wdt:P1603 ?x FILTER(contains(?x,'12000.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Joseph von Fraunhofer', 'p': 'die from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'number of cases', 'o': '12000.0'}}

 Q: What are the different treatments for cholera?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q12090 wdt:P924 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'cholera', 'p': 'treatment', 'o': '?x0'}

 Q: Give me the cause of brain ontogeny?
 SPARQL: SELECT ?obj WHERE { wd:Q1073 p:P828 ?s . ?s ps:P828 ?obj . ?s pq:P642 wd:Q193603 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'brain', 'p': 'cause', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'ontogeny'}}}

 Q: What is {participant in conflict} of {Günter Grass}, that has {till} is {1945-9-2} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6538 wdt:P607 ?answer . ?answer wdt:P582 ?x FILTER(contains(YEAR(?x),'1945'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Günter Grass', 'p': 'conflict', 'o': '?x0', 't': '1945'}

 Q: When did U2 recieve the Artist of the Year award?
 SPARQL: SELECT ?value WHERE { wd:Q396 p:P166 ?s . ?s ps:P166 wd:Q19858055 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'U2', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Artist of the Year'}, 't': '?x0'}

 Q: which term that contains the word vocation in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1969448 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vocation')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'term'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vocation'}}

 Q: What was Dustin Lance Black nominated for in 2008?
 SPARQL: SELECT ?obj WHERE { wd:Q717302 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Dustin Lance Black', 'p': 'nominated for', 'o': '?x0', 't': '2008'}

 Q: Did {Spider} {has effect} {phobia} and {spider bite} ?
 SPARQL: ASK WHERE { wd:Q1357 wdt:P1542 wd:Q175854 . wd:Q1357 wdt:P1542 wd:Q2549274 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'spiders', 'p': 'has effect', 'o': '?x0', '?x0': 'phobia'}, {'h': 'IS', 'v': '?x1', 's': 'spiders', 'p': 'has effect', 'o': '?x1', '?x1': 'spider bite'}]

 Q: What award was received by Carl Orff in 1981
 SPARQL: SELECT ?obj WHERE { wd:Q44086 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carl Orff', 'p': 'award', 'o': '?x0', 't': '1981'}

 Q: What is {educated at} of {Lujo Brentano} that is {student of} is {Johann von Helferich} ?
 SPARQL: SELECT ?obj WHERE { wd:Q62830 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P1066 wd:Q5798542 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lujo Brentano', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'student of', 'o': 'Johann von Helferich'}}}

 Q: what is the {replaced by} for {Bernhard von Bülow} has {position held} as {Imperial chancellor} ?
 SPARQL: SELECT ?value WHERE { wd:Q60113 p:P39 ?s . ?s ps:P39 wd:Q7618907 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernhard von Bülow', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Imperial chancellor'}}}

 Q: What are the star which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q523 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'star'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: What is {partner city} of {South Chungcheong Province}, that has {wgs84} is {34.5667} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41070 wdt:P190 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'34.5667'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Chungcheong Province', 'p': 'partner city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'wgs84', 'o': '34.5667'}}

 Q: What title is held by the head of state of the Achaemenid Empire?
 SPARQL:  select distinct ?obj where { wd:Q389688 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q216353 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'title'}}

 Q: Is Jupiter's apparent magnitude equal to -1.6?
 SPARQL: ASK WHERE { wd:Q319 wdt:P1215 ?obj filter(?obj = -1.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jupiter', 'p': 'apparent magnitude', 'o': '?x0', '?x0': '-1.6'}

 Q: what is the {follows} for {deuterium} has {instance of} as {isotope of hydrogen} ?
 SPARQL: SELECT ?value WHERE { wd:Q102296 p:P31 ?s . ?s ps:P31 wd:Q466603 . ?s pq:P155 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'deuterium', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'isotope of hydrogen'}}}

 Q: What is Guide to Pharmacology Ligand ID for L-Cysteine ?
 SPARQL: select distinct ?answer where { wd:Q186474 wdt:P595 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L-Cysteine', 'p': 'Guide to Pharmacology Ligand ID', 'o': '?x0'}

 Q: What is the religious identity practiced by atheism?
 SPARQL:  select distinct ?obj where { wd:Q7066 wdt:P3095 ?obj . ?obj wdt:P31 wd:Q4392985 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'atheism', 'p': 'practiced by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious identity'}}

 Q: Is the Poisson's ratio of gold equal to 0.4?
 SPARQL: ASK WHERE { wd:Q897 wdt:P5593 ?obj filter(?obj = 0.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'gold', 'p': "Poisson's ratio", 'o': '?x0', '?x0': '0.4'}

 Q: What is {is in the region of} of {University of Hanover}, that has {lake} is {Leine} ?
 SPARQL: SELECT ?answer WHERE { wd:Q678982 wdt:P131 ?answer . ?answer wdt:P206 wd:Q161051}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of Hanover', 'p': 'is in the region of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'lake', 'o': 'Leine'}}

 Q: What is the {inferior planet} with the {MAX(orbital eccentricity)} whose {part of} is {inner Solar System}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3901935 . ?ent wdt:P1096 ?obj . ?ent wdt:P361 wd:Q7879772 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'eccentricity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'inferior planet', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'inner Solar System'}}}

 Q: what is  valid in period for Brittany has located in time zone as UTC+01:00 ?
 SPARQL: SELECT ?value WHERE { wd:Q327 p:P421 ?s . ?s ps:P421 wd:Q6655 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Brittany', 'p': 'located in time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in time zone', 'o': 'UTC+01:00'}}}

 Q: How many {production company} are to/by {ITV} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P272 wd:Q220072 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production company', 'o': 'ITV'}

 Q: Which anatomical structure connects with the stomach?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2789 wd:Q1029907 . ?sbj wdt:P31 wd:Q4936952 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'connects with', 'o': 'stomach', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'anatomical structure'}}

 Q: How many performers are there for Thor?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q717588 wdt:P175 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Thor', 'p': 'performer', 'o': '?x0'}

 Q: How many writing systems are in runes?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P282 wd:Q82996 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'writing system', 'o': 'runes'}

 Q: Which is the metropolis that is twinned administrative body of Sofia?
 SPARQL:  select distinct ?obj where { wd:Q472 wdt:P190 ?obj . ?obj wdt:P31 wd:Q200250 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sofia', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolis'}}

 Q: Is the sound power level of the Ridgid R6300 110?
 SPARQL: ASK WHERE { wd:Q23775521 wdt:P2797 ?obj filter(?obj = 110) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ridgid R6300', 'p': 'sound power level', 'o': '?x0', '?x0': '110'}

 Q: What is an example of a dog from species Canis familiaris?
 SPARQL: SELECT ?obj WHERE { wd:Q144 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P642 wd:Q20717272 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'dog', 'p': 'type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'Canis familiaris'}}}

 Q: what is the {object has role} for {Dracula} has {characters} as {Peter Hawkins} ?
 SPARQL: SELECT ?value WHERE { wd:Q41542 p:P674 ?s . ?s ps:P674 wd:Q28049935 . ?s pq:P3831 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'object has role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dracula', 'p': 'characters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'characters', 'o': 'Peter Hawkins'}}}

 Q: Name the short-chain fatty acid causing acetic acid exposure with the highest dynamic viscosity ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2698455 . ?ent wdt:P3070 ?obj . ?ent wdt:P1542 wd:Q21167527 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'dynamic viscosity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'short-chain fatty acid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has effect', 'o': 'acetic acid exposure'}}}

 Q: How many countries have diplomatic relations with Burkina Faso?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P530 wd:Q965 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Burkina Faso'}

 Q: What is the {behavioral disorder} for {medical condition treated} of {amphetamine}
 SPARQL:  select distinct ?obj where { wd:Q179452 wdt:P2175 ?obj . ?obj wdt:P31 wd:Q1815366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'amphetamine', 'p': 'medical condition treated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'behavioral disorder'}}

 Q: What is ITIS TSN for Sphyraena?
 SPARQL: select distinct ?answer where { wd:Q193921 wdt:P815 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sphyraena', 'p': 'ITIS TSN', 'o': '?x0'}

 Q: What is <Lotsawa House Tibetan author ID> of <Tenzin Gyatso> ?
 SPARQL: select distinct ?answer where { wd:Q17293 wdt:P4348 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tenzin Gyatso', 'p': 'Lotsawa House Tibetan author ID', 'o': '?x0'}

 Q: What is the {point} with the {MIN(elevation above sea level)} whose {country} is {Brazil}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q24529780 . ?ent wdt:P2044 ?obj . ?ent wdt:P17 wd:Q155} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'elevation above sea level', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'point', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Brazil'}}}

 Q: When did Betty Grable die who was married to Jackie Coogan?
 SPARQL: SELECT ?value WHERE { wd:Q233852 p:P26 ?s . ?s ps:P26 wd:Q313279 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Betty Grable', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Jackie Coogan'}}}

 Q: what is the {start time} for {Moshe Dayan} has {military branch} as {Jewish Supernumerary Police} ?
 SPARQL: SELECT ?value WHERE { wd:Q188783 p:P241 ?s . ?s ps:P241 wd:Q1472290 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moshe Dayan', 'p': 'military branch', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'military branch', 'o': 'Jewish Supernumerary Police'}}}

 Q: What is {position held} of {Lyndon B. Johnson} that is {replaces} is {Richard Nixon} ?
 SPARQL: SELECT ?obj WHERE { wd:Q9640 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q9588 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lyndon B. Johnson', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Richard Nixon'}}}

 Q: what is the {applies to part} for {Guangzhou Metro} has {type of electrification} as {1500 V DC railway electrification} ?
 SPARQL: SELECT ?value WHERE { wd:Q660751 p:P930 ?s . ?s ps:P930 wd:Q21253457 . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guangzhou Metro', 'p': 'type of electrification', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type of electrification', 'o': '1500 V DC railway electrification'}}}

 Q: At what point in time did Apple Inc. report a net profit of 5.3394e+10?
 SPARQL: SELECT ?value WHERE { wd:Q312 p:P2295 ?s . ?s ps:P2295 ?x filter(contains(?x,'5.3394e+10')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Apple Inc.', 'p': 'net profit', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'net profit', 'o': '5.3394e+10'}, 't': '?x0'}

 Q: What is the {medical condition treated} and the {physically interacts with} of {Dopamine} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q170304 wdt:P2175 ?ans_1 . wd:Q170304 wdt:P129 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Dopamin', 'p': 'medical condition treated', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Dopamin', 'p': 'physically interacts with', 'o': '?x1'}]

 Q: what is pronunciation audio of bread that is language of work or name is wolof?
 SPARQL: SELECT ?obj WHERE { wd:Q7802 p:P443 ?s . ?s ps:P443 ?obj . ?s pq:P407 wd:Q34257 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'bread', 'p': 'pronunciation audio', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'wo'}}}

 Q: What is <Hall of Light Amiga database ID> of <Doom> ?
 SPARQL: select distinct ?answer where { wd:Q189784 wdt:P4671 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Doom', 'p': 'Hall of Light Amiga database ID', 'o': '?x0'}

 Q: What is {consumer price index inflation rate} of {county seat for} of {Sri Jayawardenepura Kotte} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41963 wdt:P1376 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sri Jayawardenepura Kotte', 'p': 'county seat for', 'o': '$y0'}}

 Q: What is {death location} of {Władysław Reymont}, that has {chancellor} is {Marcin Święcicki} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q121180 wdt:P20 ?answer . ?answer wdt:P6 wd:Q11767901}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Władysław Reymont', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chancellor', 'o': 'Marcin Święcicki'}}

 Q: What is {participant of} of {Kevin Kuske} that is {award received} is {Olympic silver medal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q60490 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P166 wd:Q15889641 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Kuske', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'silver medal'}}}

 Q: What is {subsidiary} of {IBM} that is {proportion} is {100.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q37156 p:P355 ?s . ?s ps:P355 ?obj . ?s pq:P1107 ?x filter(contains(?x,'100.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'IBM', 'p': 'subsidiary', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'proportion', 'o': '100.0'}}}

 Q: What is the total revenue of Burger King in the year of 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q177054 p:P2139 ?s . ?s ps:P2139 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Burger King', 'p': 'total revenue', 'o': '?x0', 't': '2012'}

 Q: Is it true that the pKa of the hydrogen fluoride equals to 3.17?
 SPARQL: ASK WHERE { wd:Q2468 wdt:P1117 ?obj filter(?obj = 3.17) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'hydrogen fluoride', 'p': 'pKa', 'o': '?x0', '?x0': '3.17'}

 Q: Which isotope of bismuth has the longest half-life?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1372372 . ?ent wdt:P2114 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'half-life', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of bismuth'}}

 Q: Who was the spouse of Rita Hayworth in 1953?
 SPARQL: SELECT ?obj WHERE { wd:Q42745 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rita Hayworth', 'p': 'spouse', 'o': '?x0', 't': '1953'}

 Q: What is {previous is} of {Red Dead Redemption}, that has {runtime} is {PlayStation 2} ?
 SPARQL: SELECT ?answer WHERE { wd:Q548203 wdt:P155 ?answer . ?answer wdt:P400 wd:Q10680}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Red Dead Redemption', 'p': 'previous is', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'runtime', 'o': 'PlayStation 2'}}

 Q: "What has a result of mutation, that has been implied by the genetic drift?"
 SPARQL: SELECT ?answer WHERE { wd:Q42918 wdt:P1542 ?answer . ?answer wdt:P828 wd:Q486420}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'mutation', 'p': 'result', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'result of', 'o': 'genetic drift'}}

 Q: What is shareholders W. Chump & Sons Ltd's artwork?
 SPARQL: SELECT ?answer WHERE { wd:Q21903339 wdt:P127 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'W. Chump & Sons Ltd', 'p': 'shareholder', 'o': '$y0'}}

 Q: What is the country seat of Majuro with human population of 31895.0?
 SPARQL: SELECT ?answer WHERE { wd:Q12919 wdt:P1376 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'31895.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Majuro', 'p': 'seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '31895.0'}}

 Q: Does the picometer of the conversion to SI equal 0.00000000001
 SPARQL: ASK WHERE { wd:Q192274 wdt:P2370 ?obj filter(?obj = 0.000000000001) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'picometer', 'p': 'conversion to SI unit', 'o': '?x0', '?x0': '0.000000000001'}

 Q: How many connectors does Nintendo Switch have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q19610114 wdt:P2935 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Nintendo Switch', 'p': 'connector', 'o': '?x0'}

 Q: What is {next to} of {born at} of {Catherine Deneuve} ?
 SPARQL: SELECT ?answer WHERE { wd:Q106418 wdt:P19 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Catherine Deneuve', 'p': 'birthplace', 'o': '$y0'}}

 Q: What is the currency used in Czechoslovakia ?
 SPARQL:  select distinct ?obj where { wd:Q33946 wdt:P38 ?obj . ?obj wdt:P31 wd:Q8142 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Czechoslovakia', 'p': 'currency', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'currency'}}

 Q: Which is the ISO 639-6 code for Old English?
 SPARQL: select distinct ?answer where { wd:Q42365 wdt:P221 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Old English', 'p': 'ISO 639-6 code', 'o': '?x0'}

 Q: In which year were the Carpenters nominated for the Grammy Award for Album of the Year?
 SPARQL: SELECT ?value WHERE { wd:Q223495 p:P1411 ?s . ?s ps:P1411 wd:Q904528 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Carpenters', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Grammy Award for Album of the Year'}, 't': '?x0'}

 Q: Which place, named after curium, is a member of the German Academy of Sciences Leopoldina?
 SPARQL: SELECT ?answer WHERE { wd:Q1876 wdt:P138 ?answer . ?answer wdt:P463 wd:Q543804}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'curium', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'German Academy of Sciences Leopoldina'}}

 Q: What film is starring the series of The Smell of Music?
 SPARQL: SELECT ?answer WHERE { wd:Q50523484 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Smell of Music', 'p': 'series', 'o': '$y0'}}

 Q: tell me glucan name has the word zymosan in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q416796 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zymosan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'glucan'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zymosan'}}

 Q: What is {density} of {calcium hydroxide} that is {temperature} is {20.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q182849 p:P2054 ?s . ?s ps:P2054 ?obj . ?s pq:P2076 ?x filter(contains(?x,'20.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'density', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'calcium hydroxide', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'temperature', 'o': '20.0'}}}

 Q: Which is the home world for Superman?
 SPARQL: select distinct ?answer where { wd:Q79015 wdt:P1165 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Superman', 'p': 'home world', 'o': '?x0'}

 Q: wich means  {GOST 7.75–97 code}at {Azerbaijani}?
 SPARQL: select distinct ?answer where { wd:Q9292 wdt:P278 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Azerbaijani', 'p': 'GOST 7.75–97 code', 'o': '?x0'}

 Q: What is the {region of Ethiopia} for {enclave within} of {Addis Ababa}
 SPARQL:  select distinct ?obj where { wd:Q3624 wdt:P501 ?obj . ?obj wdt:P31 wd:Q1057504 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Addis Ababa', 'p': 'enclave within', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'region of Ethiopia'}}

 Q: what is the {statement is subject of} for {Richard Burton} that has {nominated for} as {Academy Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q151973 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Burton', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}}}

 Q: "What {psychologist} is a {medical speciality}  of {mental disorder}, that has {has proponent}  ?"
 SPARQL: SELECT ?answer WHERE { wd:Q12135 wdt:P1995 ?answer . ?answer wdt:P3095 wd:Q212980}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'mental disorder', 'p': 'medical speciality', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has proponent', 'o': 'psychologist'}}

 Q: Is the number of representations of the Timeless less than 12.0?
 SPARQL: ASK WHERE { wd:Q199229 wdt:P5027 ?obj filter(?obj < 12.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Timeless', 'p': 'number of representations', 'o': '?x0', '?x0': '12.0'}

 Q: How many were inspired by Christianity?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P941 wd:Q5043 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'inspired by', 'o': 'Christianity'}

 Q: Which is the fictional universe of the fictional universe described in Futurama?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1445 wd:Q73622 . ?sbj wdt:P31 wd:Q559618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional universe described in', 'o': 'Futurama', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional universe'}}

 Q: Give me the country where the 20th Century Fox headquarters known as Fox Plaza is located?
 SPARQL: SELECT ?value WHERE { wd:Q434841 p:P159 ?s . ?s ps:P159 wd:Q1920322 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '20th Century Fox', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'headquarters', 'o': 'Fox Plaza'}}}

 Q: What is {participant of} of {Peter Gade} that is {ranking} is {1.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q363540 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P1352 ?x filter(contains(?x,'1.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Gade', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ranking', 'o': '1.0'}}}

 Q: What is the {participant} and the {named after} of {Woodstock} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q164815 wdt:P710 ?ans_1 . wd:Q164815 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Woodstock', 'p': 'participant', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Woodstock', 'p': 'named after', 'o': '?x1'}]

 Q: What is Köppen climate classification group for Huế?
 SPARQL: select distinct ?answer where { wd:Q36167 wdt:P2564 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Huế', 'p': 'Köppen climate classification', 'o': '?x0'}

 Q: What is the member of political party of Angela_Merkel ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q567 wdt:P463 ?ans_1 . wd:Q567 wdt:P102 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Merkel', 'p': 'member of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Merkel', 'p': 'member of political party', 'o': '?x1'}]

 Q: What is <member count> of <Coptic Orthodox Church of Alexandria> ?
 SPARQL: select distinct ?answer where { wd:Q198998 wdt:P2124 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coptic Orthodox Church of Alexandria', 'p': 'member count', 'o': '?x0'}

 Q: "Which name after, Eridanus, has a gender expression that is male?"
 SPARQL: SELECT ?answer WHERE { wd:Q10433 wdt:P138 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eridanus', 'p': 'name after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gender expression', 'o': 'male'}}

 Q: What is {series} of {Jeremiah} that is {of} is {Judaism} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131590 p:P179 ?s . ?s ps:P179 ?obj . ?s pq:P642 wd:Q9268 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'of', 'o': 'Judaism'}}}

 Q: The office of the pope directs which Christian Church organisation?
 SPARQL:  select distinct ?obj where { wd:Q19546 wdt:P2389 ?obj . ?obj wdt:P31 wd:Q34651 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pope', 'p': 'directs', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Christian Church'}}

 Q: What member of Barbados was formed on November 16, 1945?
 SPARQL: SELECT ?answer WHERE { wd:Q244 wdt:P463 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1945'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barbados', 'p': 'member of', 'o': '?x0', 't': '1945'}

 Q: Which prescribed drug for epilepsy has a weight of 221.988?
 SPARQL: SELECT ?answer WHERE { wd:Q41571 wdt:P2176 ?answer . ?answer wdt:P2067 ?x FILTER(contains(?x,'221.988'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'epilepsy', 'p': 'prescribed drug', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'weight', 'o': '221.988'}}

 Q: When did educated at of Mahmoud Ahmadinejad and academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q34448 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahmoud Ahmadinejad', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahmoud Ahmadinejad', 'p': 'educated at', 'o': '$y0'}}]

 Q: What type of kinship does Charles Darwin have in relation to his relative Bernard Darwin?
 SPARQL: SELECT ?value WHERE { wd:Q1035 p:P1038 ?s . ?s ps:P1038 wd:Q822372 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles Darwin', 'p': 'relative', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relative', 'o': 'Bernard Darwin'}}}

 Q: What is the Treaty of Versailles' depositor?
 SPARQL: select distinct ?answer where { wd:Q8736 wdt:P2058 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Treaty of Versailles', 'p': 'depositor', 'o': '?x0'}

 Q: What is Kurdistan's continent and the official language?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q41470 wdt:P30 ?ans_1 . wd:Q41470 wdt:P37 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Kurdistan', 'p': 'continent', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Kurdistan', 'p': 'official language', 'o': '?x1'}]

 Q: Does cream ale has a beer bitterness that is equal to 14?
 SPARQL: ASK WHERE { wd:Q5183358 wdt:P6088 ?obj filter(?obj = 14) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'cream ale', 'p': 'beer bitterness', 'o': '?x0', '?x0': '14'}

 Q: What is the {human} for {doctoral student} of {Richard Dawkins}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P185 wd:Q44461 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Richard Dawkins', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What are the personality trait which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2393196 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'personality trait'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what is the {point in time} for {Isiah Thomas} has {award received} as {NBA All-Rookie Team} ?
 SPARQL: SELECT ?value WHERE { wd:Q298512 p:P166 ?s . ?s ps:P166 wd:Q1418009 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Isiah Thomas', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'NBA All-Rookie Team'}, 't': '?x0'}

 Q: Is -51.9 the specific rotation of the dolabriferol B?
 SPARQL: ASK WHERE { wd:Q57421096 wdt:P6272 ?obj filter(?obj = -51.9) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'dolabriferol B', 'p': 'specific rotation', 'o': '?x0', '?x0': '-51.9'}

 Q: Which is the development of anatomical structure for pulmonary alveolus?
 SPARQL: select distinct ?answer where { wd:Q191341 wdt:P4843 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pulmonary alveolus', 'p': 'development of anatomical structure', 'o': '?x0'}

 Q: Who is the publisher and editor of Playboy?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q150820 wdt:P123 ?ans_1 . wd:Q150820 wdt:P98 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Playboy', 'p': 'publisher', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Playboy', 'p': 'editor', 'o': '?x1'}]

 Q: Tell me the award created by Academy of Television Arts & Sciences and that contains the word award in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q618779 . ?sbj wdt:P170 wd:Q427611 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'award')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'award', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'Academy of Television Arts & Sciences'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'award'}}

 Q: What is <reward program> of <Turkish Airlines> ?
 SPARQL: select distinct ?answer where { wd:Q4548 wdt:P4446 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Turkish Airlines', 'p': 'reward program', 'o': '?x0'}

 Q: What is {participant of} of {Park Sung-hyun} and {together with}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q233884 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Sung-hyun', 'p': 'participant of', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'participant of', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Sung-hyun', 'p': 'participant of', 'o': '$y0'}}]

 Q: What is WomenWriters ID for Virginia Woolf ?
 SPARQL: select distinct ?answer where { wd:Q40909 wdt:P2533 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Virginia Woolf', 'p': 'WomenWriters ID', 'o': '?x0'}

 Q: Which is the unit of energy that is measured by physical quantity of energy and starts with the letter t?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2916980 . ?sbj wdt:P111 wd:Q11379 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of energy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'quantity', 'o': 'energy'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which space agency whose  website account on Foursquare Labs, Inc. and which that starts with the letter a
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17505024 . ?sbj wdt:P553 wd:Q51709 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space agency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'website account on', 'o': 'Foursquare Labs, Inc.'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is the {historical country} for {applies to jurisdiction} of {pope}
 SPARQL:  select distinct ?obj where { wd:Q19546 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pope', 'p': 'applies to jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What kind of vessel is the Hubble Space Telescope?
 SPARQL: select distinct ?answer where { wd:Q2513 wdt:P1876 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hubble Space Telescope', 'p': 'vessel', 'o': '?x0'}

 Q: what is the {replaces} for {Abdalá Bucaram} has {position held} as {Mayor of Guayaquil} ?
 SPARQL: SELECT ?value WHERE { wd:Q307701 p:P39 ?s . ?s ps:P39 wd:Q5663928 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abdala Bucaram', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Mayor of Guayaquil'}}}

 Q: At what temperature does methanol have a density of 0.79?
 SPARQL: SELECT ?value WHERE { wd:Q14982 p:P2054 ?s . ?s ps:P2054 ?x filter(contains(?x,'0.79')) . ?s pq:P2076 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'methanol', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'density', 'o': '0.79'}}}

 Q: What award did John Bardeen receive on January 1, 1971?
 SPARQL: SELECT ?obj WHERE { wd:Q949 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1971')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Bardeen', 'p': 'award', 'o': '?x0', 't': '1971'}

 Q: what is the {start time} for {Assur} has {capital of} as {Old Assyrian Empire} ?
 SPARQL: SELECT ?value WHERE { wd:Q200200 p:P1376 ?s . ?s ps:P1376 wd:Q22948607 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Assur', 'p': 'capital of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'capital of', 'o': 'Old Assyrian Empire'}}}

 Q: What is {toponym} of {roentgen}, that has {place of activity} is {Würzburg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q321017 wdt:P138 ?answer . ?answer wdt:P937 wd:Q2999}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'roentgen', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'place of activity', 'o': 'Würzburg'}}

 Q: Is the budget of the National Commission for Radiation Protection of Ukraine greater than 1246680.0?
 SPARQL: ASK WHERE { wd:Q6971658 wdt:P2769 ?obj filter(?obj > 1246680.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'National Commission for Radiation Protection of Ukraine', 'p': 'budget', 'o': '?x0', '?x0': '1246680.0'}

 Q: Give me {Twelve Olympians} that contains the word {dionysus} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q101609 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'dionysus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Twelve Olympians'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'dionysus'}}

 Q: Was Jessica Chastain nominated for Academy Award for Best Picture?
 SPARQL: ASK WHERE { wd:Q229313 wdt:P1411 wd:Q102427 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jessica Chastain', 'p': 'nominated for', 'o': '?x0', '?x0': 'Academy Award for Best Picture'}]

 Q: What is {location of work} of {role model} of {Edward Albee} ?
 SPARQL: SELECT ?answer WHERE { wd:Q219420 wdt:P737 ?X . ?X wdt:P937 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward Albee', 'p': 'role model', 'o': '$y0'}}

 Q: Which is the Sefaria ID for Leviticus?
 SPARQL: select distinct ?answer where { wd:Q41490 wdt:P4230 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leviticus', 'p': 'Sefaria ID', 'o': '?x0'}

 Q: Name a food ingredient that starts with letter Z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q25403900 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'food ingredient'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: How many are dedicated to Basil of Caesarea?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P825 wd:Q44258 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'dedicated to', 'o': 'Basil of Caesarea'}

 Q: What is the {academic institution} for {subsidiary} of {Rutgers University}
 SPARQL:  select distinct ?obj where { wd:Q499451 wdt:P355 ?obj . ?obj wdt:P31 wd:Q4671277 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rutgers University', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'academic institution'}}

 Q: What is the equivalent of hubris, the antonym of humility?
 SPARQL: SELECT ?answer WHERE { wd:Q735766 wdt:P460 ?answer . ?answer wdt:P461 wd:Q1186677}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'hubris', 'p': 'equivalent of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'antonym', 'o': 'humility'}}

 Q: What is {location of birth} of {José María Morelos y Pavón}, that has {coordinates} is {19.7683} ?
 SPARQL: SELECT ?answer WHERE { wd:Q378420 wdt:P19 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'19.7683'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'José María Morelos', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinates', 'o': '19.7683'}}

 Q: What is the brain's Spider Ontology ID?
 SPARQL: select distinct ?answer where { wd:Q1073 wdt:P4537 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'brain', 'p': 'Spider Ontology ID', 'o': '?x0'}

 Q: Who was Erich Maria Remarque's spouse from 1925-0-0 onward?
 SPARQL: SELECT ?obj WHERE { wd:Q47293 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1925')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Erich Maria Remarque', 'p': 'spouse', 'o': '?x0', 't': '1925'}

 Q: What is the {prefecture-level city} for {contains administrative territorial entity} of {Guangdong}
 SPARQL:  select distinct ?obj where { wd:Q15175 wdt:P150 ?obj . ?obj wdt:P31 wd:Q748149 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Guangdong', 'p': 'contains', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prefecture-level city'}}

 Q: What is {date of birth} and {mother} of {{John Adams} has {child} as {Thomas Boylston Adams}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 wd:Q7787805 . ?s pq:P569 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Thomas Boylston Adams'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'mother', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Adams', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Thomas Boylston Adams'}}}]

 Q: Name an operating system that is not Linux
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1889 wd:Q388 . ?sbj wdt:P31 wd:Q9135 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'is not', 'o': 'Linux', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operating system'}}

 Q: Tell me United States Supreme Court decision whose name has the word united in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q19692072 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'united')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'United States Supreme Court decision'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'united'}}

 Q: what is the {instance of} for {Bartholomew the Apostle} has {date of birth} as {-100-1-1} ?
 SPARQL: SELECT ?value WHERE { wd:Q43982 p:P569 ?s . ?s ps:P569 ?x filter(contains(?x,'-100-1-1')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bartholomew the Apostle', 'p': 'date of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'date of birth', 'o': '-100-1-1'}}}

 Q: What is the {human} for {work location} of {Vancouver}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P937 wd:Q24639 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work location', 'o': 'Vancouver', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {active since} of {spouses} of {Margarita Simonyan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4419809 wdt:P26 ?X . ?X wdt:P2031 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'active since', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Margarita Simonyan', 'p': 'married to', 'o': '$y0'}}

 Q: In The Indian War of Independence, what is the favorite player of the writer?
 SPARQL: SELECT ?answer WHERE { wd:Q7741873 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'favorite player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Indian War of Independence', 'p': 'writer', 'o': '$y0'}}

 Q: What award did Konrad Adenauer receive on 1953-12-31?
 SPARQL: SELECT ?obj WHERE { wd:Q2492 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1953')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Konrad Adenauer', 'p': 'award', 'o': '?x0', 't': '1953'}

 Q: Did {Buddhism} {named after} {immigration to the United States}?
 SPARQL: ASK WHERE { wd:Q748 wdt:P138 wd:Q1309633 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Buddhism', 'p': 'named after', 'o': '?x0', '?x0': 'immigration to the United States'}]

 Q: Which person is the stepfather of Antoninus Pius?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3448 wd:Q1429 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'stepfather', 'o': 'Antoninus Pius', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {position held} of {Aaron Burr} that is {replaces} is {Philip John Schuyler} ?
 SPARQL: SELECT ?obj WHERE { wd:Q179090 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q1115886 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aaron Burr', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Philip John Schuyler'}}}

 Q: Spinacia oleracea belongs to which taxonomic type?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P427 wd:Q81464 . ?sbj wdt:P31 wd:Q16521 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'taxonomic type', 'o': 'Spinacia oleracea', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxon'}}

 Q: Did The Best Damn Thing sell more than 4,800,000 copies?
 SPARQL: ASK WHERE { wd:Q192257 wdt:P2664 ?obj filter(?obj = 4800000.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'The Best Damn Thing', 'p': 'units sold', 'o': '?x0', '?x0': '4800000.0'}

 Q: Is it true that the total assets of the OTE is less than 6057280000?
 SPARQL: ASK WHERE { wd:Q206678 wdt:P2403 ?obj filter(?obj < 6057280000.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'OTE', 'p': 'total assets', 'o': '?x0', '?x0': '6057280000.0'}

 Q: What is {located in time zone} of {Genoa} that is {valid in period} is {standard time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1449 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Genoa', 'p': 'time', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'standard time'}}}

 Q: What is the native language of the Circassians?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q15763 wdt:P103 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Circassians', 'p': 'native language', 'o': '?x0'}

 Q: Is it true that the total reserves of Luxembourg are greater than 1036389448.8?
 SPARQL: ASK WHERE { wd:Q32 wdt:P2134 ?obj filter(?obj > 1036389448.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Luxembourg', 'p': 'total reserves', 'o': '?x0', '?x0': '1036389448.8'}

 Q: What was the diplomatic relation of the release region of Pet Sounds?
 SPARQL: SELECT ?answer WHERE { wd:Q212863 wdt:P291 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pet Sounds', 'p': 'release region', 'o': '$y0'}}

 Q: What is {confers} of {university attended} of {Jacqueline Fernandez} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2312801 wdt:P69 ?X . ?X wdt:P5460 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'confers', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacqueline Fernandez', 'p': 'university attended', 'o': '$y0'}}

 Q: What is <anatomical branch of> of <trachea> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3261 wd:Q175449}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anatomical branch of', 'o': 'trachea'}

 Q: Give me {rock band} that {website account on} {PureVolume} and which that starts with {'u'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5741069 . ?sbj wdt:P553 wd:Q1508912 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rock band', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'website account on', 'o': 'PureVolume'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: When Ghana has its inflation rate 34.2?
 SPARQL: SELECT ?value WHERE { wd:Q117 p:P1279 ?s . ?s ps:P1279 ?x filter(contains(?x,'34.2')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ghana', 'p': 'inflation rate', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'inflation rate', 'o': '34.2'}, 't': '?x0'}

 Q: What are the ideology which start with the letter wahhabism
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7257 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wahhabism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ideology'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wahhabism'}}

 Q: Give me {online dictionary} that {has edition} {The Oxford English Dictionary (Second Edition on CD-ROM, Version 4.0)} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3327521 . ?sbj wdt:P747 wd:Q13735287 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'online dictionary', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'The Oxford English Dictionary (Second Edition on CD-ROM, Version 4.0)'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Tell me radio program whose name has the word ö3 in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1555508 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ö3')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'radio program'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ö3'}}

 Q: Is the prescribed drug esmolol the cause of death of Randy Savage?
 SPARQL: SELECT ?answer WHERE { wd:Q59635 wdt:P509 ?answer . ?answer wdt:P2176 wd:Q418139}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Randy Savage', 'p': 'cause of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'prescribed drug', 'o': 'esmolol'}}

 Q: Did {Premier_League} {country} {United Kingdom}?
 SPARQL: ASK WHERE { wd:Q9448 wdt:P17 wd:Q145 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Premier League', 'p': 'country', 'o': '?x0', '?x0': 'United Kingdom'}]

 Q: Is the topographic prominence of the Predigtstuhl equal to 18?
 SPARQL: ASK WHERE { wd:Q871060 wdt:P2660 ?obj filter(?obj = 18.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Predigtstuhl', 'p': 'topographic prominence', 'o': '?x0', '?x0': '18.0'}

 Q: What is {musician} of {characters} of {Guardians of the Galaxy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5887360 wdt:P674 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guardians of the Galaxy', 'p': 'characters', 'o': '$y0'}}

 Q: Tell me festival whose name has the word vijayadashami  in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q132241 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vijayadashami')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'festival'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vijayadashami'}}

 Q: What is {award received} of {John James Audubon} that is {start time} is {1827-5-3} ?
 SPARQL: SELECT ?obj WHERE { wd:Q182882 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1827')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John James Audubon', 'p': 'award', 'o': '?x0', 't': '1827'}

 Q: Tell me which structural class of chemical compounds start with the letter u.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q47154513 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'structural class of chemical compounds'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Who did Elizabeth Cady Stanton marry on May 1,1840?
 SPARQL: SELECT ?obj WHERE { wd:Q465335 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1840')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Elizabeth Cady Stanton', 'p': 'marry', 'o': '?x0', 't': '1840'}

 Q: who is the {replaces} for {Philip VI of France} which {position held} as {King of France} ?
 SPARQL: SELECT ?value WHERE { wd:Q170586 p:P39 ?s . ?s ps:P39 wd:Q18384454 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip VI of France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'King of France'}}}

 Q: What is {is child of} of {Albert I, Prince of Monaco}, that has {place of grave} is {Saint Nicholas Cathedral} ?
 SPARQL: SELECT ?answer WHERE { wd:Q159646 wdt:P22 ?answer . ?answer wdt:P119 wd:Q667450}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Albert I, Prince of Monaco', 'p': 'child of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'place of grave', 'o': 'Saint Nicholas Cathedral'}}

 Q: What Saarland outcome is applied to the jurisdiction of indecent exposure?
 SPARQL: SELECT ?answer WHERE { wd:Q43426 wdt:P1001 ?answer . ?answer wdt:P793 wd:Q1201}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'indecent exposure', 'p': 'jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'outcome', 'o': 'Saarland'}}

 Q: Which tram system has the highest cruising speed?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15640053 . ?ent wdt:P2217 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'cruise speed', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tram system'}}

 Q: What finite group has the highest cardinality?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1057968 . ?ent wdt:P1164 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'cardinality of the group', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'finite group'}}

 Q: What is {nominated for} of {Anne V. Coates} that is {for work} is {Lawrence of Arabia} ?
 SPARQL: SELECT ?obj WHERE { wd:Q31294 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q228186 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne V. Coates', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Lawrence of Arabia'}}}

 Q: Is the field of view of the ZF 3x8 greater than 9.6?
 SPARQL: ASK WHERE { wd:Q42313165 wdt:P4036 ?obj filter(?obj > 9.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'ZF 3 x 8', 'p': 'field of view', 'o': '?x0', '?x0': '9.6'}

 Q: Karlsruhe has how many areas?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1040 wdt:P2046 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Karlsruhe', 'p': 'area', 'o': '?x0'}

 Q: What is {participant in conflict} of {equipment operated} of {4th Fighter Group (United States Army Air Forces)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q53679620 wdt:P121 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '4th Fighter Group', 'p': 'equipment operated', 'o': '$y0'}}

 Q: What is {number of out of school children} of {Samoa} that is {point in time} is {1999-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q683 p:P2573 ?s . ?s ps:P2573 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Samoa', 'p': 'number of out of school children', 'o': '?x0', 't': '1999'}

 Q: What is {partner town} of {place of activity} of {Tomás Cruz Martínez} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17465858 wdt:P937 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'partner town', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tomás Cruz Martínez', 'p': 'place of activity', 'o': '$y0'}}

 Q: What is {established by} of {label} of {Super Junior} ?
 SPARQL: SELECT ?answer WHERE { wd:Q239693 wdt:P264 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'established by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Super Junior', 'p': 'label', 'o': '$y0'}}

 Q: What is {stock exchange} of {LinkedIn} that is {ticker symbol} is {NYSE} ?
 SPARQL: SELECT ?obj WHERE { wd:Q213660 p:P414 ?s . ?s ps:P414 ?obj . ?s pq:P249 ?x filter(contains(?x,'NYSE')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'stock exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'LinkedIn', 'p': 'stock exchange', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'ticker symbol', 'o': 'nyse'}}}

 Q: What is the subclass of herbicide?
 SPARQL: select distinct ?answer where { wd:Q178266 wdt:P279 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'herbicide', 'p': 'subclass of', 'o': '?x0'}

 Q: Which is Cinema of Israel ID of Patrick Stewart ?
 SPARQL: select distinct ?answer where { wd:Q16296 wdt:P3445 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Patrick Stewart', 'p': 'Cinema of Israel ID', 'o': '?x0'}

 Q: What is {award received} of {Peter Jackson} that is {for work} is {The Lord of the Rings: The Return of the King} ?
 SPARQL: SELECT ?obj WHERE { wd:Q4465 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q131074 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Jackson', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Lord of the Rings: The Return of the King'}}}

 Q: Which is the Quebec municipalities geographical code for Montreal?
 SPARQL: select distinct ?answer where { wd:Q340 wdt:P3856 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Montreal', 'p': 'Quebec municipalities geographical code', 'o': '?x0'}

 Q: what is the {start time} for {Gloria Macapagal-Arroyo} has {spouse} as {Jose Miguel Arroyo} ?
 SPARQL: SELECT ?value WHERE { wd:Q123665 p:P26 ?s . ?s ps:P26 wd:Q46340 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gloria Macapagal-Arroyo', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Jose Miguel Arroyo'}}}

 Q: What is the {product} with the {MAX(consumption rate)} whose {described by source} is {New Encyclopedic Dictionary}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2424752 . ?ent wdt:P2292 ?obj . ?ent wdt:P1343 wd:Q19190511 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'consumption rate', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'product', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'New Encyclopedic Dictionary'}}}

 Q: What is {elected in} and {end cause} of {{Austen Chamberlain} has {position held} as {Member of the 37th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q188999 p:P39 ?s . ?s ps:P39 wd:Q41582593 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Austen Chamberlain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 37th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Austen Chamberlain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 37th Parliament of the United Kingdom'}}}]

 Q: What is {pronunciation audio} of {foods traditionally associated} of {Eid al-Adha} ?
 SPARQL: SELECT ?answer WHERE { wd:Q514400 wdt:P868 ?X . ?X wdt:P443 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pronunciation audio', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eid al-Adha', 'p': 'foods traditionally associated', 'o': '$y0'}}

 Q: Did {Jennifer_Lopez} {partner} {Alex Rodriguez}?
 SPARQL: ASK WHERE { wd:Q40715 wdt:P451 wd:Q558664 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Jennifer Lopez', 'p': 'partner', 'o': '?x0', '?x0': 'Alex Rodriguez'}]

 Q: What is {diameter} of {Five hundred meter Aperture Spherical Telescope} that is {applies to part} is {primary mirror} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1827255 p:P2386 ?s . ?s ps:P2386 ?obj . ?s pq:P518 wd:Q613628 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diameter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'FAST', 'p': 'diameter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'primary mirror'}}}

 Q: What award did Georges Lemaitre receive in 1934-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q12998 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1934')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Georges Lemaitre', 'p': 'award', 'o': '?x0', 't': '1934'}

 Q: What temperature does lead with a density of 11.34 have?
 SPARQL: SELECT ?value WHERE { wd:Q708 p:P2054 ?s . ?s ps:P2054 ?x filter(contains(?x,'11.34')) . ?s pq:P2076 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lead', 'p': 'density', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'density', 'o': '11.34'}}}

 Q: What is {start time} and {number of points/goals/set scored} of {{Kevin Keegan} has {member of sports team} as {Hamburger SV}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q152832 p:P54 ?s . ?s ps:P54 wd:Q51974 . ?s pq:P580 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Keegan', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hamburger SV'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kevin Keegan', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hamburger SV'}}}]

 Q: How long was Alessandro Rosa Vieira a member of the sports team in 2005?
 SPARQL: SELECT ?obj WHERE { wd:Q919942 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2005')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alessandro Rosa Vieira', 'p': 'team', 'o': '?x0', 't': '2005'}

 Q: Who is born in Yevgeny Mravinsky whose legal name is Petrográd?
 SPARQL: SELECT ?answer WHERE { wd:Q320609 wdt:P19 ?answer . ?answer wdt:P1448 ?x FILTER(contains(?x,'Petrográd'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yevgeny Mravinsky', 'p': 'born in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'legal name', 'o': 'petrográd'}}

 Q: What is {named after} of {Sunday} that is {language of work or name} is {Slovene} ?
 SPARQL: SELECT ?obj WHERE { wd:Q132 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P407 wd:Q9063 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'named after', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sunday', 'p': 'named after', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language of work or name', 'o': 'Slovene'}}}

 Q: When did Einheitsgemeinde of Germany for shares border with of Hamburg?
 SPARQL:  select distinct ?obj where { wd:Q1055 wdt:P47 ?obj . ?obj wdt:P31 wd:Q15974307 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamburg', 'p': 'shares border with', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Einheitsgemeinde of Germany'}}

 Q: What is {field of work} and {doctoral advisor} of {{Hans Bethe} has {academic degree} as {doctoral degree}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q155794 p:P512 ?s . ?s ps:P512 wd:Q849697 . ?s pq:P101 ?value1 . ?s pq:P184 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'doctoral degree'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'academic degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'doctoral degree'}}}]

 Q: what is the {for work} for {Karl Malden} has {award received} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q94992 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karl Malden', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Supporting Actor'}}}

 Q: What is {label in official language} of {part of constellation} of {Arp 220} ?
 SPARQL: SELECT ?answer WHERE { wd:Q698547 wdt:P59 ?X . ?X wdt:P1705 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'label in official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arp 220', 'p': 'constellation', 'o': '$y0'}}

 Q: Tell me which is the fundamental interaction which starts with the letter i!
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q104934 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fundamental interaction'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: What award did Aleksandr Solzhenitsyn receive in 1998 ?
 SPARQL: SELECT ?obj WHERE { wd:Q34474 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1998')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aleksandr Solzhenitsyn', 'p': 'award', 'o': '?x0', 't': '1998'}

 Q: Which is the trunk prefix from Nintendo?
 SPARQL: SELECT ?answer WHERE { wd:Q8093 wdt:P740 ?X . ?X wdt:P3238 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'trunk prefix', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nintendo', 'p': 'from', 'o': '$y0'}}

 Q: What is {patron saint} of {Knights Templar}, that has {political office held} is {abbot} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41300 wdt:P417 ?answer . ?answer wdt:P39 wd:Q103163}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Knights Templar', 'p': 'patron saint', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'political office held', 'o': 'abbot'}}

 Q: Which {body of water} {is in the state of} of {Hauge Lutheran Church} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5682382 wdt:P131 ?X . ?X wdt:P206 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'body of water', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hauge Lutheran Church', 'p': 'is in the state of', 'o': '$y0'}}

 Q: What is {language used} of {Constant Puyo}, that has {typology} is {place–manner–time} ?
 SPARQL: SELECT ?answer WHERE { wd:Q650368 wdt:P1412 ?answer . ?answer wdt:P4132 wd:Q7200373}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Constant Puyo', 'p': 'language used', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'typology', 'o': 'place–manner–time'}}

 Q: What is {has brother} of {musician} of {Oíche chiún} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16614634 wdt:P175 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oíche chiún', 'p': 'musician', 'o': '$y0'}}

 Q: How many {has conjugation class} are for {Latin} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q397 wdt:P5206 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Latin', 'p': 'has conjugation class', 'o': '?x0'}

 Q: What are the redistribution market which start with the letter U
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41795373 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'redistribution market'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: What is {inspiration} of {son of} of {Ben} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24517056 wdt:P25 ?X . ?X wdt:P941 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inspiration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ben', 'p': 'son of', 'o': '$y0'}}

 Q: What is the name of the television program created by Julian Assange?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P170 wd:Q360 . ?sbj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'Julian Assange', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television program'}}

 Q: What is the {specialised classification scheme} for {discoverer or inventor} of {Dimitri Mendeleyev}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P61 wd:Q9106 . ?sbj wdt:P31 wd:Q24249534 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'discovered by', 'o': 'Dimitri Mendeleyev', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialised classification scheme'}}

 Q: Bengbu has shires with the gps coordinates of 117.344, is this correct?
 SPARQL: SELECT ?answer WHERE { wd:Q360069 wdt:P150 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'117.344'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bengbu', 'p': 'has shires', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinates', 'o': '117.344'}}

 Q: what is the {instance of} for {Nature} has {review score} as {41.456} ?
 SPARQL: SELECT ?value WHERE { wd:Q180445 p:P444 ?s . ?s ps:P444 ?x filter(contains(?x,'41.456')) . ?s pq:P31 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nature', 'p': 'review score', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'review score', 'o': '41.456'}}}

 Q: Which musical instrument is used to play New General Catalogue's "aircraft in fleet"?
 SPARQL: SELECT ?answer WHERE { wd:Q14534 wdt:P121 ?X . ?X wdt:P1303 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'instrument', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'New General Catalogue', 'p': 'fleet', 'o': '$y0'}}

 Q: "Who is the namesake of Van der Waals equation, who died in 1923-3-8?"
 SPARQL: SELECT ?answer WHERE { wd:Q254329 wdt:P138 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1923'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Van der Waals equation', 'p': 'namesake', 'o': '?x0', 't': '1923'}

 Q: Was Nicholas_II_of_Russia sibling Grand Duchess Olga Alexandrovna of Russia and Nicholas II of Russia ?
 SPARQL: ASK WHERE { wd:Q40787 wdt:P3373 wd:Q163176 . wd:Q40787 wdt:P3373 wd:Q40787 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Nicholas II of Russia', 'p': 'sibling', 'o': '?x0', '?x0': 'Olga Alexandrovna of Russia'}, {'h': 'IS', 'v': '?x1', 's': 'Nicholas II of Russia', 'p': 'sibling', 'o': '?x1', '?x1': 'Nicholas II of Russia'}]

 Q: What award was received by Mary Ainsworth  in 1989?
 SPARQL: SELECT ?obj WHERE { wd:Q242625 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mary Ainsworth', 'p': 'award', 'o': '?x0', 't': '1989'}

 Q: What is {is daughter of} of {has child} of {Margaret Grubb} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6759466 wdt:P40 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is daughter of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Margaret Grubb', 'p': 'child', 'o': '$y0'}}

 Q: What is {female} of {Charles Johnson}, that has {shortened name} is {чол} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1065092 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'чол'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Charles Johnson', 'p': 'man', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'чол'}}

 Q: Did {Frank_Abagnale} {residence} {Tulsa}?
 SPARQL: ASK WHERE { wd:Q116774 wdt:P551 wd:Q44989 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Frank Abagnale', 'p': 'residence', 'o': '?x0', '?x0': 'Tulsa'}]

 Q: What is the {literary work} for {notable work} of {Charles Dickens}
 SPARQL:  select distinct ?obj where { wd:Q5686 wdt:P800 ?obj . ?obj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Charles Dickens', 'p': 'work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: What is {income} of {stockholders} of {Disneyland} ?
 SPARQL: SELECT ?answer WHERE { wd:Q181185 wdt:P127 ?X . ?X wdt:P2139 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'income', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Disneyland', 'p': 'stockholder', 'o': '$y0'}}

 Q: What is {award received} of {Lewis Milestone} that is {for work} is {All Quiet on the Western Front} ?
 SPARQL: SELECT ?obj WHERE { wd:Q285928 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q272599 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lewis Milestone', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'All Quiet on the Western Front'}}}

 Q: Name the occupational carcinogen causing Chloromethane exposure with the the highest standard molar entropy ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21074597 . ?ent wdt:P3071 ?obj . ?ent wdt:P1542 wd:Q21174903 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'standard molar entropy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'occupational carcinogen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has effect', 'o': 'Chloromethane exposure'}}}

 Q: what is the {end time} for {Steve Jobs} has {educated at} as {Reed College} ?
 SPARQL: SELECT ?value WHERE { wd:Q19837 p:P69 ?s . ?s ps:P69 wd:Q1140775 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Steve Jobs', 'p': 'education', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'education', 'o': 'Reed College'}}}

 Q: Did {Minecraft} {distribution} {HD DVD}?
 SPARQL: ASK WHERE { wd:Q49740 wdt:P437 wd:Q178990 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Minecraft', 'p': 'distribution', 'o': '?x0', '?x0': 'HD DVD'}]

 Q: What is Cullum number for James Longstreet?
 SPARQL: select distinct ?answer where { wd:Q311514 wdt:P4026 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Longstreet', 'p': 'Cullum number', 'o': '?x0'}

 Q: What is {follows} and {followed by} {{Communist Party of China} {chairperson} as {Zhao Ziyang}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99829 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Zhao Ziyang'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Zhao Ziyang'}}}]

 Q: What are the music term which start with the letter via
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20202269 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'via')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music term'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'via'}}

 Q: Tell me halide anion whose name has the word ion in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30972056 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ion')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'halide anion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ion'}}

 Q: What is {mains electricity voltage} of {land} of {Valledupar} ?
 SPARQL: SELECT ?answer WHERE { wd:Q376903 wdt:P17 ?X . ?X wdt:P2884 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mains electricity voltage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Valledupar', 'p': 'land', 'o': '$y0'}}

 Q: What is the atomic nucleus with the lowest isospin quantum number whose followed by is triton?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q37147 . ?ent wdt:P1126 ?obj . ?ent wdt:P156 wd:Q488424} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'isospin quantum number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'atomic nucleus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'followed by', 'o': 'triton'}}}

 Q: What is the {G-type main-sequence star} with the {MIN(absolute magnitude)} whose {child astronomical body} is {2012 CP8}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5864 . ?ent wdt:P1457 ?obj . ?ent wdt:P398 wd:Q13400719} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'absolute magnitude', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'G-type main-sequence star', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': '2012 CP8'}}}

 Q: Who is the person that created Twitter?
 SPARQL:  select distinct ?obj where { wd:Q918 wdt:P170 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Twitter', 'p': 'created', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Which is the Cinémathèque québécoise work identifier of Intolerance?
 SPARQL: select distinct ?answer where { wd:Q192206 wdt:P4276 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Intolerance', 'p': 'Cinémathèque québécoise work identifier', 'o': '?x0'}

 Q: Give me {battle} that starts with {'s'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178561 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'battle'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: Which is {diplomatic relation} {state} of {Statue of Zeus at Olympia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46239 wdt:P17 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Statue of Zeus at Olympia', 'p': 'state', 'o': '$y0'}}

 Q: What is <Tierstimmenarchiv ID> of <Bornean orangutan> ?
 SPARQL: select distinct ?answer where { wd:Q599672 wdt:P5397 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bornean orangutan', 'p': 'Tierstimmenarchiv ID', 'o': '?x0'}

 Q: When was Carl Spitteler nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q226525 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Carl Spitteler', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What is <ACM Classification Code (2012)> of <computer crime> ?
 SPARQL: select distinct ?answer where { wd:Q29137 wdt:P2179 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'computer crime', 'p': 'ACM Classification Code (2012)', 'o': '?x0'}

 Q: What is {preceded by} of {set in location} of {The Red and the Black} ?
 SPARQL: SELECT ?answer WHERE { wd:Q192649 wdt:P840 ?X . ?X wdt:P1365 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'preceded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Red and the Black', 'p': 'set in location', 'o': '$y0'}}

 Q: What stout is based on the establishment date of 1800-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q217825 wdt:P144 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1800'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'stout', 'p': 'based on', 'o': '?x0', 't': '1800'}

 Q: What is { award received } from { George Carlin } that is { time point } is { 1993 - 0 - 0 }?
 SPARQL: SELECT ?obj WHERE { wd:Q150651 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'George Carlin', 'p': 'award received', 'o': '?x0', 't': '1993'}

 Q: Tell me a name of a cattle breed that starts with the letter w.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12045585 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cattle breed'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: what is the {point in time} for {Coimbatore} has {population} as {1601438} ?
 SPARQL: SELECT ?value WHERE { wd:Q9885 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1601438')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Coimbatore', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1601438'}, 't': '?x0'}

 Q: what is the {for work} for {Graham Kennedy} has {award received} as {Gold Logie Award for Most Popular Personality on Australian Television} ?
 SPARQL: SELECT ?value WHERE { wd:Q2111930 p:P166 ?s . ?s ps:P166 wd:Q16191288 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Graham Kennedy', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Gold Logie Award for Most Popular Personality on Australian Television'}}}

 Q: Tell me weapon whose name has the word ziyar in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q728 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ziyar')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ziyar'}}

 Q: Does the witch window have an angle from vertical that is equal to 45?
 SPARQL: ASK WHERE { wd:Q8027878 wdt:P4183 ?obj filter(?obj = 45) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'witch window', 'p': 'angle from vertical', 'o': '?x0', '?x0': '45'}

 Q: What is the official language of a member of Iran?
 SPARQL: SELECT ?answer WHERE { wd:Q794 wdt:P463 ?X . ?X wdt:P37 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'official language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iran', 'p': 'member of', 'o': '$y0'}}

 Q: What is  geographical feature continent of Kamenný vrch?
 SPARQL: SELECT ?answer WHERE { wd:Q11734432 wdt:P30 ?X . ?X wdt:P706 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kamenný vrch', 'p': 'continent', 'o': '$y0'}}

 Q: In what country is the Disney Channel Burbank headquarters?
 SPARQL: SELECT ?value WHERE { wd:Q178837 p:P159 ?s . ?s ps:P159 wd:Q39561 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Disney Channel', 'p': 'headquarters', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'headquarters', 'o': 'Burbank'}}}

 Q: What is SilentEra.com film ID for The Gold Rush ?
 SPARQL: select distinct ?answer where { wd:Q214723 wdt:P5338 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Gold Rush', 'p': 'SilentEra.com film ID', 'o': '?x0'}

 Q: What number is "Goodbye Blue Sky" in the tracklist for the album The Wall?
 SPARQL: SELECT ?value WHERE { wd:Q151114 p:P658 ?s . ?s ps:P658 wd:Q2454009 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Wall', 'p': 'tracklist', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'tracklist', 'o': 'Goodbye Blue Sky'}}}

 Q: Who is the {city/town} for {place of birth} of {Vladimir Lenin}
 SPARQL:  select distinct ?obj where { wd:Q1394 wdt:P19 ?obj . ?obj wdt:P31 wd:Q7930989 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Vladimir Lenin', 'p': 'place of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city/town'}}

 Q: What is the NFL ID for George Blanda?
 SPARQL: select distinct ?answer where { wd:Q980691 wdt:P3539 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Blanda', 'p': 'NFL ID', 'o': '?x0'}

 Q: What is the {cause of death} and the {place of birth} of {Barbara_Stanwyck} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q94002 wdt:P509 ?ans_1 . wd:Q94002 wdt:P19 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Barbara Stanwyck', 'p': 'cause of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Barbara Stanwyck', 'p': 'place of birth', 'o': '?x1'}]

 Q: What is the {supergroup} for {member of} of {Johnny Depp}
 SPARQL:  select distinct ?obj where { wd:Q37175 wdt:P463 ?obj . ?obj wdt:P31 wd:Q215048 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Johnny Depp', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'supergroup'}}

 Q: What is Kabul the capital of?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q5838 wdt:P1376 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Kabul', 'p': 'capital of', 'o': '?x0'}

 Q: Which is the explosive material that was discovered by Alfred Nobel and starts with the letter d?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q12870 . ?sbj wdt:P61 wd:Q23810 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'explosive material', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discovered by', 'o': 'Alfred Nobel'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: Which is partially coincident with chocolate milk?
 SPARQL: select distinct ?answer where { ?answer wdt:P1382 wd:Q13253}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partially coincident with', 'o': 'chocolate milk'}

 Q: Who was the last spouse for Samuel Hahnemann in the year 1830?
 SPARQL: SELECT ?obj WHERE { wd:Q157056 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1830')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Samuel Hahnemann', 'p': 'spouse', 'o': '?x0', 't': '1830'}

 Q: What is {biological sex} of {Pandukabhaya of Anuradhapura}, that has {antonym} is {female} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7130763 wdt:P21 ?answer . ?answer wdt:P461 wd:Q6581072}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pandukabhaya of Anuradhapura', 'p': 'biological sex', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'antonym', 'o': 'female'}}

 Q: What is the NALT ID for β-lactose?
 SPARQL: select distinct ?answer where { wd:Q127900 wdt:P2004 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'β-lactose', 'p': 'NALT ID', 'o': '?x0'}

 Q: What is the {painting} with the {MAX(thickness)} whose {material used} is {canvas}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3305213 . ?ent wdt:P2610 ?obj . ?ent wdt:P186 wd:Q4259259 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'thickness', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'material used', 'o': 'canvas'}}}

 Q: What is the number of objects in the museum collection of The Garden of Earthly Delights?
 SPARQL: SELECT ?answer WHERE { wd:Q321303 wdt:P195 ?X . ?X wdt:P1436 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of objects', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Garden of Earthly Delights', 'p': 'collection', 'o': '$y0'}}

 Q: Did {Roanoke_Colony} {country} {United States of America}?
 SPARQL: ASK WHERE { wd:Q59222 wdt:P17 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Roanoke Colony', 'p': 'country', 'o': '?x0', '?x0': 'United States of America'}]

 Q: What is {subcellular localization} of {codes for} of {Cdc42se2} ?
 SPARQL: SELECT ?answer WHERE { wd:Q18265631 wdt:P688 ?X . ?X wdt:P681 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subcellular localization', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cdc42se2', 'p': 'codes for', 'o': '$y0'}}

 Q: Which is the Library of Congress authority ID of George Albert Boulenger?
 SPARQL: select distinct ?answer where { wd:Q435731 wdt:P244 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'George Albert Boulenger', 'p': 'Library of Congress authority ID', 'o': '?x0'}

 Q: What is the {microprocessor} for {manufacturer} of {Intel}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q248 . ?sbj wdt:P31 wd:Q5297 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Intel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'microprocessor'}}

 Q: What is the geographical region of the continent of Espoo?
 SPARQL: SELECT ?answer WHERE { wd:Q47034 wdt:P30 ?X . ?X wdt:P706 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Espoo', 'p': 'continent', 'o': '$y0'}}

 Q: What is {end time} and {start time} of {{Barnaul} has {located in the administrative territorial entity} as {Altai Krai}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q6014 p:P131 ?s . ?s ps:P131 wd:Q5942 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barnaul', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Altai Krai'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barnaul', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Altai Krai'}}}]

 Q: What is {developer of} of {penicillin}, that has {specialism} is {immunology} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12190 wdt:P61 ?answer . ?answer wdt:P101 wd:Q101929}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'penicillin', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'specialism', 'o': 'immunology'}}

 Q: What is the ARICNS for Fomalhaut?
 SPARQL: select distinct ?answer where { wd:Q13169 wdt:P999 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fomalhaut', 'p': 'ARICNS', 'o': '?x0'}

 Q: Which is NLBPA ID for Hank Aaron?
 SPARQL: select distinct ?answer where { wd:Q215777 wdt:P4405 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hank Aaron', 'p': 'NLBPA ID', 'o': '?x0'}

 Q: What is the {fictional human} for {narrator} of {Lolita}
 SPARQL:  select distinct ?obj where { wd:Q127149 wdt:P2438 ?obj . ?obj wdt:P31 wd:Q15632617 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lolita', 'p': 'narrator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional human'}}

 Q: which fax number of Federal Communications Commission ?
 SPARQL: select distinct ?answer where { wd:Q128831 wdt:P2900 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Federal Communications Commission', 'p': 'fax number', 'o': '?x0'}

 Q: what is the {point in time} for {Cornel West} has {award received} as {Lannan Cultural Freedom Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q712469 p:P166 ?s . ?s ps:P166 wd:Q27021071 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Cornel West', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Lannan Cultural Freedom Prize'}, 't': '?x0'}

 Q: What is <Carnegie Hall work ID> of <Hungarian Rhapsody No. 2> ?
 SPARQL: select distinct ?answer where { wd:Q3040118 wdt:P5229 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hungarian Rhapsody No. 2', 'p': 'Carnegie Hall work ID', 'o': '?x0'}

 Q: Tell me the sector of product of Astana-bike.
 SPARQL: SELECT ?answer WHERE { wd:Q29351370 wdt:P176 ?X . ?X wdt:P452 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sector', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Astana-bike', 'p': 'product of', 'o': '$y0'}}

 Q: what is the {end time} for {Mainz} has {country} as {Kingdom of Prussia} ?
 SPARQL: SELECT ?value WHERE { wd:Q1720 p:P17 ?s . ?s ps:P17 wd:Q27306 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mainz', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Kingdom of Prussia'}}}

 Q: Does chicken has a heart rate equal to 275?
 SPARQL: ASK WHERE { wd:Q780 wdt:P3395 ?obj filter(?obj = 275) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'chicken', 'p': 'heart rate', 'o': '?x0', '?x0': '275'}

 Q: what is the {of} for {David Koresh} has {given name} as {David} ?
 SPARQL: SELECT ?value WHERE { wd:Q431015 p:P735 ?s . ?s ps:P735 wd:Q18057751 . ?s pq:P642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'David Koresh', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'David'}}}

 Q: Which is the parliament that applies to the jurisdiction of Weimar Republic?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1001 wd:Q41304 . ?sbj wdt:P31 wd:Q35749 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'jurisdiction', 'o': 'Weimar Republic', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'parliament'}}

 Q: What is {award received} of {Ayaan Hirsi Ali} that is {point in time} is {2008-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q214475 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ayaan Hirsi Ali', 'p': 'award', 'o': '?x0', 't': '2008'}

 Q: What is the {book} for {genre} of {encyclopedia}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P136 wd:Q5292 . ?sbj wdt:P31 wd:Q571 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'encyclopedia', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}}

 Q: How many unit symbols mean liter?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q11582 wdt:P5061 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'l', 'p': 'unit symbol', 'o': '?x0'}

 Q: What is {county seat of} of {Tuxtla Gutiérrez}, that has {has villages} is {Acacoyagua} ?
 SPARQL: SELECT ?answer WHERE { wd:Q207429 wdt:P1376 ?answer . ?answer wdt:P150 wd:Q1267557}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tuxtla Gutiérrez', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has villages', 'o': 'Acacoyagua'}}

 Q: What is the {book} for {language of work or name} of {Hebrew}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q9288 . ?sbj wdt:P31 wd:Q571 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Hebrew', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'book'}}

 Q: What was Leonhard Euler a member of in 1741?
 SPARQL: SELECT ?obj WHERE { wd:Q7604 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1741')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Leonhard Euler', 'p': 'member of', 'o': '?x0', 't': '1741'}

 Q: what is the {start time} for {Galeazzo Ciano} has {position held} as {minister of Foreign Affairs of the Kingdom of Italy} ?
 SPARQL: SELECT ?value WHERE { wd:Q220105 p:P39 ?s . ?s ps:P39 wd:Q26248695 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Galeazzo Ciano', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'minister of Foreign Affairs of the Kingdom of Italy'}}}

 Q: Which is the organization that is member of Auburn University?
 SPARQL:  select distinct ?obj where { wd:Q540672 wdt:P463 ?obj . ?obj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Auburn University', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: What is the {version} with the {MAX(price)} whose {genre} is {zarzuela}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3331189 . ?ent wdt:P2284 ?obj . ?ent wdt:P136 wd:Q148163 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'price', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'zarzuela'}}}

 Q: Which was the student of Cicero?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1541 wdt:P1066 ?ans_1 . wd:Q1541 wdt:P802 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Cicero', 'p': 'student of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Cicero', 'p': 'student', 'o': '?x1'}]

 Q: what is the {point in time} for {René Cassin} has {nominated for} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q232873 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'René Cassin', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: What is <production statistics> of <Ivory Coast> ?
 SPARQL: select distinct ?answer where { wd:Q1008 wdt:P2746 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ivory Coast', 'p': 'production statistics', 'o': '?x0'}

 Q: What is the {Islamic republic} for {public holiday} of {Nowruz}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P832 wd:Q483236 . ?sbj wdt:P31 wd:Q672729 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'public holiday', 'o': 'Nowruz', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Islamic republic'}}

 Q: Give me {temple} that {World Heritage criteria} {(vi)} and which that starts with {'p'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q44539 . ?sbj wdt:P2614 wd:Q23038980 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'temple', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'World Heritage criteria', 'o': '(vi)'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: When did Bob Woodward receive the award Worth Bingham Prize?
 SPARQL: SELECT ?value WHERE { wd:Q312782 p:P166 ?s . ?s ps:P166 wd:Q8037157 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bob Woodward', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Worth Bingham Prize'}, 't': '?x0'}

 Q: what is the {has quality} for {Bahamas} has {language used} as {English} ?
 SPARQL: SELECT ?value WHERE { wd:Q778 p:P2936 ?s . ?s ps:P2936 wd:Q1860 . ?s pq:P1552 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has quality', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bahamas', 'p': 'language used', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language used', 'o': 'English'}}}

 Q: Who are the writers of the Sermon on the Mount, whose personal name is Emmanuel?
 SPARQL: SELECT ?answer WHERE { wd:Q51640 wdt:P50 ?answer . ?answer wdt:P735 wd:Q18001873}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sermon on the Mount', 'p': 'writer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'personal name', 'o': 'Emmanuel'}}

 Q: What is Ricorso author ID for James Joyce ?
 SPARQL: select distinct ?answer where { wd:Q6882 wdt:P4928 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Joyce', 'p': 'Ricorso author ID', 'o': '?x0'}

 Q: What was the area of Stuttgart in 1977?
 SPARQL: SELECT ?obj WHERE { wd:Q1022 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Stuttgart', 'p': 'area', 'o': '?x0', 't': '1977'}

 Q: what is the {point in time} for {Edward O. Wilson} has {award received} as {Kew International Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q211029 p:P166 ?s . ?s ps:P166 wd:Q53619124 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Edward O. Wilson', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Kew International Medal'}, 't': '?x0'}

 Q: What is Malmo's Swedish urban area code?
 SPARQL: select distinct ?answer where { wd:Q2211 wdt:P775 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Malmo', 'p': 'Swedish urban area code', 'o': '?x0'}

 Q: Is the number of blank votes of the Ipatinga municipal election, 2016 for Cauncillor equal to 6248
 SPARQL: ASK WHERE { wd:Q61868532 wdt:P5045 ?obj filter(?obj = 6248) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Ipatinga municipal election, 2016 for Councillor', 'p': 'number of blank votes', 'o': '?x0', '?x0': '6248'}

 Q: What is the {principal organ of the United Nations} for {parent organization} of {UNICEF}
 SPARQL:  select distinct ?obj where { wd:Q740308 wdt:P749 ?obj . ?obj wdt:P31 wd:Q15899789 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'UNICEF', 'p': 'parent organization', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'principal organ of the United Nations'}}

 Q: What award did Werner Herzog recieve in 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q44131 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Werner Herzog', 'p': 'award', 'o': '?x0', 't': '1979'}

 Q: What is {award received} of {Alfred Brendel} that is {point in time} is {1992-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q84148 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alfred Brendel', 'p': 'award', 'o': '?x0', 't': '1992'}

 Q: Which extrasolar planet has the largest M sin i?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q44559 . ?ent wdt:P2051 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'M sin i', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'extrasolar planet'}}

 Q: Who is the leader of the Robert A. Heinlein award?
 SPARQL: SELECT ?answer WHERE { wd:Q123078 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'leader', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert A. Heinlein', 'p': 'award', 'o': '$y0'}}

 Q: What is {headquarters location} of {National Gallery of Art} that is {coordinate location} is {38.89147 -77.02001} ?
 SPARQL: SELECT ?obj WHERE { wd:Q214867 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P625 ?x filter(contains(?x,'38.89147 -77.02001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'National Gallery of Art', 'p': 'headquarters location', 'o': '?x0'}

 Q: What is the position held by Martín Vizcarra who replaces Marisol Espinoza?
 SPARQL: SELECT ?obj WHERE { wd:Q24030720 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q4532785 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martín', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Marisol Espinoza'}}}

 Q: Who are the daughters that were written by The Meaning of Matthew?
 SPARQL: SELECT ?answer WHERE { wd:Q16205446 wdt:P50 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'daughter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Meaning of Matthew', 'p': 'written by', 'o': '$y0'}}

 Q: How many capitals are in Federal Republic of Central America?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q190025 wdt:P36 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Federal Republic of Central America', 'p': 'capital', 'o': '?x0'}

 Q: Which is the Google Play Music artist ID for Tim McGraw?
 SPARQL: select distinct ?answer where { wd:Q356487 wdt:P4198 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tim McGraw', 'p': 'Play Music artist ID', 'o': '?x0'}

 Q: What is {place of marriage} and {end cause} of {{Alexander Hamilton} has {spouse} as {Elizabeth Schuyler Hamilton}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q178903 p:P26 ?s . ?s ps:P26 wd:Q5363475 . ?s pq:P2842 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Hamilton', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Elizabeth Schuyler Hamilton'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alexander Hamilton', 'p': 'married', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married', 'o': 'Elizabeth Schuyler Hamilton'}}}]

 Q: Give me {radio network} that {headquarters location} {10 Universal City Plaza} and which contains the word {nbc} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1061197 . ?sbj wdt:P159 wd:Q3596936 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'nbc')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'radio network', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'headquarters', 'o': '10 Universal City Plaza'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'nbc'}}

 Q: what is the {point in time} for {Arvo Pärt} has {award received} as {Honorary doctor of the University of Liège} ?
 SPARQL: SELECT ?value WHERE { wd:Q189534 p:P166 ?s . ?s ps:P166 wd:Q23700921 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Arvo Pärt', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Honorary doctor of the University of Liège'}, 't': '?x0'}

 Q: What is {IPv4 routing prefix} of {Massachusetts Institute of Technology} that is {has quality} is {legacy IPv4 address block} ?
 SPARQL: SELECT ?obj WHERE { wd:Q49108 p:P3761 ?s . ?s ps:P3761 ?obj . ?s pq:P1552 wd:Q28919811 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'IPv4 routing prefix', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MIT', 'p': 'IPv4 routing prefix', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has quality', 'o': 'legacy IPv4 address block'}}}

 Q: who is the spouse of Pierre-Simon Laplace that was married in Saint-Sulpice?
 SPARQL: SELECT ?obj WHERE { wd:Q44481 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 wd:Q295844 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'spouse', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pierre-Simon Laplace', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married in', 'o': 'Saint-Sulpice'}}}

 Q: Which is the federal state for the participant of World War II?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q362 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant of', 'o': 'World War II', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: What are the art museum which start with the letter wien
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q207694 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wien')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art museum'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wien'}}

 Q: what is the {point in time} for {Do the Right Thing} has {nominated for} as {Golden Globe Award for Best Supporting Actor – Motion Picture} ?
 SPARQL: SELECT ?value WHERE { wd:Q1141252 p:P1411 ?s . ?s ps:P1411 wd:Q723830 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Do the Right Thing', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Golden Globe Award for Best Supporting Actor – Motion Picture'}, 't': '?x0'}

 Q: Which is Artists in Canada record number of Leonard Cohen?
 SPARQL: select distinct ?answer where { wd:Q1276 wdt:P5239 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Leonard Cohen', 'p': 'Artists in Canada record number', 'o': '?x0'}

 Q: What is {educated at} of {John Kenneth Galbraith} and {academic degree}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q186042 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Kenneth Galbraith', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Kenneth Galbraith', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is {has counties} of {Colorado}, that has {human population} is {30257.0} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1261 wdt:P150 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'30257.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Colorado', 'p': 'has counties', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'population', 'o': '30257.0'}}

 Q: Was the net profit of Glencore greater than -6,491,200,000?
 SPARQL: ASK WHERE { wd:Q169339 wdt:P2295 ?obj filter(?obj > -6491200000.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Glencore', 'p': 'net profit', 'o': '?x0', '?x0': '-6491200000.0'}

 Q: Did {John_Lennon} {genre} {garage rock}?
 SPARQL: ASK WHERE { wd:Q1203 wdt:P136 wd:Q211573 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'John Lennon', 'p': 'genre', 'o': '?x0', '?x0': 'garage rock'}]

 Q: What is {sidekick of} of {has kids} of {Talia al Ghul} ?
 SPARQL: SELECT ?answer WHERE { wd:Q281901 wdt:P40 ?X . ?X wdt:P2546 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sidekick of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Talia al Ghul', 'p': 'kid', 'o': '$y0'}}

 Q: What is the {research library} for {archives at} of {James Joyce}
 SPARQL:  select distinct ?obj where { wd:Q6882 wdt:P485 ?obj . ?obj wdt:P31 wd:Q1438040 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Joyce', 'p': 'archives at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research library'}}

 Q: What is the {perception} for {medical condition treated} of {phenol}
 SPARQL:  select distinct ?obj where { wd:Q130336 wdt:P2175 ?obj . ?obj wdt:P31 wd:Q160402 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'phenol', 'p': 'medical condition treated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'perception'}}

 Q: What is {academic degree} of {Donald Trump} and {educated at}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q22686 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P69 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Trump', 'p': 'academic degree', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Trump', 'p': 'academic degree', 'o': '$y0'}}]

 Q: Which  is Oklahoma Sports Hall of Fame ID of T. Boone Pickens ?
 SPARQL: select distinct ?answer where { wd:Q370092 wdt:P4376 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'T. Boone Pickens', 'p': 'Oklahoma Sports Hall of Fame ID', 'o': '?x0'}

 Q: What is the party and ideology of Vladimir Ovsyannikov?
 SPARQL: SELECT ?answer WHERE { wd:Q4330844 wdt:P102 ?X . ?X wdt:P1142 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ideology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Ovsyannikov', 'p': 'party', 'o': '$y0'}}

 Q: What is {county seat of} of {principle office} of {International Council on Monuments and Sites} ?
 SPARQL: SELECT ?answer WHERE { wd:Q273138 wdt:P159 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'International Council on Monuments and Sites', 'p': 'seat', 'o': '$y0'}}

 Q: Which is the HQ location of Alibaba Group with a height of 10.0?
 SPARQL: SELECT ?answer WHERE { wd:Q1359568 wdt:P159 ?answer . ?answer wdt:P2044 ?x FILTER(contains(?x,'10.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alibaba Group', 'p': 'HQ', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'height', 'o': '10.0'}}

 Q: What is {cast member} of {Days of our Lives} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185059 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Days of our Lives', 'p': 'cast member', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'cast member', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Days of our Lives', 'p': 'cast member', 'o': '$y0'}}]

 Q: Which semi-automatic pistol has the highest muzzle velocity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3389302 . ?ent wdt:P4137 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'muzzle velocity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'semi-automatic pistol'}}

 Q: What is the {brick and mortar company} for {founded by} of {Verizon}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P112 wd:Q467752 . ?sbj wdt:P31 wd:Q726870 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Verizon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'brick and mortar'}}

 Q: When was Tom Wolfe awarded with the Dos Passos Prize?
 SPARQL: SELECT ?value WHERE { wd:Q216195 p:P166 ?s . ?s ps:P166 wd:Q2439701 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tom Wolfe', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Dos Passos Prize'}, 't': '?x0'}

 Q: Name the award received by Aleksandr Vasilevsky in 1946.
 SPARQL: SELECT ?obj WHERE { wd:Q150894 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aleksandr Vasilevsky', 'p': 'award received', 'o': '?x0', 't': '1946'}

 Q: what is the {start time} for {Canton of Bern} has {country} as {Old Swiss Confederacy} ?
 SPARQL: SELECT ?value WHERE { wd:Q11911 p:P17 ?s . ?s ps:P17 wd:Q435583 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Canton of Bern', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Old Swiss Confederacy'}}}

 Q: What is {nominated for} of {John Williams} that is {statement is subject of} is {60th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131285 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q257443 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Williams', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '60th Academy Awards'}}}

 Q: What is the {human} for {named after} of {Taj Mahal}
 SPARQL:  select distinct ?obj where { wd:Q9141 wdt:P138 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Taj Mahal', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Name a fictional detective character inspired by The Shadow that contains the word "Batman" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3656924 . ?sbj wdt:P941 wd:Q967116 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'batman')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional detective', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inspired by', 'o': 'The Shadow'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'batman'}}

 Q: what is the {replaced by} for {William Murray, 1st Earl of Mansfield} has {position held} as {Chancellor of the Exchequer} ?
 SPARQL: SELECT ?value WHERE { wd:Q869340 p:P39 ?s . ?s ps:P39 wd:Q531471 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Murray, 1st Earl of Mansfield', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chancellor of the Exchequer'}}}

 Q: What is the {unit of energy} for {measured by} of {energy}
 SPARQL:  select distinct ?obj where { wd:Q11379 wdt:P1880 ?obj . ?obj wdt:P31 wd:Q2916980 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'energy', 'p': 'measured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of energy'}}

 Q: What is the {video game publisher} for {publisher} of {Space Invaders}
 SPARQL:  select distinct ?obj where { wd:Q220665 wdt:P123 ?obj . ?obj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'publisher', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: Which is the Libraries.org ID for Bibliothèque nationale de France?
 SPARQL: select distinct ?answer where { wd:Q193563 wdt:P4848 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Bibliothèque nationale de France', 'p': 'Libraries.org ID', 'o': '?x0'}

 Q: what is the {point in time} for {Charlotte Rampling} has {nominated for} as {César Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q234679 p:P1411 ?s . ?s ps:P1411 wd:Q24241 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Charlotte Rampling', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Actress'}, 't': '?x0'}

 Q: What is {time zone} of {administrative headquarters} of {Taungoo Dynasty} ?
 SPARQL: SELECT ?answer WHERE { wd:Q519718 wdt:P36 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Taungoo Dynasty', 'p': 'administrative headquarters', 'o': '$y0'}}

 Q: Who is {followed by} and {follows} of {{Lysimachus} has {noble title} as {king of Macedon}}?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q32133 p:P97 ?s . ?s ps:P97 wd:Q622602 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lysimachus', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Macedon'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lysimachus', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Macedon'}}}]

 Q: What is {taxon parent} of {Cannabis sativa}, that has {has fruit type} is {nucule} ?
 SPARQL: SELECT ?answer WHERE { wd:Q26726 wdt:P171 ?answer . ?answer wdt:P4000 wd:Q5118786}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cannabis sativa', 'p': 'taxon parent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has fruit type', 'o': 'nucule'}}

 Q: what is the {replaces} for {Vespasian} has {position held} as {Roman emperor} ?
 SPARQL: SELECT ?value WHERE { wd:Q1419 p:P39 ?s . ?s ps:P39 wd:Q842606 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vespasian', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Roman emperor'}}}

 Q: When was Zimbabwe's population at 1.25037e+07?
 SPARQL: SELECT ?value WHERE { wd:Q954 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'1.25037e+07')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Zimbabwe', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '1.25037e+07'}, 't': '?x0'}

 Q: Which city of the United States that located in the administrative territorial entity Cuyahoga County and which that starts with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1093829 . ?sbj wdt:P131 wd:Q251267 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Cuyahoga County'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Name the transliteration used in the facet of the Japanese language?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1269 wd:Q5287 . ?sbj wdt:P31 wd:Q134550 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'Japanese', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'transliteration'}}

 Q: Who is the {enterprise} for {owned by} of {My Little Pony?
 SPARQL:  select distinct ?obj where { wd:Q1071312 wdt:P127 ?obj . ?obj wdt:P31 wd:Q6881511 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'My Little Pony', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enterprise'}}

 Q: Is the JMA Magnitude of the 2018 Osaka earthquake equal to 6.1?
 SPARQL: ASK WHERE { wd:Q55080471 wdt:P5900 ?obj filter(?obj = 6.1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2018 Osaka earthquake', 'p': 'JMA Magnitude', 'o': '?x0', '?x0': '6.1'}

 Q: What is the population of Zaragoza whose determination method is register office?
 SPARQL: SELECT ?obj WHERE { wd:Q10305 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zaragoza', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: Name a retail chain that contain the word " zeeman" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q507619 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeeman')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'retail chain'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeeman'}}

 Q: What is {length} of {Lake Baikal} that is {applies to part} is {maximum} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5513 p:P2043 ?s . ?s ps:P2043 ?obj . ?s pq:P518 wd:Q10578722 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'length', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lake Baikal', 'p': 'length', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'maximum'}}}

 Q: What is the {organization} for {participant of} of {Cold War}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1344 wd:Q8683 . ?sbj wdt:P31 wd:Q43229 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participant of', 'o': 'Cold War', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'organization'}}

 Q: what is the {start time} for {Denmark} has {head of government} as {Peter Georg Bang} ?
 SPARQL: SELECT ?value WHERE { wd:Q35 p:P6 ?s . ?s ps:P6 wd:Q591189 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Denmark', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Peter Georg Bang'}}}

 Q: What magazine has the most readers?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q41298 . ?ent wdt:P4295 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'readership', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine'}}

 Q: What is the {church building} for {manufacturer} of {Dutch East India Company}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P176 wd:Q159766 . ?sbj wdt:P31 wd:Q16970 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manufacturer', 'o': 'Dutch East India Company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'church building'}}

 Q: What are the literary work which start with the letter war
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7725634 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: What is {sons} of {portrait of} of {Antinous-Osiris} ?
 SPARQL: SELECT ?answer WHERE { wd:Q17449805 wdt:P180 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antinous-Osiris', 'p': 'portrait of', 'o': '$y0'}}

 Q: How many {production company} are for {Who Framed Roger Rabbit} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q379873 wdt:P272 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Who Framed Roger Rabbit', 'p': 'production company', 'o': '?x0'}

 Q: what is the {for work} for {Jodie Foster} has {award received} as {Saturn Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q41351 p:P166 ?s . ?s ps:P166 wd:Q1413741 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jodie Foster', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Saturn Award for Best Actress'}}}

 Q: What is <professional or sports partner> of <Giovanni Falcone> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1327 wd:Q207073}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sports partner', 'o': 'Giovanni Falcone'}

 Q: What is {inception} of {Kingdom of Navarre} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q200262 p:P571 ?s . ?s ps:P571 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingdom of Navarre', 'p': 'inception', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What is the {urban municipality of Germany} for {language used} of {Esperanto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2936 wd:Q143 . ?sbj wdt:P31 wd:Q42744322 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Esperanto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'urban municipality of Germany'}}

 Q: Which is the academic major and the academic degree of Frank Gehry who was educated at USC School of Architecture?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q180374 p:P69 ?s . ?s ps:P69 wd:Q7866351 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Gehry', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'USC School of Architecture'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frank Gehry', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'USC School of Architecture'}}}]

 Q: Is the periapsis of 1011 Laodamia equal to 1.5527164?
 SPARQL: ASK WHERE { wd:Q11546 wdt:P2244 ?obj filter(?obj = 1.5527164) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1011 Laodamia', 'p': 'periapsis', 'o': '?x0', '?x0': '1.5527164'}

 Q: Which is the function of the discoverer Leonhard Euler and contains the word function in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11348 . ?sbj wdt:P61 wd:Q7604 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'function')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'function', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discoverer', 'o': 'Leonhard Euler'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'function'}}

 Q: What is the {district of India} for {place of death} of {Mahatma Gandhi}
 SPARQL:  select distinct ?obj where { wd:Q1001 wdt:P20 ?obj . ?obj wdt:P31 wd:Q1149652 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mahatma Gandhi', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'district of India'}}

 Q: What is {child} of {Louis VIII of France} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q165284 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VIII of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis VIII of France', 'p': 'child', 'o': '$y0'}}]

 Q: How many home world does the Earth has?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1165 wd:Q2 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'home world', 'o': 'Earth'}

 Q: Which is produced by petroleum?
 SPARQL: select distinct ?answer where { ?answer wdt:P2849 wd:Q22656}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'produced by', 'o': 'petroleum'}

 Q: When did Metro Manila have a population of 794,839?
 SPARQL: SELECT ?value WHERE { wd:Q13580 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'7.94839e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Metro Manila', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '7.94839e+06'}, 't': '?x0'}

 Q: What contributing factor does toast have?
 SPARQL: select distinct ?answer where { wd:Q6128 wdt:P1479 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'toast', 'p': 'contributing factor', 'o': '?x0'}

 Q: what is the {series ordinal} for {Madonna} has {given name} as {Madonna} ?
 SPARQL: SELECT ?value WHERE { wd:Q1744 p:P735 ?s . ?s ps:P735 wd:Q2655122 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Madonna', 'p': 'name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'name', 'o': 'Madonna'}}}

 Q: Tell me diffusion whose name has the word osmosis in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q163214 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'osmosis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'diffusion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'osmosis'}}

 Q: What is the {historic house museum} for {owned by} of {William IV of the United Kingdom}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P127 wd:Q130822 . ?sbj wdt:P31 wd:Q2087181 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'William IV', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historic house museum'}}

 Q: who medical specialty for health specialty of diabetes mellitus?
 SPARQL:  select distinct ?obj where { wd:Q12206 wdt:P1995 ?obj . ?obj wdt:P31 wd:Q930752 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diabetes mellitus', 'p': 'health specialty', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical specialty'}}

 Q: Who owns The Storm on the Sea of Galilee?
 SPARQL: select distinct ?answer where { ?answer wdt:P1830 wd:Q2246489}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'owns', 'o': 'The Storm on the Sea of Galilee'}

 Q: What is <published in> of <Physical Review> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1433 wd:Q869847}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Physical Review'}

 Q: What is {starring} of {The Ed Sullivan Show}, that has {profession} is {autobiographer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2081494 wdt:P161 ?answer . ?answer wdt:P106 wd:Q18814623}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Ed Sullivan Show', 'p': 'starring', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'autobiographer'}}

 Q: How many {industry} are for {Apple Inc.} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q312 wdt:P452 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Apple Inc.', 'p': 'industry', 'o': '?x0'}

 Q: How many {superhuman feature or ability} are to/by {reincarnation} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2563 wd:Q128593 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'superhuman feature or ability', 'o': 'reincarnation'}

 Q: What movie was Twelfth Night based on?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P144 wd:Q221211 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'based on', 'o': 'Twelfth Night', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie'}}

 Q: What is the {prefecture of Japan} for {located in the administrative territorial entity} of {Kyoto}
 SPARQL:  select distinct ?obj where { wd:Q34600 wdt:P131 ?obj . ?obj wdt:P31 wd:Q50337 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kyoto', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'prefecture of Japan'}}

 Q: Which is the shape of dome?
 SPARQL: select distinct ?answer where { ?answer wdt:P1419 wd:Q12493}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'shape', 'o': 'dome'}

 Q: tell me municipality of Germany that name has  the word winterberg in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q262166 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'winterberg')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Germany'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'winterberg'}}

 Q: what is the {for work} for {Isaac Asimov} has {award received} as {Nebula Award for Best Novel} ?
 SPARQL: SELECT ?value WHERE { wd:Q34981 p:P166 ?s . ?s ps:P166 wd:Q266012 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isaac Asimov', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nebula Award for Best Novel'}}}

 Q: what is the {follows} for {Kristen Stewart} has {award received} as {Golden Raspberry Award for Worst Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q126599 p:P166 ?s . ?s ps:P166 wd:Q602866 . ?s pq:P155 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kristen Stewart', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Golden Raspberry Award for Worst Actress'}}}

 Q: What movement did Karl Friedrich Schinkel become a member of in 1835?
 SPARQL: SELECT ?obj WHERE { wd:Q151759 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1835')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Karl Friedrich Schinkel', 'p': 'member of', 'o': '?x0', 't': '1835'}

 Q: What royal or noble rank does the head of state of the Kingdom of Mercia hold?
 SPARQL:  select distinct ?obj where { wd:Q105092 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q355567 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kingdom of Mercia', 'p': 'head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'noble rank'}}

 Q: Who is the facility operator of Atlas Air?
 SPARQL: SELECT ?answer WHERE { wd:Q757135 wdt:P121 ?X . ?X wdt:P137 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'operator', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Atlas Air', 'p': 'operator of', 'o': '$y0'}}

 Q: Name the developer of Fresnel lens, who graduated from Lycee Malherbe.
 SPARQL: SELECT ?answer WHERE { wd:Q14672 wdt:P61 ?answer . ?answer wdt:P69 wd:Q3268828}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fresnel lens', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'graduated from', 'o': 'Lycee Malherbe'}}

 Q: Phenol is the conjugate base for which polyatomic anion?
 SPARQL:  select distinct ?obj where { wd:Q130336 wdt:P4149 ?obj . ?obj wdt:P31 wd:Q55511438 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phenol', 'p': 'conjugate base', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'polyatomic anion'}}

 Q: DOES THE DECAY WIDTH OF THE HIGGS BOSON EQUALS 13000000
 SPARQL: ASK WHERE { wd:Q402 wdt:P2223 ?obj filter(?obj = 13000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Higgs boson', 'p': 'decay width', 'o': '?x0', '?x0': '13000000'}

 Q: What's the name of a first-order metaclass that starts with "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q24017414 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'first-order metaclass'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: who cation for conjugate acid of water?
 SPARQL:  select distinct ?obj where { wd:Q283 wdt:P4147 ?obj . ?obj wdt:P31 wd:Q326277 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'water', 'p': 'conjugate acid', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cation'}}

 Q: What is {setting location} of {A Tree Grows in Brooklyn}, that has {twin city} is {Oslo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13931921 wdt:P840 ?answer . ?answer wdt:P190 wd:Q585}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'A Tree Grows in Brooklyn', 'p': 'setting location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Oslo'}}

 Q: Which {exchange} is {developed by} {File Allocation Table} ?
 SPARQL: SELECT ?answer WHERE { wd:Q190167 wdt:P178 ?X . ?X wdt:P414 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'exchange', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'File Allocation Table', 'p': 'developed by', 'o': '$y0'}}

 Q: What chemical compound with the maximum acceptable daily intake is in insecticide?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11173 . ?ent wdt:P2542 ?obj . ?ent wdt:P2868 wd:Q181322 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'acceptable daily intake', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'subject has role', 'o': 'insecticide'}}}

 Q: What is {followed by} and {follows} of {{Clovis I} has {noble title} as {king of Franks}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q82339 p:P97 ?s . ?s ps:P97 wd:Q22923081 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Clovis I', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Franks'}}}]

 Q: Is it true that the employment by economic sector of Amsterdam is 12250?
 SPARQL: ASK WHERE { wd:Q9899 wdt:P2297 ?obj filter(?obj = 12250) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Amsterdam', 'p': 'employment by economic sector', 'o': '?x0', '?x0': '12250'}

 Q: Which is the tonality of atonality?
 SPARQL: select distinct ?answer where { ?answer wdt:P826 wd:Q211745}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'tonality', 'o': 'atonality'}

 Q: The developer Satoshi Nakamoto has which free software?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P178 wd:Q13382352 . ?sbj wdt:P31 wd:Q341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'developer', 'o': 'Satoshi Nakamoto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'free software'}}

 Q: How many {drug used for treatment} are to/by {ibuprofen} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2176 wd:Q186969 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'used for treatment', 'o': 'ibuprofen'}

 Q: Tell me me a public university whose name consist of the word "university" and whoselanguage used English
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q875538 . ?sbj wdt:P2936 wd:Q1860 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'university')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public university', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'English'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'university'}}

 Q: Did {Elizabeth_Taylor} {languages spoken, written or signed} {Icelandic}?
 SPARQL: ASK WHERE { wd:Q34851 wdt:P1412 wd:Q294 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Elizabeth Taylor', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Icelandic'}]

 Q: What is {musical artist} of {sequel is} of {Bone Palace Ballet} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3642092 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'singer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bone Palace Ballet', 'p': 'sequel is', 'o': '$y0'}}

 Q: Which is the archaeological site for the official residence of the Parthian Empire?
 SPARQL:  select distinct ?obj where { wd:Q1986139 wdt:P263 ?obj . ?obj wdt:P31 wd:Q839954 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Parthian Empire', 'p': 'official residence', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site'}}

 Q: What TV production company starts with the letter "t"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10689397 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'production company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Of what country is Moon Jae-in the leader?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q21001 . ?sbj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'leader', 'o': 'Moon Jae-in', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is the {federal state} for {diplomatic relation} of {Russian Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q34266 . ?sbj wdt:P31 wd:Q43702 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Russian Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'federal state'}}

 Q: Oslo Opera House has a Kulturminne ID of what?
 SPARQL: select distinct ?answer where { wd:Q43280 wdt:P758 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oslo Opera House', 'p': 'Kulturminne ID', 'o': '?x0'}

 Q: Which musician's sequel is Amos Moses?
 SPARQL: SELECT ?answer WHERE { wd:Q4747920 wdt:P156 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Amos Moses', 'p': 'sequel is', 'o': '$y0'}}

 Q: Which is the LOINC ID of the body mass index?
 SPARQL: select distinct ?answer where { wd:Q131191 wdt:P4338 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'body mass index', 'p': 'LOINC ID', 'o': '?x0'}

 Q: Give me {unit of length} that {measured physical quantity} {length} and which contains the word {yuku} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1978718 . ?sbj wdt:P111 wd:Q36253 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yuku')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of length', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'length'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yuku'}}

 Q: Is Charles Baudelaire a translator?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P655 wd:Q501 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'translator', 'o': 'Charles Baudelaire'}

 Q: What is {working place} of {painters} of {Takaka: night and day} ?
 SPARQL: SELECT ?answer WHERE { wd:Q27883241 wdt:P170 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'working place', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Takaka: night and day', 'p': 'painter', 'o': '$y0'}}

 Q: Give me {space mission} that {start point} {Cape Canaveral Air Force Station Space Launch Complex 41} and which contains the word {voyager} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2133344 . ?sbj wdt:P1427 wd:Q1034348 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'voyager')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'space mission', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'start point', 'o': 'Launch Complex 41'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'voyager'}}

 Q: What is Scandinavian Airlines' CVR number?
 SPARQL: select distinct ?answer where { wd:Q187854 wdt:P1059 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Scandinavian Airlines', 'p': 'CVR number', 'o': '?x0'}

 Q: Did {Warren_G._Harding} {position held} {United States senator} and {Lieutenant Governor of Ohio} ?
 SPARQL: ASK WHERE { wd:Q35286 wdt:P39 wd:Q13217683 . wd:Q35286 wdt:P39 wd:Q1660669 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Warren G. Harding', 'p': 'position held', 'o': '?x0', '?x0': 'United States senator'}, {'h': 'IS', 'v': '?x1', 's': 'Warren G. Harding', 'p': 'position held', 'o': '?x1', '?x1': 'Lieutenant Governor of Ohio'}]

 Q: Which is {afflicts} of {outcome} of {dichlorodifluoromethane} ?
 SPARQL: SELECT ?answer WHERE { wd:Q423021 wdt:P1542 ?X . ?X wdt:P689 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afflicts', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'dichlorodifluoromethane', 'p': 'outcome', 'o': '$y0'}}

 Q: What was the position held by Alec Douglas-Home that replaces  Michael Stewart, Baron Stewart of Fulham?
 SPARQL: SELECT ?obj WHERE { wd:Q128976 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q333773 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alec Douglas-Home', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'Michael Stewart, Baron Stewart of Fulham'}}}

 Q: what is the {place of publication} for {A Clockwork Orange} has {publication date} as {1972-4-1} ?
 SPARQL: SELECT ?value WHERE { wd:Q181086 p:P577 ?s . ?s ps:P577 ?x filter(contains(YEAR(?x),'1972')) . ?s pq:P291 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A Clockwork Orange', 'p': 'published', 'o': '$y0'}}

 Q: Which is the birth year of the discoverer of law of superposition?
 SPARQL: SELECT ?answer WHERE { wd:Q842427 wdt:P61 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birth year', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'law of superposition', 'p': 'discoverer', 'o': '$y0'}}

 Q: What is Victor A. McKusick's Munk's Roll ID?
 SPARQL: select distinct ?answer where { wd:Q926001 wdt:P2941 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Victor A. McKusick', 'p': "Munk's Roll ID", 'o': '?x0'}

 Q: Which is the BTO five-letter code for Little Owl?
 SPARQL: select distinct ?answer where { wd:Q129958 wdt:P4567 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Little Owl', 'p': 'BTO five-letter code', 'o': '?x0'}

 Q: Which is the twinned administrative body for Besançon?
 SPARQL: select distinct ?answer where { wd:Q37776 wdt:P190 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Besançon', 'p': 'twinned administrative body', 'o': '?x0'}

 Q: Is the memory capacity of the Samsung Galaxy S5 equal to 32?
 SPARQL: ASK WHERE { wd:Q15618594 wdt:P2928 ?obj filter(?obj = 32) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Samsung Galaxy S5', 'p': 'memory capacity', 'o': '?x0', '?x0': '32'}

 Q: Who is the creator and voice actor of Mickey Mouse ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q11934 wdt:P725 ?ans_1 . wd:Q11934 wdt:P170 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Mickey Mouse', 'p': 'voice actor', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Mickey Mouse', 'p': 'creator', 'o': '?x1'}]

 Q: Is the number of abstentions of the Altamira minicipal election, 2016 for councillor greater than 19848?
 SPARQL: ASK WHERE { wd:Q61868534 wdt:P5043 ?obj filter(?obj > 19848.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Altamira municipal election, 2016 for Councillor', 'p': 'number of abstentions', 'o': '?x0', '?x0': '19848.0'}

 Q: What is IPv6 routing prefix for University of Tübingen?
 SPARQL: select distinct ?answer where { wd:Q153978 wdt:P3793 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Tübingen', 'p': 'IPv6 routing prefix', 'o': '?x0'}

 Q: Do you know who the father of the most famous human of the 1800's, Pablo Picasso is?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P22 wd:Q5593 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'father', 'o': 'Pablo Picasso', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Which {timeline of topic} is {place of activity} of {Antonio Sánchez Díaz de Rivera} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5699926 wdt:P937 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timeline of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio Sánchez Díaz de Rivera', 'p': 'place of activity', 'o': '$y0'}}

 Q: What is {educated at} of {G. E. Moore} that is {start time} is {1882-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q295386 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1882')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'G. E. Moore', 'p': 'educated at', 'o': '?x0', 't': '1882'}

 Q: In what area was Gothenburg during the end of 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q25287 p:P2046 ?s . ?s ps:P2046 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gothenburg', 'p': 'area', 'o': '?x0', 't': '2010'}

 Q: what is the {valid in period} for {Ivano-Frankivsk Oblast} has {located in time zone} as {UTC+03:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q178269 p:P421 ?s . ?s ps:P421 wd:Q6760 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ivano-Frankivsk Oblast', 'p': 'located in time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in time zone', 'o': 'UTC+3'}}}

 Q: How many {legislative body} are for {France} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q142 wdt:P194 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'France', 'p': 'legislative body', 'o': '?x0'}

 Q: What is {guilty of} of {actress} of {Johnny Comes Flying Home} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3809711 wdt:P161 ?X . ?X wdt:P1399 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'guilty of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johnny Comes Flying Home', 'p': 'actress', 'o': '$y0'}}

 Q: What is {of team} of {screenplay by} of {Senna} ?
 SPARQL: SELECT ?answer WHERE { wd:Q534785 wdt:P58 ?X . ?X wdt:P54 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Senna', 'p': 'screenplay by', 'o': '$y0'}}

 Q: What is  in the territory claimed by of United States of America ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1336 wd:Q30}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'territory claimed by', 'o': 'United States of America'}

 Q: Which   location of discovery of Mesopotamia ?
 SPARQL: select distinct ?answer where { ?answer wdt:P189 wd:Q11767}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location of discovery', 'o': 'Mesopotamia'}

 Q: Tell me international association football clubs cup  anthem UEFA Champions League Anthem whose their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542757 . ?sbj wdt:P85 wd:Q1453101 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'champions')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international association football clubs cup', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'anthem', 'o': 'UEFA Champions League Anthem'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'champions'}}

 Q: What is {location of birth} of {Priyanka Chopra}, that has {telephone code} is {657} ?
 SPARQL: SELECT ?answer WHERE { wd:Q158957 wdt:P19 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'657'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Priyanka Chopra', 'p': 'location of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'telephone code', 'o': '657'}}

 Q: Which is the short-term exposure limit of ammonia?
 SPARQL: select distinct ?answer where { wd:Q4087 wdt:P2407 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ammonia', 'p': 'short-term exposure limit', 'o': '?x0'}

 Q: What are the music term which start with the letter V
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q20202269 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'music term'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: what is the {end time} for {Leone Battista Alberti} has {work location} as {Ferrara} ?
 SPARQL: SELECT ?value WHERE { wd:Q182046 p:P937 ?s . ?s ps:P937 wd:Q13362 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Leone Battista Alberti', 'p': 'work location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work location', 'o': 'Ferrara'}}}

 Q: What is {the CRICOS Provider Code for Australian National University?
 SPARQL: select distinct ?answer where { wd:Q127990 wdt:P2651 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Australian National University', 'p': 'CRICOS Provider Code', 'o': '?x0'}

 Q: What is the {human} for {studies} of {psychology}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q9418 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'psychology', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Define twinning of staurolite.
 SPARQL: select distinct ?answer where { wd:Q413380 wdt:P537 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'staurolite', 'p': 'twinning', 'o': '?x0'}

 Q: What is the {human spaceflight} for {astronaut mission} of {Alan Shepard}
 SPARQL:  select distinct ?obj where { wd:Q174979 wdt:P450 ?obj . ?obj wdt:P31 wd:Q752783 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alan Shepard', 'p': 'astronaut mission', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human spaceflight'}}

 Q: What is the {historical country} for {diplomatic relation} of {Russian Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P530 wd:Q34266 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Russian Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What are the cooking method that contains the word steeping in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1039303 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'steeping')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cooking method'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'steeping'}}

 Q: What is <addressee> of <James Madison> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1817 wd:Q11813}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'addressee', 'o': 'James Madison'}

 Q: What is the forename of John Ames Mitchell that is said to be the same as Jógvan?
 SPARQL: SELECT ?answer WHERE { wd:Q6218902 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1715025}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Ames Mitchell', 'p': 'forename', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'said to be the same as', 'o': 'Jógvan'}}

 Q: Is the nominal GDP of the United States of America equal to 2.32687248e+13?
 SPARQL: ASK WHERE { wd:Q30 wdt:P2131 ?obj filter(?obj = 2.32687248e+13) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'United States of America', 'p': 'nominal GDP', 'o': '?x0', '?x0': '2.32687248e+13'}

 Q: What are the  syllable which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8188 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'syllable'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is the {common name} with the {MAX(bite force quotient)} whose {has quality} is {caress}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q502895 . ?ent wdt:P3485 ?obj . ?ent wdt:P1552 wd:Q14404836 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'bite force quotient', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'common name', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has quality', 'o': 'caress'}}}

 Q: Give me {allotrope of carbon} that {shape} {crystal structure} and which that starts with {'c'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q622460 . ?sbj wdt:P1419 wd:Q895901 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'c')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'allotrope of carbon', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shape', 'o': 'crystal structure'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'c'}}

 Q: What is <located in protected area> of <Grand Teton National Park> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3018 wd:Q222695}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in protected area', 'o': 'Grand Teton National Park'}

 Q: What is the {website} for {employer} of {Glenn Greenwald}
 SPARQL:  select distinct ?obj where { wd:Q5568842 wdt:P108 ?obj . ?obj wdt:P31 wd:Q35127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Glenn Greenwald', 'p': 'employer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'website'}}

 Q: What is {informed by} of {husbands} of {Christie Brinkley} ?
 SPARQL: SELECT ?answer WHERE { wd:Q253476 wdt:P26 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'informed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christie Brinkley', 'p': 'husband', 'o': '$y0'}}

 Q: what is the {female population} for {Liberec Region} has {population} as {440636} ?
 SPARQL: SELECT ?value WHERE { wd:Q193266 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'440636')) . ?s pq:P1539 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'female population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Liberec Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '440636'}}}

 Q: What is the {Irritant} with the {MAX(electrical conductivity)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6073871 . ?ent wdt:P2055 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'electrical conductivity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Irritant'}}

 Q: what is the {for work} for {Barbara Stanwyck} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q94002 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara Stanwyck', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Best Actress'}}}

 Q: What is the diplomatic relation ship of Grenada that has size 3860.0?
 SPARQL: SELECT ?answer WHERE { wd:Q769 wdt:P530 ?answer . ?answer wdt:P2043 ?x FILTER(contains(?x,'3860.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Grenada', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'size', 'o': '3860.0'}}

 Q: Which is the Latvian Olympic Committee athlete ID for Māris Štrombergs?
 SPARQL: select distinct ?answer where { wd:Q441870 wdt:P2593 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Māris Štrombergs', 'p': 'Latvian Olympic Committee athlete ID', 'o': '?x0'}

 Q: What is the {tied-arch bridge} for {designed by} of {Isambard Kingdom Brunel}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P287 wd:Q207380 . ?sbj wdt:P31 wd:Q818882 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tied-arch bridge'}}

 Q: What aircraft type had the minimum total produced?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11436 . ?ent wdt:P1092 ?obj . ?ent wdt:P31 wd:Q11436} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'total produced', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft'}}

 Q: Was the award received by Tran Anh Hung in thea year 1995-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q557546 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1995')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tran Anh Hung', 'p': 'award received', 'o': '?x0', 't': '1995'}

 Q: What is in the  Art UK venue ID of University of York ?
 SPARQL: select distinct ?answer where { wd:Q967165 wdt:P1602 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of York', 'p': 'Art UK venue ID', 'o': '?x0'}

 Q: Is the takeoff roll of G.91Y equal to 1100?
 SPARQL: ASK WHERE { wd:Q3605978 wdt:P2430 ?obj filter(?obj = 1100) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'G.91Y', 'p': 'takeoff roll', 'o': '?x0', '?x0': '1100'}

 Q: What is {educated at} of {Dorothy Hodgkin} that is {EThOS thesis ID} is {uk.bl.ethos.727110} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7487 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P4536 ?x filter(contains(?x,'uk.bl.ethos.727110')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dorothy Hodgkin', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'EThOS thesis ID', 'o': 'uk.bl.ethos.727110'}}}

 Q: What are the gambling which start with the letter Z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11416 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gambling'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What are the names of Courtney Love's husband and child?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q222071 wdt:P40 ?ans_1 . wd:Q222071 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Courtney Love', 'p': 'child', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Courtney Love', 'p': 'husband', 'o': '?x1'}]

 Q: Where is the archdiocese and diocese of Lyon located?
 SPARQL:  select distinct ?obj where { wd:Q456 wdt:P708 ?obj . ?obj wdt:P31 wd:Q2072238 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lyon', 'p': 'diocese', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archdiocese'}}

 Q: What is the official language of Solomon Islands, which has been distinguished from Spanglish?
 SPARQL: SELECT ?answer WHERE { wd:Q685 wdt:P37 ?answer . ?answer wdt:P1889 wd:Q56418}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Solomon Islands', 'p': 'official language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'distinguished from', 'o': 'Spanglish'}}

 Q: What is the governing text of obstruction of justice that belongs to jurisdiction of Germany?
 SPARQL: SELECT ?answer WHERE { wd:Q525302 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'obstruction of justice', 'p': 'governing text', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'belongs to jurisdiction', 'o': 'Germany'}}

 Q: Is the daily patronage of the Takaku Station equal to 36
 SPARQL: ASK WHERE { wd:Q872928 wdt:P1373 ?obj filter(?obj = 36) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Takaku Station', 'p': 'daily patronage', 'o': '?x0', '?x0': '36'}

 Q: What is the avionics of a B-2 Spirit?
 SPARQL: select distinct ?answer where { wd:Q180285 wdt:P878 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'B-2 Spirit', 'p': 'avionics', 'o': '?x0'}

 Q: Which public company has the most debt?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q891723 . ?ent wdt:P2133 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'debt', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public company'}}

 Q: What is {occupation} of {Jayne Mansfield} that is {follows} is {Bettie Page} ?
 SPARQL: SELECT ?obj WHERE { wd:Q229507 p:P106 ?s . ?s ps:P106 ?obj . ?s pq:P155 wd:Q61898 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'occupation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jayne Mansfield', 'p': 'occupation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'Bettie Page'}}}

 Q: what is the {start time} for {António Guterres} has {position held} as {General Secretary of the Socialist Party (Portugal)} ?
 SPARQL: SELECT ?value WHERE { wd:Q311440 p:P39 ?s . ?s ps:P39 wd:Q27134289 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio Guterres', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'General Secretary of the Socialist Party (Portugal)'}}}

 Q: Which is the end time and the start time of Anna Wintour as a wife of David Shaffer?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q230744 p:P26 ?s . ?s ps:P26 wd:Q2195431 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Wintour', 'p': 'wife', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'wife', 'o': 'David Shaffer'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anna Wintour', 'p': 'wife', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'wife', 'o': 'David Shaffer'}}}]

 Q: What is {king} of {basin countries} of {Khanka Lake} ?
 SPARQL: SELECT ?answer WHERE { wd:Q201843 wdt:P205 ?X . ?X wdt:P35 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'king', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Khanka Lake', 'p': 'basin countries', 'o': '$y0'}}

 Q: Is Morgan Freeman's family name Freeman?
 SPARQL: ASK WHERE { wd:Q48337 wdt:P734 wd:Q9014839 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Morgan Freeman', 'p': 'family name', 'o': '?x0', '?x0': 'Freeman'}]

 Q: Who is {musician} of {predecessor} {In My Quiet Room} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6010192 wdt:P155 ?X . ?X wdt:P175 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'musician', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In My Quiet Room', 'p': 'predecessor', 'o': '$y0'}}

 Q: What is {date of death} of {Diocletian} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q43107 p:P570 ?s . ?s ps:P570 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Diocletian', 'p': 'date of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What is {reads file format} of {environment} of {Grand Theft Auto III} ?
 SPARQL: SELECT ?answer WHERE { wd:Q149106 wdt:P400 ?X . ?X wdt:P1072 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'reads file format', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grand Theft Auto III', 'p': 'environment', 'o': '$y0'}}

 Q: Which is the UMLS CUI for standard genetic code?
 SPARQL: select distinct ?answer where { wd:Q180618 wdt:P2892 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'standard genetic code', 'p': 'UMLS CUI', 'o': '?x0'}

 Q: What is {followed by} and {follows} of {{In the Mood for Love} has {series} as {Love trilogy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q1056853 p:P179 ?s . ?s ps:P179 wd:Q18124780 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In the Mood for Love', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Love trilogy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In the Mood for Love', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Love trilogy'}}}]

 Q: What is the {medication} for {encodes} of {INS}
 SPARQL:  select distinct ?obj where { wd:Q21163221 wdt:P688 ?obj . ?obj wdt:P31 wd:Q12140 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'INS', 'p': 'encodes', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medication'}}

 Q: What edition's translation of Vulgate?
 SPARQL: SELECT ?answer WHERE { wd:Q131175 wdt:P629 ?X . ?X wdt:P747 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'edition', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vulgate', 'p': 'translation of', 'o': '$y0'}}

 Q: What is the child body of the parent body of the Miranda Rights?
 SPARQL: SELECT ?answer WHERE { wd:Q3352 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Miranda', 'p': 'parent body', 'o': '$y0'}}

 Q: Which is {source of inspiration} of {characters} of {The Legend of the 7 Golden Vampires} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131842 wdt:P674 ?X . ?X wdt:P941 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'source of inspiration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Legend of the 7 Golden Vampires', 'p': 'characters', 'o': '$y0'}}

 Q: When did Ken Takakura receive the Person of Cultural Merit award?
 SPARQL: SELECT ?value WHERE { wd:Q741184 p:P166 ?s . ?s ps:P166 wd:Q2545449 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ken Takakura', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Person of Cultural Merit'}, 't': '?x0'}

 Q: What is the lighthouse range of the Heidenstam lighthouse?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q10519294 . ?ent wdt:P2929 ?obj . ?ent wdt:P31 wd:Q39715 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'lighthouse range', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Heidenstam lighthouse', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'lighthouse'}}}

 Q: Did {Moscow} {contains administrative territorial entity} {Sokolniki District} and {Eastern Administrative Okrug} ?
 SPARQL: ASK WHERE { wd:Q649 wdt:P150 wd:Q1935566 . wd:Q649 wdt:P150 wd:Q307234 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Moscow', 'p': 'contains administrative territorial entity', 'o': '?x0', '?x0': 'Sokolniki District'}, {'h': 'IS', 'v': '?x1', 's': 'Moscow', 'p': 'contains administrative territorial entity', 'o': '?x1', '?x1': 'Eastern Administrative Okrug'}]

 Q: Is the price of the Macanese pataca equal to 0.105079?
 SPARQL: ASK WHERE { wd:Q241214 wdt:P2284 ?obj filter(?obj = 0.105079) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Macanese pataca', 'p': 'price', 'o': '?x0', '?x0': '0.105079'}

 Q: How many {has contributing factor} are for {wall} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q42948 wdt:P1479 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'wall', 'p': 'has contributing factor', 'o': '?x0'}

 Q: What is {spouse} of {Ashton Kutcher} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q164782 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ashton Kutcher', 'p': 'marry', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'marry', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ashton Kutcher', 'p': 'marry', 'o': '$y0'}}]

 Q: Which military aircraft engine has the highest maximum thrust?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q42028992 . ?ent wdt:P2228 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximum thrust', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'military aircraft engine'}}

 Q: What are the halide anion which start with the letter i
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30972056 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'halide anion'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: Tell me a {type of medical test} which includes the word {urinalysis} in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q55215251 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'urinalysis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of medical test'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'urinalysis'}}

 Q: Which is the God in the series of Balabhadra and starts with the letter r?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190 . ?sbj wdt:P179 wd:Q26701417 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'God', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'series', 'o': 'Balabhadra'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What is the {democratic republic} for {country of origin} of {American English}
 SPARQL:  select distinct ?obj where { wd:Q7976 wdt:P495 ?obj . ?obj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'American English', 'p': 'country of origin', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: What is the {department of Uruguay} for {capital of} of {Montevideo}
 SPARQL:  select distinct ?obj where { wd:Q1335 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q56059 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Montevideo', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'department of Uruguay'}}

 Q: What is the Human Development Index for Papua New Guinea?
 SPARQL: select distinct ?answer where { wd:Q691 wdt:P1081 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Papua New Guinea', 'p': 'Human Development Index', 'o': '?x0'}

 Q: what is the {replaces} for {Edward IV of England} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q160341 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward IV', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: What is {member of} of {diplomatic relation} of {Serbia} ?
 SPARQL: SELECT ?answer WHERE { wd:Q403 wdt:P530 ?X . ?X wdt:P463 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Serbia', 'p': 'diplomatic relation', 'o': '$y0'}}

 Q: what are the boy band which starts with w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q216337 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'boy band'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: Which is the song that is the theme music of The Lion King?
 SPARQL:  select distinct ?obj where { wd:Q36479 wdt:P942 ?obj . ?obj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Lion King', 'p': 'theme music', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: Give me the name of the steel bridge with the highest fee whose instance is also a toll bridge?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12042110 . ?ent wdt:P2555 ?obj . ?ent wdt:P31 wd:Q7814330 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'fee', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'steel bridge', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'toll bridge'}}}

 Q: What is {resident in} of {Werner Herzog}, that has {next to} is {West Carson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44131 wdt:P551 ?answer . ?answer wdt:P47 wd:Q655926}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Werner Herzog', 'p': 'lives in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'next to', 'o': 'West Carson'}}

 Q: what is the {start time} for {Juventus F.C.} has {chairperson} as {Attilio Ubertalli} ?
 SPARQL: SELECT ?value WHERE { wd:Q1422 p:P488 ?s . ?s ps:P488 wd:Q2870115 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Juventus F.C.', 'p': 'chair', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chair', 'o': 'Attilio Ubertalli'}}}

 Q: What is the role of Darth Vader who is performed by James Earl Jones ?
 SPARQL: SELECT ?value WHERE { wd:Q12206942 p:P175 ?s . ?s ps:P175 wd:Q203960 . ?s pq:P642 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Darth Vader', 'p': 'performed by', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'performed by', 'o': 'James Earl Jones'}}}

 Q: What is the proportion of Korean Air in its subsidiary České aerolinie?
 SPARQL: SELECT ?value WHERE { wd:Q213147 p:P355 ?s . ?s ps:P355 wd:Q192653 . ?s pq:P1107 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'proportion', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Korean Air', 'p': 'subsidiary', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'subsidiary', 'o': 'České aerolinie'}}}

 Q: What is {residence} of {Ivan Turgenev} and {together with}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q42831 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P1706 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ivan Turgenev', 'p': 'residence', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'residence', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ivan Turgenev', 'p': 'residence', 'o': '$y0'}}]

 Q: What is {has towns} of {continent} of {Gamburtsev Mountain Range} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1422867 wdt:P30 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has towns', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gamburtsev Mountain Range', 'p': 'continent', 'o': '$y0'}}

 Q: What is {follows} and {followed by} of {{Charles the Fat} has {noble title} as {king of Germany}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q150712 p:P97 ?s . ?s ps:P97 wd:Q24004130 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Germany'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charles the Fat', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'king of Germany'}}}]

 Q: Which school of Renaissance architecture has a start date of 1300-0-0?
 SPARQL: SELECT ?answer WHERE { wd:Q236122 wdt:P135 ?answer . ?answer wdt:P580 ?x FILTER(contains(YEAR(?x),'1300'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Renaissance architecture', 'p': 'school', 'o': '?x0', 't': '1300'}

 Q: What is {position held} of {Atal Bihari Vajpayee} that is {replaces} is {P. V. Narasimha Rao in  Telugu} ?
 SPARQL: SELECT ?obj WHERE { wd:Q233289 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q275146 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Atal Bihari Vajpayee', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'P. V. Narasimha Rao'}}}

 Q: How many {worshipped by} are for {Yahweh} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q766677 wdt:P1049 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Yahweh', 'p': 'worshipped by', 'o': '?x0'}

 Q: How many {minor planet group} are to/by {Jupiter trojan} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P196 wd:Q8101032 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'minor planet group', 'o': 'Jupiter trojan'}

 Q: What are the type of sport which start with the letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q31629 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of sport'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {date of birth} and {mother} of {{Charlemagne} has {child} as {Rotrude}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q269691 . ?s pq:P569 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Rotrude'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child of', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Rotrude'}}}]

 Q: Does the ionization energy of the iodine equal 9.31?
 SPARQL: ASK WHERE { wd:Q1103 wdt:P2260 ?obj filter(?obj = 9.31) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'iodine', 'p': 'ionization energy', 'o': '?x0', '?x0': '9.31'}

 Q: Who is nominated by the United Nations Secretary-General?
 SPARQL: select distinct ?answer where { wd:Q81066 wdt:P4353 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'United Nations Secretary-General', 'p': 'nominated by', 'o': '?x0'}

 Q: What is <The Paris Review interviewee ID> of <Octavio Paz> ?
 SPARQL: select distinct ?answer where { wd:Q46739 wdt:P5414 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Octavio Paz', 'p': 'The Paris Review interviewee ID', 'o': '?x0'}

 Q: Name the shipwreck with highest beam?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q852190 . ?ent wdt:P2261 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'beam', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'shipwreck'}}

 Q: What is {position held} of {John Stuart Mill} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q50020 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Stuart Mill', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Stuart Mill', 'p': 'position held', 'o': '$y0'}}]

 Q: What is the {song} for {tracklist} of {The Wall}
 SPARQL:  select distinct ?obj where { wd:Q151114 wdt:P658 ?obj . ?obj wdt:P31 wd:Q7366 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Wall', 'p': 'tracklist', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}}

 Q: What is {named for} of {utopia}, that has {illustrated by} is {Ambrosius Holbein} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131156 wdt:P138 ?answer . ?answer wdt:P110 wd:Q123732}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'utopia', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'illustrated by', 'o': 'Ambrosius Holbein'}}

 Q: Tell me about member of of George Lincoln Rockwell and military rank?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q440145 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P410 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'military rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Lincoln Rockwell', 'p': 'member of', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Lincoln Rockwell', 'p': 'member of', 'o': '$y0'}}]

 Q: Who is the county seat for Kendel Herrarte's birthplace?
 SPARQL: SELECT ?answer WHERE { wd:Q20676955 wdt:P19 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kendel Herrarte', 'p': 'birthplace', 'o': '$y0'}}

 Q: Which is typology  language native of Søren Kierkegaard ?
 SPARQL: SELECT ?answer WHERE { wd:Q6512 wdt:P103 ?X . ?X wdt:P4132 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'typology', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Søren Kierkegaard', 'p': 'language native', 'o': '$y0'}}

 Q: What is {participant of} of {Grant Hackett} that is {award received} is {Olympic silver medal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q318982 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P166 wd:Q15889641 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grant Hackett', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'win', 'o': 'silver medal'}}}

 Q: What is the DBS ID of the Technical University of Munich?
 SPARQL: select distinct ?answer where { wd:Q157808 wdt:P4007 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Technical University of Munich', 'p': 'DBS ID', 'o': '?x0'}

 Q: What other entities are owned by Alphabet Inc?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q20800404 wdt:P127 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Alphabet', 'p': 'owned by', 'o': '?x0'}

 Q: What is <elFilm person ID> of <Linus Torvalds> ?
 SPARQL: select distinct ?answer where { wd:Q34253 wdt:P3144 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linus Torvalds', 'p': 'elFilm person ID', 'o': '?x0'}

 Q: "Which is {developer} of {elliptic function}, whose {location of birth} is {Finnøy} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q938102 wdt:P61 ?answer . ?answer wdt:P19 wd:Q23042350}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'elliptic function', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'location of birth', 'o': 'Finnøy'}}

 Q: What is the {historical Chinese state} for {capital of} of {Nanjing}
 SPARQL:  select distinct ?obj where { wd:Q16666 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q50068795 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nanjing', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical Chinese state'}}

 Q: Which is Stereo Ve Mono artist ID for Shoshana Damari?
 SPARQL: select distinct ?answer where { wd:Q2360762 wdt:P3952 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shoshana Damari', 'p': 'Stereo Ve Mono artist ID', 'o': '?x0'}

 Q: What is <age of consent> of <South Korea> ?
 SPARQL: select distinct ?answer where { wd:Q884 wdt:P2999 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Korea', 'p': 'age of consent', 'o': '?x0'}

 Q: How many manufacturers are for Concorde?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q6505 wdt:P176 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Concorde', 'p': 'manufacturer', 'o': '?x0'}

 Q: What is specific gravity of reactant for lentil soup ?
 SPARQL: SELECT ?answer WHERE { wd:Q1827035 wdt:P186 ?X . ?X wdt:P2054 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'specific gravity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lentil soup', 'p': 'reactant', 'o': '$y0'}}

 Q: Give me {recurring sporting event} that {organizer} {Tennis Australia} and which that starts with {'a'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18608583 . ?sbj wdt:P664 wd:Q3494880 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'recurring sporting event', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'organizer', 'o': 'Tennis Australia'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: What is {top dog} of {honors} of {Dick Van Dyke} ?
 SPARQL: SELECT ?answer WHERE { wd:Q310295 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'top dog', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dick Van Dyke', 'p': 'honors', 'o': '$y0'}}

 Q: What is the {gene} for {genetic association} of {colorectal cancer}
 SPARQL:  select distinct ?obj where { wd:Q188874 wdt:P2293 ?obj . ?obj wdt:P31 wd:Q7187 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'colorectal cancer', 'p': 'genetic association', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gene'}}

 Q: What is {type locality (geology)} of {anorthite}, that has {eruption monitored by} is {Vesuvius Observatory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q244994 wdt:P2695 ?answer . ?answer wdt:P3815 wd:Q967776}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'anorthite', 'p': 'type locality (geology)', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'eruption monitored by', 'o': 'Vesuvius Observatory'}}

 Q: When did private not-for-profit educational institution for affiliation of University of Chicago?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1416 wd:Q131252 . ?sbj wdt:P31 wd:Q23002054 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'affiliation', 'o': 'University of Chicago', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'private not-for-profit educational institution'}}

 Q: What is {higher taxon} of {Australopithecus anamensis}, that has {vernacular name} is {오스트랄로피테쿠스속} ?
 SPARQL: SELECT ?answer WHERE { wd:Q310520 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'오스트랄로피테쿠스속'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Australopithecus anamensis', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': '오스트랄로피테쿠스속'}}

 Q: what is the {point in time} for {René Clair} has {award received} as {Louis Delluc Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q55388 p:P166 ?s . ?s ps:P166 wd:Q734335 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'René Clair', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Louis Delluc Prize'}, 't': '?x0'}

 Q: What is {has moon} of {star} of {Omega Nebula} ?
 SPARQL: SELECT ?answer WHERE { wd:Q11357 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has moon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Omega Nebula', 'p': 'star', 'o': '$y0'}}

 Q: Does the TY scale go over 1080?
 SPARQL: ASK WHERE { wd:Q1306202 wdt:P1752 ?obj filter(?obj > 1080.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'TY scale', 'p': 'scale', 'o': '?x0', '?x0': '1080.0'}

 Q: Does the luminosity of the sun equal 3.0624e+17
 SPARQL: ASK WHERE { wd:Q525 wdt:P2060 ?obj filter(?obj = 3.0624e+17) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sun', 'p': 'luminosity', 'o': '?x0', '?x0': '3.0624e+17'}

 Q: Does the wavelength of the Caltech Submillimeter Observatory equal to 350?
 SPARQL: ASK WHERE { wd:Q1027482 wdt:P2808 ?obj filter(?obj = 350) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Caltech Submillimeter Observatory', 'p': 'wavelength', 'o': '?x0', '?x0': '350'}

 Q: What economic branch produces motor vehicles and starts with the letter "a"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q268592 . ?sbj wdt:P1056 wd:Q752870 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'a')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'produces', 'o': 'motor vehicle'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'a'}}

 Q: Which is the statue that depicts Isaac Newton?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P180 wd:Q935 . ?sbj wdt:P31 wd:Q179700 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'depicts', 'o': 'Isaac Newton', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'statue'}}

 Q: What is <use> of <capital punishment> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P366 wd:Q8454}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'use', 'o': 'capital punishment'}

 Q: What is the {business} for {parent organization} of {Advanced Micro Devices}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q128896 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Advanced Micro Devices', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Who is the person in the field of work of communication?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P101 wd:Q11024 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'field of work', 'o': 'communication', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is {religious affiliation} of {record producer} of {Titanic} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44578 wdt:P162 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'religious affiliation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Titanic', 'p': 'producer', 'o': '$y0'}}

 Q: What is {interment} of {Philip II, Metropolitan of Moscow}, that has {co-ordinate location} is {37.6169} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2263654 wdt:P119 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'37.6169'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Philip II, Metropolitan of Moscow', 'p': 'interment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'co-ordinate location', 'o': '37.6169'}}

 Q: How many Berber ethnic groups are there?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P172 wd:Q45315 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'ethnic group', 'o': 'Berber'}

 Q: How many excavation directors are in the Pompeii} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q43332 wdt:P4345 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Pompeii', 'p': 'excavation director', 'o': '?x0'}

 Q: Which is the ancient civilization culture of Rome?
 SPARQL:  select distinct ?obj where { wd:Q220 wdt:P2596 ?obj . ?obj wdt:P31 wd:Q28171280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rome', 'p': 'culture', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient civilization'}}

 Q: what is the {point in time} for {Adrien Brody} has {nominated for} as {European Film Award – Jameson People's Choice Award – Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q104514 p:P1411 ?s . ?s ps:P1411 wd:Q5412592 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Adrien Brody', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': "European Film Award – Jameson People's Choice Award – Best Actor"}, 't': '?x0'}

 Q: Is the bore of Maybach MD 871 less than 148?
 SPARQL: ASK WHERE { wd:Q1914397 wdt:P2556 ?obj filter(?obj < 148.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Maybach MD 871', 'p': 'bore', 'o': '?x0', '?x0': '148.0'}

 Q: What is the set in location of Anabasis whose diplomatic relation is Portugal?
 SPARQL: SELECT ?answer WHERE { wd:Q73112 wdt:P840 ?answer . ?answer wdt:P530 wd:Q45}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Anabasis', 'p': 'set in location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Portugal'}}

 Q: What is {chronology of topic} of {birth city} of {Chew Gek Khim} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42904149 wdt:P19 ?X . ?X wdt:P2184 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chronology of topic', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chew Gek Khim', 'p': 'birth city', 'o': '$y0'}}

 Q: What is LaTeX string for inverse of flat ?
 SPARQL: SELECT ?answer WHERE { wd:Q7001368 wdt:P461 ?X . ?X wdt:P1993 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'TeX string', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'flat', 'p': 'inverse', 'o': '$y0'}}

 Q: What is the prevalence of tuberculosis?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q12204 wdt:P1193 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'tuberculosis', 'p': 'prevalence', 'o': '?x0'}

 Q: What is the {charitable organization} for {operator} of {Wikipedia}
 SPARQL:  select distinct ?obj where { wd:Q52 wdt:P137 ?obj . ?obj wdt:P31 wd:Q708676 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Wikipedia', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'charitable organization'}}

 Q: What is {place of death} of {Boris Pasternak} that is {country} is {Soviet Union} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41223 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q15180 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Boris Pasternak', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Soviet Union'}}}

 Q: What is {position held} of {William Cavendish-Bentinck, 3rd Duke of Portland} that is {start time} is {1807-3-31} ?
 SPARQL: SELECT ?obj WHERE { wd:Q157208 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1807')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'William Cavendish-Bentinck, 3rd Duke of Portland', 'p': 'position held', 'o': '?x0', 't': '1807'}

 Q: What is {date of incorporation} of {nominee for} of {Joan Rivers} ?
 SPARQL: SELECT ?answer WHERE { wd:Q240933 wdt:P1411 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of incorporation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joan Rivers', 'p': 'nominated for', 'o': '$y0'}}

 Q: What is {is child of} of {starring} of {Nico Icon} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3339863 wdt:P161 ?X . ?X wdt:P25 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'is child of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nico Icon', 'p': 'starring', 'o': '$y0'}}

 Q: Which is the OpenDomesday settlement ID of Brighton?
 SPARQL: select distinct ?answer where { wd:Q131491 wdt:P3118 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Brighton', 'p': 'OpenDomesday settlement ID', 'o': '?x0'}

 Q: What is Redump.org ID for Space Invaders ?
 SPARQL: select distinct ?answer where { wd:Q220665 wdt:P5290 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'Redump.org ID', 'o': '?x0'}

 Q: What is the name of the star that has a Lassell ring and has the Nereid's child body?
 SPARQL: SELECT ?answer WHERE { wd:Q16076 wdt:P397 ?answer . ?answer wdt:P398 wd:Q3218345}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nereid', 'p': 'star', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'child body', 'o': 'Lassell ring'}}

 Q: What is {permanent duplicated item} of {made from} of {blackberry} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19842373 wdt:P1582 ?X . ?X wdt:P2959 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'permanent duplicated item', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'blackberry', 'p': 'made from', 'o': '$y0'}}

 Q: What is {spouse} of {Andriyan Nikolayev} that is {end time} is {1982-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q312474 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andriyan Nikolayev', 'p': 'spouse', 'o': '?x0', 't': '1982'}

 Q: What is the {set of numbers} with the {MAX(upper limit)} whose {has parts of the class} is {negative integer}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q3054943 . ?ent wdt:P5448 ?obj . ?ent wdt:P2670 wd:Q47371077 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'upper limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'set of numbers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has parts of the class', 'o': 'negative integer'}}}

 Q: Who is Lil Wayne's partner and what is his spouse's name?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q15615 wdt:P451 ?ans_1 . wd:Q15615 wdt:P26 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Lil Wayne', 'p': 'partner', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Lil Wayne', 'p': 'spouse', 'o': '?x1'}]

 Q: For what electorate position did General Santos receive on 4-20-2007?
 SPARQL: SELECT ?obj WHERE { wd:Q594275 p:P1831 ?s . ?s ps:P1831 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2007')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'General Santos', 'p': 'electorate', 'o': '?x0', 't': '2007'}

 Q: what is the {start time} for {Dhaka Division} has {located in the administrative territorial entity} as {Dominion of Pakistan} ?
 SPARQL: SELECT ?value WHERE { wd:Q330158 p:P131 ?s . ?s ps:P131 wd:Q2006542 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dhaka Division', 'p': 'located in the administrative territorial entity', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located in the administrative territorial entity', 'o': 'Dominion of Pakistan'}}}

 Q: tell me jurisdiction that name has the word viguerie in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q471855 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'viguerie')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'jurisdiction'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'viguerie'}}

 Q: What is Nelson-Atkins Museum of Art person ID for William Johnson?
 SPARQL: select distinct ?answer where { wd:Q1883000 wdt:P5273 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'William Johnson', 'p': 'Nelson-Atkins Museum of Art person ID', 'o': '?x0'}

 Q: What is the {office building} for {occupant} of {Social Democratic Party of Germany}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P466 wd:Q49768 . ?sbj wdt:P31 wd:Q1021645 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'occupant', 'o': 'Social Democratic Party of Germany', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'office building'}}

 Q: What is <possessed by spirit> of <Harry Potter> ?
 SPARQL: select distinct ?answer where { wd:Q3244512 wdt:P4292 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Harry Potter', 'p': 'possessed by spirit', 'o': '?x0'}

 Q: What is {has children} of {writers} of {A monograph of the British Palæozoic Phyllopoda (Phyllocarida, Packard).} ?
 SPARQL: SELECT ?answer WHERE { wd:Q51407220 wdt:P50 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'A monograph of the British Palæozoic Phyllopoda (Phyllocarida, Packard).', 'p': 'writer', 'o': '$y0'}}

 Q: What is the {office building} for {architect} of {Frank Gehry}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q180374 . ?sbj wdt:P31 wd:Q1021645 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Frank Gehry', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'office building'}}

 Q: What team did Mágico González play for in 1976?
 SPARQL: SELECT ?obj WHERE { wd:Q762497 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mágico González', 'p': 'team', 'o': '?x0', 't': '1976'}

 Q: Tell me statistical inference whose name has the word bayesian in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q938438 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'bayesian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'statistical inference'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'bayesian'}}

 Q: Which is the KEGG ID of nitric acid?
 SPARQL: select distinct ?answer where { wd:Q83320 wdt:P665 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'nitric acid', 'p': 'KEGG ID', 'o': '?x0'}

 Q: What is the {state} with the {MAX(PPP GDP per capita)} whose {member of} is {Multilateral Investment Guarantee Agency}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7275 . ?ent wdt:P2299 ?obj . ?ent wdt:P463 wd:Q1043527 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'PPP GDP per capita', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Multilateral Investment Guarantee Agency'}}}

 Q: What is the {film character} for {killed by} of {Luke Skywalker}
 SPARQL:  select distinct ?obj where { wd:Q51746 wdt:P157 ?obj . ?obj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Luke Skywalker', 'p': 'killed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film character'}}

 Q: What is Rosetta Code ID of permutation ?
 SPARQL: select distinct ?answer where { wd:Q161519 wdt:P5047 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'permutation', 'p': 'Rosetta Code ID', 'o': '?x0'}

 Q: Give me {novella} that {published in} {Blackwood's Magazine} and which contains the word {darkness} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q149537 . ?sbj wdt:P1433 wd:Q1529971 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'darkness')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'novella', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': "Blackwood's Magazine"}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'darkness'}}

 Q: Which is the biological process for anatomical location of respiratory system?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P927 wd:Q7891 . ?sbj wdt:P31 wd:Q2996394 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'anatomical location', 'o': 'respiratory system', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biological process'}}

 Q: What is {architectural style} and {color} of {{American Gothic} has {depicts} as {house}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q464782 p:P180 ?s . ?s ps:P180 wd:Q3947 . ?s pq:P149 ?value1 . ?s pq:P462 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'architectural style', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'American Gothic', 'p': 'depicts', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'depicts', 'o': 'house'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'color', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'American Gothic', 'p': 'depicts', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'depicts', 'o': 'house'}}}]

 Q: Is the longest life span of Homo sapiens less than 97.6 years?
 SPARQL: ASK WHERE { wd:Q15978631 wdt:P4214 ?obj filter(?obj < 97.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Homo sapiens', 'p': 'highest observed lifespan', 'o': '?x0', '?x0': '97.6'}

 Q: What is {language of name} of {The Peasants}, that has {has grammatical gender} is {masculine animate non-personal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2896338 wdt:P407 ?answer . ?answer wdt:P5109 wd:Q52943193}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Peasants', 'p': 'language of name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has grammatical gender', 'o': 'masculine animate non-personal'}}

 Q: Tell me about sovereign state for applies to jurisdiction of Australian dollar?
 SPARQL:  select distinct ?obj where { wd:Q259502 wdt:P1001 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Australian dollar', 'p': 'applies to jurisdiction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Russian is the language of work or name for what operating system?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P407 wd:Q7737 . ?sbj wdt:P31 wd:Q9135 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'language of work or name', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'operating system'}}

 Q: Which is participating teams of FC Bayern Munich?
 SPARQL: select distinct ?answer where { ?answer wdt:P1923 wd:Q15789}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'participating team', 'o': 'FC Bayern Munich'}

 Q: Which is a continent of San Marino?
 SPARQL: select distinct ?answer where { wd:Q238 wdt:P30 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'San Marino', 'p': 'continent', 'o': '?x0'}

 Q: Is the length of office of the Governor of Maryland equal to 4?
 SPARQL: ASK WHERE { wd:Q693032 wdt:P2097 ?obj filter(?obj = 4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Governor of Maryland', 'p': 'term length of office', 'o': '?x0', '?x0': '4'}

 Q: What is {type of film} of {writers} of {War of Honor} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3390937 wdt:P50 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of film', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'War of Honor', 'p': 'written by', 'o': '$y0'}}

 Q: What is {temperature} and {pressure} of {{acetic acid} has {phase point} as {critical point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q47512 p:P873 ?s . ?s ps:P873 wd:Q111059 . ?s pq:P2076 ?value1 . ?s pq:P2077 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'acetic acid', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'pressure', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'acetic acid', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}]

 Q: "What is {death place} of {Klement Gottwald}, that has {Wikivoyage banner} in {Prague WV banner.jpg} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q296054 wdt:P20 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Prague WV banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Klement Gottwald', 'p': 'death place', 'o': '?x0'}

 Q: Tell me cryptocurrency whose name has the word zerocoin in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13479982 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zerocoin')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cryptocurrency'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zerocoin'}}

 Q: What {has rural cities} of {national of} of {Fatai Rolling Dollar} ?
 SPARQL: SELECT ?answer WHERE { wd:Q15993448 wdt:P27 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has rural cities', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fatai Rolling Dollar', 'p': 'national of', 'o': '$y0'}}

 Q: How many things are proved by the modularity theorem?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q649469 wdt:P1318 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'modularity theorem', 'p': 'proved by', 'o': '?x0'}

 Q: What are the index number which start with the letter vix
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1738991 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vix')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'index number'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vix'}}

 Q: What is the {Sparkasse} with the {MIN(tier 1 capital ratio (CETI))} whose {member of} is {Sparkassenverband Westfalen-Lippe}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q13601825 . ?ent wdt:P2663 ?obj . ?ent wdt:P463 wd:Q1360672} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'CETI', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Sparkasse', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Sparkassenverband Westfalen-Lippe'}}}

 Q: what is the {end time} for {Mahatma Gandhi} has {residence} as {South Africa} ?
 SPARQL: SELECT ?value WHERE { wd:Q1001 p:P551 ?s . ?s ps:P551 wd:Q258 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahatma Gandhi', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'South Africa'}}}

 Q: What is {anatomical location} of {death cause} of {Ernst Bolldén} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1357615 wdt:P509 ?X . ?X wdt:P927 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'anatomical location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ernst Bollden', 'p': 'cause of death', 'o': '$y0'}}

 Q: Who is the organizer for the sport of World Series?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q265538 wdt:P664 ?ans_1 . wd:Q265538 wdt:P641 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'World Series', 'p': 'organizer', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'World Series', 'p': 'sport', 'o': '?x1'}]

 Q: What is {chairwoman} of {political party} of {Éric Rossi} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46604330 wdt:P102 ?X . ?X wdt:P488 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chairwoman', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Éric Rossi', 'p': 'party', 'o': '$y0'}}

 Q: Which is the Irish Rugby Football Union men's player ID for Brian O'Driscoll?
 SPARQL: select distinct ?answer where { wd:Q912889 wdt:P3848 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Brian O'Driscoll", 'p': "Irish Rugby Football Union men's player ID", 'o': '?x0'}

 Q: Which is the net worth estimate for Elizabeth Holmes?
 SPARQL: select distinct ?answer where { wd:Q17503525 wdt:P2218 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Elizabeth Holmes', 'p': 'net worth', 'o': '?x0'}

 Q: What is the {weapon model} with the {MIN(field of view)} whose {used by} is {People's Liberation Army}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P4036 ?obj . ?ent wdt:P1535 wd:Q200106} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'field of view', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon model', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'used by', 'o': "People's Liberation Army"}}}

 Q: What is <FIS snowboarder ID> of <Shaun White> ?
 SPARQL: select distinct ?answer where { wd:Q288656 wdt:P2777 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shaun White', 'p': 'FIS snowboarder ID', 'o': '?x0'}

 Q: Did {Oliver_Cromwell} {conflict} {English Civil War} and {Siege of Oxford} ?
 SPARQL: ASK WHERE { wd:Q44279 wdt:P607 wd:Q80330 . wd:Q44279 wdt:P607 wd:Q7510289 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Oliver Cromwell', 'p': 'conflict', 'o': '?x0', '?x0': 'English Civil War'}, {'h': 'IS', 'v': '?x1', 's': 'Oliver Cromwell', 'p': 'conflict', 'o': '?x1', '?x1': 'Siege of Oxford'}]

 Q: What is the {character from Star Wars} for {present in work} of {Star Wars Episode V: The Empire Strikes Back}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1441 wd:Q181795 . ?sbj wdt:P31 wd:Q33125444 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'present in work', 'o': 'Star Wars Episode V: The Empire Strikes Back', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'character from Star Wars'}}

 Q: which branch of physics starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4162444 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'branch of physics'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {governing text} of {unfree labour}, that has {country of jurisdiction} is {Germany} ?
 SPARQL: SELECT ?answer WHERE { wd:Q705818 wdt:P92 ?answer . ?answer wdt:P1001 wd:Q183}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'unfree labour', 'p': 'governing text', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'of jurisdiction', 'o': 'Germany'}}

 Q: Who is the {written work} for {notable work} of {Robert Louis Stevenson}
 SPARQL:  select distinct ?obj where { wd:Q1512 wdt:P800 ?obj . ?obj wdt:P31 wd:Q47461344 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Robert Louis Stevenson', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'written work'}}

 Q: who is partner of Amy Winehouse that has start time is 2010-1-1 ?
 SPARQL: SELECT ?obj WHERE { wd:Q15897 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Amy Winehouse', 'p': 'partner', 'o': '?x0', 't': '2010'}

 Q: What is {coordinate location} of {Orange River} that is {applies to part} is {river mouth} ?
 SPARQL: SELECT ?obj WHERE { wd:Q181475 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q1233637 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinate location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Orange River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'mouth'}}}

 Q: What is the human being for the Battle of France conflict?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P607 wd:Q151340 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'Battle of France', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Give me {religion} that {main regulatory text} {Tao Te Ching} and which contains the word {taoism} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9174 . ?sbj wdt:P92 wd:Q134425 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'taoism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religion', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'main regulatory text', 'o': 'Tao Te Ching'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'taoism'}}

 Q: what is the {end time} for {Soong Ching-ling} has {position held} as {Vice President of the People's Republic of China} ?
 SPARQL: SELECT ?value WHERE { wd:Q17132 p:P39 ?s . ?s ps:P39 wd:Q553169 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Soong Ching-ling', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': "Vice President of the People's Republic of China"}}}

 Q: What is the 2.1 with the lowest number of participants whose country is Spain? ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q22231112 . ?ent wdt:P1132 ?obj . ?ent wdt:P17 wd:Q29} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'number of participants', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': '2.1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Spain'}}}

 Q: What is {member of sports team} of {Jack Kramer} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q54529 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Kramer', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Kramer', 'p': 'team', 'o': '$y0'}}]

 Q: What is {nominated for} of {The Wizard of Oz} that is {nominee} is {Albert Arnold Gillespie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193695 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q8346 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Wizard of Oz', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Albert Arnold Gillespie'}}}

 Q: What is {on the tracklist of} of {citation} of {How to Recover from a Brain Disease: Is Addiction a Disease, or Is there a Disease-like Stage in Addiction?} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41030995 wdt:P2860 ?X . ?X wdt:P1433 ?answer}
 ALIST: {}

 Q: Give me {institution} that contains the word {roman} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q178706 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'roman')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'institution'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'roman'}}

 Q: Tell me the conglomerate of the industry conglomerate which contains the word ling in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q778575 . ?sbj wdt:P452 wd:Q778575 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ling')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conglomerate', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'industry', 'o': 'conglomerate'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ling'}}

 Q: What scientific awards did Linus Pauling receive?
 SPARQL:  select distinct ?obj where { wd:Q48983 wdt:P166 ?obj . ?obj wdt:P31 wd:Q11448906 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linus Pauling', 'p': 'awards', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scientific award'}}

 Q: What is {nominated for} of {Arthur Penn} that is {statement is subject of} is {12th Tony Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q41136 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q4548936 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Penn', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '12th Tony Awards'}}}

 Q: Is the number of platform tracks of Leeuwarden Achter de Hoven railway station equal to 0.8?
 SPARQL: ASK WHERE { wd:Q17950 wdt:P1103 ?obj filter(?obj = 0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Leeuwarden Achter de Hoven railway station', 'p': 'number of platform tracks', 'o': '?x0', '?x0': '0.8'}

 Q: What is {educated at} of {Margarita Simonyan} that is {academic major} is {journalism} ?
 SPARQL: SELECT ?obj WHERE { wd:Q4419809 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q11030 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Margarita Simonyan', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'major', 'o': 'journalism'}}}

 Q: IS THE LOWEST ATMOSPHERE OF HURRICANE KATRINA EQUALS 902
 SPARQL: ASK WHERE { wd:Q16422 wdt:P2532 ?obj filter(?obj = 902) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Hurricane Katrina', 'p': 'lowest atmospheric pressure', 'o': '?x0', '?x0': '902'}

 Q: What is {birth date} of {nephew} of {Cyd Charisse} ?
 SPARQL: SELECT ?answer WHERE { wd:Q62558 wdt:P1038 ?X . ?X wdt:P569 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'birth date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cyd Charisse', 'p': 'nephew', 'o': '$y0'}}

 Q: What is {country of citizenship} of {Ethel Turner} and {end cause}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3327092 p:P27 ?s . ?s ps:P27 ?obj . ?s pq:P1534 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ethel Turner', 'p': 'citizenship', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'citizenship', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ethel Turner', 'p': 'citizenship', 'o': '$y0'}}]

 Q: Who gave the{next crossing upstream} of {shooting location} of {Independence Day: Resurgence} ?
 SPARQL: SELECT ?answer WHERE { wd:Q19614711 wdt:P915 ?X . ?X wdt:P2673 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next crossing upstream', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Independence Day: Resurgence', 'p': 'shooting location', 'o': '$y0'}}

 Q: What is <performer> of <Unchained Melody> ?
 SPARQL: select distinct ?answer where { wd:Q949416 wdt:P175 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unchained Melody', 'p': 'performer', 'o': '?x0'}

 Q: What is {educated at} of {Christiane Amanpour} that is {academic major} is {journalism} ?
 SPARQL: SELECT ?obj WHERE { wd:Q236939 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 wd:Q11030 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christiane Amanpour', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic major', 'o': 'journalism'}}}

 Q: Who became the chief executive officer of Advanced Micro Devices in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q128896 p:P169 ?s . ?s ps:P169 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Advanced Micro Devices', 'p': 'chief executive officer', 'o': '?x0', 't': '2014'}

 Q: What is {position held} of {Jacques Chirac} that is {replaced by} is {Michel Poniatowski} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2105 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q3310623 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacques Chirac', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Ponia'}}}

 Q: What is the cation with the highest isospin quantum number?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q326277 . ?ent wdt:P1126 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'isospin quantum number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cation'}}

 Q: What is {starring} of {preceeds} of {Agent Cody Banks} ?
 SPARQL: SELECT ?answer WHERE { wd:Q392677 wdt:P156 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Agent Cody Banks', 'p': 'preceeds', 'o': '$y0'}}

 Q: Tell me about television program for director of Jim Henson?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q191037 . ?sbj wdt:P31 wd:Q15416 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'director', 'o': 'Jim Henson', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television program'}}

 Q: What is {educated at} of {Jacques Barzun} that is {academic degree} is {Doctor of Philosophy} ?
 SPARQL: SELECT ?obj WHERE { wd:Q712946 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q752297 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacques Barzun', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Doctor of Philosophy'}}}

 Q: What is {literary works} of {doctoral supervisor} of {Finn E. Kydland} ?
 SPARQL: SELECT ?answer WHERE { wd:Q211097 wdt:P184 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'literary works', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Finn E. Kydland', 'p': 'doctoral supervisor', 'o': '$y0'}}

 Q: Where is the {country of origin} and the {language of work or name} of {The_Hobbit} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q74287 wdt:P495 ?ans_1 . wd:Q74287 wdt:P407 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Hobbit', 'p': 'country of origin', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Hobbit', 'p': 'language of work or name', 'o': '?x1'}]

 Q: What are the war of national liberation which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1006311 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war of national liberation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is {actor} of {part of series} of {Zippered} ?
 SPARQL: SELECT ?answer WHERE { wd:Q50380831 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zippered', 'p': 'part of series', 'o': '$y0'}}

 Q: What's the retirement age in Australia?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q408 wdt:P3001 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Australia', 'p': 'retirement age', 'o': '?x0'}

 Q: What is the place of interment of Gregory Blaxland, which divides into Warringah Council?
 SPARQL: SELECT ?answer WHERE { wd:Q962593 wdt:P119 ?answer . ?answer wdt:P150 wd:Q377295}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gregory Blaxland', 'p': 'interment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divides into', 'o': 'Warringah Council'}}

 Q: What is {position held} of {Ferdinand Marcos} that is {replaced by} is {Corazon Aquino} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1463 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q1480 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ferdinand Marcos', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Corazon Aquino'}}}

 Q: How many {located on astronomical body} are to/by {Phobos} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P376 wd:Q7547 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'located on astronomical body', 'o': 'Phobos'}

 Q: What is the {revolution} for {cause of destruction} of {Russian Empire}
 SPARQL:  select distinct ?obj where { wd:Q34266 wdt:P770 ?obj . ?obj wdt:P31 wd:Q10931 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Russian Empire', 'p': 'cause of destruction', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'revolution'}}

 Q: What is {human population} of {state} of {Reading} ?
 SPARQL: SELECT ?answer WHERE { wd:Q161491 wdt:P17 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Reading', 'p': 'state', 'o': '$y0'}}

 Q: Which is the authority for Yale University?
 SPARQL: select distinct ?answer where { wd:Q49112 wdt:P797 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yale University', 'p': 'authority', 'o': '?x0'}

 Q: Which is the Colour Index International constitution ID for zinc oxide?
 SPARQL: select distinct ?answer where { wd:Q190077 wdt:P2027 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'zinc oxide', 'p': 'Colour Index International constitution ID', 'o': '?x0'}

 Q: Is the specific age inside fictional universe of the Lilith equal to 27?
 SPARQL: ASK WHERE { wd:Q62707823 wdt:P6249 ?obj filter(?obj = 27) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Lilith', 'p': 'specific age inside fictional universe', 'o': '?x0', '?x0': '27'}

 Q: Who is the brother of Aeschylus ,who has a career  as military personnel.?
 SPARQL: SELECT ?answer WHERE { wd:Q40939 wdt:P3373 ?answer . ?answer wdt:P106 wd:Q47064}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aeschylus', 'p': 'bro', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'career', 'o': 'military personnel'}}

 Q: What is the {automobile} with the {MAX(wheelbase)} whose {instance of} is {automobile}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1420 . ?ent wdt:P3039 ?obj . ?ent wdt:P31 wd:Q1420 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'wheelbase', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'auto'}}

 Q: Which is the film for which Akira Kurosawa was a film editor?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1040 wd:Q8006 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'film editor', 'o': 'Akira Kurosawa', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is {genre of music} of {author} of {In the Flesh} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2557146 wdt:P676 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'In the Flesh', 'p': 'author', 'o': '$y0'}}

 Q: What was Julie Harris nominated for in 1976?
 SPARQL: SELECT ?obj WHERE { wd:Q236708 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1976')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Julie Harris', 'p': 'nominated for', 'o': '?x0', 't': '1976'}

 Q: Which is the stellar rotational velocity for Antares?
 SPARQL: select distinct ?answer where { wd:Q12166 wdt:P4296 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antares', 'p': 'stellar rotational velocity', 'o': '?x0'}

 Q: Give me {train service} that {significant event} {Yarımburgaz train disaster} and which that starts with {'e'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15141321 . ?sbj wdt:P793 wd:Q18639918 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'e')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'train service', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'significant event', 'o': 'Yarımburgaz train disaster'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'e'}}

 Q: What award did David Geffen receive in the year 1990?
 SPARQL: SELECT ?obj WHERE { wd:Q115055 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Geffen', 'p': 'award', 'o': '?x0', 't': '1990'}

 Q: What is {had cause} of {afflicts} of {brain damage} ?
 SPARQL: SELECT ?answer WHERE { wd:Q720026 wdt:P689 ?X . ?X wdt:P828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'brain damage', 'p': 'afflicts', 'o': '$y0'}}

 Q: What is {educated at} of {Joseph Goebbels} and {academic degree}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41749 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Goebbels', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Goebbels', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is the {howitzer} for {country of origin} of {Soviet Union}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q180126 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'howitzer'}}

 Q: What is the {state of Australia} with the {MAX(age of consent)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q5852411 . ?ent wdt:P2999 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'age of consent', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state of Australia'}}

 Q: Which is the category for alumni of educational institution of Dartmouth College?
 SPARQL: select distinct ?answer where { wd:Q49116 wdt:P3876 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dartmouth College', 'p': 'category for alumni of educational institution', 'o': '?x0'}

 Q: Is the limiting oxygen index of polystyrene lesser than 14.24?
 SPARQL: ASK WHERE { wd:Q146243 wdt:P5929 ?obj filter(?obj < 14.24) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'polystyrene', 'p': 'limiting oxygen index', 'o': '?x0', '?x0': '14.24'}

 Q: What is the tributary} of on the  bay of Austria-Hungary?
 SPARQL: SELECT ?answer WHERE { wd:Q28513 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Austria-Hungary', 'p': 'bay', 'o': '$y0'}}

 Q: What are the war deity which start with the letter zalmoxis
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q41863069 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zalmoxis')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'war deity'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zalmoxis'}}

 Q: What is <Unifrance company ID> of <NHK> ?
 SPARQL: select distinct ?answer where { wd:Q212128 wdt:P3979 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'NHK', 'p': 'Unifrance company ID', 'o': '?x0'}

 Q: what is the {statement is subject of} for {Saudi Arabia} has {diplomatic relation} as {Kyrgyzstan} ?
 SPARQL: SELECT ?value WHERE { wd:Q851 p:P530 ?s . ?s ps:P530 wd:Q813 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saudi Arabia', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'diplomatic relation', 'o': 'Kyrgyzstan'}}}

 Q: what is the {start time} for {Rajamahendravaram} has {located in the administrative territorial entity} as {East Godavari district} ?
 SPARQL: SELECT ?value WHERE { wd:Q1639492 p:P131 ?s . ?s ps:P131 wd:Q15338 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rajamahendravaram', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'East Godavari district'}}}

 Q: What is IPv4 routing prefix for Boeing ?
 SPARQL: select distinct ?answer where { wd:Q66 wdt:P3761 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Boeing', 'p': 'IPv4 routing prefix', 'o': '?x0'}

 Q: What is {member of sports team} of {Udo Lattek} that is {number of points/goals/set scored} is {34.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q290870 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x filter(contains(?x,'34.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Udo Lattek', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '34.0'}}}

 Q: What is {doctoral advisor} and {academic degree} of {{James Heckman} has {educated at} as {Princeton University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q312561 p:P69 ?s . ?s ps:P69 wd:Q21578 . ?s pq:P184 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Heckman', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Princeton University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Heckman', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Princeton University'}}}]

 Q: What is the {Roman deity} for {worshipped by} of {Christianity}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1049 wd:Q5043 . ?sbj wdt:P31 wd:Q11688446 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'worshipped by', 'o': 'Christianity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Roman deity'}}

 Q: Which is the revolution that had it's location in the Russian Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q34266 . ?sbj wdt:P31 wd:Q10931 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Russian Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'revolution'}}

 Q: What is the {order} for {next lower rank} of {Legion of Honour}
 SPARQL:  select distinct ?obj where { wd:Q163700 wdt:P3729 ?obj . ?obj wdt:P31 wd:Q193622 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Legion of Honour', 'p': 'next lower rank', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'order'}}

 Q: What is {child} of {Pedro I} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: Who is married to Ivo Andric that was born on 02-09-1909?
 SPARQL: SELECT ?answer WHERE { wd:Q47561 wdt:P26 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1909'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ivo Andric', 'p': 'married to', 'o': '?x0', 't': '1909'}

 Q: What is the {American television sitcom} for {voice actor} of {Sarah Silverman}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q229013 . ?sbj wdt:P31 wd:Q21188110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Sarah Silverman', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'American television sitcom'}}

 Q: What is {facet of a polytope} of {600-cell}, that has {base} is {equilateral triangle} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2610844 wdt:P1312 ?answer . ?answer wdt:P3263 wd:Q157002}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '600-cell', 'p': 'facet of a polytope', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'base', 'o': 'equilateral triangle'}}

 Q: Which was the target of Battle of Stalingrad?
 SPARQL: select distinct ?answer where { wd:Q38789 wdt:P533 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Battle of Stalingrad', 'p': 'target', 'o': '?x0'}

 Q: What is {painting of} of {representative work} of {Henry Holiday} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1763678 wdt:P800 ?X . ?X wdt:P180 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painting of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Holiday', 'p': 'work', 'o': '$y0'}}

 Q: Which is {sporting event} of {child of} {Gore Vidal} ?
 SPARQL: SELECT ?answer WHERE { wd:Q167821 wdt:P22 ?X . ?X wdt:P2416 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sporting event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gore Vidal', 'p': 'child of', 'o': '$y0'}}

 Q: What is {population} of {Oviedo} that is {determination method} is {register office} ?
 SPARQL: SELECT ?obj WHERE { wd:Q14317 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q745221 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oviedo', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'register office'}}}

 Q: What is {garrison} of {Asia-Pacific Economic Cooperation}, that has {inhabitants} is {5888926} ?
 SPARQL: SELECT ?answer WHERE { wd:Q170481 wdt:P159 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'5888926'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Asia-Pacific Economic Cooperation', 'p': 'garrison', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '5888926'}}

 Q: Is the total equity in Delta Air Lines equal to 245,000,000?
 SPARQL: ASK WHERE { wd:Q188920 wdt:P2137 ?obj filter(?obj = 245000000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Delta Air Lines', 'p': 'total equity', 'o': '?x0', '?x0': '245000000'}

 Q: Maryland is coordinates of southernmost point ?
 SPARQL: select distinct ?answer where { wd:Q1391 wdt:P1333 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Maryland', 'p': 'coordinates of southernmost point', 'o': '?x0'}

 Q: What is the {Wikimedia category} for {category of associated people} of {Istanbul}
 SPARQL:  select distinct ?obj where { wd:Q406 wdt:P1792 ?obj . ?obj wdt:P31 wd:Q4167836 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Istanbul', 'p': 'category of associated people', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia category'}}

 Q: Is 7 the sports league level of Kutonen?
 SPARQL: ASK WHERE { wd:Q1763335 wdt:P3983 ?obj filter(?obj = 7) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Kutonen', 'p': 'sports league level', 'o': '?x0', '?x0': '7'}

 Q: What is the {fictional universe} for {fictional universe described in} of {Game of Thrones}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1445 wd:Q23572 . ?sbj wdt:P31 wd:Q559618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional universe described in', 'o': 'Game of Thrones', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional universe'}}

 Q: Who is the manufacturer and operator of the Boeing 787 Dreamliner?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q6428 wdt:P137 ?ans_1 . wd:Q6428 wdt:P176 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Boeing 787 Dreamliner', 'p': 'operator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Boeing 787 Dreamliner', 'p': 'manufacturer', 'o': '?x1'}]

 Q: Give me {solstice} that {month of the year} {June} and which contains the word {solstice} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q123524 . ?sbj wdt:P2922 wd:Q120 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'solstice')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'solstice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'month of the year', 'o': 'June'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'solstice'}}

 Q: What is {follows} and {followed by} of {{Anne of Green Gables} has {series} as {Anne of Green Gables}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q565911 p:P179 ?s . ?s ps:P179 wd:Q3209782 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'predecessor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne of Green Gables', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Anne of Green Gables'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'successor', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anne of Green Gables', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': 'Anne of Green Gables'}}}]

 Q: When was the population of Bethlehem 25266?
 SPARQL: SELECT ?value WHERE { wd:Q5776 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'25266.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Bethlehem', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '25266.0'}, 't': '?x0'}

 Q: what is the {start time} for {Novak Djokovic} has {occupation} as {tennis player} ?
 SPARQL: SELECT ?value WHERE { wd:Q5812 p:P106 ?s . ?s ps:P106 wd:Q10833314 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Novak Djokovic', 'p': 'profession', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'profession', 'o': 'tennis player'}}}

 Q: What is <patient of> of <Leo Kanner> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3205 wd:Q93592}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'patient of', 'o': 'Leo Kanner'}

 Q: what are the fossil taxon was starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q23038290 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fossil taxon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is {headquarters location} of {Kroger} that is {country} is {United States of America} ?
 SPARQL: SELECT ?obj WHERE { wd:Q153417 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P17 wd:Q30 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kroger', 'p': 'headquarters location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'United States'}}}

 Q: Which song that contains the word world in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7366 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'song'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: What is the {capital of} and the {located in the administrative territorial entity} of {Belfast} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q10686 wdt:P1376 ?ans_1 . wd:Q10686 wdt:P131 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Belfast', 'p': 'capital of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Belfast', 'p': 'in', 'o': '?x1'}]

 Q: Is it true that the number of deaths of D. B. Cooper is less than 0.0?
 SPARQL: ASK WHERE { wd:Q348970 wdt:P1120 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'D. B. Cooper', 'p': 'number of deaths', 'o': '?x0', '?x0': '0.0'}

 Q: Does par at the Wentworth Club equal 72
 SPARQL: ASK WHERE { wd:Q499347 wdt:P3530 ?obj filter(?obj = 72) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Wentworth Club', 'p': 'par', 'o': '?x0', '?x0': '72'}

 Q: Where was Milton Friedman educated at and what was his academic major?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q47426 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milton Friedman', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Milton Friedman', 'p': 'educated at', 'o': '$y0'}}]

 Q: What is <nominated for> of <Annie Award> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1411 wd:Q566905}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'nominated for', 'o': 'Annie Award'}

 Q: Which is the BVPB authority ID for Asturias?
 SPARQL: select distinct ?answer where { wd:Q3934 wdt:P4802 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Asturias', 'p': 'BVPB authority ID', 'o': '?x0'}

 Q: In what field of profession is Daniel Kucan?
 SPARQL: SELECT ?answer WHERE { wd:Q5217835 wdt:P106 ?X . ?X wdt:P425 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Daniel Kucan', 'p': 'profession', 'o': '$y0'}}

 Q: What is the {publisher} and the {award received} of {Watchmen} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q128444 wdt:P123 ?ans_1 . wd:Q128444 wdt:P166 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Watchmen', 'p': 'publisher', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Watchmen', 'p': 'award received', 'o': '?x1'}]

 Q: What is the publication interval for The New York Times?
 SPARQL: select distinct ?answer where { wd:Q9684 wdt:P2896 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The New York Times', 'p': 'publication interval', 'o': '?x0'}

 Q: How many destinations does Voyager 2 have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q48475 wdt:P1444 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Voyager 2', 'p': 'destination', 'o': '?x0'}

 Q: What is <lakes on river> of <Churchill River> ?
 SPARQL: select distinct ?answer where { wd:Q3318 wdt:P469 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Churchill River', 'p': 'lakes on river', 'o': '?x0'}

 Q: Is the Solomon Island Human Development Index equal to .3952?
 SPARQL: ASK WHERE { wd:Q685 wdt:P1081 ?obj filter(?obj = 0.3952) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Solomon Islands', 'p': 'Human Development Index', 'o': '?x0', '?x0': '0.3952'}

 Q: Who is life stance of Executive Order 6022 written by?
 SPARQL: SELECT ?answer WHERE { wd:Q19107731 wdt:P50 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'life stance', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Executive Order 6022', 'p': 'written by', 'o': '$y0'}}

 Q: Which is the first appearance of Mario?
 SPARQL: select distinct ?answer where { wd:Q12379 wdt:P4584 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mario', 'p': 'first appearance', 'o': '?x0'}

 Q: What is {human population} of {is in the prefecture of} of {Anambra State} ?
 SPARQL: SELECT ?answer WHERE { wd:Q117714 wdt:P131 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anambra State', 'p': 'is in the prefecture of', 'o': '$y0'}}

 Q: What are the coordinate system which start with the letter universal
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11210 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'universal')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'coordinate system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'universal'}}

 Q: What is the {Boulton and Watt} for {discoverer or inventor} of {James Watt}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P61 wd:Q9041 . ?sbj wdt:P31 wd:Q895118 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'James Watt', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Boulton and Watt'}}

 Q: what is the {determination method} for {bipolar disorder} has {genetic association} as {WSCD2} ?
 SPARQL: SELECT ?value WHERE { wd:Q131755 p:P2293 ?s . ?s ps:P2293 wd:Q18034568 . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'bipolar disorder', 'p': 'genetic association', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'genetic association', 'o': 'WSCD2'}}}

 Q: What is {charge} of {position holder} of {Sheriff of Davidson County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23901172 wdt:P1308 ?X . ?X wdt:P1595 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'charge', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sheriff of Davidson County', 'p': 'position holder', 'o': '$y0'}}

 Q: Which is the mother and the date of birth of Charlemagne's child the Pepin of Italy?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q299645 . ?s pq:P25 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Pepin of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Pepin of Italy'}}}]

 Q: What is {genetic association} of {consequence} of {autoimmune disease} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8084905 wdt:P1542 ?X . ?X wdt:P2293 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genetic association', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'autoimmune disease', 'p': 'consequence', 'o': '$y0'}}

 Q: Which is the seat of team Eddie Miller?
 SPARQL: SELECT ?answer WHERE { wd:Q5336310 wdt:P54 ?X . ?X wdt:P159 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'seat', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eddie Miller', 'p': 'team', 'o': '$y0'}}

 Q: Give me {construction} that contains the word {zollbauweise} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q811430 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zollbauweise')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'construction'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zollbauweise'}}

 Q: How many producers are there for Blade Runner?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q184843 wdt:P162 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Blade Runner', 'p': 'producer', 'o': '?x0'}

 Q: Tell me natural number whose name has the word googolplex in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21199 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'googolplex')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural number'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'googolplex'}}

 Q: Which is the real gross domestic product growth rate for Burkina Faso?
 SPARQL: select distinct ?answer where { wd:Q965 wdt:P2219 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Burkina Faso', 'p': 'real gross domestic product growth rate', 'o': '?x0'}

 Q: what is the source of watercourse of the Fraser River, that has hill range in American Cordillera?
 SPARQL: SELECT ?answer WHERE { wd:Q269710 wdt:P885 ?answer . ?answer wdt:P4552 wd:Q605761}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fraser River', 'p': 'source of watercourse', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'range', 'o': 'American Cordillera'}}

 Q: What is {dissolved, abolished or demolished} of {Macedonian kingdom} that is {instance of} is {statement with Gregorian date earlier than 1584} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83958 p:P576 ?s . ?s ps:P576 ?obj . ?s pq:P31 wd:Q26961029 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dissolved', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Macedonia', 'p': 'dissolved', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'type', 'o': 'statement with Gregorian date earlier than 1584'}}}

 Q: What role was Andrew Lloyd Webber nominated for in 2016-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q180975 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Andrew Lloyd Webber', 'p': 'nominated for', 'o': '?x0', 't': '2016'}

 Q: Who is the {film} for {country of origin} of {Russian Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P495 wd:Q34266 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Russian Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the stock exchange for PayPal?
 SPARQL: select distinct ?answer where { wd:Q483959 wdt:P414 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'PayPal', 'p': 'stock exchange', 'o': '?x0'}

 Q: What is {spouse} of {Tom Brady} and {place of marriage}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q313381 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P2842 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of marriage', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tom Brady', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tom Brady', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is the population of Aleppo as determined in the census method?
 SPARQL: SELECT ?obj WHERE { wd:Q41183 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Aleppo', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'method', 'o': 'census'}}}

 Q: What is {timezone} of {admin HQ} of {Arab States Broadcasting Union} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4783249 wdt:P159 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timezone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arab States Broadcasting Union', 'p': 'HQ', 'o': '$y0'}}

 Q: Who are the director and director of photography of Fight Club?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q190050 wdt:P344 ?ans_1 . wd:Q190050 wdt:P57 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Fight Club', 'p': 'director of photography', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Fight Club', 'p': 'director', 'o': '?x1'}]

 Q: Is JavaScript influenced by JavaScript?
 SPARQL: ASK WHERE { wd:Q2005 wdt:P737 wd:Q2005 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'JavaScript', 'p': 'influenced by', 'o': '?x0', '?x0': 'JavaScript'}]

 Q: what is the {end time} for {Henry I of England} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q101384 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry I of England', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: Is the coefficient of Polycarbonate friction greater than 0.248?
 SPARQL: ASK WHERE { wd:Q62246 wdt:P5575 ?obj filter(?obj > 0.248) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'polycarbonate', 'p': 'coefficient of friction', 'o': '?x0', '?x0': '0.248'}

 Q: Is the population of the Walyunga National Park greater than 0.0?
 SPARQL: ASK WHERE { wd:Q614773 wdt:P1082 ?obj filter(?obj > 0.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Walyunga National Park', 'p': 'population', 'o': '?x0', '?x0': '0.0'}

 Q: What is the {human} for {conflict} of {October Revolution}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P607 wd:Q42976 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conflict', 'o': 'October Revolution', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the position held by Warren G. Harding whose electoral district is Ohio?
 SPARQL: SELECT ?obj WHERE { wd:Q35286 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 wd:Q1397 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Warren G. Harding', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'electoral district', 'o': 'Ohio'}}}

 Q: What is the {position} for {position held} of {Justin Trudeau}
 SPARQL:  select distinct ?obj where { wd:Q3099714 wdt:P39 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Justin Trudeau', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: What is {date of birth} and {date of death} of {{Isabella I of Castile} has {child} as {Joanna of Castile}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q45859 p:P40 ?s . ?s ps:P40 wd:Q171136 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Joanna of Castile'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Isabella I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Joanna of Castile'}}}]

 Q: Who is the {taxon rank} and the {parent taxon} of {Salmonella} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q150839 wdt:P105 ?ans_1 . wd:Q150839 wdt:P171 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Salmonella', 'p': 'taxon rank', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Salmonella', 'p': 'parent taxon', 'o': '?x1'}]

 Q: what is the {end time} for {Portuguese India} has {country} as {Portuguese Empire} ?
 SPARQL: SELECT ?value WHERE { wd:Q323904 p:P17 ?s . ?s ps:P17 wd:Q200464 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Portuguese India', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Portuguese Empire'}}}

 Q: When did Diana Taurasi receive the WNBA Peak Performers award?
 SPARQL: SELECT ?value WHERE { wd:Q240726 p:P166 ?s . ?s ps:P166 wd:Q1358318 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Diana Taurasi', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'WNBA Peak Performers'}, 't': '?x0'}

 Q: Which is the THW Kiel player ID for Nikola Karabatić?
 SPARQL: select distinct ?answer where { wd:Q157809 wdt:P4263 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nikola Karabatić', 'p': 'THW Kiel player ID', 'o': '?x0'}

 Q: What is the {history of a city} for {history of topic} of {Istanbul}
 SPARQL:  select distinct ?obj where { wd:Q406 wdt:P2184 ?obj . ?obj wdt:P31 wd:Q28747937 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Istanbul', 'p': 'history of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'history of a city'}}

 Q: what is the {end time} for {Lev Yashin} has {member of sports team} as {FC Dinamo Moscow} ?
 SPARQL: SELECT ?value WHERE { wd:Q167828 p:P54 ?s . ?s ps:P54 wd:Q17497 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lev Yashin', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'FC Dinamo Moscow'}}}

 Q: What is <model> of <We Can Do It!> ?
 SPARQL: select distinct ?answer where { wd:Q2984429 wdt:P2634 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'We Can Do It!', 'p': 'model', 'o': '?x0'}

 Q: What is the {chemical compound} for {significant drug interaction} of {cocaine}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P769 wd:Q41576 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant drug interaction', 'o': 'cocaine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is the {science} for {field of work} of {Claude Shannon}
 SPARQL:  select distinct ?obj where { wd:Q92760 wdt:P101 ?obj . ?obj wdt:P31 wd:Q336 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Claude Shannon', 'p': 'field of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'science'}}

 Q: What is Tetris's KLOV ID?
 SPARQL: select distinct ?answer where { wd:Q71910 wdt:P2858 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tetris', 'p': 'KLOV ID', 'o': '?x0'}

 Q: What are the biopharmaceutical encodes for  INS?
 SPARQL:  select distinct ?obj where { wd:Q21163221 wdt:P688 ?obj . ?obj wdt:P31 wd:Q679692 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'INS', 'p': 'encodes', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biopharmaceutical'}}

 Q: Which is the writing system which contains the word writing in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8192 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'writing')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'writing system'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'writing'}}

 Q: who painting for depicted by of Alexander I of Russia?
 SPARQL:  select distinct ?obj where { wd:Q15193 wdt:P1299 ?obj . ?obj wdt:P31 wd:Q3305213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander I of Russia', 'p': 'depicted by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting'}}

 Q: What is {female} of {Judas Iscariot}, that has {mistakenly taken for} is {man} ?
 SPARQL: SELECT ?answer WHERE { wd:Q81018 wdt:P21 ?answer . ?answer wdt:P1889 wd:Q8441}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Judas Iscariot', 'p': 'man', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'mistakenly taken for', 'o': 'man'}}

 Q: What is {bank holiday} of {citizenship} of {Agnetha Fältskog} ?
 SPARQL: SELECT ?answer WHERE { wd:Q173144 wdt:P27 ?X . ?X wdt:P832 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bank holiday', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Agnetha Fältskog', 'p': 'citizenship', 'o': '$y0'}}

 Q: What is the Class IB flammable liquid with the highest upper flammable limit whose instance of is occupational carcinogen?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21009055 . ?ent wdt:P2203 ?obj . ?ent wdt:P31 wd:Q21074597 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'upper flammable limit', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Class IB flammable liquid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'occupational carcinogen'}}}

 Q: What is {position held} of {Anatole France} that is {replaced by} is {Paul Valéry} ?
 SPARQL: SELECT ?obj WHERE { wd:Q42443 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q200639 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anatole France', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Paul Valéry'}}}

 Q: What is <Académie des Inscriptions et Belles-Lettres member ID> of <Ernest Renan> ?
 SPARQL: select distinct ?answer where { wd:Q157155 wdt:P4716 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ernest Renan', 'p': 'Académie des Inscriptions et Belles-Lettres member ID', 'o': '?x0'}

 Q: Which platforms were Grand Theft Auto V for that were published in 9/17/2013?
 SPARQL: SELECT ?obj WHERE { wd:Q17452 p:P400 ?s . ?s ps:P400 ?obj . ?s pq:P577 ?x filter(contains(YEAR(?x),'2013')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Grand Theft Auto V', 'p': 'platform', 'o': '?x0', 't': '2013'}

 Q: what is the {statement is subject of} for {George Miller} has {nominated for} as {Academy Award for Best Picture} ?
 SPARQL: SELECT ?value WHERE { wd:Q446960 p:P1411 ?s . ?s ps:P1411 wd:Q102427 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George Miller', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Picture'}}}

 Q: What is {named for} of {Kepler's laws of planetary motion}, that has {profession} is {writer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q83219 wdt:P138 ?answer . ?answer wdt:P106 wd:Q36180}
 ALIST: {'h': 'Value', 'v': '?x0', 's': "Kepler's laws of planetary motion", 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'writer'}}

 Q: What is {participant of} of {Natalie Coughlin} that is {award received} is {Olympic bronze medal} ?
 SPARQL: SELECT ?obj WHERE { wd:Q229937 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P166 wd:Q15889643 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'participant of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Natalie Coughlin', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'bronze medal'}}}

 Q: What is {member of sports team} of {Carlos Alberto Torres} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q295262 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carlos Alberto Torres', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carlos Alberto Torres', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: Is the gross tonnage of the MV Loch Ranza less than 164.8?
 SPARQL: ASK WHERE { wd:Q6719754 wdt:P1093 ?obj filter(?obj < 164.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'MV Loch Ranza', 'p': 'gross tonnage', 'o': '?x0', '?x0': '164.8'}

 Q: Give me the  point in time for Martinique has population as 380877?
 SPARQL: SELECT ?value WHERE { wd:Q17054 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'380877')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Martinique', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '380877'}, 't': '?x0'}

 Q: What is {position held} of {Simón Bolívar} that is {replaced by} is {Simón Bolívar} ?
 SPARQL: SELECT ?obj WHERE { wd:Q8605 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q8605 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Simón Bolívar', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Simón Bolívar'}}}

 Q: What sovereign state uses the Russian ruble as currency
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q41044 . ?sbj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Russian ruble', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Which is the partnership with of Antipope John XXIII?
 SPARQL: select distinct ?answer where { ?answer wdt:P2652 wd:Q294599}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'partnership with', 'o': 'John XXIII'}

 Q: What part of the Pardubice Region has a male population of 255691?
 SPARQL: SELECT ?obj WHERE { wd:Q193317 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P1540 ?x filter(contains(?x,'255691.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pardubice Region', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'male population', 'o': '255691.0'}}}

 Q: what is the {start time} for {Democratic Republic of the Congo} has {flag image} as {Flag of Zaire.svg} ?
 SPARQL: SELECT ?value WHERE { wd:Q974 p:P41 ?s . ?s ps:P41 ?x filter(contains(?x,'Flag of Zaire.svg')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zaire', 'p': 'flag image', 'o': '$y0'}}

 Q: What is {elected in} and {end cause} of {{Joseph Chamberlain} has {position held} as {Member of the 27th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q315999 p:P39 ?s . ?s ps:P39 wd:Q41582575 . ?s pq:P2715 ?value1 . ?s pq:P1534 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Chamberlain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 27th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end cause', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Chamberlain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 27th Parliament of the United Kingdom'}}}]

 Q: What is Albert Günther's RA Collections ID?
 SPARQL: select distinct ?answer where { wd:Q57514 wdt:P4553 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Albert Günther', 'p': 'RA Collections ID', 'o': '?x0'}

 Q: Which is dissolved, abolished or demolished for Delian League?
 SPARQL: select distinct ?answer where { wd:Q193235 wdt:P576 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Delian League', 'p': 'abolished', 'o': '?x0'}

 Q: What is the {empire} for {official language} of {Latin}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q397 . ?sbj wdt:P31 wd:Q48349 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Latin', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'empire'}}

 Q: What is <Musée d'Orsay artwork ID> of <Whistler's Mother> ?
 SPARQL: select distinct ?answer where { wd:Q687182 wdt:P4659 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Whistler's Mother", 'p': "Musée d'Orsay artwork ID", 'o': '?x0'}

 Q: Mention the qualifying degree and the major specialization course in which Donald Knuth graduated from the Case Western Reserve University
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q17457 p:P69 ?s . ?s ps:P69 wd:Q1047060 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Knuth', 'p': 'graduated from', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'graduated from', 'o': 'Case Western Reserve University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Donald Knuth', 'p': 'graduated from', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'graduated from', 'o': 'Case Western Reserve University'}}}]

 Q: What sport does Bernard Hinault play, whose governing body is the Union Cycliste Internationale?
 SPARQL: SELECT ?answer WHERE { wd:Q109255 wdt:P641 ?answer . ?answer wdt:P797 wd:Q48663}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bernard Hinault', 'p': 'sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'governing body', 'o': 'Union Cycliste Internationale'}}

 Q: What is the {Wikimedia list article} for {is a list of} of {monarchy}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P360 wd:Q7269 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'lists', 'o': 'monarchy', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: What is {diplomatic relation} of {Kingdom of Hawaii}, that has {member of} is {International Energy Agency} ?
 SPARQL: SELECT ?answer WHERE { wd:Q156418 wdt:P530 ?answer . ?answer wdt:P463 wd:Q826700}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kingdom of Hawaii', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'International Energy Agency'}}

 Q: What is the {democratic republic} for {country of citizenship} of {Jefferson Davis}
 SPARQL:  select distinct ?obj where { wd:Q162269 wdt:P27 ?obj . ?obj wdt:P31 wd:Q5255892 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jefferson Davis', 'p': 'country of citizenship', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'democratic republic'}}

 Q: What is {domain} of {daughter of} of {Lucien Maxant} ?
 SPARQL: SELECT ?answer WHERE { wd:Q21403222 wdt:P22 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'domain', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lucien Maxant', 'p': 'daughter of', 'o': '$y0'}}

 Q: what is the {start time} for {Suriname} has {member of} as {United Nations} ?
 SPARQL: SELECT ?value WHERE { wd:Q730 p:P463 ?s . ?s ps:P463 wd:Q1065 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Suriname', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'UN'}}}

 Q: What is the {website} for {owner of} of {Pinterest}
 SPARQL:  select distinct ?obj where { wd:Q255381 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q35127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pinterest', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'website'}}

 Q: Did {Russell_Crowe} {award received} {Australian Sports Medal} and {Australian National Living Treasure} ?
 SPARQL: ASK WHERE { wd:Q129817 wdt:P166 wd:Q1649458 . wd:Q129817 wdt:P166 wd:Q4824396 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Russell Crowe', 'p': 'award', 'o': '?x0', '?x0': 'Australian Sports Medal'}, {'h': 'IS', 'v': '?x1', 's': 'Russell Crowe', 'p': 'award', 'o': '?x1', '?x1': 'Australian National Living Treasure'}]

 Q: What is {cast member} of {How I Met Your Mother} that is {character role} is {Naomi} ?
 SPARQL: SELECT ?obj WHERE { wd:Q147235 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P453 wd:Q50385706 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cast member', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'How I Met Your Mother', 'p': 'cast member', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'character role', 'o': 'Naomi'}}}

 Q: What is the {syllabary} for {writing system} of {Japanese}?
 SPARQL:  select distinct ?obj where { wd:Q5287 wdt:P282 ?obj . ?obj wdt:P31 wd:Q182133 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Japanese', 'p': 'writing system', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'syllabary'}}

 Q: What is the CPI inflation rate of the county seat of Kingstown?
 SPARQL: SELECT ?answer WHERE { wd:Q41474 wdt:P1376 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kingstown', 'p': 'county seat of', 'o': '$y0'}}

 Q: Is the time to altitude of the G.91T less than 3.6?
 SPARQL: ASK WHERE { wd:Q21024216 wdt:P2362 ?obj filter(?obj < 3.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'G.91T', 'p': 'time to altitude', 'o': '?x0', '?x0': '3.6'}

 Q: What is the {pharmaceutical product} for {has active ingredient} of {diazepam}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3781 wd:Q210402 . ?sbj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'has active ingredient', 'o': 'diazepam', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical'}}

 Q: Who is the child of Nurhaci that was born on 2/16/1612?
 SPARQL: SELECT ?answer WHERE { wd:Q311189 wdt:P40 ?answer . ?answer wdt:P569 ?x FILTER(contains(YEAR(?x),'1612'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nurhaci', 'p': 'child', 'o': '?x0', 't': '1612'}

 Q: What is the historical period of Julia Balbilla that is until -30-1-1?
 SPARQL: SELECT ?answer WHERE { wd:Q441786 wdt:P2348 ?answer . ?answer wdt:P582 ?x FILTER(contains(?x,'-30-1-1'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Julia Balbilla', 'p': 'historical period', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'until', 'o': '-30-1-1'}}

 Q: Who is the father of the characters of Exodus?
 SPARQL: SELECT ?answer WHERE { wd:Q9190 wdt:P674 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'father', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Exodus', 'p': 'characters', 'o': '$y0'}}

 Q: What is {member of sports team} of {Michel Platini} and {number of matches played}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q4261 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michel Platini', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michel Platini', 'p': 'team', 'o': '$y0'}}]

 Q: What is {tributary} of {body of water} of {Cape Canaveral} ?
 SPARQL: SELECT ?answer WHERE { wd:Q193401 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cape Canaveral', 'p': 'body of water', 'o': '$y0'}}

 Q: Tell me superpower whose name has the word waterbending in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1047698 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'waterbending')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superpower'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'waterbending'}}

 Q: How many {designed by} are for {ENIAC} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q169399 wdt:P287 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'ENIAC', 'p': 'designed by', 'o': '?x0'}

 Q: When is {diplomatic relation} and {citizenship} of {Mike Tyson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q79031 wdt:P27 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mike Tyson', 'p': 'citizenship', 'o': '$y0'}}

 Q: Who is the painter of pendant to of Vertumnus?
 SPARQL: SELECT ?answer WHERE { wd:Q16333797 wdt:P1639 ?X . ?X wdt:P170 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'painter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vertumnus', 'p': 'pendant to', 'o': '$y0'}}

 Q: How many {solved by} are to/by {Leonhard Euler} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1136 wd:Q7604 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'solved by', 'o': 'Leonhard Euler'}

 Q: What is {cast member} of {Days of our Lives} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185059 p:P161 ?s . ?s ps:P161 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Days of Our Lives', 'p': 'cast member', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'cast member', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Days of Our Lives', 'p': 'cast member', 'o': '$y0'}}]

 Q: What is {on coast of} of {resting place} of {W. Fox McKeithen} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7945541 wdt:P119 ?X . ?X wdt:P206 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'on coast of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'W. Fox McKeithen', 'p': 'resting place', 'o': '$y0'}}

 Q: Which Precipitation hardening has the highest ultimate tensile strength?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q779974 . ?ent wdt:P5479 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'ultimate tensile strength', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hardening'}}

 Q: Which county seat of New York City has got diplomatic relation with Georgia?
 SPARQL: SELECT ?answer WHERE { wd:Q60 wdt:P1376 ?answer . ?answer wdt:P530 wd:Q230}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New York City', 'p': 'county seat of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Georgia'}}

 Q: What is the home venue of the New York Yankees?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q213417 wdt:P115 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'New York Yankees', 'p': 'home venue', 'o': '?x0'}

 Q: Tell me city whose name has the word whitehorse in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q515 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'whitehorse')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'whitehorse'}}

 Q: What is {mountain system} of {summit} of {Anhui} ?
 SPARQL: SELECT ?answer WHERE { wd:Q40956 wdt:P610 ?X . ?X wdt:P4552 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mountain range', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Anhui', 'p': 'summit', 'o': '$y0'}}

 Q: who is the enclave within of Montreal?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P501 wd:Q340 . ?sbj wdt:P31 wd:Q171441 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'enclave within', 'o': 'Montreal', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'enclave'}}

 Q: Which is the Unifrance person ID for Patrick Dewaere?
 SPARQL: select distinct ?answer where { wd:Q551439 wdt:P3980 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Patrick Dewaere', 'p': 'Unifrance person ID', 'o': '?x0'}

 Q: I need to know Northern Dancer's Czech Jockey Club horse ID.
 SPARQL: select distinct ?answer where { wd:Q1969034 wdt:P4472 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Northern Dancer', 'p': 'Czech Jockey Club horse ID', 'o': '?x0'}

 Q: What is the {administrative city in the Republic of Ireland} for {twinned administrative body} of {Chicago}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q1297 . ?sbj wdt:P31 wd:Q13455645 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'sister city', 'o': 'Chicago', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'administrative city in the Republic of Ireland'}}

 Q: What is  the birthplace of Harald zur Hausen, that has a partner city which is in Campo Grande?
 SPARQL: SELECT ?answer WHERE { wd:Q75847 wdt:P19 ?answer . ?answer wdt:P190 wd:Q168929}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Harald zur Hausen', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Campo Grande'}}

 Q: what is the {start time} for {European Union} has {official language} as {Irish} ?
 SPARQL: SELECT ?value WHERE { wd:Q458 p:P37 ?s . ?s ps:P37 wd:Q9142 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'official language', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'official language', 'o': 'Irish'}}}

 Q: What is {member of} of {Aleksandr Lyapunov}, that has {category for employees of the organization} is {Category:Corresponding Members of the St Petersburg Academy of Sciences} ?
 SPARQL: SELECT ?answer WHERE { wd:Q310788 wdt:P463 ?answer . ?answer wdt:P4195 wd:Q10001070}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Aleksandr Lyapunov', 'p': 'member of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category for employees of the organization', 'o': 'Category:Corresponding Members of the St Petersburg Academy of Sciences'}}

 Q: Which  is taxonomic type of Bactrian camel ?
 SPARQL: select distinct ?answer where { ?answer wdt:P427 wd:Q132922}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'taxonomic type', 'o': 'Bactrian camel'}

 Q: Which child of John Adams died on February 23, 1848?
 SPARQL: SELECT ?obj WHERE { wd:Q11806 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?x filter(contains(YEAR(?x),'1848')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Adams', 'p': 'child', 'o': '?x0', 't': '1848'}

 Q: What is {position held} of {Nikos Kazantzakis} that is {end time} is {1946-1-11} ?
 SPARQL: SELECT ?obj WHERE { wd:Q214622 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1946')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nikos Kazantzakis', 'p': 'position held', 'o': '?x0', 't': '1946'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Eric Cantona} has {member of sports team} as {Leeds United F.C.}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q170328 p:P54 ?s . ?s ps:P54 wd:Q1128631 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Cantona', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Leeds United F.C.'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eric Cantona', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Leeds United F.C.'}}}]

 Q: What award did Irenäus Eibl-Eibesfeldt receive on January 1st, 1988?
 SPARQL: SELECT ?obj WHERE { wd:Q78755 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1988')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Irenäus Eibl-Eibesfeldt', 'p': 'award', 'o': '?x0', 't': '1988'}

 Q: Which trans-Neptunian object has the most argument of periapsis?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6592 . ?ent wdt:P2248 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'argument of periapsis', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'trans-Neptunian object'}}

 Q: Which is the danskefilm animated film ID for Toy Story?
 SPARQL: select distinct ?answer where { wd:Q171048 wdt:P4021 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Toy Story', 'p': 'danskefilm animated film ID', 'o': '?x0'}

 Q: What is {admin HQ} of {Fédération Aéronautique Internationale}, that has {adjacent to} is {Prilly} ?
 SPARQL: SELECT ?answer WHERE { wd:Q214130 wdt:P159 ?answer . ?answer wdt:P47 wd:Q69757}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Fédération Aéronautique Internationale', 'p': 'HQ', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'adjacent to', 'o': 'Prilly'}}

 Q: Did {0} {said to be the same as} {signed zero}?
 SPARQL: ASK WHERE { wd:Q204 wdt:P460 wd:Q217675 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'zero', 'p': 'same as', 'o': '?x0', '?x0': 'signed zero'}]

 Q: Is the dynamic viscosity of the argon equal 18.16?
 SPARQL: ASK WHERE { wd:Q696 wdt:P3070 ?obj filter(?obj = 18.16) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'argon', 'p': 'dynamic viscosity', 'o': '?x0', '?x0': '18.16'}

 Q: What is the {city} for {coextensive with} of {Tallinn}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3403 wd:Q1770 . ?sbj wdt:P31 wd:Q21583365 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'coextensive with', 'o': 'Tallinn', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: What is Theses.fr person ID for Pierre Bourdieu ?
 SPARQL: select distinct ?answer where { wd:Q156268 wdt:P4285 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pierre Bourdieu', 'p': 'Theses.fr person ID', 'o': '?x0'}

 Q: Was Charles Dickens father John Dickens?
 SPARQL: ASK WHERE { wd:Q5686 wdt:P22 wd:Q4166950 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Charles Dickens', 'p': 'father', 'o': '?x0', '?x0': 'John Dickens'}]

 Q: What is {has influence} of {written by} of {Dancing Girls & Other Stories} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5215475 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has influence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dancing Girls & Other Stories', 'p': 'author', 'o': '$y0'}}

 Q: Which is replaced by Shanxi?
 SPARQL: select distinct ?answer where { ?answer wdt:P1366 wd:Q46913}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced by', 'o': 'Shanxi'}

 Q: Which are the authors of the New Testament that they profession is writer?
 SPARQL: SELECT ?answer WHERE { wd:Q18813 wdt:P50 ?answer . ?answer wdt:P106 wd:Q36180}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'New Testament', 'p': 'author', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'profession', 'o': 'writer'}}

 Q: IS THE NUMBER OF VICTIMS OF KILLER OF THE NORIO NAGAYAMA EQUALS 4
 SPARQL: ASK WHERE { wd:Q1142305 wdt:P1345 ?obj filter(?obj = 4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Norio Nagayama', 'p': 'number of victims of killer', 'o': '?x0', '?x0': '4'}

 Q: what is the {start time} for {Bill Gates} has {position held} as {chief executive officer} ?
 SPARQL: SELECT ?value WHERE { wd:Q5284 p:P39 ?s . ?s ps:P39 wd:Q484876 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bill Gates', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Chief executive officer'}}}

 Q: What is the {biopharmaceutical} with the {MAX(defined daily dose)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q679692 . ?ent wdt:P4250 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'defined daily dose', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biopharmaceutical'}}

 Q: What is the {conflict} for {time period} of {Three Kingdoms}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2348 wd:Q185043 . ?sbj wdt:P31 wd:Q180684 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Three Kingdoms', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'conflict'}}

 Q: What is the TMDb movie ID of The Birds?
 SPARQL: select distinct ?answer where { wd:Q110043 wdt:P4947 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Birds', 'p': 'TMDb movie ID', 'o': '?x0'}

 Q: Is time travel a superhuman feature or ability?
 SPARQL: select distinct ?answer where { ?answer wdt:P2563 wd:Q182154}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'superhuman feature or ability', 'o': 'time travel'}

 Q: What is {spouse} of {Yuri Andropov} that is {end time} is {1984-2-9} ?
 SPARQL: SELECT ?obj WHERE { wd:Q44071 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1984')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Yuri Andropov', 'p': 'spouse', 'o': '?x0', 't': '1984'}

 Q: How many {exemplar of} are to/by {New Testament} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1574 wd:Q18813 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'exemplar of', 'o': 'New Testament'}

 Q: Who is the manager/director of Heinrich Himmler?
 SPARQL: select distinct ?answer where { ?answer wdt:P1037 wd:Q43067}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'manager', 'o': 'Heinrich Himmler'}

 Q: What is the {kabushiki gaisha} for {subsidiary} of {Nissan}
 SPARQL:  select distinct ?obj where { wd:Q20165 wdt:P355 ?obj . ?obj wdt:P31 wd:Q1480166 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nissan', 'p': 'subsidiary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'kabushiki gaisha'}}

 Q: What is {words by} of {list of tracks} of {Le chant des sirènes} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3221012 wdt:P658 ?X . ?X wdt:P676 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'words by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Le chant des sirènes', 'p': 'list of tracks', 'o': '$y0'}}

 Q: What is {member of crew of} of {prequel of} of {Gemini 6A} ?
 SPARQL: SELECT ?answer WHERE { wd:Q378306 wdt:P156 ?X . ?X wdt:P1029 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of crew of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gemini 6A', 'p': 'prequel of', 'o': '$y0'}}

 Q: Does the tensile modulus of elasticity of AKROLOY PARA ICF 40 equals 38000
 SPARQL: ASK WHERE { wd:Q57273218 wdt:P5480 ?obj filter(?obj = 38000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AKROLOY PARA ICF 40', 'p': 'tensile modulus of elasticity', 'o': '?x0', '?x0': '38000'}

 Q: What is {introduced} of {from} of {International Practical Shooting Confederation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1666824 wdt:P740 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'introduced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'International Practical Shooting Confederation', 'p': 'from', 'o': '$y0'}}

 Q: What is {causes} of {wage}, that has {since} is {1830-8-28} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6821213 wdt:P1542 ?answer . ?answer wdt:P580 ?x FILTER(contains(YEAR(?x),'1830'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'wage', 'p': 'causes', 'o': '?x0', 't': '1830'}

 Q: What is interaction of gravity ?
 SPARQL: select distinct ?answer where { ?answer wdt:P517 wd:Q11412}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'gravity'}

 Q: Which is the military branch of Roland Garros?
 SPARQL: select distinct ?answer where { wd:Q207709 wdt:P241 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Roland Garros', 'p': 'military branch', 'o': '?x0'}

 Q: What is the {human} for {head of state} of {Tenochtitlan}
 SPARQL:  select distinct ?obj where { wd:Q13695 wdt:P35 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Tenochtitlan', 'p': 'leader', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {headquarters location} of {Erasmus University Rotterdam} that is {country} is {Netherlands} ?
 SPARQL: SELECT ?obj WHERE { wd:Q633529 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P17 wd:Q55 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'headquarters location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erasmus University Rotterdam', 'p': 'headquarters location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'land', 'o': 'Netherlands'}}}

 Q: What is {performer} of {Abraham Van Helsing} that is {of} is {Dracula 3D} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1622359 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q2058835 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'performer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abraham Van Helsing', 'p': 'performer', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Dracula 3D'}}}

 Q: Did {Wales} {legislative body} {Parliament of the United Kingdom}?
 SPARQL: ASK WHERE { wd:Q25 wdt:P194 wd:Q11010 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Wales', 'p': 'legislative body', 'o': '?x0', '?x0': 'Parliament of the United Kingdom'}]

 Q: Name a philosophical movement that contains the word " yangmingism" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2915955 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'yangmingism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'philosophical movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'yangmingism'}}

 Q: which  candidate of John Howard?
 SPARQL: select distinct ?answer where { ?answer wdt:P726 wd:Q51330}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'candidate', 'o': 'John Howard'}

 Q: What is associated with the aspect of archaeogenetics?
 SPARQL: SELECT ?answer WHERE { wd:Q636489 wdt:P1269 ?X . ?X wdt:P3095 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'associated with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'archaeogenetics', 'p': 'aspect of', 'o': '$y0'}}

 Q: what is the {together with} for {William Hanna} has {award received} as {star on Hollywood Walk of Fame} ?
 SPARQL: SELECT ?value WHERE { wd:Q263324 p:P166 ?s . ?s ps:P166 wd:Q17985761 . ?s pq:P1706 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'together with', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Hanna', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'star on Hollywood Walk of Fame'}}}

 Q: What is {place of birth} of {Sergei Rachmaninoff} that is {country} is {Russian Empire} ?
 SPARQL: SELECT ?obj WHERE { wd:Q131861 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q34266 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'born in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sergei Rachmaninoff', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Russian Empire'}}}

 Q: Which is the distributor for The Gold Rush?
 SPARQL: select distinct ?answer where { wd:Q214723 wdt:P750 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Gold Rush', 'p': 'distributor', 'o': '?x0'}

 Q: Give me the start time for Xi'an has twinned administrative body as Dortmund ?
 SPARQL: SELECT ?value WHERE { wd:Q5826 p:P190 ?s . ?s ps:P190 wd:Q1295 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Xi'an", 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Dortmund'}}}

 Q: What is {disciple of} of {professional partner} of {Radka Kovaříková} ?
 SPARQL: SELECT ?answer WHERE { wd:Q459898 wdt:P1327 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'disciple of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Radka Kovaříková', 'p': 'professional partner', 'o': '$y0'}}

 Q: What is <seed dispersal> of <Arabidopsis thaliana> ?
 SPARQL: select distinct ?answer where { wd:Q158695 wdt:P3741 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arabidopsis thaliana', 'p': 'seed dispersal', 'o': '?x0'}

 Q: What is {start time} and {end time} of {{Chrissie Hynde} has {spouse} as {Jim Kerr}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q239202 p:P26 ?s . ?s ps:P26 wd:Q115049 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chrissie Hynde', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Jim Kerr'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'to', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chrissie Hynde', 'p': 'married to', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'married to', 'o': 'Jim Kerr'}}}]

 Q: What is {won by} of {awarded} of {Fred Ebb} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1274807 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'won by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fred Ebb', 'p': 'award', 'o': '$y0'}}

 Q: What is {manufacturer of} of {subsidiary company} of {National Aeronautics and Space Administration} ?
 SPARQL: SELECT ?answer WHERE { wd:Q23548 wdt:P355 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manufacturer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'National Aeronautics and Space Administration', 'p': 'subsidiary', 'o': '$y0'}}

 Q: How many things published in {Naturwissenschaften} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1433 wd:Q324878 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'Naturwissenschaften'}

 Q: What is {manufactures} of {superior formation} of {Mitsui Chemicals (Germany)} ?
 SPARQL: SELECT ?answer WHERE { wd:Q30714323 wdt:P749 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manufactures', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mitsui Chemicals (Germany)', 'p': 'superior formation', 'o': '$y0'}}

 Q: Which is educated at the University of Stuttgart?
 SPARQL: select distinct ?answer where { ?answer wdt:P69 wd:Q122453}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'educated at', 'o': 'University of Stuttgart'}

 Q: What is {member of party} of {informed by} of {Philip Roth} ?
 SPARQL: SELECT ?answer WHERE { wd:Q187019 wdt:P737 ?X . ?X wdt:P102 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'party', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip Roth', 'p': 'informed by', 'o': '$y0'}}

 Q: What is <IMA status and/or rank> of <diopside> ?
 SPARQL: select distinct ?answer where { wd:Q316671 wdt:P579 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diopside', 'p': 'IMA status and/or rank', 'o': '?x0'}

 Q: What is {deathplace} of {Mikhail Skobelev}, that has {borders} is {Kaluga Oblast} ?
 SPARQL: SELECT ?answer WHERE { wd:Q57173 wdt:P20 ?answer . ?answer wdt:P47 wd:Q2842}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mikhail Skobelev', 'p': 'deathplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'border', 'o': 'Kaluga Oblast'}}

 Q: what is the {statement supported by} for {El Salvador} has {has quality} as {free country} ?
 SPARQL: SELECT ?value WHERE { wd:Q792 p:P1552 ?s . ?s ps:P1552 wd:Q3174312 . ?s pq:P3680 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement supported by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'El Salvador', 'p': 'has quality', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'has quality', 'o': 'free country'}}}

 Q: Give me {animated series} that {executive producer} {Ken Keeler} and which that starts with {'f'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581714 . ?sbj wdt:P1431 wd:Q1339527 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'f')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive producer', 'o': 'Ken Keeler'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'f'}}

 Q: how many medical conditions lead to a brain tumor?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1050 wd:Q233309 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'medical condition', 'o': 'brain tumor'}

 Q: What is {award received} of {Beyoncé} that is {for work} is {Obsessed} ?
 SPARQL: SELECT ?obj WHERE { wd:Q36153 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1686 wd:Q149358 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Beyoncé', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Obsessed'}}}

 Q: Which is measured by Young's modulus?
 SPARQL: select distinct ?answer where { wd:Q2091584 wdt:P1880 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Young's modulus", 'p': 'measured by', 'o': '?x0'}

 Q: Which Euring number for Long-tailed Duck ?
 SPARQL: select distinct ?answer where { wd:Q26597 wdt:P3459 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Long-tailed Duck', 'p': 'Euring number', 'o': '?x0'}

 Q: What is the {city of the United States} for {twinned administrative body} of {Mumbai}
 SPARQL:  select distinct ?obj where { wd:Q1156 wdt:P190 ?obj . ?obj wdt:P31 wd:Q1093829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mumbai', 'p': 'twinned administrative body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States'}}

 Q: Did {Fentanyl} {subject has role} {narcotic}?
 SPARQL: ASK WHERE { wd:Q407541 wdt:P2868 wd:Q940 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Fentanyl', 'p': 'subject has role', 'o': '?x0', '?x0': 'narcotic'}]

 Q: What was Bewitched nominated for in 1967?
 SPARQL: SELECT ?obj WHERE { wd:Q1044635 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1967')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bewitched', 'p': 'nominated for', 'o': '?x0', 't': '1967'}

 Q: what is the {start time} for {Landon Donovan} has {member of sports team} as {Everton F.C.} ?
 SPARQL: SELECT ?value WHERE { wd:Q202237 p:P54 ?s . ?s ps:P54 wd:Q5794 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Landon Donovan', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Everton F.C.'}}}

 Q: Does the main voltage of Denmark equal 230
 SPARQL: ASK WHERE { wd:Q35 wdt:P2884 ?obj filter(?obj = 230) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Denmark', 'p': 'mains voltage', 'o': '?x0', '?x0': '230'}

 Q: What is {position held} of {Frank B. Kellogg} that is {start time} is {1925-3-5} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193009 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1925')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frank B. Kellogg', 'p': 'position held', 'o': '?x0', 't': '1925'}

 Q: How many {storyboard artist} are for {The Lion King} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q36479 wdt:P3275 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Lion King', 'p': 'storyboard artist', 'o': '?x0'}

 Q: Which is the Europeana Fashion Vocabulary ID for handkerchief?
 SPARQL: select distinct ?answer where { wd:Q192411 wdt:P3832 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'handkerchief', 'p': 'Europeana Fashion Vocabulary ID', 'o': '?x0'}

 Q: what is the {start time} for {Arthur Cayley} has {member of} as {Royal Astronomical Society} ?
 SPARQL: SELECT ?value WHERE { wd:Q159430 p:P463 ?s . ?s ps:P463 wd:Q753299 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Cayley', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Royal Astronomical Society'}}}

 Q: What award did Barbara McClintock receive in December of 1981?
 SPARQL: SELECT ?obj WHERE { wd:Q199654 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1981')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barbara McClintock', 'p': 'award', 'o': '?x0', 't': '1981'}

 Q: what is the {start time} for {Willy Brandt} has {country of citizenship} as {Norway} ?
 SPARQL: SELECT ?value WHERE { wd:Q2514 p:P27 ?s . ?s ps:P27 wd:Q20 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Willy Brandt', 'p': 'citizen of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizen of', 'o': 'Norway'}}}

 Q: who peace prize for award received of Linus Pauling?
 SPARQL:  select distinct ?obj where { wd:Q48983 wdt:P166 ?obj . ?obj wdt:P31 wd:Q15383394 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Linus Pauling', 'p': 'award received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'peace prize'}}

 Q: Which is the prize money of Venus Williams?
 SPARQL: select distinct ?answer where { wd:Q11578 wdt:P2121 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Venus Williams', 'p': 'prize money', 'o': '?x0'}

 Q: What is KIT Linked Open Numbers ID for 1 ?
 SPARQL: select distinct ?answer where { wd:Q199 wdt:P5176 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': '1', 'p': 'KIT Linked Open Numbers ID', 'o': '?x0'}

 Q: What is the discography for Justin Timberlake's discography?
 SPARQL:  select distinct ?obj where { wd:Q43432 wdt:P358 ?obj . ?obj wdt:P31 wd:Q273057 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Justin Timberlake', 'p': 'discography', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'discography'}}

 Q: What is the holding company owned by Black Rock with the highest total assets?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q219577 . ?ent wdt:P2403 ?obj . ?ent wdt:P127 wd:Q219635 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'total assets', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'holding company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'owned by', 'o': 'BlackRock'}}}

 Q: Is the specific rotation of Eu(hfc)3 greater than 189.6?
 SPARQL: ASK WHERE { wd:Q61675352 wdt:P6272 ?obj filter(?obj > 189.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Eu(hfc)3', 'p': 'specific rotation', 'o': '?x0', '?x0': '189.6'}

 Q: What is <Tennis Australia player ID> of <Evonne Goolagong Cawley> ?
 SPARQL: select distinct ?answer where { wd:Q228559 wdt:P3698 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Evonne Goolagong Cawley', 'p': 'Tennis Australia player ID', 'o': '?x0'}

 Q: What is {follows} and {followed by} of {{Communist Party of China} has {chairperson} as {Hu Yaobang}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q17427 p:P488 ?s . ?s ps:P488 wd:Q99850 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Hu Yaobang'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'followed by', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Communist Party of China', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Hu Yaobang'}}}]

 Q: what is the {point in time} for {Tarapacá Region} has {male population} as {167793.0} ?
 SPARQL: SELECT ?value WHERE { wd:Q2114 p:P1540 ?s . ?s ps:P1540 ?x filter(contains(?x,'167793.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tarapacá Region', 'p': 'male population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'male population', 'o': '167793.0'}, 't': '?x0'}

 Q: Which is the bus station for the place served by transport hub of Belgrade?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P931 wd:Q3711 . ?sbj wdt:P31 wd:Q494829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'place served by transport hub', 'o': 'Belgrade', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bus station'}}

 Q: What is {followed by} and {follows} of {{Louis II of Italy} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q215204 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis II of Italy', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: When was Giosuè Carducci nominated for the Nobel Prize in Literature?
 SPARQL: SELECT ?value WHERE { wd:Q43440 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Giosuè Carducci', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What is Jeff Foxworthy's political party, whose emblem is an elephant?
 SPARQL: SELECT ?answer WHERE { wd:Q2449557 wdt:P102 ?answer . ?answer wdt:P2238 wd:Q7378}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jeff Foxworthy', 'p': 'party', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'emblem', 'o': 'elephant'}}

 Q: Give me {system} that {follows} {Ediacaran} and which contains the word {cambrian} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q403523 . ?sbj wdt:P155 wd:Q188654 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cambrian')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'system', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'Ediacaran'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cambrian'}}

 Q: What is Bernhard Schlink's notable work from the year 2000?
 SPARQL: SELECT ?obj WHERE { wd:Q76699 p:P800 ?s . ?s ps:P800 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bernhard Schlink', 'p': 'notable work', 'o': '?x0', 't': '2000'}

 Q: What is {place of birth} of {Ryan Gosling} that is {country} is {Ontario} ?
 SPARQL: SELECT ?obj WHERE { wd:Q193815 p:P19 ?s . ?s ps:P19 ?obj . ?s pq:P17 wd:Q1904 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ryan Gosling', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Ontario'}}}

 Q: What is { Berlin's twinned administrative body } that is { start time } is { 1992 - 8 - 28 }?
 SPARQL: SELECT ?obj WHERE { wd:Q64 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1992')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Berlin', 'p': 'twinned administrative body', 'o': '?x0', 't': '1992'}

 Q: Which is encoded by L-Tyrosine?
 SPARQL: select distinct ?answer where { wd:Q188017 wdt:P702 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'L-Tyrosine', 'p': 'encoded by', 'o': '?x0'}

 Q: Are the ballots cast in the Catalan regional election of 2015 in Rajadell equal to 368?
 SPARQL: ASK WHERE { wd:Q44914133 wdt:P1868 ?obj filter(?obj = 368) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Catalan regional election 2015 in Rajadell', 'p': 'ballots cast', 'o': '?x0', '?x0': '368'}

 Q: What is {student of} and {academic degree} of {{Vladimir Putin} has {educated at} as {Saint Petersburg State University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q7747 p:P69 ?s . ?s ps:P69 wd:Q27621 . ?s pq:P1066 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'student of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Saint Petersburg State University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Putin', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Saint Petersburg State University'}}}]

 Q: What is {position held} of {George III of Great Britain} that is {replaces} is {George II of Great Britain} ?
 SPARQL: SELECT ?obj WHERE { wd:Q127318 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q131981 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'George III of Great Britain', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'George II of Great Britain'}}}

 Q: How many means of locomotion are powered by bipedalism?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3512 wd:Q372949 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'means of locomotion', 'o': 'bipedalism'}

 Q: In what year was Henri Becquerel nominated for a Nobel Prize in Physics?
 SPARQL: SELECT ?value WHERE { wd:Q41269 p:P1411 ?s . ?s ps:P1411 wd:Q38104 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Henri Becquerel', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physics'}, 't': '?x0'}

 Q: Give me {condition} that {facet of} {meteorology} and which that starts with {'d'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q813912 . ?sbj wdt:P1269 wd:Q25261 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'd')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'condition', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'meteorology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'd'}}

 Q: what is the {start time} for {Jules Verne} has {educated at} as {lycée Georges-Clemenceau} ?
 SPARQL: SELECT ?value WHERE { wd:Q33977 p:P69 ?s . ?s ps:P69 wd:Q3268696 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jules Verne', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'lycee Georges-Clemenceau'}}}

 Q: When did child of Pedro I and mother?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0'}}]

 Q: what is the {end time} for {Margaret Court} has {member of sports team} as {Australia Fed Cup team} ?
 SPARQL: SELECT ?value WHERE { wd:Q202342 p:P54 ?s . ?s ps:P54 wd:Q782909 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Margaret Court', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Australia Fed Cup team'}}}

 Q: Which is the Bloomberg person ID for Gwyneth Paltrow?
 SPARQL: select distinct ?answer where { wd:Q34460 wdt:P3052 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gwyneth Paltrow', 'p': 'Bloomberg person ID', 'o': '?x0'}

 Q: What is <OKATO ID> of <Kaliningrad> ?
 SPARQL: select distinct ?answer where { wd:Q1829 wdt:P721 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kaliningrad', 'p': 'OKATO ID', 'o': '?x0'}

 Q: Tell me about ancient civilization for narrative location of Exodus?
 SPARQL:  select distinct ?obj where { wd:Q9190 wdt:P840 ?obj . ?obj wdt:P31 wd:Q28171280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Exodus', 'p': 'narrative location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ancient civilization'}}

 Q: What is {doctoral advisor} and {doctoral thesis} of {{Carl Sagan} has {educated at} as {University of Chicago}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q410 p:P69 ?s . ?s ps:P69 wd:Q131252 . ?s pq:P184 ?value1 . ?s pq:P1026 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Sagan', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'thesis', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Sagan', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Chicago'}}}]

 Q: Is it true that the number of matches played/races/starts of Jesse Schultz equals to 2?
 SPARQL: ASK WHERE { wd:Q464917 wdt:P1350 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Jesse Schultz', 'p': 'number of matches played/races/starts', 'o': '?x0', '?x0': '2'}

 Q: What is the {location of formation} and the {present in work} of {New_York_Stock_Exchange} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q13677 wdt:P740 ?ans_1 . wd:Q13677 wdt:P1441 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'New York Stock Exchange', 'p': 'location of formation', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'New York Stock Exchange', 'p': 'present in work', 'o': '?x1'}]

 Q: Is the duration of 666 less than .8?
 SPARQL: ASK WHERE { wd:Q505 wdt:P2047 ?obj filter(?obj < 0.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '666', 'p': 'duration', 'o': '?x0', '?x0': '0.8'}

 Q: what is the {end time} for {Ossie Davis} has {educated at} as {Howard University} ?
 SPARQL: SELECT ?value WHERE { wd:Q515632 p:P69 ?s . ?s ps:P69 wd:Q1068752 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ossie Davis', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Howard University'}}}

 Q: What what isstate or insular area capital in the United States highest point Crown Hill Cemetery  and alsowhich that starts with i
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21518270 . ?sbj wdt:P610 wd:Q5189371 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state or insular area capital in the United States', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest point', 'o': 'Crown Hill Cemetery'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: what is population of Nukus that is point in time in the year 1979?
 SPARQL: SELECT ?obj WHERE { wd:Q489898 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1979')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nukus', 'p': 'population', 'o': '?x0', 't': '1979'}

 Q: What is {nominee for} of {Urho Kekkonen}, that has {top dog} is {Juan Manuel Santos} ?
 SPARQL: SELECT ?answer WHERE { wd:Q179858 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q57311}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Urho Kekkonen', 'p': 'nominee for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'top dog', 'o': 'Juan Manuel Santos'}}

 Q: What is the {human} for {family} of {Maurya Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P53 wd:Q62943 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'family', 'o': 'Maurya Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {award received} of {Theodor Mommsen} and {prize money}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q25351 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodor Mommsen', 'p': 'award received', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award received', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodor Mommsen', 'p': 'award received', 'o': '$y0'}}]

 Q: What is the {city of the United States} for {twinned administrative body} of {Thessaloniki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q17151 . ?sbj wdt:P31 wd:Q1093829 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Thessaloniki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of the United States'}}

 Q: Is the lower limit of the set of non-negative integers 0?
 SPARQL: ASK WHERE { wd:Q47007719 wdt:P5447 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'set of non-negative integers', 'p': 'lower limit', 'o': '?x0', '?x0': '0'}

 Q: How many {number of cases} are for {malaria} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q12156 wdt:P1603 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'malaria', 'p': 'number of cases', 'o': '?x0'}

 Q: How many bachelor's degrees have been earned?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P512 wd:Q163727 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'degree', 'o': "bachelor's degree"}

 Q: Who replaced Javier Maroto as mayor of Vitoria-Gasteiz?
 SPARQL: SELECT ?value WHERE { wd:Q14318 p:P6 ?s . ?s ps:P6 wd:Q636917 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vitoria-Gasteiz', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Javier Maroto'}}}

 Q: where is tributary  located on body of water of Nagoya ?
 SPARQL: SELECT ?answer WHERE { wd:Q11751 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nagoya', 'p': 'located on body of water', 'o': '$y0'}}

 Q: what is the {end cause} for {Tomás de Torquemada} has {position held} as {Inquisitor General of Spain} ?
 SPARQL: SELECT ?value WHERE { wd:Q210735 p:P39 ?s . ?s ps:P39 wd:Q24349070 . ?s pq:P1534 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tomás de Torquemada', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Inquisitor General of Spain'}}}

 Q: Which team did Wasim Akram play for in 2003?
 SPARQL: SELECT ?obj WHERE { wd:Q982801 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Wasim Akram', 'p': 'team', 'o': '?x0', 't': '2003'}

 Q: What is {present at} of {Gerhard Schröder}, that has {attendee} is {Horst Seehofer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2530 wdt:P1344 ?answer . ?answer wdt:P710 wd:Q44612}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gerhard Schröder', 'p': 'present at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'attendee', 'o': 'Horst Seehofer'}}

 Q: What is {telephone code} of {garrison} of {Major League Baseball} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1163715 wdt:P159 ?X . ?X wdt:P473 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'telephone code', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'MLB', 'p': 'garrison', 'o': '$y0'}}

 Q: What was the role of Dragon Ball Z as the voice actor for Masako Nozawa?
 SPARQL: SELECT ?value WHERE { wd:Q477916 p:P725 ?s . ?s ps:P725 wd:Q259422 . ?s pq:P453 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dragon Ball Z', 'p': 'voice actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'voice actor', 'o': 'Masako Nozawa'}}}

 Q: What is <this taxon is source of> of <Carthamus tinctorius> ?
 SPARQL: select distinct ?answer where { wd:Q156625 wdt:P1672 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Carthamus tinctorius', 'p': 'this taxon is source of', 'o': '?x0'}

 Q: What is {followed by} and {follows} of {{Guy of Lusignan} has {noble title} as {count of Jaffa and Ascalon}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q294192 p:P97 ?s . ?s ps:P97 wd:Q52160370 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'count of Jaffa and Ascalon'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Guy of Lusignan', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'count of Jaffa and Ascalon'}}}]

 Q: Is it true that the ulimate tensile strength of teh AKROLOY PARA ICF 40 equals to 255?
 SPARQL: ASK WHERE { wd:Q57273218 wdt:P5479 ?obj filter(?obj = 255) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AKROLOY PARA ICF 40', 'p': 'ultimate tensile strength', 'o': '?x0', '?x0': '255'}

 Q: What is {found guilty of} of {renter} of {Carrie Nation House} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5046278 wdt:P466 ?X . ?X wdt:P1399 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'guilty of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carrie Nation House', 'p': 'renter', 'o': '$y0'}}

 Q: what is the {replaced by} for {William Pitt, 1st Earl of Chatham} has {position held} as {Prime Minister of the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q208663 p:P39 ?s . ?s ps:P39 wd:Q14211 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Pitt, 1st Earl of Chatham', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of the United Kingdom'}}}

 Q: Was Christopher Plummer's given name Robert?
 SPARQL: ASK WHERE { wd:Q190523 wdt:P735 wd:Q1084472 . wd:Q190523 wdt:P735 wd:Q4927937 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Christopher Plummer', 'p': 'given name', 'o': '?x0', '?x0': 'Christopher'}, {'h': 'IS', 'v': '?x1', 's': 'Christopher Plummer', 'p': 'given name', 'o': '?x1', '?x1': 'Robert'}]

 Q: what is the {point in time} for {Guiding Light} has {award received} as {Daytime Emmy Award for Outstanding Drama Series Writing Team} ?
 SPARQL: SELECT ?value WHERE { wd:Q1145764 p:P166 ?s . ?s ps:P166 wd:Q5243445 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Guiding Light', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Daytime Emmy Award for Outstanding Drama Series Writing Team'}, 't': '?x0'}

 Q: What is the numeric value of 0?
 SPARQL: select distinct ?answer where { wd:Q204 wdt:P1181 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'o', 'p': 'numeric value', 'o': '?x0'}

 Q: Can you tell me which earthquake had the lowest number of aftershocks in Bangladesh?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7944 . ?ent wdt:P2320 ?obj . ?ent wdt:P17 wd:Q902} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'aftershocks', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'earthquake', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Bangladesh'}}}

 Q: When did Monica Seles receive the award for International Tennis Hall of Fame?
 SPARQL: SELECT ?value WHERE { wd:Q173633 p:P166 ?s . ?s ps:P166 wd:Q52454 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Monica Seles', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'International Tennis Hall of Fame'}, 't': '?x0'}

 Q: Who did Frida Kahlo marry on November 11, 1939?
 SPARQL: SELECT ?obj WHERE { wd:Q5588 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1939')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Frida Kahlo', 'p': 'marry', 'o': '?x0', 't': '1939'}

 Q: What is the {rock band} for {genre} of {hard rock}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P136 wd:Q83270 . ?sbj wdt:P31 wd:Q5741069 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'genre', 'o': 'hard rock', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'rock band'}}

 Q: Which is the French diocesan architects ID for Eugène Viollet-le-Duc?
 SPARQL: select distinct ?answer where { wd:Q272912 wdt:P2385 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Eugène Viollet-le-Duc', 'p': 'French diocesan architects ID', 'o': '?x0'}

 Q: What is the {fictional universe} for {fictional universe described in} of {Grand Theft Auto}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1445 wd:Q132730 . ?sbj wdt:P31 wd:Q559618 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'fictional universe described in', 'o': 'Grand Theft Auto', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional universe'}}

 Q: what is the {award received} for {Johnny Weissmuller} has {participant of} as {1928 Summer Olympics} ?
 SPARQL: SELECT ?value WHERE { wd:Q151284 p:P1344 ?s . ?s ps:P1344 wd:Q8138 . ?s pq:P166 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johnny Weissmuller', 'p': 'participant of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'participant of', 'o': '1928 Summer Olympics'}}}

 Q: What is {antonym of} of {due to} of {anti-austerity movement in Greece} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1511107 wdt:P828 ?X . ?X wdt:P461 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'opposite of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'anti-austerity movement in Greece', 'p': 'due to', 'o': '$y0'}}

 Q: Does the frequency of event of NIFL Premiership equals 0.8
 SPARQL: ASK WHERE { wd:Q277945 wdt:P2257 ?obj filter(?obj = 0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'NIFL Premiership', 'p': 'frequency of event', 'o': '?x0', '?x0': '0.8'}

 Q: What is the diplomatic relation of Lebanon, who is right and has rule of the road?
 SPARQL: SELECT ?answer WHERE { wd:Q822 wdt:P530 ?answer . ?answer wdt:P1622 wd:Q14565199}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lebanon', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'rule of the road', 'o': 'right'}}

 Q: What is <scanned file on Wikimedia Commons> of <The Jungle Book> ?
 SPARQL: select distinct ?answer where { wd:Q189509 wdt:P996 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Jungle Book', 'p': 'scanned file on Wikimedia Commons', 'o': '?x0'}

 Q: What is {birthplace} of {Lucia Moholy}, that has {chancellor} is {Vladimír Srb} ?
 SPARQL: SELECT ?answer WHERE { wd:Q214381 wdt:P19 ?answer . ?answer wdt:P6 wd:Q4682983}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lucia Moholy', 'p': 'birthplace', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'chancellor', 'o': 'Vladimír Srb'}}

 Q: What award did Vesto Slipher receive in 1932?
 SPARQL: SELECT ?obj WHERE { wd:Q312248 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1932')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vesto Slipher', 'p': 'award', 'o': '?x0', 't': '1932'}

 Q: Which is the Yle Areena ID of Doctor Who?
 SPARQL: select distinct ?answer where { wd:Q34316 wdt:P3414 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Doctor Who', 'p': 'Yle Areena ID', 'o': '?x0'}

 Q: What is {start time} of {beer} that is {statement is subject of} is {beer in Egypt} ?
 SPARQL: SELECT ?obj WHERE { wd:Q44 p:P580 ?s . ?s ps:P580 ?obj . ?s pq:P805 wd:Q28454522 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'started in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'beer', 'p': 'started in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'beer in Egypt'}}}

 Q: What is {birth location} of {Steph Davis}, that has {has regions} is {Boone County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7608098 wdt:P19 ?answer . ?answer wdt:P150 wd:Q109756}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Steph Davis', 'p': 'birth location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has regions', 'o': 'Boone County'}}

 Q: What is the {American football stadium} for {home venue} of {Dallas Cowboys}
 SPARQL:  select distinct ?obj where { wd:Q204862 wdt:P115 ?obj . ?obj wdt:P31 wd:Q37985280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dallas Cowboys', 'p': 'home venue', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'American football stadium'}}

 Q: Is the shelf life of the July Red less than 24.0?
 SPARQL: ASK WHERE { wd:Q41454287 wdt:P4218 ?obj filter(?obj < 24.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'July Red', 'p': 'shelf life', 'o': '?x0', '?x0': '24.0'}

 Q: What is the {Wikimedia list article} for {record or record progression} of {long jump}
 SPARQL:  select distinct ?obj where { wd:Q170737 wdt:P2869 ?obj . ?obj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'long jump', 'p': 'record or record progression', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: Which is the apparent magnitude of Antares?
 SPARQL: select distinct ?answer where { wd:Q12166 wdt:P1215 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antares', 'p': 'apparent magnitude', 'o': '?x0'}

 Q: What is {location born} of {Moria Casán}, that has {subdivided into} is {Puerto Madero} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6912134 wdt:P19 ?answer . ?answer wdt:P150 wd:Q781553}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Moria Casan', 'p': 'location born', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Puerto Madero'}}

 Q: what is the {applies to part} for {Volta River} has {coordinate location} as {0.673056} ?
 SPARQL: SELECT ?value WHERE { wd:Q192415 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'0.673056')) . ?s pq:P518 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'applies to part', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Volta River', 'p': 'coordinate location', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'coordinate location', 'o': '0.673056'}}}

 Q: Tell me occupational carcinogen whose name has the word trichloropropane in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21074597 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'trichloropropane')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'occupational carcinogen'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'trichloropropane'}}

 Q: what is the {end time} for {Gioachino Rossini} has {spouse} as {Olympe Pélissier} ?
 SPARQL: SELECT ?value WHERE { wd:Q9726 p:P26 ?s . ?s ps:P26 wd:Q1986469 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gioachino Rossini', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Olympe Pélissier'}}}

 Q: What country was Trieste in in 1975?
 SPARQL: SELECT ?obj WHERE { wd:Q546 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1975')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Trieste', 'p': 'country', 'o': '?x0', 't': '1975'}

 Q: Who gave the {child body} of {companion of} of {Alpha Centauri A} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2090157 wdt:P399 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alpha Centauri A', 'p': 'companion of', 'o': '$y0'}}

 Q: who bridge for architect of Isambard Kingdom Brunel?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q207380 . ?sbj wdt:P31 wd:Q12280 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Isambard Kingdom Brunel', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bridge'}}

 Q: What is {coordinate location} of {Kasai River} that is {applies to part} is {river source} ?
 SPARQL: SELECT ?obj WHERE { wd:Q186541 p:P625 ?s . ?s ps:P625 ?obj . ?s pq:P518 wd:Q7376362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coordinates', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kasai River', 'p': 'coordinates', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'source'}}}

 Q: How many {occupant} are for {Windsor Castle} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q42646 wdt:P466 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Windsor Castle', 'p': 'occupant', 'o': '?x0'}

 Q: Are the number of graves of the North Africa American Cemetery and Memorial equal to 2841?
 SPARQL: ASK WHERE { wd:Q943021 wdt:P2351 ?obj filter(?obj = 2841) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'North Africa American Cemetery and Memorial', 'p': 'number of graves', 'o': '?x0', '?x0': '2841'}

 Q: What is the {religious text} for {has edition} of {Septuagint}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P747 wd:Q29334 . ?sbj wdt:P31 wd:Q179461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'edition', 'o': 'Septuagint', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text'}}

 Q: What time is it in the Haidian District whose time is the same as the Macau Standard Time?
 SPARQL: SELECT ?answer WHERE { wd:Q393454 wdt:P421 ?answer . ?answer wdt:P460 wd:Q996734}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Haidian District', 'p': 'time', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Macau Standard Time'}}

 Q: When is the endtime of trend of Miserere?
 SPARQL: SELECT ?answer WHERE { wd:Q1576091 wdt:P135 ?X . ?X wdt:P582 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'endtime', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Miserere', 'p': 'trend', 'o': '$y0'}}

 Q: Which is the Flora of Australia ID for Banksia?
 SPARQL: select distinct ?answer where { wd:Q131258 wdt:P3100 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Banksia', 'p': 'Flora of Australia ID', 'o': '?x0'}

 Q: What is the religious affiliation of Travancore, whose Universal Decimal Classification is 233?
 SPARQL: SELECT ?answer WHERE { wd:Q150058 wdt:P140 ?answer . ?answer wdt:P1190 ?x FILTER(contains(?x,'233'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Travancore', 'p': 'religious affiliation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Universal Decimal Classification', 'o': '233'}}

 Q: Which is the SRCBB coach ID of Mike Krzyzewski?
 SPARQL: select distinct ?answer where { wd:Q434909 wdt:P4751 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mike Krzyzewski', 'p': 'SRCBB coach ID', 'o': '?x0'}

 Q: What is {award received} of {Roman Polanski} that is {follows} is {Michael Haneke} ?
 SPARQL: SELECT ?obj WHERE { wd:Q51552 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P155 wd:Q84199 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roman Polanski', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'follows', 'o': 'Michael Haneke'}}}

 Q: What is the motto of Uwe Johnson's alma mater?
 SPARQL: SELECT ?answer WHERE { wd:Q61627 wdt:P69 ?X . ?X wdt:P1451 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'motto', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uwe Johnson', 'p': 'alma mater', 'o': '$y0'}}

 Q: Which was the sovereign state of the country of citizenship of Josip Broz Tito?
 SPARQL:  select distinct ?obj where { wd:Q9161 wdt:P27 ?obj . ?obj wdt:P31 wd:Q3624078 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Josip Broz Tito', 'p': 'country of citizenship', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sovereign state'}}

 Q: Who are the creators, who have English as their language created Prince Hamlet?
 SPARQL: SELECT ?answer WHERE { wd:Q2447542 wdt:P170 ?answer . ?answer wdt:P1412 wd:Q1860}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Prince Hamlet', 'p': 'creator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language', 'o': 'English'}}

 Q: Who is the {public educational institution of the United States} for {educated at} of {Phil Hartman}
 SPARQL:  select distinct ?obj where { wd:Q366834 wdt:P69 ?obj . ?obj wdt:P31 wd:Q23002039 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Phil Hartman', 'p': 'educated at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public educational institution of the United States'}}

 Q: What is {member of sports team} of {Steve Nash} that is {end time} is {2012-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192955 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Steve Nash', 'p': 'team', 'o': '?x0', 't': '2012'}

 Q: Which is the InPhO ID of Giambattista Vico?
 SPARQL: select distinct ?answer where { wd:Q178709 wdt:P863 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Giambattista Vico', 'p': 'InPhO ID', 'o': '?x0'}

 Q: What is {educated at} of {Julianne Moore} that is {academic degree} is {Bachelor of Fine Arts} ?
 SPARQL: SELECT ?obj WHERE { wd:Q80405 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q2878277 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Julianne Moore', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'academic degree', 'o': 'Bachelor of Fine Arts'}}}

 Q: How many fastest lap times are held by Lewis Hamilton?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P5053 wd:Q9673 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'fastest lap', 'o': 'Lewis Hamilton'}

 Q: Which is the ISO 15924 numeric code of kanji?
 SPARQL: select distinct ?answer where { wd:Q82772 wdt:P2620 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'kanji', 'p': 'ISO 15924 numeric code', 'o': '?x0'}

 Q: When did Elche have a population of 215137?
 SPARQL: SELECT ?value WHERE { wd:Q10509 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'215137.0')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Elche', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '215137.0'}, 't': '?x0'}

 Q: Which is the number of participants for UEFA European Football Championship?
 SPARQL: select distinct ?answer where { wd:Q260858 wdt:P1132 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'UEFA Euro', 'p': 'number of participants', 'o': '?x0'}

 Q: What are the group of Greek mythical characters which start with the letter thespiades
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q28061975 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'thespiades')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'group of Greek mythical characters'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'thespiades'}}

 Q: Where located the administrative territorial entity of Plutarch whose place of birth is Chaeronea?
 SPARQL: SELECT ?value WHERE { wd:Q41523 p:P19 ?s . ?s ps:P19 wd:Q549874 . ?s pq:P131 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Plutarch', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of birth', 'o': 'Chaeronea'}}}

 Q: What is {introduction} of {historical period} of {Siege of Leningrad} ?
 SPARQL: SELECT ?answer WHERE { wd:Q151860 wdt:P2348 ?X . ?X wdt:P580 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'introduction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Siege of Leningrad', 'p': 'historical period', 'o': '$y0'}}

 Q: What is {active in} of {Stella Adler}, that has {executive power headed by} is {Ardolph L. Kline} ?
 SPARQL: SELECT ?answer WHERE { wd:Q32788 wdt:P937 ?answer . ?answer wdt:P6 wd:Q4121154}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Stella Adler', 'p': 'active in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'executive power headed by', 'o': 'Ardolph L. Kline'}}

 Q: Which is the partition coefficient water/octanol of carbon tetrachloride?
 SPARQL: select distinct ?answer where { wd:Q225045 wdt:P2993 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'carbon tetrachloride', 'p': 'partition coefficient water/octanol', 'o': '?x0'}

 Q: what is the {start time} for {Georg Simon Ohm} has {member of} as {Royal Society} ?
 SPARQL: SELECT ?value WHERE { wd:Q1585 p:P463 ?s . ?s ps:P463 wd:Q123885 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georg Simon Ohm', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Royal Society'}}}

 Q: What is {continent} of {Pinatubo}, that has {pronunciation audio} is {La-cls-Asia.ogg} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1451 wdt:P30 ?answer . ?answer wdt:P443 ?x FILTER(contains(?x,'La-cls-Asia.ogg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pinatubo', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'pronunciation audio', 'o': 'la-cls-asia.ogg'}}

 Q: What is the {literary character} for {characters} of {Nineteen Eighty-Four}
 SPARQL:  select distinct ?obj where { wd:Q208460 wdt:P674 ?obj . ?obj wdt:P31 wd:Q3658341 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nineteen Eighty-Four', 'p': 'characters', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary character'}}

 Q: Tell me a first-class city that starts with the letter "m" and has the Seal of Milwaukee as its coat of arms.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15221304 . ?sbj wdt:P237 wd:Q7440568 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'm')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'first-class city', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coat of arms', 'o': 'Seal of Milwaukee'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'm'}}

 Q: What is the {museum} for {commemorates} of {Sun Yat-sen}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P547 wd:Q8573 . ?sbj wdt:P31 wd:Q33506 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commemorates', 'o': 'Sun Yat-sen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'museum'}}

 Q: What is <time of discovery or invention> of <Sierpinski triangle> ?
 SPARQL: select distinct ?answer where { wd:Q663365 wdt:P575 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sierpinski triangle', 'p': 'discovered', 'o': '?x0'}

 Q: What is the {unit of frequency} for {measured physical quantity} of {frequency}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P111 wd:Q11652 . ?sbj wdt:P31 wd:Q21162604 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'frequency', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unit of frequency'}}

 Q: What is {is in the district of} of {Rugby League International Federation}, that has {has wards} is {Armidale Dumaresq Shire} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2308450 wdt:P131 ?answer . ?answer wdt:P150 wd:Q686866}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rugby League International Federation', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has wards', 'o': 'Armidale Dumaresq Shire'}}

 Q: Who did Katy Perry get married to on 2010-10-23?
 SPARQL: SELECT ?obj WHERE { wd:Q42493 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Katy Perry', 'p': 'married to', 'o': '?x0', 't': '2010'}

 Q: The body of water in Albany has what tributary?
 SPARQL: SELECT ?answer WHERE { wd:Q24861 wdt:P206 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Albany', 'p': 'body of water', 'o': '$y0'}}

 Q: How many people are appointed by the pope?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P748 wd:Q19546 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'appointed by', 'o': 'pope'}

 Q: what is the {type of kinship} for {Magneto} has {relative} as {Joseph} ?
 SPARQL: SELECT ?value WHERE { wd:Q840291 p:P1038 ?s . ?s ps:P1038 wd:Q1771401 . ?s pq:P1039 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kinship', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Magneto', 'p': 'relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'relation', 'o': 'Joseph'}}}

 Q: What is {population} of {Kentucky} that is {determination method} is {census} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1603 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P459 wd:Q39825 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'population', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kentucky', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'determination method', 'o': 'census'}}}

 Q: What is <flower color> of <Arabidopsis thaliana> ?
 SPARQL: select distinct ?answer where { wd:Q158695 wdt:P2827 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arabidopsis thaliana', 'p': 'flower color', 'o': '?x0'}

 Q: What is the {geography of geographic location} for {geography of topic} of {Korea}
 SPARQL:  select distinct ?obj where { wd:Q18097 wdt:P2633 ?obj . ?obj wdt:P31 wd:Q46865913 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Korea', 'p': 'geography of topic', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'geography of geographic location'}}

 Q: What is {participated in conflict} of {user} of {Sverdlov-class cruiser} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2001742 wdt:P137 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'conflict', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sverdlov-class cruiser', 'p': 'user', 'o': '$y0'}}

 Q: What are the town in Croatia which start with the letter s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15105893 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'š')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'town in Croatia'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'š'}}

 Q: What is {starring} of {prequel is} of {X-Men: The Last Stand} ?
 SPARQL: SELECT ?answer WHERE { wd:Q221168 wdt:P155 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'X-Men: The Last Stand', 'p': 'prequel is', 'o': '$y0'}}

 Q: Provence was part of what country in the year 1790?
 SPARQL: SELECT ?obj WHERE { wd:Q101081 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1790')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Provence', 'p': 'country', 'o': '?x0', 't': '1790'}

 Q: What is {award received} of {The Sopranos} that is {winner} is {Martin Bruestle} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23628 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q6775070 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Sopranos', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'Martin Bruestle'}}}

 Q: What is {works at} of {author} of {No Creo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3434678 wdt:P676 ?X . ?X wdt:P108 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'works at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'No Creo', 'p': 'author', 'o': '$y0'}}

 Q: What is {academic major} and {academic degree} of {{Gloria Estefan} has {educated at} as {University of Miami}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q184697 p:P69 ?s . ?s ps:P69 wd:Q738258 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gloria Estefan', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Miami'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gloria Estefan', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'University of Miami'}}}]

 Q: How many composer are by Paco de Lucia?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P86 wd:Q153300 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'composer', 'o': 'Paco de Lucia'}

 Q: What is {manufacturer of} of {field of action} of {Ekstra M} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20643977 wdt:P452 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'manufacturer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ekstra M', 'p': 'field of action', 'o': '$y0'}}

 Q: What sport discipline starts with the letter "u"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2312410 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'u')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'sport discipline'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'u'}}

 Q: Which part of Saratov ended in 1936-12-4?
 SPARQL: SELECT ?obj WHERE { wd:Q5332 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1936')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Saratov', 'p': 'in', 'o': '?x0', 't': '1936'}

 Q: Does the 6626 mattgenge from the argument of periapsis equal to 2.12179?
 SPARQL: ASK WHERE { wd:Q72208 wdt:P2248 ?obj filter(?obj = 2.12179) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '6626 Mattgenge', 'p': 'argument of periapsis', 'o': '?x0', '?x0': '2.12179'}

 Q: which ice hockey tournament starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q18325242 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ice hockey tournament'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: What is the {business} for {developer} of {Skype}
 SPARQL:  select distinct ?obj where { wd:Q40984 wdt:P178 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Skype', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Is it true that the volume as quantity of the femtoliter equals to 0.000000001?
 SPARQL: ASK WHERE { wd:Q3312063 wdt:P2234 ?obj filter(?obj = 0.000000001) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'femtoliter', 'p': 'volume as quantity', 'o': '?x0', '?x0': '0.000000001'}

 Q: What is the {international association} for {language regulatory body} of {Latin}
 SPARQL:  select distinct ?obj where { wd:Q397 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q29300714 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Latin', 'p': 'language regulatory body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international association'}}

 Q: Is the shear modulus of titanium greater than 49.68?
 SPARQL: ASK WHERE { wd:Q716 wdt:P5673 ?obj filter(?obj > 49.68) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'titanium', 'p': 'shear modulus', 'o': '?x0', '?x0': '49.68'}

 Q: Who is the marriage partner starring The Girl Can't Help It?
 SPARQL: SELECT ?answer WHERE { wd:Q1506824 wdt:P161 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'marriage partner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "The Girl Can't Help It", 'p': 'starring', 'o': '$y0'}}

 Q: What is {people} of {written by} of {Piano Concerto No. 1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q162935 wdt:P86 ?X . ?X wdt:P172 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Piano Concerto No. 1', 'p': 'written by', 'o': '$y0'}}

 Q: What is the {intergovernmental organization} for {language regulatory body} of {Dutch}
 SPARQL:  select distinct ?obj where { wd:Q7411 wdt:P1018 ?obj . ?obj wdt:P31 wd:Q245065 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Dutch', 'p': 'language regulatory body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}}

 Q: what is legal order starts with s
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q858700 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'legal order'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: How many mountains are there for the {Lester Piggott} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q377345 wdt:P3091 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Lester Piggott', 'p': 'mount', 'o': '?x0'}

 Q: What is {place of residence} of {developer of} of {NGC 4151} ?
 SPARQL: SELECT ?answer WHERE { wd:Q942187 wdt:P61 ?X . ?X wdt:P551 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'residence', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NGC 4151', 'p': 'developer', 'o': '$y0'}}

 Q: What is the uninformed search that has the word first in the name and uses graphs.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4443425 . ?sbj wdt:P2283 wd:Q2479726 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'first')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'uninformed search', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'uses', 'o': 'graph'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'first'}}

 Q: What is pollinated by Abelmoschus esculentus?
 SPARQL: select distinct ?answer where { wd:Q80531 wdt:P1703 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Abelmoschus esculentus', 'p': 'is pollinated by', 'o': '?x0'}

 Q: How many {cover artist} are to/by {Carl Barks} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P736 wd:Q11941 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'cover artist', 'o': 'Carl Barks'}

 Q: What is {position held} of {Sitiveni Rabuka} that is {end time} is {2001-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q981549 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2001')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sitiveni Rabuka', 'p': 'position held', 'o': '?x0', 't': '2001'}

 Q: What is {date of death} and {mother} of {{Pedro I} has {child} as {Princess Januária of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q261802 . ?s pq:P570 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Januária of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'mother', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Princess Januária of Brazil'}}}]

 Q: what is the {country} for {Johan Cruyff} has {place of death} as {Barcelona} ?
 SPARQL: SELECT ?value WHERE { wd:Q17163 p:P20 ?s . ?s ps:P20 wd:Q1492 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johan Cruyff', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Barcelona'}}}

 Q: which sports has teams played  of Süreyya Özkefe ?
 SPARQL: SELECT ?answer WHERE { wd:Q19513763 wdt:P54 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sport', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Süreyya Özkefe', 'p': 'team', 'o': '$y0'}}

 Q: Who is the {concept} for {opposite of} of {sales}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P461 wd:Q194189 . ?sbj wdt:P31 wd:Q151885 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'opposite of', 'o': 'sales', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept'}}

 Q: What is {nominated for} of {Edith Evans} that is {for work} is {The Chalk Garden} ?
 SPARQL: SELECT ?obj WHERE { wd:Q236718 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1168870 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edith Evans', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The Chalk Garden'}}}

 Q: what is the translated edition of Hamlet ?
 SPARQL:  select distinct ?obj where { wd:Q41567 wdt:P747 ?obj . ?obj wdt:P31 wd:Q7553 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hamlet', 'p': 'edition', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'translate'}}

 Q: what is the {end time} for {Susan Hayward} has {spouse} as {Jess Barker} ?
 SPARQL: SELECT ?value WHERE { wd:Q248837 p:P26 ?s . ?s ps:P26 wd:Q6185913 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Susan Hayward', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Jess Barker'}}}

 Q: what is the {point in time} for {Walter Matthau} has {award received} as {Academy Award for Best Supporting Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q202172 p:P166 ?s . ?s ps:P166 wd:Q106291 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Walter Matthau', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Academy Award for Best Supporting Actor'}, 't': '?x0'}

 Q: What is {spouse} of {Glenn McGrath} and {start time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q1392178 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glenn McGrath', 'p': 'spouse', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'spouse', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glenn McGrath', 'p': 'spouse', 'o': '$y0'}}]

 Q: What is {type of film} of {preceeds} of {Zork II} ?
 SPARQL: SELECT ?answer WHERE { wd:Q511974 wdt:P156 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zork II', 'p': 'preceeds', 'o': '$y0'}}

 Q: What is the {fictional humanoid} for {mascot} of {Iron Maiden}
 SPARQL:  select distinct ?obj where { wd:Q42482 wdt:P822 ?obj . ?obj wdt:P31 wd:Q28020127 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iron Maiden', 'p': 'mascot', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fictional humanoid'}}

 Q: What are the payment types accepted for PayPal?
 SPARQL: select distinct ?answer where { ?answer wdt:P2851 wd:Q483959}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'payment types accepted', 'o': 'PayPal'}

 Q: What is {work} of {painter} of {Cultural Revolution} ?
 SPARQL: SELECT ?answer WHERE { wd:Q8690 wdt:P170 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cultural Revolution', 'p': 'painter', 'o': '$y0'}}

 Q: What is {child} of {Charlemagne} and {date of birth}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0'}}]

 Q: Which player competes in Joan Miro?
 SPARQL: SELECT ?answer WHERE { wd:Q152384 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joan Mir', 'p': 'competes in', 'o': '$y0'}}

 Q: When did Southampton cease being a country of the Kingdom of England?
 SPARQL: SELECT ?value WHERE { wd:Q79848 p:P17 ?s . ?s ps:P17 wd:Q179876 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Southampton', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Kingdom of England'}}}

 Q: What is <broadcast by> of <NTV> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P3301 wd:Q574625}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'broadcast by', 'o': 'NTV'}

 Q: What is the coat of arms of lithium's findspot?
 SPARQL: SELECT ?answer WHERE { wd:Q568 wdt:P189 ?X . ?X wdt:P237 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'coat of arms', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'lithium', 'p': 'findspot', 'o': '$y0'}}

 Q: What is <HanCinema film ID> of <Oldboy> ?
 SPARQL: select distinct ?answer where { wd:Q475693 wdt:P5108 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Oldboy', 'p': 'HanCinema film ID', 'o': '?x0'}

 Q: Which is the tracklist for A Day in the Life?
 SPARQL: select distinct ?answer where { ?answer wdt:P658 wd:Q300385}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'tracklist', 'o': 'A Day in the Life'}

 Q: What is {voice dubber} of {series} of {Futurama: The Beast with a Billion Backs} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1419091 wdt:P179 ?X . ?X wdt:P725 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'voice dubber', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Futurama: The Beast with a Billion Backs', 'p': 'series', 'o': '$y0'}}

 Q: tell me city of India that contains the word warangal in the name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q58339717 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'warangal')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city of India'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'warangal'}}

 Q: David Hilbert was a member of what in 1932?
 SPARQL: SELECT ?obj WHERE { wd:Q41585 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1932')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'David Hilbert', 'p': 'member of', 'o': '?x0', 't': '1932'}

 Q: Name the superseded scientific theory that contains the word vitalism in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4115113 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vitalism')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'superseded scientific theory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vitalism'}}

 Q: Which is the age of majority for the Philippines?
 SPARQL: select distinct ?answer where { wd:Q928 wdt:P2997 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Philippines', 'p': 'age of majority', 'o': '?x0'}

 Q: What is {master} of {Thomas Eakins}, that has {students} is {Auguste Alleaume} ?
 SPARQL: SELECT ?answer WHERE { wd:Q214905 wdt:P1066 ?answer . ?answer wdt:P802 wd:Q17621651}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Thomas Eakins', 'p': 'master', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'student', 'o': 'Auguste Alleaume'}}

 Q: What is <YouTube video ID> of <Zaha Hadid> ?
 SPARQL: select distinct ?answer where { wd:Q47780 wdt:P1651 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Zaha Hadid', 'p': 'YouTube video ID', 'o': '?x0'}

 Q: Shakira recieved this award on Feb. 8, 2006?
 SPARQL: SELECT ?obj WHERE { wd:Q34424 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2006')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shakira', 'p': 'award', 'o': '?x0', 't': '2006'}

 Q: When was the year of death of the coined of boron?
 SPARQL: SELECT ?answer WHERE { wd:Q618 wdt:P61 ?X . ?X wdt:P570 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'year of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'boron', 'p': 'coined', 'o': '$y0'}}

 Q: Which is the end period for Neolithic era?
 SPARQL: select distinct ?answer where { ?answer wdt:P3416 wd:Q36422}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'end period', 'o': 'Neolithic'}

 Q: What was Cecil Beaton nominated for in 1960?
 SPARQL: SELECT ?obj WHERE { wd:Q697096 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1960')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cecil Beaton', 'p': 'nominated for', 'o': '?x0', 't': '1960'}

 Q: What is the etymology of Society of Jesus (known as) Gesu Cristo?
 SPARQL: SELECT ?answer WHERE { wd:Q36380 wdt:P138 ?answer . ?answer wdt:P2561 ?x FILTER(contains(?x,'Gesù Cristo'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Society of Jesus', 'p': 'etymology', 'o': '?x0'}

 Q: What is the rank of a taxon parent of Sirenia?
 SPARQL: SELECT ?answer WHERE { wd:Q25431 wdt:P171 ?X . ?X wdt:P105 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'rank', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sirenia', 'p': 'taxon parent', 'o': '$y0'}}

 Q: What is {nominated for} of {Steve Buscemi} that is {for work} is {Boardwalk Empire} ?
 SPARQL: SELECT ?obj WHERE { wd:Q104061 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q585758 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Steve Buscemi', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Boardwalk Empire'}}}

 Q: what is the {end time} for {Andrew Johns} has {member of sports team} as {Newcastle Knights} ?
 SPARQL: SELECT ?value WHERE { wd:Q2846645 p:P54 ?s . ?s ps:P54 wd:Q3339101 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Andrew Johns', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Newcastle Knights'}}}

 Q: what is the {parliamentary term} for {François Mitterrand} has {position held} as {member of the French National Assembly} ?
 SPARQL: SELECT ?value WHERE { wd:Q2038 p:P39 ?s . ?s ps:P39 wd:Q3044918 . ?s pq:P2937 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'parliamentary term', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'François Mitterrand', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'member of the French National Assembly'}}}

 Q: What is {software version} of {Minecraft} that is {applies to part} is {Minecraft} ?
 SPARQL: SELECT ?obj WHERE { wd:Q49740 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P518 wd:Q49740 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'version', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Minecraft', 'p': 'version', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'Minecraft'}}}

 Q: Which is the Soccerbase manager ID of José Mourinho?
 SPARQL: select distinct ?answer where { wd:Q79983 wdt:P2195 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'José Mourinho', 'p': 'Soccerbase manager ID', 'o': '?x0'}

 Q: Who is the child of Joseph Stalin and his mother?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q855 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P25 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'mother', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Stalin', 'p': 'child', 'o': '$y0'}}]

 Q: How many {nominated for} are for {Lewis Hamilton} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9673 wdt:P1411 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Lewis Hamilton', 'p': 'nominated for', 'o': '?x0'}

 Q: Which is the newspaper format of entertainment?
 SPARQL: select distinct ?answer where { ?answer wdt:P3912 wd:Q173799}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'newspaper format', 'o': 'entertainment'}

 Q: What trend starts with the letter "z"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1514415 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'trend'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: what is the {end time} for {William Blackstone} has {position held} as {Member of Parliament in the United Kingdom} ?
 SPARQL: SELECT ?value WHERE { wd:Q332449 p:P39 ?s . ?s ps:P39 wd:Q16707842 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William Blackstone', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of Parliament'}}}

 Q: What is the employer of ASUS?
 SPARQL: select distinct ?answer where { ?answer wdt:P108 wd:Q152864}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'ASUS'}

 Q: What is the {parent taxon} and the {this taxon is source of} of {Spider} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1357 wdt:P171 ?ans_1 . wd:Q1357 wdt:P1672 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Spider', 'p': 'parent taxon', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Spider', 'p': 'this taxon is source of', 'o': '?x1'}]

 Q: What is the {state of Austria} for {twinned administrative body} of {Bern}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P190 wd:Q70 . ?sbj wdt:P31 wd:Q261543 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'twinned administrative body', 'o': 'Bern', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state of Austria'}}

 Q: What are the estates of the realm which start with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q657326 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'estates of the realm'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Which is All-Russian Mathematical Portal ID of Peter Scholze?
 SPARQL: select distinct ?answer where { wd:Q98034 wdt:P4252 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Peter Scholze', 'p': 'All-Russian Mathematical Portal ID', 'o': '?x0'}

 Q: What is {end time} and {start time} of {{Geeta Dutt} has {spouse} as {Guru Dutt}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q470416 p:P26 ?s . ?s ps:P26 wd:Q149136 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geeta Dutt', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Guru Dutt'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geeta Dutt', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Guru Dutt'}}}]

 Q: Is the sound power level of Makita 5007FK equal to 88.0
 SPARQL: ASK WHERE { wd:Q23775242 wdt:P2797 ?obj filter(?obj = 88.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Makita 5007FK', 'p': 'sound power level', 'o': '?x0', '?x0': '88.0'}

 Q: Which country has maximum age of candidacy?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6256 . ?ent wdt:P2998 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'age of candidacy', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is the {phosphate ion} for {conjugate base} of {phosphoric acid}
 SPARQL:  select distinct ?obj where { wd:Q184782 wdt:P4149 ?obj . ?obj wdt:P31 wd:Q55168228 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'phosphoric acid', 'p': 'conjugate base', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'phosphate ion'}}

 Q: What is {nominated for} of {The Bridge on the River Kwai} that is {nominee} is {Sessue Hayakawa} ?
 SPARQL: SELECT ?obj WHERE { wd:Q188718 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q382068 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Bridge on the River Kwai', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Sessue Hayakawa'}}}

 Q: Tell me ionizing radiation whose name has the word neutron in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q186161 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'neutron')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'ionizing radiation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'neutron'}}

 Q: What was the title of Financial Times in the year 1888?
 SPARQL: SELECT ?obj WHERE { wd:Q183399 p:P1476 ?s . ?s ps:P1476 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1888')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Financial Times', 'p': 'title', 'o': '?x0', 't': '1888'}

 Q: Give me {history of a country or state} that {country} {Israel} and which contains the word {history} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17544377 . ?sbj wdt:P17 wd:Q801 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'history')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'history of a country or state', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'Israel'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'history'}}

 Q: what is the {point in time} for {John Searle} has {award received} as {National Humanities Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q295012 p:P166 ?s . ?s ps:P166 wd:Q1571938 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'John Searle', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'National Humanities Medal'}, 't': '?x0'}

 Q: What is the {Donkey Kong character} for {notable work} of {Shigeru Miyamoto}
 SPARQL:  select distinct ?obj where { wd:Q12382 wdt:P800 ?obj . ?obj wdt:P31 wd:Q17564712 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Shigeru Miyamoto', 'p': 'notable work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Donkey Kong character'}}

 Q: Which  list of characters of War and Peace ?
 SPARQL: select distinct ?answer where { wd:Q161531 wdt:P1881 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'War and Peace', 'p': 'list of characters', 'o': '?x0'}

 Q: What is {co-founded by} of {user} of {Jack Daniel's Distillery} ?
 SPARQL: SELECT ?answer WHERE { wd:Q47536037 wdt:P137 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founded by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Jack Daniel's Distillery", 'p': 'user', 'o': '$y0'}}

 Q: What is the motor yacht with the highest gross tonnage whose instance of is motor yacht ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21505397 . ?ent wdt:P1093 ?obj . ?ent wdt:P31 wd:Q21505397 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'gross tonnage', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'motor yacht'}}

 Q: Did {Patty_Hearst} {educated at} {University of California, Berkeley} and {San Domenico School} ?
 SPARQL: ASK WHERE { wd:Q229556 wdt:P69 wd:Q168756 . wd:Q229556 wdt:P69 wd:Q7413784 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Patty Hearst', 'p': 'educated at', 'o': '?x0', '?x0': 'University of California, Berkeley'}, {'h': 'IS', 'v': '?x1', 's': 'Patty Hearst', 'p': 'educated at', 'o': '?x1', '?x1': 'San Domenico School'}]

 Q: Tell me about position held of Jacinda Ardern and represents?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q3606816 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1268 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'represents', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacinda Ardern', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jacinda Ardern', 'p': 'position held', 'o': '$y0'}}]

 Q: What is the river mouth of Orange River's tributary?
 SPARQL: SELECT ?answer WHERE { wd:Q181475 wdt:P403 ?X . ?X wdt:P974 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'tributary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Orange River', 'p': 'river mouth', 'o': '$y0'}}

 Q: what is the market capitalization of the Alibaba Group
 SPARQL: select distinct ?answer where { wd:Q1359568 wdt:P2226 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alibaba Group', 'p': 'market capitalization', 'o': '?x0'}

 Q: What is {in work} of {Eve}, that has {language of website} is {Biblical Hebrew} ?
 SPARQL: SELECT ?answer WHERE { wd:Q830183 wdt:P1441 ?answer . ?answer wdt:P407 wd:Q1982248}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eve', 'p': 'in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'language of website', 'o': 'Biblical Hebrew'}}

 Q: Which bay whose tributary is the Kamo River is near the Mariana Trench?
 SPARQL: SELECT ?answer WHERE { wd:Q510 wdt:P206 ?answer . ?answer wdt:P974 wd:Q11398846}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mariana Trench', 'p': 'bay', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Kamo River'}}

 Q: what is the {end time} for {Martina Navratilova} has {member of sports team} as {Czechoslovakia Federation Cup team} ?
 SPARQL: SELECT ?value WHERE { wd:Q54545 p:P54 ?s . ?s ps:P54 wd:Q3590424 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martina Navratilova', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Czechoslovakia Federation Cup team'}}}

 Q: Which is Cultureel Woordenboek identifier for golden ratio?
 SPARQL: select distinct ?answer where { wd:Q41690 wdt:P3569 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'golden ratio', 'p': 'Cultureel Woordenboek identifier', 'o': '?x0'}

 Q: What is the Christian name of King Arthur, which means the same as Artur?
 SPARQL: SELECT ?answer WHERE { wd:Q45792 wdt:P735 ?answer . ?answer wdt:P460 wd:Q4801582}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'King Arthur', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Artur'}}

 Q: What is {higher taxon} of {host} of {Monopylidium australiense} ?
 SPARQL: SELECT ?answer WHERE { wd:Q54803542 wdt:P2975 ?X . ?X wdt:P171 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'higher taxon', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Monopylidium australiense', 'p': 'host', 'o': '$y0'}}

 Q: What is {to support} {participant of event} of {Kenneth Bainbridge} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1550453 wdt:P1344 ?X . ?X wdt:P3712 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to support', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenneth Bainbridge', 'p': 'participant of event', 'o': '$y0'}}

 Q: Give me {college town} that {located in time zone} {UTC+01:00} and which that starts with {'z'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1187811 . ?sbj wdt:P421 wd:Q6655 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college town', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'time zone', 'o': 'UTC+01:00'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: What is <readable file format> of <JPEG> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1072 wd:Q2195}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'readable file format', 'o': 'JPEG'}

 Q: Which  reservoir created for  Lake Volta ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4661 wd:Q201679}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'reservoir created', 'o': 'Lake Volta'}

 Q: Was Boeing 777 operated by Lufthansa?
 SPARQL: ASK WHERE { wd:Q6425 wdt:P137 wd:Q9325 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Boeing 777', 'p': 'operated by', 'o': '?x0', '?x0': 'Lufthansa'}]

 Q: Busan and Rishon LeZion were the twinned administrative body of Saint Petersburg, Is it true?
 SPARQL: ASK WHERE { wd:Q656 wdt:P190 wd:Q16520 . wd:Q656 wdt:P190 wd:Q201051 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Saint Petersburg', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Busan'}, {'h': 'IS', 'v': '?x1', 's': 'Saint Petersburg', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Rishon LeZion'}]

 Q: What is {name after} of {sideburns}, that has {service branch} is {United States Army} ?
 SPARQL: SELECT ?answer WHERE { wd:Q890356 wdt:P138 ?answer . ?answer wdt:P241 wd:Q9212}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'sideburns', 'p': 'name after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'branch', 'o': 'United States Army'}}

 Q: What is the {state function} for {measured physical quantity} of {degree Fahrenheit}
 SPARQL:  select distinct ?obj where { wd:Q42289 wdt:P111 ?obj . ?obj wdt:P31 wd:Q230937 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'degree Fahrenheit', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'state function'}}

 Q: Which {number of points/goals/set scored} and {number of matches played} and {{Fritz Walter} has {member of sports team} as {Germany national football team}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q22717 p:P54 ?s . ?s ps:P54 wd:Q43310 . ?s pq:P1351 ?value1 . ?s pq:P1350 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fritz Walter', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Germany national football team'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'matches played', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fritz Walter', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Germany national football team'}}}]

 Q: Which is the place of interment in Commodus, that has civilisation of ancient Rome?
 SPARQL: SELECT ?answer WHERE { wd:Q1434 wdt:P119 ?answer . ?answer wdt:P2596 wd:Q1747689}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Commodus', 'p': 'interment', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'civilisation', 'o': 'Rome'}}

 Q: Name a copolymer of ethylene.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4600 wd:Q151313 . ?sbj wdt:P31 wd:Q421281 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'polymer of', 'o': 'ethylene', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'copolymer'}}

 Q: What is the {railway bridge} with the {MAX(clearance)} whose {instance of} is {railway bridge}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1210334 . ?ent wdt:P2793 ?obj . ?ent wdt:P31 wd:Q1210334 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'clearance', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railroad bridge'}}

 Q: Is the frequency of the stubai valley railway less than 0.0?
 SPARQL: ASK WHERE { wd:Q872840 wdt:P2144 ?obj filter(?obj < 0.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Stubai Valley Railway', 'p': 'frequency', 'o': '?x0', '?x0': '0.0'}

 Q: What is {place of formation} of {The Home Depot}, that has {twin city} is {Montego Bay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q864407 wdt:P740 ?answer . ?answer wdt:P190 wd:Q637555}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Home Depot', 'p': 'place of formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Montego Bay'}}

 Q: Which is the cell component for cholesterol?
 SPARQL: select distinct ?answer where { wd:Q43656 wdt:P681 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cholesterol', 'p': 'cell component', 'o': '?x0'}

 Q: When did Zora Neale Hurston receive a John Simon Guggenheim Memorial Foundation Fellowship award?
 SPARQL: SELECT ?value WHERE { wd:Q220480 p:P166 ?s . ?s ps:P166 wd:Q1316544 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'John Simon Guggenheim Memorial Foundation Fellowship'}, 't': '?x0'}

 Q: What is the public library of Nagasaki?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q38234 . ?sbj wdt:P31 wd:Q28564 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Nagasaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public library'}}

 Q: How many {regulates (molecular biology)} are to/by {DNA repair} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P128 wd:Q210538 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'regulates (molecular biology)', 'o': 'DNA repair'}

 Q: what is the {point in time} for {E. M. Forster} has {nominated for} as {Nobel Prize in Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q189119 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'E. M. Forster', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What are thetelevision genre which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: How many are located in Thuringia territory?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q1205 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Thuringia'}

 Q: Is OX the safety classification and labelling of nitrogen trifluoride for NFPA Special?
 SPARQL: SELECT ?obj WHERE { wd:Q413835 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P877 ?x filter(contains(?x,'OX')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nitrogen trifluoride', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Special', 'o': 'ox'}}}

 Q: What is the Iran statistics ID number of Fars Province?
 SPARQL: select distinct ?answer where { wd:Q1004666 wdt:P1010 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fars Province', 'p': 'Iran statistics ID', 'o': '?x0'}

 Q: What is John Kenneth Galbraith's Google News ID?
 SPARQL: select distinct ?answer where { wd:Q186042 wdt:P5337 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Kenneth Galbraith', 'p': 'Google News ID', 'o': '?x0'}

 Q: : Does King Solomon's Mines hasnumber of episodes equal to 2.4
 SPARQL: ASK WHERE { wd:Q673277 wdt:P1113 ?obj filter(?obj = 2.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "King Solomon's Mines", 'p': 'number of episodes', 'o': '?x0', '?x0': '2.4'}

 Q: What is the product brand for iPhone?
 SPARQL: select distinct ?answer where { ?answer wdt:P1716 wd:Q2766}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'brand', 'o': 'iPhone'}

 Q: What is {date of birth} and {date of death} of {{Abigail Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Abigail Adams Smith'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Abigail Adams Smith'}}}]

 Q: Did {Snoop_Dogg} {languages spoken, written or signed} {Old English}?
 SPARQL: ASK WHERE { wd:Q6096 wdt:P1412 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Snoop Dogg', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Old English'}]

 Q: What are the flag carrier which start with the letter q
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q721639 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flag carrier'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'q'}}

 Q: Give me {low-cost airline} that {airline hub} {Dublin Airport} and which that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190915 . ?sbj wdt:P113 wd:Q178021 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'low-cost airline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'airline hub', 'o': 'DUB'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What was the population of Gyeongju in December of 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gyeongju', 'p': 'population', 'o': '?x0', 't': '2012'}

 Q: what is the {street number} for {Musée d'Orsay} has {located on street} as {rue de Bellechasse} ?
 SPARQL: SELECT ?value WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 wd:Q3450565 . ?s pq:P670 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'street number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Musee D'Orsay", 'p': 'located on street', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located on street', 'o': 'rue de Bellechasse'}}}

 Q: What is {is in the village of} of {Kupang}, that has {has counties} is {Timor Tengah Selatan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14155 wdt:P131 ?answer . ?answer wdt:P150 wd:Q14151}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kupang', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': 'Timor Tengah Selatan'}}

 Q: Which intergovernmental organization is headed by the United Nations Secretary-General?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2388 wd:Q81066 . ?sbj wdt:P31 wd:Q245065 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headed by', 'o': 'United Nations Secretary-General', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}}

 Q: What was the subject of Hemut Kohl's doctoral thesis?
 SPARQL:  select distinct ?obj where { wd:Q2518 wdt:P1026 ?obj . ?obj wdt:P31 wd:Q187685 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kohl', 'p': 'thesis', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'doctoral thesis'}}

 Q: What is Kenny Dalglish's given name as the series ordinal for Mathieson?
 SPARQL: SELECT ?value WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 wd:Q6787177 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenny Dalglish', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Mathieson'}}}

 Q: Is the attendance of the re:publica equaal to 7000?
 SPARQL: ASK WHERE { wd:Q2134501 wdt:P1110 ?obj filter(?obj = 7000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 're:publica', 'p': 'attendance', 'o': '?x0', '?x0': '7000'}

 Q: How much product materials are being produced by the Huawei} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q160120 wdt:P1056 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Huawei', 'p': 'product', 'o': '?x0'}

 Q: James Stewart is represented by which talent agency ?
 SPARQL:  select distinct ?obj where { wd:Q102462 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Stewart', 'p': 'represented by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talent agency'}}

 Q: What is { significant event } of { Cristina Kirchner } that is { medical condition } { thyroid cancer }?
 SPARQL: SELECT ?obj WHERE { wd:Q40649 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P1050 wd:Q826522 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significant event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cristina Kirchner', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'medical condition', 'o': 'thyroid cancer'}}}

 Q: What is the {human} for {religious order} of {Society of Jesus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P611 wd:Q36380 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religious order', 'o': 'Society of Jesus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the producer of the software publisher Martial Champion
 SPARQL: SELECT ?answer WHERE { wd:Q1079957 wdt:P123 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martial Champion', 'p': 'publisher', 'o': '$y0'}}

 Q: What is the sister city of the birth place of Giancarlo Canetti?
 SPARQL: SELECT ?answer WHERE { wd:Q3105170 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giancarlo Canetti', 'p': 'birth place', 'o': '$y0'}}

 Q: What is {before was} of {Achaemenid Empire}, that has {closure date} is {-539-1-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q389688 wdt:P155 ?answer . ?answer wdt:P576 ?x FILTER(contains(?x,'-539-1-1'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'before was', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'closure date', 'o': '-539-1-1'}}

 Q: What is the position held for the general secretary of Xi Jinping?
 SPARQL:  select distinct ?obj where { wd:Q15031 wdt:P39 ?obj . ?obj wdt:P31 wd:Q6501749 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Xi Jinping', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'general secretary'}}

 Q: Did Gilda Radner  married to his wife in 1982-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q266808 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gilda Radner', 'p': 'wife', 'o': '?x0', 't': '1982'}

 Q: What is the sister of the player of Sun Ce's conquests in Jiangdong ?
 SPARQL: SELECT ?answer WHERE { wd:Q986561 wdt:P710 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Sun Ce's conquests in Jiangdong", 'p': 'player', 'o': '$y0'}}

 Q: Name a folk saint already performed by Jefferson Mappin that contain the word " claus" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5464477 . ?sbj wdt:P175 wd:Q6175537 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'claus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'folk saint', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'performed by', 'o': 'Jefferson Mappin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'claus'}}

 Q: IS THE POPULATION OF LIEBITZ IS EQUAL TO 0
 SPARQL: ASK WHERE { wd:Q315869 wdt:P1082 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Liebitz', 'p': 'population', 'o': '?x0', '?x0': '0'}

 Q: What administrative centre of Mari El Republic includes the municipaality of Kazan Governorate?
 SPARQL: SELECT ?answer WHERE { wd:Q5446 wdt:P36 ?answer . ?answer wdt:P131 wd:Q1425322}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mari El Republic', 'p': 'administrative centre', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Kazan Governorate'}}

 Q: What is {country} of {Prague} that is {start time} is {895-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1085 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(?x,'895-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prague', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '895-0-0'}}}

 Q: Can you tell me Unicode's IBM graphic character set global ID?
 SPARQL: select distinct ?answer where { wd:Q8819 wdt:P4197 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unicode', 'p': 'IBM graphic character set global ID', 'o': '?x0'}

 Q: Did {Hillary_Clinton} {significant event} {2006 United States Senate election in New York}?
 SPARQL: ASK WHERE { wd:Q6294 wdt:P793 wd:Q7891832 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'significant event', 'o': '?x0', '?x0': '2006 United States Senate election in New York'}]

 Q: When did Vladimir Komarov receive the Hero of the Soviet Union award?
 SPARQL: SELECT ?value WHERE { wd:Q104865 p:P166 ?s . ?s ps:P166 wd:Q178473 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vladimir Komarov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Hero of the Soviet Union'}, 't': '?x0'}

 Q: What is {on river} of {Tobago}, that has {tributary} is {Rivière des Côtes de Fer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q185111 wdt:P206 ?answer . ?answer wdt:P974 wd:Q7338939}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tobago', 'p': 'on river', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Riviere des Cotes de Fer'}}

 Q: Which {type of business entity} of {user} is {Orient Express} ?
 SPARQL: SELECT ?answer WHERE { wd:Q191985 wdt:P137 ?X . ?X wdt:P1454 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of business entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Orient Express', 'p': 'user', 'o': '$y0'}}

 Q: What is part of constellation of parent body of NGC 6362 ?
 SPARQL: SELECT ?answer WHERE { wd:Q932468 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NGC 6362', 'p': 'parent body', 'o': '$y0'}}

 Q: Is the inflation rate of Japan equal to -0.8?
 SPARQL: ASK WHERE { wd:Q17 wdt:P1279 ?obj filter(?obj = -0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Japan', 'p': 'inflation rate', 'o': '?x0', '?x0': '-0.8'}

 Q: what is the {country} for {Richard Neutra} has {place of death} as {Wuppertal} ?
 SPARQL: SELECT ?value WHERE { wd:Q84312 p:P20 ?s . ?s ps:P20 wd:Q2107 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Neutra', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Wuppertal'}}}

 Q: What is {winners} of {sequel is} of {1928 World Snooker Championship} ?
 SPARQL: SELECT ?answer WHERE { wd:Q639942 wdt:P156 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1928 World Snooker Championship', 'p': 'sequel is', 'o': '$y0'}}

 Q: what is the {point in time} for {Andrei Sakharov} has {award received} as {Order of Lenin} ?
 SPARQL: SELECT ?value WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Andrei Sakharov', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Order of Lenin'}, 't': '?x0'}

 Q: Tell me which is the abnormally low value that contains the word underweight in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54928607 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abnormally low value'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'underweight'}}

 Q: What is {place of death} of {Al-Shafi‘i} that is {located in the administrative territorial entity} is {Egypt} ?
 SPARQL: SELECT ?obj WHERE { wd:Q294281 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q79 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Al-Shafi‘i', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Egypt'}}}

 Q: What is the {periodical literature} for {mouthpiece} of {Social Democratic Party of Germany}
 SPARQL:  select distinct ?obj where { wd:Q49768 wdt:P2813 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Social Democratic Party of Germany', 'p': 'mouthpiece', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: What is the {Wikimedia list article} for {officeholder} of {Mauricio Macri}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q561837 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Mauricio Macri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: What is {duration} of {basketball} that is {excluding} is {time-out} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5372 p:P2047 ?s . ?s ps:P2047 ?obj . ?s pq:P1011 wd:Q784362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'duration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'basketball', 'p': 'duration', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'excluding', 'o': 'time-out'}}}

 Q: What is the {human} for {designed by} of {Space Invaders}
 SPARQL:  select distinct ?obj where { wd:Q220665 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'designed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When was Nicholas Roerich nominated for the Nobel Peace Prize?
 SPARQL: SELECT ?value WHERE { wd:Q208993 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nicholas Roerich', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: Tell me technique whose name has the word technology in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2695280 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'technology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'technology'}}

 Q: Which is the CELEX number for European Arrest Warrant?
 SPARQL: select distinct ?answer where { wd:Q1357669 wdt:P476 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Arrest Warrant', 'p': 'CELEX number', 'o': '?x0'}

 Q: what is in the INSEE department code  of French Guiana ?
 SPARQL: select distinct ?answer where { wd:Q3769 wdt:P2586 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'French Guiana', 'p': 'INSEE department code', 'o': '?x0'}

 Q: what is the {end time} for {Porfirio Rubirosa} has {spouse} as {Barbara Hutton} ?
 SPARQL: SELECT ?value WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 wd:Q255620 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Porfirio Rubirosa', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Barbara Hutton'}}}

 Q: What is <category contains> of <dress> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4224 wd:Q200539}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'category contains', 'o': 'dress'}

 Q: Which municipality of Spain starts with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2074737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Spain'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Which is the battle party of Dunkirk evacuation?
 SPARQL: SELECT ?answer WHERE { wd:Q911972 wdt:P710 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'battle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dunkirk evacuation', 'p': 'party', 'o': '$y0'}}

 Q: what is the {has quality} for {Gujarat} has {language used} as {Hindi} ?
 SPARQL: SELECT ?value WHERE { wd:Q1061 p:P2936 ?s . ?s ps:P2936 wd:Q1568 . ?s pq:P1552 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has quality', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gujarat', 'p': 'language used', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language used', 'o': 'Hindi'}}}

 Q: How many {production company} are to/by {HBO} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P272 wd:Q23633 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production company', 'o': 'HBO'}

 Q: What is the {essential medicine} with the {MIN(defined daily dose)} whose {has part} is {oxygen}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q35456 . ?ent wdt:P4250 ?obj . ?ent wdt:P527 wd:Q629} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'defined daily dose', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'oxygen'}}}

 Q: Is the payload mass of the USS Kobayashi Maru equal to 97000?
 SPARQL: ASK WHERE { wd:Q47459827 wdt:P4519 ?obj filter(?obj = 97000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'USS Kobayashi Maru', 'p': 'payload mass', 'o': '?x0', '?x0': '97000'}

 Q: Michael Dell is the CEO of which of business organisation.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q218630 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Michael Dell', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Who did Laura Dern marry in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q220901 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Laura Dern', 'p': 'marry', 'o': '?x0', 't': '1993'}

 Q: Is Brian Wilson relative to Stan Love}
 SPARQL: ASK WHERE { wd:Q313013 wdt:P1038 wd:Q3968108 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Brian Wilson', 'p': 'relative', 'o': '?x0', '?x0': 'Stan Love'}]

 Q: What is {award received} of {Gao Xingjian} that is {point in time} is {2000-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q18143 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gao Xingjian', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: What is {subsidiary entities} of {book publisher} of {Disney Magicboard Online} ?
 SPARQL: SELECT ?answer WHERE { wd:Q972216 wdt:P123 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Disney Magicboard Online', 'p': 'publisher', 'o': '$y0'}}

 Q: How many encodes are by DL-proline?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P688 wd:Q484583 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'encodes', 'o': 'DL-proline'}

 Q: What are the painting technique which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1231896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {patent medicine} for {product or material produced} of {The Coca-Cola Company}
 SPARQL:  select distinct ?obj where { wd:Q3295867 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q3480271 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coca-Cola', 'p': 'product', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'patent medicine'}}

 Q: what is the {electoral district} for {Franklin Pierce} has {position held} as {United States representative} ?
 SPARQL: SELECT ?value WHERE { wd:Q12312 p:P39 ?s . ?s ps:P39 wd:Q13218630 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franklin Pierce', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States representative'}}}

 Q: What is {work period (end)} and {work period (start)} of {{Seattle} has {head of government} as {Bertha Knight Landes}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?value1 . ?s pq:P2031 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Bertha Knight Landes'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'work period (start)', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Bertha Knight Landes'}}}]

 Q: How many administrative territorial entities are located by Los Lagos Region?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q2178 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Los Lagos Region'}

 Q: What is the {human} for {editor} of {Playboy}
 SPARQL:  select distinct ?obj where { wd:Q150820 wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Playboy', 'p': 'editor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: tell me eonothem name has the word proterozoic in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2669627 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'eonothem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'proterozoic'}}

 Q: What is {named for} of {Cauchy stress tensor}, that has {employment} is {physicist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13409892 wdt:P138 ?answer . ?answer wdt:P106 wd:Q169470}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'stress tensor', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employment', 'o': 'physicist'}}

 Q: What is {award received} of {Kanye West} that is {together with} is {Fergie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q15935 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q180004 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kanye West', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Fergie'}}}

 Q: Tell me the specialized agency of the United Nations that contains the word world in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15925165 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialized agency of the United Nations'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: what is the {point in time} for {Akira Kurosawa} has {award received} as {Blue Ribbon Awards for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q8006 p:P166 ?s . ?s ps:P166 wd:Q19833431 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Akira Kurosawa', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Blue Ribbon Awards for Best Director'}, 't': '?x0'}

 Q: What is the name of the capital city of South Australia
 SPARQL:  select distinct ?obj where { wd:Q35715 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Australia', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: "What is {depiction of} of {Pale Blue Dot}, which has {aphelion} is {1.0} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q474472 wdt:P180 ?answer . ?answer wdt:P2243 ?x FILTER(contains(?x,'1.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pale Blue Dot', 'p': 'depiction of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'aphelion', 'o': '1.0'}}

 Q: what is casualty of  cause of death
 SPARQL: select distinct ?answer where { ?answer wdt:P509 wd:Q1056901}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of death', 'o': 'casualty'}

 Q: What is the {medical society} for {studied by} of {diabetes mellitus}
 SPARQL:  select distinct ?obj where { wd:Q12206 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q19869268 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diabetes', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical society'}}

 Q: Which is the FISA rower ID for Steve Redgrave?
 SPARQL: select distinct ?answer where { wd:Q52679 wdt:P2091 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Steve Redgrave', 'p': 'FISA rower ID', 'o': '?x0'}

 Q: Was Roman Empire followed by Western Roman Empire?
 SPARQL: ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Roman Empire', 'p': 'followed by', 'o': '?x0', '?x0': 'Roman Empire'}]

 Q: What is <research intervention> of <crop rotation> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4844 wd:Q191258}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'research intervention', 'o': 'crop rotation'}

 Q: Who is the spouse of Cary Grant?
 SPARQL: SELECT ?obj WHERE { wd:Q83410 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1945')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cary Grant', 'p': 'spouse', 'o': '?x0', 't': '1945'}

 Q: Which means {Name Assigning Authority Number} in the {Indiana University} ?
 SPARQL: select distinct ?answer where { wd:Q6608367 wdt:P1870 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indiana University', 'p': 'Name Assigning Authority Number', 'o': '?x0'}

 Q: What is {place of formation} of {The Home Depot}, that has {twin city} is {Montego Bay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q864407 wdt:P740 ?answer . ?answer wdt:P190 wd:Q637555}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Home Depot', 'p': 'place of formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Montego Bay'}}

 Q: Which is the cell component for cholesterol?
 SPARQL: select distinct ?answer where { wd:Q43656 wdt:P681 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cholesterol', 'p': 'cell component', 'o': '?x0'}

 Q: When did Zora Neale Hurston receive a John Simon Guggenheim Memorial Foundation Fellowship award?
 SPARQL: SELECT ?value WHERE { wd:Q220480 p:P166 ?s . ?s ps:P166 wd:Q1316544 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'John Simon Guggenheim Memorial Foundation Fellowship'}, 't': '?x0'}

 Q: What is the public library of Nagasaki?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q38234 . ?sbj wdt:P31 wd:Q28564 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Nagasaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public library'}}

 Q: How many {regulates (molecular biology)} are to/by {DNA repair} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P128 wd:Q210538 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'regulates (molecular biology)', 'o': 'DNA repair'}

 Q: what is the {point in time} for {E. M. Forster} has {nominated for} as {Nobel Prize in Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q189119 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'E. M. Forster', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What are thetelevision genre which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: How many are located in Thuringia territory?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q1205 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Thuringia'}

 Q: Is OX the safety classification and labelling of nitrogen trifluoride for NFPA Special?
 SPARQL: SELECT ?obj WHERE { wd:Q413835 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P877 ?x filter(contains(?x,'OX')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nitrogen trifluoride', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Special', 'o': 'ox'}}}

 Q: What is the Iran statistics ID number of Fars Province?
 SPARQL: select distinct ?answer where { wd:Q1004666 wdt:P1010 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fars Province', 'p': 'Iran statistics ID', 'o': '?x0'}

 Q: What is John Kenneth Galbraith's Google News ID?
 SPARQL: select distinct ?answer where { wd:Q186042 wdt:P5337 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Kenneth Galbraith', 'p': 'Google News ID', 'o': '?x0'}

 Q: : Does King Solomon's Mines hasnumber of episodes equal to 2.4
 SPARQL: ASK WHERE { wd:Q673277 wdt:P1113 ?obj filter(?obj = 2.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "King Solomon's Mines", 'p': 'number of episodes', 'o': '?x0', '?x0': '2.4'}

 Q: What is the product brand for iPhone?
 SPARQL: select distinct ?answer where { ?answer wdt:P1716 wd:Q2766}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'brand', 'o': 'iPhone'}

 Q: What is {date of birth} and {date of death} of {{Abigail Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Abigail Adams Smith'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Abigail Adams Smith'}}}]

 Q: Did {Snoop_Dogg} {languages spoken, written or signed} {Old English}?
 SPARQL: ASK WHERE { wd:Q6096 wdt:P1412 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Snoop Dogg', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Old English'}]

 Q: What are the flag carrier which start with the letter q
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q721639 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flag carrier'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'q'}}

 Q: Give me {low-cost airline} that {airline hub} {Dublin Airport} and which that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190915 . ?sbj wdt:P113 wd:Q178021 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'low-cost airline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'airline hub', 'o': 'DUB'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What was the population of Gyeongju in December of 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gyeongju', 'p': 'population', 'o': '?x0', 't': '2012'}

 Q: what is the {street number} for {Musée d'Orsay} has {located on street} as {rue de Bellechasse} ?
 SPARQL: SELECT ?value WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 wd:Q3450565 . ?s pq:P670 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'street number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Musee D'Orsay", 'p': 'located on street', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located on street', 'o': 'rue de Bellechasse'}}}

 Q: What is {is in the village of} of {Kupang}, that has {has counties} is {Timor Tengah Selatan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14155 wdt:P131 ?answer . ?answer wdt:P150 wd:Q14151}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kupang', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': 'Timor Tengah Selatan'}}

 Q: Which intergovernmental organization is headed by the United Nations Secretary-General?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2388 wd:Q81066 . ?sbj wdt:P31 wd:Q245065 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headed by', 'o': 'United Nations Secretary-General', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}}

 Q: What was the subject of Hemut Kohl's doctoral thesis?
 SPARQL:  select distinct ?obj where { wd:Q2518 wdt:P1026 ?obj . ?obj wdt:P31 wd:Q187685 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kohl', 'p': 'thesis', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'doctoral thesis'}}

 Q: What is Kenny Dalglish's given name as the series ordinal for Mathieson?
 SPARQL: SELECT ?value WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 wd:Q6787177 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenny Dalglish', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Mathieson'}}}

 Q: Is the attendance of the re:publica equaal to 7000?
 SPARQL: ASK WHERE { wd:Q2134501 wdt:P1110 ?obj filter(?obj = 7000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 're:publica', 'p': 'attendance', 'o': '?x0', '?x0': '7000'}

 Q: How much product materials are being produced by the Huawei} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q160120 wdt:P1056 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Huawei', 'p': 'product', 'o': '?x0'}

 Q: James Stewart is represented by which talent agency ?
 SPARQL:  select distinct ?obj where { wd:Q102462 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Stewart', 'p': 'represented by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talent agency'}}

 Q: What is { significant event } of { Cristina Kirchner } that is { medical condition } { thyroid cancer }?
 SPARQL: SELECT ?obj WHERE { wd:Q40649 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P1050 wd:Q826522 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significant event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cristina Kirchner', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'medical condition', 'o': 'thyroid cancer'}}}

 Q: What is the {human} for {religious order} of {Society of Jesus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P611 wd:Q36380 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religious order', 'o': 'Society of Jesus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the producer of the software publisher Martial Champion
 SPARQL: SELECT ?answer WHERE { wd:Q1079957 wdt:P123 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martial Champion', 'p': 'publisher', 'o': '$y0'}}

 Q: What is the sister city of the birth place of Giancarlo Canetti?
 SPARQL: SELECT ?answer WHERE { wd:Q3105170 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giancarlo Canetti', 'p': 'birth place', 'o': '$y0'}}

 Q: What is {before was} of {Achaemenid Empire}, that has {closure date} is {-539-1-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q389688 wdt:P155 ?answer . ?answer wdt:P576 ?x FILTER(contains(?x,'-539-1-1'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'before was', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'closure date', 'o': '-539-1-1'}}

 Q: What is the position held for the general secretary of Xi Jinping?
 SPARQL:  select distinct ?obj where { wd:Q15031 wdt:P39 ?obj . ?obj wdt:P31 wd:Q6501749 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Xi Jinping', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'general secretary'}}

 Q: Did Gilda Radner  married to his wife in 1982-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q266808 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gilda Radner', 'p': 'wife', 'o': '?x0', 't': '1982'}

 Q: What is the sister of the player of Sun Ce's conquests in Jiangdong ?
 SPARQL: SELECT ?answer WHERE { wd:Q986561 wdt:P710 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Sun Ce's conquests in Jiangdong", 'p': 'player', 'o': '$y0'}}

 Q: Name a folk saint already performed by Jefferson Mappin that contain the word " claus" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5464477 . ?sbj wdt:P175 wd:Q6175537 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'claus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'folk saint', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'performed by', 'o': 'Jefferson Mappin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'claus'}}

 Q: IS THE POPULATION OF LIEBITZ IS EQUAL TO 0
 SPARQL: ASK WHERE { wd:Q315869 wdt:P1082 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Liebitz', 'p': 'population', 'o': '?x0', '?x0': '0'}

 Q: What administrative centre of Mari El Republic includes the municipaality of Kazan Governorate?
 SPARQL: SELECT ?answer WHERE { wd:Q5446 wdt:P36 ?answer . ?answer wdt:P131 wd:Q1425322}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mari El Republic', 'p': 'administrative centre', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Kazan Governorate'}}

 Q: What is {country} of {Prague} that is {start time} is {895-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1085 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(?x,'895-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prague', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '895-0-0'}}}

 Q: Can you tell me Unicode's IBM graphic character set global ID?
 SPARQL: select distinct ?answer where { wd:Q8819 wdt:P4197 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unicode', 'p': 'IBM graphic character set global ID', 'o': '?x0'}

 Q: Did {Hillary_Clinton} {significant event} {2006 United States Senate election in New York}?
 SPARQL: ASK WHERE { wd:Q6294 wdt:P793 wd:Q7891832 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'significant event', 'o': '?x0', '?x0': '2006 United States Senate election in New York'}]

 Q: When did Vladimir Komarov receive the Hero of the Soviet Union award?
 SPARQL: SELECT ?value WHERE { wd:Q104865 p:P166 ?s . ?s ps:P166 wd:Q178473 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vladimir Komarov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Hero of the Soviet Union'}, 't': '?x0'}

 Q: What is {on river} of {Tobago}, that has {tributary} is {Rivière des Côtes de Fer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q185111 wdt:P206 ?answer . ?answer wdt:P974 wd:Q7338939}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tobago', 'p': 'on river', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Riviere des Cotes de Fer'}}

 Q: Which {type of business entity} of {user} is {Orient Express} ?
 SPARQL: SELECT ?answer WHERE { wd:Q191985 wdt:P137 ?X . ?X wdt:P1454 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of business entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Orient Express', 'p': 'user', 'o': '$y0'}}

 Q: What is part of constellation of parent body of NGC 6362 ?
 SPARQL: SELECT ?answer WHERE { wd:Q932468 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NGC 6362', 'p': 'parent body', 'o': '$y0'}}

 Q: Is the inflation rate of Japan equal to -0.8?
 SPARQL: ASK WHERE { wd:Q17 wdt:P1279 ?obj filter(?obj = -0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Japan', 'p': 'inflation rate', 'o': '?x0', '?x0': '-0.8'}

 Q: what is the {country} for {Richard Neutra} has {place of death} as {Wuppertal} ?
 SPARQL: SELECT ?value WHERE { wd:Q84312 p:P20 ?s . ?s ps:P20 wd:Q2107 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Neutra', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Wuppertal'}}}

 Q: What is {winners} of {sequel is} of {1928 World Snooker Championship} ?
 SPARQL: SELECT ?answer WHERE { wd:Q639942 wdt:P156 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1928 World Snooker Championship', 'p': 'sequel is', 'o': '$y0'}}

 Q: what is the {point in time} for {Andrei Sakharov} has {award received} as {Order of Lenin} ?
 SPARQL: SELECT ?value WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Andrei Sakharov', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Order of Lenin'}, 't': '?x0'}

 Q: Tell me which is the abnormally low value that contains the word underweight in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54928607 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abnormally low value'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'underweight'}}

 Q: What is {place of death} of {Al-Shafi‘i} that is {located in the administrative territorial entity} is {Egypt} ?
 SPARQL: SELECT ?obj WHERE { wd:Q294281 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q79 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Al-Shafi‘i', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Egypt'}}}

 Q: What is the {periodical literature} for {mouthpiece} of {Social Democratic Party of Germany}
 SPARQL:  select distinct ?obj where { wd:Q49768 wdt:P2813 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Social Democratic Party of Germany', 'p': 'mouthpiece', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: What is the {Wikimedia list article} for {officeholder} of {Mauricio Macri}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q561837 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Mauricio Macri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: What is {duration} of {basketball} that is {excluding} is {time-out} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5372 p:P2047 ?s . ?s ps:P2047 ?obj . ?s pq:P1011 wd:Q784362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'duration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'basketball', 'p': 'duration', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'excluding', 'o': 'time-out'}}}

 Q: What is the {human} for {designed by} of {Space Invaders}
 SPARQL:  select distinct ?obj where { wd:Q220665 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'designed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When was Nicholas Roerich nominated for the Nobel Peace Prize?
 SPARQL: SELECT ?value WHERE { wd:Q208993 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nicholas Roerich', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: Tell me technique whose name has the word technology in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2695280 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'technology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'technology'}}

 Q: Which is the CELEX number for European Arrest Warrant?
 SPARQL: select distinct ?answer where { wd:Q1357669 wdt:P476 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Arrest Warrant', 'p': 'CELEX number', 'o': '?x0'}

 Q: what is in the INSEE department code  of French Guiana ?
 SPARQL: select distinct ?answer where { wd:Q3769 wdt:P2586 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'French Guiana', 'p': 'INSEE department code', 'o': '?x0'}

 Q: what is the {end time} for {Porfirio Rubirosa} has {spouse} as {Barbara Hutton} ?
 SPARQL: SELECT ?value WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 wd:Q255620 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Porfirio Rubirosa', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Barbara Hutton'}}}

 Q: What is <category contains> of <dress> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4224 wd:Q200539}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'category contains', 'o': 'dress'}

 Q: Which municipality of Spain starts with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2074737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Spain'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Which is the battle party of Dunkirk evacuation?
 SPARQL: SELECT ?answer WHERE { wd:Q911972 wdt:P710 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'battle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dunkirk evacuation', 'p': 'party', 'o': '$y0'}}

 Q: what is the {has quality} for {Gujarat} has {language used} as {Hindi} ?
 SPARQL: SELECT ?value WHERE { wd:Q1061 p:P2936 ?s . ?s ps:P2936 wd:Q1568 . ?s pq:P1552 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has quality', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gujarat', 'p': 'language used', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language used', 'o': 'Hindi'}}}

 Q: How many {production company} are to/by {HBO} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P272 wd:Q23633 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production company', 'o': 'HBO'}

 Q: What is the {essential medicine} with the {MIN(defined daily dose)} whose {has part} is {oxygen}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q35456 . ?ent wdt:P4250 ?obj . ?ent wdt:P527 wd:Q629} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'defined daily dose', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'oxygen'}}}

 Q: Is the payload mass of the USS Kobayashi Maru equal to 97000?
 SPARQL: ASK WHERE { wd:Q47459827 wdt:P4519 ?obj filter(?obj = 97000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'USS Kobayashi Maru', 'p': 'payload mass', 'o': '?x0', '?x0': '97000'}

 Q: Michael Dell is the CEO of which of business organisation.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q218630 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Michael Dell', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Who did Laura Dern marry in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q220901 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Laura Dern', 'p': 'marry', 'o': '?x0', 't': '1993'}

 Q: Is Brian Wilson relative to Stan Love}
 SPARQL: ASK WHERE { wd:Q313013 wdt:P1038 wd:Q3968108 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Brian Wilson', 'p': 'relative', 'o': '?x0', '?x0': 'Stan Love'}]

 Q: What is {award received} of {Gao Xingjian} that is {point in time} is {2000-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q18143 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gao Xingjian', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: What is {subsidiary entities} of {book publisher} of {Disney Magicboard Online} ?
 SPARQL: SELECT ?answer WHERE { wd:Q972216 wdt:P123 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Disney Magicboard Online', 'p': 'publisher', 'o': '$y0'}}

 Q: How many encodes are by DL-proline?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P688 wd:Q484583 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'encodes', 'o': 'DL-proline'}

 Q: What are the painting technique which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1231896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {patent medicine} for {product or material produced} of {The Coca-Cola Company}
 SPARQL:  select distinct ?obj where { wd:Q3295867 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q3480271 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coca-Cola', 'p': 'product', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'patent medicine'}}

 Q: what is the {electoral district} for {Franklin Pierce} has {position held} as {United States representative} ?
 SPARQL: SELECT ?value WHERE { wd:Q12312 p:P39 ?s . ?s ps:P39 wd:Q13218630 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franklin Pierce', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States representative'}}}

 Q: What is {work period (end)} and {work period (start)} of {{Seattle} has {head of government} as {Bertha Knight Landes}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?value1 . ?s pq:P2031 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Bertha Knight Landes'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'work period (start)', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Bertha Knight Landes'}}}]

 Q: How many administrative territorial entities are located by Los Lagos Region?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q2178 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Los Lagos Region'}

 Q: What is the {human} for {editor} of {Playboy}
 SPARQL:  select distinct ?obj where { wd:Q150820 wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Playboy', 'p': 'editor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: tell me eonothem name has the word proterozoic in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2669627 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'eonothem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'proterozoic'}}

 Q: What is {named for} of {Cauchy stress tensor}, that has {employment} is {physicist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13409892 wdt:P138 ?answer . ?answer wdt:P106 wd:Q169470}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'stress tensor', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employment', 'o': 'physicist'}}

 Q: What is {award received} of {Kanye West} that is {together with} is {Fergie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q15935 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q180004 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kanye West', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Fergie'}}}

 Q: Tell me the specialized agency of the United Nations that contains the word world in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15925165 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialized agency of the United Nations'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: what is the {point in time} for {Akira Kurosawa} has {award received} as {Blue Ribbon Awards for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q8006 p:P166 ?s . ?s ps:P166 wd:Q19833431 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Akira Kurosawa', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Blue Ribbon Awards for Best Director'}, 't': '?x0'}

 Q: What is the name of the capital city of South Australia
 SPARQL:  select distinct ?obj where { wd:Q35715 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Australia', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: "What is {depiction of} of {Pale Blue Dot}, which has {aphelion} is {1.0} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q474472 wdt:P180 ?answer . ?answer wdt:P2243 ?x FILTER(contains(?x,'1.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pale Blue Dot', 'p': 'depiction of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'aphelion', 'o': '1.0'}}

 Q: what is casualty of  cause of death
 SPARQL: select distinct ?answer where { ?answer wdt:P509 wd:Q1056901}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of death', 'o': 'casualty'}

 Q: What is the {medical society} for {studied by} of {diabetes mellitus}
 SPARQL:  select distinct ?obj where { wd:Q12206 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q19869268 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diabetes', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical society'}}

 Q: Which is the FISA rower ID for Steve Redgrave?
 SPARQL: select distinct ?answer where { wd:Q52679 wdt:P2091 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Steve Redgrave', 'p': 'FISA rower ID', 'o': '?x0'}

 Q: Was Roman Empire followed by Western Roman Empire?
 SPARQL: ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Roman Empire', 'p': 'followed by', 'o': '?x0', '?x0': 'Roman Empire'}]

 Q: What is <research intervention> of <crop rotation> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4844 wd:Q191258}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'research intervention', 'o': 'crop rotation'}

 Q: Who is the spouse of Cary Grant?
 SPARQL: SELECT ?obj WHERE { wd:Q83410 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1945')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cary Grant', 'p': 'spouse', 'o': '?x0', 't': '1945'}

 Q: Which means {Name Assigning Authority Number} in the {Indiana University} ?
 SPARQL: select distinct ?answer where { wd:Q6608367 wdt:P1870 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indiana University', 'p': 'Name Assigning Authority Number', 'o': '?x0'}

 Q: What is {place of formation} of {The Home Depot}, that has {twin city} is {Montego Bay} ?
 SPARQL: SELECT ?answer WHERE { wd:Q864407 wdt:P740 ?answer . ?answer wdt:P190 wd:Q637555}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Home Depot', 'p': 'place of formation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'twin city', 'o': 'Montego Bay'}}

 Q: Which is the cell component for cholesterol?
 SPARQL: select distinct ?answer where { wd:Q43656 wdt:P681 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cholesterol', 'p': 'cell component', 'o': '?x0'}

 Q: When did Zora Neale Hurston receive a John Simon Guggenheim Memorial Foundation Fellowship award?
 SPARQL: SELECT ?value WHERE { wd:Q220480 p:P166 ?s . ?s ps:P166 wd:Q1316544 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Zora Neale Hurston', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'John Simon Guggenheim Memorial Foundation Fellowship'}, 't': '?x0'}

 Q: What is the public library of Nagasaki?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q38234 . ?sbj wdt:P31 wd:Q28564 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Nagasaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public library'}}

 Q: How many {regulates (molecular biology)} are to/by {DNA repair} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P128 wd:Q210538 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'regulates (molecular biology)', 'o': 'DNA repair'}

 Q: what is the {point in time} for {E. M. Forster} has {nominated for} as {Nobel Prize in Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q189119 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'E. M. Forster', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: What are thetelevision genre which start with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: How many are located in Thuringia territory?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q1205 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Thuringia'}

 Q: Is OX the safety classification and labelling of nitrogen trifluoride for NFPA Special?
 SPARQL: SELECT ?obj WHERE { wd:Q413835 p:P4952 ?s . ?s ps:P4952 ?obj . ?s pq:P877 ?x filter(contains(?x,'OX')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'safety classification and labelling', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'nitrogen trifluoride', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'NFPA Special', 'o': 'ox'}}}

 Q: What is the Iran statistics ID number of Fars Province?
 SPARQL: select distinct ?answer where { wd:Q1004666 wdt:P1010 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fars Province', 'p': 'Iran statistics ID', 'o': '?x0'}

 Q: What is John Kenneth Galbraith's Google News ID?
 SPARQL: select distinct ?answer where { wd:Q186042 wdt:P5337 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'John Kenneth Galbraith', 'p': 'Google News ID', 'o': '?x0'}

 Q: : Does King Solomon's Mines hasnumber of episodes equal to 2.4
 SPARQL: ASK WHERE { wd:Q673277 wdt:P1113 ?obj filter(?obj = 2.4) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "King Solomon's Mines", 'p': 'number of episodes', 'o': '?x0', '?x0': '2.4'}

 Q: What is the product brand for iPhone?
 SPARQL: select distinct ?answer where { ?answer wdt:P1716 wd:Q2766}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'brand', 'o': 'iPhone'}

 Q: What is {date of birth} and {date of death} of {{Abigail Adams} has {child} as {Abigail Adams Smith}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 wd:Q4667661 . ?s pq:P569 ?value1 . ?s pq:P570 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Abigail Adams Smith'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of death', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Abigail Adams Smith'}}}]

 Q: Did {Snoop_Dogg} {languages spoken, written or signed} {Old English}?
 SPARQL: ASK WHERE { wd:Q6096 wdt:P1412 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Snoop Dogg', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Old English'}]

 Q: What are the flag carrier which start with the letter q
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q721639 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'q')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flag carrier'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'q'}}

 Q: Give me {low-cost airline} that {airline hub} {Dublin Airport} and which that starts with {'r'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q190915 . ?sbj wdt:P113 wd:Q178021 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'low-cost airline', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'airline hub', 'o': 'DUB'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: What was the population of Gyeongju in December of 2012?
 SPARQL: SELECT ?obj WHERE { wd:Q42097 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2012')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gyeongju', 'p': 'population', 'o': '?x0', 't': '2012'}

 Q: what is the {street number} for {Musée d'Orsay} has {located on street} as {rue de Bellechasse} ?
 SPARQL: SELECT ?value WHERE { wd:Q23402 p:P669 ?s . ?s ps:P669 wd:Q3450565 . ?s pq:P670 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'street number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Musee D'Orsay", 'p': 'located on street', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'located on street', 'o': 'rue de Bellechasse'}}}

 Q: What is {is in the village of} of {Kupang}, that has {has counties} is {Timor Tengah Selatan} ?
 SPARQL: SELECT ?answer WHERE { wd:Q14155 wdt:P131 ?answer . ?answer wdt:P150 wd:Q14151}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kupang', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has counties', 'o': 'Timor Tengah Selatan'}}

 Q: Which intergovernmental organization is headed by the United Nations Secretary-General?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2388 wd:Q81066 . ?sbj wdt:P31 wd:Q245065 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headed by', 'o': 'United Nations Secretary-General', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'intergovernmental organization'}}

 Q: What was the subject of Hemut Kohl's doctoral thesis?
 SPARQL:  select distinct ?obj where { wd:Q2518 wdt:P1026 ?obj . ?obj wdt:P31 wd:Q187685 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Kohl', 'p': 'thesis', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'doctoral thesis'}}

 Q: What is Kenny Dalglish's given name as the series ordinal for Mathieson?
 SPARQL: SELECT ?value WHERE { wd:Q187198 p:P735 ?s . ?s ps:P735 wd:Q6787177 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kenny Dalglish', 'p': 'given name', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'given name', 'o': 'Mathieson'}}}

 Q: Is the attendance of the re:publica equaal to 7000?
 SPARQL: ASK WHERE { wd:Q2134501 wdt:P1110 ?obj filter(?obj = 7000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 're:publica', 'p': 'attendance', 'o': '?x0', '?x0': '7000'}

 Q: How much product materials are being produced by the Huawei} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q160120 wdt:P1056 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Huawei', 'p': 'product', 'o': '?x0'}

 Q: James Stewart is represented by which talent agency ?
 SPARQL:  select distinct ?obj where { wd:Q102462 wdt:P1875 ?obj . ?obj wdt:P31 wd:Q5354754 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James Stewart', 'p': 'represented by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'talent agency'}}

 Q: What is { significant event } of { Cristina Kirchner } that is { medical condition } { thyroid cancer }?
 SPARQL: SELECT ?obj WHERE { wd:Q40649 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P1050 wd:Q826522 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'significant event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cristina Kirchner', 'p': 'significant event', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'medical condition', 'o': 'thyroid cancer'}}}

 Q: What is the {human} for {religious order} of {Society of Jesus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P611 wd:Q36380 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religious order', 'o': 'Society of Jesus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the producer of the software publisher Martial Champion
 SPARQL: SELECT ?answer WHERE { wd:Q1079957 wdt:P123 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Martial Champion', 'p': 'publisher', 'o': '$y0'}}

 Q: What is the sister city of the birth place of Giancarlo Canetti?
 SPARQL: SELECT ?answer WHERE { wd:Q3105170 wdt:P19 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Giancarlo Canetti', 'p': 'birth place', 'o': '$y0'}}

 Q: What is {before was} of {Achaemenid Empire}, that has {closure date} is {-539-1-1} ?
 SPARQL: SELECT ?answer WHERE { wd:Q389688 wdt:P155 ?answer . ?answer wdt:P576 ?x FILTER(contains(?x,'-539-1-1'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Achaemenid Empire', 'p': 'before was', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'closure date', 'o': '-539-1-1'}}

 Q: What is the position held for the general secretary of Xi Jinping?
 SPARQL:  select distinct ?obj where { wd:Q15031 wdt:P39 ?obj . ?obj wdt:P31 wd:Q6501749 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Xi Jinping', 'p': 'position held', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'general secretary'}}

 Q: Did Gilda Radner  married to his wife in 1982-1-1?
 SPARQL: SELECT ?obj WHERE { wd:Q266808 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1982')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gilda Radner', 'p': 'wife', 'o': '?x0', 't': '1982'}

 Q: What is the sister of the player of Sun Ce's conquests in Jiangdong ?
 SPARQL: SELECT ?answer WHERE { wd:Q986561 wdt:P710 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sister', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Sun Ce's conquests in Jiangdong", 'p': 'player', 'o': '$y0'}}

 Q: Name a folk saint already performed by Jefferson Mappin that contain the word " claus" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q5464477 . ?sbj wdt:P175 wd:Q6175537 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'claus')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'folk saint', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'performed by', 'o': 'Jefferson Mappin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'claus'}}

 Q: IS THE POPULATION OF LIEBITZ IS EQUAL TO 0
 SPARQL: ASK WHERE { wd:Q315869 wdt:P1082 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Liebitz', 'p': 'population', 'o': '?x0', '?x0': '0'}

 Q: What administrative centre of Mari El Republic includes the municipaality of Kazan Governorate?
 SPARQL: SELECT ?answer WHERE { wd:Q5446 wdt:P36 ?answer . ?answer wdt:P131 wd:Q1425322}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mari El Republic', 'p': 'administrative centre', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Kazan Governorate'}}

 Q: What is {country} of {Prague} that is {start time} is {895-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1085 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(?x,'895-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prague', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '895-0-0'}}}

 Q: Can you tell me Unicode's IBM graphic character set global ID?
 SPARQL: select distinct ?answer where { wd:Q8819 wdt:P4197 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unicode', 'p': 'IBM graphic character set global ID', 'o': '?x0'}

 Q: Did {Hillary_Clinton} {significant event} {2006 United States Senate election in New York}?
 SPARQL: ASK WHERE { wd:Q6294 wdt:P793 wd:Q7891832 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hillary Clinton', 'p': 'significant event', 'o': '?x0', '?x0': '2006 United States Senate election in New York'}]

 Q: When did Vladimir Komarov receive the Hero of the Soviet Union award?
 SPARQL: SELECT ?value WHERE { wd:Q104865 p:P166 ?s . ?s ps:P166 wd:Q178473 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vladimir Komarov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Hero of the Soviet Union'}, 't': '?x0'}

 Q: What is {on river} of {Tobago}, that has {tributary} is {Rivière des Côtes de Fer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q185111 wdt:P206 ?answer . ?answer wdt:P974 wd:Q7338939}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tobago', 'p': 'on river', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Riviere des Cotes de Fer'}}

 Q: Which {type of business entity} of {user} is {Orient Express} ?
 SPARQL: SELECT ?answer WHERE { wd:Q191985 wdt:P137 ?X . ?X wdt:P1454 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of business entity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Orient Express', 'p': 'user', 'o': '$y0'}}

 Q: What is part of constellation of parent body of NGC 6362 ?
 SPARQL: SELECT ?answer WHERE { wd:Q932468 wdt:P397 ?X . ?X wdt:P59 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constellation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'NGC 6362', 'p': 'parent body', 'o': '$y0'}}

 Q: Is the inflation rate of Japan equal to -0.8?
 SPARQL: ASK WHERE { wd:Q17 wdt:P1279 ?obj filter(?obj = -0.8) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Japan', 'p': 'inflation rate', 'o': '?x0', '?x0': '-0.8'}

 Q: what is the {country} for {Richard Neutra} has {place of death} as {Wuppertal} ?
 SPARQL: SELECT ?value WHERE { wd:Q84312 p:P20 ?s . ?s ps:P20 wd:Q2107 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Neutra', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Wuppertal'}}}

 Q: What is {winners} of {sequel is} of {1928 World Snooker Championship} ?
 SPARQL: SELECT ?answer WHERE { wd:Q639942 wdt:P156 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1928 World Snooker Championship', 'p': 'sequel is', 'o': '$y0'}}

 Q: what is the {point in time} for {Andrei Sakharov} has {award received} as {Order of Lenin} ?
 SPARQL: SELECT ?value WHERE { wd:Q997 p:P166 ?s . ?s ps:P166 wd:Q185493 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Andrei Sakharov', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Order of Lenin'}, 't': '?x0'}

 Q: Tell me which is the abnormally low value that contains the word underweight in it's name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q54928607 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'underweight')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'abnormally low value'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'underweight'}}

 Q: What is {place of death} of {Al-Shafi‘i} that is {located in the administrative territorial entity} is {Egypt} ?
 SPARQL: SELECT ?obj WHERE { wd:Q294281 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P131 wd:Q79 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Al-Shafi‘i', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Egypt'}}}

 Q: What is the {periodical literature} for {mouthpiece} of {Social Democratic Party of Germany}
 SPARQL:  select distinct ?obj where { wd:Q49768 wdt:P2813 ?obj . ?obj wdt:P31 wd:Q1002697 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Social Democratic Party of Germany', 'p': 'mouthpiece', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'periodical'}}

 Q: What is the {Wikimedia list article} for {officeholder} of {Mauricio Macri}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1308 wd:Q561837 . ?sbj wdt:P31 wd:Q13406463 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officeholder', 'o': 'Mauricio Macri', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikimedia list article'}}

 Q: What is {duration} of {basketball} that is {excluding} is {time-out} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5372 p:P2047 ?s . ?s ps:P2047 ?obj . ?s pq:P1011 wd:Q784362 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'duration', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'basketball', 'p': 'duration', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'excluding', 'o': 'time-out'}}}

 Q: What is the {human} for {designed by} of {Space Invaders}
 SPARQL:  select distinct ?obj where { wd:Q220665 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Space Invaders', 'p': 'designed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: When was Nicholas Roerich nominated for the Nobel Peace Prize?
 SPARQL: SELECT ?value WHERE { wd:Q208993 p:P1411 ?s . ?s ps:P1411 wd:Q35637 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Nicholas Roerich', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Peace Prize'}, 't': '?x0'}

 Q: Tell me technique whose name has the word technology in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2695280 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'technology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'technology'}}

 Q: Which is the CELEX number for European Arrest Warrant?
 SPARQL: select distinct ?answer where { wd:Q1357669 wdt:P476 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'European Arrest Warrant', 'p': 'CELEX number', 'o': '?x0'}

 Q: what is in the INSEE department code  of French Guiana ?
 SPARQL: select distinct ?answer where { wd:Q3769 wdt:P2586 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'French Guiana', 'p': 'INSEE department code', 'o': '?x0'}

 Q: what is the {end time} for {Porfirio Rubirosa} has {spouse} as {Barbara Hutton} ?
 SPARQL: SELECT ?value WHERE { wd:Q1349488 p:P26 ?s . ?s ps:P26 wd:Q255620 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Porfirio Rubirosa', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Barbara Hutton'}}}

 Q: What is <category contains> of <dress> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4224 wd:Q200539}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'category contains', 'o': 'dress'}

 Q: Which municipality of Spain starts with the letter z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2074737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'municipality of Spain'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Which is the battle party of Dunkirk evacuation?
 SPARQL: SELECT ?answer WHERE { wd:Q911972 wdt:P710 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'battle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dunkirk evacuation', 'p': 'party', 'o': '$y0'}}

 Q: what is the {has quality} for {Gujarat} has {language used} as {Hindi} ?
 SPARQL: SELECT ?value WHERE { wd:Q1061 p:P2936 ?s . ?s ps:P2936 wd:Q1568 . ?s pq:P1552 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has quality', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gujarat', 'p': 'language used', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'language used', 'o': 'Hindi'}}}

 Q: How many {production company} are to/by {HBO} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P272 wd:Q23633 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'production company', 'o': 'HBO'}

 Q: What is the {essential medicine} with the {MIN(defined daily dose)} whose {has part} is {oxygen}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q35456 . ?ent wdt:P4250 ?obj . ?ent wdt:P527 wd:Q629} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'defined daily dose', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'essential medicine', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has part', 'o': 'oxygen'}}}

 Q: Is the payload mass of the USS Kobayashi Maru equal to 97000?
 SPARQL: ASK WHERE { wd:Q47459827 wdt:P4519 ?obj filter(?obj = 97000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'USS Kobayashi Maru', 'p': 'payload mass', 'o': '?x0', '?x0': '97000'}

 Q: Michael Dell is the CEO of which of business organisation.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P169 wd:Q218630 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'CEO', 'o': 'Michael Dell', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: Who did Laura Dern marry in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q220901 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Laura Dern', 'p': 'marry', 'o': '?x0', 't': '1993'}

 Q: Is Brian Wilson relative to Stan Love}
 SPARQL: ASK WHERE { wd:Q313013 wdt:P1038 wd:Q3968108 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Brian Wilson', 'p': 'relative', 'o': '?x0', '?x0': 'Stan Love'}]

 Q: What is {award received} of {Gao Xingjian} that is {point in time} is {2000-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q18143 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2000')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gao Xingjian', 'p': 'award', 'o': '?x0', 't': '2000'}

 Q: What is {subsidiary entities} of {book publisher} of {Disney Magicboard Online} ?
 SPARQL: SELECT ?answer WHERE { wd:Q972216 wdt:P123 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Disney Magicboard Online', 'p': 'publisher', 'o': '$y0'}}

 Q: How many encodes are by DL-proline?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P688 wd:Q484583 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'encodes', 'o': 'DL-proline'}

 Q: What are the painting technique which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1231896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'painting technique'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What is the {patent medicine} for {product or material produced} of {The Coca-Cola Company}
 SPARQL:  select distinct ?obj where { wd:Q3295867 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q3480271 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coca-Cola', 'p': 'product', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'patent medicine'}}

 Q: what is the {electoral district} for {Franklin Pierce} has {position held} as {United States representative} ?
 SPARQL: SELECT ?value WHERE { wd:Q12312 p:P39 ?s . ?s ps:P39 wd:Q13218630 . ?s pq:P768 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franklin Pierce', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'United States representative'}}}

 Q: What is {work period (end)} and {work period (start)} of {{Seattle} has {head of government} as {Bertha Knight Landes}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q5083 p:P6 ?s . ?s ps:P6 wd:Q2899248 . ?s pq:P2032 ?value1 . ?s pq:P2031 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work period (end)', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Bertha Knight Landes'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'work period (start)', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'mayor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'mayor', 'o': 'Bertha Knight Landes'}}}]

 Q: How many administrative territorial entities are located by Los Lagos Region?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P131 wd:Q2178 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Los Lagos Region'}

 Q: What is the {human} for {editor} of {Playboy}
 SPARQL:  select distinct ?obj where { wd:Q150820 wdt:P98 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Playboy', 'p': 'editor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: tell me eonothem name has the word proterozoic in it
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2669627 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'proterozoic')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'eonothem'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'proterozoic'}}

 Q: What is {named for} of {Cauchy stress tensor}, that has {employment} is {physicist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q13409892 wdt:P138 ?answer . ?answer wdt:P106 wd:Q169470}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'stress tensor', 'p': 'named for', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'employment', 'o': 'physicist'}}

 Q: What is {award received} of {Kanye West} that is {together with} is {Fergie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q15935 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q180004 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kanye West', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Fergie'}}}

 Q: Tell me the specialized agency of the United Nations that contains the word world in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15925165 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'world')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialized agency of the United Nations'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'world'}}

 Q: what is the {point in time} for {Akira Kurosawa} has {award received} as {Blue Ribbon Awards for Best Director} ?
 SPARQL: SELECT ?value WHERE { wd:Q8006 p:P166 ?s . ?s ps:P166 wd:Q19833431 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Akira Kurosawa', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Blue Ribbon Awards for Best Director'}, 't': '?x0'}

 Q: What is the name of the capital city of South Australia
 SPARQL:  select distinct ?obj where { wd:Q35715 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'South Australia', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: "What is {depiction of} of {Pale Blue Dot}, which has {aphelion} is {1.0} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q474472 wdt:P180 ?answer . ?answer wdt:P2243 ?x FILTER(contains(?x,'1.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pale Blue Dot', 'p': 'depiction of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'aphelion', 'o': '1.0'}}

 Q: what is casualty of  cause of death
 SPARQL: select distinct ?answer where { ?answer wdt:P509 wd:Q1056901}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'cause of death', 'o': 'casualty'}

 Q: What is the {medical society} for {studied by} of {diabetes mellitus}
 SPARQL:  select distinct ?obj where { wd:Q12206 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q19869268 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diabetes', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'medical society'}}

 Q: Which is the FISA rower ID for Steve Redgrave?
 SPARQL: select distinct ?answer where { wd:Q52679 wdt:P2091 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Steve Redgrave', 'p': 'FISA rower ID', 'o': '?x0'}

 Q: Was Roman Empire followed by Western Roman Empire?
 SPARQL: ASK WHERE { wd:Q2277 wdt:P156 wd:Q42834 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Roman Empire', 'p': 'followed by', 'o': '?x0', '?x0': 'Roman Empire'}]

 Q: What is <research intervention> of <crop rotation> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P4844 wd:Q191258}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'research intervention', 'o': 'crop rotation'}

 Q: Who is the spouse of Cary Grant?
 SPARQL: SELECT ?obj WHERE { wd:Q83410 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1945')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Cary Grant', 'p': 'spouse', 'o': '?x0', 't': '1945'}

 Q: Which means {Name Assigning Authority Number} in the {Indiana University} ?
 SPARQL: select distinct ?answer where { wd:Q6608367 wdt:P1870 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indiana University', 'p': 'Name Assigning Authority Number', 'o': '?x0'}

 Q: What is the {aircraft family} for {item operated} of {Cathay Pacific}
 SPARQL:  select distinct ?obj where { wd:Q32141 wdt:P121 ?obj . ?obj wdt:P31 wd:Q15056993 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cathay Pacific', 'p': 'item operated', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aircraft family'}}

 Q: Is it true that the duration of the 2079-2080 one-year-period equals to 1?
 SPARQL: ASK WHERE { wd:Q61702923 wdt:P2047 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '2079-2080 one-year-period', 'p': 'duration', 'o': '?x0', '?x0': '1'}

 Q: Is the first name of Katrina Kaif similar to Kathrine?
 SPARQL: SELECT ?answer WHERE { wd:Q9550 wdt:P735 ?answer . ?answer wdt:P460 wd:Q27229814}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Katrina Kaif', 'p': 'first name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'similar to', 'o': 'Kathrine'}}

 Q: What is the {temple} for {location} of {Acropolis of Athens}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q131013 . ?sbj wdt:P31 wd:Q44539 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Acropolis of Athens', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'temple'}}

 Q: Is it true that the flash point of zinc stearate is greater than 636?
 SPARQL: ASK WHERE { wd:Q204923 wdt:P2128 ?obj filter(?obj > 636.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'zinc stearate', 'p': 'flash point', 'o': '?x0', '?x0': '636.0'}

 Q: Is 58 the total beats per minute of the Calmant?
 SPARQL: ASK WHERE { wd:Q54878648 wdt:P1725 ?obj filter(?obj = 58) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Calmant', 'p': 'beats per minute', 'o': '?x0', '?x0': '58'}

 Q: When did R. T. Rybak stop being the head of government for Minneapolis?
 SPARQL: SELECT ?value WHERE { wd:Q36091 p:P6 ?s . ?s ps:P6 wd:Q665300 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Minneapolis', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'R. T. Rybak'}}}

 Q: What is {borders} of {Strait of Malacca}, that has {category of associated people} is {Category:People from Aceh} ?
 SPARQL: SELECT ?answer WHERE { wd:Q48359 wdt:P47 ?answer . ?answer wdt:P1792 wd:Q7117272}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Strait of Malacca', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'category of associated people', 'o': 'Category:People from Aceh'}}

 Q: What is {diplomatic relation} of {is in the region of} of {Michoacán} ?
 SPARQL: SELECT ?answer WHERE { wd:Q79861 wdt:P131 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Michoacan', 'p': 'region', 'o': '$y0'}}

 Q: What is the {historical Chinese state} for {time period} of {Three Kingdoms}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2348 wd:Q185043 . ?sbj wdt:P31 wd:Q50068795 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'time period', 'o': 'Three Kingdoms', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical Chinese state'}}

 Q: Is it true that the Human Development Index of Solomon Islands is less than 0.404?
 SPARQL: ASK WHERE { wd:Q685 wdt:P1081 ?obj filter(?obj < 0.404) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Solomon Islands', 'p': 'Human Development Index', 'o': '?x0', '?x0': '0.404'}

 Q: What's the SecondHandSongs song ID of the song Johnny B. Goode?
 SPARQL: select distinct ?answer where { wd:Q931481 wdt:P2908 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Johnny B. Goode', 'p': 'SecondHandSongs song ID', 'o': '?x0'}

 Q: What is the Scottish charity number at the University of Edinburgh?
 SPARQL: select distinct ?answer where { wd:Q160302 wdt:P3163 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'University of Edinburgh', 'p': 'charity number', 'o': '?x0'}

 Q: Which is the mouth of the watercourse of Lake Superior?
 SPARQL: select distinct ?answer where { ?answer wdt:P403 wd:Q1066}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mouth of the watercourse', 'o': 'Lake Superior'}

 Q: What is {position held} of {Theodore Roosevelt} that is {replaces} is {William McKinley} ?
 SPARQL: SELECT ?obj WHERE { wd:Q33866 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q35041 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodore Roosevelt', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaces', 'o': 'William McKinley'}}}

 Q: When did Oscar Robertson receive the All-NBA Team award?
 SPARQL: SELECT ?value WHERE { wd:Q17717 p:P166 ?s . ?s ps:P166 wd:Q674359 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Oscar Robertson', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'All-NBA Team'}, 't': '?x0'}

 Q: With an abbreviation of Аял, what is the biological sex of Sally Field?
 SPARQL: SELECT ?answer WHERE { wd:Q187033 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'Аял'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sally Field', 'p': 'biological sex', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'abbreviation', 'o': 'аял'}}

 Q: What are the television genre which start with the letter zeitfunk
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15961987 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeitfunk')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'television genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeitfunk'}}

 Q: What is {position held} of {Elihu Root} that is {replaces} is {Russell Alexander Alger} ?
 SPARQL: SELECT ?obj WHERE { wd:Q220619 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q880655 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Elihu Root', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Russell Alexander Alger'}}}

 Q: Which is {method of murder} of {music by} {Schubert's last sonatas} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1509328 wdt:P86 ?X . ?X wdt:P509 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'method of murder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Schubert's last sonatas", 'p': 'music by', 'o': '$y0'}}

 Q: Was Meningitis drug used for treatment ceftriaxone and ibuprofen?
 SPARQL: ASK WHERE { wd:Q48143 wdt:P2176 wd:Q421713 . wd:Q48143 wdt:P2176 wd:Q186969 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Meningitis', 'p': 'used for treatment', 'o': '?x0', '?x0': 'ceftriaxone'}, {'h': 'IS', 'v': '?x1', 's': 'Meningitis', 'p': 'used for treatment', 'o': '?x1', '?x1': 'ibuprofen'}]

 Q: Who married the daughters of Mahaut, Countess of Artois?
 SPARQL: SELECT ?answer WHERE { wd:Q1166728 wdt:P40 ?X . ?X wdt:P26 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'married', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahaut, Countess of Artois', 'p': 'daughter', 'o': '$y0'}}

 Q: What is the Parliamentary record identifier of Glenda Jackson?
 SPARQL: select distinct ?answer where { wd:Q182408 wdt:P2172 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Glenda Jackson', 'p': 'Parliamentary record identifier', 'o': '?x0'}

 Q: What colours are of the head office location of BBC World News?
 SPARQL: SELECT ?answer WHERE { wd:Q208491 wdt:P159 ?X . ?X wdt:P462 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'colour', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'BBC World News', 'p': 'head office location', 'o': '$y0'}}

 Q: What is Hokkaido University's series ordinal under chairperson Toyoharu Nawa?
 SPARQL: SELECT ?value WHERE { wd:Q1057199 p:P488 ?s . ?s ps:P488 wd:Q47536230 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hokkaido University', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Toyoharu Nawa'}}}

 Q: What is {endorsed by} of {series} of {Republic of Ireland v Sweden} ?
 SPARQL: SELECT ?answer WHERE { wd:Q24201967 wdt:P179 ?X . ?X wdt:P859 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sponsor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Republic of Ireland v Sweden', 'p': 'series', 'o': '$y0'}}

 Q: What is Bernhard Schlink's place of birth, area code 05209?
 SPARQL: SELECT ?answer WHERE { wd:Q76699 wdt:P19 ?answer . ?answer wdt:P473 ?x FILTER(contains(?x,'05209'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bernhard Schlink', 'p': 'place of birth', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'area code', 'o': '05209'}}

 Q: What is {record held} of {pole vault} and {location}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q185027 p:P1000 ?s . ?s ps:P1000 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'record held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'pole vault', 'p': 'record held', 'o': '$y0'}}]

 Q: What higher taxon name of Prunus dulcis also has the common name of plum?
 SPARQL: SELECT ?answer WHERE { wd:Q39918 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'plum'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Prunus dulcis', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'common name', 'o': 'plum'}}

 Q: Tell me the race horse whose name starts with t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10855242 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'race horse'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Which is the translation for illustrator Beatrix Potter?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P110 wd:Q214565 . ?sbj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'illustrator', 'o': 'Beatrix Potter', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'translation'}}

 Q: How many {member of} are for {Neil Armstrong} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1615 wdt:P463 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Neil Armstrong', 'p': 'member of', 'o': '?x0'}

 Q: Tell me  international association football national teams competition  whose name has the word cup in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q34542827 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'cup')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'international association football national teams competition'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'cup'}}

 Q: How many interactions constitute a weak interaction ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P517 wd:Q11418 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'interaction', 'o': 'weak interaction'}

 Q: When did child of Abigail Adams and date of birth?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q206191 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P569 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Abigail Adams', 'p': 'child', 'o': '$y0'}}]

 Q: What is {academic major} and {academic degree} of {{Denzel Washington} has {educated at} as {Fordham University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q42101 p:P69 ?s . ?s ps:P69 wd:Q130965 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Denzel Washington', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Fordham University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Denzel Washington', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Fordham University'}}}]

 Q: When did member of sports team of Franz Beckenbauer and number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q4457 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'member of sports team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of sports team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Franz Beckenbauer', 'p': 'member of sports team', 'o': '$y0'}}]

 Q: What is {incarnation of} of {Voltaire} that is {statement supported by} is {Jean-Baptiste Fiard} ?
 SPARQL: SELECT ?obj WHERE { wd:Q9068 p:P3701 ?s . ?s ps:P3701 ?obj . ?s pq:P3680 wd:Q29886576 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'incarnation of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Voltaire', 'p': 'incarnation of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'according to', 'o': 'Jean-Baptiste Fiard'}}}

 Q: What is {winners} of {prize awarded} of {Ariel Rubinstein} ?
 SPARQL: SELECT ?answer WHERE { wd:Q659305 wdt:P166 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'winner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ariel Rubinstein', 'p': 'award', 'o': '$y0'}}

 Q: What is {findspot} of {niobium}, that has {total fertility rate} is {1.7} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1046 wdt:P189 ?answer . ?answer wdt:P4841 ?x FILTER(contains(?x,'1.7'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'niobium', 'p': 'findspot', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'total fertility rate', 'o': '1.7'}}

 Q: Which is the Y-DNA Haplogroup of Emmanuel Swedenborg?
 SPARQL: select distinct ?answer where { wd:Q185832 wdt:P4426 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Emmanuel Swedenborg', 'p': 'Y-DNA Haplogroup', 'o': '?x0'}

 Q: What are the chemical element  which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11344 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical element'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is the {contour line} for {measured physical quantity} of {temperature}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P111 wd:Q11466 . ?sbj wdt:P31 wd:Q6653802 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'measured physical quantity', 'o': 'temperature', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'contour line'}}

 Q: Was ABKCO Records the record label for Mick Jagger?
 SPARQL: ASK WHERE { wd:Q128121 wdt:P264 wd:Q2819021 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Mick Jagger', 'p': 'record label', 'o': '?x0', '?x0': 'ABKCO Records'}]

 Q: What is the {video game developer} for {parent organization} of {Nintendo}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P749 wd:Q8093 . ?sbj wdt:P31 wd:Q210167 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'parent organization', 'o': 'Nintendo', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game developer'}}

 Q: tell  me religious text that studied by Old Testament theology starts with o
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q179461 . ?sbj wdt:P2579 wd:Q7085202 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'o')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'religious text', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'Old Testament theology'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'o'}}

 Q: Which {phase of matter} and {temperature} of {{water} has {phase point} as {critical point}} ?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q111059 . ?s pq:P515 ?value1 . ?s pq:P2076 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'phase of matter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'temperature', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}]

 Q: What city in Scotland is John Knox's place of death and is in the postcode area EH1-EH13?
 SPARQL: SELECT ?answer WHERE { wd:Q189937 wdt:P20 ?answer . ?answer wdt:P281 ?x FILTER(contains(?x,'EH1-EH13'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Knox', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'postcode', 'o': 'eh1-eh13'}}

 Q: How many muscle origins are there in the {humerus} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q162595 wdt:P3490 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'humerus', 'p': 'muscle origin', 'o': '?x0'}

 Q: what is left wing of driving side
 SPARQL: select distinct ?answer where { ?answer wdt:P1622 wd:Q164597}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'driving side', 'o': 'left'}

 Q: What is the {profession} for {creator} of {fairy tale}
 SPARQL:  select distinct ?obj where { wd:Q699 wdt:P170 ?obj . ?obj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'fairy tale', 'p': 'created by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: Who gave the {produces} of {adapted from} of {Ostankino} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20643978 wdt:P144 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'produces', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ostankino', 'p': 'adapted from', 'o': '$y0'}}

 Q: What is {award received} of {National Autonomous University of Mexico} that is {point in time} is {2008-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q222738 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'National Autonomous University of Mexico', 'p': 'award', 'o': '?x0', 't': '2008'}

 Q: What mass shooting resulted in the most number of injured people?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q21480300 . ?ent wdt:P1339 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of injured', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mass shooting'}}

 Q: Which is the prerequisite of a master's degree?
 SPARQL: select distinct ?answer where { wd:Q183816 wdt:P4967 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "master's degree", 'p': 'prerequisite', 'o': '?x0'}

 Q: What is the key event of the sovereign state of Câlnic?
 SPARQL: SELECT ?answer WHERE { wd:Q510532 wdt:P17 ?X . ?X wdt:P793 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'key event', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Câlnic', 'p': 'sovereign state', 'o': '$y0'}}

 Q: Which is MyAnimeList manga ID for Death Note?
 SPARQL: select distinct ?answer where { wd:Q1834 wdt:P4087 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Death Note', 'p': 'MyAnimeList manga ID', 'o': '?x0'}

 Q: Which is Hornbostel-Sachs classification for bass drum?
 SPARQL: select distinct ?answer where { wd:Q211028 wdt:P1762 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'bass drum', 'p': 'Hornbostel-Sachs classification', 'o': '?x0'}

 Q: What follows the European Union after it is dissolved, abolished or demolished?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?obj . ?s pq:P576 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'abolished', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0'}}]

 Q: What is Stephen Curry's FIBA ID?
 SPARQL: select distinct ?answer where { wd:Q352159 wdt:P3542 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Stephen Curry', 'p': 'FIBA ID', 'o': '?x0'}

 Q: Did {Led_Zeppelin} {record label} {Stax}?
 SPARQL: ASK WHERE { wd:Q2331 wdt:P264 wd:Q1546001 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Led Zeppelin', 'p': 'record label', 'o': '?x0', '?x0': 'Stax'}]

 Q: What is {nominated for} of {Miklós Rózsa} that is {for work} is {Quo Vadis} ?
 SPARQL: SELECT ?obj WHERE { wd:Q319396 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q938137 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Miklós Rózsa', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Quo Vadis'}}}

 Q: Which  is theme music for Big Bang Theory ?
 SPARQL: select distinct ?answer where { wd:Q8539 wdt:P942 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Big Bang Theory', 'p': 'theme music', 'o': '?x0'}

 Q: What are the dog breed which start with the letter wetterhoun
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q39367 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wetterhoun')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog breed'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wetterhoun'}}

 Q: What is the {version, edition, or translation} for {edition or translation of} of {Federalist Papers}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P629 wd:Q858036 . ?sbj wdt:P31 wd:Q3331189 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'version of', 'o': 'Federalist Papers', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'version'}}

 Q: What is {significant event} of {Rijksmuseum} that is {located at street address} is {Museumstraat 1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q190804 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P969 ?x filter(contains(?x,'Museumstraat 1')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rijksmuseum', 'p': 'significant event', 'o': '?x0'}

 Q: What is {dead} of {discoverer of} of {distillation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q101017 wdt:P61 ?X . ?X wdt:P570 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dead', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'distillation', 'p': 'discoverer', 'o': '$y0'}}

 Q: Who was Jonathan Pryce's partner beginning in 1974?
 SPARQL: SELECT ?obj WHERE { wd:Q312702 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1974')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jonathan Pryce', 'p': 'partner', 'o': '?x0', 't': '1974'}

 Q: "Which second language from Hugo Chavez, has the shortened name іспанська?"
 SPARQL: SELECT ?answer WHERE { wd:Q8440 wdt:P1412 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'іспанська'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hugo Chavez', 'p': 'language', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': 'іспанська'}}

 Q: When did film for country of origin of Soviet Union?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'film'}}

 Q: What is the residence of Alicia Alonso born at 1937-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q236013 p:P551 ?s . ?s ps:P551 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1937')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Alicia Alonso', 'p': 'residence', 'o': '?x0', 't': '1937'}

 Q: What plays did the co-husband of Adéla Pollertová write?
 SPARQL: SELECT ?answer WHERE { wd:Q5331945 wdt:P1038 ?X . ?X wdt:P641 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'play', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Adéla Pollertová', 'p': 'co-husband', 'o': '$y0'}}

 Q: Which is the RTECS number for calcium carbonate?
 SPARQL: select distinct ?answer where { wd:Q23767 wdt:P657 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'calcium carbonate', 'p': 'RTECS number', 'o': '?x0'}

 Q: what is the {for work} for {Willie Nelson} has {nominated for} as {Grammy Award for Best Country Performance by a Duo or Group with Vocal} ?
 SPARQL: SELECT ?value WHERE { wd:Q206112 p:P1411 ?s . ?s ps:P1411 wd:Q5593784 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Willie Nelson', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Grammy Award for Best Country Performance by a Duo or Group with Vocal'}}}

 Q: Who is the governor of the basin countries by Lake Tahoe?
 SPARQL: SELECT ?answer WHERE { wd:Q169962 wdt:P205 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'governor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lake Tahoe', 'p': 'basin countries', 'o': '$y0'}}

 Q: what is the {valid in period} for {Nancy} has {located in time zone} as {UTC+02:00} ?
 SPARQL: SELECT ?value WHERE { wd:Q40898 p:P421 ?s . ?s ps:P421 wd:Q6723 . ?s pq:P1264 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'valid in period', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nancy', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'time zone', 'o': 'UTC+02:00'}}}

 Q: What is {informed by} of {painter} of {Mountains and Clouds} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6925686 wdt:P170 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'informed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mountains and Clouds', 'p': 'painter', 'o': '$y0'}}

 Q: What is the {creative work} for {edition or translation of} of {HTML5}
 SPARQL:  select distinct ?obj where { wd:Q2053 wdt:P629 ?obj . ?obj wdt:P31 wd:Q17537576 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'HTML5', 'p': 'edition or translation of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'creative work'}}

 Q: Who was the previous top dog of 1991 Mr. Olympia?
 SPARQL: SELECT ?answer WHERE { wd:Q15286320 wdt:P155 ?X . ?X wdt:P1346 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'top dog', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': '1991 Mr. Olympia', 'p': 'prev', 'o': '$y0'}}

 Q: Which language of work or name for meat has pronunciation audio as It-la carne.ogg?
 SPARQL: SELECT ?value WHERE { wd:Q10990 p:P443 ?s . ?s ps:P443 ?x filter(contains(?x,'It-la carne.ogg')) . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language of work or name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'meat', 'p': 'pronunciation audio', 'o': '$y0'}}

 Q: What is {nominated for} of {Gregory Peck} that is {statement is subject of} is {18th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q108366 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q917178 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregory Peck', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '18th Academy Awards'}}}

 Q: What is {nominated for} of {Philip Seymour Hoffman} that is {statement is subject of} is {80th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q180560 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q215132 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philip Seymour Hoffman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '80th Academy Awards'}}}

 Q: What is famous works for writers of Some Came Running ?
 SPARQL: SELECT ?answer WHERE { wd:Q21045747 wdt:P50 ?X . ?X wdt:P800 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Some Came Running', 'p': 'writer', 'o': '$y0'}}

 Q: Which garrison of the International Organization for Standardization has the Geneva panorama banner.jpg as their Wikivoyage banner?
 SPARQL: SELECT ?answer WHERE { wd:Q15028 wdt:P159 ?answer . ?answer wdt:P948 ?x FILTER(contains(?x,'Geneva panorama banner.jpg'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'International Organization for Standardization', 'p': 'garrison', 'o': '?x0'}

 Q: What is {initial cause} of {fuel type} of {chisel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q474188 wdt:P618 ?X . ?X wdt:P828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'chisel', 'p': 'fuel type', 'o': '$y0'}}

 Q: Is Anne Boleyn place of burial in London?
 SPARQL: ASK WHERE { wd:Q80823 wdt:P119 wd:Q84 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Anne Boleyn', 'p': 'place of burial', 'o': '?x0', '?x0': 'London'}]

 Q: Tell me method whose name has the word washing in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1799072 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'washing')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'method'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'washing'}}

 Q: Which is {film genre} {played by} {James Bond Theme} ?
 SPARQL: SELECT ?answer WHERE { wd:Q746181 wdt:P175 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'James Bond Theme', 'p': 'played by', 'o': '$y0'}}

 Q: which color starts with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1075 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'color'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: what is the {point in time} for {Frans Eemil Sillanpää} has {nominated for} as {Nobel Prize in Literature} ?
 SPARQL: SELECT ?value WHERE { wd:Q132723 p:P1411 ?s . ?s ps:P1411 wd:Q37922 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Frans Eemil Sillanpää', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Literature'}, 't': '?x0'}

 Q: what is the {end time} for {Georges Clemenceau} has {position held} as {Minister of War} ?
 SPARQL: SELECT ?value WHERE { wd:Q171730 p:P39 ?s . ?s ps:P39 wd:Q19018174 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Georges Clemenceau', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Minister of War'}}}

 Q: What is the child body of the star of Sagittarius Dwarf Elliptical Galaxy?
 SPARQL: SELECT ?answer WHERE { wd:Q32885 wdt:P397 ?X . ?X wdt:P398 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sagittarius Dwarf Elliptical Galaxy', 'p': 'star', 'o': '$y0'}}

 Q: How many leagues are there for Chelsea F.C.
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q9616 wdt:P118 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Chelsea F.C.', 'p': 'league', 'o': '?x0'}

 Q: Is the minimum lethal dose of acetaldehyde equal to 300?
 SPARQL: ASK WHERE { wd:Q61457 wdt:P2300 ?obj filter(?obj = 300) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'acetaldehyde', 'p': 'minimal lethal dose', 'o': '?x0', '?x0': '300'}

 Q: Tell me civil war whose name has the word war in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q8465 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'war')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'civil war'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'war'}}

 Q: What is RHE doctor ID for Ernest Renan ?
 SPARQL: select distinct ?answer where { wd:Q157155 wdt:P5459 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ernest Renan', 'p': 'RHE doctor ID', 'o': '?x0'}

 Q: What is the {biblical episode} for {significant person} of {Noah}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3342 wd:Q81422 . ?sbj wdt:P31 wd:Q22704077 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'significant person', 'o': 'Noah', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'biblical episode'}}

 Q: What is the gender of John Mandeville, whose shortened name is 男?
 SPARQL: SELECT ?answer WHERE { wd:Q24766 wdt:P21 ?answer . ?answer wdt:P1813 ?x FILTER(contains(?x,'男'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Mandeville', 'p': 'gender', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'shortened name', 'o': '男'}}

 Q: What is {date of birth} and {mother} of {{Charlemagne} has {child} as {Drogo}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q3044 p:P40 ?s . ?s ps:P40 wd:Q723791 . ?s pq:P569 ?value1 . ?s pq:P25 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of birth', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Drogo'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'mother', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Charlemagne', 'p': 'child', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'child', 'o': 'Drogo'}}}]

 Q: What is the {bibliography} for {list of works} of {Ray Bradbury}
 SPARQL:  select distinct ?obj where { wd:Q40640 wdt:P1455 ?obj . ?obj wdt:P31 wd:Q1631107 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ray Bradbury', 'p': 'list of works', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'bibliography'}}

 Q: What is {country} of {Bratislava} that is {start time} is {907-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1780 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P580 ?x filter(contains(?x,'907-0-0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bratislava', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'start time', 'o': '907-0-0'}}}

 Q: What is the {death place} of {Vera Kholodnaya}, that {partner city} is {Haifa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2622578 wdt:P20 ?answer . ?answer wdt:P190 wd:Q41621}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vera Kholodnaya', 'p': 'death place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Haifa'}}

 Q: tell me stylistic device starts with T
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q182545 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'ī')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stylistic device'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'ī'}}

 Q: Impressionism is followed by and named after what?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q40415 wdt:P156 ?ans_1 . wd:Q40415 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Impressionism', 'p': 'followed by', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Impressionism', 'p': 'named after', 'o': '?x1'}]

 Q: Give me {physical quantity} that {measured by} {watt per meter kelvin} and which contains the word {conductivity} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q107715 . ?sbj wdt:P1880 wd:Q1463969 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'conductivity')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'physical quantity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'measured by', 'o': 'watt per meter kelvin'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'conductivity'}}

 Q: Are acetaminophen and methoxyflurane drugs used for the treatment of migraines?
 SPARQL: ASK WHERE { wd:Q133823 wdt:P2176 wd:Q57055 . wd:Q133823 wdt:P2176 wd:Q411594 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'migraine', 'p': 'treatment', 'o': '?x0', '?x0': 'acetaminophen'}, {'h': 'IS', 'v': '?x1', 's': 'migraine', 'p': 'treatment', 'o': '?x1', '?x1': 'methoxyflurane'}]

 Q: What is {place of death} of {Norbert Wiener} that is {country} is {Sweden} ?
 SPARQL: SELECT ?obj WHERE { wd:Q178577 p:P20 ?s . ?s ps:P20 ?obj . ?s pq:P17 wd:Q34 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Norbert Wiener', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Sweden'}}}

 Q: Who is the person which is the employer of CBS?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P108 wd:Q43380 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'employer', 'o': 'CBS', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: How many {public holiday} are for {Israel} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q801 wdt:P832 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Israel', 'p': 'public holiday', 'o': '?x0'}

 Q: What are the social movement which start with the letter y
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q49773 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'y')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'social movement'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'y'}}

 Q: What is <ESPNFC.com player ID> of <Yaya Touré> ?
 SPARQL: select distinct ?answer where { wd:Q184277 wdt:P3681 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yaya Touré', 'p': 'ESPNFC.com player ID', 'o': '?x0'}

 Q: When did Harald zur Hausen receive the Bavarian Maximilian Order for Science and Art award?
 SPARQL: SELECT ?value WHERE { wd:Q75847 p:P166 ?s . ?s ps:P166 wd:Q565030 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Harald zur Hausen', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Bavarian Maximilian Order for Science and Art'}, 't': '?x0'}

 Q: Who is employed by Ernesto Zedillo, who is a member of the Ivy League?
 SPARQL: SELECT ?answer WHERE { wd:Q298149 wdt:P108 ?answer . ?answer wdt:P463 wd:Q49113}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ernesto Zedillo', 'p': 'employed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'Ivy League'}}

 Q: What is {work location} of {Pierre Puvis de Chavannes} that is {point in time} is {1848-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q216873 p:P937 ?s . ?s ps:P937 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1848')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pierre Puvis de Chavannes', 'p': 'work location', 'o': '?x0', 't': '1848'}

 Q: what is the {point in time} for {Richard Dawkins} has {award received} as {Silver Medal of the Zoological Society of London} ?
 SPARQL: SELECT ?value WHERE { wd:Q44461 p:P166 ?s . ?s ps:P166 wd:Q7516191 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Richard Dawkins', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Silver Medal of the Zoological Society of London'}, 't': '?x0'}

 Q: "Where is {is in the arrondissement of} of {Centre-Val de Loire}, which has {Human Development Index} is {0.888} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q13947 wdt:P131 ?answer . ?answer wdt:P1081 ?x FILTER(contains(?x,'0.888'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Centre-Val de Loire', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'Human Development Index', 'o': '0.888'}}

 Q: What cave starts with the letter "s"?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q35509 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 's')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cave'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 's'}}

 Q: What is <daily patronage> of <Guangzhou Metro> ?
 SPARQL: select distinct ?answer where { wd:Q660751 wdt:P1373 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Guangzhou Metro', 'p': 'daily patronage', 'o': '?x0'}

 Q: What is the {significant person} and the {characters} of {Crucifixion_of_Jesus} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q51636 wdt:P3342 ?ans_1 . wd:Q51636 wdt:P674 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Crucifixion of Jesus', 'p': 'significant person', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Crucifixion of Jesus', 'p': 'characters', 'o': '?x1'}]

 Q: Hubble Space Telescope was named after what in the year 1983?
 SPARQL: SELECT ?obj WHERE { wd:Q2513 p:P138 ?s . ?s ps:P138 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1983')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hubble Space Telescope', 'p': 'named after', 'o': '?x0', 't': '1983'}

 Q: What are the positional notation which start with the letter vigesimal
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1747853 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'vigesimal')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'positional notation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'vigesimal'}}

 Q: What is <Women's Collegiate Tennis Hall of Fame ID> of <Billie Jean King> ?
 SPARQL: select distinct ?answer where { wd:Q54527 wdt:P4402 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Billie Jean King', 'p': "Women's Collegiate Tennis Hall of Fame ID", 'o': '?x0'}

 Q: What is Salman of Saudi Arabia's hereditary title?
 SPARQL:  select distinct ?obj where { wd:Q367825 wdt:P97 ?obj . ?obj wdt:P31 wd:Q5737899 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Salman of Saudi Arabia', 'p': 'hereditary title', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'hereditary title'}}

 Q: Which is the {art genre} for {field of this occupation} of {clown}?
 SPARQL:  select distinct ?obj where { wd:Q7358 wdt:P425 ?obj . ?obj wdt:P31 wd:Q1792379 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'clown', 'p': 'field of this occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'art genre'}}

 Q: what is the {point in time} for {Ernst Mayr} has {award received} as {Eisenmann Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q5354 p:P166 ?s . ?s ps:P166 wd:Q5349948 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ernst Mayr', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Eisenmann Medal'}, 't': '?x0'}

 Q: who standards setting organisation of language of Pivot ?
 SPARQL: SELECT ?answer WHERE { wd:Q29001625 wdt:P277 ?X . ?X wdt:P1462 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'standards setting organisation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pivot', 'p': 'language', 'o': '$y0'}}

 Q: What is {nominated for} of {Oklahoma!} that is {nominee} is {Jay Blackton} ?
 SPARQL: SELECT ?obj WHERE { wd:Q2017333 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P2453 wd:Q3807499 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oklahoma!', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominee', 'o': 'Jay Blackton'}}}

 Q: What is {sports} of {épée}, that has {studied by} is {fencer} ?
 SPARQL: SELECT ?answer WHERE { wd:Q840419 wdt:P641 ?answer . ?answer wdt:P3095 wd:Q13381863}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'épée', 'p': 'sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'studied by', 'o': 'fencer'}}

 Q: Which is the legal form of sole proprietorship?
 SPARQL: select distinct ?answer where { ?answer wdt:P1454 wd:Q2912172}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'legal form', 'o': 'sole proprietorship'}

 Q: What is {actress} of {in narrative} of {Moses} ?
 SPARQL: SELECT ?answer WHERE { wd:Q9077 wdt:P1441 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actress', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Moses', 'p': 'in narrative', 'o': '$y0'}}

 Q: Which Australian state is Melbourne the capital of?
 SPARQL:  select distinct ?obj where { wd:Q3141 wdt:P1376 ?obj . ?obj wdt:P31 wd:Q5852411 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Melbourne', 'p': 'capital of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Australian state'}}

 Q: Which country has the highest nominal GDP per capita?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q6256 . ?ent wdt:P2132 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'nominal GDP per capita', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {position held} of {Arcadius} that is {replaces} is {Theodosius I} ?
 SPARQL: SELECT ?obj WHERE { wd:Q159369 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q46696 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arcadius', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Theodosius I'}}}

 Q: Is the water footprint of beef more than 18498.0?
 SPARQL: ASK WHERE { wd:Q192628 wdt:P6000 ?obj filter(?obj > 18498.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'beef', 'p': 'water footprint', 'o': '?x0', '?x0': '18498.0'}

 Q: What is {same} of {steam}, that has {user} is {evaporation} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3251738 wdt:P460 ?answer . ?answer wdt:P1535 wd:Q132814}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'steam', 'p': 'same', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'user', 'o': 'evaporation'}}

 Q: What is {governing body} of {play} of {Dragan Džajić} ?
 SPARQL: SELECT ?answer WHERE { wd:Q297357 wdt:P641 ?X . ?X wdt:P797 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'governing body', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dragan Džajić', 'p': 'play', 'o': '$y0'}}

 Q: When is the {marriage} of {significant event} forf {Franz Joseph I of Austria}?
 SPARQL:  select distinct ?obj where { wd:Q51056 wdt:P793 ?obj . ?obj wdt:P31 wd:Q8445 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Franz Joseph I of Austria', 'p': 'significant event', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'marriage'}}

 Q: Tell me the designation for an administrative territorial entity that replaces domain and which contains the word japan in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q15617994 . ?sbj wdt:P1365 wd:Q841985 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'japan')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'designation for an administrative territorial entity', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'replaces', 'o': 'domain'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'japan'}}

 Q: What is Elhuyar ZTH ID of diphtheria?
 SPARQL: select distinct ?answer where { wd:Q134649 wdt:P4746 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'diphtheria', 'p': 'Elhuyar ZTH ID', 'o': '?x0'}

 Q: What is <SUDOC authorities ID> of <Jean-Paul Belmondo> ?
 SPARQL: select distinct ?answer where { wd:Q106255 wdt:P269 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Jean-Paul Belmondo', 'p': 'SUDOC authorities ID', 'o': '?x0'}

 Q: What is {phase of matter} and {temperature} of {{water} has {phase point} as {triple point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q106410 . ?s pq:P515 ?value1 . ?s pq:P2076 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'phase of matter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'temperature', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}]

 Q: How many director are for The Wizard of Oz?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q193695 wdt:P57 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Wizard of Oz', 'p': 'director', 'o': '?x0'}

 Q: What is the {manner of death} and the {place of death} of {Dave_Mirra} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q3017223 wdt:P1196 ?ans_1 . wd:Q3017223 wdt:P20 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Dave Mirra', 'p': 'manner of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Dave Mirra', 'p': 'place of death', 'o': '?x1'}]

 Q: What is the quantity of square metre whose symbol is A?
 SPARQL: SELECT ?answer WHERE { wd:Q25343 wdt:P111 ?answer . ?answer wdt:P416 ?x FILTER(contains(?x,'A'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'square metre', 'p': 'quantity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'symbol', 'o': 'a'}}

 Q: What is instance of Babylon that has end time is -1792-0-0 ?
 SPARQL: SELECT ?obj WHERE { wd:Q5684 p:P31 ?s . ?s ps:P31 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1792')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Babylon', 'p': 'type', 'o': '?x0', 't': '1792'}

 Q: What is the tournament with the highest number of matches played whose participant is Hawthorn Football Club?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q500834 . ?ent wdt:P1350 ?obj . ?ent wdt:P710 wd:Q1034556 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'matches played', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tournament', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'participant', 'o': 'Hawthorn Football Club'}}}

 Q: Which  is subtitle for The Pickwick Papers ?
 SPARQL: select distinct ?answer where { wd:Q460583 wdt:P1680 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Pickwick Papers', 'p': 'subtitle', 'o': '?x0'}

 Q: When did City of God get nominated for the Academy Award for Best Cinematography?
 SPARQL: SELECT ?value WHERE { wd:Q220741 p:P1411 ?s . ?s ps:P1411 wd:Q131520 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'City of God', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Cinematography'}, 't': '?x0'}

 Q: what is the {start time} for {Richard Seddon} has {position held} as {mayor} ?
 SPARQL: SELECT ?value WHERE { wd:Q559640 p:P39 ?s . ?s ps:P39 wd:Q30185 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Seddon', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'mayor'}}}

 Q: what is the {start time} for {Lesotho} has {flag image} as {Flag of Lesotho (1966).svg} ?
 SPARQL: SELECT ?value WHERE { wd:Q1013 p:P41 ?s . ?s ps:P41 ?x filter(contains(?x,'Flag of Lesotho (1966).svg')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lesotho', 'p': 'flag image', 'o': '$y0'}}

 Q: How many writing systems are there for Tagalog?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q34057 wdt:P282 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Tagalog', 'p': 'writing system', 'o': '?x0'}

 Q: What is <encodes> of <L-Cysteine> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P688 wd:Q186474}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'encodes', 'o': 'L-Cysteine'}

 Q: What is the molecular function of DNA polymerase?
 SPARQL: select distinct ?answer where { ?answer wdt:P680 wd:Q206286}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'molecular function', 'o': 'DNA polymerase'}

 Q: What is the {epic poem} for {present in work} of {Hermes}
 SPARQL:  select distinct ?obj where { wd:Q41484 wdt:P1441 ?obj . ?obj wdt:P31 wd:Q37484 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Hermes', 'p': 'present in work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'epic poem'}}

 Q: In the Antofagasta Region, what is the male population?
 SPARQL: select distinct ?answer where { wd:Q2118 wdt:P1540 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Antofagasta Region', 'p': 'male population', 'o': '?x0'}

 Q: What is the {human} for {patron saint} of {Thessaloniki}
 SPARQL:  select distinct ?obj where { wd:Q17151 wdt:P417 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Thessaloniki', 'p': 'patron saint', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {spouse} of {Ryan Reynolds} that is {end time} is {2011-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q192682 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'2011')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ryan Reynolds', 'p': 'spouse', 'o': '?x0', 't': '2011'}

 Q: The Zamboanga Peninsula is divided into how many wards?
 SPARQL: SELECT ?answer WHERE { wd:Q13682 wdt:P131 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'divided into', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zamboanga Peninsula', 'p': 'in', 'o': '$y0'}}

 Q: What is <board member> of <Free Software Foundation> ?
 SPARQL: select distinct ?answer where { wd:Q48413 wdt:P3320 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Free Software Foundation', 'p': 'board member', 'o': '?x0'}

 Q: What is {owned by} of {Johnson & Johnson} that is {point in time} is {2017-1-25} ?
 SPARQL: SELECT ?obj WHERE { wd:Q333718 p:P127 ?s . ?s ps:P127 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2017')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Johnson & Johnson', 'p': 'owned by', 'o': '?x0', 't': '2017'}

 Q: What is the start time of Pete Maravich educated at Louisiana State University?
 SPARQL: SELECT ?value WHERE { wd:Q316183 p:P69 ?s . ?s ps:P69 wd:Q1521725 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pete Maravich', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Louisiana State University'}}}

 Q: What is {population} of {Crimean Peninsula} where {point in time} is {1989-1-1} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7835 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1989')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Crimean Peninsula', 'p': 'population', 'o': '?x0', 't': '1989'}

 Q: Who is {favorite player} of {writer} {Relativity: The Special and the General Theory} ?
 SPARQL: SELECT ?answer WHERE { wd:Q7310836 wdt:P50 ?X . ?X wdt:P737 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'favorite player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Relativity: The Special and the General Theory', 'p': 'writer', 'o': '$y0'}}

 Q: What is the Brazilian municipality code for Rio Branco?
 SPARQL: select distinct ?answer where { wd:Q171612 wdt:P1585 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Rio Branco', 'p': 'Brazilian municipality code', 'o': '?x0'}

 Q: How much cultures are in Mycenaean Greece?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2596 wd:Q181264 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'culture', 'o': 'Mycenaean Greece'}

 Q: Who is the partner of Ben Affleck who died at 1999-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q483118 p:P451 ?s . ?s ps:P451 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ben Affleck', 'p': 'partner', 'o': '?x0', 't': '1999'}

 Q: Which business has its headquarters located in Aachen?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P159 wd:Q1017 . ?sbj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'headquarters', 'o': 'Aachen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: what is the {point in time} for {Myanmar} has {number of out of school children} as {3.55928e+06} ?
 SPARQL: SELECT ?value WHERE { wd:Q836 p:P2573 ?s . ?s ps:P2573 ?x filter(contains(?x,'3.55928e+06')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Myanmar', 'p': 'number of out of school children', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of out of school children', 'o': '3.55928e+06'}, 't': '?x0'}

 Q: What is the name of the inventor or discoverer of Messier 87 whose gender is male?
 SPARQL: SELECT ?answer WHERE { wd:Q14041 wdt:P61 ?answer . ?answer wdt:P21 wd:Q6581097}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Messier 87', 'p': 'inventor', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'gender', 'o': 'male'}}

 Q: What is {located in time zone} of {Seattle} that is {valid in period} is {standard time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q5083 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q1777301 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time zone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Seattle', 'p': 'time zone', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'standard time'}}}

 Q: What is {studied under} of {painters} of {Christ Resurrected} ?
 SPARQL: SELECT ?answer WHERE { wd:Q28147005 wdt:P170 ?X . ?X wdt:P1066 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'studied under', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christ Resurrected', 'p': 'painter', 'o': '$y0'}}

 Q: Which is the cadastre commissioned by William the Conqueror?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P88 wd:Q37594 . ?sbj wdt:P31 wd:Q191072 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'William the Conqueror', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cadastre'}}

 Q: How many were founded by the Soviet Union?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P112 wd:Q15180 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'founded by', 'o': 'Soviet Union'}

 Q: What is {date of death} and {date of birth} of {{Pedro I} has {child} as {Princess Paula of Brazil}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q939 p:P40 ?s . ?s ps:P40 wd:Q4765169 . ?s pq:P570 ?value1 . ?s pq:P569 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Princess Paula of Brazil'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'date of birth', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pedro I', 'p': 'daughter', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'daughter', 'o': 'Princess Paula of Brazil'}}}]

 Q: What is the {aerial bomb} for {product or material produced} of {Manhattan Project}
 SPARQL:  select distinct ?obj where { wd:Q127050 wdt:P1056 ?obj . ?obj wdt:P31 wd:Q1137468 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Manhattan Project', 'p': 'product or material produced', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aerial bomb'}}

 Q: What member of Oman started in 1995?
 SPARQL: SELECT ?obj WHERE { wd:Q842 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1995')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Oman', 'p': 'member of', 'o': '?x0', 't': '1995'}

 Q: What is {position held} of {Arthur Balfour} that is {replaces} is {Edward Grey, 1st Viscount Grey of Fallodon} ?
 SPARQL: SELECT ?obj WHERE { wd:Q19008 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1365 wd:Q335187 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Balfour', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced', 'o': 'Edward Grey, 1st Viscount Grey of Fallodon'}}}

 Q: What is the {globular cluster} with the {MAX(distance from Earth)} whose {discoverer or inventor} is {Giovanni Domenico Maraldi}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q11276 . ?ent wdt:P2583 ?obj . ?ent wdt:P61 wd:Q722528 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'distance from Earth', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'globular cluster', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'discoverer or inventor', 'o': 'Giovanni Domenico Maraldi'}}}

 Q: What is {participant of} of {Vladimir Putin} that is {point in time} is {1999-12-31} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7747 p:P1344 ?s . ?s ps:P1344 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1999')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vladimir Putin', 'p': 'participant of', 'o': '?x0', 't': '1999'}

 Q: What is {publication date} of {Cowboy Bebop} that is {applies to part} is {manga} ?
 SPARQL: SELECT ?obj WHERE { wd:Q232246 p:P577 ?s . ?s ps:P577 ?obj . ?s pq:P518 wd:Q8274 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cowboy Bebop', 'p': 'publication date', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'applies to part', 'o': 'manga'}}}

 Q: What are the names of Keira Knightley's sibling and father?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q42581 wdt:P3373 ?ans_1 . wd:Q42581 wdt:P22 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Keira Knightley', 'p': 'sibling', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Keira Knightley', 'p': 'father', 'o': '?x1'}]

 Q: When did Yugoslavia have a monarchy as a basic form of government?
 SPARQL: SELECT ?value WHERE { wd:Q36704 p:P122 ?s . ?s ps:P122 wd:Q7269 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Yugoslavia', 'p': 'basic form of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'basic form of government', 'o': 'monarchy'}, 't': '?x0'}

 Q: Is it true that the number of pages of Quantitative EEG QEEG as a diagnostic tool for Alzheimer's dementia in patients with Down syndrome equals to 1.2?
 SPARQL: ASK WHERE { wd:Q29589476 wdt:P1104 ?obj filter(?obj = 1.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': "Quantitative EEG (QEEG) as a diagnostic tool for Alzheimer's dementia in patients with Down syndrome", 'p': 'number of pages', 'o': '?x0', '?x0': '1.2'}

 Q: What is {nominated for} of {Roberto Benigni} that is {statement is subject of} is {71st Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q23301 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q263239 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roberto Benigni', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '71st Academy Awards'}}}

 Q: Which is the natural script that is used by Arabic alphabet?
 SPARQL:  select distinct ?obj where { wd:Q8196 wdt:P1535 ?obj . ?obj wdt:P31 wd:Q29517555 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arabic alphabet', 'p': 'used by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'natural script'}}

 Q: When did the German Empire have a population of 4.94285e+07?
 SPARQL: SELECT ?value WHERE { wd:Q43287 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'4.94285e+07')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'German Empire', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '4.94285e+07'}, 't': '?x0'}

 Q: what is the {start time} for {Malcolm Marshall} has {member of sports team} as {Marylebone Cricket Club} ?
 SPARQL: SELECT ?value WHERE { wd:Q743209 p:P54 ?s . ?s ps:P54 wd:Q585149 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malcolm Marshall', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Marylebone Cricket Club'}}}

 Q: What is the {museum} for {architect} of {Zaha Hadid}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P84 wd:Q47780 . ?sbj wdt:P31 wd:Q33506 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'architect', 'o': 'Zaha Hadid', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'museum'}}

 Q: How many {killed by} are to/by {Perseus} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P157 wd:Q130832 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'killed by', 'o': 'Perseus'}

 Q: Name the barred spiral galaxy with highest redshift?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2490 . ?ent wdt:P1090 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'redshift', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'barred spiral galaxy'}}

 Q: Name an album whose tracklist includes Misty Mountain Hop that contains the word "IV" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q208569 . ?sbj wdt:P658 wd:Q267363 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'iv')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'album', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tracklist', 'o': 'Misty Mountain Hop'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'iv'}}

 Q: What is the {position} for {office held by head of state} of {Weimar Republic}
 SPARQL:  select distinct ?obj where { wd:Q41304 wdt:P1906 ?obj . ?obj wdt:P31 wd:Q4164871 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Weimar Republic', 'p': 'office held by head of state', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'position'}}

 Q: Is the maximum Strahler number of the Stony Run equal to 1?
 SPARQL: ASK WHERE { wd:Q18180791 wdt:P1548 ?obj filter(?obj = 1) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Stony Run', 'p': 'maximum Strahler number', 'o': '?x0', '?x0': '1'}

 Q: What did Karl Weierstraß's pupil do for a job?
 SPARQL: SELECT ?answer WHERE { wd:Q57103 wdt:P802 ?X . ?X wdt:P106 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'job', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Karl Weierstraß', 'p': 'pupil', 'o': '$y0'}}

 Q: What is {short-term exposure limit} of {carbon tetrachloride} that is {duration} is {60.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q225045 p:P2407 ?s . ?s ps:P2407 ?obj . ?s pq:P2047 ?x filter(contains(?x,'60.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'short-term exposure limit', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'carbon tetrachloride', 'p': 'short-term exposure limit', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'duration', 'o': '60.0'}}}

 Q: Tell me taxonomic rank whose name has the word variety in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q427626 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'variety')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'taxonomic rank'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'variety'}}

 Q: What is the timezone of the citizen of Erskine Caldwell?
 SPARQL: SELECT ?answer WHERE { wd:Q310464 wdt:P27 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'timezone', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erskine Caldwell', 'p': 'citizen of', 'o': '$y0'}}

 Q: Is it true that the employment by economic sector of Amsterdam equals to 90804?
 SPARQL: ASK WHERE { wd:Q9899 wdt:P2297 ?obj filter(?obj = 90804.0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Amsterdam', 'p': 'employment by economic sector', 'o': '?x0', '?x0': '90804.0'}

 Q: what is the {start time} for {Arthur Beetson} has {member of sports team} as {Sydney Roosters} ?
 SPARQL: SELECT ?value WHERE { wd:Q2864988 p:P54 ?s . ?s ps:P54 wd:Q2573367 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Arthur Beetson', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Sydney Roosters'}}}

 Q: Which is the specialty that is studied by Nubia?
 SPARQL:  select distinct ?obj where { wd:Q135028 wdt:P2579 ?obj . ?obj wdt:P31 wd:Q1047113 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nubia', 'p': 'studied by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'specialty'}}

 Q: Is Piosson's ratio of the AISI 420C / EN x46Cr13 martensitic stainless steel less than 0.282?
 SPARQL: ASK WHERE { wd:Q55714959 wdt:P5593 ?obj filter(?obj < 0.282) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': '420C', 'p': "Poisson's ratio", 'o': '?x0', '?x0': '0.282'}

 Q: What are the chemical compound which start with the letter w
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q11173 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: What are the comic strip which start with the letter zits
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q838795 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zits')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comic strip'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zits'}}

 Q: Which city is the capital of England?
 SPARQL:  select distinct ?obj where { wd:Q179876 wdt:P36 ?obj . ?obj wdt:P31 wd:Q515 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'England', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'city'}}

 Q: When did significant event of Nancy Pelosi and location?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q170581 p:P793 ?s . ?s ps:P793 ?obj . ?s pq:P276 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nancy Pelosi', 'p': 'significant event', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'significant event', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nancy Pelosi', 'p': 'significant event', 'o': '$y0'}}]

 Q: Who is the doctoral advisor and what is the location of Hans Bethe's academic and doctoral degree?
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q155794 p:P512 ?s . ?s ps:P512 wd:Q849697 . ?s pq:P184 ?value1 . ?s pq:P276 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'doctoral advisor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'doctoral degree'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'location', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hans Bethe', 'p': 'degree', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': 'doctoral degree'}}}]

 Q: what is the {start time} for {Tallinn} has {located in the administrative territorial entity} as {Estonia Governorate} ?
 SPARQL: SELECT ?value WHERE { wd:Q1770 p:P131 ?s . ?s ps:P131 wd:Q720496 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tallinn', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Estonia Governorate'}}}

 Q: What is <Persons of Ancient Athens> of <Aristophanes> ?
 SPARQL: select distinct ?answer where { wd:Q43353 wdt:P2460 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Aristophanes', 'p': 'Persons of Ancient Athens', 'o': '?x0'}

 Q: In which diocese is the Alexander Nevsky Cathedral?
 SPARQL: select distinct ?answer where { wd:Q43282 wdt:P708 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Alexander Nevsky Cathedral', 'p': 'diocese', 'o': '?x0'}

 Q: What is the {human} for {position held} of {pope}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P39 wd:Q19546 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'position held', 'o': 'pope', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What planetary system is a companion of Proxima Centauri b?
 SPARQL: SELECT ?answer WHERE { wd:Q26692445 wdt:P397 ?X . ?X wdt:P399 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'companion of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Proxima Centauri b', 'p': 'planetary system', 'o': '$y0'}}

 Q: What is the field of profession for Robert A. Heinlein?
 SPARQL: SELECT ?answer WHERE { wd:Q123078 wdt:P106 ?X . ?X wdt:P425 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of profession', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robert A. Heinlein', 'p': 'profession', 'o': '$y0'}}

 Q: What is {noble title} of {Saladin} and {follows}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q8581 p:P97 ?s . ?s ps:P97 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saladin', 'p': 'noble title', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'noble title', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Saladin', 'p': 'noble title', 'o': '$y0'}}]

 Q: In which country was Ahmad ibn Hanbal born in the city of Baghdad?
 SPARQL: SELECT ?value WHERE { wd:Q194442 p:P19 ?s . ?s ps:P19 wd:Q1530 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ahmad ibn Hanbal', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Baghdad'}}}

 Q: What is the stadium of owner of Durban?
 SPARQL:  select distinct ?obj where { wd:Q5468 wdt:P1830 ?obj . ?obj wdt:P31 wd:Q483110 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Durban', 'p': 'owner of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'stadium'}}

 Q: What is {start time} and {end time} of {{Glenn McGrath} has {member of sports team} as {Worcestershire County Cricket Club}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q1392178 p:P54 ?s . ?s ps:P54 wd:Q2725667 . ?s pq:P580 ?value1 . ?s pq:P582 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glenn McGrath', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Worcestershire County Cricket Club'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'end time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Glenn McGrath', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Worcestershire County Cricket Club'}}}]

 Q: What is {artistic genre} of {creators} of {Le Pont de Passy et la Tour Eiffel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20182314 wdt:P170 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Le Pont de Passy et la Tour Eiffel', 'p': 'creator', 'o': '$y0'}}

 Q: How many voice actors are credited for Ghost in the Shell?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q1066948 wdt:P725 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Ghost in the Shell', 'p': 'voice actor', 'o': '?x0'}

 Q: Which is the Carnegie Hall agent ID for David Ben-Gurion?
 SPARQL: select distinct ?answer where { wd:Q37610 wdt:P4104 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'David Ben-Gurion', 'p': 'Carnegie Hall agent ID', 'o': '?x0'}

 Q: Is the sandbox quantity on August 31st less than 24.8?
 SPARQL: ASK WHERE { wd:Q4820621 wdt:P1106 ?obj filter(?obj < 24.8) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'August 31', 'p': 'Sandbox-Quantity', 'o': '?x0', '?x0': '24.8'}

 Q: Which was the person as doctoral student of Galileo Galilei?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P185 wd:Q307 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Galileo Galilei', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: What is the brother of the sons of Johann Sebastian Bach?
 SPARQL: SELECT ?answer WHERE { wd:Q1339 wdt:P40 ?X . ?X wdt:P3373 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'bro', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Johann Sebastian Bach', 'p': 'son', 'o': '$y0'}}

 Q: what is the {start time} for {Nice} has {twinned administrative body} as {Edinburgh} ?
 SPARQL: SELECT ?value WHERE { wd:Q33959 p:P190 ?s . ?s ps:P190 wd:Q23436 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Nice', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Edinburgh'}}}

 Q: What is the {district of Austria} for {capital of} of {Austrian Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1376 wd:Q131964 . ?sbj wdt:P31 wd:Q871419 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital of', 'o': 'Austrian Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'district of Austria'}}

 Q: What is {phase of matter} and {pressure} of {{water} has {phase point} as {triple point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q106410 . ?s pq:P515 ?value1 . ?s pq:P2077 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'phase of matter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'pressure', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'triple point'}}}]

 Q: What country is Hämeenlinna in, the city Jean Sibelius was born in?
 SPARQL: SELECT ?value WHERE { wd:Q45682 p:P19 ?s . ?s ps:P19 wd:Q202158 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jean Sibelius', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Hämeenlinna'}}}

 Q: Which online database has the highest Alexa rank?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q7094076 . ?ent wdt:P1661 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'Alexa rank', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'online database'}}

 Q: which  is  point in time for Ben Kingsley has award received as Knight Bachelor ?
 SPARQL: SELECT ?value WHERE { wd:Q173158 p:P166 ?s . ?s ps:P166 wd:Q833163 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ben Kingsley', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Knight Bachelor'}, 't': '?x0'}

 Q: What is {dead} of {inventor} of {Rosette Nebula} ?
 SPARQL: SELECT ?answer WHERE { wd:Q108041 wdt:P61 ?X . ?X wdt:P570 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'dead', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rosette Nebula', 'p': 'inventor', 'o': '$y0'}}

 Q: Is the ionization energy of toluene equal to 8.82?
 SPARQL: ASK WHERE { wd:Q15779 wdt:P2260 ?obj filter(?obj = 8.82) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'toluene', 'p': 'ionization energy', 'o': '?x0', '?x0': '8.82'}

 Q: What is {award received} of {The Apartment} that is {statement is subject of} is {33rd Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q270510 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P805 wd:Q917071 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'awards', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Apartment', 'p': 'awards', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '33rd Academy Awards'}}}

 Q: Who did Raquel Welch marry in 1980?
 SPARQL: SELECT ?obj WHERE { wd:Q229545 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Raquel Welch', 'p': 'marry', 'o': '?x0', 't': '1980'}

 Q: What is {number of matches played} and {number of points/goals/set scored} of {{Ali Daei} has {member of sports team} as {Hertha BSC}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q159622 p:P54 ?s . ?s ps:P54 wd:Q102720 . ?s pq:P1350 ?value1 . ?s pq:P1351 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hertha BSC'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'points scored', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ali Daei', 'p': 'member of sports team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of sports team', 'o': 'Hertha BSC'}}}]

 Q: What is {nominated for} of {Jessica Lange} that is {for work} is {Country} ?
 SPARQL: SELECT ?obj WHERE { wd:Q173585 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1754454 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jessica Lange', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Country'}}}

 Q: what is the {start time} for {Petah Tikva} has {twinned administrative body} as {Gabrovo} ?
 SPARQL: SELECT ?value WHERE { wd:Q190828 p:P190 ?s . ?s ps:P190 wd:Q180131 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Petah Tikva', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Gabrovo'}}}

 Q: Name an eau de vie that starts with the letter W
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2166541 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'w')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'eau de vie'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'w'}}

 Q: what is the {start time} for {Mobutu Sese Seko} has {position held} as {chairperson of the Organisation of African Unity} ?
 SPARQL: SELECT ?value WHERE { wd:Q164535 p:P39 ?s . ?s ps:P39 wd:Q19161632 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mobutu Sese Seko', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'chairperson of the Organisation of African Unity'}}}

 Q: What is {present at} of {Nicklas Lidström}, that has {is in the administrative region of} is {Vancouver} ?
 SPARQL: SELECT ?answer WHERE { wd:Q434200 wdt:P1344 ?answer . ?answer wdt:P131 wd:Q24639}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nicklas Lidström', 'p': 'present at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Vancouver'}}

 Q: Did {Demi_Moore} {languages spoken, written or signed} {Old English}?
 SPARQL: ASK WHERE { wd:Q43044 wdt:P1412 wd:Q42365 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Demi Moore', 'p': 'languages spoken, written or signed', 'o': '?x0', '?x0': 'Old English'}]

 Q: What is {life stance} of {alumni of} of {Bonnie L. Oscarson} ?
 SPARQL: SELECT ?answer WHERE { wd:Q16145612 wdt:P69 ?X . ?X wdt:P140 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'life stance', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bonnie L. Oscarson', 'p': 'alumni of', 'o': '$y0'}}

 Q: What is {diplomatic relation} of {Malawi} that is {statement is subject of} is {Malawi–Zambia relations} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1020 p:P530 ?s . ?s ps:P530 ?obj . ?s pq:P805 wd:Q6741521 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Malawi', 'p': 'diplomatic relation', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': 'Malawi–Zambia relations'}}}

 Q: How many networks air All My Children?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q205474 wdt:P449 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'All My Children', 'p': 'network', 'o': '?x0'}

 Q: What is {twinned administrative body} of {Kanagawa Prefecture} that is {start time} is {1990-4-24} ?
 SPARQL: SELECT ?obj WHERE { wd:Q127513 p:P190 ?s . ?s ps:P190 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1990')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kanagawa Prefecture', 'p': 'twinned administrative body', 'o': '?x0', 't': '1990'}

 Q: What is {battle} of {formation} of {Ted Lyons} ?
 SPARQL: SELECT ?answer WHERE { wd:Q328603 wdt:P241 ?X . ?X wdt:P607 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'battle', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ted Lyons', 'p': 'formation', 'o': '$y0'}}

 Q: what is the {replaces} for {Pius XII} has {position held} as {Camerlengo of the Sacred College of Cardinals} ?
 SPARQL: SELECT ?value WHERE { wd:Q2604 p:P39 ?s . ?s ps:P39 wd:Q1813197 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pius XII', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Camerlengo of the Sacred College of Cardinals'}}}

 Q: What is {followed by} and {follows} of {{Berengar I of Italy} has {noble title} as {monarch of Italy}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q274606 p:P97 ?s . ?s ps:P97 wd:Q271148 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Berengar', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'monarch of Italy'}}}]

 Q: What is {child} of {Louis IX of France} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q346 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis IX of France', 'p': 'child', 'o': '$y0'}}]

 Q: What is the {isotope of thallium} with the {MAX(atomic number)} ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q28223 . ?ent wdt:P1086 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'atomic number', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of thallium'}}

 Q: What is the literary genre composed by Suite No. 2?
 SPARQL: SELECT ?answer WHERE { wd:Q1966218 wdt:P86 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Suite No. 2', 'p': 'composed by', 'o': '$y0'}}

 Q: What is the {human} for {doctoral student} of {James D. Watson}
 SPARQL:  select distinct ?obj where { wd:Q83333 wdt:P185 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'James D. Watson', 'p': 'doctoral student', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {regional organization} for {official language} of {Romanian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P37 wd:Q7913 . ?sbj wdt:P31 wd:Q4120211 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official language', 'o': 'Romanian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'regional organization'}}

 Q: What is the tributary of Gambia River that has coordinates of 13.5092?
 SPARQL: SELECT ?answer WHERE { wd:Q160819 wdt:P974 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'13.5092'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Gambia River', 'p': 'tributary', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'coordinates', 'o': '13.5092'}}

 Q: What is {has counties} of {is in the Indian reservation of} of {Canton of Neuchâtel} ?
 SPARQL: SELECT ?answer WHERE { wd:Q12738 wdt:P131 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has counties', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neuchatel', 'p': 'in', 'o': '$y0'}}

 Q: The Empire of Japan had diplomatic relations with what historical country?
 SPARQL:  select distinct ?obj where { wd:Q188712 wdt:P530 ?obj . ?obj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Empire of Japan', 'p': 'diplomatic relation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: How many {head coach} are to/by {Antonio Inoki} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P286 wd:Q45207 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'head coach', 'o': 'Antonio Inoki'}

 Q: Which is the gland of the lymphatic drainage of Superior mesenteric lymph nodes and whose name contains the word pancreas?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q9647 . ?sbj wdt:P2288 wd:Q7643652 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'pancreas')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gland', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'lymphatic drainage', 'o': 'Superior mesenteric lymph nodes'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'pancreas'}}

 Q: What is the {human who may be fictional} for {developer} of {Bitcoin}
 SPARQL:  select distinct ?obj where { wd:Q131723 wdt:P178 ?obj . ?obj wdt:P31 wd:Q21070568 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'bitcoin', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human who may be fictional'}}

 Q: What is {executioner} of {between} of {Assassination of John F. Kennedy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q193484 wdt:P710 ?X . ?X wdt:P157 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'executioner', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Assassination of John F. Kennedy', 'p': 'between', 'o': '$y0'}}

 Q: What is <RERO ID> of <Turkmenistan> ?
 SPARQL: select distinct ?answer where { wd:Q874 wdt:P3065 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Turkmenistan', 'p': 'RERO ID', 'o': '?x0'}

 Q: Which is the historical country that replaces the Maurya Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q62943 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaces', 'o': 'Maurya Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is the {road} for {terminus location} of {Las Vegas}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P609 wd:Q23768 . ?sbj wdt:P31 wd:Q34442 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'terminus location', 'o': 'Las Vegas', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'road'}}

 Q: For what unfinished film was Sergei Eisenstein the editor?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1040 wd:Q8003 . ?sbj wdt:P31 wd:Q18011171 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'editor', 'o': 'Sergei Eisenstein', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'unfinished film'}}

 Q: What was the population of the Komi Republic in the year 2016?
 SPARQL: SELECT ?obj WHERE { wd:Q2073 p:P1082 ?s . ?s ps:P1082 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2016')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Komi Republic', 'p': 'population', 'o': '?x0', 't': '2016'}

 Q: In which district of India is the capital called Thiruvananthapuram
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q167715 . ?sbj wdt:P31 wd:Q1149652 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Thiruvananthapuram', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'district of India'}}

 Q: The Knights Templar has how many religious orders?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P611 wd:Q41300 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'religious order', 'o': 'Knights Templar'}

 Q: what is the {end time} for {Rome} has {head of government} as {Walter Veltroni} ?
 SPARQL: SELECT ?value WHERE { wd:Q220 p:P6 ?s . ?s ps:P6 wd:Q319547 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rome', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Walter Veltroni'}}}

 Q: What is {position held} of {Barack Obama} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q76 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'constituency', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barack Obama', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barack Obama', 'p': 'position held', 'o': '$y0'}}]

 Q: What is the {pharmaceutical product} for {active ingredient in} of {amphetamine}
 SPARQL:  select distinct ?obj where { wd:Q179452 wdt:P3780 ?obj . ?obj wdt:P31 wd:Q28885102 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'amphetamine', 'p': 'active ingredient in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'pharmaceutical product'}}

 Q: What is {category of associated people} of {head quarters} of {International Maritime Organization} ?
 SPARQL: SELECT ?answer WHERE { wd:Q201054 wdt:P159 ?X . ?X wdt:P1792 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'category of associated people', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'International Maritime Organization', 'p': 'head quarters', 'o': '$y0'}}

 Q: What is <Paris Faculty of Science professor ID> of <Henri Poincaré> ?
 SPARQL: select distinct ?answer where { wd:Q81082 wdt:P5541 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Henri Poincare', 'p': 'Paris Faculty of Science professor ID', 'o': '?x0'}

 Q: What is the {blizzard} with the {MAX(precipitation height)} whose {located in the administrative territorial entity} is {Wisconsin}  ?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q205418 . ?ent wdt:P3036 ?obj . ?ent wdt:P131 wd:Q1537 } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'precipitation height', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'blizzard', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Wisconsin'}}}

 Q: Binary Star with maximum luminosity is?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q50053 . ?ent wdt:P2060 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'luminosity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Binary Star'}}

 Q: What is the astronomic symbol image of Saturn?
 SPARQL: select distinct ?answer where { wd:Q193 wdt:P367 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Saturn', 'p': 'astronomic symbol image', 'o': '?x0'}

 Q: Tell me  tournament whose name has the word  weltklasse in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q500834 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'weltklasse')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tournament'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'weltklasse'}}

 Q: What is the {immediate cause of} and the {field of work} of {Computer_network} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q1301371 wdt:P1536 ?ans_1 . wd:Q1301371 wdt:P101 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'computer network', 'p': 'immediate cause of', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'computer network', 'p': 'field of work', 'o': '?x1'}]

 Q: What is the award and prize money received by Claude Simon?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q131549 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Claude Simon', 'p': 'award', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'award', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Claude Simon', 'p': 'award', 'o': '$y0'}}]

 Q: Which is the temporal range end for Triceratops?
 SPARQL: select distinct ?answer where { wd:Q14384 wdt:P524 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Triceratops', 'p': 'temporal range end', 'o': '?x0'}

 Q: What are the national symbol which start with the letter p
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1128637 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'p')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national symbol'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'p'}}

 Q: Which public company has the largest number of registered users/contributors?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q891723 . ?ent wdt:P1833 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'number of registered users/contributors', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public company'}}

 Q: What is the name of subsidiary company of Fawlty Towers motion picture studio ?
 SPARQL: SELECT ?answer WHERE { wd:Q212731 wdt:P272 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Fawlty Towers', 'p': 'studio', 'o': '$y0'}}

 Q: What is the {Wikimedia disambiguation page} for {different from} of {association football}
 SPARQL:  select distinct ?obj where { wd:Q2736 wdt:P1889 ?obj . ?obj wdt:P31 wd:Q4167410 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'football', 'p': 'different from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikipedia disambiguation page'}}

 Q: Is the solubility of carbon dioxide equal to 0.2?
 SPARQL: ASK WHERE { wd:Q1997 wdt:P2177 ?obj filter(?obj = 0.2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'carbon dioxide', 'p': 'solubility', 'o': '?x0', '?x0': '0.2'}

 Q: What is {educated at} of {Vsevolod Meyerhold} that is {start time} is {1896-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q165721 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1896')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Vsevolod Meyerhold', 'p': 'educated at', 'o': '?x0', 't': '1896'}

 Q: What is {position held} of {Mitt Romney} that is {start time} is {2003-1-2} ?
 SPARQL: SELECT ?obj WHERE { wd:Q4496 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Mitt Romney', 'p': 'position held', 'o': '?x0', 't': '2003'}

 Q: How many original language of work was done by La Dolce Vita?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q18407 wdt:P364 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'La Dolce Vita', 'p': 'original language', 'o': '?x0'}

 Q: Is the flexural strength of AKROLOY PARA ICF 40 equal to 360?
 SPARQL: ASK WHERE { wd:Q57273218 wdt:P5677 ?obj filter(?obj = 360) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'AKROLOY PARA ICF 40', 'p': 'flexural strength', 'o': '?x0', '?x0': '360'}

 Q: What is {educated at} of {Jodie Foster} and {academic major}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q41351 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P812 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'studied', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jodie Foster', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jodie Foster', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the statement is subject of for Wallace Beery has nominated for as Academy Award for Best Actor ?
 SPARQL: SELECT ?value WHERE { wd:Q322179 p:P1411 ?s . ?s ps:P1411 wd:Q103916 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Wallace Beery', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actor'}}}

 Q: What is {award received} of {Thomas Mann} that is {prize money} is {172760.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q37030 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P2121 ?x filter(contains(?x,'172760.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Thomas Mann', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'prize money', 'o': '172760.0'}}}

 Q: What is <Latvian National Address Register ID> of <Riga> ?
 SPARQL: select distinct ?answer where { wd:Q1773 wdt:P2497 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Riga', 'p': 'Latvian National Address Register ID', 'o': '?x0'}

 Q: What is a historical profession that contains the word zeugmacher in its name?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q16335296 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeugmacher')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical profession'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeugmacher'}}

 Q: What are the uses of table tennis?
 SPARQL: select distinct ?answer where { wd:Q3930 wdt:P2283 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'table tennis', 'p': 'uses', 'o': '?x0'}

 Q: IS THE ELECTRONEGATIVITY OF THE LEAD EQUALS 2
 SPARQL: ASK WHERE { wd:Q708 wdt:P1108 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'lead', 'p': 'electronegativity', 'o': '?x0', '?x0': '2'}

 Q: what is the {start time} for {Henry Morgan} has {position held} as {Lieutenant Governor of Jamaica} ?
 SPARQL: SELECT ?value WHERE { wd:Q215502 p:P39 ?s . ?s ps:P39 wd:Q50360634 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Morgan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Lieutenant Governor of Jamaica'}}}

 Q: Name a movie directed by Francis Ford Coppola
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P57 wd:Q56094 . ?sbj wdt:P31 wd:Q11424 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'directed by', 'o': 'Francis Ford Coppola', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie'}}

 Q: How many {contains administrative territorial entity} are to/by {Metz} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P150 wd:Q22690 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'contains administrative territorial entity', 'o': 'Metz'}

 Q: what is the {start time} for {Prince William, Duke of Cambridge} has {noble title} as {Duke of Cambridge} ?
 SPARQL: SELECT ?value WHERE { wd:Q36812 p:P97 ?s . ?s ps:P97 wd:Q836810 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Prince William', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'Duke of Cambridge'}}}

 Q: What is {has translation} of {safety classification and labelling} of {boron nitride} ?
 SPARQL: SELECT ?answer WHERE { wd:Q410193 wdt:P4952 ?X . ?X wdt:P747 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has translation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'boron nitride', 'p': 'safety classification and labelling', 'o': '$y0'}}

 Q: What is {Indian reservation} of {Indiana}, that has {has districts} is {Oklahoma} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1415 wdt:P131 ?answer . ?answer wdt:P150 wd:Q1649}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Indiana', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has districts', 'o': 'Oklahoma'}}

 Q: Which is the archaeological site that is located in the administrative territorial entity of Roman Empire?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q2277 . ?sbj wdt:P31 wd:Q839954 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'archaeological site'}}

 Q: What is the {human} for {composer} of {Unchained Melody}
 SPARQL:  select distinct ?obj where { wd:Q949416 wdt:P86 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Unchained Melody', 'p': 'composer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the developer of Internet Protocol and what is the edition?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q8795 wdt:P747 ?ans_1 . wd:Q8795 wdt:P178 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Internet Protocol', 'p': 'edition', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Internet Protocol', 'p': 'developer', 'o': '?x1'}]

 Q: What award did Lars von Trier receive in the year 1996?
 SPARQL: SELECT ?obj WHERE { wd:Q133730 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1996')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lars von Trier', 'p': 'award', 'o': '?x0', 't': '1996'}

 Q: What is {nominated for} of {Mahershalalhashbaz Ali} that is {statement is subject of} is {89th Academy Awards} ?
 SPARQL: SELECT ?obj WHERE { wd:Q360531 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P805 wd:Q22076019 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mahershalalhashbaz Ali', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'statement is subject of', 'o': '89th Academy Awards'}}}

 Q: How many {art-name} are for {Kang Youwei} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q360135 wdt:P1787 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Kang Youwei', 'p': 'art-name', 'o': '?x0'}

 Q: Who was the member of Birgit Prinz's sports team with the same number of matches played?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q109868 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1350 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'matches played', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Birgit Prinz', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Birgit Prinz', 'p': 'team', 'o': '$y0'}}]

 Q: Who are the inhabitants of the land of Molise?
 SPARQL: SELECT ?answer WHERE { wd:Q1443 wdt:P17 ?X . ?X wdt:P1082 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inhabitants', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Molise', 'p': 'land', 'o': '$y0'}}

 Q: what is the {start time} for {Rowan Atkinson} has {educated at} as {The Queen's College} ?
 SPARQL: SELECT ?value WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 wd:Q73094 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': "Queen's College"}}}

 Q: What was Ilya Prigogine nominated for in 1958?
 SPARQL: SELECT ?obj WHERE { wd:Q183509 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1958')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ilya Prigogine', 'p': 'nominated for', 'o': '?x0', 't': '1958'}

 Q: How many {language used} are to/by {Chinese} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2936 wd:Q7850 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'language used', 'o': 'Chinese'}

 Q: What is {position held} of {John Marshall} that is {replaced by} is {James Madison} ?
 SPARQL: SELECT ?obj WHERE { wd:Q310829 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q11813 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Marshall', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'succeeded by', 'o': 'James Madison'}}}

 Q: Who is the songwriter of Rule Britannia, whise son is Michael Arne?
 SPARQL: SELECT ?answer WHERE { wd:Q215729 wdt:P86 ?answer . ?answer wdt:P40 wd:Q2059553}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Rule Britannia', 'p': 'songwriter', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'son', 'o': 'Michael Arne'}}

 Q: What is the {location of formation} and the {named after} of {Lynyrd_Skynyrd} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q158462 wdt:P740 ?ans_1 . wd:Q158462 wdt:P138 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Lynyrd Skynyrd', 'p': 'location of formation', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Lynyrd Skynyrd', 'p': 'named after', 'o': '?x1'}]

 Q: What is <Flanders Arts Institute venue ID> of <British Museum> ?
 SPARQL: select distinct ?answer where { wd:Q6373 wdt:P3820 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'British Museum', 'p': 'Flanders Arts Institute venue ID', 'o': '?x0'}

 Q: what is the {replaces} for {Eduard Shevardnadze} has {position held} as {First Secretary of the Georgian Communist Party} ?
 SPARQL: SELECT ?value WHERE { wd:Q151929 p:P39 ?s . ?s ps:P39 wd:Q1645889 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eduard Shevardnadze', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'First Secretary of the Georgian Communist Party'}}}

 Q: What is {position held} of {Mary McAleese} and {end time}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q174662 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P582 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mary McAleese', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mary McAleese', 'p': 'position held', 'o': '$y0'}}]

 Q: Is the number of spoilt votes for the 2016 Sinop municipal election for Councillor fewer than 2129.6?
 SPARQL: ASK WHERE { wd:Q61868595 wdt:P5044 ?obj filter(?obj < 2129.6) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Sinop municipal election, 2016 for Councillor', 'p': 'number of spoilt votes', 'o': '?x0', '?x0': '2129.6'}

 Q: what is the {point in time} for {Louis Kahn} has {award received} as {Royal Gold Medal} ?
 SPARQL: SELECT ?value WHERE { wd:Q210134 p:P166 ?s . ?s ps:P166 wd:Q920783 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Louis Kahn', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Royal Gold Medal'}, 't': '?x0'}

 Q: What is {player} of {takes part} of {Dietmar Kansy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1223435 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'player', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dietmar Kansy', 'p': 'takes part', 'o': '$y0'}}

 Q: What is {position held} of {John Walter} that is {start time} is {1841-4-26} ?
 SPARQL: SELECT ?obj WHERE { wd:Q1702096 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1841')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'John Walter', 'p': 'position held', 'o': '?x0', 't': '1841'}

 Q: What is the higher taxon of Bornean orangutan, whose type of taxon is genus?
 SPARQL: SELECT ?answer WHERE { wd:Q599672 wdt:P171 ?answer . ?answer wdt:P105 wd:Q34740}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Bornean orangutan', 'p': 'higher taxon', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type of taxon', 'o': 'genus'}}

 Q: What is located in the shire of Baikonur Cosmodrome with a full title of  _______________?
 SPARQL: SELECT ?answer WHERE { wd:Q177477 wdt:P131 ?answer . ?answer wdt:P1448 ?x FILTER(contains(?x,'Кызылординская область'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Baikonur Cosmodrome', 'p': 'is located in', 'o': '?x0'}

 Q: Which means {OSM relation ID} in the{Canterbury Region} ?
 SPARQL: select distinct ?answer where { wd:Q657004 wdt:P402 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Canterbury Region', 'p': 'OSM relation', 'o': '?x0'}

 Q: what is the {statement is subject of} for {Alan Menken} has {nominated for} as {Academy Award for Best Original Score} ?
 SPARQL: SELECT ?value WHERE { wd:Q317272 p:P1411 ?s . ?s ps:P1411 wd:Q488651 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alan Menken', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Original Score'}}}

 Q: what is a scientific hypothesis that starts with the letter t.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q30125896 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'scientific hypothesis'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is {has kid} of {inspiration} of {Papa Carlo} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4344596 wdt:P941 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'kid', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Papa Carlo', 'p': 'inspiration', 'o': '$y0'}}

 Q: who is chief operating officer of Subhas Chandra Bose ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1789 wd:Q2153}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chief operating officer', 'o': 'Subhas Chandra Bose'}

 Q: what is the {for work} for {Philippe Noiret} has {nominated for} as {César Award for Best Actor} ?
 SPARQL: SELECT ?value WHERE { wd:Q106482 p:P1411 ?s . ?s ps:P1411 wd:Q900494 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Philippe Noiret', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'César Award for Best Actor'}}}

 Q: How many are commissioned by William the Conqueror?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P88 wd:Q37594 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'commissioned by', 'o': 'William the Conqueror'}

 Q: Where is the Russian Empire's field army based?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q34266 . ?sbj wdt:P31 wd:Q51977 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Russian Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'field army'}}

 Q: What is {academic major} and {academic degree} of {{Lionel Trilling} has {educated at} as {Columbia University}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q1827287 p:P69 ?s . ?s ps:P69 wd:Q49088 . ?s pq:P812 ?value1 . ?s pq:P512 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel Trilling', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Columbia University'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lionel Trilling', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Columbia University'}}}]

 Q: What is the film starring of the part of series of The Daily Show, 2003?
 SPARQL: SELECT ?answer WHERE { wd:Q6599583 wdt:P179 ?X . ?X wdt:P161 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'starring', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Daily Show, 2003', 'p': 'part of series', 'o': '$y0'}}

 Q: Which is the SIMBAD ID of Horsehead Nebula?
 SPARQL: select distinct ?answer where { wd:Q14271 wdt:P3083 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Horsehead Nebula', 'p': 'SIMBAD ID', 'o': '?x0'}

 Q: what is the {start time} for {Mark Rothko} has {country of citizenship} as {United States of America} ?
 SPARQL: SELECT ?value WHERE { wd:Q160149 p:P27 ?s . ?s ps:P27 wd:Q30 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mark Rothko', 'p': 'citizen of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'citizen of', 'o': 'the United States'}}}

 Q: Who gave the{format} of {prequel of} of {Contra} ?
 SPARQL: SELECT ?answer WHERE { wd:Q849328 wdt:P156 ?X . ?X wdt:P437 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'format', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Contra', 'p': 'prequel of', 'o': '$y0'}}

 Q: When did Vanessa Paradis receive and an award for Prix Romy Schneider?
 SPARQL: SELECT ?value WHERE { wd:Q51023 p:P166 ?s . ?s ps:P166 wd:Q1615857 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Vanessa Paradis', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Prix Romy Schneider'}, 't': '?x0'}

 Q: What is the description of the national seal of Sikkim?
 SPARQL:  select distinct ?obj where { wd:Q1505 wdt:P418 ?obj . ?obj wdt:P31 wd:Q12056846 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sikkim', 'p': 'seal', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national seal'}}

 Q: When did Hamburg stop being included in the Trizone territory?
 SPARQL: SELECT ?value WHERE { wd:Q1055 p:P131 ?s . ?s ps:P131 wd:Q569998 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hamburg', 'p': 'in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'Trizone'}}}

 Q: What is Iditarod musher ID for Steve Fossett?
 SPARQL: select distinct ?answer where { wd:Q311786 wdt:P3760 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Steve Fossett', 'p': 'Iditarod musher ID', 'o': '?x0'}

 Q: what is the {start time} for {Chongqing} has {twinned administrative body} as {Mpumalanga} ?
 SPARQL: SELECT ?value WHERE { wd:Q11725 p:P190 ?s . ?s ps:P190 wd:Q132410 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Chongqing', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Mpumalanga'}}}

 Q: Which is the Executive Order number for Emancipation Proclamation?
 SPARQL: select distinct ?answer where { wd:Q391358 wdt:P1555 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Emancipation Proclamation', 'p': 'Executive Order number', 'o': '?x0'}

 Q: What is exclave of Sharjah Emirate?
 SPARQL: select distinct ?answer where { ?answer wdt:P500 wd:Q188810}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'exclave of', 'o': 'Sharjah Emirate'}

 Q: what is the {end time} for {Hu Shuli} has {educated at} as {Renmin University of China} ?
 SPARQL: SELECT ?value WHERE { wd:Q1092391 p:P69 ?s . ?s ps:P69 wd:Q1074117 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hu Shuli', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'Renmin University of China'}}}

 Q: What is {producer of} of {parent agency} of {IMDb.com, Inc.} ?
 SPARQL: SELECT ?answer WHERE { wd:Q46973305 wdt:P749 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'producer of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'IMDb.com, Inc.', 'p': 'parent agency', 'o': '$y0'}}

 Q: What is {type of film} of {significance} of {William McDonough} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1662745 wdt:P800 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'type of film', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'William McDonough', 'p': 'significance', 'o': '$y0'}}

 Q: Give me {animated film} that {film crew member} {Randy Fullmer} and which that starts with {'k'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q202866 . ?sbj wdt:P3092 wd:Q7292195 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'k')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated movie', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'film crew member', 'o': 'Randy Fullmer'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'k'}}

 Q: Is it true that the floors below ground of the Sowwah Square Tower 3 equals to 2?
 SPARQL: ASK WHERE { wd:Q1390702 wdt:P1139 ?obj filter(?obj = 2) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Sowwah Square Tower 3', 'p': 'floors below ground', 'o': '?x0', '?x0': '2'}

 Q: Which country was Plato's place of birth and also known as Classical Athens?
 SPARQL: SELECT ?value WHERE { wd:Q859 p:P19 ?s . ?s ps:P19 wd:Q844930 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Plato', 'p': 'place of birth', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of birth', 'o': 'Classical Athens'}}}

 Q: How many {instrumentation} are for {Turandot} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q207990 wdt:P870 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Turandot', 'p': 'instrumentation', 'o': '?x0'}

 Q: "Which seat in the Liberal International, has GPS coordinates of 51.063 -0.1237 ?"
 SPARQL: SELECT ?answer WHERE { wd:Q212712 wdt:P159 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'51.5063 -0.1237'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Liberal International', 'p': 'seat', 'o': '?x0'}

 Q: what is the {for work} for {Neil Young} has {award received} as {Grammy Award for Best Boxed or Special Limited Edition Package} ?
 SPARQL: SELECT ?value WHERE { wd:Q633 p:P166 ?s . ?s ps:P166 wd:Q5593754 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Neil Young', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Grammy Award for Best Boxed or Special Limited Edition Package'}}}

 Q: What afflicts the ozone implies?
 SPARQL: SELECT ?answer WHERE { wd:Q36933 wdt:P1542 ?X . ?X wdt:P689 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'afflicts', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'ozone', 'p': 'implies', 'o': '$y0'}}

 Q: What languages do Arthur Hailey speak?
 SPARQL: select distinct ?answer where { wd:Q249544 wdt:P1412 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Arthur Hailey', 'p': 'language', 'o': '?x0'}

 Q: what is the {point in time} for {Ernst Chain} has {nominated for} as {Nobel Prize in Physiology or Medicine} ?
 SPARQL: SELECT ?value WHERE { wd:Q58054 p:P1411 ?s . ?s ps:P1411 wd:Q80061 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ernst Chain', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Nobel Prize in Physiology or Medicine'}, 't': '?x0'}

 Q: Manhattan shares its border with what township of New Jersey?
 SPARQL:  select distinct ?obj where { wd:Q11299 wdt:P47 ?obj . ?obj wdt:P31 wd:Q7830213 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Manhattan', 'p': 'border', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'township of New Jersey'}}

 Q: Which is Justia Patents company ID for Yahoo?
 SPARQL: select distinct ?answer where { wd:Q37093 wdt:P3875 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Yahoo', 'p': 'Justia Patents company ID', 'o': '?x0'}

 Q: What is the {historical country} for {capital} of {Vilnius}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P36 wd:Q216 . ?sbj wdt:P31 wd:Q3024240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'capital', 'o': 'Vilnius', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'historical country'}}

 Q: What is the shape and effect of the hyperbolic motion?
 SPARQL: SELECT ?answer WHERE { wd:Q29652827 wdt:P1542 ?X . ?X wdt:P1419 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'shape', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'hyperbolic motion', 'p': 'effect', 'o': '$y0'}}

 Q: What is the {national association football team} for {head coach} of {Clarence Seedorf}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P286 wd:Q484909 . ?sbj wdt:P31 wd:Q6979593 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head coach', 'o': 'Clarence Seedorf', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'national association football team'}}

 Q: what is the {subject has role} for {Carl Ritter} has {member of} as {Royal Swedish Academy of Letters, History and Antiquities} ?
 SPARQL: SELECT ?value WHERE { wd:Q29297 p:P463 ?s . ?s ps:P463 wd:Q1792159 . ?s pq:P2868 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subject has role', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Carl Ritter', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of', 'o': 'Royal Swedish Academy of Letters, History and Antiquities'}}}

 Q: Which is Christie's creator ID for Lewis Hine?
 SPARQL: select distinct ?answer where { wd:Q347194 wdt:P4200 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lewis Hine', 'p': "Christie's creator ID", 'o': '?x0'}

 Q: What is {location of work} of {Shirley Chisholm}, that has {bordered by} is {Arlington County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q239657 wdt:P937 ?answer . ?answer wdt:P47 wd:Q107126}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Shirley Chisholm', 'p': 'location of work', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'bordered by', 'o': 'Arlington County'}}

 Q: Did Howard Stern work as a TV presenter and radio personality?
 SPARQL: ASK WHERE { wd:Q348603 wdt:P106 wd:Q947873 . wd:Q348603 wdt:P106 wd:Q2722764 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Howard Stern', 'p': 'work', 'o': '?x0', '?x0': 'TV presenter'}, {'h': 'IS', 'v': '?x1', 's': 'Howard Stern', 'p': 'work', 'o': '?x1', '?x1': 'radio personality'}]

 Q: What officially opened by Franz Beckenbauer?
 SPARQL: select distinct ?answer where { ?answer wdt:P542 wd:Q4457}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'officially opened by', 'o': 'Franz Beckenbauer'}

 Q: Which is the Inventory of French sanctuaries ID for Notre-Dame de Chartres?
 SPARQL: select distinct ?answer where { wd:Q180274 wdt:P5449 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Notre-Dame de Chartres', 'p': 'Inventory of French sanctuaries ID', 'o': '?x0'}

 Q: Is the natural abundance of the helium-4 greater than 1.199998392?
 SPARQL: ASK WHERE { wd:Q1151346 wdt:P2374 ?obj filter(?obj > 1.199998392) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'helium-4', 'p': 'natural abundance', 'o': '?x0', '?x0': '1.199998392'}

 Q: Who is the father of Kristina Oxenstierna's sister?
 SPARQL: SELECT ?answer WHERE { wd:Q4971583 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'father', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kristina Oxenstierna', 'p': 'sister', 'o': '$y0'}}

 Q: How many {student of} are to/by {Charles Gounod} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1066 wd:Q180278 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Charles Gounod'}

 Q: What is the {human} for {residence} of {Venice}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P551 wd:Q641 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'residence', 'o': 'Venice', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'people'}}

 Q: What is the {Australian rules football club} for {league} of {Australian Football League}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P118 wd:Q50783 . ?sbj wdt:P31 wd:Q17374546 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'league', 'o': 'Australian Football League', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'football club'}}

 Q: What is {founders} of {has designer} of {Enzo Ferrari} ?
 SPARQL: SELECT ?answer WHERE { wd:Q269880 wdt:P287 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founders', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Enzo Ferrari', 'p': 'has designer', 'o': '$y0'}}

 Q: Tell me  architectural style  whose name has the word style in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q32880 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'style')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'architectural style'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'style'}}

 Q: what is the {start time} for {Erfurt} has {twinned administrative body} as {Kalisz} ?
 SPARQL: SELECT ?value WHERE { wd:Q1729 p:P190 ?s . ?s ps:P190 wd:Q52842 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Erfurt', 'p': 'twinned administrative body', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'twinned administrative body', 'o': 'Kalisz'}}}

 Q: Is the term length of office of the Lord Mayor of London greater than 0.8?
 SPARQL: ASK WHERE { wd:Q73341 wdt:P2097 ?obj filter(?obj > 0.8) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Lord Mayor of London', 'p': 'term length of office', 'o': '?x0', '?x0': '0.8'}

 Q: Is Batman present in work Batman: Arkham Knight?
 SPARQL: ASK WHERE { wd:Q2695156 wdt:P1441 wd:Q15891648 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Batman', 'p': 'present in work', 'o': '?x0', '?x0': 'Batman: Arkham Knight'}]

 Q: What is CNC film rating (Romania) for The Terminator?
 SPARQL: select distinct ?answer where { wd:Q162255 wdt:P3402 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Terminator', 'p': 'CNC film rating (Romania)', 'o': '?x0'}

 Q: Name a metropolis following the religion of the Russian Orthodox Church.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P140 wd:Q60995 . ?sbj wdt:P31 wd:Q427961 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'religion', 'o': 'Russian Orthodox Church', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'metropolis'}}

 Q: Did {Steve_Wozniak} {educated at} {University of California, Berkeley} and {Foothill College} ?
 SPARQL: ASK WHERE { wd:Q483382 wdt:P69 wd:Q168756 . wd:Q483382 wdt:P69 wd:Q5466480 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Steve Wozniak', 'p': 'educated at', 'o': '?x0', '?x0': 'University of California, Berkeley'}, {'h': 'IS', 'v': '?x1', 's': 'Steve Wozniak', 'p': 'educated at', 'o': '?x1', '?x1': 'Foothill College'}]

 Q: What is {this taxon is a source of} of {higher taxon} of {Cucurbita pepo va} ?
 SPARQL: SELECT ?answer WHERE { wd:Q49502848 wdt:P171 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is a source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Cucurbita pepo va', 'p': 'higher taxon', 'o': '$y0'}}

 Q: What is the {elliptical galaxy} for {child astronomical body} of {Andromeda Galaxy}
 SPARQL:  select distinct ?obj where { wd:Q2469 wdt:P398 ?obj . ?obj wdt:P31 wd:Q184348 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Andromeda', 'p': 'child astronomical body', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'elliptical galaxy'}}

 Q: How many subsidiary are done by Johns Hopkins University
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q193727 wdt:P355 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Johns Hopkins University', 'p': 'subsidiary', 'o': '?x0'}

 Q: Who follows the member of Victor Hugo?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q535 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P155 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'member of', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'member of', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Victor Hugo', 'p': 'member of', 'o': '$y0'}}]

 Q: What language was the Superman from work created on?
 SPARQL: SELECT ?answer WHERE { wd:Q79015 wdt:P1441 ?X . ?X wdt:P364 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Superman', 'p': 'from work', 'o': '$y0'}}

 Q: What is {nominated for} of {Alfred Hitchcock} that is {for work} is {Rebecca} ?
 SPARQL: SELECT ?obj WHERE { wd:Q7374 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q204212 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alfred Hitchcock', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Rebecca'}}}

 Q: What is {followed by} and {follows} of {{Ptolemy I Soter} has {noble title} as {pharaoh}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q168261 p:P97 ?s . ?s ps:P97 wd:Q37110 . ?s pq:P156 ?value1 . ?s pq:P155 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'followed by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ptolemy I Soter', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'pharaoh'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ptolemy I Soter', 'p': 'noble title', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'noble title', 'o': 'pharaoh'}}}]

 Q: What award did Valery Chkalov receive on May 5, 1935?
 SPARQL: SELECT ?obj WHERE { wd:Q498098 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1935')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Valery Chkalov', 'p': 'award', 'o': '?x0', 't': '1935'}

 Q: what is the {for work} for {Geena Davis} has {award received} as {Academy Award for Best Supporting Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q280098 p:P166 ?s . ?s ps:P166 wd:Q106301 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Geena Davis', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Academy Award for Best Supporting Actress'}}}

 Q: What is {party} of {competed in} of {Doc Holliday} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44987 wdt:P1344 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'party', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Doc Holliday', 'p': 'competed in', 'o': '$y0'}}

 Q: When did Georgy Zhukov receive an award from the Order of Sukhbaatar?
 SPARQL: SELECT ?value WHERE { wd:Q124617 p:P166 ?s . ?s ps:P166 wd:Q530008 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Georgy Zhukov', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Order of Sukhbaatar'}, 't': '?x0'}

 Q: What is {educated at} of {Rowan Atkinson} and {academic degree}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q23760 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'academic degree', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'educated at', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'educated at', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rowan Atkinson', 'p': 'educated at', 'o': '$y0'}}]

 Q: what is the {end time} for {Oral} has {country} as {Russian Soviet Federative Socialist Republic} ?
 SPARQL: SELECT ?value WHERE { wd:Q487439 p:P17 ?s . ?s ps:P17 wd:Q2184 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Oral', 'p': 'country', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'country', 'o': 'Russian Soviet Federative Socialist Republic'}}}

 Q: Australian dollar is the currency of  which island nation ?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q259502 . ?sbj wdt:P31 wd:Q112099 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'Australian dollar', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'island nation'}}

 Q: Who was the chairperson of the Asian Development Bank for the year ending in 1993?
 SPARQL: SELECT ?obj WHERE { wd:Q188822 p:P488 ?s . ?s ps:P488 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1993')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Asian Development Bank', 'p': 'chairperson', 'o': '?x0', 't': '1993'}

 Q: How many ingredients are in the grain} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q693944 wdt:P361 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'grain', 'p': 'in', 'o': '?x0'}

 Q: How many shapes have a circle?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1419 wd:Q17278 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'shape', 'o': 'circle'}

 Q: When did publisher of Pac-Man and place of publication?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q173626 p:P123 ?s . ?s ps:P123 ?obj . ?s pq:P291 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'place of publication', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'publisher', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Pac-Man', 'p': 'publisher', 'o': '$y0'}}]

 Q: What is valid in jurisdiction of holds position of John Endecott ?
 SPARQL: SELECT ?answer WHERE { wd:Q1699971 wdt:P39 ?X . ?X wdt:P1001 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'jurisdiction', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Endecott', 'p': 'holds position', 'o': '$y0'}}

 Q: DOES THE SLOPE OF THE INDIANAPOLIS MOTOR SPEEDWAY GREATER THAN 0.0
 SPARQL: ASK WHERE { wd:Q172732 wdt:P4184 ?obj filter(?obj > 0.0) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Indianapolis Motor Speedway', 'p': 'slope', 'o': '?x0', '?x0': '0.0'}

 Q: Was Dick Van Dyke a citizen of the USA?
 SPARQL: ASK WHERE { wd:Q310295 wdt:P27 wd:Q30 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Dick Van Dyke', 'p': 'citizen of', 'o': '?x0', '?x0': 'USA'}]

 Q: What is {significant works} of {illustrated by} of {Brown Bear, Brown Bear, What Do You See?} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4976047 wdt:P110 ?X . ?X wdt:P800 ?answer}
 ALIST: {}

 Q: The Hittites ethnic group has what mythology?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P172 wd:Q5406 . ?sbj wdt:P31 wd:Q9134 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'ethnic group', 'o': 'Hittites', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mythology'}}

 Q: Is the common equity tier 1 capital ratio (CETI) greater than 15.96?
 SPARQL: ASK WHERE { wd:Q245343 wdt:P2663 ?obj filter(?obj > 15.96) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Barclays', 'p': 'common equity tier 1 capital ratio (CETI)', 'o': '?x0', '?x0': '15.96'}

 Q: Which is the official religion for Zoroastrianism?
 SPARQL: select distinct ?answer where { ?answer wdt:P3075 wd:Q9601}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'official religion', 'o': 'Zoroastrianism'}

 Q: Give the name of gravitational-wave detector with lowest wavelength of sensitivity?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q2302080 . ?ent wdt:P3738 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'minimum wavelength of sensitivity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'gravitational-wave detector'}}

 Q: What education received by Matt Groening in the year 1977?
 SPARQL: SELECT ?obj WHERE { wd:Q43994 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1977')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Matt Groening', 'p': 'education', 'o': '?x0', 't': '1977'}

 Q: what is the {statement is subject of} for {Jack Albertson} has {award received} as {Tony Award for Best Featured Actor in a Play} ?
 SPARQL: SELECT ?value WHERE { wd:Q344735 p:P166 ?s . ?s ps:P166 wd:Q1474410 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jack Albertson', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Tony Award for Best Featured Actor in a Play'}}}

 Q: What is {follows} and {followed by} of {{Jeremiah} has {series} as {Nevi'im}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q131590 p:P179 ?s . ?s ps:P179 wd:Q216383 . ?s pq:P155 ?value1 . ?s pq:P156 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'follows', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "Nevi'im"}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'precedes', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jeremiah', 'p': 'series', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'series', 'o': "Nevi'im"}}}]

 Q: What are the railway company which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q249556 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway company'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Who is in the administrative unit of the South Khorasan Province?  Who has administrative divisions in the North Khorasan Province?
 SPARQL: SELECT ?answer WHERE { wd:Q171551 wdt:P131 ?answer . ?answer wdt:P150 wd:Q180075}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'South Khorasan Province', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has administrative divisions', 'o': 'North Khorasan Province'}}

 Q: What is the {human} for {place of death} of {Rome}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P20 wd:Q220 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'died in', 'o': 'Rome', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {human} for {influenced by} of {Ada Lovelace}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P737 wd:Q7259 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'influenced by', 'o': 'Ada Lovelace', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Give me {theory} that starts with {'t'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17737 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'theory'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: How many instruments are played by Toto Cutugno?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q487473 wdt:P1303 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Toto Cutugno', 'p': 'instrument', 'o': '?x0'}

 Q: Does the SAE 301 stainless steel have a pitting resistance equivalent number that is equal to 18?
 SPARQL: ASK WHERE { wd:Q56508859 wdt:P5624 ?obj filter(?obj = 18) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'SAE 301 stainless steel', 'p': 'pitting resistance equivalent number', 'o': '?x0', '?x0': '18'}

 Q: What is the number of out of school children in Pakistan?
 SPARQL: select distinct ?answer where { wd:Q843 wdt:P2573 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pakistan', 'p': 'number of out of school children', 'o': '?x0'}

 Q: What is {software version} of {Tencent QQ} that is {version type} is {stable version} ?
 SPARQL: SELECT ?obj WHERE { wd:Q857640 p:P348 ?s . ?s ps:P348 ?obj . ?s pq:P548 wd:Q2804309 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'version', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tencent QQ', 'p': 'version', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'version type', 'o': 'stable version'}}}

 Q: Is it true that the British airways flight 9 have 0 deaths
 SPARQL: ASK WHERE { wd:Q435605 wdt:P1120 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'British Airways Flight 9', 'p': 'deaths', 'o': '?x0', '?x0': '0'}

 Q: What is {located in time zone} of {Corfu} that is {valid in period} is {daylight saving time} ?
 SPARQL: SELECT ?obj WHERE { wd:Q121378 p:P421 ?s . ?s ps:P421 ?obj . ?s pq:P1264 wd:Q36669 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Corfu', 'p': 'time', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'valid in period', 'o': 'daylight saving time'}}}

 Q: What follows the European Union and when was its inception?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q458 p:P155 ?s . ?s ps:P155 ?obj . ?s pq:P571 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inception', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'follows', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'European Union', 'p': 'follows', 'o': '$y0'}}]

 Q: Tell me type of wood whose name has the word zebrawood in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1493054 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zebrawood')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of wood'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zebrawood'}}

 Q: What is {educated at} of {Gotthold Ephraim Lessing} that is {academic degree} is {master's degree} ?
 SPARQL: SELECT ?obj WHERE { wd:Q34628 p:P69 ?s . ?s ps:P69 ?obj . ?s pq:P512 wd:Q183816 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'educated at', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gotthold Ephraim Lessing', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'degree', 'o': "master's degree"}}}

 Q: What is Jammu and Kashmir's commune in their diplomatic relationship with Iceland?
 SPARQL: SELECT ?answer WHERE { wd:Q1180 wdt:P131 ?answer . ?answer wdt:P530 wd:Q189}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jammu and Kashmir', 'p': 'in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'diplomatic relation', 'o': 'Iceland'}}

 Q: Which is connected with the Iberian Peninsula?
 SPARQL: select distinct ?answer where { wd:Q12837 wdt:P2789 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Iberian Peninsula', 'p': 'connected with', 'o': '?x0'}

 Q: What is the {railway company} for {operator} of {Gotthard Base Tunnel}
 SPARQL:  select distinct ?obj where { wd:Q193002 wdt:P137 ?obj . ?obj wdt:P31 wd:Q249556 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Gotthard Base Tunnel', 'p': 'operator', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'railway company'}}

 Q: What is the continent of Jalgaon whose time zone is Azerbaijan Time?
 SPARQL: SELECT ?answer WHERE { wd:Q30951 wdt:P30 ?answer . ?answer wdt:P421 wd:Q3246553}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jalgaon', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'time zone', 'o': 'Azerbaijan Time'}}

 Q: What is <use> of <bank> ?
 SPARQL: select distinct ?answer where { wd:Q22687 wdt:P366 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'bank', 'p': 'use', 'o': '?x0'}

 Q: What is the {tonal language} for {dialect of} of {Cantonese}
 SPARQL:  select distinct ?obj where { wd:Q9186 wdt:P4913 ?obj . ?obj wdt:P31 wd:Q191328 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Cantonese', 'p': 'dialect of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tonal language'}}

 Q: What is {award received} of {Sheryl Sandberg} that is {criterion used} is {Short list} ?
 SPARQL: SELECT ?obj WHERE { wd:Q234653 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1013 wd:Q2280006 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sheryl Sandberg', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'criterion used', 'o': 'Short list'}}}

 Q: What is <Open Media Database person ID> of <Joss Whedon> ?
 SPARQL: select distinct ?answer where { wd:Q298025 wdt:P5534 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Joss Whedon', 'p': 'Open Media Database person ID', 'o': '?x0'}

 Q: What is <Sport Australia Hall of Fame inductee ID> of <Margaret Court> ?
 SPARQL: select distinct ?answer where { wd:Q202342 wdt:P4415 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Margaret Court', 'p': 'Sport Australia Hall of Fame inductee ID', 'o': '?x0'}

 Q: Did {Chronic_obstructive_pulmonary_disease} {genetic association} {KDM4C} and {ANXA5} ?
 SPARQL: ASK WHERE { wd:Q199804 wdt:P2293 wd:Q18036709 . wd:Q199804 wdt:P2293 wd:Q14908239 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'COPD', 'p': 'genetic association', 'o': '?x0', '?x0': 'KDM4C'}, {'h': 'IS', 'v': '?x1', 's': 'COPD', 'p': 'genetic association', 'o': '?x1', '?x1': 'ANXA5'}]

 Q: How many {sidekick of} are to/by {Batman} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P2546 wd:Q2695156 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'sidekick of', 'o': 'Batman'}

 Q: what is the {sourcing circumstances} for {Jan van Eyck} has {date of birth} as {1390-0-0} ?
 SPARQL: SELECT ?value WHERE { wd:Q102272 p:P569 ?s . ?s ps:P569 ?x filter(contains(YEAR(?x),'1390')) . ?s pq:P1480 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'sourcing circumstances', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jan van Eyck', 'p': 'date of birth', 'o': '$y0'}}

 Q: Name a movie character performed by Al Pacino
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P175 wd:Q41163 . ?sbj wdt:P31 wd:Q15773347 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'performed by', 'o': 'Al Pacino', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'movie character'}}

 Q: At what point in time did Peru have Human Development Index of 0.643
 SPARQL: SELECT ?value WHERE { wd:Q419 p:P1081 ?s . ?s ps:P1081 ?x filter(contains(?x,'0.643')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Peru', 'p': 'Human Development Index', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'Human Development Index', 'o': '0.643'}, 't': '?x0'}

 Q: What is {located in the administrative territorial entity} of {Chernihiv Oblast} that is {start time} is {1991-8-24} ?
 SPARQL: SELECT ?obj WHERE { wd:Q167874 p:P131 ?s . ?s ps:P131 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1991')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Chernihiv Oblast', 'p': 'in', 'o': '?x0', 't': '1991'}

 Q: When was Ethel Merman nominated for the Tony Award for Best Actress in a Musical?
 SPARQL: SELECT ?value WHERE { wd:Q129087 p:P1411 ?s . ?s ps:P1411 wd:Q1537996 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ethel Merman', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Tony Award for Best Actress in a Musical'}, 't': '?x0'}

 Q: Which is the flower color for pink?
 SPARQL: select distinct ?answer where { ?answer wdt:P2827 wd:Q429220}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'flower color', 'o': 'pink'}

 Q: What is the {language regulator} for {studies} of {Russian}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2578 wd:Q7737 . ?sbj wdt:P31 wd:Q2093358 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'studies', 'o': 'Russian', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'language regulator'}}

 Q: Is the defined daily dose of amoxapine .18?
 SPARQL: ASK WHERE { wd:Q58356 wdt:P4250 ?obj filter(?obj = 0.18) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'amoxapine', 'p': 'defined daily dose', 'o': '?x0', '?x0': '0.18'}

 Q: Please tell me the Teutonic Knights' chivalric order.
 SPARQL: select distinct ?answer where { ?answer wdt:P550 wd:Q48189}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'chivalric order', 'o': 'Teutonic Knights'}

 Q: What is {belligerents} of {battle} of {M-84} ?
 SPARQL: SELECT ?answer WHERE { wd:Q746774 wdt:P607 ?X . ?X wdt:P710 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'belligerents', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'M-84', 'p': 'war', 'o': '$y0'}}

 Q: Which is the literary theme of the characters of Robin Hood?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P674 wd:Q122634 . ?sbj wdt:P31 wd:Q42109240 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Robin Hood', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary theme'}}

 Q: What is {position held} of {John Howard} and {electoral district}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q51330 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P768 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Howard', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'John Howard', 'p': 'position held', 'o': '$y0'}}]

 Q: When did academic degree of Dimitri Mendeleyev and field of work?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q9106 p:P512 ?s . ?s ps:P512 ?obj . ?s pq:P101 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'field of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dimitri Mendeleyev', 'p': 'academic degree', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'academic degree', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dimitri Mendeleyev', 'p': 'academic degree', 'o': '$y0'}}]

 Q: What is the {Greek letter} for {notation} of {pi}
 SPARQL:  select distinct ?obj where { wd:Q167 wdt:P913 ?obj . ?obj wdt:P31 wd:Q19793459 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'pi', 'p': 'notation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Greek letter'}}

 Q: What street in Palacio dos Grilos Rua da IIha located the headquarters of the University of Coimbra?
 SPARQL: SELECT ?obj WHERE { wd:Q368643 p:P159 ?s . ?s ps:P159 ?obj . ?s pq:P969 ?x filter(contains(?x,'Palácio dos Grilos Rua da Ilha')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'University of Coimbra', 'p': 'headquarters', 'o': '?x0'}

 Q: Which is IFSC climber ID of Chris Sharma?
 SPARQL: select distinct ?answer where { wd:Q722754 wdt:P3690 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chris Sharma', 'p': 'IFSC climber ID', 'o': '?x0'}

 Q: What is {consumer price index inflation rate} of {competitor} of {Iran–Iraq War} ?
 SPARQL: SELECT ?answer WHERE { wd:Q82664 wdt:P710 ?X . ?X wdt:P1279 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'inflation rate', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Iran–Iraq War', 'p': 'competitor', 'o': '$y0'}}

 Q: what is the {for work} for {Ernest Borgnine} has {nominated for} as {Primetime Emmy Award for Outstanding Supporting Actor in a Miniseries or a Movie} ?
 SPARQL: SELECT ?value WHERE { wd:Q102551 p:P1411 ?s . ?s ps:P1411 wd:Q945887 . ?s pq:P1686 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'for work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Ernest Borgnine', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Primetime Emmy Award for Outstanding Supporting Actor in a Miniseries or a Movie'}}}

 Q: What award did James Earl Jones receive in 1969?
 SPARQL: SELECT ?obj WHERE { wd:Q203960 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1969')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Earl Jones', 'p': 'award', 'o': '?x0', 't': '1969'}

 Q: What is {film starring} of {High Noon}, that has {die from} is {kidney failure} ?
 SPARQL: SELECT ?answer WHERE { wd:Q245208 wdt:P161 ?answer . ?answer wdt:P509 wd:Q476921}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'High Noon', 'p': 'starring', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'die from', 'o': 'kidney failure'}}

 Q: What country did Lviv live in in 1348-0-0?
 SPARQL: SELECT ?obj WHERE { wd:Q36036 p:P17 ?s . ?s ps:P17 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1348')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Lviv', 'p': 'country', 'o': '?x0', 't': '1348'}

 Q: Does the neutron have a gyromagnetic ratio of 183247172?
 SPARQL: ASK WHERE { wd:Q2348 wdt:P2222 ?obj filter(?obj = 183247172) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'neutron', 'p': 'gyromagnetic ratio', 'o': '?x0', '?x0': '183247172'}

 Q: What school was created by Gregor Samsa?
 SPARQL: SELECT ?answer WHERE { wd:Q3566632 wdt:P170 ?X . ?X wdt:P135 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'school', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Gregor Samsa', 'p': 'created by', 'o': '$y0'}}

 Q: what is the {publication date} for {Grand Theft Auto III} has {platform} as {Xbox} ?
 SPARQL: SELECT ?value WHERE { wd:Q149106 p:P400 ?s . ?s ps:P400 wd:Q132020 . ?s pq:P577 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'released', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Grand Theft Auto III', 'p': 'platform', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'platform', 'o': 'Xbox'}}}

 Q: Give me {aspect of history} that {facet of} {India} and which that starts with {'h'}
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17524420 . ?sbj wdt:P1269 wd:Q668 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'h')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aspect of history', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'facet of', 'o': 'India'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'h'}}

 Q: Who is the producer and executive producer of Full Metal Jacket?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q243439 wdt:P162 ?ans_1 . wd:Q243439 wdt:P1431 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Full Metal Jacket', 'p': 'producer', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Full Metal Jacket', 'p': 'executive producer', 'o': '?x1'}]

 Q: What is the prescribed drug of the murder method of Tiny Tim?
 SPARQL: SELECT ?answer WHERE { wd:Q979347 wdt:P509 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prescribed drug', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Tiny Tim', 'p': 'murder method', 'o': '$y0'}}

 Q: what is the {replaces} for {Samuel Taliaferro Rayburn} has {position held} as {Dean of the United States House of Representatives} ?
 SPARQL: SELECT ?value WHERE { wd:Q1378052 p:P39 ?s . ?s ps:P39 wd:Q5246680 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Samuel Taliaferro Rayburn', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Dean of the United States House of Representatives'}}}

 Q: Which is {twin city} of {head office location} of {Mystery Studio} ?
 SPARQL: SELECT ?answer WHERE { wd:Q6948871 wdt:P159 ?X . ?X wdt:P190 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'twin city', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mystery Studio', 'p': 'head office location', 'o': '$y0'}}

 Q: According to the All India Trinamool Congress, what political party serves as the head of government for West Bengal?
 SPARQL: SELECT ?obj WHERE { wd:Q1356 p:P6 ?s . ?s ps:P6 ?obj . ?s pq:P102 wd:Q912899 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'head of government', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'West Bengal', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'party', 'o': 'All India Trinamool Congress'}}}

 Q: What was Matthew McConaughey nominated for in 2014?
 SPARQL: SELECT ?obj WHERE { wd:Q188955 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2014')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Matthew McConaughey', 'p': 'nominated for', 'o': '?x0', 't': '2014'}

 Q: Is it true that the common equity tier 1 capital ratio CETI of the BNP Paribas is less than 14.16?
 SPARQL: ASK WHERE { wd:Q499707 wdt:P2663 ?obj filter(?obj < 14.16) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'BNP Paribas', 'p': 'CETI', 'o': '?x0', '?x0': '14.16'}

 Q: What is the {country} for {country} of {Lisbon}
 SPARQL:  select distinct ?obj where { wd:Q597 wdt:P17 ?obj . ?obj wdt:P31 wd:Q6256 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Lisbon', 'p': 'country', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'country'}}

 Q: What is {temperature} and {phase of matter} of {{water} has {phase point} as {critical point}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 wd:Q111059 . ?s pq:P2076 ?value1 . ?s pq:P515 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'temperature', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase of matter', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'phase point', 'o': 'critical point'}}}]

 Q: What number of interactions does an up quark have?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q6732 wdt:P517 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'up quark', 'p': 'interaction', 'o': '?x0'}

 Q: What was Theodor W. Adorno nominated for on 1 January 1965?
 SPARQL: SELECT ?obj WHERE { wd:Q152388 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1965')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Theodor W. Adorno', 'p': 'nominated for', 'o': '?x0', 't': '1965'}

 Q: What is {manufactured by} of {NEC PC-9800 series}, that has {sector} is {electronics} ?
 SPARQL: SELECT ?answer WHERE { wd:Q183505 wdt:P176 ?answer . ?answer wdt:P452 wd:Q11650}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'NEC PC-9800 series', 'p': 'manufactured by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'sector', 'o': 'electronics'}}

 Q: What is the {aerial bombing of a city} for {location} of {Nagasaki}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q38234 . ?sbj wdt:P31 wd:Q4688003 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Nagasaki', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'aerial bombing of a city'}}

 Q: Is there a correlation between the Universe and the Big Bang nucleosynthesis event?
 SPARQL: ASK WHERE { wd:Q1 wdt:P793 wd:Q837317 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Universe', 'p': 'event', 'o': '?x0', '?x0': 'Big Bang nucleosynthesis'}]

 Q: Is the JMA Magnitude of the 2016 Kumamoto earthquakes greater than 5.84?
 SPARQL: ASK WHERE { wd:Q23825118 wdt:P5900 ?obj filter(?obj > 5.84) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': '2016 Kumamoto earthquakes', 'p': 'JMA Magnitude', 'o': '?x0', '?x0': '5.84'}

 Q: What is the language of work or name for The Divine Comedy whose edition is La Divine Comédie?
 SPARQL: SELECT ?value WHERE { wd:Q40185 p:P747 ?s . ?s ps:P747 wd:Q21191003 . ?s pq:P407 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'language of work or name', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'The Divine Comedy', 'p': 'edition', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'edition', 'o': 'La Divine Comédie'}}}

 Q: What is the {human} for {notable work} of {The Art of War}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P800 wd:Q8251 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'work', 'o': 'The Art of War', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {relative} of {Theodor Mommsen} that is {type of kinship} is {grandson} ?
 SPARQL: SELECT ?obj WHERE { wd:Q25351 p:P1038 ?s . ?s ps:P1038 ?obj . ?s pq:P1039 wd:Q11921506 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'grandson', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Theodor Mommsen', 'p': 'grandson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'kinship', 'o': 'grandson'}}}

 Q: Tell me W3C Recommendation whose name has the word xslt in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q2661442 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xslt')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'W3C Recommendation'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'xslt'}}

 Q: which fields is actor of Frequency ?
 SPARQL: SELECT ?answer WHERE { wd:Q1003845 wdt:P161 ?X . ?X wdt:P101 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'fields', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Frequency', 'p': 'actor', 'o': '$y0'}}

 Q: what is the {has quality} for {film festival} has {properties for this type} as {country} ?
 SPARQL: SELECT ?value WHERE { wd:Q220505 p:P1963 ?s . ?s ps:P1963 ?x filter(contains(?x,'http://www.wikidata.org/entity/P17')) . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'film festival', 'p': 'properties for this type', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'properties for this type', 'o': 'http'}}}

 Q: What items made from linen have "lin" as the vernacular name?
 SPARQL: SELECT ?answer WHERE { wd:Q1426327 wdt:P1582 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'lin'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'linen', 'p': 'made from', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'vernacular name', 'o': 'lin'}}

 Q: What is  Canadian Register of Historic Places ID  for Chambly Canal
 SPARQL: select distinct ?answer where { wd:Q2935991 wdt:P477 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Chambly Canal', 'p': 'Canadian Register of Historic Places ID', 'o': '?x0'}

 Q: Is the shelf life of the Orion less than 168?
 SPARQL: ASK WHERE { wd:Q211727 wdt:P4218 ?obj filter(?obj < 168.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'Orion', 'p': 'shelf life', 'o': '?x0', '?x0': '168.0'}

 Q: Tell me alcohol whose name has the word ynol in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q156 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'ynol')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'alcohol'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'ynol'}}

 Q: Which is the Terminologia Embryologica for embryo?
 SPARQL: select distinct ?answer where { wd:Q33196 wdt:P1693 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'embryo', 'p': 'Terminologia Embryologica', 'o': '?x0'}

 Q: What is Luc Montagnier's Encyclopaedia Universalis author ID?
 SPARQL: select distinct ?answer where { wd:Q103598 wdt:P5369 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Luc Montagnier', 'p': 'Universalis author ID', 'o': '?x0'}

 Q: Which is the Twitter username for Snapchat?
 SPARQL: select distinct ?answer where { wd:Q333618 wdt:P2002 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Snapchat', 'p': 'Twitter username', 'o': '?x0'}

 Q: Which square root starts with letter r?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q134237 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'square root'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: Name a company that is a business division of Walt Disney Motion Pictures Group and contains the word "company" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q6881511 . ?sbj wdt:P199 wd:Q1233073 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'company')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'company', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'business division', 'o': 'Walt Disney Motion Pictures Group'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'company'}}

 Q: What is the {chemical compound} for {monomer of} of {polyvinyl chloride}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P4599 wd:Q146368 . ?sbj wdt:P31 wd:Q11173 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'monomer of', 'o': 'PVC', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'chemical compound'}}

 Q: What is the {human} for {designed by} of {Indianapolis}
 SPARQL:  select distinct ?obj where { wd:Q6346 wdt:P287 ?obj . ?obj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Indianapolis', 'p': 'designed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: "Which is {plays} of {ice skate}, that has {has proponent} is {goaltender} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q108640 wdt:P641 ?answer . ?answer wdt:P3095 wd:Q1317534}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'ice skate', 'p': 'play', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has proponent', 'o': 'goaltender'}}

 Q: What are the personal hygiene item which start with the letter wipe
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q53911696 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'wipe')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'personal hygiene item'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'wipe'}}

 Q: What is {ethnicity} of {portrayed by} of {Rebel of the Underground} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55266138 wdt:P175 ?X . ?X wdt:P172 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'ethnicity', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Rebel of the Underground', 'p': 'portrayed by', 'o': '$y0'}}

 Q: What is Messier 22's radial velocity?
 SPARQL: select distinct ?answer where { wd:Q11392 wdt:P2216 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Messier 22', 'p': 'radial velocity', 'o': '?x0'}

 Q: What is the {cause of death} and the {manner of death} of {Anne_Bancroft} ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q183532 wdt:P509 ?ans_1 . wd:Q183532 wdt:P1196 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Anne Bancroft', 'p': 'cause of death', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Anne Bancroft', 'p': 'manner of death', 'o': '?x1'}]

 Q: Which literary genre was derived from Útlaginn?
 SPARQL: SELECT ?answer WHERE { wd:Q1767048 wdt:P144 ?X . ?X wdt:P136 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'genre', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Útlaginn', 'p': 'derived from', 'o': '$y0'}}

 Q: Who is the developer of ARM architecture for public limited company?
 SPARQL:  select distinct ?obj where { wd:Q16980 wdt:P178 ?obj . ?obj wdt:P31 wd:Q5225895 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'ARM architecture', 'p': 'developer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'public limited company'}}

 Q: Which city with 131429.0 inhabitants was also the death location of Karl Löwith?
 SPARQL: SELECT ?answer WHERE { wd:Q75790 wdt:P20 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'131429.0'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Karl Löwith', 'p': 'death location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '131429.0'}}

 Q: What is the series ordinal award as NPR Top 100 Science Fiction and Fantasy Books has received for Watership Down?
 SPARQL: SELECT ?value WHERE { wd:Q936801 p:P166 ?s . ?s ps:P166 wd:Q20899118 . ?s pq:P1545 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'series ordinal', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Watership Down', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'NPR Top 100 Science Fiction and Fantasy Books'}}}

 Q: Tell me cold war whose name has the word game in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q4176199 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'game')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'cold war'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'game'}}

 Q: Which is the authority of FINA?
 SPARQL: select distinct ?answer where { ?answer wdt:P797 wd:Q189289}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'authority', 'o': 'FINA'}

 Q: What is {diplomatic relation} of {place of origin} of {Kafka on the Shore} ?
 SPARQL: SELECT ?answer WHERE { wd:Q579744 wdt:P495 ?X . ?X wdt:P530 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'diplomatic relation', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kafka on the Shore', 'p': 'place of origin', 'o': '$y0'}}

 Q: What award did Ivan Pavlov receive in 1900?
 SPARQL: SELECT ?obj WHERE { wd:Q42985 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1900')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ivan Pavlov', 'p': 'award', 'o': '?x0', 't': '1900'}

 Q: What is the FIPS 6-4 code in the city of Richmond?
 SPARQL: select distinct ?answer where { wd:Q43421 wdt:P882 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Richmond', 'p': 'FIPS 6-4', 'o': '?x0'}

 Q: What is the {Ford Model A} for {mascot} of {Georgia Institute of Technology}
 SPARQL:  select distinct ?obj where { wd:Q864855 wdt:P822 ?obj . ?obj wdt:P31 wd:Q515001 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Georgia Institute of Technology', 'p': 'mascot', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Ford Model A'}}

 Q: What award did Nickelodeon win in 2010?
 SPARQL: SELECT ?obj WHERE { wd:Q154958 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2010')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Nickelodeon', 'p': 'award', 'o': '?x0', 't': '2010'}

 Q: Tell me process whose name has the word transition in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3249551 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transition')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'process'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'transition'}}

 Q: How many {said to be the same as} are for {master's degree} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q183816 wdt:P460 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': "master's degree", 'p': 'said to be the same as', 'o': '?x0'}

 Q: What is the {human} for {mother} of {Kathie Lee Gifford}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P25 wd:Q465695 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mother', 'o': 'Kathie Lee Gifford', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {member occupation} of {Coen brothers}, that has {profession's field} is {filmmaking} ?
 SPARQL: SELECT ?answer WHERE { wd:Q56095 wdt:P3989 ?answer . ?answer wdt:P425 wd:Q932586}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Coen brothers', 'p': 'member occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': "profession's field", 'o': 'filmmaking'}}

 Q: What is {member of sports team} of {Allan Simonsen} that is {number of points/goals/set scored} is {16.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q153463 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x filter(contains(?x,'16.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Allan Simonsen', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '16.0'}}}

 Q: How many {taxon rank} are to/by {subspecies} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P105 wd:Q68947 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'taxon rank', 'o': 'subspecies'}

 Q: What is {active in} of {Eduard Bernstein}, that has {on harbour} is {Spree} ?
 SPARQL: SELECT ?answer WHERE { wd:Q75786 wdt:P937 ?answer . ?answer wdt:P206 wd:Q1684}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eduard Bernstein', 'p': 'active in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on harbour', 'o': 'Spree'}}

 Q: Which  is terminus of Channel Tunnel?
 SPARQL: select distinct ?answer where { wd:Q10257 wdt:P559 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Channel Tunnel', 'p': 'terminus', 'o': '?x0'}

 Q: What is the {video game publisher} for {manufacturer} of {Atari 2600}
 SPARQL:  select distinct ?obj where { wd:Q206261 wdt:P176 ?obj . ?obj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Atari 2600', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: What is the {human} for {student of} of {Carl Gustav Jung}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1066 wd:Q41532 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Carl Gustav Jung', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the parent agency of the maker of Novo Nordisk (United States)?
 SPARQL: SELECT ?answer WHERE { wd:Q30338738 wdt:P749 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'maker of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Novo Nordisk (United States)', 'p': 'parent agency', 'o': '$y0'}}

 Q: Which is the type of sport that has curling as competition class?
 SPARQL:  select distinct ?obj where { wd:Q136851 wdt:P2094 ?obj . ?obj wdt:P31 wd:Q31629 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'curling', 'p': 'competition class', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of sport'}}

 Q: what is the {start time} for {Qatar} has {head of government} as {Hamad bin Jassim bin Jaber Al Thani} ?
 SPARQL: SELECT ?value WHERE { wd:Q846 p:P6 ?s . ?s ps:P6 wd:Q57734 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Qatar', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Hamad bin Jassim bin Jaber Al Thani'}}}

 Q: What is {belongs to} of {source location of group/organisation} of {Republica} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2139991 wdt:P740 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'belongs to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Republica', 'p': 'source location of group/organisation', 'o': '$y0'}}

 Q: What are the area of mathematics which start with the letter T
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1936384 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of mathematics'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Who was Carl Akeley's spouse until 1923?
 SPARQL: SELECT ?obj WHERE { wd:Q1037711 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1923')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carl Akeley', 'p': 'spouse', 'o': '?x0', 't': '1923'}

 Q: What is {used money} of {comes from} of {I Love Lucy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q181943 wdt:P495 ?X . ?X wdt:P38 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I Love Lucy', 'p': 'comes from', 'o': '$y0'}}

 Q: what is the {start time} for {Jim Lovell} has {spouse} as {Marilyn Lovell} ?
 SPARQL: SELECT ?value WHERE { wd:Q111240 p:P26 ?s . ?s ps:P26 wd:Q21727535 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jim Lovell', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Marilyn Lovell'}}}

 Q: What is PDB ligand ID for biotin} ?
 SPARQL: select distinct ?answer where { wd:Q181354 wdt:P3636 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'biotin', 'p': 'PDB ligand ID', 'o': '?x0'}

 Q: What is {headed by} of {Library of Congress}, that has {ethnicity} is {African Americans} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131454 wdt:P488 ?answer . ?answer wdt:P172 wd:Q49085}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Library of Congress', 'p': 'headed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ethnicity', 'o': 'African American'}}

 Q: what is the {end time} for {Vladimir Lenin} has {residence} as {Podolsk} ?
 SPARQL: SELECT ?value WHERE { wd:Q1394 p:P551 ?s . ?s ps:P551 wd:Q19520 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Lenin', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Podolsk'}}}

 Q: Which colour of the rainbow is associated with the sRGB colour hex triplet code #FF0000?
 SPARQL: SELECT ?answer WHERE { wd:Q1052 wdt:P462 ?answer . ?answer wdt:P465 ?x FILTER(contains(?x,'FF0000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'rainbow', 'p': 'colour', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'RGB', 'o': 'ff0000'}}

 Q: How many {takes place in fictional universe} are to/by {Marvel Cinematic Universe} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1434 wd:Q642878 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'takes place in fictional universe', 'o': 'Marvel Cinematic Universe'}

 Q: What continent that includes Tuvalu has 36,659,000 inhabitants?
 SPARQL: SELECT ?answer WHERE { wd:Q672 wdt:P30 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'36659000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tuvalu', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '36659000'}}

 Q: What was the manner of death of Mstislav Rostropovich?
 SPARQL: select distinct ?answer where { wd:Q152043 wdt:P1196 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mstislav Rostropovich', 'p': 'manner of death', 'o': '?x0'}

 Q: Give me {new religious movement} that {standards body} {Religious Technology Center} and which contains the word {scientology} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q477544 . ?sbj wdt:P1462 wd:Q2672895 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'scientology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'new religious movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'standards body', 'o': 'Religious Technology Center'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'scientology'}}

 Q: What is {award received} of {Dilwale Dulhania Le Jayenge} that is {winner} is {Kajol} ?
 SPARQL: SELECT ?obj WHERE { wd:Q849343 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q147395 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dilwale Dulhania Le Jayenge', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'Kajol'}}}

 Q: What honours were created by the National Academy of Television Arts and Sciences that were awarded to Barbara Bain ?
 SPARQL: SELECT ?answer WHERE { wd:Q263143 wdt:P166 ?answer . ?answer wdt:P170 wd:Q2822443}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barbara Bain', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'National Academy of Television Arts and Sciences'}}

 Q: How many things are proved by the modularity theorem?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q649469 wdt:P1318 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'modularity theorem', 'p': 'proved by', 'o': '?x0'}

 Q: What is the {concept in physics} for {has effect} of {Big Bang}
 SPARQL:  select distinct ?obj where { wd:Q323 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q33104303 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Big Bang', 'p': 'has effect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept in physics'}}

 Q: what is the {country} for {Zinedine Zidane} has {place of birth} as {Marseille} ?
 SPARQL: SELECT ?value WHERE { wd:Q1835 p:P19 ?s . ?s ps:P19 wd:Q23482 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zinedine Zidane', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Marseille'}}}

 Q: What is Emporis building ID for CN Tower ?
 SPARQL: select distinct ?answer where { wd:Q134883 wdt:P455 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'CN Tower', 'p': 'Emporis building ID', 'o': '?x0'}

 Q: What is {position held} of {Harold Wilson} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q128956 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Wilson', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Wilson', 'p': 'position held', 'o': '$y0'}}]

 Q: Which weapon model has the longest field of view?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P4036 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'field of view', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon model'}}

 Q: Which is valid in place of Trentino-South Tyrol?
 SPARQL: select distinct ?answer where { ?answer wdt:P3005 wd:Q1237}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'valid in place', 'o': 'Trentino-South Tyrol'}

 Q: What is the time of the continent of the Timurid Empire?
 SPARQL: SELECT ?answer WHERE { wd:Q484195 wdt:P30 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Timurid Empire', 'p': 'continent', 'o': '$y0'}}

 Q: Tell me process whose name has the word transition in it.
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q3249551 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'transition')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'process'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'transition'}}

 Q: How many {said to be the same as} are for {master's degree} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q183816 wdt:P460 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': "master's degree", 'p': 'said to be the same as', 'o': '?x0'}

 Q: What is the {human} for {mother} of {Kathie Lee Gifford}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P25 wd:Q465695 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'mother', 'o': 'Kathie Lee Gifford', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is {member occupation} of {Coen brothers}, that has {profession's field} is {filmmaking} ?
 SPARQL: SELECT ?answer WHERE { wd:Q56095 wdt:P3989 ?answer . ?answer wdt:P425 wd:Q932586}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Coen brothers', 'p': 'member occupation', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': "profession's field", 'o': 'filmmaking'}}

 Q: What is {member of sports team} of {Allan Simonsen} that is {number of points/goals/set scored} is {16.0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q153463 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?x filter(contains(?x,'16.0')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'team', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Allan Simonsen', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '16.0'}}}

 Q: How many {taxon rank} are to/by {subspecies} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P105 wd:Q68947 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'taxon rank', 'o': 'subspecies'}

 Q: What is {active in} of {Eduard Bernstein}, that has {on harbour} is {Spree} ?
 SPARQL: SELECT ?answer WHERE { wd:Q75786 wdt:P937 ?answer . ?answer wdt:P206 wd:Q1684}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Eduard Bernstein', 'p': 'active in', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'on harbour', 'o': 'Spree'}}

 Q: Which  is terminus of Channel Tunnel?
 SPARQL: select distinct ?answer where { wd:Q10257 wdt:P559 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Channel Tunnel', 'p': 'terminus', 'o': '?x0'}

 Q: What is the {video game publisher} for {manufacturer} of {Atari 2600}
 SPARQL:  select distinct ?obj where { wd:Q206261 wdt:P176 ?obj . ?obj wdt:P31 wd:Q1137109 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Atari 2600', 'p': 'manufacturer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game publisher'}}

 Q: What is the {human} for {student of} of {Carl Gustav Jung}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1066 wd:Q41532 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'student of', 'o': 'Carl Gustav Jung', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: Who is the parent agency of the maker of Novo Nordisk (United States)?
 SPARQL: SELECT ?answer WHERE { wd:Q30338738 wdt:P749 ?X . ?X wdt:P1056 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'maker of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Novo Nordisk (United States)', 'p': 'parent agency', 'o': '$y0'}}

 Q: Which is the type of sport that has curling as competition class?
 SPARQL:  select distinct ?obj where { wd:Q136851 wdt:P2094 ?obj . ?obj wdt:P31 wd:Q31629 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'curling', 'p': 'competition class', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'type of sport'}}

 Q: what is the {start time} for {Qatar} has {head of government} as {Hamad bin Jassim bin Jaber Al Thani} ?
 SPARQL: SELECT ?value WHERE { wd:Q846 p:P6 ?s . ?s ps:P6 wd:Q57734 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Qatar', 'p': 'head of government', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'head of government', 'o': 'Hamad bin Jassim bin Jaber Al Thani'}}}

 Q: What is {belongs to} of {source location of group/organisation} of {Republica} ?
 SPARQL: SELECT ?answer WHERE { wd:Q2139991 wdt:P740 ?X . ?X wdt:P127 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'belongs to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Republica', 'p': 'source location of group/organisation', 'o': '$y0'}}

 Q: What are the area of mathematics which start with the letter T
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1936384 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'area of mathematics'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: Who was Carl Akeley's spouse until 1923?
 SPARQL: SELECT ?obj WHERE { wd:Q1037711 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P582 ?x filter(contains(YEAR(?x),'1923')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Carl Akeley', 'p': 'spouse', 'o': '?x0', 't': '1923'}

 Q: What is {used money} of {comes from} of {I Love Lucy} ?
 SPARQL: SELECT ?answer WHERE { wd:Q181943 wdt:P495 ?X . ?X wdt:P38 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'used money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'I Love Lucy', 'p': 'comes from', 'o': '$y0'}}

 Q: what is the {start time} for {Jim Lovell} has {spouse} as {Marilyn Lovell} ?
 SPARQL: SELECT ?value WHERE { wd:Q111240 p:P26 ?s . ?s ps:P26 wd:Q21727535 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jim Lovell', 'p': 'marry', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'marry', 'o': 'Marilyn Lovell'}}}

 Q: What is PDB ligand ID for biotin} ?
 SPARQL: select distinct ?answer where { wd:Q181354 wdt:P3636 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'biotin', 'p': 'PDB ligand ID', 'o': '?x0'}

 Q: What is {headed by} of {Library of Congress}, that has {ethnicity} is {African Americans} ?
 SPARQL: SELECT ?answer WHERE { wd:Q131454 wdt:P488 ?answer . ?answer wdt:P172 wd:Q49085}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Library of Congress', 'p': 'headed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'ethnicity', 'o': 'African American'}}

 Q: what is the {end time} for {Vladimir Lenin} has {residence} as {Podolsk} ?
 SPARQL: SELECT ?value WHERE { wd:Q1394 p:P551 ?s . ?s ps:P551 wd:Q19520 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vladimir Lenin', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Podolsk'}}}

 Q: Which colour of the rainbow is associated with the sRGB colour hex triplet code #FF0000?
 SPARQL: SELECT ?answer WHERE { wd:Q1052 wdt:P462 ?answer . ?answer wdt:P465 ?x FILTER(contains(?x,'FF0000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'rainbow', 'p': 'colour', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'RGB', 'o': 'ff0000'}}

 Q: How many {takes place in fictional universe} are to/by {Marvel Cinematic Universe} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1434 wd:Q642878 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'takes place in fictional universe', 'o': 'Marvel Cinematic Universe'}

 Q: What continent that includes Tuvalu has 36,659,000 inhabitants?
 SPARQL: SELECT ?answer WHERE { wd:Q672 wdt:P30 ?answer . ?answer wdt:P1082 ?x FILTER(contains(?x,'36659000'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Tuvalu', 'p': 'continent', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'inhabitants', 'o': '36659000'}}

 Q: What was the manner of death of Mstislav Rostropovich?
 SPARQL: select distinct ?answer where { wd:Q152043 wdt:P1196 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Mstislav Rostropovich', 'p': 'manner of death', 'o': '?x0'}

 Q: Give me {new religious movement} that {standards body} {Religious Technology Center} and which contains the word {scientology} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q477544 . ?sbj wdt:P1462 wd:Q2672895 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'scientology')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'new religious movement', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'standards body', 'o': 'Religious Technology Center'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'scientology'}}

 Q: What is {award received} of {Dilwale Dulhania Le Jayenge} that is {winner} is {Kajol} ?
 SPARQL: SELECT ?obj WHERE { wd:Q849343 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1346 wd:Q147395 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dilwale Dulhania Le Jayenge', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'winner', 'o': 'Kajol'}}}

 Q: What honours were created by the National Academy of Television Arts and Sciences that were awarded to Barbara Bain ?
 SPARQL: SELECT ?answer WHERE { wd:Q263143 wdt:P166 ?answer . ?answer wdt:P170 wd:Q2822443}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Barbara Bain', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'created by', 'o': 'National Academy of Television Arts and Sciences'}}

 Q: How many things are proved by the modularity theorem?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q649469 wdt:P1318 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'modularity theorem', 'p': 'proved by', 'o': '?x0'}

 Q: What is the {concept in physics} for {has effect} of {Big Bang}
 SPARQL:  select distinct ?obj where { wd:Q323 wdt:P1542 ?obj . ?obj wdt:P31 wd:Q33104303 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Big Bang', 'p': 'has effect', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'concept in physics'}}

 Q: what is the {country} for {Zinedine Zidane} has {place of birth} as {Marseille} ?
 SPARQL: SELECT ?value WHERE { wd:Q1835 p:P19 ?s . ?s ps:P19 wd:Q23482 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Zinedine Zidane', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Marseille'}}}

 Q: What is Emporis building ID for CN Tower ?
 SPARQL: select distinct ?answer where { wd:Q134883 wdt:P455 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'CN Tower', 'p': 'Emporis building ID', 'o': '?x0'}

 Q: What is {position held} of {Harold Wilson} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q128956 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Wilson', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Harold Wilson', 'p': 'position held', 'o': '$y0'}}]

 Q: Which weapon model has the longest field of view?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q15142894 . ?ent wdt:P4036 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'field of view', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'weapon model'}}

 Q: Which is valid in place of Trentino-South Tyrol?
 SPARQL: select distinct ?answer where { ?answer wdt:P3005 wd:Q1237}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'valid in place', 'o': 'Trentino-South Tyrol'}

 Q: What is the time of the continent of the Timurid Empire?
 SPARQL: SELECT ?answer WHERE { wd:Q484195 wdt:P30 ?X . ?X wdt:P421 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Timurid Empire', 'p': 'continent', 'o': '$y0'}}

 Q: What is the derived from of the from work of Detective Lemieux?
 SPARQL: SELECT ?answer WHERE { wd:Q24068213 wdt:P1441 ?X . ?X wdt:P144 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'derived from', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Detective Lemieux', 'p': 'from work', 'o': '$y0'}}

 Q: How many {studied by} are for {atomic nucleus} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q37147 wdt:P2579 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'atomic nucleus', 'p': 'studied by', 'o': '?x0'}

 Q: Who is the {praetorian prefecture} for {located in the administrative territorial entity} of {Roman Empire}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q2277 . ?sbj wdt:P31 wd:Q4377540 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'located in the administrative territorial entity', 'o': 'Roman Empire', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'praetorian prefecture'}}

 Q: Is it true that the number of participants of the 1947-48 Cypriot Cup equals to 5?
 SPARQL: ASK WHERE { wd:Q27924 wdt:P1132 ?obj filter(?obj = 5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': '1947-48 Cypriot Cup', 'p': 'number of participants', 'o': '?x0', '?x0': '5'}

 Q: What award was received by Igor Tamm together with Pavel Cherenkov?
 SPARQL: SELECT ?obj WHERE { wd:Q155759 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q76970 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Igor Tamm', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Pavel Cherenkov'}}}

 Q: What is the village for the place of death of Akhenaten?
 SPARQL:  select distinct ?obj where { wd:Q81794 wdt:P20 ?obj . ?obj wdt:P31 wd:Q532 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Akhenaten', 'p': 'place of death', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'village'}}

 Q: Who gave the {has son} of {has son of} of {Mary Stewart} ?
 SPARQL: SELECT ?answer WHERE { wd:Q4652 wdt:P22 ?X . ?X wdt:P40 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'son', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mary Stewart', 'p': 'son of', 'o': '$y0'}}

 Q: What is CNC film rating France for Fight Club
 SPARQL: select distinct ?answer where { wd:Q190050 wdt:P2758 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fight Club', 'p': 'CNC film rating', 'o': '?x0'}

 Q: What is {member of sports team} of {Majed Abdullah} and {number of points/goals/set scored}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q446181 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P1351 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'number of points/goals/set scored', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Majed Abdullah', 'p': 'team', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'team', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Majed Abdullah', 'p': 'team', 'o': '$y0'}}]

 Q: How many {country of citizenship} are to/by {Finland} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P27 wd:Q33 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'country of citizenship', 'o': 'Finland'}

 Q: What is {is in the Indian reserve of} of {volcano monitored by} of {Mauna Loa} ?
 SPARQL: SELECT ?answer WHERE { wd:Q159762 wdt:P3815 ?X . ?X wdt:P131 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mauna Loa', 'p': 'volcano monitored by', 'o': '$y0'}}

 Q: what is the {end time} for {Barbara Hutton} has {spouse} as {Cary Grant} ?
 SPARQL: SELECT ?value WHERE { wd:Q255620 p:P26 ?s . ?s ps:P26 wd:Q83410 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Barbara Hutton', 'p': 'spouse', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'spouse', 'o': 'Cary Grant'}}}

 Q: Is the name Peter Thomas the same as Peder?
 SPARQL: SELECT ?answer WHERE { wd:Q7177289 wdt:P735 ?answer . ?answer wdt:P460 wd:Q10622039}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Peter Thomas', 'p': 'name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Peder'}}

 Q: Which is the micronation for the renminbi currency?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P38 wd:Q39099 . ?sbj wdt:P31 wd:Q188443 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'currency', 'o': 'renminbi', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'micronation'}}

 Q: When did the Tokushima Prefecture have a population of 740783?
 SPARQL: SELECT ?value WHERE { wd:Q160734 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'740783')) . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Tokushima Prefecture', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '740783'}, 't': '?x0'}

 Q: Where is the event location in the Pacific Ring of Fire which tributary is Ozette River?
 SPARQL: SELECT ?answer WHERE { wd:Q18783 wdt:P276 ?answer . ?answer wdt:P974 wd:Q3359216}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pacific Ring of Fire', 'p': 'location', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'tributary', 'o': 'Ozette River'}}

 Q: Did Mikko Lehtonen never score any goals in their career?
 SPARQL: ASK WHERE { wd:Q59951 wdt:P6509 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Mikko Lehtonen', 'p': 'total goals in career', 'o': '?x0', '?x0': '0'}

 Q: What is studied at the parent company of Harvard Business School, G. Stanley Hall?
 SPARQL: SELECT ?answer WHERE { wd:Q309675 wdt:P69 ?answer . ?answer wdt:P355 wd:Q49126}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'G. Stanley Hall', 'p': 'studied at', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'parent company of', 'o': 'Harvard Business School'}}

 Q: tell me the fallen angel starts with z
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q581450 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'z')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'fallen angel'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'z'}}

 Q: Is Manchester's twinned administrative body consist of Faisalabad and Palembang?
 SPARQL: ASK WHERE { wd:Q18125 wdt:P190 wd:Q173985 . wd:Q18125 wdt:P190 wd:Q8131 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Manchester', 'p': 'twinned administrative body', 'o': '?x0', '?x0': 'Faisalabad'}, {'h': 'IS', 'v': '?x1', 's': 'Manchester', 'p': 'twinned administrative body', 'o': '?x1', '?x1': 'Palembang'}]

 Q: Which is the treatment that treats the medical condition of gold?
 SPARQL: SELECT ?answer WHERE { wd:Q897 wdt:P2175 ?X . ?X wdt:P2176 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'treatment', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'gold', 'p': 'treats', 'o': '$y0'}}

 Q: Of how many companies is Donald Trump a chairperson?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P488 wd:Q22686 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'chairperson', 'o': 'Donald Trump'}

 Q: Thor, how many brothers?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P3373 wd:Q42952 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'bro', 'o': 'Thor'}

 Q: For what reason is the brain stem in the anatomical location that it is?
 SPARQL: SELECT ?answer WHERE { wd:Q182228 wdt:P927 ?X . ?X wdt:P828 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'reason', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'brain stem', 'p': 'anatomical location', 'o': '$y0'}}

 Q: What is the award of Seiji Ozawa, that was won by Johnny Carson?
 SPARQL: SELECT ?answer WHERE { wd:Q313649 wdt:P166 ?answer . ?answer wdt:P1346 wd:Q310819}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Seiji Ozawa', 'p': 'award', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'won by', 'o': 'Johnny Carson'}}

 Q: What is relative of Manisha Koirala ?
 SPARQL: select distinct ?answer where { wd:Q186606 wdt:P1038 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Manisha Koirala', 'p': 'relative', 'o': '?x0'}

 Q: What is the {Population I star} for {child astronomical body} of {Uranus}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P398 wd:Q324 . ?sbj wdt:P31 wd:Q3592493 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'child astronomical body', 'o': 'Uranus', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Population I star'}}

 Q: What is {position held} of {Joseph Chamberlain} and {elected in}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q315999 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P2715 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'elected in', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Chamberlain', 'p': 'position held', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'position held', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Joseph Chamberlain', 'p': 'position held', 'o': '$y0'}}]

 Q: What are the video game console model which letter starts with x
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q56682555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'x')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game console model'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'x'}}

 Q: Which is The Peerage person ID for Coco Chanel?
 SPARQL: select distinct ?answer where { wd:Q45661 wdt:P4638 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Coco Chanel', 'p': 'The Peerage person ID', 'o': '?x0'}

 Q: What is <location of final assembly> of <mozzarella> ?
 SPARQL: select distinct ?answer where { wd:Q14088 wdt:P1071 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mozzarella', 'p': 'location of final assembly', 'o': '?x0'}

 Q: what is the {prize money} for {Wangari Maathai} has {award received} as {Nobel Peace Prize} ?
 SPARQL: SELECT ?value WHERE { wd:Q46795 p:P166 ?s . ?s ps:P166 wd:Q35637 . ?s pq:P2121 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'prize money', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Maathai', 'p': 'award received', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award received', 'o': 'Nobel Peace Prize'}}}

 Q: Who is the {literary work} for {published in} of {The Jungle Book}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1433 wd:Q189509 . ?sbj wdt:P31 wd:Q7725634 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'published in', 'o': 'The Jungle Book', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'literary work'}}

 Q: Who is {TV host} of {part of series} of {Dancing with the Stars, season 15} ?
 SPARQL: SELECT ?answer WHERE { wd:Q3464713 wdt:P179 ?X . ?X wdt:P371 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'host', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Dancing with the Stars, season 15', 'p': 'part of series', 'o': '$y0'}}

 Q: what is the {replaces} for {Antonio José de Sucre Farell} has {position held} as {President of Bolivia} ?
 SPARQL: SELECT ?value WHERE { wd:Q189779 p:P39 ?s . ?s ps:P39 wd:Q373548 . ?s pq:P1365 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Antonio José de Sucre', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'President of Bolivia'}}}

 Q: what is the {start time} for {Richard Hadlee} has {member of sports team} as {Tasmania cricket team} ?
 SPARQL: SELECT ?value WHERE { wd:Q1854659 p:P54 ?s . ?s ps:P54 wd:Q1133545 . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Richard Hadlee', 'p': 'team', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'team', 'o': 'Tasmania cricket team'}}}

 Q: What is {place of burial} of {L. L. Zamenhof} that is {coordinate location} is {52.24525 20.976080555556} ?
 SPARQL: SELECT ?obj WHERE { wd:Q11758 p:P119 ?s . ?s ps:P119 ?obj . ?s pq:P625 ?x filter(contains(?x,'52.24525 20.976080555556')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'L. Zamenhof', 'p': 'place of burial', 'o': '?x0'}

 Q: What is {nomination received} of {Kurt Weill}, that has {won by} is {Ray Heindorf} ?
 SPARQL: SELECT ?answer WHERE { wd:Q55004 wdt:P1411 ?answer . ?answer wdt:P1346 wd:Q713301}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kurt Weill', 'p': 'nomination received', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'won by', 'o': 'Ray Heindorf'}}

 Q: At coordinate location 40.765-111.85, what is the start time for the University of Utah?
 SPARQL: SELECT ?value WHERE { wd:Q168515 p:P625 ?s . ?s ps:P625 ?x filter(contains(?x,'40.765 -111.85')) . ?s pq:P580 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'start time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University of Utah', 'p': 'coordinate location', 'o': '$y0'}}

 Q: What is the determination method of Sabadell which has population as 185170?
 SPARQL: SELECT ?value WHERE { wd:Q12258 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'185170.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sabadell', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '185170.0'}}}

 Q: Who was Jean Seberg's spouse starting in October of 1963?
 SPARQL: SELECT ?obj WHERE { wd:Q230681 p:P26 ?s . ?s ps:P26 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1963')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Jean Seberg', 'p': 'spouse', 'o': '?x0', 't': '1963'}

 Q: Is FIFA the organizer of FIFA World Cup?
 SPARQL: ASK WHERE { wd:Q19317 wdt:P664 wd:Q253414 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'FIFA World Cup', 'p': 'organizer', 'o': '?x0', '?x0': 'FIFA'}]

 Q: what is the {end time} for {Uthman ibn Affan} has {position held} as {Rashidun Empire} ?
 SPARQL: SELECT ?value WHERE { wd:Q37731 p:P39 ?s . ?s ps:P39 wd:Q180465 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Uthman ibn Affan', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Rashidun'}}}

 Q: What is {capital city} of {Kingdom of Bohemia}, that has {subdivided into} is {Modřany} ?
 SPARQL: SELECT ?answer WHERE { wd:Q42585 wdt:P36 ?answer . ?answer wdt:P150 wd:Q3490542}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kingdom of Bohemia', 'p': 'capital', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'divided into', 'o': 'Modřany'}}

 Q: What in the sport of college basketball has a running length of 40?
 SPARQL: SELECT ?answer WHERE { wd:Q48890 wdt:P641 ?answer . ?answer wdt:P2047 ?x FILTER(contains(?x,'40'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'college basketball', 'p': 'sport', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'length', 'o': '40'}}

 Q: Who is the operator and powerplant of Rockwell B-1 Lancer?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q218636 wdt:P137 ?ans_1 . wd:Q218636 wdt:P516 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'B-1 Lancer', 'p': 'operator', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'B-1 Lancer', 'p': 'powerplant', 'o': '?x1'}]

 Q: Is the mains voltage of the Kiribati equal to 240?
 SPARQL: ASK WHERE { wd:Q710 wdt:P2884 ?obj filter(?obj = 240) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Kiribati', 'p': 'mains voltage', 'o': '?x0', '?x0': '240'}

 Q: Which is the atomic number of cobalt?
 SPARQL: select distinct ?answer where { wd:Q740 wdt:P1086 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'cobalt', 'p': 'atomic number', 'o': '?x0'}

 Q: What is the {human} for {doctoral advisor} of {Gottfried Wilhelm Leibniz}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P184 wd:Q9047 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral advisor', 'o': 'Gottfried Wilhelm Leibniz', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: which polygon starts with the letter t
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q37555 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 't')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'polygon'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 't'}}

 Q: What is the toponym of the kilowatt hour with a год. unit symbol?
 SPARQL: SELECT ?answer WHERE { wd:Q182098 wdt:P138 ?answer . ?answer wdt:P5061 ?x FILTER(contains(?x,'год.'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'kilowatt hour', 'p': 'toponym', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'unit symbol', 'o': 'год.'}}

 Q: What is {award received} of {Robin Williams} that is {together with} is {Christine Baranski} ?
 SPARQL: SELECT ?obj WHERE { wd:Q83338 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P1706 wd:Q229134 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'award', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Robin Williams', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'together with', 'o': 'Christine Baranski'}}}

 Q: What was Hideaki Anno nominated for in 2008?
 SPARQL: SELECT ?obj WHERE { wd:Q23261 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'2008')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Hideaki Anno', 'p': 'nominated for', 'o': '?x0', 't': '2008'}

 Q: When did Muhammad Yunus receive the Empowering award?
 SPARQL: SELECT ?value WHERE { wd:Q43969 p:P166 ?s . ?s ps:P166 wd:Q18759513 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Muhammad Yunus', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Empowering award'}, 't': '?x0'}

 Q: What is {nominated for} of {Vilmos Zsigmond} that is {for work} is {The River} ?
 SPARQL: SELECT ?obj WHERE { wd:Q963628 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q1771288 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Vilmos Zsigmond', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'The River'}}}

 Q: What are the flammable gas which start with the letter v
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q10913792 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'v')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'flammable gas'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'v'}}

 Q: Is the caliber of the M110 203?
 SPARQL: ASK WHERE { wd:Q315586 wdt:P4403 ?obj filter(?obj = 203) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'M110', 'p': 'caliber', 'o': '?x0', '?x0': '203'}

 Q: Who gave the {chancellor} of {place of work} of {Bernie Sanders} ?
 SPARQL: SELECT ?answer WHERE { wd:Q359442 wdt:P937 ?X . ?X wdt:P6 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'chancellor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bernie Sanders', 'p': 'place of work', 'o': '$y0'}}

 Q: What is the {human} for {doctoral student} of {Grace Hopper}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P185 wd:Q11641 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Grace Hopper', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'person'}}

 Q: Who is the child of Svatopluk II's sister?
 SPARQL: SELECT ?answer WHERE { wd:Q1354544 wdt:P3373 ?X . ?X wdt:P22 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'child of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Svatopluk II', 'p': 'sister', 'o': '$y0'}}

 Q: What is the {dog} for {has pet} of {Pablo Picasso}
 SPARQL:  select distinct ?obj where { wd:Q5593 wdt:P1429 ?obj . ?obj wdt:P31 wd:Q144 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pablo Picasso', 'p': 'has pet', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'dog'}}

 Q: What is ERA Journal ID of Astronomy and Astrophysics ?
 SPARQL: select distinct ?answer where { wd:Q752075 wdt:P1058 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Astronomy and Astrophysics', 'p': 'ERA Journal ID', 'o': '?x0'}

 Q: What is {this taxon is the source of} of {higher taxon} of {Penicillium clavigerum} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20720677 wdt:P171 ?X . ?X wdt:P1672 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'this taxon is the source of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Penicillium clavigerum', 'p': 'higher taxon', 'o': '$y0'}}

 Q: Does the endowment of the University of Waterloo equals 367895000?
 SPARQL: ASK WHERE { wd:Q1049470 wdt:P6589 ?obj filter(?obj = 367895000) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'University of Waterloo', 'p': 'endowment', 'o': '?x0', '?x0': '367895000'}

 Q: what is the {NFPA Instability} for {iron(III) oxide} has {safety classification and labelling} as {NFPA 704: Standard System for the Identification of the Hazards of Materials for Emergency Response} ?
 SPARQL: SELECT ?value WHERE { wd:Q419170 p:P4952 ?s . ?s ps:P4952 wd:Q51139288 . ?s pq:P995 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'NFPA Instability', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'iron(III) oxide', 'p': 'safety classification and labelling', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'safety classification and labelling', 'o': 'NFPA 704'}}}

 Q: What is the determination method that Bilbao has the population of 351629.0?
 SPARQL: SELECT ?value WHERE { wd:Q8692 p:P1082 ?s . ?s ps:P1082 ?x filter(contains(?x,'351629.0')) . ?s pq:P459 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'determination method', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Bilbao', 'p': 'population', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'population', 'o': '351629.0'}}}

 Q: Give me {high speed train} that {track gauge} {1435 mm track gauge} and which contains the word {v250} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q13402959 . ?sbj wdt:P1064 wd:Q1999572 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'v250')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'high speed train', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'track gauge', 'o': '1435 mm track gauge'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'v250'}}

 Q: Did {Cold_War} {significant event} {Second Sino-Japanese War}?
 SPARQL: ASK WHERE { wd:Q8683 wdt:P793 wd:Q170314 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Cold War', 'p': 'significant event', 'o': '?x0', '?x0': 'Second Sino-Japanese War'}]

 Q: Who gave the{has wards} of {died in} of {Faina Ranevskaya} ?
 SPARQL: SELECT ?answer WHERE { wd:Q470466 wdt:P20 ?X . ?X wdt:P150 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'has wards', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Faina Ranevskaya', 'p': 'died in', 'o': '$y0'}}

 Q: What is {end time} and {start time} of {{Park Geun-hye} {member of political party} as {Liberty Korea Party}}?q
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q138048 p:P102 ?s . ?s ps:P102 wd:Q20916 . ?s pq:P582 ?value1 . ?s pq:P580 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'member of political party', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of political party', 'o': 'Liberty Korea Party'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'start time', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Park Geun-hye', 'p': 'member of political party', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'member of political party', 'o': 'Liberty Korea Party'}}}]

 Q: Which reservoir has the largest volume?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q131681 . ?ent wdt:P2234 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'volume as quantity', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'reservoir'}}

 Q: What is the isotope of hydrogen that follows deuterium that contains the word "tritium" in its name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q466603 . ?sbj wdt:P155 wd:Q102296 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'tritium')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'isotope of hydrogen', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'follows', 'o': 'deuterium'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'tritium'}}

 Q: How many {distributor} are for {Married... with Children} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q208647 wdt:P750 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Married... with Children', 'p': 'distributor', 'o': '?x0'}

 Q: What is the {self-propelled gun} for {country of origin} of {Soviet Union}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P495 wd:Q15180 . ?sbj wdt:P31 wd:Q272574 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'country of origin', 'o': 'Soviet Union', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'self-propelled gun'}}

 Q: What is LNB ID of Ray Kurzweil ?
 SPARQL: select distinct ?answer where { wd:Q298341 wdt:P1368 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Ray Kurzweil', 'p': 'LNB ID', 'o': '?x0'}

 Q: Who is the sibling of Christiaan Huygens?
 SPARQL: select distinct ?answer where { wd:Q39599 wdt:P3373 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Christiaan Huygens', 'p': 'sibling', 'o': '?x0'}

 Q: What is the librettist of Die Walküre?
 SPARQL: select distinct ?answer where { wd:Q324319 wdt:P87 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Die Walküre', 'p': 'librettist', 'o': '?x0'}

 Q: Give me {autonomous region of the People's Republic of China} that {highest point} {K2} and which contains the word {xinjiang} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q57362 . ?sbj wdt:P610 wd:Q43512 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'xinjiang')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': "autonomous region of the People's Republic of China", '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'highest point', 'o': 'K2'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'xinjiang'}}

 Q: what is the {end time} for {Albrecht Dürer} has {residence} as {Nuremberg} ?
 SPARQL: SELECT ?value WHERE { wd:Q5580 p:P551 ?s . ?s ps:P551 wd:Q2090 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Albrecht Dürer', 'p': 'residence', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'residence', 'o': 'Nuremberg'}}}

 Q: How many {dialect of} are to/by {Russian} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4913 wd:Q7737 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'Russian'}

 Q: What is the publication date for Immanuel Kant's most notable work, Critique of Practical Reason?
 SPARQL: SELECT ?value WHERE { wd:Q9312 p:P800 ?s . ?s ps:P800 wd:Q870851 . ?s pq:P577 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'publication date', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Immanuel Kant', 'p': 'notable work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'notable work', 'o': 'Critique of Practical Reason'}}}

 Q: Is the chromosome count for Down syndrome equal to 47?
 SPARQL: ASK WHERE { wd:Q47715 wdt:P5230 ?obj filter(?obj = 47) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Down syndrome', 'p': 'chromosome count', 'o': '?x0', '?x0': '47'}

 Q: What house has a child in Sri Indraditya?
 SPARQL: SELECT ?answer WHERE { wd:Q887310 wdt:P40 ?X . ?X wdt:P53 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'house', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Sri Indraditya', 'p': 'child', 'o': '$y0'}}

 Q: Who is nominated for Lee Grant that for work is Detective Story}?
 SPARQL: SELECT ?obj WHERE { wd:Q230184 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P1686 wd:Q605867 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nominated for', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lee Grant', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'for work', 'o': 'Detective Story'}}}

 Q: What is {postal index number} of {place of formation} of {Buddhism} ?
 SPARQL: SELECT ?answer WHERE { wd:Q748 wdt:P740 ?X . ?X wdt:P281 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'postal index number', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Buddhism', 'p': 'place of formation', 'o': '$y0'}}

 Q: What is <Canadian Environmental Sustainability Indicators ID (Protected areas)> of <Banff National Park> ?
 SPARQL: select distinct ?answer where { wd:Q41858 wdt:P3412 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Banff National Park', 'p': 'Canadian Environmental Sustainability Indicators ID (Protected areas)', 'o': '?x0'}

 Q: What is {writer} of {The Faerie Queene}, that has {year of death} is {1599-1-13} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1813771 wdt:P50 ?answer . ?answer wdt:P570 ?x FILTER(contains(YEAR(?x),'1599'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'The Faerie Queene', 'p': 'writer', 'o': '?x0', 't': '1599'}

 Q: What is <contains administrative territorial entity> of <Pune> ?
 SPARQL: select distinct ?answer where { wd:Q1538 wdt:P150 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pune', 'p': 'contains administrative territorial entity', 'o': '?x0'}

 Q: What is the subsidiary entities of the developed by Windows XP ?
 SPARQL: SELECT ?answer WHERE { wd:Q11248 wdt:P178 ?X . ?X wdt:P355 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'subsidiary', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Windows XP', 'p': 'developed by', 'o': '$y0'}}

 Q: What tennis event was won by Margaret Court ?
 SPARQL:  select distinct ?obj where { wd:Q202342 wdt:P2522 ?obj . ?obj wdt:P31 wd:Q46190676 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Margaret Court', 'p': 'won', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'tennis event'}}

 Q: In which profession is the bricks used?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P2283 wd:Q40089 . ?sbj wdt:P31 wd:Q28640 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'used', 'o': 'brick', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'profession'}}

 Q: What is {subtopic of} of {history of Kansas}, that has {has boroughs} is {Geary County} ?
 SPARQL: SELECT ?answer WHERE { wd:Q5865093 wdt:P1269 ?answer . ?answer wdt:P150 wd:Q377148}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Kansas', 'p': 'topic of', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'has towns', 'o': 'Geary County'}}

 Q: Which is the patent number of the mouse?
 SPARQL: select distinct ?answer where { wd:Q7987 wdt:P1246 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'mouse', 'p': 'patent number', 'o': '?x0'}

 Q: which is the {country} for {Hrant Dink} that has {place of death} as {Istanbul} ?
 SPARQL: SELECT ?value WHERE { wd:Q110126 p:P20 ?s . ?s ps:P20 wd:Q406 . ?s pq:P17 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'country', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Hrant Dink', 'p': 'place of death', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'place of death', 'o': 'Istanbul'}}}

 Q: "Which is {taxon parent} of {Ficus}, whose {vernacular name} is {Zīdkoku dzimta} ?"
 SPARQL: SELECT ?answer WHERE { wd:Q59798 wdt:P171 ?answer . ?answer wdt:P1843 ?x FILTER(contains(?x,'Zīdkoku dzimta'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ficus', 'p': 'taxon parent', 'o': '?x0'}

 Q: What is the Christian name of Henry IV of England, that is the same as Harald?
 SPARQL: SELECT ?answer WHERE { wd:Q161866 wdt:P735 ?answer . ?answer wdt:P460 wd:Q1530266}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry IV of England', 'p': 'Christian name', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'same as', 'o': 'Harald'}}

 Q: When did Ernest Lawrence receive the award for the Comstock Prize in Physics?
 SPARQL: SELECT ?value WHERE { wd:Q169577 p:P166 ?s . ?s ps:P166 wd:Q1122821 . ?s pq:P585 ?value}
 ALIST: {'h': 'Value', 'v': '$y0', 's': 'Ernest Lawrence', 'p': 'award', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'award', 'o': 'Comstock Prize in Physics'}, 't': '?x0'}

 Q: Name a building in Milwaukee.
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P131 wd:Q37836 . ?sbj wdt:P31 wd:Q41176 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'in', 'o': 'Milwaukee', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'building'}}

 Q: Was Hans Zimmer's given name Florian?
 SPARQL: ASK WHERE { wd:Q76364 wdt:P735 wd:Q632842 . wd:Q76364 wdt:P735 wd:Q937379 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Hans Zimmer', 'p': 'given name', 'o': '?x0', '?x0': 'Hans'}, {'h': 'IS', 'v': '?x1', 's': 'Hans Zimmer', 'p': 'given name', 'o': '?x1', '?x1': 'Florian'}]

 Q: What is {employer} of {James Hansen} that is {start time} is {2003-0-0} ?
 SPARQL: SELECT ?obj WHERE { wd:Q724095 p:P108 ?s . ?s ps:P108 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'2003')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'James Hansen', 'p': 'employer', 'o': '?x0', 't': '2003'}

 Q: What is the phase point of water and the phase of matter?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q283 p:P873 ?s . ?s ps:P873 ?obj . ?s pq:P515 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'phase of matter', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase point', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'water', 'p': 'phase point', 'o': '$y0'}}]

 Q: What is the {entertainment company} for {follows} of {Comcast}
 SPARQL:  select distinct ?obj where { wd:Q1113804 wdt:P155 ?obj . ?obj wdt:P31 wd:Q20739124 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Comcast', 'p': 'follows', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'entertainment company'}}

 Q: Give me {artistic theme} that {characters} {Impenitent thief} and which contains the word {crucifixion} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1406161 . ?sbj wdt:P674 wd:Q284623 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'crucifixion')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'artistic theme', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'characters', 'o': 'Impenitent thief'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'crucifixion'}}

 Q: Which disease has the highest maximal incubation period in humans.
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q12136 . ?ent wdt:P3487 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'maximal incubation period in humans', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'disease'}}

 Q: what is the {end time} for {Christian Democratic Union} has {chairperson} as {Helmut Kohl} ?
 SPARQL: SELECT ?value WHERE { wd:Q49762 p:P488 ?s . ?s ps:P488 wd:Q2518 . ?s pq:P582 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end time', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Christian Democratic Union', 'p': 'chairperson', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'chairperson', 'o': 'Helmut Kohl'}}}

 Q: What is <location of landing> of <Caribbean Sea> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P1158 wd:Q1247}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location of landing', 'o': 'Caribbean Sea'}

 Q: Which is the video game series developed by n-Space and starts with the letter r?
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q7058673 . ?sbj wdt:P178 wd:Q610952 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'r')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'video game series', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'developed by', 'o': 'n-Space'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'r'}}

 Q: Tell me a research station on Earth that starts with the letter "i".
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q195339 . ?sbj wdt:P397 wd:Q2 . ?sbj rdfs:label ?sbj_label . FILTER(STRSTARTS(lcase(?sbj_label), 'i')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'research station', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'star', 'o': 'Earth'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'starts_with', 'o': 'i'}}

 Q: Who is named after the Pauli exclusion principle whose middle name if Wolfgang?
 SPARQL: SELECT ?answer WHERE { wd:Q131594 wdt:P138 ?answer . ?answer wdt:P735 wd:Q2589157}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Pauli exclusion principle', 'p': 'named after', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'middle name', 'o': 'Wolfgang'}}

 Q: What is {performer} of {Lord Voldemort} that is {of} is {The LEGO Batman Movie} ?
 SPARQL: SELECT ?obj WHERE { wd:Q176132 p:P175 ?s . ?s ps:P175 ?obj . ?s pq:P642 wd:Q23013169 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'actor', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Lord Voldemort', 'p': 'actor', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'in', 'o': 'The LEGO Batman Movie'}}}

 Q: What was Henry Clay position held in the year 1823?
 SPARQL: SELECT ?obj WHERE { wd:Q319630 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1823')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henry Clay', 'p': 'position held', 'o': '?x0', 't': '1823'}

 Q: What is the language of work or name and the programming language of Skype ?
 SPARQL: SELECT ?ans_1 ?ans_2 WHERE { wd:Q40984 wdt:P407 ?ans_1 . wd:Q40984 wdt:P277 ?ans_2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': 'Skype', 'p': 'language of work or name', 'o': '?x0'}, {'h': 'Value', 'v': '?x1', 's': 'Skype', 'p': 'programming language', 'o': '?x1'}]

 Q: Did {Colosseum} {material used} {basalt}?
 SPARQL: ASK WHERE { wd:Q10285 wdt:P186 wd:Q43338 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'Colosseum', 'p': 'material used', 'o': '?x0', '?x0': 'basalt'}]

 Q: What is {child} of {Peter Sellers} and {date of death}
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q177984 p:P40 ?s . ?s ps:P40 ?obj . ?s pq:P570 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'date of death', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Sellers', 'p': 'child', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'child', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Peter Sellers', 'p': 'child', 'o': '$y0'}}]

 Q: What's greater than a super-Earth that has an eccentricity of 0.0167112?
 SPARQL: SELECT ?answer WHERE { wd:Q327757 wdt:P5135 ?answer . ?answer wdt:P1096 ?x FILTER(contains(?x,'0.0167112'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'super-Earth', 'p': 'greater than', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'eccentricity', 'o': '0.0167112'}}

 Q: Who is the discoverer of proton and is doctoral student of Norman Alexander ?
 SPARQL: SELECT ?answer WHERE { wd:Q2294 wdt:P61 ?answer . ?answer wdt:P185 wd:Q11181006}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'proton', 'p': 'discoverer', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'doctoral student', 'o': 'Norman Alexander'}}

 Q: Who gave the{museum collection} of {moveable object location} of {Horse, Pipe, and Red Flower} ?
 SPARQL: SELECT ?answer WHERE { wd:Q20816658 wdt:P276 ?X . ?X wdt:P195 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'collection', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Horse, Pipe, and Red Flower', 'p': 'location', 'o': '$y0'}}

 Q: What date were the subsidiary entities of the University of Strasbourg created?
 SPARQL: SELECT ?answer WHERE { wd:Q157575 wdt:P355 ?X . ?X wdt:P571 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'created', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'University of Strasbourg', 'p': 'subsidiary', 'o': '$y0'}}

 Q: At point in time 1963-1-1, what award was received by Sin-Itiro Tomonaga?
 SPARQL: SELECT ?obj WHERE { wd:Q184563 p:P166 ?s . ?s ps:P166 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1963')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sin-Itiro Tomonaga', 'p': 'award', 'o': '?x0', 't': '1963'}

 Q: Which is the user manual link of sextant?
 SPARQL: select distinct ?answer where { wd:Q179430 wdt:P2078 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'sextant', 'p': 'manual link', 'o': '?x0'}

 Q: what is the {end cause} for {Edward I of England} has {position held} as {monarch of England} ?
 SPARQL: SELECT ?value WHERE { wd:Q57798 p:P39 ?s . ?s ps:P39 wd:Q18810062 . ?s pq:P1534 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'end cause', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Edward I of England', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'monarch of England'}}}

 Q: When did phase point of acetic acid and pressure?
 SPARQL: SELECT ?value1 ?obj WHERE { wd:Q47512 p:P873 ?s . ?s ps:P873 ?obj . ?s pq:P2077 ?value1 . }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'pressure', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'acetic acid', 'p': 'phase point', 'o': '$y0'}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'phase point', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'acetic acid', 'p': 'phase point', 'o': '$y0'}}]

 Q: What is the namesake of nobelium used by the daughter of Karolina Andriette Ahlsell?
 SPARQL: SELECT ?answer WHERE { wd:Q1901 wdt:P138 ?answer . ?answer wdt:P25 wd:Q3813118}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'nobelium', 'p': 'namesake', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'daughter of', 'o': 'Karolina Andriette Ahlsell'}}

 Q: What is the main subject of the detective fiction?
 SPARQL: select distinct ?answer where { wd:Q186424 wdt:P921 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'detective fiction', 'p': 'main subject', 'o': '?x0'}

 Q: What is the {computer network protocol} for {replaces} of {Internet Protocol version 4}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1365 wd:Q11103 . ?sbj wdt:P31 wd:Q15836568 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'replaced', 'o': 'Internet Protocol version 4', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'computer network protocol'}}

 Q: Is cilomilast a drug used for treatment of gout?
 SPARQL: ASK WHERE { wd:Q133087 wdt:P2176 wd:Q5120034 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'gout', 'p': 'used for treatment', 'o': '?x0', '?x0': 'cilomilast'}]

 Q: Which is played by simplified Chinese characters using the legacy Hanzi?
 SPARQL: SELECT ?answer WHERE { wd:Q185614 wdt:P1535 ?answer . ?answer wdt:P2283 wd:Q10885554}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'simplified Chinese characters', 'p': 'played by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'using', 'o': 'legacy Hanzi'}}

 Q: What is {place of activity} of {Henri de Toulouse-Lautrec}, that has {point on earth} is {2.35183} ?
 SPARQL: SELECT ?answer WHERE { wd:Q82445 wdt:P937 ?answer . ?answer wdt:P625 ?x FILTER(contains(?x,'2.35183'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Henri de Toulouse-Lautrec', 'p': 'place of activity', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'point on earth', 'o': '2.35183'}}

 Q: what is the {replaced by} for {Eleftherios Venizelos} has {position held} as {Prime Minister of Greece} ?
 SPARQL: SELECT ?value WHERE { wd:Q205545 p:P39 ?s . ?s ps:P39 wd:Q4377230 . ?s pq:P1366 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'replaced by', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eleftherios Venizelos', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Prime Minister of Greece'}}}

 Q: Give me {magazine genre} that contains the word {zentralblatt} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q21114848 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zentralblatt')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'magazine genre'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zentralblatt'}}

 Q: In France, which watercourse has the minimum watershed area?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q355304 . ?ent wdt:P2053 ?obj . ?ent wdt:P17 wd:Q142} ORDER BY ASC(?obj)LIMIT 5 
 ALIST: {'h': 'MIN', 'v': '$y0', 's': '?x0', 'p': 'watershed area', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'watercourse', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'country', 'o': 'France'}}}

 Q: Which is the conviction for Sirhan Sirhan?
 SPARQL: select distinct ?answer where { wd:Q297112 wdt:P1399 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Sirhan Sirhan', 'p': 'conviction', 'o': '?x0'}

 Q: What is the {statue} for {location} of {Acropolis of Athens}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P276 wd:Q131013 . ?sbj wdt:P31 wd:Q179700 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'location', 'o': 'Acropolis of Athens', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'statue'}}

 Q: What is { sport team member } of { Ian Rush } that is { start time } is { 1980 - 1 - 1 }?
 SPARQL: SELECT ?obj WHERE { wd:Q219354 p:P54 ?s . ?s ps:P54 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1980')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Ian Rush', 'p': 'team', 'o': '?x0', 't': '1980'}

 Q: What's the dialect of the Portuguese?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P4913 wd:Q5146 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'dialect of', 'o': 'Portuguese'}

 Q: What is the {political ideology} for {followed by} of {Nazi Party}
 SPARQL:  select distinct ?obj where { wd:Q7320 wdt:P156 ?obj . ?obj wdt:P31 wd:Q14934048 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Nazis', 'p': 'followed by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'political ideology'}}

 Q: What's the LombardiaBeniCulturali artwork ID of The Last Supper?
 SPARQL: select distinct ?answer where { wd:Q128910 wdt:P3855 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'The Last Supper', 'p': 'LombardiaBeniCulturali artwork ID', 'o': '?x0'}

 Q: What is <field of work> of <long jump> ?
 SPARQL: select distinct ?answer where { ?answer wdt:P101 wd:Q170737}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'field of work', 'o': 'long jump'}

 Q: Which business is owned by Walmart?
 SPARQL:  select distinct ?obj where { wd:Q483551 wdt:P127 ?obj . ?obj wdt:P31 wd:Q4830453 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Walmart', 'p': 'owned by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'business'}}

 Q: What is the {Government of France} for {head of state} of {Emmanuel Macron}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P35 wd:Q3052772 . ?sbj wdt:P31 wd:Q1450662 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'head of state', 'o': 'Emmanuel Macron', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Government of France'}}

 Q: what is the {nature of statement} for {Otto I the Great} has {place of birth} as {Wallhausen} ?
 SPARQL: SELECT ?value WHERE { wd:Q43915 p:P19 ?s . ?s ps:P19 wd:Q564351 . ?s pq:P5102 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'nature of statement', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Otto I the Great', 'p': 'born in', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'born in', 'o': 'Wallhausen'}}}

 Q: Who is the debut participant for Pokémon Red and Blue?
 SPARQL: select distinct ?answer where { ?answer wdt:P2318 wd:Q637137}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'debut participant', 'o': 'Pokémon Red and Blue'}

 Q: what is the {statement is subject of} for {Irene Dunne} has {nominated for} as {Academy Award for Best Actress} ?
 SPARQL: SELECT ?value WHERE { wd:Q230099 p:P1411 ?s . ?s ps:P1411 wd:Q103618 . ?s pq:P805 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'statement is subject of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Irene Dunne', 'p': 'nominated for', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'nominated for', 'o': 'Academy Award for Best Actress'}}}

 Q: What is the FloraBase ID of Fagopyrum esculentum?
 SPARQL: select distinct ?answer where { wd:Q132734 wdt:P3101 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Fagopyrum esculentum', 'p': 'FloraBase ID', 'o': '?x0'}

 Q: What is {member of} of {Louis Pasteur} that is {subject has role} is {foreign member} ?
 SPARQL: SELECT ?obj WHERE { wd:Q529 p:P463 ?s . ?s ps:P463 ?obj . ?s pq:P2868 wd:Q20730800 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'member of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Louis Pasteur', 'p': 'member of', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'as', 'o': 'foreign member'}}}

 Q: What is {electoral district} and {elected in} of {{Henry Morton Stanley} has {position held} as {Member of the 26th Parliament of the United Kingdom}}
 SPARQL: SELECT ?value1 ?value2 WHERE { wd:Q171421 p:P39 ?s . ?s ps:P39 wd:Q41582573 . ?s pq:P768 ?value1 . ?s pq:P2715 ?value2 }
 ALIST: [{'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'electoral district', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Morton Stanley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 26th Parliament of the United Kingdom'}}}, {'h': 'Value', 'v': '?x1', 's': '$y0', 'p': 'elected in', 'o': '?x1', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Henry Morton Stanley', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'position held', 'o': 'Member of the 26th Parliament of the United Kingdom'}}}]

 Q: Tell me about the mixture that has zinc as an active ingredient?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P3781 wd:Q758 . ?sbj wdt:P31 wd:Q169336 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'active ingredient', 'o': 'zinc', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'mixture'}}

 Q: What is an aspect of the history of Iowa, which was formed on December 28, 1846?
 SPARQL: SELECT ?answer WHERE { wd:Q5864963 wdt:P1269 ?answer . ?answer wdt:P571 ?x FILTER(contains(YEAR(?x),'1846'))}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'history of Iowa', 'p': 'aspect of', 'o': '?x0', 't': '1846'}

 Q: What is {sister city} of {Kansas City}, that has {county seat of} is {Seville Province} ?
 SPARQL: SELECT ?answer WHERE { wd:Q41819 wdt:P190 ?answer . ?answer wdt:P1376 wd:Q95088}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Kansas City', 'p': 'sister city', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'county seat of', 'o': 'Seville Province'}}

 Q: Did {International_Space_Station} {operator} {European Space Agency} and {Roscosmos State Corporation} ?
 SPARQL: ASK WHERE { wd:Q25271 wdt:P137 wd:Q42262 . wd:Q25271 wdt:P137 wd:Q190795 }
 ALIST: [{'h': 'IS', 'v': '?x0', 's': 'International Space Station', 'p': 'operator', 'o': '?x0', '?x0': 'European Space Agency'}, {'h': 'IS', 'v': '?x1', 's': 'International Space Station', 'p': 'operator', 'o': '?x1', '?x1': 'Roscosmos State Corporation'}]

 Q: What is {county seat of} of {birth location} of {Jivaka Kumar Bhaccha} ?
 SPARQL: SELECT ?answer WHERE { wd:Q1689712 wdt:P19 ?X . ?X wdt:P1376 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'county seat of', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Jivaka Kumar Bhaccha', 'p': 'birth location', 'o': '$y0'}}

 Q: What is {position held} of {Edward VIII} that is {start time} is {1936-1-20} ?
 SPARQL: SELECT ?obj WHERE { wd:Q590227 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P580 ?x filter(contains(YEAR(?x),'1936')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Edward VIII', 'p': 'position held', 'o': '?x0', 't': '1936'}

 Q: How many {manner of death} are to/by {battle} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1196 wd:Q178561 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'manner of death', 'o': 'battle'}

 Q: What are the party which start with the letter zeltkirmes
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q200538 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'zeltkirmes')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'party'}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'zeltkirmes'}}

 Q: Which is the Wikidata property for authority control conferred by YouTube?
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P1027 wd:Q866 . ?sbj wdt:P31 wd:Q18614948 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'conferred by', 'o': 'YouTube', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'Wikidata property for authority control'}}

 Q: Which is the elevation above sea level for Anaheim?
 SPARQL: select distinct ?answer where { wd:Q49247 wdt:P2044 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Anaheim', 'p': 'elevation above sea level', 'o': '?x0'}

 Q: How many times did Billie Jean King obtain a victory?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q54527 wdt:P2522 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'Billie Jean King', 'p': 'victory', 'o': '?x0'}

 Q: Is the thickness of the Llanddona Standing Stone equal to .6?
 SPARQL: ASK WHERE { wd:Q26111106 wdt:P2610 ?obj filter(?obj = 0.6) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Llanddona Standing Stone', 'p': 'thickness', 'o': '?x0', '?x0': '0.6'}

 Q: what is the {academic major} for {Linda Nochlin} has {educated at} as {New York University Institute of Fine Arts} ?
 SPARQL: SELECT ?value WHERE { wd:Q434478 p:P69 ?s . ?s ps:P69 wd:Q3339070 . ?s pq:P812 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'major', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Linda Nochlin', 'p': 'educated at', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'educated at', 'o': 'New York University Institute of Fine Arts'}}}

 Q: What is {music by} of {Symphony No. 5}, that has {craft} is {pianist} ?
 SPARQL: SELECT ?answer WHERE { wd:Q240279 wdt:P86 ?answer . ?answer wdt:P106 wd:Q486748}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Symphony No. 5', 'p': 'music by', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'craft', 'o': 'pianist'}}

 Q: What is {position held} of {Eadwig} that is {replaced by} is {Edgar of England} ?
 SPARQL: SELECT ?obj WHERE { wd:Q191203 p:P39 ?s . ?s ps:P39 ?obj . ?s pq:P1366 wd:Q192925 }
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'position held', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Eadwig', 'p': 'position held', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'replaced by', 'o': 'Edgar of England'}}}

 Q: Who is the founder of the provenance of Levi's?
 SPARQL: SELECT ?answer WHERE { wd:Q13085298 wdt:P127 ?X . ?X wdt:P112 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'founder', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': "Levi's", 'p': 'provenance', 'o': '$y0'}}

 Q: How many {described by source} are to/by {The Guardian} ?
 SPARQL: SELECT (COUNT(?sub) AS ?value ) { ?sub wdt:P1343 wd:Q11148 }
 ALIST: {'h': 'Count', 'v': '?x0', 's': '?x0', 'p': 'described by source', 'o': 'The Guardian'}

 Q: Is the radial velocity of Messier 15 equal to -107.5?
 SPARQL: ASK WHERE { wd:Q11332 wdt:P2216 ?obj filter(?obj = -107.5) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Messier 15', 'p': 'radial velocity', 'o': '?x0', '?x0': '-107.5'}

 Q: What is {birth place} of {Sylvia Browne}, that has {partner city} is {Metz} ?
 SPARQL: SELECT ?answer WHERE { wd:Q335100 wdt:P19 ?answer . ?answer wdt:P190 wd:Q22690}
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Sylvia Browne', 'p': 'birth place', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'partner city', 'o': 'Metz'}}

 Q: Tell me me a integrated circuit design whose name consist of the word "architecture" and whose designed by ARM Holdings
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q1074539 . ?sbj wdt:P287 wd:Q296782 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'architecture')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'integrated circuit design', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'designed by', 'o': 'ARM Holdings'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'architecture'}}

 Q: What is the {human} for {member of} of {The Beach Boys}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P463 wd:Q183048 . ?sbj wdt:P31 wd:Q5 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'member of', 'o': 'The Beach Boys', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'human'}}

 Q: What is the {comics character} for {said to be the same as} of {Goofy}
 SPARQL:  select distinct ?obj where { wd:Q111135 wdt:P460 ?obj . ?obj wdt:P31 wd:Q1114461 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Goofy', 'p': 'said to be the same as', 'o': '?x0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'comics character'}}

 Q: How many {distribution} are for {Grand Theft Auto III} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q149106 wdt:P437 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'GTA III', 'p': 'distribution', 'o': '?x0'}

 Q: What is the name of the college library with the largest collection?
 SPARQL: select ?ent where { ?ent wdt:P31 wd:Q1622062 . ?ent wdt:P1436 ?obj } ORDER BY DESC(?obj)LIMIT 5 
 ALIST: {'h': 'MAX', 'v': '$y0', 's': '?x0', 'p': 'collection or exhibition size', 'o': '$y0', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'college library'}}

 Q: Give me {automobile marque} that {stock exchange} {London Stock Exchange} and which contains the word {toyota} in their name
 SPARQL: SELECT DISTINCT ?sbj ?sbj_label WHERE { ?sbj wdt:P31 wd:Q17412622 . ?sbj wdt:P414 wd:Q171240 . ?sbj rdfs:label ?sbj_label . FILTER(CONTAINS(lcase(?sbj_label), 'toyota')) . FILTER (lang(?sbj_label) = 'en') } LIMIT 25 
 ALIST: {'h': 'List', 'v': '?x0,?x1', 's': '?x0', 'p': 'label', 'o': '?x1', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'automobile marque', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'stock exchange', 'o': 'London Stock Exchange'}}, '?x1': {'h': 'Value', 'v': '?x1', 's': '?x1', 'p': 'contains', 'o': 'toyota'}}

 Q: Did Mikko Lehtonen have zero career penalty minutes?
 SPARQL: ASK WHERE { wd:Q59951 wdt:P6546 ?obj filter(?obj = 0) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Mikko Lehtonen', 'p': 'penalty minutes in career', 'o': '?x0', '?x0': '0'}

 Q: What is Horsetelex ID for Man o' War ?
 SPARQL: select distinct ?answer where { wd:Q114218 wdt:P3165 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': "Man o' War", 'p': 'Horsetelex ID', 'o': '?x0'}

 Q: Who gave the {location of work} of {proprietor} of {Mein Kampf} ?
 SPARQL: SELECT ?answer WHERE { wd:Q48244 wdt:P3931 ?X . ?X wdt:P937 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'location of work', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Mein Kampf', 'p': 'proprietor', 'o': '$y0'}}

 Q: What is U.S. Gymnastics Hall of Fame athlete ID of Olga Korbut ?
 SPARQL: select distinct ?answer where { wd:Q221575 wdt:P4583 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Olga Korbut', 'p': 'U.S. Gymnastics Hall of Fame athlete ID', 'o': '?x0'}

 Q: Is the age of majority in Poland greater than 21.6?
 SPARQL: ASK WHERE { wd:Q36 wdt:P2997 ?obj filter(?obj > 21.6) } 
 ALIST: {'h': 'GREATER', 'v': '?x0', 's': 'Poland', 'p': 'age of majority', 'o': '?x0', '?x0': '21.6'}

 Q: What is {next to} of {founded in} of {Kraftwerk} ?
 SPARQL: SELECT ?answer WHERE { wd:Q44892 wdt:P740 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'next to', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Kraftwerk', 'p': 'founded in', 'o': '$y0'}}

 Q: in Norway, the marriage age is 18?
 SPARQL: ASK WHERE { wd:Q20 wdt:P3000 ?obj filter(?obj = 18) } 
 ALIST: {'h': 'EQUAL', 'v': '?x0', 's': 'Norway', 'p': 'marriage age', 'o': '?x0', '?x0': '18'}

 Q: Is the S.A. Agulhas II's net tonnage more or less than 4608.0?
 SPARQL: ASK WHERE { wd:Q2204537 wdt:P2790 ?obj filter(?obj < 4608.0) } 
 ALIST: {'h': 'LESS', 'v': '?x0', 's': 'S.A. Agulhas II', 'p': 'net tonnage', 'o': '?x0', '?x0': '4608.0'}

 Q: How many production designers are for the {The Wizard of Oz} ?
 SPARQL: SELECT (COUNT(?obj) AS ?value ) { wd:Q193695 wdt:P2554 ?obj }
 ALIST: {'h': 'Count', 'v': '?x0', 's': 'The Wizard of Oz', 'p': 'production designer', 'o': '?x0'}

 Q: which is maximal incubation period in humans of typhoid fever ?
 SPARQL: select distinct ?answer where { wd:Q83319 wdt:P3487 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'typhoid fever', 'p': 'maximal incubation period in humans', 'o': '?x0'}

 Q: What borders the lake of Alimia?
 SPARQL: SELECT ?answer WHERE { wd:Q1227657 wdt:P206 ?X . ?X wdt:P47 ?answer}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'border', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Alimia', 'p': 'lake', 'o': '$y0'}}

 Q: what is the {employer} for {Roy Lichtenstein} has {occupation} as {assistant professor} ?
 SPARQL: SELECT ?value WHERE { wd:Q151679 p:P106 ?s . ?s ps:P106 wd:Q5669847 . ?s pq:P108 ?value}
 ALIST: {'h': 'Value', 'v': '?x0', 's': '$y0', 'p': 'employer', 'o': '?x0', '$y0': {'h': 'Value', 'v': '$y0', 's': 'Roy Lichtenstein', 'p': 'work', 'o': '$y0', '$y0': {'h': 'Value', 'v': '$y0', 's': '$y0', 'p': 'work', 'o': 'assistant professor'}}}

 Q: Which is a main food source of Physeter macrocephalus?
 SPARQL: select distinct ?answer where { wd:Q81214 wdt:P1034 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Physeter macrocephalus', 'p': 'main food source', 'o': '?x0'}

 Q: What was Luis Miguel nominated for in 1997?
 SPARQL: SELECT ?obj WHERE { wd:Q1069140 p:P1411 ?s . ?s ps:P1411 ?obj . ?s pq:P585 ?x filter(contains(YEAR(?x),'1997')) }
 ALIST: {'h': 'Value', 'v': '?x0', 's': 'Luis Miguel', 'p': 'nominated for', 'o': '?x0', 't': '1997'}

 Q: What is the {animated feature film} for {voice actor} of {Jerry Seinfeld}
 SPARQL:  select distinct ?sbj where { ?sbj wdt:P725 wd:Q215506 . ?sbj wdt:P31 wd:Q29168811 } 
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'voice actor', 'o': 'Jerry Seinfeld', '?x0': {'h': 'Value', 'v': '?x0', 's': '?x0', 'p': 'type', 'o': 'animated feature film'}}

 Q: Who is the relative of Mahatma Gandhi?
 SPARQL: select distinct ?answer where { ?answer wdt:P1038 wd:Q1001}
 ALIST: {'h': 'List', 'v': '?x0', 's': '?x0', 'p': 'relative', 'o': 'Mahatma Gandhi'}

 Q: What's the legal form of University of Paris VI: Pierre-and-Marie-Curie University?
 SPARQL: select distinct ?answer where { wd:Q1144549 wdt:P1454 ?answer}
 ALIST: {'h': 'List', 'v': '?x0', 's': 'Pierre-and-Marie-Curie University', 'p': 'legal form', 'o': '?x0'}

 